
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПередЗакрытием(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(АдресЭлементаВХранилище) Тогда
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Справочники.ЭлементыФинансовыхОтчетов.ФормаПриСозданииНаСервере(ЭтаФорма);
	Заголовок = Параметры.ВидЭлемента;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
	ПараметрыПодстановки = ПолучитьПараметрыПодстановкиОтчета();
	ДобавитьКомандыПараметровПодстановки(ПараметрыПодстановки);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ЭлементыФинансовыхОтчетов.ФормаПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстовыйБлокПриИзменении(Элемент)
	
	Объект.НаименованиеДляПечати = СокрЛП(СтрПолучитьСтроку(Текст, 1));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ДополнительныеСвойства = Новый Структура("ПредставлениеТолькоДляПечати", "");
	
	ФинансоваяОтчетностьКлиент.ЗавершитьРедактированиеЭлементаОтчета(ЭтаФорма, ДополнительныеСвойства);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ДобавитьКомандыПараметровПодстановки(ПараметрыПодстановки)
	
	ИмяДействияКоманды = "Подключаемый_ДобавитьШаблонПодстановки";
	
	Для Каждого ИмяПараметраИПредставление Из ПараметрыПодстановки Цикл
		
		КомандаФормы = ЭтаФорма.Команды.Добавить(ИмяПараметраИПредставление.Имя);
		КомандаФормы.Действие = ИмяДействияКоманды;
		
		НоваяКнопкаФормы = Элементы.Добавить(ИмяПараметраИПредставление.Имя, Тип("КнопкаФормы"), Элементы.ДобавитьПараметр);
		НоваяКнопкаФормы.ИмяКоманды = ИмяПараметраИПредставление.Имя;
		НоваяКнопкаФормы.Заголовок = ИмяПараметраИПредставление.Представление;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПараметрыПодстановкиОтчета()
	
	МассивПараметров = ФинансоваяОтчетностьКлиентСервер.УпорядоченныеПеременныеФинансовыхОтчетов();
		
	Возврат МассивПараметров;
	
КонецФункции


// Подключаемая команда. Добавляет шаблон подстановки.
// 
// Параметры:
// 	Команда - КомандаФормы -
&НаКлиенте
Процедура Подключаемый_ДобавитьШаблонПодстановки(Команда)
	 
	ВставитьТекстВЗаголовок("["+ Команда.Имя +"]");
	
КонецПроцедуры

&НаКлиенте
Процедура ВставитьТекстВЗаголовок(ТекстДляВставки, Сдвиг = 0)
	
	СтрокаНач = 0;
	СтрокаКон = 0;
	КолонкаНач = 0;
	КолонкаКон = 0;
	
	Элементы.ТекстовыйБлок.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
	
	Если (КолонкаКон = КолонкаНач) И (КолонкаКон + СтрДлина(ТекстДляВставки)) > Элементы.ТекстовыйБлок.Ширина / 8 Тогда
		Элементы.ТекстовыйБлок.ВыделенныйТекст = "";
	КонецЕсли;
	
	Элементы.ТекстовыйБлок.ВыделенныйТекст = ТекстДляВставки;
	
	Если Не Сдвиг = 0 Тогда
		Элементы.ТекстовыйБлок.ПолучитьГраницыВыделения(СтрокаНач, КолонкаНач, СтрокаКон, КолонкаКон);
		Элементы.ТекстовыйБлок.УстановитьГраницыВыделения(СтрокаНач, КолонкаНач - Сдвиг, СтрокаКон, КолонкаКон - Сдвиг);
	КонецЕсли;
	ТекущийЭлемент = Элементы.ТекстовыйБлок;
	
КонецПроцедуры

#КонецОбласти

