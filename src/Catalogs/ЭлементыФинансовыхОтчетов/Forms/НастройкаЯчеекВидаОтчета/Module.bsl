#Область ОписаниеПеременных

&НаКлиенте
Перем мКэшКопированияВставки;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ИдентификаторГлавногоХранилища", ИдентификаторГлавногоХранилища)
	 ИЛИ НЕ Параметры.Свойство("ПланыСчетов")
	 ИЛИ НЕ Параметры.Свойство("ЭлементыОтчета") Тогда
		ТекстСообщения = НСтр("ru = 'Непосредственное открытие этой формы не предусмотрено.';
								|en = 'Application cannot open this form explicitly.'");
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицуИзМассива(ПланыСчетов, Параметры.ПланыСчетов, "ПланСчетов");
	
	ДанныеФормы = Справочники.ЭлементыФинансовыхОтчетов.ФормаПриСозданииНаСервере(ЭтаФорма);
	ЗначениеВРеквизитФормы(ДанныеФормы.ЭлементыТаблицы, "ЭлементыТаблицы");
	
	Шапка = РеквизитФормыВЗначение("Объект").ПолучитьМакет("ЛегендаНастройкиЯчеек");
	ПредставлениеОтчета.Очистить();
	Легенда = Шапка.ПолучитьОбласть("ЛегендаОбласти");
	ПредставлениеОтчета.Вывести(Легенда);
	ПерваяСтрока = 2;
	
	ДеревоЭлементов = ДанныеФормыВЗначение(Параметры.ЭлементыОтчета, Тип("ДеревоЗначений"));
	КопияДереваЭлементов = ДеревоЭлементов.Скопировать();
	КопияДереваЭлементов.Строки.Очистить();
	
	СтрокаДерева = ФинансоваяОтчетностьСервер.ПодчиненныйЭлемент(
		ДеревоЭлементов,
		"АдресСтруктурыЭлемента",
		АдресЭлементаВХранилище);
	СтрокаДерева = ФинансоваяОтчетностьСервер.КорневойЭлемент(
		СтрокаДерева,
		ВидЭлемента("ТаблицаСложная"));
	ПараметрыУстановки = ФинансоваяОтчетностьСервер.ШаблонПараметровУстановкиНовогоРодителя();
	ПараметрыУстановки.ЭтоСохраненные = Истина;
	ПараметрыУстановки.КонтрольЗацикливания = Ложь;
	ФинансоваяОтчетностьСервер.УстановитьНовогоРодителя(СтрокаДерева, КопияДереваЭлементов, ПараметрыУстановки);
	
	СтруктураШирин = Справочники.ЭлементыФинансовыхОтчетов.ВывестиТаблицуНастройкиСложнойТаблицы(
					ЭтаФорма,
					КопияДереваЭлементов);
	
	АдресЭлементовОтчета = ПоместитьВоВременноеХранилище(КопияДереваЭлементов, УникальныйИдентификатор);
	
	ШиринаМакета = СтруктураШирин.мШиринаМакета;
	ВысотаМакета = СтруктураШирин.мВысотаМакета;
	ВысотаШапки  = СтруктураШирин.мВысотаШапки;
	
	УправлениеФормой();
	
	УстановитьЦветЯчеек();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	Всего = ОбластьРедактирования.Право - ОбластьРедактирования.Лево + 1;
	
	ПредставлениеОтчета.Область(,2,,2).ШиринаКолонки = 30;
	
	Если Всего Тогда
		ШиринаЗанято = 0;
		Для Сч = 1 По ОбластьРедактирования.Лево - 1 Цикл
			ШиринаЗанято = ШиринаЗанято + ПредставлениеОтчета.Область(,Сч,,Сч).ШиринаКолонки;
		КонецЦикла;
		ВсегоШирина = 120; // рекомендуемая ширина таблицы
		ШиринаСвободно = ВсегоШирина - ШиринаЗанято;
		ШиринаКолонкиРекомендуемая = Макс(Мин(ШиринаСвободно / Всего, 30), 15);
		
		Для Сч = ОбластьРедактирования.Лево По ОбластьРедактирования.Право Цикл
			ПредставлениеОтчета.Область(,Сч,,Сч).ШиринаКолонки = ШиринаКолонкиРекомендуемая;
		КонецЦикла;
	КонецЕсли;
	
	ПредставлениеОтчета.ФиксацияСверху = ПолучитьОбластьРедактирования(ЭтаФорма).Верх - 1;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Справочники.ЭлементыФинансовыхОтчетов.ФормаПередЗаписьюНаСервере(ЭтаФорма, ТекущийОбъект, Отказ);
	Если ЗначениеЗаполнено(ЭтаФорма.АдресЭлементаВХранилище) Тогда
		СтруктураЭлемента = ПолучитьИзВременногоХранилища(ЭтаФорма.АдресЭлементаВХранилище);
		АдресВХранилище = ЭлементыОтчета();
		СтруктураЭлемента.ЭлементыТаблицы = ПолучитьИзВременногоХранилища(АдресВХранилище);
		ПоместитьВоВременноеХранилище(СтруктураЭлемента, ЭтаФорма.АдресЭлементаВХранилище);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеВариантаИспользованияЯчейкиНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборТипЭлемента", ЭтаФорма);
	
	ПланыСчетовДляНастройки = Новый Массив;
	Для каждого СтрокаТаблицы Из ПланыСчетов Цикл
		ПланыСчетовДляНастройки.Добавить(СтрокаТаблицы.ПланСчетов);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ПланыСчетов", ПланыСчетовДляНастройки);
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.Форма.ВыборТипаПоказателяОтчета", ПараметрыФормы,
				ЭтаФорма,,,,ОписаниеОповещения,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеВариантаИспользованияЯчейкиОчистка(Элемент, СтандартнаяОбработка)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		ПредставлениеВариантаИспользованияЯчейкиОчисткаНаСервере();
		УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизацииОбласти(Элемент)
	
	Область = Элемент.ТекущаяОбласть;
	Если НЕ ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		
		ИмяЯчейки = "";
		Формула = "";
		Элементы.ПредставлениеВариантаИспользованияЯчейки.Доступность = Ложь;
		УправлениеФормой();
		Возврат;
		
	КонецЕсли;
	
	Расшифровка = РасшифровкаОбластиТабличногоДокумента(Область);
	Если ТипЗнч(Расшифровка) = Тип("Структура") Тогда
		
		Элементы.ПредставлениеВариантаИспользованияЯчейки.Доступность = Истина;
		Строка 	= Расшифровка["Строка"]["Наименование"];
		Колонка = Расшифровка["Колонка"]["Наименование"];
		ИмяЯчейки = "[" + Строка + "; " + Колонка + "]";
		УправлениеФормой();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаПриИзменении(Элемент)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		ФормулаПриИзмененииНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ФормулаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПредставлениеОтчетаВыбор(Неопределено, Элементы.ПредставлениеОтчета.ТекущаяОбласть, Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ФинансоваяОтчетностьКлиент.ЗавершитьРедактированиеЭлементаОтчета(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Вырезать(Команда)
	
	КопироватьЗначения(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура Вставить(Команда)
	
	Если мКэшКопированияВставки = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
		ТекстПредупреждения = НСтр("ru = 'Невозможно заменить выбранную область';
									|en = 'Cannot replace the selected area'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	
	ВысотаОбласти = мКэшКопированияВставки.Количество();
	ШиринаОбласти = мКэшКопированияВставки[0].Количество();
	
	Отказ = Ложь;
	
	Если ВысотаОбласти > 1 ИЛИ ШиринаОбласти > 1 Тогда
		// В буфере несколько ячеек - можно только указать куда копировать
		Если ОбластьРедактирования.Право < ТекущаяОбласть.Лево + мКэшКопированияВставки[0].ВГраница()
			ИЛИ ОбластьРедактирования.Низ < ТекущаяОбласть.Верх + мКэшКопированияВставки.ВГраница() Тогда
			
			// Вышли за границы области редактирования
			Отказ = Истина;
			
		КонецЕсли;
	Иначе
		// В буфере одна ячейка - можно копировать куда угодно в пределах области редактирования.
		Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
			
			// Вышли за границы области редактирования
			Отказ = Истина;
			
		КонецЕсли;
	КонецЕсли;
			
	Если Отказ Тогда
		ТекстПредупреждения = НСтр("ru = 'Невозможно заменить выделенную область';
									|en = 'Cannot replace the selected area'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
		
	КонецЕсли;
	
	ВставитьНаСервере(мКэшКопированияВставки, ВысотаОбласти, ШиринаОбласти);
	
КонецПроцедуры

&НаКлиенте
Процедура Копировать(Команда)
	
	КопироватьЗначения();
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	ОчиститьСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Свойства(Команда)
	
	ПоказатьСвойстваОбласти(Элементы.ПредставлениеОтчета.ТекущаяОбласть)
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Возвращает описанное значение расшифровки из области табличного документа.
// 
// Параметры:
// 	Область - ОбластьЯчеекТабличногоДокумента - 
// Возвращаемое значение:
// 	Структура - Структура расшифровки (см. Справочник.ЭлементыФинансовыхОтчетов.ВывестиЯчейки):
// 	 *Строка - Структура -:
// 	   **Наименование - Строка -
// 	   **ЭлементОтчета - СправочникСсылка.ЭлементыФинансовыхОтчетов, Строка - Элемент отчета или адрес временного хранилища.
// 	 *Колонка - Структура -:
// 	   **Наименование - Строка -
// 	   **ЭлементОтчета - СправочникСсылка.ЭлементыФинансовыхОтчетов, Строка - Элемент отчета или адрес временного хранилища.
// 	 *ВидЭлемента - ПеречислениеСсылка.ВидыЭлементовФинансовогоОтчета -
// 	 *ЭлементОтчета - СправочникСсылка.ЭлементыФинансовыхОтчетов, Строка - Элемент отчета или адрес временного хранилища.
// 	 *ЭтоСвязанный - Булево -
// 	
&НаКлиенте
Функция РасшифровкаОбластиТабличногоДокумента(Область)
	Возврат Область.Расшифровка;
КонецФункции

&НаКлиенте
Процедура КопироватьЗначения(Вырезать = Ложь)
	ЛокальныйКэш = Неопределено;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	
	Если Не ОбластьВЗонеРедактирования(ЭтаФорма, ТекущаяОбласть) Тогда
		ТекстПредупреждения = НСтр("ru = 'Невозможно скопировать выбранную область';
									|en = 'Cannot copy the selected area'");
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ВысотаОбласти = ТекущаяОбласть.Низ - ТекущаяОбласть.Верх + 1;
	ШиринаОбласти = ТекущаяОбласть.Право - ТекущаяОбласть.Лево + 1;
	
	Массив = Новый Массив(ВысотаОбласти, ШиринаОбласти);
	
	Для СчВысота = 0 По ВысотаОбласти - 1 Цикл
		Для СчШирина = 0 По ШиринаОбласти - 1 Цикл
			Область = ПредставлениеОтчета.Область(
											ТекущаяОбласть.Верх + СчВысота,
											ТекущаяОбласть.Лево + СчШирина);
			Массив[СчВысота][СчШирина] = Область.Расшифровка.ЭлементОтчета;
			Если Вырезать Тогда
				Область.Расшифровка.ЭлементОтчета = "";
				Область.Текст = НСтр("ru = '<выберите тип ячейки>';
									|en = '<select a cell type>'");
				УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЛокальныйКэш);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	мКэшКопированияВставки = Массив;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьНаСервере(Массив, ВысотаОбласти, ШиринаОбласти)
	ЛокальныйКэш = Неопределено;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Если Не (ШиринаОбласти = 1 И ВысотаОбласти = 1) Тогда
		Если ТекущаяОбласть.Право - ТекущаяОбласть.Лево + 1 <> ШиринаОбласти
			ИЛИ ТекущаяОбласть.Низ - ТекущаяОбласть.Верх + 1 <> ВысотаОбласти Тогда
		
			ТекущаяОбласть = ПредставлениеОтчета.Область(ТекущаяОбласть.Верх, ТекущаяОбласть.Лево,
										ТекущаяОбласть.Верх + ВысотаОбласти - 1,
										ТекущаяОбласть.Лево + ШиринаОбласти - 1);
										
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ПредставлениеОтчета.ТекущаяОбласть = ТекущаяОбласть;
	
	Для СчВысота = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево По ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			
			Если ШиринаОбласти = 1 И ВысотаОбласти = 1 Тогда
				АдресЭлемента = Массив[0][0];
			Иначе
				АдресЭлемента = Массив[СчВысота - ТекущаяОбласть.Верх][СчШирина - ТекущаяОбласть.Лево];
			КонецЕсли;
			Если ЗначениеЗаполнено(АдресЭлемента) Тогда
				ВидЭлемента = Неопределено;
				Область.Расшифровка.ЭлементОтчета = ФинансоваяОтчетностьВызовСервера.СкопироватьЭлементПоАдресу(
								АдресЭлемента, ИдентификаторГлавногоХранилища, ВидЭлемента);
				Область.Расшифровка.ВидЭлемента = ВидЭлемента;
			Иначе
				Область.Расшифровка.ЭлементОтчета = Неопределено;
				Область.Расшифровка.ВидЭлемента = Неопределено;
			КонецЕсли;
			Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
			
		КонецЦикла;
	КонецЦикла;
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	
	Для СчВысота = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево По ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЛокальныйКэш);
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьСервер()
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Для СчВысота = ТекущаяОбласть.Верх По ТекущаяОбласть.Низ Цикл
		Для СчШирина = ТекущаяОбласть.Лево По ТекущаяОбласть.Право Цикл
			
			Область = ПредставлениеОтчета.Область(СчВысота, СчШирина);
			Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
				Область.Расшифровка.ЭлементОтчета = Неопределено;
				Область.Расшифровка.ВидЭлемента = Неопределено;
				Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
				УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Функция ОпределитьДополнительныеПараметры(Расшифровка)
	
	Если Расшифровка.ЭтоСвязанный Тогда
		Возврат ПредопределенноеЗначение("Перечисление.ДополнительныеРежимыЭлементовОтчетов.СвязанныйЭлемент");
	ИначеЕсли Расшифровка.ВидЭлемента = ВидЭлемента("ПроизводныйПоказатель") Тогда
		Возврат ПредопределенноеЗначение("Перечисление.ДополнительныеРежимыЭлементовОтчетов.ВидОтчета");
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПолучитьОбластьРедактирования(Форма)
	
	Результат = Новый Структура;
	Результат.Вставить("Верх",  4 + Форма.ВысотаШапки + 1); //первая строка после шапки
	Результат.Вставить("Лево",  3);                         //все строки во второй колонке, значит редактируем с третьей колонки
	Результат.Вставить("Низ",   4 + Форма.ВысотаМакета);    //до последней строки
	Результат.Вставить("Право", 2 + Форма.ШиринаМакета);    //до последней колонки
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ОбластьВЗонеРедактирования(Форма, Область)
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(Форма);
	Если Область.Лево >= ОбластьРедактирования.Лево
		И Область.Право <= ОбластьРедактирования.Право
		И Область.Низ <= ОбластьРедактирования.Низ
		И Область.Верх >= ОбластьРедактирования.Верх Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
		
КонецФункции

&НаСервере
Функция СвойствоЯчейкиТаблицы(ИмяСвойства, ПоУмолчанию = Неопределено)
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Попытка
		Расшифровка = Область.Расшифровка;
	Исключение
		Возврат Неопределено;
	КонецПопытки;
	
	Если Не ЗначениеЗаполнено(Расшифровка) ИЛИ ТипЗнч(Расшифровка) <> Тип("Структура") Тогда
		Возврат ПоУмолчанию;
	КонецЕсли;
	
	ЗначениеСвойства = Неопределено;
	Если Не Расшифровка.Свойство(ИмяСвойства, ЗначениеСвойства) Тогда
		Возврат ПоУмолчанию;
	КонецЕсли;
	
	Возврат ЗначениеСвойства;
	
КонецФункции

&НаСервере
Процедура УправлениеФормой()
	
	ФинОтчеты = ФинансоваяОтчетностьВызовСервера;
	ВидЭлемента = СвойствоЯчейкиТаблицы("ВидЭлемента");
	ЭлементОтчета = СвойствоЯчейкиТаблицы("ЭлементОтчета");
	ЭтоСвязанный = СвойствоЯчейкиТаблицы("ЭтоСвязанный", Ложь);
	
	ЗначениеЯчейки = "";
	ПредставлениеВариантаИспользованияЯчейки = "";
	Формула = "";
	Если ВидЭлемента = ВидЭлемента("МонетарныйПоказатель")
		ИЛИ ВидЭлемента = ВидЭлемента("НемонетарныйПоказатель") 
		ИЛИ ВидЭлемента = ВидЭлемента("ПроизводныйПоказатель") Тогда
		
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.ЭлементОтчета;
		КартинкаЭлемента = ФинансоваяОтчетностьПовтИсп.НестандартнаяКартинка(ВидЭлемента) + Число(ЭтоСвязанный);
		ЗначениеЯчейки = ФинОтчеты.ЗначениеРеквизитаОбъекта(ЭлементОтчета, "НаименованиеДляПечати");
		
	Иначе
		Элементы.ГруппаКартинокВидаЭлемента.ТекущаяСтраница = Элементы.Неопределен;
	КонецЕсли;
	
	Если ВидЭлемента = Неопределено И ЭлементОтчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ЗначениеЯчейки) Тогда
		ПредставлениеВариантаИспользованияЯчейки = ПредставлениеВариантаИспользованияЯчейки + " " + ЗначениеЯчейки;
	КонецЕсли;
	
	Элементы.Формула.Заголовок = НСтр("ru = 'Настройка';
										|en = 'Setting'");
	СтрокаВычисление = НСтр("ru = 'Вычисление';
							|en = 'Calculation'");
	Элементы.Формула.Доступность = Истина;
	Формула = "";
	Если ЭтоСвязанный Тогда
		Формула = НСтр("ru = '<расчет смотри в связанном элементе>';
						|en = '<see associated item for calculation>'");
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("ПроизводныйПоказатель") Тогда
		
		Элементы.Формула.Заголовок = СтрокаВычисление;
		Формула = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "Формула");
	
	ИначеЕсли ВидЭлемента = ВидЭлемента("МонетарныйПоказатель") Тогда
		
		Счет = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "СчетПланаСчетов");
		ТипИтога = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ТипИтога");
		НачальноеСальдо = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "НачальноеСальдо");
		ЕстьНастройки = ФинОтчеты.ЗначениеРеквизитаОбъекта(ЭлементОтчета, "ЕстьНастройки");
		Формула = КраткоеИмяМонетарногоПоказателя(Счет, ТипИтога, НачальноеСальдо);
		Если ЕстьНастройки = Истина Тогда
			Формула = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 <%2>';
					|en = '%1 <%2>'"),
				Формула,
				НСтр("ru = 'установлены дополнительные отборы показателя';
					|en = 'additional indicator filters are set'"));
		КонецЕсли;
		
		Если ТипЗнч(Счет) = РеглУчетКлиентСервер.ТипПланСчетов() Тогда
			КартинкаЭлемента = ФинансоваяОтчетностьПовтИсп.НестандартнаяКартинка(ВидЭлемента, "Регл") + Число(ЭтоСвязанный);
		КонецЕсли;
	
	ИначеЕсли ВидЭлемента = ВидЭлемента("НемонетарныйПоказатель") Тогда
		
		Формула = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "НемонетарныйПоказатель");
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("ИтогПоГруппе") Тогда
		
		Элементы.Формула.Заголовок = СтрокаВычисление;
		Формула = НСтр("ru = 'Сумма';
						|en = 'Amount'")+"()";
		Элементы.Формула.Доступность = Ложь;
		ОтображатьЗаголовок = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ВыводитьЗаголовокЭлемента");
		Если Не ОтображатьЗаголовок Тогда
			Формула = НСтр("ru = '<в отчете не отображается>';
							|en = '<not displayed in the report>'");
		КонецЕсли;
		
	ИначеЕсли ВидЭлемента = ВидЭлемента("Группа") Тогда
		
		Элементы.Формула.Доступность = Ложь;
		ОтображатьЗаголовок = ФинОтчеты.ЗначениеДополнительногоРеквизита(ЭлементОтчета, "ВыводитьЗаголовокЭлемента");
		Если Не ОтображатьЗаголовок Тогда
			Формула = НСтр("ru = '<в отчете не отображается>';
							|en = '<not displayed in the report>'");
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗначениеЯчейки(Результат)
	
	ФинОтчеты = ФинансоваяОтчетностьВызовСервера;
	//++ НЕ УТКА
	СтруктураЭлемента = ФинансоваяОтчетностьКлиентСервер.СтруктураЭлементаОтчета();
	ЗаполнитьЗначенияСвойств(СтруктураЭлемента, Результат);
	Если Результат.ЭтоСвязанный Тогда
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(СтруктураЭлемента, "КодСтрокиОтчета", "");
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(СтруктураЭлемента, "Примечание", "");
		
	ИначеЕсли СтруктураЭлемента.ВидЭлемента = ВидЭлемента("МонетарныйПоказатель") Тогда
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(
			СтруктураЭлемента, "СчетПланаСчетов", Результат.ЭлементОтчета);
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(
			СтруктураЭлемента, "ТипИтога", Перечисления.ТипыИтогов.СальдоДт);
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(
			СтруктураЭлемента, "НачальноеСальдо",Ложь);
		
	ИначеЕсли СтруктураЭлемента.ВидЭлемента = ВидЭлемента("НемонетарныйПоказатель") Тогда
		ФинОтчеты.УстановитьЗначениеДополнительногоРеквизита(
			СтруктураЭлемента, "НемонетарныйПоказатель", Результат.ЭлементОтчета);
	КонецЕсли;
	СсылкаНаЭлемент = МеждународнаяОтчетностьКлиентСервер.ПоместитьЭлементВХранилище(СтруктураЭлемента, ИдентификаторГлавногоХранилища);
	
	ТекущаяОбласть = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Расшифровка = ТекущаяОбласть.Расшифровка;
	Расшифровка.ВидЭлемента = СтруктураЭлемента.ВидЭлемента;
	Расшифровка.ЭлементОтчета = СсылкаНаЭлемент;
	Расшифровка.ЭтоСвязанный = Результат.ЭтоСвязанный;
	
	УправлениеФормой();
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, ТекущаяОбласть.Имя);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура ВыборТипЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Область.Шрифт = Новый Шрифт(,,Ложь);
	УстановитьЗначениеЯчейки(Результат);
	УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана);
	
	Если НЕ Результат.ЭтоСвязанный
		И Область.Расшифровка.ВидЭлемента = 
			ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.ПроизводныйПоказатель") Тогда
		РедактироватьЭлементОтчета(Область);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЛокальныйКэш = Неопределено)
	
	ОписаниеЯчейки = Область.Расшифровка;
	Если НЕ ЗначениеЗаполнено(ОписаниеЯчейки.ЭлементОтчета)
		И НЕ ЗначениеЗаполнено(ОписаниеЯчейки.ВидЭлемента) Тогда
		Область.ЦветФона = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ПолеСОшибкойФон");
		Область.ЦветТекста = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "НезаполненноеПолеТаблицы");
		Область.Шрифт = Новый Шрифт(,,Истина);
		Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Центр;
		Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Центр;
	Иначе
		Область.ЦветФона = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветФонаПоля");
		Область.ЦветТекста = БюджетнаяОтчетностьКлиентСервер.ПолучитьЦветСтиля(ЛокальныйКэш, "ЦветТекстаПоля");
		Область.Шрифт = Новый Шрифт(,,Ложь);
		Область.ГоризонтальноеПоложение	 = ГоризонтальноеПоложение.Лево;
		Область.ВертикальноеПоложение	 = ВертикальноеПоложение.Верх;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЦветЯчеек()
	ЛокальныйКэш = Неопределено;
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	Для Колонка = ОбластьРедактирования.Лево По ОбластьРедактирования.Право Цикл
		Для Строка = ОбластьРедактирования.Верх По ОбластьРедактирования.Низ Цикл
			Область = ПредставлениеОтчета.Область(Строка, Колонка);
			УстановитьЦветЯчейки(Область, ИспользоватьДляВводаПлана, ЛокальныйКэш);
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВидЭлемента(ИмяВидаЭлемента)
	
	Возврат ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета."+ИмяВидаЭлемента);
	
КонецФункции

&НаКлиенте
Процедура ПоказатьСвойстваОбласти(Область)
	
	Если ОбластьВЗонеРедактирования(ЭтаФорма, Область) Тогда
		
		Расшифровка = Область.Расшифровка;
		Если НЕ ЗначениеЗаполнено(Расшифровка.ЭлементОтчета) Тогда
			ПредставлениеВариантаИспользованияЯчейкиНачалоВыбора(Неопределено, Неопределено, Неопределено);
		Иначе
			РедактироватьЭлементОтчета(Область);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеОтчетаВыбор(Элемент, Область, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьСвойстваОбласти(Область);
	
КонецПроцедуры

&НаКлиенте
Процедура РедактироватьЭлементОтчета(Область)
	
	Расшифровка = Область.Расшифровка;
	
	Если Расшифровка.ВидЭлемента = ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.Группа")
		ИЛИ Расшифровка.ВидЭлемента = ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.Измерение")
		ИЛИ Расшифровка.ВидЭлемента = ПредопределенноеЗначение("Перечисление.ВидыЭлементовФинансовогоОтчета.ИтогПоГруппе") Тогда
		ПоказатьПредупреждение(Неопределено, НСтр("ru = 'Настройка свойств элемента доступна в виде отчета!';
													|en = 'Setting of item properties is available as a report.'"));
		Возврат;
	КонецЕсли;
	
	АдресСтруктурыЭлемента = Расшифровка.ЭлементОтчета;
	
	ПланыСчетовЭлемента = Новый Массив;
	Для каждого СтрокаТаблицы Из ПланыСчетов Цикл
		ПланыСчетовЭлемента.Добавить(СтрокаТаблицы.ПланСчетов);
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВидЭлемента", Расшифровка.ВидЭлемента);
	ПараметрыФормы.Вставить("АдресЭлементаВХранилище", АдресСтруктурыЭлемента);
	ПараметрыФормы.Вставить("ИдентификаторГлавногоХранилища", ИдентификаторГлавногоХранилища);
	ПараметрыФормы.Вставить("НастройкаЯчеек", Истина);
	ПараметрыФормы.Вставить("АдресТаблицыЭлементов", ЭлементыОтчета());
	ПараметрыФормы.Вставить("АдресЭлементовОтчета", АдресЭлементовОтчета);
	ПараметрыФормы.Вставить("ДополнительныйРежимФормы", ОпределитьДополнительныеПараметры(Расшифровка));
	ПараметрыФормы.Вставить("ПланыСчетов", ПланыСчетовЭлемента);
	
	Оповещение = Новый ОписаниеОповещения("ОбновитьПолеПослеИзмененияЭлемента", ЭтаФорма, ПараметрыФормы);
	
	ОткрытьФорму("Справочник.ЭлементыФинансовыхОтчетов.ФормаОбъекта",
				ПараметрыФормы, ЭтаФорма, , , , Оповещение, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьИнформациюПослеРедактированияЭлементаОтчета(Имя)
	
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Имя);
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьПолеПослеИзмененияЭлемента(Результат, ДополнительныеПараметры) Экспорт
	
	ОбновитьИнформациюПослеРедактированияЭлементаОтчета(
			Элементы.ПредставлениеОтчета.ТекущаяОбласть.Имя
			);
	
КонецПроцедуры

&НаСервере
Процедура ФормулаПриИзмененииНаСервере()
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	ФинансоваяОтчетностьВызовСервера.УстановитьЗначениеДополнительногоРеквизита(Область.Расшифровка.ЭлементОтчета, "Формула", Формула);
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
	
КонецПроцедуры

&НаСервере
Процедура ПредставлениеВариантаИспользованияЯчейкиОчисткаНаСервере()
	
	Область = Элементы.ПредставлениеОтчета.ТекущаяОбласть;
	Область.Расшифровка.ЭлементОтчета = Неопределено;
	Область.Расшифровка.ВидЭлемента = Неопределено;
	Справочники.ЭлементыФинансовыхОтчетов.УстановитьТекстЯчейки(ЭтаФорма, Область.Имя);
	УправлениеФормой();
	
КонецПроцедуры

&НаСервере
Функция ЭлементыОтчета()
	
	ОбластьРедактирования = ПолучитьОбластьРедактирования(ЭтаФорма);
	ЭлементыТаблицыБуфер = Новый ТаблицаЗначений;
	ЭлементыТаблицыБуфер.Колонки.Добавить("Строка");
	ЭлементыТаблицыБуфер.Колонки.Добавить("Колонка");
	ЭлементыТаблицыБуфер.Колонки.Добавить("Элемент");
	Для Колонка = ОбластьРедактирования.Лево По ОбластьРедактирования.Право Цикл
		Для Строка = ОбластьРедактирования.Верх По ОбластьРедактирования.Низ Цикл
			Расшифровка = ПредставлениеОтчета.Область(Строка, Колонка).Расшифровка; // См. РасшифровкаОбластиТабличногоДокумента
			Если ЗначениеЗаполнено(Расшифровка.ЭлементОтчета)
				И НЕ Расшифровка.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.ИтогПоГруппе
				И НЕ Расшифровка.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.ФормулаПоГруппе
				И НЕ Расшифровка.ВидЭлемента = Перечисления.ВидыЭлементовФинансовогоОтчета.Группа Тогда
				НоваяСтрока = ЭлементыТаблицыБуфер.Добавить();
				НоваяСтрока.Строка = Расшифровка.Строка.ЭлементОтчета;
				НоваяСтрока.Колонка = Расшифровка.Колонка.ЭлементОтчета;
				НоваяСтрока.Элемент = Расшифровка.ЭлементОтчета;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ПоместитьВоВременноеХранилище(ЭлементыТаблицыБуфер, УникальныйИдентификатор);
	
КонецФункции

&НаСервере
Функция КраткоеИмяМонетарногоПоказателя(Счет, ТипИтога, НачальноеСальдо)
	
	ИмяИтога = Строка(ТипИтога);
	ГраницаПериода = ?(НачальноеСальдо,НСтр("ru = 'Начальное';
											|en = 'Initial'"),НСтр("ru = 'Конечное';
																	|en = 'Closing'")) + " ";
	Если СтрНайти(ИмяИтога, "Оборот") > 0 Тогда
		ГраницаПериода = "";
	КонецЕсли;
	СтрокаИтога = НРег(Лев(ИмяИтога,1)) + Прав(ИмяИтога,СтрДлина(ИмяИтога)-1);
	Возврат ГраницаПериода + СтрокаИтога + " " + НСтр("ru = 'по счету';
														|en = 'by account'") + " " + Строка(Счет);
	
КонецФункции

#КонецОбласти
