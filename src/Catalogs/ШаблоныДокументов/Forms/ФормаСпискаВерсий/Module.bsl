#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок = Строка(Параметры.ШаблонДокумента);
	Для Каждого ВерсияШаблона Из Справочники.ШаблоныДокументов.ВерсииШаблона(Параметры.ШаблонДокумента) Цикл
		НоваяСтрока = ВерсииШаблона.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ВерсияШаблона);
		Если ЗначениеЗаполнено(НоваяСтрока.ДатаРегистрации) Тогда
			НоваяСтрока.Пиктограмма = 3;
		Иначе
			НоваяСтрока.Пиктограмма = 5;
		КонецЕсли;
	КонецЦикла;
	
	РеквизитыШаблона = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Параметры.ШаблонДокумента, "Версия, ВАрхиве");
	ТолькоПросмотр = РеквизитыШаблона.ВАрхиве;
	
	УстановитьУсловноеОформление();
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаВыбрать",
		"КнопкаПоУмолчанию",
		Параметры.РежимВыбора);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблона",
		"РежимВыделения",
		?(Параметры.РежимВыбора, РежимВыделенияТаблицы.Одиночный, РежимВыделенияТаблицы.Множественный));
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаВыбрать",
		"Видимость",
		Параметры.РежимВыбора);
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаУдалитьВерсию",
		"Видимость",
		Не Параметры.РежимВыбора);
	Если Параметры.РежимВыбора Тогда
		ПоложениеКоманднойПанели = ПоложениеКоманднойПанелиФормы.Нет;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные изменены. Продолжить?';
							|en = 'Данные изменены. Продолжить?'");
		Оповещение = Новый ОписаниеОповещения("ОбработатьОтветОПотериИзмененийПриЗакрытии", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыВерсииШаблона

&НаКлиенте
Процедура ВерсииШаблонаВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	Если Поле.Имя = "ВерсииШаблонаКомментарий" Тогда
		ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ВыбраннаяСтрока);
		Если ДанныеСтроки <> Неопределено
			И ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации) Тогда
			
			СтандартнаяОбработка = Истина;
		КонецЕсли;
	КонецЕсли;
	Если Не СтандартнаяОбработка Тогда
		Если Параметры.РежимВыбора Тогда
			ВыполнитьВыборВерсии();
		Иначе
			ВизуализироватьШаблоны();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсииШаблонаПриАктивизацииСтроки(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаУдалитьВерсию",
		"Доступность",
		Элементы.ВерсииШаблона.ТекущаяСтрока <> Неопределено
			И Не Элементы.ВерсииШаблона.ТекущиеДанные.Предопределенный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаВизуализатор",
		"Доступность",
		Элементы.ВерсииШаблона.ВыделенныеСтроки.Количество() > 0
			И Элементы.ВерсииШаблона.ВыделенныеСтроки.Количество() <= 2);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ВерсииШаблонаСравнитьВерсии",
		"Доступность",
		Элементы.ВерсииШаблона.ВыделенныеСтроки.Количество() > 0);
	
КонецПроцедуры

&НаКлиенте
Процедура ВерсииШаблонаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	КомментарийВерсииШаблона = "";
	Если Элемент.ТекущиеДанные <> Неопределено Тогда
		КомментарийВерсииШаблона = Элемент.ТекущиеДанные.Комментарий;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВерсииШаблонаПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	Если Не ОтменаРедактирования Тогда
		Если Элемент.ТекущиеДанные <> Неопределено Тогда
			Если ВерсииШаблонаПриОкончанииРедактированияНаСервере(
				Параметры.ШаблонДокумента,
				Элемент.ТекущиеДанные.Версия,
				Элемент.ТекущиеДанные.ДатаРегистрации,
				Элемент.ТекущиеДанные.Комментарий) Тогда
				
				Оповестить("Запись_ШаблоныДокументов", , Параметры.ШаблонДокумента);
			Иначе
				Элемент.ТекущиеДанные.Комментарий = КомментарийВерсииШаблона;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтличия(Команда)
	
	Если Элементы.ВерсииШаблона.ВыделенныеСтроки.Количество() > 1 Тогда
		ТекстВопроса = НСтр("ru = 'Использовать в сравнении текущую версию шаблона?';
							|en = 'Использовать в сравнении текущую версию шаблона?'");
		Оповещение = Новый ОписаниеОповещения("ПоказатьОтличияНаКлиенте", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	Иначе
		ПоказатьОтличияНаКлиенте(КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьОтличияНаКлиенте(Ответ, ДополнительныеПараметры = Неопределено) Экспорт
	Если ТипЗнч(Ответ) = Тип("КодВозвратаДиалога")
		И Ответ <> КодВозвратаДиалога.Отмена Тогда
		
		СписокВерсий = Новый Массив;
		Для Каждого ИдентификаторСтроки Из Элементы.ВерсииШаблона.ВыделенныеСтроки Цикл
			ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ИдентификаторСтроки);
			Если ДанныеСтроки <> Неопределено Тогда
				СписокВерсий.Добавить(
					Новый Структура(
						"Версия,ДатаРегистрации",
						ДанныеСтроки.Версия,
						ДанныеСтроки.ДатаРегистрации));
			КонецЕсли;
		КонецЦикла;
		Если Ответ = КодВозвратаДиалога.Да Тогда
			СписокВерсий.Добавить(Неопределено);
		КонецЕсли;
		
		ДокументРезультат = ПоказатьОтличияНаКлиентеНаСервере(
			Параметры.ШаблонДокумента, СписокВерсий);
		
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати("Справочник.ШаблоныДокументов", "СравнениеВерсий", 
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Параметры.ШаблонДокумента), ЭтотОбъект,
			Новый Структура("ПечатаемыйДокумент", ДокументРезультат));
		
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПоказатьОтличияНаКлиентеНаСервере(ШаблонДокумента, СписокВерсий)
	Возврат Справочники.ШаблоныДокументов.СформироватьОтчет(
		ШаблонДокумента, СписокВерсий);
КонецФункции

&НаКлиенте
Процедура Визуализатор(Команда)
	
	Если Элементы.ВерсииШаблона.ВыделенныеСтроки.Количество() = 0 Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать версию шаблона документов';
										|en = 'Необходимо выбрать версию шаблона документов'"));
		Возврат;
	КонецЕсли;
	
	ВизуализироватьШаблоны();
	
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	
	Если Элементы.ВерсииШаблона.ТекущиеДанные = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать версию шаблона документов';
										|en = 'Необходимо выбрать версию шаблона документов'"));
		Возврат;
	КонецЕсли;
	
	ВыполнитьВыборВерсии();
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбработатьОтветОПотериИзмененийПриЗакрытии(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ВерсииШаблона");
	
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование = Истина;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ВерсииШаблона.Предопределенный");
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ПравоеЗначение = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВерсию(Команда)
	
	ИдентификаторыВыделенныхСтрок = Элементы.ВерсииШаблона.ВыделенныеСтроки;
	Если Не ЗначениеЗаполнено(ИдентификаторыВыделенныхСтрок) Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Необходимо выбрать удаляемые версии';
										|en = 'Необходимо выбрать удаляемые версии'"));
		Возврат;
	КонецЕсли;
	
	УдаляемыеВерсии = Новый Массив;
	Для Каждого ИдентификаторСтроки Из ИдентификаторыВыделенныхСтрок Цикл
		ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ИдентификаторСтроки);
		Если ДанныеСтроки <> Неопределено Тогда
			Если Не ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации) Тогда
				ПоказатьПредупреждение(, НСтр("ru = 'Удалять можно только версии, созданные пользователем (с датой регистрации)';
												|en = 'Удалять можно только версии, созданные пользователем (с датой регистрации)'"));
				Возврат;
			КонецЕсли;
			УдаляемыеВерсии.Добавить(ИдентификаторСтроки);
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(УдаляемыеВерсии) Тогда
		Если УдалитьВерсииНаСервере(УдаляемыеВерсии) Тогда
			Оповестить("Запись_ШаблоныДокументов", Параметры.ШаблонДокумента);
		Иначе
			ПоказатьПредупреждение(, НСтр("ru = 'Не удалось удалить выбранные версии, возможно объект редактируется другим пользователем.';
											|en = 'Не удалось удалить выбранные версии, возможно объект редактируется другим пользователем.'"));
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УдалитьВерсииНаСервере(УдаляемыеВерсии)
	
	Результат = Ложь;
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("Справочник.ШаблоныДокументов");
	ЭлементБлокировки.УстановитьЗначение("Ссылка", Параметры.ШаблонДокумента);
	
	НачатьТранзакцию();
	Попытка
		
		Блокировка.Заблокировать();
		
		ОбъектШаблонДокумента = Параметры.ШаблонДокумента.ПолучитьОбъект();
		ЗаписатьШаблон = Ложь;
		Для Каждого ИдентификаторСтроки Из УдаляемыеВерсии Цикл
			ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ИдентификаторСтроки);
			СтруктураПоиска = Новый Структура("Версия, ДатаРегистрации");
			ЗаполнитьЗначенияСвойств(СтруктураПоиска, ДанныеСтроки);
			СтрокиВерсии = ОбъектШаблонДокумента.ИсторияИзменений.НайтиСтроки(СтруктураПоиска);
			Для Каждого СтрокаВерсии Из СтрокиВерсии Цикл
				ОбъектШаблонДокумента.ИсторияИзменений.Удалить(СтрокаВерсии);
				ЗаписатьШаблон = Истина;
			КонецЦикла;
		КонецЦикла;
		Если ЗаписатьШаблон Тогда
			ОбъектШаблонДокумента.Записать();
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		Результат = Истина;
	Исключение
		// Если не удалось обработать шаблон сообщения, повторяем попытку снова.
		ОтменитьТранзакцию();
		
		ОбновлениеИнформационнойБазы.ЗаписатьОшибкуВЖурналРегистрации(
			Параметры.ШаблонДокумента,
			Заголовок,
			ИнформацияОбОшибке());
	КонецПопытки;
	
	Если Результат Тогда
		Для Каждого ИдентификаторСтроки Из УдаляемыеВерсии Цикл
			ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ИдентификаторСтроки);
			ВерсииШаблона.Удалить(ДанныеСтроки);
		КонецЦИкла;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьВыборВерсии()
	
	ТекущиеДанные = Элементы.ВерсииШаблона.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		АдресВХранилище = ПоместитьВоВременноеХранилище(ТекущиеДанные.Настройки, ВладелецФормы.УникальныйИдентификатор);
		Результат = Новый Структура;
		Результат.Вставить("Версия", ТекущиеДанные.Версия);
		Результат.Вставить("АдресВХранилище", АдресВХранилище);
		Закрыть(Результат);
	КонецЕсли;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ВизуализироватьШаблоны()
	
	Для Каждого ИдентификаторСтроки Из Элементы.ВерсииШаблона.ВыделенныеСтроки Цикл
		ДанныеСтроки = ВерсииШаблона.НайтиПоИдентификатору(ИдентификаторСтроки);
		ПараметрыОткрытия = Новый Структура;
		Если ЗначениеЗаполнено(ДанныеСтроки.ДатаРегистрации) Тогда
			ПараметрыОткрытия.Вставить("Заголовок", СтрШаблон("%1 (%2, %3)",
				Заголовок, ДанныеСтроки.Версия, ДанныеСтроки.ДатаРегистрации));
		Иначе
			ПараметрыОткрытия.Вставить("Заголовок", СтрШаблон("%1 (%2)", Заголовок, ДанныеСтроки.Версия));
		КонецЕсли;
		
		ПараметрыОткрытия.Вставить("ВариантШаблона", ПоместитьВоВременноеХранилище(ДанныеСтроки.Настройки));
		ОткрытьФорму("Справочник.ШаблоныДокументов.Форма.ВизуализаторДокумента", ПараметрыОткрытия, ЭтотОбъект, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ВерсииШаблонаПриОкончанииРедактированияНаСервере(ШаблонДокумента, Версия, ДатаРегистрации, Комментарий)
	
	Результат = Ложь;
	НачатьТранзакцию();
	Попытка
		
		ОбъектШаблоныДокументов = ШаблонДокумента.ПолучитьОбъект();
		ОбъектШаблоныДокументов.Заблокировать();
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Версия", Версия);
		СтруктураПоиска.Вставить("ДатаРегистрации", ДатаРегистрации);
		
		СтрокиВерсий = ОбъектШаблоныДокументов.ИсторияИзменений.НайтиСтроки(СтруктураПоиска);
		Если ЗначениеЗаполнено(СтрокиВерсий) Тогда
			СтрокиВерсий[0].Комментарий = Комментарий;
			ОбъектШаблоныДокументов.Записать();
		Иначе
			ВызватьИсключение СтрШаблон(НСтр("ru = 'Не найдена версия шаблона %1 (%2, %3)';
											|en = 'Не найдена версия шаблона %1 (%2, %3)'"),
				ШаблонДокумента, Версия, ДатаРегистрации);
		КонецЕсли;
		
		ЗафиксироватьТранзакцию();
		Результат = Истина;
	Исключение
		Ошибка = ИнформацияОбОшибке();
		ЗаписьЖурналаРегистрации(
			КадровыйЭДО.ИмяСобытияЖурналаРегистрации(
				НСтр("ru = 'Обновление комментарий к версии шаблона документов';
					|en = 'Обновление комментарий к версии шаблона документов'", ОбщегоНазначения.КодОсновногоЯзыка())),
			УровеньЖурналаРегистрации.Ошибка, , , ПодробноеПредставлениеОшибки(Ошибка));
		ОтменитьТранзакцию();
	КонецПопытки;
	
	Возврат Результат
	
КонецФункции

#КонецОбласти
