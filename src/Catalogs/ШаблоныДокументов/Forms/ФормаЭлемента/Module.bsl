#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	Если Параметры.Ключ.Пустая() Тогда
		
		СсылкаШаблона = Справочники.ШаблоныДокументов.ПолучитьСсылку(Новый УникальныйИдентификатор);
		МакетДокумента = УправлениеПечатью.МакетПечатнойФормы(
			"Отчет.ШаблоныДокументовКабинетСотрудника.ПФ_MXL_ШаблонДокументаКабинетСотрудника");
		ПриПолученииДанныхНаСервере();
		
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КодДокументаКадровогоМероприятия",
		"ПодсказкаВвода",
		КадровыйЭДОПовтИсп.СвойстваКодаКадровогоДокумента().Код);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ШаблоныДокументов"
		И Источник = Объект.Ссылка Тогда
		
		Прочитать();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	ДанныеВРеквизит(ТекущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.ДополнительныеСвойства.Вставить("СсылкаШаблона", СсылкаШаблона);
	ТекущийОбъект.МакетДокумента = Новый ХранилищеЗначения(МакетДокумента, Новый СжатиеДанных(9));
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	ДанныеВРеквизит(ТекущийОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодДокументаКадровогоМероприятияПриИзменении(Элемент)
	
	УстановитьОтображениеПодсказкиКодаДокумента();
	
КонецПроцедуры

&НаКлиенте
Процедура ТребуетПодписанияПриИзменении(Элемент)
	
	Если Не Объект.ТребуетПодписания Тогда
		Объект.ТребуетсяСогласование = Ложь;
	КонецЕсли;
	
	УстановитьОтображениеЭлементов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ВАрхивеПриИзменении(Элемент)
	
	УстановитьОтображениеЭлементов(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Изменить(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыОткрытия.Вставить("МакетПечатнойФормы", МакетДокумента);
	ПараметрыОткрытия.Вставить("Заголовок", Объект.Наименование);
	ПараметрыОткрытия.Вставить("ВариантОтчета", ВариантОтчета(СсылкаШаблона.УникальныйИдентификатор()));
	ПараметрыОткрытия.Вставить("ШаблонДокумента", СсылкаШаблона);
	ПараметрыОткрытия.Вставить("ВерсияШаблонаДокумента", Объект.Версия);
	Если ЗначениеЗаполнено(Объект.ИмяПредопределенныхДанных) Тогда
		ПараметрыОткрытия.Вставить("ИмяПредопределенныхДанных", "Справочник.ШаблоныДокументов." + Объект.ИмяПредопределенныхДанных);
	КонецЕсли;
	
	ПараметрыОткрытия.Вставить("РежимРедактированияШаблонаДляКабинетаСотрудников", Истина);
	ПараметрыОткрытия.Вставить("ПутьКМакетуПечатнойФормы",
		"Отчет.ШаблоныДокументовКабинетСотрудника.ПФ_MXL_ШаблонДокументаКабинетСотрудника");
	
	Оповещение = Новый ОписаниеОповещения("ПриИзмененииМакетов", ЭтотОбъект);
	ОткрытьФорму("Обработка.НастраиваемыеПечатныеФормыЗарплатаКадры.Форма.ФормаНастройкиПечатнойФормы",
		ПараметрыОткрытия, ЭтотОбъект, СсылкаШаблона.УникальныйИдентификатор(), , , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииМакетов(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если РезультатРедактирования <> Неопределено
		И РезультатРедактирования.Результат = Истина Тогда
		
		МакетДокумента = РезультатРедактирования.МакетПечатнойФормы;
		Объект.Версия = РезультатРедактирования.ВерсияШаблонаДокумента;
		Модифицированность = Истина;
		УстановитьВидимыйМакетДокумента();
		Если Объект.Предопределенный Тогда
			УстановитьОтображениеИнформацииОНовойВерсии(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры


// СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ОбновитьПодключаемыеКоманды(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ВариантОтчета(УникальныйИдентификатор)
	
	Возврат Справочники.ШаблоныДокументов.ВариантОтчета(УникальныйИдентификатор, Истина);
	
КонецФункции

&НаСервере
Процедура УстановитьВидимыйМакетДокумента()
	
	МакетВХранилище = Новый ХранилищеЗначения(МакетДокумента);
	ВидимыйМакетДокумента = МакетВХранилище.Получить();
	
	Для НомерСтроки = 1 По ВидимыйМакетДокумента.ВысотаТаблицы Цикл
		Для НомерКолонки =1 По ВидимыйМакетДокумента.ШиринаТаблицы Цикл
			Область = ВидимыйМакетДокумента.Область(НомерСтроки, НомерКолонки, НомерСтроки, НомерКолонки);
			Если Область.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Шаблон Тогда
				Область.Заполнение = ТипЗаполненияОбластиТабличногоДокумента.Текст;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Область Из МакетДокумента.Области Цикл
		Если Область.Верх = 0 Тогда
			Продолжить;
		КонецЕсли;
		ВидимыйМакетДокумента.Область(Область.Верх, Область.Лево, Область.Низ, Область.Право).Имя = Область.Имя;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПриПолученииДанныхНаСервере()
	
	УстановитьВидимыйМакетДокумента();
	УстановитьОтображениеЭлементов(ЭтотОбъект);
	УстановитьОтображениеПодсказкиКодаДокумента();
	УстановитьОтображениеИнформацииОНовойВерсии(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеЭлементов(УправляемаяФорма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ВАрхиве",
		"Видимость",
		Не УправляемаяФорма.Объект.Ссылка.Пустая()
			И Не УправляемаяФорма.Объект.Предопределенный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"Изменить",
		"Доступность",
		Не УправляемаяФорма.Объект.ВАрхиве);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ТребуетПодписания",
		"Доступность",
		Не УправляемаяФорма.Объект.ВАрхиве);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ТребуетсяСогласование",
		"Доступность",
		УправляемаяФорма.Объект.ТребуетПодписания
			И Не УправляемаяФорма.Объект.ВАрхиве);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ПодписаниеГруппа",
		"Видимость",
		Не УправляемаяФорма.Объект.Предопределенный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"КодДокументаКадровогоМероприятия",
		"Видимость",
		Не УправляемаяФорма.Объект.Предопределенный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"КадровоеМероприятиеГруппа",
		"Видимость",
		Не УправляемаяФорма.Объект.Предопределенный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ТребуетсяНаличиеВложений",
		"Видимость",
		Не УправляемаяФорма.Объект.Предопределенный);
	
	УстановитьОтображениеПризнакаИзменен(УправляемаяФорма);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"Версия",
		"Видимость",
		ЗначениеЗаполнено(УправляемаяФорма.Объект.Версия));
	
КонецПроцедуры

&НаСервере
Процедура ДанныеВРеквизит(ТекущийОбъект)
	
	СсылкаШаблона = ТекущийОбъект.Ссылка;
	МакетДокумента = ТекущийОбъект.МакетДокумента.Получить();
	
	ПриПолученииДанныхНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтображениеПодсказкиКодаДокумента()
	
	КодДокументаКадровогоМероприятия = Объект.КодДокументаКадровогоМероприятия;
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"КодДокументаКадровогоМероприятия",
		"Подсказка",
		КадровыйЭДОПовтИсп.СвойстваКодаКадровогоДокумента(
		КодДокументаКадровогоМероприятия).НаименованиеПолное);
	
КонецПроцедуры

// КадровыйЭДО

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПодключаемыеКоманды(УправляемаяФорма)
	КадровыйЭДОКлиентСервер.ОбновитьКоманды(УправляемаяФорма, УправляемаяФорма.Объект, Истина);
КонецПроцедуры

// Конец КадровыйЭДО

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеИнформацииОНовойВерсии(УправляемаяФорма)
	
	ПоказыватьИнформациюОНовойВерсии = Ложь;
	Если УправляемаяФорма.Объект.Предопределенный Тогда
		НоваяВерсия = НоваяВерсияШаблона(УправляемаяФорма.Объект.ИмяПредопределенныхДанных, УправляемаяФорма.Объект.Версия);
		Если ЗначениеЗаполнено(НоваяВерсия) Тогда
			ПоказыватьИнформациюОНовойВерсии = Истина;
			ТекстИнформации = СтрШаблон(
				НСтр("ru = 'Доступен обновленный шаблон версии %1. Для его применения войдите в режим редактирования и воспользуйтесь командой ""Макет по умолчанию"".';
					|en = 'Доступен обновленный шаблон версии %1. Для его применения войдите в режим редактирования и воспользуйтесь командой ""Макет по умолчанию"".'"),
				НоваяВерсия);
			ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
				УправляемаяФорма.Элементы,
				"ИнформацияОНаличииНовойВерсииНадпись",
				"Заголовок",
				ТекстИнформации);
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ИнформацияОНаличииНовойВерсииГруппа",
		"Видимость",
		ПоказыватьИнформациюОНовойВерсии);
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция НоваяВерсияШаблона(ИмяПредопределенныхДанных, Версия)
	
	ТекущаяВерсияDTO = Справочники.ШаблоныДокументов.ПорядокВерсии(
		Справочники.ШаблоныДокументов.ТекущаяВерсияШаблонов());
	ТекущаяВерсия = Справочники.ШаблоныДокументов.ПорядокВерсии(Версия);
	ВерсииШаблона = Справочники.ШаблоныДокументов.ПредопределенныеВерсииШаблонов(ИмяПредопределенныхДанных);
	Для Каждого СтрокаВерсии Из ВерсииШаблона Цикл
		Если ТекущаяВерсия < СтрокаВерсии.ПорядокВерсий Тогда
			Если СтрокаВерсии.ПорядокВерсий <= ТекущаяВерсияDTO Тогда
				Возврат СтрокаВерсии.Версия;
			КонецЕсли;
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтображениеПризнакаИзменен(УправляемаяФорма)
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		УправляемаяФорма.Элементы,
		"ИзмененДекорация",
		"Видимость",
		УправляемаяФорма.Объект.Изменен);
	
КонецПроцедуры


#КонецОбласти