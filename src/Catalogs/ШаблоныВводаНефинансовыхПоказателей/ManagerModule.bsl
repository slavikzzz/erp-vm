#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Проверяет использование объекта
//
// Параметры:
//  Параметры		- Структура - содержит объект использование которого нужно проверить
//  АдресХранилища	- Строка - адрес хранилища в которое будут помещен результат проверки.
//
Процедура ПроверитьИспользованиеОбъекта(Параметры, АдресХранилища) Экспорт
	
	ЕстьСсылки = ОбщегоНазначенияВызовСервера.ЕстьСсылкиНаОбъект(Параметры.Объект);
	
	//++ НЕ УТКА
	Если Не ЕстьСсылки Тогда
		ЕстьСсылки = ПроверитьИспользованиеОбъектаВНастройкахДействияЭтаповПодготовкиБюджетов(Параметры.Объект);
	КонецЕсли;
	//-- НЕ УТКА
	
	ПоместитьВоВременноеХранилище(ЕстьСсылки, АдресХранилища);
	
КонецПроцедуры

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП.
// 
// Возвращаемое значение:
// 	Массив - имена блокируемых реквизитов:
//		* БлокируемыйРеквизит - Строка - Имя блокируемого реквизита.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ТипФормыВводаПоказателей");
	
	Возврат Результат;
	
КонецФункции

Функция ШаблонИспользуетсяВДокументах(Знач Шаблон, Знач ДокументИсключение = Неопределено) Экспорт
	
	Если Не ЗначениеЗаполнено(Шаблон) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ДокументИсключение) Тогда
		ДокументИсключение = Документы.УстановкаЗначенийНефинансовыхПоказателей.ПустаяСсылка();
	КонецЕсли;
	
	Запрос = Новый Запрос("ВЫБРАТЬ ПЕРВЫЕ 1
	                      |	ДокументУстановкаЗначений.Ссылка
	                      |ИЗ
	                      |	Документ.УстановкаЗначенийНефинансовыхПоказателей КАК ДокументУстановкаЗначений
	                      |ГДЕ
	                      |	ДокументУстановкаЗначений.ШаблонВвода = &ШаблонВвода
	                      |	И НЕ ДокументУстановкаЗначений.Ссылка = &Исключение");
	
	Запрос.УстановитьПараметр("ШаблонВвода", Шаблон);
	Запрос.УстановитьПараметр("Исключение", ДокументИсключение);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Не Запрос.Выполнить().Пустой();
	
КонецФункции

// Функция определяет шаблон ввода для выбранного нефинансового показателя.
//
// Возвращает шаблон ввода нефинансового показателя, если найден один шаблон.
// Возвращает Неопределено, если шаблон не найден или шаблонов больше одного.
//
// Параметры:
//  Показатель - СправочникСсылка.НефинансовыеПоказателиБюджетов - Нефинансовый показатель
//
// Возвращаемое значение:
//	СправочникСсылка.ШаблоныВводаНефинансовыхПоказателей - Найденный шаблон ввода.
//
Функция ШаблонВводаПоУмолчанию(Показатель) Экспорт
	
	Результат = Неопределено;
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	ПоказателиШаблона.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ШаблоныВводаНефинансовыхПоказателей.ПоказателиШаблона КАК ПоказателиШаблона
	|ГДЕ
	|	НЕ ПоказателиШаблона.Ссылка.ПометкаУдаления
	|	И ПоказателиШаблона.Показатель = &Показатель
	|");
	
	Запрос.УстановитьПараметр("Показатель", Показатель);
	
	РезультатЗапроса = Запрос.Выполнить();
	Если Не РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			Результат = Выборка.Ссылка;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА
Функция ПроверитьИспользованиеОбъектаВНастройкахДействияЭтаповПодготовкиБюджетов(Ссылка)
	
	ЕстьСсылки = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЭтапыПодготовкиБюджетов.Ссылка,
	|	ЭтапыПодготовкиБюджетов.НастройкаДействия
	|ИЗ
	|	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	|ГДЕ
	|	ЭтапыПодготовкиБюджетов.Действие = ЗНАЧЕНИЕ(Перечисление.ТипыДействийЭтаповПодготовкиБюджетов.УстановкаЗначенийНефинансовыхПоказателей)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ХранилищеНастроекДействия = Выборка.НастройкаДействия; // ХранилищеЗначения
		НастройкаДействия = ХранилищеНастроекДействия.Получить();
		Если ТипЗнч(НастройкаДействия) <> Тип("ТаблицаЗначений") Тогда
			Продолжить;
		КонецЕсли;
		
		ПараметрыПоиска = Новый Структура("Имя, Значение","ШаблонВвода", Ссылка);
		Строки = НастройкаДействия.НайтиСтроки(ПараметрыПоиска);
		Если Строки.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		ЕстьСсылки = Истина;
		
	КонецЦикла;
	
	Возврат ЕстьСсылки;
	
КонецФункции
//-- НЕ УТКА

#КонецОбласти

#КонецЕсли
