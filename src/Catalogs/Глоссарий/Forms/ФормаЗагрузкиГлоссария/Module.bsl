
#Область ОБработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьГлоссарий(Команда)
	
	РезультатЗагрузки = РезультатЗагрузкиНаСервере();
	
	ТекстОповещения = НСтр("ru = 'Загрузка глоссариев';
							|en = 'Import glossaries'"); 
	
	Если РезультатЗагрузки.Загружено = 0 Тогда
		
		ТекстПояснения = НСтр("ru = 'Ни один глоссарий не загружен';
								|en = 'No glossary is imported'");
		
	Иначе
		
		ТекстПояснения = СтрШаблон(НСтр("ru = 'Загружено глоссариев %1 из %2';
										|en = 'Imported %1 out of %2 glossaries'"), РезультатЗагрузки.Загружено, РезультатЗагрузки.ВсегоКЗагрузке);
		
	КонецЕсли;
	
	ПоказатьОповещениеПользователя(ТекстОповещения, , ТекстПояснения, БиблиотекаКартинок.Информация32);
	
	Для Каждого ТекстОшибки Из РезультатЗагрузки.Ошибки Цикл
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстОшибки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатЗагрузкиНаСервере()
	
	Результат = Новый Структура;
	Результат.Вставить("Успешно",       Истина);
	Результат.Вставить("Ошибки",         Новый Массив);
	Результат.Вставить("Загружено",      0);
	Результат.Вставить("ВсегоКЗагрузке", 0);
	
	ТаблицаДанных = ТаблицаЗначенийИзТабличногоДокумента(ТабличныйДокумент);
	
	Если ТаблицаДанных.Колонки.Найти("Наименование") = Неопределено Тогда
		
		ТекстОшибки = НСтр("ru = 'В таблице данных не найдена колонка ""Наименование""';
							|en = 'The ""Name"" column is not found in the data table'");
		Результат.Ошибки.Добавить(ТекстОшибки);
		Результат.Успешно = Ложь;
		
	КонецЕсли;
	
	Если ТаблицаДанных.Колонки.Найти("Описание") = Неопределено Тогда
		
		ТекстОшибки = НСтр("ru = 'В таблице данных не найдена колонка ""Описание""';
							|en = 'The ""Details"" column is not found in the data table'");
		Результат.Ошибки.Добавить(ТекстОшибки);
		Результат.Успешно = Ложь;
		
	КонецЕсли;
	
	Если Не Результат.Успешно Тогда
		Возврат Результат;
	КонецЕсли;
	
	КодТекущегоЯзыка =  ТекущийЯзык().КодЯзыка;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаДанных.Наименование КАК Наименование,
		|	ТаблицаДанных.Описание     КАК Описание
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	&ТаблицаДанных КАК ТаблицаДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДанных.Наименование                           КАК Наименование,
		|	ТаблицаДанных.Описание                               КАК Описание,
		|	Глоссарий.Ссылка КАК Ссылка
		|ИЗ
		|	ТаблицаДанных КАК ТаблицаДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Глоссарий КАК Глоссарий
		|		ПО ТаблицаДанных.Наименование = Глоссарий.Наименование";
	
	Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
	
	ВыборкаДетальныеЗаписи = Запрос.Выполнить().Выбрать();
	
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		
		Результат.ВсегоКЗагрузке = Результат.ВсегоКЗагрузке + 1;
		
		Попытка
		
		Если ЗначениеЗаполнено(ВыборкаДетальныеЗаписи.Ссылка) Тогда
			Если ПерезаполнятьСуществующие Тогда
				
					Блокировка = Новый БлокировкаДанных;
					ЭлементБлокировки = Блокировка.Добавить(ВыборкаДетальныеЗаписи.Ссылка.Метаданные().ПолноеИмя());
					ЭлементБлокировки.УстановитьЗначение("Ссылка", ВыборкаДетальныеЗаписи.Ссылка);
					Блокировка.Заблокировать();
					
					ГлоссарийОбъект = ВыборкаДетальныеЗаписи.Ссылка.ПолучитьОбъект();
					
				Иначе
						Продолжить;
					КонецЕсли;
				Иначе
					ГлоссарийОбъект = Справочники.Глоссарий.СоздатьЭлемент();
				КонецЕсли;
				
				ГлоссарийОбъект.Наименование = ВыборкаДетальныеЗаписи.Наименование;
				ДокументОписания = Новый ФорматированныйДокумент;
				ДокументОписания.Добавить(ВыборкаДетальныеЗаписи.Описание);
				
				НоваяСтрока = ГлоссарийОбъект.ОписанияГлоссария.Добавить();
				НоваяСтрока.КодЯзыка = КодТекущегоЯзыка;
				НоваяСтрока.Описание = Новый ХранилищеЗначения(ДокументОписания);
			
			ГлоссарийОбъект.Записать();
			Результат.Загружено = Результат.Загружено + 1;
		
		Исключение
			
			ТекстОшибки = СтрШаблон(НСтр("ru = 'Не удалось записать глоссарий с наименованием ""%1"" по причине -  %2';
										|en = 'Cannot save the %1 glossary due to: %2'"),
			                        ГлоссарийОбъект.Наименование, КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			Результат.Ошибки.Добавить(ТекстОшибки);
		
		КонецПопытки;
		
	КонецЦикла; 
	
	Возврат Результат;
		
КонецФункции

&НаСервере
Функция ТаблицаЗначенийИзТабличногоДокумента(ТабличныйДокумент) 
	
	ПоследняяСтрока = ТабличныйДокумент.ВысотаТаблицы;
	ПоследняяКолонка = ТабличныйДокумент.ШиринаТаблицы;
	ОбластьЯчеек = ТабличныйДокумент.Область(1, 1, ПоследняяСтрока, ПоследняяКолонка);
	// Создаем описание источника данных на основании области ячеек табличного документа.
	ИсточникДанных = Новый ОписаниеИсточникаДанных(ОбластьЯчеек);
	// Создаем объект для интеллектуального построения отчетов,
	// указываем источник данных и выполняем построение отчета.
	ПостроительОтчета = Новый ПостроительОтчета;
	ПостроительОтчета.ИсточникДанных = ИсточникДанных;
	ПостроительОтчета.Выполнить();
	// Результат выгружаем в таблицу значений.
	ТаблицаЗначений = ПостроительОтчета.Результат.Выгрузить();
	Возврат ТаблицаЗначений;
	
КонецФункции


#КонецОбласти



