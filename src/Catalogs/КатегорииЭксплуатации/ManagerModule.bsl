
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значение:
//	Массив из Строка - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	Результат.Добавить("ИмущественныйУчет");
	Результат.Добавить("ИнвентарныйУчет");
	Результат.Добавить("УчетПоФизЛицам");
	Результат.Добавить("СрокЭксплуатации");
	Результат.Добавить("УчитыватьВВидеГрупповогоОС");
	Результат.Добавить("СпособПогашенияСтоимостиБУ");
	Результат.Добавить("СпособПогашенияСтоимостиНУ");

	Возврат Результат;
	
КонецФункции

#КонецОбласти

//++ НЕ УТ

#Область Прочее

// Заполняет реквизиты параметров настройки счетов учета расходов, которые влияют на настройку,
// 	соответствующими им именам реквизитов аналитики учета.
//
// Параметры:
// 	СоответствиеИмен - Соответствие - ключом выступает имя реквизита, используемое в настройке счетов учета,
// 		значением является соответствующее имя реквизита аналитики учета.
// 
Процедура ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИмен) Экспорт
	
	Возврат;
	
КонецПроцедуры

// Заполняет служебные реквизиты в таблице на основании выбранной категории эксплуатации.
//
// Параметры:
// 	ТаблицаФормы - ДанныеФормыКоллекция - Таблица формы для которой заполняются признаки.
// 	ПараметрыЗаполнения - см. ТМЦВЭксплуатацииКлиентСервер.ПараметрыЗаполненияПризнаковКатегорииЭксплуатации
//
Процедура ЗаполнитьПризнакиКатегорииЭксплуатации(ТаблицаФормы, ПараметрыЗаполнения = Неопределено) Экспорт
	
	Если ТаблицаФормы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ПараметрыЗаполнения = Неопределено Тогда
		ПараметрыЗаполнения = ТМЦВЭксплуатацииКлиентСервер.ПараметрыЗаполненияПризнаковКатегорииЭксплуатации();
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(Таблица.НомерСтроки КАК ЧИСЛО) КАК НомерСтроки,
	|	ВЫРАЗИТЬ(Таблица.КатегорияЭксплуатации КАК Справочник.КатегорииЭксплуатации) КАК КатегорияЭксплуатации
	|ПОМЕСТИТЬ Таблица
	|ИЗ
	|	&Таблица КАК Таблица
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Таблица.НомерСтроки - 1 КАК ИндексСтроки,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации.ИнвентарныйУчет, ЛОЖЬ) КАК ИнвентарныйУчет,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации.УчетПоФизЛицам, ЛОЖЬ) КАК УчетПоФизЛицам,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации.УчитыватьВВидеГрупповогоОС, ЛОЖЬ) КАК УчитыватьВВидеГрупповогоОС,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации.СпособПогашенияСтоимостиБУ, ЗНАЧЕНИЕ(Перечисление.СпособыПогашенияСтоимостиТМЦ.ПриПередаче)) КАК СпособПогашенияСтоимостиБУ,
	|	ЕСТЬNULL(Таблица.КатегорияЭксплуатации.СрокЭксплуатации, 0) КАК СрокЭксплуатации
	|ИЗ
	|	Таблица КАК Таблица";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Таблица", ТаблицаФормы.Выгрузить(,"НомерСтроки, КатегорияЭксплуатации"));
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Признаки = Новый Структура("ИнвентарныйУчет,УчетПоФизЛицам,УчитыватьВВидеГрупповогоОС,СпособПогашенияСтоимостиБУ");
			
		Если ПараметрыЗаполнения.ЗаполнитьСрокЭксплуатации Тогда
			Признаки.Вставить("СрокЭксплуатации");
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(Признаки, Выборка);
		ЗаполнитьЗначенияСвойств(ТаблицаФормы[Выборка.ИндексСтроки], Признаки);
		
	КонецЦикла;
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

#КонецОбласти
	
//-- НЕ УТ

#КонецОбласти

#КонецЕсли
