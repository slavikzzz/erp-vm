#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	СтатьяБюджетов = Параметры.СтатьяБюджетов;
	ТипПравил = Перечисления.ТипПравилаПолученияФактическихДанныхБюджетирования.ФактическиеДанные;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "СтатьяБюджетов", СтатьяБюджетов);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТипПравилПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура СписокПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПравилаПолученияФактаПоСтатьямБюджетов.Ссылка КАК Ссылка,
		|	ПравилаПолученияФактаПоСтатьямБюджетов.КомпоновщикНастроек КАК КомпоновщикНастроек
		|ИЗ
		|	Справочник.ПравилаПолученияФактаПоСтатьямБюджетов КАК ПравилаПолученияФактаПоСтатьямБюджетов
		|ГДЕ
		|	ПравилаПолученияФактаПоСтатьямБюджетов.Ссылка В(&Правила)";
	
	Запрос.УстановитьПараметр("Правила", Строки.ПолучитьКлючи());
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
	НастройкаПоПравилу = Новый Соответствие();
	Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
		ХранилищеНастроек = ВыборкаДетальныеЗаписи.КомпоновщикНастроек; // ХранилищеЗначения
		НастройкаПоПравилу.Вставить(ВыборкаДетальныеЗаписи.Ссылка, ХранилищеНастроек.Получить());
	КонецЦикла;
	
	ШаблонСообщения = НСтр("ru = 'Ошибка при чтении настроек по правилу %1';
							|en = 'An error occurred when reading settings by the rule %1'");
	
	ПолучениеФактаПоКорреспонденциямРегистров = ПолучитьФункциональнуюОпцию("НастройкаПравилПолученияФактаПоКорреспондирующимРегистрам");
	
	Для Каждого Строка Из Строки Цикл
		Если ПолучениеФактаПоКорреспонденциямРегистров И Строка.Значение.Данные.РазделИсточникаДанных
			= Перечисления.РазделыИсточниковДанныхБюджетирования.ОперативныйУчет Тогда
			ТаблицаКорреспонденций = ИсточникиДанныхСервер.ТаблицаКорреспонденцийРегистров(Строка.Значение.Данные.ИсточникДанных);
		Иначе
			ТаблицаКорреспонденций = Неопределено;
		КонецЕсли;
		СКДПоПравилу = ИсточникиДанныхСервер.СхемаКомпоновкиДанныхПравила(Строка.Ключ, , , , ТаблицаКорреспонденций);
		Если СКДПоПравилу <> Неопределено Тогда
			Попытка
				КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
				КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СКДПоПравилу));

				ДополнительныйОтбор = НастройкаПоправилу.Получить(Строка.Ключ);
				Если ДополнительныйОтбор <> Неопределено Тогда
					КомпоновщикНастроек.ЗагрузитьНастройки(ДополнительныйОтбор);
					Строка.Значение.Данные.ПредставлениеОтбора = Строка(КомпоновщикНастроек.Настройки.Отбор);
				КонецЕсли;
			Исключение
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, СокрЛП(
					Строка.Ключ));
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Строка.Ключ);
			КонецПопытки;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Элементы.Список);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Элементы.Список, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Элементы.Список);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ПараметрыОткрытия = Новый Структура;
	Если Копирование Тогда
		ПараметрыОткрытия.Вставить("ЗначениеКопирования", Элементы.Список.ТекущиеДанные.Ссылка);
	Иначе
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", Новый Структура("СтатьяБюджетов, ТипПравила", СтатьяБюджетов, ТипПравил));
	КонецЕсли;
	ОткрытьФорму("Справочник.ПравилаПолученияФактаПоСтатьямБюджетов.Форма.ФормаОбъекта", ПараметрыОткрытия, ЭтаФорма,,,,,
																		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеФормой()
	
	Если Не ЗначениеЗаполнено(ТипПравил) Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбораДинамическогоСписка(Список, "ТипПравила");
	Иначе
		СписокТиповПравила = Новый СписокЗначений;
		СписокТиповПравила.Добавить(Перечисления.ТипПравилаПолученияФактическихДанныхБюджетирования.ИсполнениеБюджетаИФактическиеДанные);
		
		СписокТиповПравила.Добавить(ТипПравил);
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список,
																				"ТипПравила", СписокТиповПравила,
																				ВидСравненияКомпоновкиДанных.ВСписке, Истина);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление() 
	
	УсловноеОформление.Элементы.Очистить();
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланСчетовМеждународногоУчета.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.РазделИсточникаДанных");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеРавно;
	ОтборЭлемента.ПравоеЗначение = Перечисления.РазделыИсточниковДанныхБюджетирования.МеждународныйУчет;
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", "");
	
	//
	
	Элемент = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПланСчетовМеждународногоУчета.Имя);
	
	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Список.ПланСчетовМеждународногоУчета");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;

	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	
КонецПроцедуры

#КонецОбласти
