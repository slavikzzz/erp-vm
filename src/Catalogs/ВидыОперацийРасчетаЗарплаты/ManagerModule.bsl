#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НачальноеЗаполнение() Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИСТИНА КАК ЗначениеИстина
	               |ИЗ
	               |	Справочник.ВидыОперацийРасчетаЗарплаты КАК ВидыОперацийРасчетаЗарплаты";
				   
	РезультатЗапроса = Запрос.Выполнить();
	
	Если Не РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	ВидОперации = Справочники.ВидыОперацийРасчетаЗарплаты.СоздатьЭлемент();
	ВидОперации.Наименование = НСтр("ru = 'Расчет начислений';
									|en = 'Accrual calculation'");
	ВидОперации.Начисление = Истина;
	ВидОперации.Договоры = Истина;
	ВидОперации.Пособия = Истина;
	ВидОперации.Льготы = Истина;
	ВидОперации.Записать();
	
	ВидОперации = Справочники.ВидыОперацийРасчетаЗарплаты.СоздатьЭлемент();
	ВидОперации.Наименование = НСтр("ru = 'Расчет удержаний';
									|en = 'Deduction calculation'");
	ВидОперации.Удержания = Истина;
	ВидОперации.НДФЛ = Истина;
	ВидОперации.Займы = Истина;
	ВидОперации.Записать();
	
	ВидОперации = Справочники.ВидыОперацийРасчетаЗарплаты.СоздатьЭлемент();
	ВидОперации.Наименование = НСтр("ru = 'Начисление взносов';
									|en = 'Contribution accrual'");
	ВидОперации.Взносы = Истина;
	ВидОперации.Записать();
	
КонецПроцедуры

#КонецОбласти
	
#КонецЕсли	