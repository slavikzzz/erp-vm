#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// СтандартныеПодсистемы.ВерсионированиеОбъектов

// Определяет настройки объекта для подсистемы ВерсионированиеОбъектов.
//
// Параметры:
//  Настройки - Структура - настройки подсистемы.
Процедура ПриОпределенииНастроекВерсионированияОбъектов(Настройки) Экспорт

КонецПроцедуры

// Конец СтандартныеПодсистемы.ВерсионированиеОбъектов

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Формирует значения типа ОписаниеТипов, содержащее тип значения показателя расчета зарплаты.
//
Функция ОписаниеТиповЗначенияПоказателяРасчетаРезервов() Экспорт
	
	Возврат Новый ОписаниеТипов(Метаданные.ОпределяемыеТипы.ЗначениеПоказателяРасчетаЗарплаты.Тип);
	
КонецФункции

Функция СсылкиПоказателиРасчетаРезервовПоОплатеТрудаНачальнойНастройкиПрограммы() Экспорт 
	
	СсылкиПоказателиРасчетаЗарплаты = Новый Структура;
	
	СсылкиПоказателиРасчетаЗарплаты.Вставить("ОстатокОтпуска",       Неопределено);
	СсылкиПоказателиРасчетаЗарплаты.Вставить("СохраняемыйЗаработок", Неопределено);
	
	Возврат СсылкиПоказателиРасчетаЗарплаты;
	
КонецФункции

// Создает описание показателя расчета резервов в виде структуры со значениями полей по умолчанию.
//
// Имена полей структуры:
//		Наименование, 
//		КраткоеНаименование, 
//		Идентификатор, 
//		ТипПоказателя, 
//		СпособВводаЗначений, 
//		Точность, 
//		НачальнаяНастройка,
//		Предопределенный,
//		ИмяПредопределенныхДанных
//
Функция ОписаниеПоказателя() Экспорт 
	
	Описание = Новый Структура("
	|Наименование,
	|КраткоеНаименование,
	|Идентификатор,
	|ТипПоказателя,
	|СпособВводаЗначений,
	|Точность,
	|НачальнаяНастройка,
	|Предопределенный,
	|ИмяПредопределенныхДанных");
	
	Описание.ТипПоказателя             = Перечисления.ТипыПоказателейРасчетаЗарплаты.Числовой;
	Описание.НачальнаяНастройка        = Ложь;
	Описание.Предопределенный          = Истина;
	Описание.СпособВводаЗначений       = Перечисления.СпособыВводаЗначенийПоказателейРасчетаЗарплаты.ВводитсяПриРасчете;
	Описание.ИмяПредопределенныхДанных = "";
	
	Возврат Описание;
	
КонецФункции

// Создает или обновляет в информационной базе идентифицируемый элемент по описанию.
//
// Параметры:
//	- ОписаниеПоказателя - структура, состав полей см. в СоздатьОписаниеПоказателя.
//
Функция ЗаписатьПоказатель(ОписаниеПоказателя, СозданныеЭлементы = Неопределено) Экспорт 
	
	Если СозданныеЭлементы = Неопределено Тогда 
		СозданныеЭлементы = Новый Структура;
	КонецЕсли;
	
	ПоказательСсылка = Неопределено;
	СозданныеЭлементы.Свойство(ОписаниеПоказателя.Идентификатор, ПоказательСсылка);
	
	ИмяПредопределенныхДанных = ?(ПустаяСтрока(ОписаниеПоказателя.ИмяПредопределенныхДанных), ОписаниеПоказателя.Идентификатор, ОписаниеПоказателя.ИмяПредопределенныхДанных);
	
	Если ОписаниеПоказателя.Предопределенный Тогда 
		
		ПоказательСсылка = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаРезервовПоОплатеТруда."	+ ИмяПредопределенныхДанных);
			
	ИначеЕсли Не ЗначениеЗаполнено(ПоказательСсылка) Тогда 
		ПоказательСсылка = РезервыПоОплатеТрудаРасширенный.ПоказательПоИдентификатору(ОписаниеПоказателя.Идентификатор);
	КонецЕсли;
	
	НовыйПоказатель = Не ЗначениеЗаполнено(ПоказательСсылка);
	
	Если НовыйПоказатель Тогда
		ПоказательОбъект = Справочники.ПоказателиРасчетаРезервовПоОплатеТруда.СоздатьЭлемент();
		Если ОписаниеПоказателя.Предопределенный Тогда 
			ПоказательОбъект.ИмяПредопределенныхДанных = ИмяПредопределенныхДанных;
		КонецЕсли;
	Иначе 
		ПоказательОбъект = ПоказательСсылка.ПолучитьОбъект();
	КонецЕсли;
	
	Если НовыйПоказатель Или ОписаниеПоказателя.НачальнаяНастройка Тогда
		ПоказательОбъект.Идентификатор = ОписаниеПоказателя.Идентификатор;
		ПоказательОбъект.Наименование = ?(ПустаяСтрока(ОписаниеПоказателя.Наименование), ОписаниеПоказателя.Идентификатор, ОписаниеПоказателя.Наименование);
		ПоказательОбъект.КраткоеНаименование = ?(ПустаяСтрока(ОписаниеПоказателя.КраткоеНаименование), ПоказательОбъект.Наименование, ОписаниеПоказателя.КраткоеНаименование);
		ПоказательОбъект.ТипПоказателя = ОписаниеПоказателя.ТипПоказателя;
		ПоказательОбъект.Точность = ОписаниеПоказателя.Точность;
		ПоказательОбъект.ПометкаУдаления = Ложь;
		ПоказательОбъект.НеИспользуется = Ложь;
	Иначе
		ПоказательОбъект.ПометкаУдаления = Ложь;
		ПоказательОбъект.НеИспользуется = Ложь;
	КонецЕсли;
	
	ПоказательОбъект.Записать();
	
	Если Не ОписаниеПоказателя.Предопределенный Тогда 
		СозданныеЭлементы.Вставить(ОписаниеПоказателя.Идентификатор, ПоказательОбъект.Ссылка);
	КонецЕсли;
	
	Возврат ПоказательОбъект.Ссылка;
	
КонецФункции

Процедура ОтключитьИспользованиеПредопределенногоЭлемента(ИмяПредопределенныхДанных) Экспорт 
	
	Ссылка = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаРезервовПоОплатеТруда." + ИмяПредопределенныхДанных);
	Если ЗначениеЗаполнено(Ссылка) Тогда
		Объект = Ссылка.ПолучитьОбъект();
		Попытка
			Объект.Заблокировать();
		Исключение
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Невозможно изменить показатель """"%2"""". Возможно, он редактируется другим пользователем';
					|en = 'Cannot change the """"%2"""" indicator. Maybe, it is being edited by another user'"), Объект.Наименование);
			ВызватьИсключение ТекстСообщения;
		КонецПопытки;
		Объект.НеИспользуется = Истина;
		Объект.Записать();
	КонецЕсли;
	
КонецПроцедуры

// Отключает использование не предопределенных показателей, созданных при начальной настройке программы.
//
Процедура НачальнаяНастройкаОтключитьИспользованиеПоказателя(СозданныеЭлементы, Идентификатор) Экспорт

	СправочникСсылка = Неопределено;
	СозданныеЭлементы.Свойство(Идентификатор, СправочникСсылка);
	
	Если СправочникСсылка <> Неопределено Тогда 
		
		СправочникОбъект = СправочникСсылка.ПолучитьОбъект();
		
		Попытка
			СправочникОбъект.Заблокировать();
		Исключение
			ТекстИсключения = НСтр("ru = 'Невозможно изменить Показатель """"%2"""". Возможно, объект редактируется другим пользователем';
									|en = 'Cannot change the """"%2"""" indicator. Maybe, the object is being edited by another user'");
			ВызватьИсключение СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстИсключения, СправочникОбъект.Наименование);
		КонецПопытки;
		
		СправочникОбъект.НеИспользуется = Истина;
		СправочникОбъект.Записать();
		
		СозданныеЭлементы.Вставить(Идентификатор, Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

// Процедура заполняет справочник показателей т.н. псевдопредопределенными элементами, 
// идентифицируемыми из кода.
//
Процедура СоздатьПоказатели() Экспорт
	
	ОбновитьПовторноИспользуемыеЗначения();
	
	// Безусловно создаем показатели.
	ОписаниеПоказателя = ОписаниеПоказателя();
	ОписаниеПоказателя.Идентификатор = "ОстатокОтпуска";
	ОписаниеПоказателя.Наименование = НСтр("ru = 'Остаток отпуска';
											|en = 'Remaining leave'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru = 'Остаток отпуска';
													|en = 'Remaining leave'");
	ОписаниеПоказателя.Точность = 2;
	ЗаписатьПоказатель(ОписаниеПоказателя);
	
	ОписаниеПоказателя = ОписаниеПоказателя();
	ОписаниеПоказателя.Идентификатор = "СохраняемыйЗаработок";
	ОписаниеПоказателя.Наименование = НСтр("ru = 'Сохраняемый заработок';
											|en = 'Retained earnings'");
	ОписаниеПоказателя.КраткоеНаименование = НСтр("ru = 'Сохр.заработок';
													|en = 'Retain. earnings'");
	ОписаниеПоказателя.Точность = 2;
	ЗаписатьПоказатель(ОписаниеПоказателя);
	
	ОбновитьПовторноИспользуемыеЗначения();
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли