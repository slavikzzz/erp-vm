
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ОписаниеЛьгот = ЛьготыПоИмущественнымНалогамПовтИсп.ДанныеОЛьготахПоИмущественнымНалогам(Объект.Налог);
	
	Если ЗначениеЗаполнено(Объект.ОснованиеМестнойЛьготы) Тогда
		СведенияОПунктеРегЗакона = ЛьготыПоИмущественнымНалогамКлиентСервер.НормативныеДанныеОснованияЛьготы(Объект.ОснованиеМестнойЛьготы);
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, СведенияОПунктеРегЗакона);
	КонецЕсли;	
	
	Если Объект.УстановленаМестнымНормативнымАктом Тогда
		// Установка списка выбора регионов
		КодРегиона = Формат(Объект.КодРегиона, "ЧЦ=2; ЧН=; ЧВН=");
		ЗаполнитьСписокВыбораРегиона(
			Элементы.КодРегионаРегистрации.СписокВыбора,
			Ложь,
			КодРегиона);
		// Заполнение по классификатору 	
		ЗаполнитьИнформациюОМестнойЛьготе(ЭтотОбъект, Объект.ВидЛьготы);
		Если Объект.Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
			Элементы.ГруппаМестныйЗакон.Заголовок =
				НСтр("ru = 'Сведения о нормативном акте, предусматривающем налоговую льготу';
					|en = 'Information on the regulation that provides a tax relief'");
		КонецЕсли;
	Иначе
		ЗаполнитьИнформациюОФедеральнойЛьготе(ЭтотОбъект);
	КонецЕсли;	

	УстановитьЗаголовок();
	УправлениеФормой(ЭтотОбъект);	
	
	КлючСохраненияПоложенияОкна = Объект.КодЛьготы + ?(Объект.УстановленаМестнымНормативнымАктом, "_Региональная", "_Федеральная")
		+ ?(Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент
		 Или Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент, "_ПроцентУменьшения", "");
		
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	МассивНепроверяемыхРеквизитов.Добавить("Статья"); // проверим ниже
		
	Если Объект.УстановленаМестнымНормативнымАктом Тогда
		// Местная (региональная) льгота
		Если Не ЗначениеЗаполнено(Статья) И Не ЗначениеЗаполнено(Часть) И Не ЗначениеЗаполнено(Пункт)
			 И Не ЗначениеЗаполнено(Подпункт) И Не ЗначениеЗаполнено(Абзац) И Не ЗначениеЗаполнено(Иное) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Укажите пункт нормативного акта, в соответствии с которым предоставляется льгота';
					|en = 'Specify the regulation clause, under which the relief is provided'"),
				,
				"Статья",
				,
				Отказ);
		КонецЕсли;	 	
	Иначе
		МассивНепроверяемыхРеквизитов.Добавить("КодРегиона");
	КонецЕсли;	
		
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если ТекущийОбъект.УстановленаМестнымНормативнымАктом Тогда
		ТекущийОбъект.ОснованиеМестнойЛьготы = ЛьготыПоИмущественнымНалогамКлиентСервер.ПолныйКодОснованияЛьготы(
			Статья, Часть, Пункт, Подпункт, Абзац, Иное);
	КонецЕсли;		
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	УстановитьЗаголовок();
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	// Так как новый объект создается из формы-владельца не напрямую, а через форму классификатора,
	// то при закрытии оповестим владельца о выборе.
	Если Не ЗавершениеРаботы И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ОповеститьОВыборе(Объект.Ссылка);
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_ОснованияЛьготПоИмущественнымНалогам", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КодРегионаПриИзменении(Элемент)
	Объект.КодРегиона = КодРегиона;
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура КодПоОКТМОПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура МуниципальноеОбразованиеПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура КодРегионаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗаполнитьСписокРегионов(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ЧастьПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ПунктПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ПодпунктПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура АбзацПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ИноеПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ПроцентУменьшенияПриИзменении(Элемент)
	ЗаполнитьНаименованиеМестнойЛьготы();
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияОснованиеЛьготыПримерЗаполненияНажатие(Элемент)
	
	ОткрытьФорму("Справочник.ОснованияЛьготПоИмущественнымНалогам.Форма.ПримерЗаполненияОснованияЛьготы",, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Объект   = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Элементы.ГруппаМестныйЗакон.Видимость = Объект.УстановленаМестнымНормативнымАктом;
	
	Элементы.КодПоОКТМО.Видимость = (Объект.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог"));
	Элементы.МуниципальноеОбразование.Видимость = (Объект.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог"));
	
	Элементы.ПроцентУменьшения.Видимость = (Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент")
		Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент"));
		
	Элементы.ПроцентУменьшения.Доступность = Объект.УстановленаМестнымНормативнымАктом;	
		
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовок()

	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		АвтоЗаголовок = Истина;		
	Иначе
		АвтоЗаголовок = Ложь;
		Заголовок = Нстр("ru = 'Основание льготы по налогу на имущество';
						|en = 'Basis for property tax relief'");
	КонецЕсли;	

КонецПроцедуры
 
&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьИнформациюОФедеральнойЛьготе(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ОписаниеЛьготы = Форма.ОписаниеЛьгот.ФедеральныеЛьготы[Объект.КодЛьготы];	
	
	Если ОписаниеЛьготы = Неопределено Тогда
		Элементы.КодЛьготыРасширеннаяПодсказка.Заголовок = "";
	Иначе
		Элементы.КодЛьготыРасширеннаяПодсказка.Заголовок = ОписаниеЛьготы.Наименование;
	КонецЕсли;	
			
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьИнформациюОМестнойЛьготе(Форма, ВидЛьготы)
	
	Элементы = Форма.Элементы;
	
	ОписаниеЛьготы = Форма.ОписаниеЛьгот.МестныеЛьготы[ВидЛьготы];
	
	Если ОписаниеЛьготы = Неопределено Тогда
		Элементы.КодЛьготыРасширеннаяПодсказка.Заголовок = "";
	Иначе
		Элементы.КодЛьготыРасширеннаяПодсказка.Заголовок = ОписаниеЛьготы.Наименование;
	КонецЕсли;	
			
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьНаименованиеМестнойЛьготы()
			
	НаименованиеРегиона = "";
	Попытка
		НаименованиеРегиона = Элементы.КодРегионаРегистрации.СписокВыбора.НайтиПоЗначению(КодРегиона).Представление;
	Исключение
	КонецПопытки;	
	
	Объект.Наименование = ЛьготыПоИмущественнымНалогамКлиентСервер.НаименованиеМестнойЛьготы(
		Объект,
		НаименованиеРегиона);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСписокРегионов(Элемент)
	
	// В списке выбора региона может быть 1 элемент, который был заполнен при открытии формы
	// В этом случае требуется заполнить список выбора полностью
	// Если элементов более 1, то считаем, что список уже заполнен полностью
	Если Элемент.СписокВыбора.Количество() > 1 Тогда
		Возврат;
	КонецЕсли;	
	
	СписокРегионов = Новый СписокЗначений;
	ЗаполнитьСписокВыбораРегиона(СписокРегионов);
	
	// Чтобы избежать дублирования элементов, очищаем список выбора в поле формы
	Элемент.СписокВыбора.Очистить();
	
	Для каждого Регион Из СписокРегионов Цикл
		Элемент.СписокВыбора.Добавить(Регион.Значение, Регион.Представление);
	КонецЦикла;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ЗаполнитьСписокВыбораРегиона(СписокРегионов, ТолькоИспользуемые = Ложь, КодРегиона = Неопределено) Экспорт 
	
	СписокРегионов.Очистить();
	
	Если ЗначениеЗаполнено(КодРегиона) И КодРегиона <> "00" Тогда
		
		ШаблонПредставления = НСтр("ru = '%1';
									|en = '%1'");  //например: "Москва г"
		
		НаименованиеРегиона = АдресныйКлассификатор.НаименованиеРегионаПоКоду(КодРегиона);
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления, НаименованиеРегиона);
			
		СписокРегионов.Добавить(КодРегиона, Представление);
		Возврат;
		
	КонецЕсли;	
	
	КлассификаторСубъектовРФ = АдресныйКлассификатор.СубъектыРФ();
	
	Если НЕ ТолькоИспользуемые Тогда
		
		ТаблицаРегионов = КлассификаторСубъектовРФ;
		
	Иначе
		
		// Запрос выбирает все коды регионов, которые выбраны в справочнике регистраций в налоговом органе
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РегистрацииВНалоговомОргане.КодРегиона КАК КодРегиона
		|ИЗ
		|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
		|";

		РезультатЗапроса = Запрос.Выполнить();
		
		Если РезультатЗапроса.Пустой() Тогда
			Возврат;
		КонецЕсли;	
		
		ВыборкаРегионов = РезультатЗапроса.Выбрать();
		
		ТаблицаРегионов = КлассификаторСубъектовРФ.СкопироватьКолонки();
		Пока ВыборкаРегионов.Следующий() Цикл
			
			СтрокаРегиона = ТаблицаРегионов.Добавить();
			СтрокаРегиона.КодСубъектаРФ = ВыборкаРегионов.КодРегиона;
			
			СтрокаКлассификатора = КлассификаторСубъектовРФ.Найти(СтрокаРегиона.КодСубъектаРФ, "КодСубъектаРФ");
			Если СтрокаКлассификатора <> Неопределено Тогда
				ЗаполнитьЗначенияСвойств(СтрокаРегиона, СтрокаКлассификатора);
			КонецЕсли;	
			
		КонецЦикла;	
					   			
	КонецЕсли; 

	ШаблонПредставления = НСтр("ru = '%1 %2';
								|en = '%1 %2'");  //например: "Москва г"
	Для Каждого Регион Из ТаблицаРегионов Цикл
		Представление = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПредставления,
			Регион.Наименование,
			Регион.Сокращение);
		СписокРегионов.Добавить(Формат(Регион.КодСубъектаРФ, "ЧЦ=2; ЧН=; ЧВН="), Представление);
	КонецЦикла;
	
	// Сортируем по наименованию региона
	СписокРегионов.СортироватьПоПредставлению();
	
КонецПроцедуры

#КонецОбласти