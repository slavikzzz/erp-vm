
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Отбор.Свойство("Налог") И ЗначениеЗаполнено(Параметры.Отбор.Налог) Тогда
		Налог = Параметры.Отбор.Налог;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Налог) Тогда
		Элементы.СоздатьЛьготуНалогНаИмущество.Видимость = 
				(Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество);
		Элементы.СоздатьЛьготуЗемельныйНалог.Видимость = 
				(Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог);
	КонецЕсли;
	
	АвтоЗаголовок = Ложь;
	
	Если Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		Заголовок = Нстр("ru = 'Основания льгот по налогу на имущество';
						|en = 'Basis for property tax reliefs'");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		Заголовок = Нстр("ru = 'Основания льгот по транспортному налогу';
						|en = 'Relief basis for vehicle tax'");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		Заголовок = Нстр("ru = 'Основания льгот по земельному налогу';
						|en = 'Relief basis for land value tax'");
	Иначе
		Заголовок = Нстр("ru = 'Основания льгот по имущественным налогам';
						|en = 'Relief basis for property taxes'");
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "Запись_ОснованияЛьготПоИмущественнымНалогам" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	Если ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	Если Копирование Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Налог) Тогда
		ОтборПоНалогу = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "Налог");
		Если ТипЗнч(ОтборПоНалогу) = Тип("ЭлементОтбораКомпоновкиДанных")
			 И ОтборПоНалогу.Использование
			 И ОтборПоНалогу.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно Тогда
			Налог = ОтборПоНалогу.ПравоеЗначение;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Налог) Тогда
		ВызватьИсключение НСтр("ru = 'Не установлен отбор по налогу. Ввод новых элементов недоступен.';
								|en = 'Filter by tax is not set. Cannot enter new items.'")
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокОбработкаВыбора(Элемент, ВыбранноеЗначение, СтандартнаяОбработка)
	
	Элементы.Список.Обновить();
	Элементы.Список.ТекущаяСтрока = ВыбранноеЗначение;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СоздатьЛьготуНалогНаИмущество(Команда)	
	СоздатьЛьготу(ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.НалогНаИмущество"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЛьготуТранспортныйНалог(Команда)
	СоздатьЛьготу(ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ТранспортныйНалог"));
КонецПроцедуры

&НаКлиенте
Процедура СоздатьЛьготуЗемельныйНалог(Команда)
	СоздатьЛьготу(ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог"));
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура СоздатьЛьготу(Налог)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", Новый Структура("Налог", Налог));
	ОткрытьФорму("Справочник.ОснованияЛьготПоИмущественнымНалогам.ФормаОбъекта", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти