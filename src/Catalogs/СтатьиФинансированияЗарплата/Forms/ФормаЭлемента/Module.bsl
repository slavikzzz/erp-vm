
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Первоначальное заполнение объекта.
	Если Параметры.Ключ.Пустая() Тогда
		ПрочитатьДанные();
		УчетПоСтатьямФинансированияЗарплата.ДополнитьФормуСтатьиФинансирования(ЭтаФорма, "ГруппаБюджетныйУчет");
	КонецЕсли;
	
	СозданиеНовой = Параметры.Ключ.Пустая();
	ОбновитьЭУИспользованияСтатьи(ЭтаФорма);
	УстановитьЗаголовокСвернутойГруппыИспользованиеВБазеСреднего(ЭтаФорма);
	ОбновитьЭУПравилоЗамены(ЭтаФорма);
	УстановитьЗаголовокСвернутойГруппыПравилоЗамены(ЭтаФорма);
	
	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства
	
	УстановитьВидимостьКатегорииСтатистическогоНаблюденияЗПОбразование();
	
	Элементы.ПравилаЗаменыУстаревшейАналитикиБухучетаНоваяАналитика.ОграничениеТипа = Новый ОписаниеТипов("СправочникСсылка.СтатьиФинансированияЗарплата");
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
	ПрочитатьДанные();
	УчетПоСтатьямФинансированияЗарплата.ДополнитьФормуСтатьиФинансирования(ЭтаФорма, "ГруппаБюджетныйУчет");
	УчетПоСтатьямФинансированияЗарплата.ПрочитатьДополнительныеДанныеСтатьиФинансирования(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаСервере
Процедура ПриЗаписиНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	УчетПоСтатьямФинансированияЗарплата.ЗаписатьДополнительныеДанныеСтатьиФинансирования(ЭтаФорма, ТекущийОбъект.Ссылка);
	
	ДополнительныеСвойства = Новый Структура;
	Если ТекущийОбъект.ИспользованиеВБазеСреднегоЗаработка = Перечисления.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.Используется Тогда
		
		НаборЗаписей = РегистрыСведений.СтатьиФинансированияБазыСреднегоЗаработка.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.СтатьяФинансирования.Установить(ТекущийОбъект.Ссылка);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			НаборЗаписей.Записать();
		КонецЕсли;
		
	Иначе
		
		Если СозданиеНовой Тогда
			ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		КонецЕсли;
		РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтотОбъект, "СтатьиФинансированияБазыСреднегоЗаработка", ТекущийОбъект.Ссылка, , ДополнительныеСвойства);
		
	КонецЕсли;
	
	Если ТекущийОбъект.ПравилоЗамены <> Перечисления.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОбъекта Тогда
		
		НаборЗаписей = РегистрыСведений.ПравилаЗаменыУстаревшейАналитикиБухучета.СоздатьНаборЗаписей();
		НаборЗаписей.Отбор.СтараяАналитика.Установить(ТекущийОбъект.Ссылка);
		НаборЗаписей.Прочитать();
		
		Если НаборЗаписей.Количество() <> 0 Тогда
			НаборЗаписей.Очистить();
			ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
			НаборЗаписей.Записать();
		КонецЕсли;
		
	Иначе
		
		Если СозданиеНовой Тогда
			ДополнительныеСвойства.Вставить("ОтключитьПроверкуДатыЗапретаИзменения", Истина);
		КонецЕсли;
		РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтотОбъект, "ПравилаЗаменыУстаревшейАналитикиБухучета", ТекущийОбъект.Ссылка, , ДополнительныеСвойства);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
	Если ИмяСобытия = "ОтредактированаИстория" И Объект.Ссылка = Источник Тогда
		Если Параметр.ИмяРегистра = "СтатьиФинансированияБазыСреднегоЗаработка" Тогда
			Если СтатьиФинансированияБазыСреднегоЗаработкаНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					Объект.Ссылка,
					ИмяСобытия,
					Параметр,
					Источник);
				ОбновитьПолеСтатьяФинансированияДляЗаменыПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
			КонецЕсли;
		ИначеЕсли Параметр.ИмяРегистра = "ПравилаЗаменыУстаревшейАналитикиБухучета" Тогда
			Если ПравилаЗаменыУстаревшейАналитикиБухучетаНаборЗаписейПрочитан Тогда
				РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(
					ЭтаФорма,
					Объект.Ссылка,
					ИмяСобытия,
					Параметр,
					Источник);
				ОбновитьПолеНоваяАналитикаДляЗаменыПериод(ЭтаФорма, ОбщегоНазначенияКлиент.ДатаСеанса());
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаЗаписатьИЗакрыть(Команда)
	ЗаписатьНаКлиенте(Истина);
КонецПроцедуры

&НаКлиенте
Процедура КомандаЗаписать(Команда)
	ЗаписатьНаКлиенте(Ложь);
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаИстория(Команда)
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("СтатьиФинансированияБазыСреднегоЗаработка", Объект.Ссылка, ЭтаФорма, ТолькоПросмотр);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаИстория(Команда)

	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("ПравилаЗаменыУстаревшейАналитикиБухучета", Объект.Ссылка, ЭтаФорма, ТолькоПросмотр);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства
&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ИспользованиеВБазеСреднегоЗаработкаПриИзменении(Элемент)
	ОбновитьЭУИспользованияСтатьи(ЭтаФорма);
	УстановитьЗаголовокСвернутойГруппыИспользованиеВБазеСреднего(ЭтаФорма);
	ОбновитьЭУПравилоЗамены(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "СтатьиФинансированияБазыСреднегоЗаработка.Период", "СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой", Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтотОбъект,
		ЭтотОбъект,
		"СтатьиФинансированияБазыСреднегоЗаработка.Период",
		"СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "СтатьиФинансированияБазыСреднегоЗаработка.Период", "СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СтатьяФинансированияДляЗаменыПриИзменении(Элемент)
	
	ОбновитьПолеСтатьяФинансированияДляЗаменыПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокойПриИзменении(Элемент)
	ЗарплатаКадрыКлиент.ВводМесяцаПриИзменении(ЭтотОбъект, "ПравилаЗаменыУстаревшейАналитикиБухучета.Период", "ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой", Модифицированность);КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокойНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаНачалоВыбора(
		ЭтотОбъект,
		ЭтотОбъект,
		"ПравилаЗаменыУстаревшейАналитикиБухучета.Период",
		"ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой");
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокойРегулирование(Элемент, Направление, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаРегулирование(ЭтотОбъект, "ПравилаЗаменыУстаревшейАналитикиБухучета.Период", "ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой", Направление, Модифицированность);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокойАвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокойОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка)
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура ПравилаЗаменыУстаревшейАналитикиБухучетаНоваяАналитикаПриИзменении(Элемент)
	ОбновитьПолеНоваяАналитикаДляЗаменыПериод(ЭтотОбъект, ОбщегоНазначенияКлиент.ДатаСеанса());
КонецПроцедуры

&НаКлиенте
Процедура ДатаОкончанияПриИзменении(Элемент)
	
	ОбновитьЭУПравилоЗамены(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПравилоЗаменыПриИзменении(Элемент)
	
	ОбновитьЭУПравилоЗамены(ЭтаФорма);
	УстановитьЗаголовокСвернутойГруппыПравилоЗамены(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СтандартныеПодсистемыСвойства

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()
	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ЗаписатьНаКлиенте(ЗакрытьПослеЗаписи, ОповещениеЗавершения = Неопределено) Экспорт 

	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗакрытьПослеЗаписи", ЗакрытьПослеЗаписи);
	ДополнительныеПараметры.Вставить("ОповещениеЗавершения", ОповещениеЗавершения);
		
	Если Объект.ИспользованиеВБазеСреднегоЗаработка <> ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.Используется") Тогда
		
		Если Не ЗначениеЗаполнено(СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены) Тогда
			СообщениеОбОшибке = НСтр("ru = 'Не указана статья финансирования для замены.';
									|en = 'Financing item for replacement is not specified.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены");
			Возврат;
		КонецЕсли;
		
		Если Объект.ИспользованиеВБазеСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.ИспользуетсяДляУказанныхКатегорийНачислений")
			И Объект.КатегорииНачислений.Количество() = 0 Тогда
			СообщениеОбОшибке = НСтр("ru = 'Не указаны категории начислений.';
									|en = 'Accrual categories are not specified.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(СообщениеОбОшибке,,"Объект.КатегорииНачислений");
			Возврат;
		КонецЕсли;
		
		Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияНовойАналитикиДляЗамены", ЭтотОбъект, ДополнительныеПараметры);
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При редактировании Вы изменили статью финансирования для замены. 
			|Если Вы просто исправили прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
			|Если статья измениласьс %1, нажмите ""Статья изменилась""';
			|en = 'You changed the financing item for replacement when editing. 
			|If you corrected the previous data (it was incorrect), click ""Issue is fixed"".
			|If the item is changed from %1, click ""Item is changed""'"), 
			Формат(СтатьиФинансированияБазыСреднегоЗаработка.Период, "ДФ='д ММММ гггг ""г""'"));
		ТекстКнопкиДа = НСтр("ru = 'Статья изменилась';
							|en = 'Item is changed'");
		
		РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтотОбъект,"СтатьиФинансированияБазыСреднегоЗаработка", ТекстВопроса, ТекстКнопкиДа, Ложь, Оповещение);
		
	Иначе
		
		ЗапроситьРежимИзмененияНовойАналитикиДляЗамены(Ложь, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияНовойАналитикиДляЗамены(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	Если Объект.ПравилоЗамены = Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОбъекта") Тогда
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При редактировании Вы изменили статью финансирования для замены. 
			|Если Вы просто исправили прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
			|Если статья измениласьс %1, нажмите ""Статья изменилась""';
			|en = 'При редактировании Вы изменили статью финансирования для замены. 
			|Если Вы просто исправили прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
			|Если статья измениласьс %1, нажмите ""Статья изменилась""'"), 
			Формат(СтатьиФинансированияБазыСреднегоЗаработка.Период, "ДФ='д ММММ гггг ""г""'"));
			ТекстКнопкиДа = НСтр("ru = 'Статья изменилась';
								|en = 'Статья изменилась'");
		
		Оповещение = Новый ОписаниеОповещения("ЗаписатьНаКлиентеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтотОбъект,"ПравилаЗаменыУстаревшейАналитикиБухучета", ТекстВопроса, ТекстКнопкиДа, Ложь, Оповещение);
		
	Иначе
		
		ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьНаКлиентеЗавершение(Отказ, ДополнительныеПараметры) Экспорт 

	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаписи = Новый Структура("ПроверкаПередЗаписьюВыполнена", Истина);
	
	Если ДополнительныеПараметры.ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеЗавершения, ПараметрыЗаписи);
	ИначеЕсли Записать(ПараметрыЗаписи) И ДополнительныеПараметры.ЗакрытьПослеЗаписи Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЭУИспользованияСтатьи(Форма)

	ИспользованиеВБазеСреднегоЗаработка = Форма.Объект.ИспользованиеВБазеСреднегоЗаработка;
	СтатьяЗаменыДоступна = Ложь;
	ТекстПодсказки = НСтр("ru = 'Используется в бухучете начислениях, после даты окончания действия будет заменяться статьей указанной в настройках организации.';
							|en = 'Used in accrual accounting and after the expiration date, it is replaced with the item specified in the company settings.'");
	
	КатегорииНачисленийДоступны = Ложь;
	Если ИспользованиеВБазеСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.НеИспользуется") Тогда
		СтатьяЗаменыДоступна = Истина;
		ТекстПодсказки = НСтр("ru = 'Для всех начислений заменяется значением, указанным в поле ""Статья для замены"", не зависимо от даты окончания действия статьи.';
								|en = 'It is replaced with the value specified in the ""Item for replacement"" field for all accruals regardless the item expiration date.'");
	ИначеЕсли ИспользованиеВБазеСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.ИспользуетсяДляУказанныхКатегорийНачислений") Тогда
		СтатьяЗаменыДоступна = Истина;
		КатегорииНачисленийДоступны = Истина;
		ТекстПодсказки = НСтр("ru = 'Используется в бухучете только для указанных категорий начисления, после даты окончания действия будет заменяться статьей указанной в настройках организации. Для остальных начислений заменяется значением, указанным в поле ""Статья для замены"", не зависимо от даты окончания действия статьи.';
								|en = 'Used in the accounting only for the specified accrual categories. Once it is expired, it will be replaced with the item specified in the company settings. For other accruals, it is replaced with the value specified in the ""Item for replacement"" field regardless of the item expiration date.'");
	КонецЕсли;
	
	Если СтатьяЗаменыДоступна Тогда
		Если Не ЗначениеЗаполнено(Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены)
			И ЗначениеЗаполнено(Форма.СтатьиФинансированияБазыСреднегоЗаработкаПрежнееЗначение) Тогда
			ЗаполнитьЗначенияСвойств(Форма.СтатьиФинансированияБазыСреднегоЗаработка, Форма.СтатьиФинансированияБазыСреднегоЗаработкаПрежнееЗначение);
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "СтатьиФинансированияБазыСреднегоЗаработка.Период", "СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой");
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены) Тогда
			ПрежнееЗначение = Новый Структура();
			ПрежнееЗначение.Вставить("Период", Форма.СтатьиФинансированияБазыСреднегоЗаработка.Период);
			ПрежнееЗначение.Вставить("СтатьяФинансирования", Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансирования);
			ПрежнееЗначение.Вставить("СтатьяФинансированияДляЗамены", Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены);
			Форма.СтатьиФинансированияБазыСреднегоЗаработкаПрежнееЗначение = Новый ФиксированнаяСтруктура(ПрежнееЗначение);
			Форма.СтатьиФинансированияБазыСреднегоЗаработка.Период = Дата(1,1,1);
			Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансирования = Неопределено;
			Форма.СтатьиФинансированияБазыСреднегоЗаработка.СтатьяФинансированияДляЗамены = Неопределено;
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "СтатьиФинансированияБазыСреднегоЗаработка.Период", "СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой");
		КонецЕсли;
	КонецЕсли;
	
	Если КатегорииНачисленийДоступны Тогда
		Если Форма.Объект.КатегорииНачислений.Количество() = 0 
			И ЗначениеЗаполнено(Форма.КатегорииНачисленийПрежнееЗначение) Тогда
			Для каждого КатегорияНачисления Из Форма.КатегорииНачисленийПрежнееЗначение Цикл
				НоваяСтрока = Форма.Объект.КатегорииНачислений.Добавить();
				НоваяСтрока.КатегорияНачисления = КатегорияНачисления;
			КонецЦикла;
		КонецЕсли;
	Иначе
		Если Форма.Объект.КатегорииНачислений.Количество() > 0 Тогда
			ПрежнееЗначение = Новый Массив;
			Для каждого СтрокаТЧ Из Форма.Объект.КатегорииНачислений Цикл
				ПрежнееЗначение.Добавить(СтрокаТЧ.КатегорияНачисления);
			КонецЦикла;
			Форма.КатегорииНачисленийПрежнееЗначение = Новый ФиксированныйМассив(ПрежнееЗначение);
			Форма.Объект.КатегорииНачислений.Очистить();
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаСтатьяДляЗамены",
		"Доступность",
		СтатьяЗаменыДоступна);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"КатегорииНачислений",
		"Доступность",
		КатегорииНачисленийДоступны);
		
		
	Форма.Элементы.ИспользованиеВБазеСреднегоЗаработка.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;

КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанные()

	Если Не ЗначениеЗаполнено(Объект.ИспользованиеВБазеСреднегоЗаработка) Тогда
		// Учтем отложенное обновление ИБ.
		Объект.ИспользованиеВБазеСреднегоЗаработка = Перечисления.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.Используется;
	КонецЕсли;
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "СтатьиФинансированияБазыСреднегоЗаработка", Объект.Ссылка);
	ОбновитьПолеСтатьяФинансированияДляЗаменыПериод(ЭтаФорма);
	
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "ПравилаЗаменыУстаревшейАналитикиБухучета", Объект.Ссылка);
	ОбновитьПолеНоваяАналитикаДляЗаменыПериод(ЭтаФорма);

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеСтатьяФинансированияДляЗаменыПериод(Форма, ДатаСеанса = Неопределено)
	
	Если Не ЗначениеЗаполнено(Форма.СтатьиФинансированияБазыСреднегоЗаработка.Период) И ЗначениеЗаполнено(ДатаСеанса) Тогда
		Форма.СтатьиФинансированияБазыСреднегоЗаработка.Период = НачалоМесяца(ДатаСеанса);
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "СтатьиФинансированияБазыСреднегоЗаработка", Форма.Объект.Ссылка);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "СтатьиФинансированияБазыСреднегоЗаработка.Период", "СтатьиФинансированияБазыСреднегоЗаработкаПериодСтрокой");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокСвернутойГруппыИспользованиеВБазеСреднего(Форма)

	ТекстЗаголовка = НСтр("ru = 'Используется в базе среднего заработка';
							|en = 'Used in the average earnings base'");
	Если Форма.Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.НеИспользуется") Тогда
		ТекстЗаголовка = НСтр("ru = 'Не используется в базе среднего заработка';
								|en = 'Not used in the average earnings base'");
	ИначеЕсли Форма.Объект.ИспользованиеВБазеСреднегоЗаработка = ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.ИспользуетсяДляУказанныхКатегорийНачислений") Тогда
		ТекстЗаголовка = НСтр("ru = 'Используется в базе среднего заработка только для указанных категорий начислений';
								|en = 'Used in the average earnings base only for the specified categories of accruals'");
	КонецЕсли;
	Форма.Элементы.ГруппаИспользованиеВБазеСреднего.ЗаголовокСвернутогоОтображения = ТекстЗаголовка;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьВидимостьКатегорииСтатистическогоНаблюденияЗПОбразование()
	Настройки = СтатистикаПерсоналаРасширенный.НастройкиСтатистикиПерсонала();
	Видимость = Настройки.ИспользоватьОтчетностьМониторингаРаботниковСоциальнойСферы 
		И Настройки.ФормаЗПОбразование;
	Элементы.ГруппаКатегорияСтатистическогоНаблюдения.Видимость = Видимость;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьПолеНоваяАналитикаДляЗаменыПериод(Форма, ДатаСеанса = Неопределено)
	
	Если Не ЗначениеЗаполнено(Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.Период) И ЗначениеЗаполнено(ДатаСеанса) Тогда
		Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.Период = НачалоМесяца(ДатаСеанса);
	КонецЕсли;
	
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "ПравилаЗаменыУстаревшейАналитикиБухучета", Форма.Объект.Ссылка);
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "ПравилаЗаменыУстаревшейАналитикиБухучета.Период", "ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовокСвернутойГруппыПравилоЗамены(Форма)
	
	ТекстЗаголовка = НСтр("ru = 'Правило замены недействующей статьи в базе среднего заработка';
							|en = 'Правило замены недействующей статьи в базе среднего заработка'");
	Если Форма.Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОрганизации") Тогда
		ТекстЗаголовка = НСтр("ru = 'Недействующая статья будет заменяться статьей указанной в настройках организации';
								|en = 'Недействующая статья будет заменяться статьей указанной в настройках организации'");
	ИначеЕсли Форма.Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ИсключатьИзБазы") Тогда
		ТекстЗаголовка = НСтр("ru = 'Недействующая статья исключается из базы среднего заработка';
								|en = 'Недействующая статья исключается из базы среднего заработка'");
	ИначеЕсли Форма.Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОбъекта") Тогда
		ТекстЗаголовка = НСтр("ru = 'Недействующая статья будет заменяться статьей указанной в настройках';
								|en = 'Недействующая статья будет заменяться статьей указанной в настройках'");
	КонецЕсли;
	Форма.Элементы.ГруппаПравилоЗамены.ЗаголовокСвернутогоОтображения = ТекстЗаголовка;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОбновитьЭУПравилоЗамены(Форма)
	
	Объект = Форма.Объект;
	
	НастройкаДоступна = ЗначениеЗаполнено(Объект.ДатаОкончания)
		И (Объект.ИспользованиеВБазеСреднегоЗаработка <> ПредопределенноеЗначение("Перечисление.ИспользованиеСтатьиФинансированияВБазеСреднегоЗаработка.НеИспользуется"));
		
	Если НастройкаДоступна Тогда
		Если Не ЗначениеЗаполнено(Объект.ПравилоЗамены) Тогда
			Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОрганизации");
		КонецЕсли;
	Иначе
		Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПустаяСсылка");
	КонецЕсли;
		
	СтатьяЗаменыДоступна = (Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОбъекта"));
	Если НастройкаДоступна И СтатьяЗаменыДоступна Тогда
		Если Не ЗначениеЗаполнено(Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.НоваяАналитика)
			И ЗначениеЗаполнено(Форма.ПравилаЗаменыУстаревшейАналитикиБухучетаПрежнееЗначение) Тогда
			ЗаполнитьЗначенияСвойств(Форма.ПравилаЗаменыУстаревшейАналитикиБухучета, Форма.ПравилаЗаменыУстаревшейАналитикиБухучетаПрежнееЗначение);
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "ПравилаЗаменыУстаревшейАналитикиБухучета.Период", "ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой");
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.НоваяАналитика) Тогда
			ПрежнееЗначение = Новый Структура();
			ПрежнееЗначение.Вставить("Период", Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.Период);
			ПрежнееЗначение.Вставить("СтараяАналитика", Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.СтараяАналитика);
			ПрежнееЗначение.Вставить("НоваяАналитика", Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.НоваяАналитика);
			Форма.ПравилаЗаменыУстаревшейАналитикиБухучетаПрежнееЗначение = Новый ФиксированнаяСтруктура(ПрежнееЗначение);
			Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.Период = Дата(1,1,1);
			Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.СтараяАналитика = Неопределено;
			Форма.ПравилаЗаменыУстаревшейАналитикиБухучета.НоваяАналитика = Неопределено;
			ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(Форма, "ПравилаЗаменыУстаревшейАналитикиБухучета.Период", "ПравилаЗаменыУстаревшейАналитикиБухучетаПериодСтрокой");
		КонецЕсли;
	КонецЕсли;
	
	ТекстПодсказки = "";
	Если Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОрганизации") Тогда
		ТекстПодсказки = НСтр("ru = 'После даты окончания действия будет заменяться статьей указанной в настройках организации.';
								|en = 'После даты окончания действия будет заменяться статьей указанной в настройках организации.'");
	ИначеЕсли Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ИсключатьИзБазы") Тогда
		ТекстПодсказки = НСтр("ru = 'После даты окончания действия все начисления по этой статье будут исключаться из базы среднего заработка.
		|В распределении будут участвовать только действующие статьи.';
		|en = 'После даты окончания действия все начисления по этой статье будут исключаться из базы среднего заработка.
		|В распределении будут участвовать только действующие статьи.'");
	ИначеЕсли Объект.ПравилоЗамены = ПредопределенноеЗначение("Перечисление.ПравилаЗаменыУстаревшейАналитикиБухучета.ПоНастройкамОбъекта") Тогда
		ТекстПодсказки = НСтр("ru = 'После даты окончания действия будет заменяться значением, указанным в поле ""Статья для замены"".';
								|en = 'После даты окончания действия будет заменяться значением, указанным в поле ""Статья для замены"".'");
	КонецЕсли;
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаНастройкаПравилаЗамены",
		"Доступность",
		НастройкаДоступна);
		
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Форма.Элементы,
		"ГруппаПравилоСтатьяЗамены",
		"Доступность",
		НастройкаДоступна И СтатьяЗаменыДоступна);
		
	Форма.Элементы.ПравилоЗамены.РасширеннаяПодсказка.Заголовок = ТекстПодсказки;
	
КонецПроцедуры

#КонецОбласти