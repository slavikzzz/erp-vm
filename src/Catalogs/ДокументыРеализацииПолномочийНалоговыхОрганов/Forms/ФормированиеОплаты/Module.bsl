
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДокументКО = Параметры.ДокументКО;
	Организация = Параметры.Организация;
	КонтролирующийОрган = Параметры.КонтролирующийОрган;
	
	Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	Если Параметры.Платежи <> Неопределено Тогда
		Для Каждого СтрокаМассива Из Параметры.Платежи Цикл
			НоваяСтрока = Платежи.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаМассива);
			НоваяСтрока.Пометка = Истина;
		КонецЦикла;
		ДанныеТребования = Параметры.ДанныеТребования;
	КонецЕсли;
	
	СоздатьСразу = Параметры.СоздатьСразу;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ЗаполнитьСодержимоеСтраницы();
	
	Если СоздатьСразу Тогда
		ПодключитьОбработчикОжидания("ПодключитьФормированиеПлатежек", 0.1, Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура НовыйПлатеж(Команда)
	
	СформироватьПлатежи();
	
КонецПроцедуры

&НаКлиенте
Процедура ПлатежноеПоручение(Команда)
	
	ПерейтиПоНавигационнойСсылке(ДокументСсылка);
	ЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	ЗакрытьФорму();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодключитьФормированиеПлатежек()
	
	СформироватьПлатежи();
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПлатежи()
	
	СписокДокументов = СоздатьПлатежныеДокументы();
	ЗаполнитьСодержимоеСтраницы();
	
	НовыйДокумент = Неопределено;
	Если Платежи.Количество() > 0 Тогда
		НовыйДокумент = Платежи[0].Ссылка;
	КонецЕсли;
	
	Если ПустаяСтрока(ТекстОшибки) Тогда
		
		Если ЗначениеЗаполнено(НовыйДокумент) Тогда
			ФормуОткрыли = Ложь;
			ДокументооборотСКОКлиентПереопределяемый.ОткрытьПлатежноеПоручениеТребования(
					Новый Структура("Ключ", НовыйДокумент), ФормуОткрыли);
			Если ФормуОткрыли <> Истина Тогда
				ПоказатьЗначение(Неопределено, НовыйДокумент);
			КонецЕсли;
		КонецЕсли;
		
		ЗакрытьФорму(СписокДокументов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗакрытияПлатежки(РезультатФормы, ДополнительныеПараметры) Экспорт
	
	ЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(СписокДокументов = Неопределено)
	
	Если ЗначениеЗаполнено(СписокДокументов) Тогда
		Закрыть(СписокДокументов);
	Иначе
		Закрыть(Неопределено);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьСодержимоеСтраницы()
	
	ТекстВопроса = "";
	КартинкаВопроса = БиблиотекаКартинок.ДиалогИнформация;
	
	ВидимостьОКТМО = Ложь;
	ВсеДокументы = Новый Массив;
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		ТекстВопроса = НСтр("ru = 'Возникла ошибка при выполнении операции:';
							|en = 'Возникла ошибка при выполнении операции:'") + Символы.ПС
						+ ТекстОшибки
						+ Символы.ПС;
		КартинкаВопроса = БиблиотекаКартинок.ДиалогСтоп;
		
	Иначе
		КартинкаВопроса = БиблиотекаКартинок.ДиалогВопрос;
		
		ТекстВопроса = НСтр("ru = 'Платежное поручение будет записано. 
							|Продолжить?';
							|en = 'Платежное поручение будет записано. 
							|Продолжить?'");
		
	КонецЕсли;
	
	Элементы.ДекорацияКартинкаВопрос.Картинка = КартинкаВопроса;
	ТекстВопроса = ТекстВопроса;
	Элементы.ДекорацияВопрос.Заголовок = СтроковыеФункцииКлиент.ФорматированнаяСтрока(ТекстВопроса);

	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВопрос;
		Элементы.ПлатежноеПоручение.Видимость = Ложь;
		Элементы.НовыйПлатеж.Видимость = Ложь;
	ИначеЕсли НЕ СоздатьСразу Тогда
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаВопрос;
		Элементы.ПлатежноеПоручение.Видимость = ЗначениеЗаполнено(ДокументСсылка);
	Иначе
		Элементы.ГруппаСтраницы.ТекущаяСтраница = Элементы.ГруппаОжидание;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НоваяСтрокаПлатежки()
	
	Результат = Новый Структура();
	Результат.Вставить("Организация", Организация);
	Результат.Вставить("Ссылка", Неопределено);
	Результат.Вставить("Сумма", 0);
	Результат.Вставить("КБК", "");
	Результат.Вставить("ОКТМО", "");
	Результат.Вставить("УИН", "");
	Результат.Вставить("НомерСтроки", 0);
	Результат.Вставить("КодНО", ДанныеТребования.КодНО);
	Результат.Вставить("ИНН", ДанныеТребования.ИНН);
	Результат.Вставить("КПП", ДанныеТребования.КПП);
	Результат.Вставить("Статус", ДанныеТребования.Статус);
	Результат.Вставить("БИК", ДанныеТребования.БИК);
	Результат.Вставить("БанкНаименование", ДанныеТребования.БанкНаименование);
	Результат.Вставить("КоррСчет", ДанныеТребования.КоррСчет);
	Результат.Вставить("НаименованиеПолучателя", ДанныеТребования.НаименованиеПолучателя);
	Результат.Вставить("РасчетныйСчет", ДанныеТребования.РасчетныйСчет);
	Результат.Вставить("ИННПолучателя", ДанныеТребования.ИННПолучателя);
	Результат.Вставить("КПППолучателя", ДанныеТребования.КПППолучателя);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Функция СоздатьПлатежныеДокументы()
	
	СписокПлатежек = Новый Массив;
	КопияТаблицы = Платежи.Выгрузить(Новый Структура("Пометка", Истина));
	
	Для Каждого СтрокаТаблицы Из Платежи Цикл
		
		Если СтрокаТаблицы.Сумма = 0 ИЛИ НЕ СтрокаТаблицы.Пометка Тогда
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = НоваяСтрокаПлатежки();
		НоваяСтрока.Сумма = СтрокаТаблицы.Сумма;
		НоваяСтрока.ОКТМО = СтрокаТаблицы.ОКТМО;
		НоваяСтрока.КБК = СтрокаТаблицы.КБК;
		НоваяСтрока.УИН = СтрокаТаблицы.УИН;
		СписокПлатежек.Добавить(НоваяСтрока);
		
	КонецЦикла;
	
	ТекстОшибки = "";
	МассивСсылок = Новый Массив;
	ДокументооборотСКОПереопределяемый.СформироватьПлатежныеПоручения(ДокументКО, СписокПлатежек, МассивСсылок, ТекстОшибки);
	
	Если НЕ ПустаяСтрока(ТекстОшибки) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Результат = Новый Массив;
	
	Если МассивСсылок.Количество() = 1 Тогда
		Платежи[0].Ссылка = МассивСсылок[0];
	КонецЕсли;
	
	ДокументСсылка = "";
	Для Каждого СтрокаМассива Из МассивСсылок Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаМассива) Тогда
			Продолжить;
		КонецЕсли;
		РазделыСсылки = Строка(СтрокаМассива.УникальныйИдентификатор());
		Если НЕ ЗначениеЗаполнено(ДокументСсылка) Тогда
			ДокументСсылка = СтрокаМассива.Метаданные().ПолноеИмя();
		КонецЕсли;
		Результат.Добавить(СтрокаМассива.Метаданные().ПолноеИмя() + ";" + РазделыСсылки);
		ДокументСсылка = ДокументСсылка + ";" + РазделыСсылки;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти