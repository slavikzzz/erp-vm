&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Требование = Параметры.Требование;
	ЭтоТребованиеСФР = ЭлектронныйДокументооборотСФСС.ЭтоТребованиеСФР(Требование);

	ИнициализироватьДанные();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СостояниеОтветаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура РаспознатьАвтоматическиРасширеннаяПодсказкаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ОткрытьКалендарь(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура НеЗаполненКалендарьОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	ОткрытьКалендарь(СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияИзменениеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КонтекстЭДОКлиент.ПодготвоитьУведомлениеОНевозможностиОтветитьВСрок(Требование);
	
КонецПроцедуры

&НаКлиенте
Процедура СрокОтветаПриИзменении(Элемент)
	
	Модифицированность = Истина;
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подтвердить(Команда)
	
	Успешно = Истина;
	
	Если Модифицированность Тогда
		Успешно = РегистрацияДанных();
	КонецЕсли;
	
	Если Успешно Тогда
		Оповестить("Запись_ДокументыРеализацииПолномочийНалоговыхОрганов", , Требование);
		Закрыть(Модифицированность);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РаспознатьАвтоматически(Команда)
	
	РаспознатьАвтоматическиНаСервере();
	
	Оповестить("Запись_ДокументыРеализацииПолномочийНалоговыхОрганов", , Требование);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
		
КонецПроцедуры

&НаСервере
Процедура УправлениеФормой()
	
	Если ЭтоТребованиеСФР Тогда
		Состояние = ЭлектронныйДокументооборотСФСС.ДанныеРегистраИзвлеченныеДанныеТребованийСФР(Требование);
		ЭтоТребованиеДокументов = ЭлектронныйДокументооборотСФСС.ЭтоТребованиеСФРОПредоставленииДокументов(Требование);
	Иначе
		Состояние = ТребованияФНС.ДанныеРегистраИзвлеченныеДанныеТребований(Требование);
		ЭтоТребованиеДокументов = Требование.ВидДокумента = Перечисления.ВидыНалоговыхДокументов.ТребованиеОПредставленииДокументов;
	КонецЕсли;
	
	Элементы.ПодсказкаПроОтсрочку.Видимость = ЭтоТребованиеДокументов И НЕ ЭтоТребованиеСФР;
	
	Элементы.ГруппаТребуетсяОтвет.Доступность = СостояниеОтвета = НСтр("ru = 'Требуется ответ';
																		|en = 'Требуется ответ'");
	
	Если НЕ ЭтоТребованиеСФР Тогда
		Элементы.РаспознатьАвтоматически.Видимость = 
			ЭтоТребованиеДокументов
			И Состояние.ОтветитьДо <> СрокОтвета;
		
		Элементы.НеУдалосьРазобратьPDF.Видимость = 
			НЕ Состояние.УдалосьРазобратьPDF
			И ЭтоТребованиеДокументов
			И Состояние.ОтветитьДо = СрокОтвета
			И НЕ ЗначениеЗаполнено(Состояние.ДатаОтветаИзмененная);
	Иначе
		Элементы.НеУдалосьРазобратьPDF.Видимость = Ложь;
		Элементы.РаспознатьАвтоматически.Видимость = Ложь;
		Элементы.ОтветНеТребуется.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.НеЗаполненКалендарь.Видимость = Состояние.КалендарьБылНезаполнен;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьДанные()
	
	Если ЭтоТребованиеСФР Тогда
		Состояние = ЭлектронныйДокументооборотСФСС.ДанныеРегистраИзвлеченныеДанныеТребованийСФР(Требование);
	Иначе
		Состояние = ТребованияФНС.ДанныеРегистраИзвлеченныеДанныеТребований(Требование);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Состояние.ДатаОтветаИзмененная) Тогда
		СрокОтвета = Состояние.ДатаОтветаИзмененная;
	Иначе
		СрокОтвета = Состояние.ОтветитьДо;
	КонецЕсли;
	
	Если Состояние.ОтветУжеДан Тогда // В другой программе или другим способом
		СостояниеОтвета = НСтр("ru = 'Ответ уже дан';
								|en = 'Ответ уже дан'");
	ИначеЕсли Состояние.ТребуетОтвета Тогда
		СостояниеОтвета = НСтр("ru = 'Требуется ответ';
								|en = 'Требуется ответ'");
	Иначе
		СостояниеОтвета = НСтр("ru = 'Ответ не требуется';
								|en = 'Ответ не требуется'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РегистрацияДанных()
	
	Если ЭтоТребованиеСФР Тогда
		Данные = ЭлектронныйДокументооборотСФСС.ДанныеРегистраИзвлеченныеДанныеТребованийСФР(Требование);
	Иначе
		Данные = ТребованияФНС.ДанныеРегистраИзвлеченныеДанныеТребований(Требование);
	КонецЕсли;
	
	ПоляРегистра = Новый Структура;
	
	ТребуетОтвета = СостояниеОтвета = НСтр("ru = 'Требуется ответ';
											|en = 'Требуется ответ'");
	ПоляРегистра.Вставить("ТребуетОтвета", ТребуетОтвета);
	
	ОтветУжеДан = СостояниеОтвета = НСтр("ru = 'Ответ уже дан';
										|en = 'Ответ уже дан'"); // В другой программе или другим способом
	ПоляРегистра.Вставить("ОтветУжеДан", ОтветУжеДан);
	
	ОбновитьДату = 
		ТребуетОтвета
		И Данные.ДатаОтветаИзмененная <> СрокОтвета 
		И Данные.ДатаОтвета <> СрокОтвета;
	
	Если ОбновитьДату Тогда
		ПоляРегистра.Вставить("ДатаОтветаИзмененная", СрокОтвета);
	КонецЕсли;
	
	Если ЭтоТребованиеСФР Тогда
		Результат = ЭлектронныйДокументооборотСФСС.ОбновитьИнформациюВРегистреИзвлеченныеДанныеТребованийСФР(Требование, ПоляРегистра);
	Иначе
		Результат = ТребованияФНС.ОбновитьИнформациюВРегистреИзвлеченныеДанныеТребований(Требование, ПоляРегистра);
		Если Результат = Истина Тогда
			ДокументооборотСКОПереопределяемый.ОбновитьИЗаполнитьТребованияФНС(Требование.Организация, Требование.ДатаДокумента);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура РаспознатьАвтоматическиНаСервере()
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("Ссылка", Требование);
	
	ТребованияФНС.ИзвлечьДанныеТребованияИзPDF(ПараметрыОперации);
	
	Состояние = ТребованияФНС.ДанныеРегистраИзвлеченныеДанныеТребований(Требование);
	СрокОтвета = Состояние.ДатаОтветаИзмененная;
	
	Модифицированность = Ложь;
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКалендарь(СтандартнаяОбработка)
	
	ТребованияФНСКлиент.ОткрытьКалендарь(СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти