#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Обработчик обновления БРО .
Процедура ОбновитьОписиИсходящихДокументов() Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписиИсходящихДокументовВНалоговыеОрганы.Ссылка КАК ОписьСсылка
	|ИЗ
	|	Справочник.ОписиИсходящихДокументовВНалоговыеОрганы КАК ОписиИсходящихДокументовВНалоговыеОрганы
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтатусыОтправки КАК СтатусыОтправки
	|		ПО (СтатусыОтправки.Объект = ОписиИсходящихДокументовВНалоговыеОрганы.Ссылка)
	|ГДЕ
	|	ЕСТЬNULL(СтатусыОтправки.Статус, &СтатусВКонверте) = &СтатусВКонверте";	
	
	Запрос.УстановитьПараметр("СтатусВКонверте", Перечисления.СтатусыОтправки.ВКонверте);
	Результат = Запрос.Выполнить();
	
	ВыборкаРезультата = Результат.Выбрать();
	
	Пока ВыборкаРезультата.Следующий() Цикл
		КонтекстЭДОСервер.ОбновитьФайлыДокументовИБОписиИсходящихДокументов(ВыборкаРезультата.ОписьСсылка);
	КонецЦикла;
	
КонецПроцедуры

// Обработчик обновления БРО .
Процедура ОбновитьНаименованиеВсехОписейИсходящихДокументов() Экспорт
	
	КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОписиИсходящихДокументовВНалоговыеОрганы.Ссылка КАК ОписьСсылка
	|ИЗ
	|	Справочник.ОписиИсходящихДокументовВНалоговыеОрганы КАК ОписиИсходящихДокументовВНалоговыеОрганы
	|ГДЕ
	|	ТИПЗНАЧЕНИЯ(ОписиИсходящихДокументовВНалоговыеОрганы.Основание) = ТИП(Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов)";	
	
	Результат = Запрос.Выполнить();
	
	ВыборкаРезультата = Результат.Выбрать();
	
	Пока ВыборкаРезультата.Следующий() Цикл
		
		ОписьОбъект = ВыборкаРезультата.ОписьСсылка.ПолучитьОбъект();
		
		Если НЕ ДокументооборотСКОВызовСервера.ЭтоПакетСДопДокументами(ОписьОбъект) Тогда
		
			Основание = ОписьОбъект.Основание;
			Наименование = НСтр("ru = 'Ответ на требование о представлении документов';
								|en = 'Ответ на требование о представлении документов'");
			Если ЗначениеЗаполнено(Основание) Тогда
				Наименование = Наименование + " " + Строка(Основание.НомерДокумента) + " от " + Формат(Основание.ДатаДокумента, "ДЛФ=D");
			КонецЕсли;
			
			ОписьОбъект.Наименование = Наименование;
			
			ОписьОбъект.ОбменДанными.Загрузка = Истина;
			ОписьОбъект.Записать();
			
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Организация)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

Процедура ПеренестиТекстовоеПояснениеВДеревоДокументов(ОписьСсылка, ДвДанные) Экспорт
	
	СканОбъект = СоздатьСканИзТекстовогоПояснениия(ОписьСсылка);
	ЗаписатьДанныеСканаТекстовогоПоясненияВПрисоединенныйФайл(СканОбъект, ДвДанные);
	ДобавитьСканТекстовогоПоясненияВОпись(ОписьСсылка, СканОбъект);
		
КонецПроцедуры

Процедура ДобавитьСканТекстовогоПоясненияВОпись(ОписьСсылка, СканОбъект) Экспорт
	
	ОписьОбъект = ОписьСсылка.ПолучитьОбъект();
	НоваяСтрока = ОписьОбъект.ПредставляемыеДокументы.Добавить();
	НоваяСтрока.СсылкаНаОбъект = СканОбъект.Ссылка;
	НоваяСтрока.ЯвляетсяИнформацией = Истина;
	НоваяСтрока.ПорядковыйНомер = 0;
	ОписьОбъект.Записать();
		
КонецПроцедуры

Процедура ЗаписатьДанныеСканаТекстовогоПоясненияВПрисоединенныйФайл(СканОбъект, ДвДанные) Экспорт
	
	Адрес = ПоместитьВоВременноеХранилище(ДвДанные, Новый УникальныйИдентификатор);

	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПрисоединенныйФайлСсылка", Неопределено);
	ДополнительныеПараметры.Вставить("АдресДанныхФайлаБазы", Неопределено);
	ДополнительныеПараметры.Вставить("АдресДанныхФайлаФормы", Адрес);
	ДополнительныеПараметры.Вставить("ИмяФайла", НСтр("ru = 'Пояснение.pdf';
														|en = 'Пояснение.pdf'"));
	ДополнительныеПараметры.Вставить("ЕстьВстроеннаяПодпись", Ложь);
	ДополнительныеПараметры.Вставить("ВидPDF", Перечисления.ВидыPDF.ДокPDF);
	ДополнительныеПараметры.Вставить("НомерСтраницыФайлаФормы", 1);
	ДополнительныеПараметры.Вставить("НомерСтраницыФайлаБазы", 0);
	ДополнительныеПараметры.Вставить("ИмяФайлаПодписи", 1);
	ДополнительныеПараметры.Вставить("АдресФайлаПодписи", 1);
	
	ТаблицаФайлов = Новый Массив;
	ТаблицаФайлов.Добавить(ДополнительныеПараметры);
	
	Справочники.СканированныеДокументыДляПередачиВЭлектронномВиде.ЗаписатьФайлыФормыВБазу(
		СканОбъект.Ссылка, 
		ТаблицаФайлов, 
		Новый УникальныйИдентификатор);
		
КонецПроцедуры

Функция СоздатьСканИзТекстовогоПояснениия(ОписьСсылка) Экспорт
	
	СканОбъект = Справочники.СканированныеДокументыДляПередачиВЭлектронномВиде.СоздатьЭлемент();
	СканОбъект.Организация 		 = ОписьСсылка.Организация;
	СканОбъект.ВидДокумента 	 = Перечисления.ВидыПредставляемыхДокументов.ИныеДокументы;
	СканОбъект.ВерсияПриказа 	 = Перечисления.ПриказОписиИсходящихДокументов.ПриказММВ_7_6_16;
	СканОбъект.Наименование 	 = НСтр("ru = 'Пояснение';
										|en = 'Пояснение'");
	СканОбъект.СведенияДокумента = СканОбъект.Наименование;
	СканОбъект.Записать();
	
	Возврат СканОбъект;
		
КонецФункции

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ОбработкаПолученияФормы(ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка)
	
	// инициализируем контекст ЭДО - модуль обработки
	ТекстСообщения = "";
	КонтекстЭДО = ДокументооборотСКО.ПолучитьОбработкуЭДО(ТекстСообщения);
	Если КонтекстЭДО = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	
	КонтекстЭДО.ОбработкаПолученияФормы("Справочник", "ОписиИсходящихДокументовВНалоговыеОрганы", ВидФормы, Параметры, ВыбраннаяФорма, ДополнительнаяИнформация, СтандартнаяОбработка);
	

КонецПроцедуры

#КонецОбласти

#КонецЕсли
