#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Параметры.Свойство("ОКПДТРКодСтатистика", ОКПДТРКодСтатистика);
	ЗаполнитьКлассификатор("КлассификаторОКПДТРСтатистика");
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗначениеЗаполнено(ОКПДТРКодСтатистика) Тогда
		НайтиИПозиционировать(КлассификаторОКПДТРСтатистика, "КлассификаторОКПДТРСтатистика", ТекущаяСтрокаДолжностей,
			ОКПДТРКодСтатистика, "Code");
	КонецЕсли;
	ТекущаяСтрокаДолжностей = Элементы.КлассификаторОКПДТРСтатистика.ТекущаяСтрока;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыКлассификаторОКПДТРДолжности

&НаКлиенте
Процедура КлассификаторДолжностиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ВыбратьИЗакрыть("КлассификаторОКПДТРСтатистика");
КонецПроцедуры

&НаКлиенте
Процедура КлассификаторОКПДТРДолжностиПриАктивизацииПоля(Элемент)
	ТекущаяСтрокаДолжностей = Элементы.КлассификаторОКПДТРСтатистика.ТекущаяСтрока;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ИскатьДолжность(Команда)
	НайтиИПозиционировать(КлассификаторОКПДТРСтатистика, "КлассификаторОКПДТРСтатистика", 
		ТекущаяСтрокаДолжностей, ТекстПоискаДолжности);
КонецПроцедуры

&НаКлиенте
Процедура Выбрать(Команда)
	Если ЭтотОбъект.ТекущийЭлемент = Элементы.КлассификаторОКПДТРСтатистика Тогда
		ВыбратьИЗакрыть("КлассификаторОКПДТРСтатистика");
	Иначе 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана строка классификатора.';
														|en = 'No classifier line selected.'"));
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Загружает классификатор из макета в дерево значений.
//
&НаСервере
Процедура ЗаполнитьКлассификатор(ИмяКлассификатора)
	
	КлассификаторXML = ПолучитьОбщийМакет(ИмяКлассификатора).ПолучитьТекст();
	КлассификаторОКПДТР = ОбщегоНазначения.ПрочитатьXMLВТаблицу(КлассификаторXML).Данные;
	КлассификаторДерево = Новый ДеревоЗначений;
	КлассификаторДерево.Колонки.Добавить("Code");
	КлассификаторДерево.Колонки.Добавить("Name");
	КлассификаторДерево.Колонки.Добавить("OKZ");
		
	ТекущаяСтрока = Неопределено;
	Для Каждого СтрокаКлассификатора Из КлассификаторОКПДТР Цикл
		Строка = КлассификаторДерево.Строки.Добавить();
		ТекущаяСтрока  = Строка;
		Строка.Code = СтрокаКлассификатора.Code;
		Строка.Name = СтрокаКлассификатора.Name;
		Строка.OKZ  = СтрокаКлассификатора.OKZ;
	КонецЦикла;
	
	ЗначениеВРеквизитФормы(КлассификаторДерево, ИмяКлассификатора);
	
КонецПроцедуры

&НаКлиенте
Функция НайтиИПозиционировать(Классификатор, ИмяТаблицыДерева, ТекущаяСтрокаКлассификатора, ТекстПоиска, ПолеПоиска = Неопределено)
	
	Результат = Ложь;
	
	Если ПолеПоиска = Неопределено Тогда
		ПолеПоиска= ?(СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ТекстПоиска), "Code", "Name");
	КонецЕсли;
		
	ИдентификаторСтрокиПоиска = ТекущаяСтрокаКлассификатора;
	
	// если не найдено от текущей строки, то поиск происходит с начала дерева
	Если Не ОбщегоНазначенияБЗККлиентСервер.СледующийИдентификаторСтрокиДереваПоЗначениюПоля(
			ИдентификаторСтрокиПоиска,
			Классификатор, 
			ПолеПоиска, 
			ТекстПоиска) Тогда
		ИдентификаторСтрокиПоиска = ОбщегоНазначенияБЗККлиентСервер.ИдентификаторСтрокиДереваПоЗначениюПоля(
				Классификатор, 
				ПолеПоиска, 
				ТекстПоиска);
	КонецЕсли;
	
	Если ИдентификаторСтрокиПоиска <> Неопределено Тогда
		ТекущаяСтрокаКлассификатора = ИдентификаторСтрокиПоиска;
		Результат = Истина;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(ЭтотОбъект.Элементы, ИмяТаблицыДерева, 
		"ТекущаяСтрока", ТекущаяСтрокаКлассификатора);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ВыбратьИЗакрыть(ИмяКлассификатора)
	
	Результат = Новый Структура;
	Результат.Вставить("ОКПДТРКодСтатистика", Лев(Элементы.Найти(ИмяКлассификатора).ТекущиеДанные.Code, 5));
	Результат.Вставить("ОКЗКодСтатистика", Элементы.Найти(ИмяКлассификатора).ТекущиеДанные.OKZ);
	
	Закрыть(Результат);

КонецПроцедуры

#КонецОбласти