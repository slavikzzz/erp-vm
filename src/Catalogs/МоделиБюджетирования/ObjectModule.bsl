#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	//++ НЕ УТКА
	БюджетированиеСервер.ПроверитьЭкземплярРегламентногоЗадания(ЭтотОбъект, Отказ);
	//-- НЕ УТКА
	
КонецПроцедуры

//++ НЕ УТКА

Процедура ПриКопировании(ОбъектКопирования)
	
	Если НЕ ЭтоГруппа Тогда
		РегламентноеЗадание = Неопределено;
	КонецЕсли;
	
КонецПроцедуры
//-- НЕ УТКА

Процедура ПередУдалением(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	БюджетированиеСервер.УдалитьЭкземплярРегламентногоЗадания(ЭтотОбъект, Отказ);
	//-- НЕ УТКА
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	Если Не ЭтоГруппа Тогда
		
		Запрос = Новый Запрос;
		
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ЭтапыПодготовкиБюджетов.Ссылка
		|ИЗ
		|	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
		|ГДЕ
		|	ЭтапыПодготовкиБюджетов.Владелец = &Ссылка";
		
		Запрос.УстановитьПараметр("Ссылка", Ссылка);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Если Не ВыборкаДетальныеЗаписи.Следующий() Тогда
			
			СправочникОбъект = Справочники.ЭтапыПодготовкиБюджетов.СоздатьГруппу();
			СправочникОбъект.Владелец = Ссылка;
			СправочникОбъект.Периодичность = Периодичность;
			СправочникОбъект.ПорядокВыполненияЭтапов = Перечисления.ПорядокВыполненияЭтаповПодготовкиБюджетов.Параллельно;
			СправочникОбъект.УсловиеЗапуска = Перечисления.ТипыУсловийЗапускаЭтаповПодготовкиБюджетов.ДоНачалаПериода;
			СправочникОбъект.ТипСрока = Перечисления.ТипыСроковЭтаповПодготовкиБюджетов.ВКалендарныхДнях;
			СправочникОбъект.Записать();
			
		КонецЕсли;
	
	КонецЕсли;
	
	БюджетированиеСервер.УстановитьПараметрыЭкземплярРегламентногоЗадания(ЭтотОбъект, Отказ);
	//-- НЕ УТКА
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	Перем Ошибки;
	
	Если Не ЭтоГруппа Тогда
		Если Статус = Перечисления.СтатусыМоделейБюджетирования.Закрыта Тогда
			ПроверяемыеРеквизиты.Добавить("КонецДействия");
		КонецЕсли;
		Если ЗначениеЗаполнено(КонецДействия) Тогда
			Если КонецДействия <= НачалоДействия Тогда
				ТекстОшибки = НСтр("ru = 'Дата окончания действия модели не может быть меньше даты начала действия';
									|en = 'Model expiration date cannot be less than the model effective date'");
				ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "КонецДействия", ТекстОшибки, "");
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли