
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	НастройкиИсточника = Неопределено;
	Если НЕ ДополнительныеСвойства.Свойство("НастройкиИсточника", НастройкиИсточника) Тогда
		НастройкиИсточника = Справочники.ИсточникиЗагрузкиПроизводственнойНСИ.НастройкиИсточникаДанных(ЭтотОбъект);
	КонецЕсли;
	НастройкиИсточника.Используется = НЕ ПометкаУдаления;
	
	ОписаниеЗагружаемыхДанных = Неопределено;
	Если НЕ ДополнительныеСвойства.Свойство("ОписаниеЗагружаемыхДанных", ОписаниеЗагружаемыхДанных) Тогда
		ОписаниеЗагружаемыхДанных = УправлениеДаннымиОбИзделиях.ОписаниеЗагружаемыхДанных(НастройкиИсточника);
	КонецЕсли;
	
	ПроверитьДобавитьОбязательныеРеквизиты(ОписаниеЗагружаемыхДанных);
	
	ПроверитьОчиститьНеиспользуемыеРеквизиты(ОписаниеЗагружаемыхДанных);
	
	Если НЕ ЭтоНовый()
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") <> ПометкаУдаления Тогда
		ДополнительныеСвойства.Вставить("НастройкиИсточника", НастройкиИсточника);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриЗаписи(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиИсточника = Неопределено;
	Если ДополнительныеСвойства.Свойство("НастройкиИсточника", НастройкиИсточника) Тогда
		РегистрыСведений.НастройкиВыполненияЗагрузкиНСИ.ЗаписатьНастройкиИсточника(Ссылка, НастройкиИсточника, Истина);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Настройки = Справочники.ИсточникиЗагрузкиПроизводственнойНСИ.ПолучитьСтруктуруНастроекИзХранилища(
		ОбъектКопирования.ХранилищеНастроек);
	Справочники.ИсточникиЗагрузкиПроизводственнойНСИ.ПоместитьСтруктуруНастроекВХранилище(
		ЭтотОбъект, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПроверитьДобавитьОбязательныеРеквизиты(ОписаниеЗагружаемыхДанных)
	
	Для каждого КлючИЗначение1 Из ОписаниеЗагружаемыхДанных Цикл
		СтруктураОтбора = ОбщегоНазначения.СкопироватьРекурсивно(КлючИЗначение1.Значение.СтруктураОтбора);
		Для каждого ГруппаРеквизитов Из УправлениеДаннымиОбИзделияхКлиентСервер.ГруппыРеквизитов() Цикл
			Для каждого КлючИЗначение2 Из КлючИЗначение1.Значение[ГруппаРеквизитов] Цикл
				Если КлючИЗначение2.Значение.Обязательный Тогда
					СтруктураОтбора.Вставить("ИмяРеквизита", КлючИЗначение2.Значение.Имя);
					Если ОписаниеРеквизитов.НайтиСтроки(СтруктураОтбора).ВГраница() = -1 Тогда
						НоваяСтрока = ОписаниеРеквизитов.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураОтбора);
						Справочники.ИсточникиЗагрузкиПроизводственнойНСИ.ИнициализироватьНовуюСтрокуТаблицыРеквизитов(
							НоваяСтрока, Истина);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьОчиститьНеиспользуемыеРеквизиты(ОписаниеЗагружаемыхДанных)
	
	Таблица = ОписаниеРеквизитов.ВыгрузитьКолонки();
	Для каждого КлючИЗначение Из ОписаниеЗагружаемыхДанных Цикл
		Для каждого Строка Из ОписаниеРеквизитов.НайтиСтроки(КлючИЗначение.Значение.СтруктураОтбора) Цикл
			Если Строка.СпособУстановкиЗначения.Пустая()
				ИЛИ Строка.СпособУстановкиЗначения = Перечисления.ЗагрузкаНСИСпособыУстановкиЗначенияРеквизита.НеИспользовать Тогда
				Продолжить;
			КонецЕсли;
			Для каждого ГруппаРеквизитов Из УправлениеДаннымиОбИзделияхКлиентСервер.ГруппыРеквизитов() Цикл
				Если КлючИЗначение.Значение[ГруппаРеквизитов].Свойство(Строка.ИмяРеквизита) Тогда
					НоваяСтрока = Таблица.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
					Если НоваяСтрока.СпособУстановкиЗначения = Перечисления.ЗагрузкаНСИСпособыУстановкиЗначенияРеквизита.РассчитатьПоАлгоритму Тогда
						НоваяСтрока.Значение = Неопределено;
					Иначе
						НоваяСтрока.АлгоритмРасчетаЗначения = "";
					КонецЕсли;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	ОписаниеРеквизитов.Загрузить(Таблица);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
