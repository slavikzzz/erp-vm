
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОписаниеЭлементаЗагружаемыхДанных = Параметры.ОписаниеЭлементаЗагружаемыхДанных; // см. УправлениеДаннымиОбИзделиях.ОписаниеЭлементаЗагружаемыхДанныхКонструктор
	Для каждого ГруппаРеквизитов Из УправлениеДаннымиОбИзделияхКлиентСервер.ГруппыРеквизитовШапкиОбъекта() Цикл
		Для каждого КлючИЗначение Из ОписаниеЭлементаЗагружаемыхДанных[ГруппаРеквизитов] Цикл
			ОписаниеРеквизита = КлючИЗначение.Значение;
			НоваяСтрока = ДоступныеРеквизиты.Добавить();
			НоваяСтрока.ИмяРеквизита  = ОписаниеРеквизита.Имя;
			НоваяСтрока.Представление = ОписаниеРеквизита.Представление;
		КонецЦикла;
	КонецЦикла;
	
	Если ОписаниеЭлементаЗагружаемыхДанных.ЕстьКод Тогда
		НоваяСтрока = ДоступныеРеквизиты.Добавить();
		НоваяСтрока.ИмяРеквизита  = "Код";
		НоваяСтрока.Представление = НоваяСтрока.ИмяРеквизита;
	КонецЕсли;
	
	Настройка = Неопределено;
	Если Параметры.Свойство("НастройкаРазрешенияКонфликтаПриПоиске", Настройка) Тогда
		Правило = Настройка.Правило;
		Если СортировкаДоступна(ЭтотОбъект) Тогда
			Для Индекс = 0 По Настройка.НастройкиСортировки.ВГраница() Цикл
				СтруктураНастройки = Настройка.НастройкиСортировки[Индекс]; // см. УправлениеДаннымиОбИзделияхКлиентСервер.ОписаниеЭлементаСортировкиКонструктор
				ДобавитьПолеПоИмени(ЭтотОбъект, СтруктураНастройки.ИмяРеквизита, СтруктураНастройки.Направление);
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
							|en = 'The data was changed. Do you want to save the changes?'");
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПравилоПриИзменении(Элемент)
	
	Если НЕ СортировкаДоступна(ЭтотОбъект) Тогда
		УбратьПоля(ЭтотОбъект, РеквизитыСортировки);
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект, "Правило");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДоступныеРеквизиты

&НаКлиенте
Процедура ДоступныеРеквизитыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ДоступныеРеквизитыПредставление Тогда
		
		ДобавитьПоля(ЭтотОбъект, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяСтрока));
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРеквизитыСортировки

&НаКлиенте
Процедура РеквизитыСортировкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.РеквизитыСортировкиНаправление Тогда
		
		СтандартнаяОбработка = Ложь;
		ПереключитьНаправлениеСортировки(ВыбраннаяСтрока);
		
		Модифицированность = Истина;
		
	ИначеЕсли Поле = Элементы.РеквизитыСортировкиПредставление Тогда
		
		УбратьПоля(ЭтотОбъект, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ВыбраннаяСтрока));
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РеквизитыСортировкиПередУдалением(Элемент, Отказ)
	
	УбратьПоля(ЭтотОбъект, Элементы.РеквизитыСортировки.ВыделенныеСтроки);
	
	Отказ = Истина;
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Вправо(Команда)
	
	ДобавитьПоля(ЭтотОбъект, Элементы.ДоступныеРеквизиты.ВыделенныеСтроки);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Влево(Команда)
	
	УбратьПоля(ЭтотОбъект, Элементы.РеквизитыСортировки.ВыделенныеСтроки);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	ЗавершитьРедактирование();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	Если Параметры.Свойство("Заголовок") Тогда
		Параметры.Свойство("Заголовок", Заголовок);
	КонецЕсли;
	
	ДоступныеРеквизиты.Сортировать("Представление");
	Элементы.ДоступныеРеквизиты.ОтборСтрок = Новый ФиксированнаяСтруктура("Выбран", Ложь);

	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма, СписокРеквизитов = "")
	
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если СтруктураРеквизитов.Свойство("Правило")
		ИЛИ Инициализация Тогда
			
			Элементы.ГруппаСортировка.Доступность = СортировкаДоступна(Форма);
			
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УбратьПоля(Форма, ИдентификаторыСтрок)
	
	МассивУдалить = Новый Массив;
	СтруктураПоиска = Новый Структура("ИмяРеквизита");
	
	Для каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		Если ТипЗнч(ИдентификаторСтроки) = Тип("Число") Тогда
			ДанныеСтроки = Форма.РеквизитыСортировки.НайтиПоИдентификатору(ИдентификаторСтроки);
		Иначе
			ДанныеСтроки = ИдентификаторСтроки;
		КонецЕсли;
		СтруктураПоиска.ИмяРеквизита = ДанныеСтроки.ИмяРеквизита;
		Для каждого НайденнаяСтрока Из Форма.ДоступныеРеквизиты.НайтиСтроки(СтруктураПоиска) Цикл
			НайденнаяСтрока.Выбран = Ложь;
		КонецЦикла;
		МассивУдалить.Добавить(ДанныеСтроки);
	КонецЦикла;
	
	Для каждого ДанныеСтроки Из МассивУдалить Цикл
		Форма.РеквизитыСортировки.Удалить(ДанныеСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьПоля(Форма, ИдентификаторыСтрок, Направление = "Возр")
	
	Для каждого ИдентификаторСтроки Из ИдентификаторыСтрок Цикл
		Если ТипЗнч(ИдентификаторСтроки) = Тип("Число") Тогда
			ДанныеСтроки = Форма.ДоступныеРеквизиты.НайтиПоИдентификатору(ИдентификаторСтроки);
		Иначе
			ДанныеСтроки = ИдентификаторСтроки;
		КонецЕсли;
		НоваяСтрока = Форма.РеквизитыСортировки.Добавить();
		НоваяСтрока.ИмяРеквизита  = ДанныеСтроки.ИмяРеквизита;
		НоваяСтрока.Представление = ДанныеСтроки.Представление;
		НоваяСтрока.Направление   = Направление;
		НоваяСтрока.НаправлениеПредставление = Строка(НаправлениеСортировки[НоваяСтрока.Направление]);
		ДанныеСтроки.Выбран = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ДобавитьПолеПоИмени(Форма, ИмяРеквизита, Направление = "Возр")
	
	НайденныеСтроки = Форма.ДоступныеРеквизиты.НайтиСтроки(Новый Структура("ИмяРеквизита", ИмяРеквизита));
	Если ЗначениеЗаполнено(НайденныеСтроки) Тогда
		ДобавитьПоля(Форма,
			ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(НайденныеСтроки[0].ПолучитьИдентификатор()),
			Направление);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПереключитьНаправлениеСортировки(ИдентификаторСтроки)
	
	ДанныеСтроки = РеквизитыСортировки.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ДанныеСтроки.Направление = ?(ДанныеСтроки.Направление = "Возр", "Убыв", "Возр");
	ДанныеСтроки.НаправлениеПредставление = Строка(НаправлениеСортировки[ДанныеСтроки.Направление]);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗавершитьРедактирование();
	ИначеЕсли РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование()
	
	Отказ = Ложь;
	
	Настройка = УправлениеДаннымиОбИзделияхКлиентСервер.ОписаниеНастройкиРазрешенияКонфликтаПриПоискеКонструктор();
	
	Настройка.Правило = Правило;
	
	Если СортировкаДоступна(ЭтотОбъект) Тогда
		Если РеквизитыСортировки.Количество() > 0 Тогда
			Для каждого Строка Из РеквизитыСортировки Цикл
				НовыйЭлемент = УправлениеДаннымиОбИзделияхКлиентСервер.ОписаниеЭлементаСортировкиКонструктор();
				ЗаполнитьЗначенияСвойств(НовыйЭлемент, Строка);
				Настройка.НастройкиСортировки.Добавить(НовыйЭлемент);
			КонецЦикла;
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю(
				НСтр("ru = 'Необходимо выбрать поля, по которым будет производиться сортировка';
					|en = 'Select fields to sort'"),,
				"РеквизитыСортировки",,
				Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Ложь;
	
	Закрыть(Новый Структура("НастройкаРазрешенияКонфликтаПриПоиске", Настройка));
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СортировкаДоступна(Форма)
	
	Возврат Форма.Правило = УправлениеДаннымиОбИзделияхКлиентСервер.ПравилоРазрешенияКонфликтаПриПоискеСортировать();
	
КонецФункции

#КонецОбласти