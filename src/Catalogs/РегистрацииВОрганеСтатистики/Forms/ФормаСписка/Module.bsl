
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьУсловноеОформлениеСписка();
	
	Параметры.Свойство("ПоказыватьНеиспользуемые", ПоказыватьНеиспользуемые);
	
	Если Параметры.Свойство("ТекущийЭлемент") Тогда
		Элементы.Список.ТекущаяСтрока = Параметры.ТекущийЭлемент;
	КонецЕсли;
	
	Если Параметры.РежимВыбора Тогда
		Элементы.Список.РежимВыбора = Истина;
		Если ЗначениеЗаполнено(Параметры.ТекущаяСтрока) Тогда
			ПоказыватьНеиспользуемые = Параметры.ТекущаяСтрока.ВАрхиве;
		КонецЕсли;
	КонецЕсли;
	
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНеиспользуемые);
	
	Организация = Неопределено;
	Если Параметры.Отбор.Свойство("Владелец", Организация) Тогда
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.ФиксированныеНастройки.Отбор,
			"Владелец", Организация,,, Истина);
		
		СписокНастройкиОтбораНадпись = СтрШаблон(НСтр("ru = 'Организация: %1';
														|en = 'Company: %1'"), Строка(Организация));
		Элементы.СписокНастройкиОтбора.Видимость = Истина;
		
	Иначе
		
		Если РегламентированнаяОтчетностьВызовСервера.ИспользуетсяОднаОрганизация() Тогда
			Модуль = ОбщегоНазначения.ОбщийМодуль("Справочники.Организации");
			Организация = Модуль.ОрганизацияПоУмолчанию();
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор,
				"Владелец", Организация,,, Истина);
		Иначе
			Организация = РегламентированнаяОтчетность.ПолучитьОрганизациюПоУмолчанию();
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.КомпоновщикНастроек.Настройки.Отбор,
				"Владелец", Организация,,, Истина, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.БыстрыйДоступ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьНеиспользуемыеПриИзменении(Элемент)
	
	УстановитьОтборСписка(Список.Отбор, ПоказыватьНеиспользуемые);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(ГруппаОтбора, ПоказыватьНеиспользуемые)
	
	ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(ГруппаОтбора, "ВАрхиве");
	
	Если Не ПоказыватьНеиспользуемые Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаОтбора, "ВАрхиве", Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформлениеСписка()
	
	ТекущийШрифт = Элементы.Список.Шрифт;
	ЗачеркнутыйШрифт = Новый Шрифт(ТекущийШрифт,,,,,,Истина);
	
	ЭлементОформления = Список.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт", ЗачеркнутыйШрифт);
	ЭлементОформления.Использование = Истина;
	
	ЭлементОтбора = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.Использование		= Истина;
	ЭлементОтбора.ВидСравнения		= ВидСравненияКомпоновкиДанных.Равно;
	ЭлементОтбора.ЛевоеЗначение		= Новый ПолеКомпоновкиДанных("ВАрхиве");
	ЭлементОтбора.ПравоеЗначение	= Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Если ЗначениеЗаполнено(СтруктурнаяЕдиница) Тогда
		Отказ = Истина;
		
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("СтруктурнаяЕдиница", СтруктурнаяЕдиница);
		
		ОткрытьФорму("Справочник.РегистрацииВОрганеСтатистики.ФормаОбъекта",
		ПараметрыОткрытия,, Истина,,,, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти