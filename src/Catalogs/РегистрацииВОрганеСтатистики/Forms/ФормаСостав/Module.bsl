#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ДатаАктуальности) Тогда
		ДатаАктуальности = Параметры.ДатаАктуальности;
	Иначе
		ДатаАктуальности = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Регистрация = Параметры.Регистрация;
	Заголовок = СтрШаблон(НСтр("ru = '%1 (Состав регистрации)';
								|en = '%1 (Registration content)'"), Строка(Регистрация));
	
	УстановитьУсловноеОформлениеСпискаПодразделений();
	
	ЗаполнитьИспользование(ДатаАктуальности);
	Элементы.МестаИспользования.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВсеУровни;
	
	Если МестаИспользования.ПолучитьЭлементы().Количество() Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаМестаИспользования;
		Элементы.Подсказка.Заголовок = СтрШаблон(НСтр("ru = 'Данные на %1';
														|en = 'Data for %1'"), Формат(ДатаАктуальности, "ДФ=dd.MM.yyyy"));
	Иначе
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНетИспользования;
		Элементы.ДекорацияНеИспользуется.Заголовок = СтрШаблон(НСтр("ru = 'Регистрация не используется на %1';
																	|en = 'Registration is not used as of %1'"), Формат(ДатаАктуальности, "ДФ=dd.MM.yyyy"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура МестаИспользованияВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Элемент.ТекущиеДанные.Ссылка <> Неопределено Тогда
		СтандартнаяОбработка = Ложь;
		ПоказатьЗначение(, Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьНеиспользуемыеПриИзменении(Элемент)
	
	ЗаполнитьИспользование(ДатаАктуальности);
	РаскрытьВсеУровни();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьУсловноеОформлениеСпискаПодразделений()

	ИмяСписка = "МестаИспользования";
	
	ТекущийШрифт = ЭтаФорма.Элементы[ИмяСписка].Шрифт;
	
	ЗачеркнутыйШрифт = Новый Шрифт(ТекущийШрифт,,,,,,Истина,);
	
	ЭлементОформления = ЭтаФорма.УсловноеОформление.Элементы.Добавить();
	ЭлементОформления.Представление = НСтр("ru = 'Зачеркивать не используемые.';
											|en = 'Cross out unused ones.'");
	
	ОтборЭлемента = ЭлементОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("МестаИспользования.Использование");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ПолеЭлемента = ЭлементОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("МестаИспользования");
	
	ЭлементОформления.Оформление.УстановитьЗначениеПараметра("Шрифт",ЗачеркнутыйШрифт);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИспользование(ДатаАктуальности)
	
	ИспользованиеРегистрации = РегистрацииВОрганеСтатистикиВызовСервера.МестаИспользованияРегистрацииВОрганеСтатистики(Регистрация, ДатаАктуальности);
	
	ЭлементыДерева = МестаИспользования.ПолучитьЭлементы();
	ЭлементыДерева.Очистить();
	
	Объекты = ДанныеФормыВЗначение(МестаИспользования, Тип("ДеревоЗначений"));
	ПоказыватьНеиспользуемыеВидимость = Ложь;
	
	Для Каждого Элемент Из ИспользованиеРегистрации Цикл
		Группа = Объекты.Строки.Добавить();
		Группа.Наименование = Элемент.Ключ;
		Группа.Использование = Истина;
		ЭлементыГруппы = Группа.Строки;
		
		ЕстьИспользование = Ложь;
		СвойстваВТаблице = ТипЗнч(Элемент.Значение) = Тип("ТаблицаЗначений");
		Если СвойстваВТаблице Тогда
			Если Элемент.Значение.Колонки.Найти("Использование") <> Неопределено Тогда
				ЕстьИспользование = Истина;
				ПоказыватьНеиспользуемыеВидимость = Истина;
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого Строка Из Элемент.Значение Цикл
			Если СвойстваВТаблице Тогда
				Если ЕстьИспользование Тогда
					Если Не ПоказыватьНеиспользуемые И (Не Строка.Использование Или Строка.ПометкаУдаления) Тогда
						Продолжить;
					КонецЕсли;
				КонецЕсли;
				Элемент = ЭлементыГруппы.Добавить();
				ЗаполнитьЗначенияСвойств(Элемент, Строка);
				Элемент.Наименование = Строка(Строка.Ссылка);
				Элемент.Картинка = ?(Строка.ПометкаУдаления, 9, 8);
				Если Не ЕстьИспользование Тогда
					Элемент.Использование = Истина;
				КонецЕсли
			Иначе
				Элемент = ЭлементыГруппы.Добавить();
				Элемент.Ссылка = Строка;
				Элемент.Использование = Истина;
				Элемент.Наименование = Строка(Строка);
				Элемент.Картинка = -1;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Элементы.ПоказыватьНеиспользуемые.Видимость = ПоказыватьНеиспользуемыеВидимость;
	ЗначениеВДанныеФормы(Объекты, МестаИспользования);
	
КонецПроцедуры

&НаКлиенте
Процедура РаскрытьВсеУровни()
	
	ДеревоФормы = Элементы.МестаИспользования;
	
	ИдентификаторТекущейСтроки = ДеревоФормы.ТекущаяСтрока;
	ДеревоФормы.ТекущаяСтрока = Неопределено;
	
	КоллекцияЭлементов = МестаИспользования.ПолучитьЭлементы();
	
	Для Каждого Строка Из КоллекцияЭлементов Цикл
		ИдентификаторСтроки = Строка.ПолучитьИдентификатор();
		ДеревоФормы.Развернуть(ИдентификаторСтроки, Истина);
	КонецЦикла;
	
	ДеревоФормы.ТекущаяСтрока = ИдентификаторТекущейСтроки;	
	
КонецПроцедуры

#КонецОбласти