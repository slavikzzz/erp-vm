#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
		
	Если Параметры.Отбор.Свойство("Организация") Тогда
		ОтборОрганизация = Параметры.Отбор.Организация;
		ЭлементОтбораОрганизация = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "Организация");
		Если ЭлементОтбораОрганизация <> Неопределено Тогда
			ЭлементОтбораОрганизация.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;
		Элементы.ОтборОрганизация.Видимость = Истина;
	Иначе
		ОбщегоНазначенияБПВызовСервера.УстановитьОтборПоОсновнойОрганизации(ЭтотОбъект);
		Элементы.ОтборОрганизация.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("Владелец") Тогда
		ОтборЛьгота = Параметры.Отбор.Владелец;
		ЭлементОтбораЛьгота = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "Владелец");
		Если ЭлементОтбораЛьгота <> Неопределено Тогда
			ЭлементОтбораЛьгота.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;	
		Элементы.ОтборЛьгота.Видимость = Истина;
	Иначе
		Элементы.ОтборЛьгота.Видимость = Ложь;
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ОсновноеСредство") Тогда
		ОтборОбъект = Параметры.Отбор.ОсновноеСредство;
		ЭлементОтбораОбъект = ОтборыСписковКлиентСервер.ЭлементОтбораСпискаПоИмени(Список, "ОсновноеСредство");
		Если ЭлементОтбораОбъект <> Неопределено Тогда
			ЭлементОтбораОбъект.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		КонецЕсли;	
		Элементы.ОтборОбъект.Видимость = Истина;
	Иначе
		Элементы.ОтборОбъект.Видимость = Ложь;
	КонецЕсли;
	
	Заголовок = НСтр("ru = 'Документы, подтверждающие льготы по налогу на имущество';
					|en = 'Documents that confirm the property tax relief'");
	
	Список.Параметры.УстановитьЗначениеПараметра("УстановленОтборПоОбъекту", ЗначениеЗаполнено(ОтборОбъект));
	Если ЗначениеЗаполнено(ОтборОбъект) Тогда
		
		ГруппировкаПрименяетсяКОбъекту = Список.КомпоновщикНастроек.Настройки.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
		ГруппировкаПрименяетсяКОбъекту.Использование = Истина;
		ГруппировкаПрименяетсяКОбъекту.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный;
		ГруппировкаПрименяетсяКОбъекту.Выбор.Элементы.Добавить(Тип("АвтоВыбранноеПолеКомпоновкиДанных"));
		
		ПолеГруппировки = ГруппировкаПрименяетсяКОбъекту.ПоляГруппировки.Элементы.Добавить(Тип("ПолеГруппировкиКомпоновкиДанных"));
		ПолеГруппировки.Поле = Новый ПолеКомпоновкиДанных("ПрименяетсяКОбъекту");
		ПолеГруппировки.Использование = Истина;
				
		Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Очистить();
		ПолеПорядок = Список.КомпоновщикНастроек.Настройки.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
		ПолеПорядок.Поле = Новый ПолеКомпоновкиДанных("ПрименяетсяКОбъекту");	
		ПолеПорядок.Использование = Истина;
		ПолеПорядок.ТипУпорядочивания = НаправлениеСортировкиКомпоновкиДанных.Убыв;
				
	КонецЕсли;	
	
	УстановитьУсловноеОформление();
	
	АвтоЗаголовок = Ложь;
	Заголовок = Нстр("ru = 'Документы, подтверждающие льготы по налогу на имущество';
					|en = 'Documents that confirm the property tax relief'");
	
	Список.Параметры.УстановитьЗначениеПараметра("ТекстПоТекущемуИлиПоВсем", НСтр("ru = 'По текущему или по всем объектам';
																					|en = 'By the current object or by all objects'"));
	Список.Параметры.УстановитьЗначениеПараметра("ТекстПоДругим",            НСтр("ru = 'По другим объектам';
																					|en = 'By other objects'"));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	// Видимость колонки Организация
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Организация");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборОрганизация", ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
	
	// Видимость колонки Льгота
	ЭлементУО = УсловноеОформление.Элементы.Добавить();
	КомпоновкаДанныхКлиентСервер.ДобавитьОформляемоеПоле(ЭлементУО.Поля, "Владелец");
	ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(ЭлементУО.Отбор,
		"ОтборЛьгота", ВидСравненияКомпоновкиДанных.Заполнено);
	ЭлементУО.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);
		
КонецПроцедуры

#КонецОбласти
