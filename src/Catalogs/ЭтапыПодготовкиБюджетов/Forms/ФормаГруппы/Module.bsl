
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ПериодичностьРодителя = ?(ЗначениеЗаполнено(Объект.Родитель), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Родитель,
		"Периодичность"), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Периодичность"));
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Если Не ЗначениеЗаполнено(Объект.Периодичность) Тогда
			Если Не ЗначениеЗаполнено(Объект.Родитель) Тогда
				Объект.Периодичность = Перечисления.Периодичность.Год;
			Иначе
				Объект.Периодичность = ПериодичностьРодителя;
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Объект.ПорядокВыполненияЭтапов) Тогда
			Объект.ПорядокВыполненияЭтапов = Перечисления.ПорядокВыполненияЭтаповПодготовкиБюджетов.Последовательно;
		КонецЕсли;
	КонецЕсли;
	
	Периодическая = Объект.Периодичность <> ПериодичностьРодителя;
	УстановитьПараметрыПериодичности();
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);

	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	Элементы.Периодическая.ТолькоПросмотр = Элементы.Периодичность.ТолькоПросмотр;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПорядокВыполненияШаговПриИзменении(Элемент)
	
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура УсловиеЗапускаПриИзменении(Элемент)
	
	УстановитьЗаголовкиЭлементовФормы(Объект, Элементы);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодическаяПриИзменении(Элемент)
	
	УстановитьПараметрыПериодичности();
	
КонецПроцедуры

&НаКлиенте
Процедура РодительПриИзменении(Элемент)
	
	УстановитьПараметрыПериодичности();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОповещениеОРазблокировке(Результат, ДополнительныеПараметры) Экспорт
	
	Элементы.Периодическая.ТолькоПросмотр = Элементы.Периодичность.ТолькоПросмотр;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ПараметрыПроцедуры = ОбщегоНазначенияУТКлиент.ПараметрыРазрешенияРедактированияРеквизитовОбъекта();
	ПараметрыПроцедуры.ОповещениеОРазблокировке = Новый ОписаниеОповещения("ОповещениеОРазблокировке", ЭтотОбъект);
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтотОбъект, ПараметрыПроцедуры);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьЗаголовкиЭлементовФормы(Объект, Элементы)
	
	Если Объект.ПорядокВыполненияЭтапов = ПредопределенноеЗначение("Перечисление.ПорядокВыполненияЭтаповПодготовкиБюджетов.Параллельно") Тогда
		Элементы.УсловиеЗапуска.Заголовок = НСтр("ru = 'Запускать все задачи';
												|en = 'Start all tasks'");
	Иначе
		Элементы.УсловиеЗапуска.Заголовок = НСтр("ru = 'Запускать первую задачу';
												|en = 'Start the first task'");
	КонецЕсли;
	
	Если Объект.УсловиеЗапуска = ПредопределенноеЗначение("Перечисление.ТипыУсловийЗапускаЭтаповПодготовкиБюджетов.ДоНачалаПериода")
		ИЛИ Объект.УсловиеЗапуска = ПредопределенноеЗначение("Перечисление.ТипыУсловийЗапускаЭтаповПодготовкиБюджетов.ДоОкончанияПериода") Тогда
		Элементы.Срок.Заголовок = НСтр("ru = 'за';
										|en = 'for'");
	Иначе
		Элементы.Срок.Заголовок = НСтр("ru = 'через';
										|en = 'every'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПараметрыПериодичности()
	
	Элементы.Периодичность.Доступность = Периодическая;
	ПериодичностьРодителя = ?(ЗначениеЗаполнено(Объект.Родитель), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Родитель,
		"Периодичность"), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "Периодичность"));
	
	Если Периодическая Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаПериодичностей.Периодичность,
		|	ТаблицаПериодичностей.Порядок
		|ПОМЕСТИТЬ УпорядоченныеПериодичности
		|ИЗ
		|	&ТаблицаПериодичностей КАК ТаблицаПериодичностей
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УпорядоченныеПериодичности.Порядок
		|ПОМЕСТИТЬ ПериодичностьТекущая
		|ИЗ
		|	УпорядоченныеПериодичности КАК УпорядоченныеПериодичности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.Периодичность КАК ПеречислениеПериодичность
		|		ПО УпорядоченныеПериодичности.Периодичность = ПеречислениеПериодичность.Ссылка
		|			И (ПеречислениеПериодичность.Ссылка = &Ссылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	УпорядоченныеПериодичности.Периодичность КАК Периодичность
		|ИЗ
		|	ПериодичностьТекущая КАК ТаблицаПериодичности
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ УпорядоченныеПериодичности КАК УпорядоченныеПериодичности
		|		ПО ТаблицаПериодичности.Порядок > УпорядоченныеПериодичности.Порядок
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Перечисление.Периодичность КАК ПеречислениеПериодичность
		|		ПО (УпорядоченныеПериодичности.Периодичность = ПеречислениеПериодичность.Ссылка)";
		
		ТаблицаПериодичностей = Перечисления.Периодичность.УпорядоченныеПериодичности(Истина);
		Запрос.УстановитьПараметр("ТаблицаПериодичностей", ТаблицаПериодичностей);
		Запрос.УстановитьПараметр("Ссылка", ПериодичностьРодителя);
		
		РезультатЗапроса = Запрос.Выполнить();
		ВыборкаДетальныеЗаписи = РезультатЗапроса.Выбрать();
		
		Элементы.Периодичность.СписокВыбора.Очистить();
		
		Пока ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			Элементы.Периодичность.СписокВыбора.Добавить(ВыборкаДетальныеЗаписи.Периодичность);
			
		КонецЦикла;
		
	Иначе
		
		Объект.Периодичность = ПериодичностьРодителя;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
	
КонецПроцедуры

#КонецОбласти
