
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Отбор") Тогда
		Если Параметры.Отбор.Свойство("Владелец") Тогда
			МодельБюджетирования = Параметры.Отбор.Владелец;
			СсылкаНаМодель = ПолучитьНавигационнуюСсылку(МодельБюджетирования);
			
			ЧастиЗаголовка = Новый Массив;
			ЧастиЗаголовка.Добавить(НСтр("ru = 'Модель бюджетирования';
										|en = 'Budgeting model'") + ":");
			ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(Строка(МодельБюджетирования), , , , СсылкаНаМодель));
			Если ПравоДоступа("Просмотр", Метаданные.Отчеты.МониторБюджетныхПроцессов)
			   И ПравоДоступа("Просмотр", Метаданные.Отчеты.ВыполнениеЗадачБюджетногоПроцесса) Тогда
				ЧастиЗаголовка.Добавить(" ");
				ЧастиЗаголовка.Добавить("(");
				ЧастиЗаголовка.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'Обзор бюджетного процесса';
																		|en = 'Budget process overview'"), , , , "Обзор"));
				ЧастиЗаголовка.Добавить(")");
			КонецЕсли;
			
			Элементы.НадписьМодельБюджетирования.Заголовок = Новый ФорматированнаяСтрока(ЧастиЗаголовка);
		КонецЕсли;
	КонецЕсли;
	
	МодельОпределенаОтбором = ЗначениеЗаполнено(МодельБюджетирования);
	Элементы.СведенияОМоделиБюджетирования.Видимость = МодельОпределенаОтбором;
	Элементы.МодельБюджетирования.Видимость = Не МодельОпределенаОтбором;
	
	Если Не ЗначениеЗаполнено(МодельБюджетирования) Тогда
		МодельБюджетирования = Справочники.МоделиБюджетирования.МодельБюджетированияПоУмолчанию();
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, "Владелец", МодельБюджетирования,,, ЗначениеЗаполнено(МодельБюджетирования));
	КонецЕсли;
	
	ИзменениеЭтаповПодготовкиБюджетов = ПравоДоступа("Изменение", Метаданные.Справочники.ЭтапыПодготовкиБюджетов);
	Если Элементы.Найти("ФормаПереместитьВыше") <> Неопределено Тогда
		Элементы.ФормаПереместитьВыше.Видимость = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	Если Элементы.Найти("ФормаПереместитьНиже") <> Неопределено Тогда
		Элементы.ФормаПереместитьНиже.Видимость = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	Если Элементы.Найти("СписокКонтекстноеМенюСоздать") <> Неопределено Тогда
		Элементы.СписокКонтекстноеМенюСоздать.Доступность = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	Если Элементы.Найти("СписокКонтекстноеМенюСоздатьГруппу") <> Неопределено Тогда
		Элементы.СписокКонтекстноеМенюСоздатьГруппу.Доступность = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	Если Элементы.Найти("СписокКонтекстноеМенюСкопировать") <> Неопределено Тогда
		Элементы.СписокКонтекстноеМенюСкопировать.Доступность = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	Если Элементы.Найти("СписокКонтекстноеМенюПеренестиЭлемент") <> Неопределено Тогда
		Элементы.СписокКонтекстноеМенюПеренестиЭлемент.Доступность = ИзменениеЭтаповПодготовкиБюджетов;
	КонецЕсли;
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура НадписьМодельБюджетированияОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	Если НавигационнаяСсылка = "Обзор" Тогда
		ОткрытьФорму("Отчет.МониторБюджетныхПроцессов.Форма", 
				Новый Структура("МодельБюджетирования, СформироватьПриОткрытии", МодельБюджетирования, Истина), 
				ЭтаФорма, 
				МодельБюджетирования);
		СтандартнаяОбработка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаСервере
Процедура СместитьЭлемент(Ссылка, Направление)
	
	Справочники.ЭтапыПодготовкиБюджетов.СдвинутьЭлемент(Ссылка, Направление);
	Элементы.Список.Обновить();
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьВыше(Команда)
	
	СместитьЭлемент(Элементы.Список.ТекущаяСтрока, -1);
	
КонецПроцедуры

&НаКлиенте
Процедура ПереместитьНиже(Команда)
	
	СместитьЭлемент(Элементы.Список.ТекущаяСтрока, 1);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

&НаКлиенте
Процедура МодельБюджетированияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Владелец", МодельБюджетирования,,, ЗначениеЗаполнено(МодельБюджетирования));
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	ПоказатьВсеУровниИерархии();

КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	ПоказатьУровеньИерархии(2);

КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////
// ВСПОМОГАТЕЛЬНЫЕ ПРОЦЕДУРЫ И ФУНКЦИИ

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ПоказатьУровеньИерархии(УровеньИерархии)
	
	РезультатСтруктура = ПолучитьДваВерхнихУровняИерархииСпр(МодельБюджетирования);
	Строки = РезультатСтруктура.ВерхниеУровниИерархииСпр;
	УровниСпр = РезультатСтруктура.УровниИерархииСпр;
		
    Кол = Строки.Количество();
	Сч = 0;
    Пока Сч < Кол Цикл

        ТекСтрока = Строки[Сч];

		Если Элементы.Список.Развернут(ТекСтрока) И УровниСпр.Получить(ТекСтрока) >= УровеньИерархии Тогда
			Элементы.Список.Свернуть(ТекСтрока);
		ИначеЕсли Не Элементы.Список.Развернут(ТекСтрока) И УровниСпр.Получить(ТекСтрока) < УровеньИерархии Тогда
			Элементы.Список.Развернуть(ТекСтрока);
		КонецЕсли;

        Сч = Сч + 1;

    КонецЦикла;

КонецФункции

&НаКлиенте
Функция ПоказатьВсеУровниИерархии()
	
	РезультатСтруктура = ПолучитьДваВерхнихУровняИерархииСпр(МодельБюджетирования);
	Строки = РезультатСтруктура.ВерхниеУровниИерархииСпр;
	УровниСпр = РезультатСтруктура.УровниИерархииСпр;
		
    Кол = Строки.Количество();
	Сч = 0;
    Пока Сч < Кол Цикл

        ТекСтрока = Строки[Сч];
		Сч = Сч + 1;
		
		Если УровниСпр.Получить(ТекСтрока) <> 1 Тогда
			Продолжить;
		КонецЕсли;

		Элементы.Список.Развернуть(ТекСтрока,Истина);

    КонецЦикла;

КонецФункции

&НаСервереБезКонтекста
Функция ПолучитьДваВерхнихУровняИерархииСпр(МодельБюджетирования)
		
	Запрос = Новый Запрос;
	Запрос.Текст =  "ВЫБРАТЬ
	                |	ЭтапыПодготовкиБюджетов.Ссылка
	                |ПОМЕСТИТЬ ПервыйУровень
	                |ИЗ
	                |	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	                |ГДЕ
	                |	ЭтапыПодготовкиБюджетов.Владелец = &Владелец
	                |	И ЭтапыПодготовкиБюджетов.Родитель = ЗНАЧЕНИЕ(Справочник.ЭтапыПодготовкиБюджетов.ПустаяСсылка)
	                |;
	                |
	                |////////////////////////////////////////////////////////////////////////////////
	                |ВЫБРАТЬ
	                |	ПервыйУровень.Ссылка,
	                |	1 КАК Уровень
	                |ИЗ
	                |	ПервыйУровень КАК ПервыйУровень
	                |
	                |ОБЪЕДИНИТЬ ВСЕ
	                |
	                |ВЫБРАТЬ
	                |	ЭтапыПодготовкиБюджетов.Ссылка,
	                |	2
	                |ИЗ
	                |	Справочник.ЭтапыПодготовкиБюджетов КАК ЭтапыПодготовкиБюджетов
	                |ГДЕ
	                |	ЭтапыПодготовкиБюджетов.Родитель В
	                |			(ВЫБРАТЬ
	                |				А.Ссылка
	                |			ИЗ
	                |				ПервыйУровень КАК А)";
					
	Запрос.УстановитьПараметр("Владелец",МодельБюджетирования);
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Результат = Новый Структура;
	ВерхниеУровниИерархииСпр = Новый Массив();
	УровниИерархииСпр = Новый Соответствие;
	
	Пока Выборка.Следующий() Цикл
		ВерхниеУровниИерархииСпр.Добавить(Выборка.Ссылка);
		УровниИерархииСпр.Вставить(Выборка.Ссылка,Выборка.Уровень);
	КонецЦикла;
	
	Результат.Вставить("ВерхниеУровниИерархииСпр",ВерхниеУровниИерархииСпр);
	Результат.Вставить("УровниИерархииСпр",УровниИерархииСпр);
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

