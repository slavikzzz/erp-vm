#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ПротоколОбменаИС.ОтработатьВходящийДокументПротоколаОбмена(ЭтотОбъект);
	МодульИнтеграцияИС = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияИС");

	Если НЕ Метаданные.ОпределяемыеТипы.ДокументыИСМП.Тип.СодержитТип(ТипЗнч(Документ)) Тогда
		РеквизитыДокументаОснования = Новый ФиксированнаяСтруктура(
			ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ, "Ссылка, Проведен"));
		Организация = МодульИнтеграцияИС.ОрганизацияИзПрикладногоОбъекта(Документ);
	Иначе
		//@skip-check bsl-legacy-check-string-literal
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Документ, "Организация");
	КонецЕсли;
	
	УстановитьУсловноеОформление();
	ЗаполнитьДеревоФайлов();
	
	// ИнтеграцияИС
	Если РеквизитыДокументаОснования <> Неопределено Тогда
		МодульИнтеграцияИС.ПриСозданииНаСервереВФормеДокументаОснования(
			ЭтотОбъект,
			РеквизитыДокументаОснования,
			МодульИнтеграцияИС.ПараметрыИнтеграцииВФорме("ИСМП", МодульИнтеграцияИС.ИмяЭлементаДляРазмещения()));
	КонецЕсли;
	// Конец ИнтеграцияИС
	
	ОбщегоНазначенияСобытияФормИСПереопределяемый.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОбщегоНазначенияИСКлиент.РазвернутьДеревоРекурсивно(ДеревоФайлов, Элементы.ДеревоФайлов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	ПерезаполнитьДерево = Ложь;
	
	Если ИмяСобытия = ОбменДаннымиИСКлиентСервер.ИмяСобытияИзмененоСостояние(ОбщегоНазначенияИСМПКлиентСервер.ИмяПодсистемы())
	 И (Параметр.Ссылка = Документ Или (Параметр.Свойство("Основание") И Параметр.Основание = Документ)) Тогда
		
		ПерезаполнитьДерево = Истина;
		
	ИначеЕсли ИмяСобытия = ОбменДаннымиИСКлиентСервер.ИмяСобытияВыполненОбмен(ОбщегоНазначенияИСМПКлиентСервер.ИмяПодсистемы())
	 И (Параметр = Неопределено
		Или (ТипЗнч(Параметр) = Тип("Структура") И Параметр.ОбновлятьСтатусВФормахДокументов)) Тогда
		
		ПерезаполнитьДерево = Истина;
		
	ИначеЕсли СтрНачинаетсяС(ИмяСобытия, ОбменДаннымиИСКлиентСервер.ИмяСобытияИзмененОбъект(ОбщегоНазначенияИСМПКлиентСервер.ИмяПодсистемы())) Тогда
		
		ПерезаполнитьДерево = Истина;
		
	КонецЕсли;
	
	Если ПерезаполнитьДерево Тогда
		ОбновитьДерево();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ТекстДокументаИСМПОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	// ИнтеграцияИС
	Если РеквизитыДокументаОснования <> Неопределено Тогда
		МодульИнтеграцияИСКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ИнтеграцияИСКлиент");
		МодульИнтеграцияИСКлиент.ОбработкаНавигационнойСсылкиВФормеДокументаОснования(
			ЭтотОбъект,
			РеквизитыДокументаОснования,
			Элемент,
			НавигационнаяСсылкаФорматированнойСтроки,
			СтандартнаяОбработка);
	КонецЕсли;
	// Конец ИнтеграцияИС
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоФайлов

&НаКлиенте
Процедура ДеревоФайловВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ПоказатьСообщенияОперации(ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ОбновитьДерево();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьОбмен(Команда)
	
	ОчиститьСообщения();
	
	РезультатОбмена = ОбменДаннымиИСМПВызовСервера.ВыполнитьОбмен(
		Организация, УникальныйИдентификатор, Документ);
	
	ОбменДаннымиИСМПКлиент.ОбработатьРезультатОбмена(
		РезультатОбмена, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСообщенияXML(Команда)
	
	ПоказатьСообщенияОперации(Элементы.ДеревоФайлов.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура РассчитатьСтатус(Команда)
	
	ОчиститьСообщения();
	
	ТекущиеДанные = Элементы.ДеревоФайлов.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	РассчитатьСтатусНаСервере(ТекущиеДанные.Документ);
	
	Оповестить(ОбменДаннымиИСКлиентСервер.ИмяСобытияВыполненОбмен(ОбщегоНазначенияИСМПКлиентСервер.ИмяПодсистемы()));
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьДерево()
	
	ЗаполнитьДеревоФайлов();
	ОбщегоНазначенияИСКлиент.РазвернутьДеревоРекурсивно(ДеревоФайлов, Элементы.ДеревоФайлов);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
	ПротоколОбменаИС.УстановитьУсловноеОформлениеПротоколаОбмена(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура РассчитатьСтатусНаСервере(ДокументСсылка)
	
	ОбменДаннымиИСМП.РассчитатьСтатусДокументаПоДаннымПротоколаОбмена(ДокументСсылка);
	
КонецПроцедуры

#Область ЗаполнениеДереваФайлов

&НаСервере
Процедура ЗаполнитьДеревоФайлов()
	
	ТекстДокументаИСМП = "";
	ДеревоФайлов.ПолучитьЭлементы().Очистить();
	
	Строки = Новый Массив;
	Строки.Добавить(НСтр("ru = 'Основание:';
						|en = 'Основание:'"));
	Строки.Добавить(" ");
	Строки.Добавить(Новый ФорматированнаяСтрока(Строка(Документ),,,,ПолучитьНавигационнуюСсылку(Документ)));
	ТекстДокумент = Новый ФорматированнаяСтрока(Строки);
	
	Если Не ДляДокументаОснования Тогда
		
		Строки = Новый Массив;
		Строки.Добавить(НСтр("ru = 'Документ:';
							|en = 'Документ:'"));
		Строки.Добавить(" ");
		Строки.Добавить(Новый ФорматированнаяСтрока(Строка(Документ),,,,ПолучитьНавигационнуюСсылку(Документ)));
		ТекстДокумент = Новый ФорматированнаяСтрока(Строки);
		
		ПротоколОбменаИСМП.ЗаполнитьПоДокументу(ЭтотОбъект, ПротоколОбменаИСМП.ТаблицаДокументы(Документ));
		Возврат;
		
	КонецЕсли;
	
	Если ОбщегоНазначенияИСМП.ЭтоРасширеннаяВерсияГосИС() Тогда
		МодульИнтеграцияИСМП = ОбщегоНазначения.ОбщийМодуль("ИнтеграцияИСМП");
		МодульИнтеграцияИСМП.ЗапронитьПротоколОбменаПоОснованиюДокумента(ЭтотОбъект);
	КонецЕсли;
	
	Элементы.ИнтеграцияИСМП_ИнформацияОДокументах.Видимость = Истина;
	
КонецПроцедуры

#КонецОбласти

//@skip-warning
&НаКлиенте
Процедура Подключаемый_ВыполнитьОбменОбработкаОжидания()
	
	ОбменДаннымиИСМПКлиент.ПродолжитьВыполнениеОбмена(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСообщенияОперации(ВыбраннаяСтрока)
	
	ДанныеСтроки = Элементы.ДеревоФайлов.ДанныеСтроки(ВыбраннаяСтрока);
	Если ДанныеСтроки <> Неопределено И ДанныеСтроки.ПолучитьЭлементы().Количество() = 0 Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Источник", ДанныеСтроки.Файл);
		ПараметрыФормы.Вставить("Заголовок", СтрШаблон(НСтр("ru = 'Сообщения операции: %1';
															|en = 'Сообщения операции: %1'"), ДанныеСтроки.Операция));
		
		ОткрытьФорму(
			"ОбщаяФорма.ЛогОбменаИСМП",
			ПараметрыФормы,
			ЭтотОбъект,,,,,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		ОбщегоНазначенияИСКлиент.ПоказатьСообщенияОперации(ЭтотОбъект, "ИСМП", ВыбраннаяСтрока);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти