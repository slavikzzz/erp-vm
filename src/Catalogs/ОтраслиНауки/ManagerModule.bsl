#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ для элементов справочника.
//
// Возвращаемое значение:
//  Массив из Строка - имена реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПервоначальногоЗаполненияИОбновленияИБ

// Процедура выполняет первоначальное заполнение классификатора.
Процедура НачальноеЗаполнение() Экспорт
	
	ЗаполнитьИзМакета();	
	
КонецПроцедуры

Процедура ЗаполнитьИзМакета()
	
	Запрос = Новый Запрос;
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтраслиНауки.Ссылка,
	|	ОтраслиНауки.Код,
	|	ОтраслиНауки.Наименование
	|ИЗ
	|	Справочник.ОтраслиНауки КАК ОтраслиНауки";
		
	ТаблицаСуществующихОтраслей = Запрос.Выполнить().Выгрузить();
	
	ТекстовыйДокумент = Справочники.ОтраслиНауки.ПолучитьМакет("ОтраслиНауки");
	ТаблицаКлассификатора = ОбщегоНазначения.ПрочитатьXMLВТаблицу(ТекстовыйДокумент.ПолучитьТекст()).Данные;
	
	Для каждого СтрокаКлассификатора Из ТаблицаКлассификатора Цикл
		
		Код = СтрокаКлассификатора.Code;
		Наименование = СтрокаКлассификатора.Name;
		
		СтрокаОтрасли = ТаблицаСуществующихОтраслей.Найти(Код, "Код");
		Если СтрокаОтрасли = Неопределено Тогда
			СправочникОбъект = Справочники.ОтраслиНауки.СоздатьЭлемент();
		Иначе
			СправочникОбъект = СтрокаОтрасли.Ссылка.ПолучитьОбъект();
		КонецЕсли;
		
		Если СправочникОбъект.Наименование <> Наименование Тогда
			
			СправочникОбъект.Код = Код;
			СправочникОбъект.Наименование = Наименование;
			СправочникОбъект.ДополнительныеСвойства.Вставить("ЗаписьОбщихДанных");
			СправочникОбъект.ДополнительныеСвойства.Вставить("ПроверятьБизнесЛогикуПриЗаписи");
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(СправочникОбъект);
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли