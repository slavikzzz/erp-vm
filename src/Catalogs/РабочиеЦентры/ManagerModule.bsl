#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает имена блокируемых реквизитов для механизма блокирования реквизитов БСП
//
// Возвращаемое значение:
//	Массив - имена блокируемых реквизитов.
//
Функция ПолучитьБлокируемыеРеквизитыОбъекта() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("ВидРабочегоЦентра;Подразделение");
	Результат.Добавить("Участок");
	
	Возврат Результат;
	
КонецФункции

// Возвращает имена реквизитов, которые не должны отображаться в списке реквизитов обработки ГрупповоеИзменениеОбъектов.
//
//	Возвращаемое значение:
//		Массив - массив имен реквизитов.
//
Функция РеквизитыНеРедактируемыеВГрупповойОбработке() Экспорт
	
	НеРедактируемыеРеквизиты = Новый Массив;
	НеРедактируемыеРеквизиты.Добавить("ВидРабочегоЦентра");
	
	Возврат НеРедактируемыеРеквизиты;
	
КонецФункции

#Область Команды

// Заполняет список команд печати.
// 
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РабочийЦентрЭтикеткаЭлемент";
	КомандаПечати.Представление = НСтр("ru = 'Этикетка рабочего центра';
										|en = 'Work center label'");
	КомандаПечати.СписокФорм = "ФормаЭлемента";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Обработчик = "УправлениеПечатьюУПКлиент.ПечатьЭтикеткаРабочегоЦентра";
	
	//
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "РабочийЦентрЭтикеткаСписок";
	КомандаПечати.Представление = НСтр("ru = 'Этикетка рабочего центра';
										|en = 'Work center label'");
	КомандаПечати.СписокФорм = "СтруктураРабочихЦентров,ФормаСписка";
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов - см. УправлениеПечатьюПереопределяемый.ПриПечати.МассивОбъектов
//  ПараметрыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыПечати
//  КоллекцияПечатныхФорм - см. УправлениеПечатьюПереопределяемый.ПриПечати.КоллекцияПечатныхФорм
//  ОбъектыПечати - см. УправлениеПечатьюПереопределяемый.ПриПечати.ОбъектыПечати
//  ПараметрыВывода - см. УправлениеПечатьюПереопределяемый.ПриПечати.ПараметрыВывода
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РабочийЦентрЭтикеткаЭлемент") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РабочийЦентрЭтикеткаЭлемент",
			НСтр("ru = 'Этикетка рабочего центра';
				|en = 'Work center label'"),
			СформироватьПечатнуюФормуЭтикеткаРабочегоЦентра(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
			
	ИначеЕсли УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "РабочийЦентрЭтикеткаСписок") Тогда 
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"РабочийЦентрЭтикеткаСписок",
			НСтр("ru = 'Этикетка рабочего центра';
				|en = 'Work center label'"),
			СформироватьПечатнуюФормуЭтикеткаРабочегоЦентра(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
		
	КонецЕсли;
	
	ФормированиеПечатныхФорм.ЗаполнитьПараметрыОтправки(
		ПараметрыВывода.ПараметрыОтправки,
		МассивОбъектов,
		КоллекцияПечатныхФорм);
	
КонецПроцедуры

Функция СформироватьПечатнуюФормуЭтикеткаРабочегоЦентра(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_РЦ_ФИЗЛИЦО";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.РабочиеЦентры.ПФ_MXL_РабочийЦентрЭтикетка");
	Выборка = ДанныеДляПечатиЭтикеткиРабочегоЦентра(МассивОбъектов);
	
	Пока Выборка.Следующий() Цикл
	
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		Область = Макет.ПолучитьОбласть("Этикетка");
		
		Область.Параметры.Заполнить(Выборка);
			
		ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
			ТабличныйДокумент,
			Макет,
			Область,
			Выборка.Ссылка);
		
		ТабличныйДокумент.Вывести(Область);
		
	КонецЦикла;
	
	Если ПараметрыПечати.Свойство("ПечататьФизЛица") И ПараметрыПечати.ПечататьФизЛица Тогда
		
		Макет = УправлениеПечатью.МакетПечатнойФормы("Справочник.РабочиеЦентры.ПФ_MXL_ФизЛицоЭтикетка");
		Выборка = ДанныеДляПечатиФизлица(МассивОбъектов);
		
		Пока Выборка.Следующий() Цикл
		
			НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
			
			Область = Макет.ПолучитьОбласть("Этикетка");
			
			Область.Параметры.Заполнить(Выборка);
				
			ШтрихкодированиеПечатныхФорм.ВывестиШтрихкодВТабличныйДокумент(
				ТабличныйДокумент,
				Макет,
				Область,
				Выборка.Ссылка);
			
			ТабличныйДокумент.Вывести(Область);
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТабличныйДокумент;
КонецФункции

Функция ДанныеДляПечатиЭтикеткиРабочегоЦентра(Ссылки)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	РабочиеЦентры.Ссылка                           КАК Ссылка,
		|	ПРЕДСТАВЛЕНИЕ(РабочиеЦентры.Ссылка)            КАК РЦПредставление,
		|	ПРЕДСТАВЛЕНИЕ(РабочиеЦентры.ВидРабочегоЦентра) КАК ВРЦПредставление
		|ИЗ
		|	Справочник.РабочиеЦентры КАК РабочиеЦентры
		|ГДЕ
		|	РабочиеЦентры.Ссылка В (&Ссылки)");
	
	Запрос.УстановитьПараметр("Ссылки", Ссылки);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

Функция ДанныеДляПечатиФизлица(Ссылки)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ФизическиеЛица.Ссылка КАК Ссылка,
		|	ФизическиеЛица.ФИО КАК ФИО,
		|	РабочиеЦентры.ВидРабочегоЦентра.Подразделение КАК Подразделение
		|ИЗ
		|	Справочник.ФизическиеЛица КАК ФизическиеЛица,
		|	Справочник.РабочиеЦентры КАК РабочиеЦентры
		|ГДЕ
		|	ФизическиеЛица.Ссылка В(&ФизЛица)
		|	И РабочиеЦентры.Ссылка В (&РабочийЦентр)");
	
	Запрос.УстановитьПараметр("РабочийЦентр", Ссылки);
	
	Запрос.УстановитьПараметр("ФизЛица", Ссылки);
	
	УстановитьПривилегированныйРежим(Истина);
	Возврат Запрос.Выполнить().Выбрать();
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли