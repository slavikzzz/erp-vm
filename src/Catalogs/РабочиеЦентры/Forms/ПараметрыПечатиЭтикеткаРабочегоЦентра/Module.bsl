
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ Параметры.Свойство("ОбъектыПечати") Тогда
		ВызватьИсключение НСтр("ru = 'Не заполнено значение параметра ""Объекты печати""';
								|en = 'Parameter ""Print objects"" is required'"); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПечататьИсполнителейПриИзменении(Элемент)
	
	Элементы.ФизическиеЛица.Доступность = ПечататьФизЛица;
	
	Если Не ПечататьФизЛица Тогда
		ОчиститьТаблицу();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Печать(Команда)
	
	СписокОбъектов = Новый Массив();
	
	Для каждого Ссылка Из Параметры.ОбъектыПечати Цикл
		СписокОбъектов.Добавить(Ссылка);
	КонецЦикла;
	
	Если ПечататьФизЛица Тогда
		
		Для каждого Строка Из ФизическиеЛица Цикл
			СписокОбъектов.Добавить(Строка.ФизЛицо);
		КонецЦикла;
		
	КонецЕсли;
	
	ИменаМакетов = Новый Массив();
	ИменаМакетов.Добавить("РабочийЦентрЭтикеткаЭлемент");
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Справочник.РабочиеЦентры",
			ИменаМакетов,
			СписокОбъектов,
			ВладелецФормы,
			ЗначенияПараметровПечати());
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция ЗначенияПараметровПечати()
	
	Результат = Новый Структура;
	
	Результат.Вставить("ПечататьФизЛица", ПечататьФизЛица);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	Элементы.ФизическиеЛица.Доступность = ПечататьФизЛица;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТаблицу()
	ФизическиеЛица.Очистить();
КонецПроцедуры

#КонецОбласти
