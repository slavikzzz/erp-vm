#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает массив видов стажа с категорией, переданной в параметре.
//
// Параметры:
//		КатегорияСтажа - ПеречислениеСсылка.КатегорииСтажа
//
// Возвращаемое значение:
//		Массив ссылок на элементы видов стажей.
//
Функция ВидыСтажаПоКатегории(КатегорияСтажа) Экспорт
	
	Возврат ВидыСтажаПоКатегориям(ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(КатегорияСтажа));
	
КонецФункции

// Добавляет новый вид стажа с категорией "ВыслугаЛет", 
// если вид стажа с такой категорией есть, то возвращается первый существующий вид стажа.
//
// Возвращаемое значение:
//		СправочникСсылка.ВидыСтажа
//
Функция СоздатьВидСтажаЗаВыслугуЛет() Экспорт
	
	// Стаж на надбавку за выслугу лет.
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Стаж на надбавку за выслугу лет';
								|en = 'Length of service for seniority pay'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.ВыслугаЛет;
	Возврат ЗаписатьВидСтажа(Описание);
	
КонецФункции

// Добавляет новый вид стажа с категорией "НаГосударственнойСлужбе", 
// если вид стажа с такой категорией есть, то возвращается первый существующий вид стажа.
//
// Параметры:
//		ИспользоватьГосударственнуюСлужбу - Булево
//
// Возвращаемое значение:
//		СправочникСсылка.ВидыСтажа
//
Функция СоздатьВидСтажаЗаВыслугуЛетНаГосударственнойСлужбе(ИспользоватьГосударственнуюСлужбу) Экспорт
	
	// Стаж на надбавку за выслугу лет.
	Описание = ОписаниеВидаСтажа();
	Если ИспользоватьГосударственнуюСлужбу Тогда
		Описание.Наименование = НСтр("ru = 'Стаж государственной службы';
									|en = 'Length of public service'");
	Иначе
		Описание.Наименование = НСтр("ru = 'Стаж муниципальной службы';
									|en = 'Length of municipal service'");
	КонецЕсли;
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.ВыслугаЛетНаГосударственнойСлужбе;
	Возврат ЗаписатьВидСтажа(Описание);
	
КонецФункции 

// Добавляет новый вид стажа с категорией "НаГосударственнойСлужбе", 
// если вид стажа с такой категорией есть, то возвращается первый существующий вид стажа.
//
// Параметры:
//		ИспользоватьРасчетДенежногоДовольствияВоеннослужащих - Булево
//
// Возвращаемое значение:
//		СправочникСсылка.ВидыСтажа
//
Функция СоздатьВидСтажаЗаВыслугуЛетНаВоеннойСлужбе(ИспользоватьРасчетДенежногоДовольствияВоеннослужащих) Экспорт
	
	// Стаж на надбавку за выслугу лет.
	Описание = ОписаниеВидаСтажа();
	Если ИспользоватьРасчетДенежногоДовольствияВоеннослужащих Тогда
		Описание.Наименование = НСтр("ru = 'Стаж военной службы';
									|en = 'Length of military service'");
	Иначе
		Описание.Наименование = НСтр("ru = 'Стаж службы (выслуги лет)';
									|en = 'Length of service (seniority)'");
	КонецЕсли;
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.ВыслугаЛетНаВоеннойСлужбе;
	Возврат ЗаписатьВидСтажа(Описание);
	
КонецФункции

// Добавляет новый вид стажа с категорией "Северный", 
// если вид стажа с такой категорией есть, то возвращается первый существующий вид стажа.
//
// Возвращаемое значение:
//		СправочникСсылка.ВидыСтажа
//
Функция СоздатьСтажРаботыНаСевере() Экспорт
	
	// Стаж на надбавку за выслугу лет.
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Стаж работы на Севере';
								|en = 'Northern length of service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Северный;
	Возврат ЗаписатьВидСтажа(Описание);
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ВидыСтажаПоКатегориям(КатегорииСтажа) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("КатегорииСтажа", КатегорииСтажа);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВидыСтажа.Ссылка КАК ВидСтажа
	|ИЗ
	|	Справочник.ВидыСтажа КАК ВидыСтажа
	|ГДЕ
	|	ВидыСтажа.КатегорияСтажа В(&КатегорииСтажа)";
	
	ВидыСтажа = Запрос.Выполнить().Выгрузить();
	
	Возврат ВидыСтажа.ВыгрузитьКолонку("ВидСтажа");
	
КонецФункции

Функция СтажРаботыНаСевере() Экспорт
	
	ВидыСеверногоСтажа = ВидыСтажаПоКатегории(Перечисления.КатегорииСтажа.Северный);
	Если ВидыСеверногоСтажа.Количество() > 0 Тогда
		Возврат ВидыСеверногоСтажа[0];
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ЗаписатьВидСтажа(Описание, ПроверятьНаличиеВидаСтажа = Истина)
	
	Если ПроверятьНаличиеВидаСтажа Тогда
		ВидыСтажаПоОписанию = ВидыСтажаПоКатегории(Описание.КатегорияСтажа);
		Если ВидыСтажаПоОписанию.Количество() > 0 Тогда
			Возврат ВидыСтажаПоОписанию[0];
		КонецЕсли;
	КонецЕсли;
	
	ВидСтажаОбъект = Справочники.ВидыСтажа.СоздатьЭлемент();
	ВидСтажаОбъект.Наименование = Описание.Наименование;
	ВидСтажаОбъект.КатегорияСтажа = Описание.КатегорияСтажа;
	ВидСтажаОбъект.Записать();
	
	Возврат ВидСтажаОбъект.Ссылка;
	
КонецФункции

Функция ОписаниеВидаСтажа()
	
	Описание = Новый Структура(
	"Наименование,
	|КатегорияСтажа");
	
	Возврат Описание;
	
КонецФункции

#Область ПервоначальноеЗаполнениеИОбновлениеИнформационнойБазы

Процедура СоздатьВидыСтажаПоНастройкам() Экспорт
	
	// Непрерывный стаж
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Непрерывный стаж';
								|en = 'Continuous service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Непрерывный;
	ЗаписатьВидСтажа(Описание);
	
	// Общий научно-педагогический стаж работы.
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Общий научно-педагогический стаж работы';
								|en = 'Total length of academic and teaching service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.ОбщийНаучноПедагогический;
	ЗаписатьВидСтажа(Описание);
	
	// Общий стаж
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Общий стаж';
								|en = 'Total length of service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Общий;
	ЗаписатьВидСтажа(Описание);
	
	// Педагогический стаж
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Педагогический стаж';
								|en = 'Length of teaching service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Педагогический;
	ЗаписатьВидСтажа(Описание);
	
	// Страховой стаж для оплаты больничных листов.
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Страховой стаж для оплаты больничных листов';
								|en = 'Pensionable service for sick leave record payment'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Страховой;
	ЗаписатьВидСтажа(Описание);
	
	// Стаж для оплаты больничных листов с учетом нестраховых периодов (с 2010 года).
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Стаж для оплаты больничных листов с учетом нестраховых периодов (с 2010 года)';
								|en = 'Length of service for sick pay including uninsured periods (since 2010)'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.РасширенныйСтраховой;
	ЗаписатьВидСтажа(Описание);
	
	// Стаж на надбавку за выслугу лет.
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Стаж на надбавку за выслугу лет';
								|en = 'Length of service for seniority pay'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.ВыслугаЛет;
	ЗаписатьВидСтажа(Описание);
	
	// Прочий стаж
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Прочий стаж';
								|en = 'Other service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Прочее;
	ЗаписатьВидСтажа(Описание);
	
	// Северный стаж
	ВостребованностьРКиСН = РасчетЗарплаты.ВостребованностьРКиСН();
	Если ВостребованностьРКиСН.СевернаяНадбавка Тогда
		Описание = ОписаниеВидаСтажа();
		Описание.Наименование = НСтр("ru = 'Стаж работы на Севере';
									|en = 'Northern length of service'");
		Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Северный;
		ЗаписатьВидСтажа(Описание);
	КонецЕсли;
	
	// Медицинский стаж
	// Медицинский стаж
	Описание = ОписаниеВидаСтажа();
	Описание.Наименование = НСтр("ru = 'Медицинский стаж';
								|en = 'Length of medical service'");
	Описание.КатегорияСтажа = Перечисления.КатегорииСтажа.Медицинский;
	ЗаписатьВидСтажа(Описание);

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли