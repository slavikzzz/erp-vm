
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НепроверяемыеРеквизиты = Новый Массив;
	НепроверяемыеРеквизиты.Добавить("НастройкиЗаполненияСубконто.Выражение");
	НепроверяемыеРеквизиты.Добавить("Наименование");
	
	ПроверитьНастройкиЗаполненияСубконто(Отказ);
	
	Если НЕ СчетРеглУчета.Пустая() И НЕ СчетМеждународногоУчета.Пустая() Тогда
		СчетаУчета = Новый Массив();
		СчетаУчета.Добавить(СчетРеглУчета);
		СчетаУчета.Добавить(СчетМеждународногоУчета);
		
		ЗначенияРеквизитаЗабалансовый = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(СчетаУчета, "Забалансовый");
		
		Если ЗначенияРеквизитаЗабалансовый[СчетРеглУчета] <> ЗначенияРеквизитаЗабалансовый[СчетМеждународногоУчета] Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Для выбранного счета регламентированного учета укажите %1 счет международного учета.';
											|en = 'For the selected local accounting account, specify %1 financial accounting account.'"),
				?(ЗначенияРеквизитаЗабалансовый[СчетРеглУчета], НСтр("ru = 'забалансовый';
																	|en = 'off-balance'"), НСтр("ru = 'балансовый';
																									|en = 'balance'")));
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,, "СчетМеждународногоУчета", "Объект", Отказ);
		КонецЕсли;
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если УстановленДополнительныйОтбор Тогда
		Наименование = "%СчетРеглУчета, %ПредставлениеОтбора - %СчетМеждународногоУчета";
	Иначе
		Наименование = "%СчетРеглУчета - %СчетМеждународногоУчета";
	КонецЕсли;
	Наименование = СтрЗаменить(Наименование, "%СчетРеглУчета", СчетРеглУчета);
	Наименование = СтрЗаменить(Наименование, "%СчетМеждународногоУчета", СчетМеждународногоУчета);
	
	Если СтрДлина(ПредставлениеОтбора) > 40 Тогда
		ОтбораДляНаименования = Лев(ПредставлениеОтбора, 40) + "...";
	Иначе
		ОтбораДляНаименования = ПредставлениеОтбора;
	КонецЕсли;
	Наименование = СтрЗаменить(Наименование, "%ПредставлениеОтбора", ОтбораДляНаименования);
	
	УстановкаРеквизитовИсторииПереходаНаНовыеФормулы();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановкаРеквизитовИсторииПереходаНаНовыеФормулы()
	
	Для Каждого СтрокаТЧ Из НастройкиЗаполненияСубконто Цикл
		Если НЕ ЗначениеЗаполнено(СтрокаТЧ.ВыражениеИсторияПереходаНаНовыеФормулы)
			И ЗначениеЗаполнено(СтрокаТЧ.Выражение) Тогда
			СтрокаТЧ.ВыражениеИсторияПереходаНаНовыеФормулы = СтрокаТЧ.Выражение;
		КонецЕсли;
	КонецЦикла;
	УдалитьПереходНаНовыеФормулыВыполнен = Истина;
	
КонецПроцедуры

Процедура ПроверитьНастройкиЗаполненияСубконто(Отказ)
	
	ШаблонСообщения = НСтр("ru = 'Не настроено заполнение для субконто ""%1""';
							|en = 'Population of the ""%1"" extra dimension is not set up'");
	Для каждого Строка Из НастройкиЗаполненияСубконто Цикл
		
		НеНастроеноЗаполнениеСубконто = Ложь;
		Если Не ЗначениеЗаполнено(Строка.Выражение) И Строка.ЗаполнятьИзИсточника Тогда
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Строка.ВидСубконто);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли