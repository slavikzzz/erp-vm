
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОрганизацияСсылка				= Параметры.ОрганизацияСсылка;
	ВидОрганизации					= Параметры.ВидОрганизации;
	ПрименятьРайонныйКоэффициент	= Параметры.ПрименятьРайонныйКоэффициент;
	ПрименятьСевернуюНадбавку		= Параметры.ПрименятьСевернуюНадбавку;
	РайонныйКоэффициент				= Параметры.РайонныйКоэффициент;
	РайонныйКоэффициентРФ			= Параметры.РайонныйКоэффициентРФ;
	ГрафикРаботыСотрудников			= Параметры.ГрафикРаботыСотрудников;
	ПроцентСевернойНадбавки			= Параметры.ПроцентСевернойНадбавки;
	
	//++ НЕ УТ
	РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтаФорма, "ТерриториальныеУсловияПФР", ОрганизацияСсылка);
	
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьОтображениеПолейВводаПроцентаЗаОсобыеКлиматическиеУсловия(
		ЭтаФорма, ТерриториальныеУсловияПФР.ТерриториальныеУсловияПФР);
		
	//-- НЕ УТ
	
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы,, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтаФорма, ОрганизацияСсылка, ИмяСобытия, Параметр, Источник);
	//-- НЕ УТ
	Возврат;	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//++ НЕ УТ	
	Если ЗначениеЗаполнено(ТерриториальныеУсловияПФР.ТерриториальныеУсловияПФР)
		И Не ЗначениеЗаполнено(ТерриториальныеУсловияПФР.Период) Тогда
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
				НСтр("ru = 'Поле ""действуют с"" не заполнено.';
					|en = 'The ""valid from"" field is not populated.'"),,
				"ТерриториальныеУсловияПФР.Период",,
				Отказ);
	КонецЕсли;
	//-- НЕ УТ
	Возврат;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПрименятьРайонныйКоэффициентПриИзменении(Элемент)
	УстановитьДоступностьЭлементовФормы(ЭтаФорма);
	РайонныйКоэффициент   = 1;
	РайонныйКоэффициентРФ = 1;
КонецПроцедуры

&НаКлиенте
Процедура ПрименятьСевернуюНадбавкуПриИзменении(Элемент)
	
	Если НЕ ПрименятьСевернуюНадбавку Тогда
		ПрименятьСевернуюНадбавкуПриИзмененииНаСервере();
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ТерриториальныеУсловияПФРПриИзменении(Элемент)
	ПриИзмененииТерриториальныхУсловий(ЭтаФорма);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ТерриториальныеУсловияПФРИстория(Команда)
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("ТерриториальныеУсловияПФР", ОрганизацияСсылка, ЭтаФорма, ТолькоПросмотр);
	//-- НЕ УТ
	Возврат;	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПрименятьСевернуюНадбавкуПриИзмененииНаСервере()
	
	//++ НЕ УТ
	ТерриторииСОсобымиКлиматическимиУсловиями = Справочники.ТерриториальныеУсловияПФР.СписокТерриторийСОсобымиКлиматическимиУсловиями();
	Если ТерриторииСОсобымиКлиматическимиУсловиями.НайтиПоЗначению(ТерриториальныеУсловияПФР.ТерриториальныеУсловияПФР) <> Неопределено Тогда
		ТерриториальныеУсловияПФР.ТерриториальныеУсловияПФР = Справочники.ТерриториальныеУсловияПФР.ПустаяСсылка();
		ПриИзмененииТерриториальныхУсловий(ЭтаФорма);
	КонецЕсли;
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПриИзмененииТерриториальныхУсловий(Форма)
	
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(Форма, "ТерриториальныеУсловияПФР", Форма.ОрганизацияСсылка);
	ЗарплатаКадрыРасширенныйКлиентСервер.УстановитьПроцентЗаОсобыеКлиматическиеУсловия(
		Форма, Форма.ПроцентСевернойНадбавки, Форма.ТерриториальныеУсловияПФР.ТерриториальныеУсловияПФР);
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьЭлементовФормы(Форма)
	Форма.Элементы.РайонныйКоэффициент.Доступность = Форма.ПрименятьРайонныйКоэффициент;
	Форма.Элементы.РайонныйКоэффициентРФ.Доступность = Форма.ПрименятьРайонныйКоэффициент;
	Форма.Элементы.ПрименятьСевернуюНадбавку.Доступность = Форма.ПрименятьРайонныйКоэффициент;
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтаФорма, ИмяРегистра, ВедущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть() Экспорт

	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрытьЗавершение", ЭтотОбъект);
	СохранитьДанные(Ложь, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрытьЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	Если Не Отказ Тогда
		Модифицированность = Ложь;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПрименятьРайонныйКоэффициент", ПрименятьРайонныйКоэффициент);
		СтруктураПараметров.Вставить("ПрименятьСевернуюНадбавку",    ПрименятьСевернуюНадбавку);
		СтруктураПараметров.Вставить("РайонныйКоэффициент",          РайонныйКоэффициент);
		СтруктураПараметров.Вставить("РайонныйКоэффициентРФ",        РайонныйКоэффициентРФ);
		СтруктураПараметров.Вставить("ГрафикРаботыСотрудников",      ГрафикРаботыСотрудников);
		СтруктураПараметров.Вставить("ПроцентСевернойНадбавки",      ПроцентСевернойНадбавки);
		
		Закрыть(СтруктураПараметров);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанные(Отказ, ОповещениеЗавершения = Неопределено)
	
	//++ НЕ УТ
	ЗапроситьРежимИзмененияБухгалтерскогоУчета(ТерриториальныеУсловияПФР.Период, Отказ, ОповещениеЗавершения);
	//-- НЕ УТ
	Возврат; // В УТ обработчик пустой
	
КонецПроцедуры

//++ НЕ УТ

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчета(ДатаИзменения, Отказ, ОповещениеЗавершения)
	
	ДополнительныеПараметры = Новый Структура("ОповещениеЗавершения", ОповещениеЗавершения);
	Оповещение = Новый ОписаниеОповещения("ЗапроситьРежимИзмененияБухгалтерскогоУчетаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ТекстКнопкиДа = НСтр("ru = 'Изменились территориальные условия';
						|en = 'Site conditions changed'");
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'При редактировании изменились параметры территориальных условий.
					|Если просто исправлены прежние данные (они были ошибочны), нажмите ""Исправлена ошибка"".
					|Если территориальные условия изменились с %1, нажмите ""Изменились территориальные условия""';
					|en = 'Site condition parameters were changed during editing. 
					|If previous data was changed (it was incorrect), click ""Error corrected"". 
					|If site conditions were changed from %1, click ""Site conditions changed""'"), 
		Формат(ДатаИзменения, "ДФ='д ММММ гггг ""г""'"));
		
	РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтаФорма, "ТерриториальныеУсловияПФР", ТекстВопроса, ТекстКнопкиДа, Отказ, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗапроситьРежимИзмененияБухгалтерскогоУчетаЗавершение(Отказ, ДополнительныеПараметры) Экспорт 
	
	СохранитьДанныеЗавершение(Отказ, ДополнительныеПараметры.ОповещениеЗавершения);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьДанныеЗавершение(Отказ, ОповещениеЗавершения) 

	Если Не Отказ Тогда
		СохранитьДанныеНаСервере(Отказ);
	КонецЕсли;
	
	Если ОповещениеЗавершения <> Неопределено Тогда 
		ВыполнитьОбработкуОповещения(ОповещениеЗавершения, Отказ);
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура СохранитьДанныеНаСервере(Отказ)
	
	Если ПроверитьЗаполнение() Тогда
		
		РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтаФорма, "ТерриториальныеУсловияПФР", ОрганизацияСсылка);
		
		Модифицированность = Ложь;
		
	Иначе
		Отказ = Истина;
		
	КонецЕсли;
	
	Если НЕ Отказ Тогда
		Модифицированность = Ложь;
	КонецЕсли; 
	
КонецПроцедуры
//-- НЕ УТ

#КонецОбласти
