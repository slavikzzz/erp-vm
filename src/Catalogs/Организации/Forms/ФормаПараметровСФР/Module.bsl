
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры, "Организация, РегистрационныйНомерСФР");
	
	//++ НЕ УТ
	ИсторияРегистрацииВОрганеПФРДоступна = ПолучитьФункциональнуюОпцию("ИспользоватьНачислениеЗарплаты")
		И ПравоДоступа("Просмотр", Метаданные.РегистрыСведений.ИсторияРегистрацийВОрганеПФР);
	Элементы.РегистрационныйНомерСФРБезИстории.Видимость = Не ИсторияРегистрацииВОрганеПФРДоступна;
	Элементы.ГруппаРегистрацияСФРИстория.Видимость = ИсторияРегистрацииВОрганеПФРДоступна;
	Элементы.РегистрационныйНомерСФР.Видимость = ИсторияРегистрацииВОрганеПФРДоступна;
	
	Если ИсторияРегистрацииВОрганеПФРДоступна Тогда
		РедактированиеПериодическихСведений.ПрочитатьЗаписьДляРедактированияВФорме(ЭтотОбъект, "ИсторияРегистрацийВОрганеПФР", Организация);
		ИсторияРегистрацийВОрганеПФРПериодСтрокой = ПредставлениеПериода(ИсторияРегистрацийВОрганеПФР.Период, КонецКвартала(ИсторияРегистрацийВОрганеПФР.Период), "ФП = Истина");
	КонецЕсли;
	//-- НЕ УТ
	
	ПроверитьРегистрационныйНомер(РегистрационныйНомерСФР, Элементы.РезультатПроверки.Заголовок, Элементы.РезультатПроверки.Видимость);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	//++ НЕ УТ
	Если Параметр.ИмяРегистра = "ИсторияРегистрацийВОрганеПФР" И ИсторияРегистрацииВОрганеПФРДоступна Тогда
		РедактированиеПериодическихСведенийКлиент.ОбработкаОповещения(ЭтотОбъект, Организация, ИмяСобытия, Параметр, Источник);
		ИсторияРегистрацийВОрганеПФРПериодСтрокой = ПредставлениеПериода(ИсторияРегистрацийВОрганеПФР.Период, КонецКвартала(ИсторияРегистрацийВОрганеПФР.Период), "ФП = Истина");
		РегистрационныйНомерСФР = ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерСФР;
	КонецЕсли;
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	//++ НЕ УТ
	Если ЗначениеЗаполнено(ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерСФР)
		И Не ЗначениеЗаполнено(ИсторияРегистрацийВОрганеПФР.Период) Тогда
			ОбщегоНазначения.СообщитьПользователю(
				НСтр("ru = 'Поле ""Действует с"" не заполнено.';
					|en = 'The ""Valid from"" field is not populated.'"),,
				"ИсторияРегистрацийВОрганеПФРПериодСтрокой",,
				Отказ);
	КонецЕсли;
	//-- НЕ УТ
	Возврат;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИзмененияИПродолжить", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы, , ТекстПредупреждения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РегистрационныйНомерСФРБезИсторииПриИзменении(Элемент)
	ПроверитьРегистрационныйНомер(РегистрационныйНомерСФР, Элементы.РезультатПроверки.Заголовок, Элементы.РезультатПроверки.Видимость);
КонецПроцедуры

&НаКлиенте
Процедура РегистрационныйНомерСФРПриИзменении(Элемент)
	//++ НЕ УТ
	РегистрационныйНомерСФР = ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерСФР;
	РедактированиеПериодическихСведенийКлиентСервер.ОбновитьОтображениеПолейВвода(ЭтотОбъект, "ИсторияРегистрацийВОрганеПФР", Организация);
	//-- НЕ УТ
	ПроверитьРегистрационныйНомер(РегистрационныйНомерСФР, Элементы.РезультатПроверки.Заголовок, Элементы.РезультатПроверки.Видимость);
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеСФРПериодПриИзменении(Элемент)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодПриИзменении(ЭтотОбъект);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеСФРПериодНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодНачалоВыбора(ЭтотОбъект);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеСФРПериодРегулирование(Элемент, Направление, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ОрганизацииФормаЭлементаИсторияРегистрацийВОрганеПФРПериодРегулирование(ЭтотОбъект, Направление);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеСФРПериодАвтоПодбор(Элемент, Текст, ДанныеВыбора, Параметры, Ожидание, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ВводМесяцаАвтоПодборТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

&НаКлиенте
Процедура ИсторияРегистрацийВОрганеСФРПериодОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, Параметры, СтандартнаяОбработка)
	//++ НЕ УТ
	ЗарплатаКадрыКлиент.ВводМесяцаОкончаниеВводаТекста(Текст, ДанныеВыбора, СтандартнаяОбработка);
	//-- НЕ УТ
	Возврат; // в УТ11 не используется
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	СохранитьИзмененияИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьИсториюРегистрацийВОрганеПФР(Команда)
	//++ НЕ УТ
	РедактированиеПериодическихСведенийКлиент.ОткрытьИсторию("ИсторияРегистрацийВОрганеПФР", Организация, ЭтотОбъект, ТолькоПросмотр);
	//-- НЕ УТ
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Процедура ПроверитьРегистрационныйНомер(Знач РегистрационныйНомер, ТекстОшибки, Видимость)
	
	ТекстОшибки = "";
	//++ НЕ УТ
	ТекстОшибки = ПроверкиБЗК.ТекстОшибкиЗаполненияНомераСФР(РегистрационныйНомер, Ложь);
	//-- НЕ УТ
	Видимость = Не ПустаяСтрока(ТекстОшибки);
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьНаборЗаписейПериодическихСведений(ИмяРегистра, ВедущийОбъект) Экспорт
	РедактированиеПериодическихСведений.ПрочитатьНаборЗаписей(ЭтотОбъект, ИмяРегистра, ВедущийОбъект);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияИПродолжить(Результат, ДополнительныеПараметры) Экспорт
	СохранитьИзмененияИЗакрыть();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияИЗакрыть(Отказ = Ложь)
	
	Если Не Модифицированность Тогда
		Закрыть();
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Отказ", Отказ);
	
	//++ НЕ УТ
	Если ИсторияРегистрацииВОрганеПФРДоступна Тогда
		ТекстКнопкиДа = НСтр("ru = 'Изменились сведения о регистрации';
							|en = 'Registration information is changed'");
		ТекстВопроса = СтрШаблон(
			НСтр("ru = 'Сведения о регистрации в органе СФР были изменены.
						|Если Вы исправили прежние сведения о регистрации (они были ошибочными), нажмите ""Исправлена ошибка"".
						|Если сведения о регистрации изменились с %1, нажмите ""%2""';
						|en = 'Information about the registration with the Social Insurance Fund was changed.
						|If you corrected the previous registration information (it was incorrect), click ""Error is corrected"".
						|If the registration information changed from %1, click ""%2""'"),
			Формат(ИсторияРегистрацийВОрганеПФР.Период, "ДФ='к ""кв."" гггг ""г.""'"),
			ТекстКнопкиДа);
		ОповещениеЗавершения = Новый ОписаниеОповещения("СохранитьИзмененияЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		РедактированиеПериодическихСведенийКлиент.ЗапроситьРежимИзмененияРегистра(ЭтотОбъект, "ИсторияРегистрацийВОрганеПФР", ТекстВопроса, ТекстКнопкиДа, Отказ, ОповещениеЗавершения);
		Возврат;
	КонецЕсли;
	//-- НЕ УТ
	
	СохранитьИзмененияЗавершение(Отказ, ДополнительныеПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИзмененияЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ ИЛИ НЕ ПроверитьЗаполнение() Тогда
		ДополнительныеПараметры.Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	СтруктураСведений = Новый Структура;
	СтруктураСведений.Вставить("РегистрационныйНомерСФР", РегистрационныйНомерСФР);
	
	//++ НЕ УТ
	Если ИсторияРегистрацииВОрганеПФРДоступна Тогда
		СтруктураСведений.Вставить("РегистрационныйНомерПФР", ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР);
		СохранитьИзмененияНаСервере();
	КонецЕсли;
	//-- НЕ УТ
	
	Модифицированность = Ложь;
	
	Закрыть(СтруктураСведений);
	
КонецПроцедуры

//++ НЕ УТ

&НаСервере
Процедура СохранитьИзмененияНаСервере()
	РедактированиеПериодическихСведений.ЗаписатьЗаписьПослеРедактированияВФорме(ЭтотОбъект, "ИсторияРегистрацийВОрганеПФР", Организация);
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти
