#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета() Тогда
		Элементы.ГруппаРегламентированныйУчет.Видимость = Истина;
		//++ Локализация
		УстановитьОбработчикиСобытийРегламентированногоУчета();
		УправлениеЭлементамиФормыРегламентированногоУчета(ЭтотОбъект);
		//-- Локализация
	Иначе
		Элементы.ГруппаРегламентированныйУчет.Видимость = Ложь;
		Элементы.ГруппаМеждународныйУчет.Заголовок = "";
	КонецЕсли;
	
	Если НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета() Тогда
		Элементы.ГруппаМеждународныйУчет.Видимость = Истина;
		//++ НЕ УТКА
		ПланСчетовМеждународногоУчетаПоУмолчанию = Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовПоУмолчанию();
		//-- НЕ УТКА
	Иначе
		Элементы.ГруппаМеждународныйУчет.Видимость = Ложь;
		Элементы.ГруппаРегламентированныйУчет.Заголовок = "";
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ВладелецНастройки)
		И ПравоДоступа("Чтение", Метаданные.НайтиПоТипу(ТипЗнч(Объект.ВладелецНастройки)))
		И ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Объект.ВладелецНастройки, "Организация") Тогда
		Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.ВладелецНастройки, "Организация");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

//++ Локализация

&НаКлиенте
Процедура Подключаемый_СчетУчетаПриИзменении(Элемент)
	
	ПоляОбъекта = Новый Структура("Субконто1, Субконто2, Субконто3", "Субконто1", "Субконто2", "Субконто3");
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(Объект.СчетУчета, Объект, ПоляОбъекта);
	
	ИзменитьПараметрыВыбораПолейСубконто();
	УправлениеЭлементамиФормыРегламентированногоУчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыНастройкиМеждународногоУчета

&НаКлиенте
Процедура НастройкиМеждународногоУчетаСчетУчетаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиМеждународногоУчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	
	СвойстваСчета = МеждународныйУчетВызовСервера.СвойстваСчета(ТекущиеДанные.СчетУчета);
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= СвойстваСчета.КоличествоСубконто Тогда
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + Индекс + "ТипЗначения"];
			ЗначениеСубконто = ТипЗначенияСубконто.ПривестиЗначение(ТекущиеДанные["Субконто" + Индекс]);
			ТекущиеДанные["Субконто" + Индекс] = ЗначениеСубконто;
		Иначе 
			ТекущиеДанные["Субконто" + Индекс] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	УправлениеЭлементамиФормыМеждународногоУчета(ЭтотОбъект, ТекущиеДанные.ПолучитьИдентификатор());
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаСубконто1ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиМеждународногоУчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ТекущиеДанные);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаСубконто2ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиМеждународногоУчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ТекущиеДанные);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаСубконто3ПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.НастройкиМеждународногоУчета.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ТекущиеДанные);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	УправлениеЭлементамиФормыМеждународногоУчета(ЭтотОбъект, ТекущиеДанные.ПолучитьИдентификатор());
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элемент.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	//++ НЕ УТКА
	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущиеДанные.ПланСчетов = ПланСчетовМеждународногоУчетаПоУмолчанию;
	КонецЕсли;
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкиМеждународногоУчетаПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, ЭтоГруппа, Параметр)
	
	//++ НЕ УТКА
	Если Объект.НастройкиМеждународногоУчета.Количество() > 0 Тогда
		Отказ = ЗначениеЗаполнено(ПланСчетовМеждународногоУчетаПоУмолчанию);
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

//++ Локализация

&НаКлиенте
Процедура ИзменитьПараметрыВыбораПолейСубконто()
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(
		Организация,
		Объект,
		"Субконто" + "%Индекс%",
		"СчетУчета");
		
	НастройкаСчетовУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
		ЭтотОбъект,
		Объект,
		"Субконто" + "%Индекс%",
		"Субконто" + "%Индекс%",
		ПараметрыЗаписи); 
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(
		Организация,
		Объект,
		"Субконто" + "%Индекс%",
		"СчетУчета");
	
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтотОбъект, Элемент, СтандартнаяОбработка, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура УстановитьОбработчикиСобытийРегламентированногоУчета()
	
	Элементы.СчетУчета.УстановитьДействие("ПриИзменении", "Подключаемый_СчетУчетаПриИзменении");
	Элементы.Субконто1.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто1.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто2.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто2.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто3.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто3.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормыРегламентированногоУчета(Форма)
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
		
	ЗаголовкиПолей = Новый Структура("Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(Форма.Объект.СчетУчета, Форма, ПоляФормы, ЗаголовкиПолей);
	
КонецПроцедуры

//-- Локализация

//++ НЕ УТКА

&НаКлиенте
Процедура ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ТекущиеДанные)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(
		Организация,
		ТекущиеДанные,
		"Субконто" + "%Индекс%",
		"СчетУчета");
		
	НастройкаСчетовУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
		ЭтотОбъект,
		ТекущиеДанные,
		"Субконто" + "%Индекс%",
		"НастройкиМеждународногоУчетаСубконто" + "%Индекс%",
		ПараметрыЗаписи); 
	
КонецПроцедуры
//
&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеЭлементамиФормыМеждународногоУчета(Форма, ИдентификаторСтроки)
	
	ТекущиеДанные = Форма.Объект.НастройкиМеждународногоУчета.НайтиПоИдентификатору(ИдентификаторСтроки);
	
	ПоляФормы = Новый Структура("Субконто1, Субконто2, Субконто3",
		"НастройкиМеждународногоУчетаСубконто1", "НастройкиМеждународногоУчетаСубконто2", "НастройкиМеждународногоУчетаСубконто3");
	
	СвойстваСчета = МеждународныйУчетВызовСервера.СвойстваСчета(ТекущиеДанные.СчетУчета);
	
	Для Индекс = 1 По 3 Цикл
		Если Индекс <= СвойстваСчета.КоличествоСубконто Тогда
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + Индекс + "ТипЗначения"];
			Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ОграничениеТипа = ТипЗначенияСубконто;
			Форма.Элементы[ПоляФормы["Субконто" + Индекс]].ПодсказкаВвода  = СвойстваСчета["ВидСубконто" + Индекс + "Наименование"];
			Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Доступность = Истина;
		Иначе
			Форма.Элементы[ПоляФормы["Субконто" + Индекс]].Доступность = Ложь;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

//-- НЕ УТКА


#КонецОбласти


