&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		
		//Создается новый объект
		Сообщение = Новый СообщениеПользователю();
		Сообщение.Текст = НСтр("ru = 'Справочник не предназначен для ручного заполнения!';
								|en = 'Справочник не предназначен для ручного заполнения!'");
		Сообщение.Сообщить();
		Отказ = Истина;
		Возврат;
		
	КонецЕсли;

	// СтандартныеПодсистемы.РаботаСФайлами
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		ПараметрыГиперссылки = МодульРаботаСФайлами.ГиперссылкаФайлов();
		ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
		ПараметрыГиперссылки.Владелец = "Объект.Ссылка";
		ПараметрыГиперссылки.ОтображатьКоличество = Ложь;
		ПараметрыГиперссылки.ДобавлятьФайлы = Ложь;
		МодульРаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	Элементы.НадписьПомеченНаУдаление.Видимость = Объект.ПометкаУдаления;
			
	Если ТипЗнч(Объект.ПредметОтправки) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
		ОтчетПредставление = Строка(Объект.ПредметОтправки.ВидУведомления);
	Иначе // электронное представление
		ОтчетПредставление = СокрЛП(Объект.ПредметОтправки);
	КонецЕсли;
	
	ДатаОтправки = Объект.ДатаОтправки;
	ДатаЗакрытия = НСтр("ru = '<не завершена>';
						|en = '<не завершена>'");
	ДатаОбновления = НСтр("ru = '<не определено>';
							|en = '<не определено>'");
	ОбновитьФорму();
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиВызовСервера.СкрытьЭлементыФормыПриИспользованииОднойОрганизации(ЭтаФорма, "ГруппаСубъектыПереписки");
			
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтчетПредставлениеНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(,Объект.ПредметОтправки);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьСтатусОтправкиНажатие(Элемент)
	
	ОткрытьФормуЭтапа(ВсеЭтапы.ПринятВОбработку, Элементы.СтатусОтправкиНадпись);
	
КонецПроцедуры

&НаКлиенте
Процедура НадписьПервичноеСообщениеНажатие(Элемент)
	
	ОткрытьФормуЭтапа(ВсеЭтапы.Отправлено, Элементы.ПервичноеСообщениеНадпись);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатусОбработкиНадписьНажатие(Элемент)
	
	ОткрытьФормуЭтапа(ВсеЭтапы.Рассмотрение, Элементы.СтатусОбработкиНадпись);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	ПараметрыОперации = Новый Структура("ПринудительноОбновить", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбновитьЗавершение", ЭтотОбъект);
	ДокументооборотРегистрацияВФНССлужебныйКлиент.ОбновитьСостояниеЗаявленияНаРегистрациюЮЛ(ОписаниеОповещения, Объект.Ссылка, ПараметрыОперации);
		
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПакет(Команда)
	
	ВыгрузитьВсеФайлы();
	
КонецПроцедуры

&НаКлиенте
Процедура ДополнительныйИдентификатор(Команда)
	ДополнительныйИдентификаторНаСервере();
КонецПроцедуры

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайламиКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РаботаСФайламиКлиент");
		МодульРаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриОткрытииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДанныеФормыНаСервере()
	
	Прочитать();
	ОбновитьФорму();
	
КонецПроцедуры	

&НаСервере
Процедура ОформитьЭтап(ИмяГруппы, СостояниеЭтапа)
	
	ЦветСерый = Новый Цвет(128, 128, 128);
	ЦветКрасный = Новый Цвет(255, 0, 0);
	ЦветЗеленый = Новый Цвет(0, 128, 00);
	
	ЗаголовокЭтапа = СостояниеЭтапа.Наименование;
	Если ЗначениеЗаполнено(СостояниеЭтапа.Дата) Тогда
		ЗаголовокЭтапа = ЗаголовокЭтапа + " " + ?(СостояниеЭтапа.Отправка, НСтр("ru = 'Отправлено';
																				|en = 'Отправлено'"), НСтр("ru = 'Получено';
																											|en = 'Получено'"));
		ЗаголовокЭтапа = ЗаголовокЭтапа + " " + Формат(СостояниеЭтапа.Дата, "ДФ='dd.MM.yy HH:mm:ss'") + ".";
	КонецЕсли;
	
	Элементы[ИмяГруппы + "Надпись"].Заголовок = ЗаголовокЭтапа;
	Элементы[ИмяГруппы + "Надпись"].ГиперСсылка = СостояниеЭтапа.Выполнен;
	
	Если НЕ СостояниеЭтапа.Выполнен Тогда
		Элементы[ИмяГруппы].Картинка = БиблиотекаКартинок.СерыйШар;
		Элементы[ИмяГруппы + "Надпись"].ЦветТекста = ЦветСерый;
	ИначеЕсли СостояниеЭтапа.Успешно Тогда
		Элементы[ИмяГруппы].Картинка = БиблиотекаКартинок.ЗеленыйШар;
		Элементы[ИмяГруппы + "Надпись"].ЦветТекста = ЦветЗеленый;
	Иначе
		Элементы[ИмяГруппы].Картинка = БиблиотекаКартинок.КрасныйШар;
		Элементы[ИмяГруппы + "Надпись"].ЦветТекста = ЦветКрасный;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму()
	
	ПустаяДата = Дата(1,1,1);
	
	ВсеЭтапы = ДокументооборотРегистрацияВФНС.СформироватьЭтапыОтправки(Объект.Ссылка);
	
	ДатаОбновления = ?(Объект.ДатаПолученияРезультата = ПустаяДата, НСтр("ru = '<не определено>';
																		|en = '<не определено>'"), Объект.ДатаПолученияРезультата);
	ТекущееСостояние = Объект.ОписаниеОтвета;
	
	ОформитьЭтап("ПервичноеСообщение", ВсеЭтапы.Отправлено);
	ОформитьЭтап("СтатусОтправки", ВсеЭтапы.ПринятВОбработку);
	ОформитьЭтап("СтатусОбработки", ВсеЭтапы.Рассмотрение);
	
	ДатаЗакрытия = Объект.ДатаЗакрытия;
		
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ Результат.Выполнено Тогда
		ПоказатьПредупреждение( , Результат.Ошибка, , НСтр("ru = 'Ошибка обмена';
															|en = 'Ошибка обмена'"));
	КонецЕсли;
	
	ОбновитьДанныеФормыНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуЭтапа(ТекущийЭтап, ТекущийЭлемент)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Этап", ТекущийЭтап);
	
	ОткрытьФорму("Справочник.ОтправкиРегистрацияЮЛ.Форма.СостояниеЭтапа", ПараметрыФормы, ТекущийЭлемент);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВсеФайлы()
	
	ОписаниеСледующее = Новый ОписаниеОповещения("ВыгрузитьВсеФайлыЗавершение", ЭтотОбъект);
	
	МассивЭтапов = Новый Массив;
	Если ВсеЭтапы.ПринятВОбработку.Выполнен Тогда
		МассивЭтапов.Добавить(ВсеЭтапы.ПринятВОбработку);
	КонецЕсли;
	
	Если ВсеЭтапы.Рассмотрение.Выполнен Тогда
		МассивЭтапов.Добавить(ВсеЭтапы.Рассмотрение);
	КонецЕсли;
	
	Если ВсеЭтапы.Отправлено.Выполнен Тогда
		МассивЭтапов.Добавить(ВсеЭтапы.Отправлено);
	КонецЕсли;
	
	ДокументооборотРегистрацияВФНССлужебныйКлиент.ВыгрузитьФайлыЭтапов(ОписаниеСледующее, МассивЭтапов, Объект.ИдентификаторНаСервере, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьВсеФайлыЗавершение(РезультатВызова, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВызова.Выполнено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВызова.Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДополнительныйИдентификаторНаСервере()
	
	Если ЗначениеЗаполнено(Объект.ПредметОтправки) Тогда
		ТекстСообщения = СокрЛП(Объект.ПредметОтправки.УникальныйИдентификатор());
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
