#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТекущийЭтап = Параметры.Этап;
	ОбновитьФорму(ТекущийЭтап);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПодключитьОбработчикОжидания("Подключаемый_ИзменитьРазмерыФормы", 0.2, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Подключаемый_ДекорацияНажатие(Элемент)
	
	ИдентификаторСтроки = Число(СтрЗаменить(Элемент.Имя, "СсылкаФайл_", ""));
	НашлиСтроку = СписокФайлов.НайтиПоИдентификатору(ИдентификаторСтроки);
	Если НашлиСтроку <> Неопределено Тогда
		ОткрытьФайлЭтапа(НашлиСтроку.Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ИзменитьРазмерыФормы()
	
	ИмяЭлемента = "ОписаниеЭтапа";
	Элементы[ИмяЭлемента].Видимость = НЕ Элементы[ИмяЭлемента].Видимость;
	Элементы[ИмяЭлемента].Видимость = НЕ Элементы[ИмяЭлемента].Видимость;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыгрузитьФайлы(Команда)
	
	ВыгрузитьФайлыЭтапа();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОткрытьФайлЭтапа(ТекущийФайл)
	
	Если ТекущийФайл = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеФайла = РаботаСФайламиКлиент.ДанныеФайла(ТекущийФайл, УникальныйИдентификатор);
	
	Если ДанныеФайла.Расширение = "ZIP" Тогда
		Адрес = ДанныеФайла.СсылкаНаДвоичныеДанныеФайла;
		ПолучитьФайл(Адрес, ДанныеФайла.ИмяФайла);
	Иначе
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла, Ложь);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлыЭтапа()
	
	ОписаниеСледующее = Новый ОписаниеОповещения("ВыгрузитьФайлыЭтапаЗавершение", ЭтотОбъект);
	
	МассивЭтапов = Новый Массив;
	МассивЭтапов.Добавить(ТекущийЭтап);
	ДокументооборотРегистрацияВФНССлужебныйКлиент.ВыгрузитьФайлыЭтапов(ОписаниеСледующее, МассивЭтапов, "", УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьФайлыЭтапаЗавершение(РезультатВызова, ДополнительныеПараметры) Экспорт
	
	Если НЕ РезультатВызова.Выполнено Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатВызова.Ошибка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФорму(ТекущийЭтап)
	
	ОписаниеЭтапа = ТекущийЭтап.Наименование;
	ДатаОтвета = ТекущийЭтап.Дата;
	Идентификатор = ТекущийЭтап.Идентификатор;
	ТипЭтапа = ?(ТекущийЭтап.Отправка, НСтр("ru = 'Исходящий';
											|en = 'Исходящий'"), НСтр("ru = 'Входящий';
																		|en = 'Входящий'"));
	Если ЗначениеЗаполнено(ТекущийЭтап.КодОтвета) И НЕ ТекущийЭтап.Успешно Тогда
		КодОшибки = ТекущийЭтап.КодОтвета;
		ОписаниеОшибки = ТекущийЭтап.Описание;
	КонецЕсли;
	
	Элементы.КодОшибки.Видимость = ЗначениеЗаполнено(КодОшибки);
	Элементы.ОписаниеОшибки.Видимость = ЗначениеЗаполнено(ОписаниеОшибки);
	Элементы.Идентификатор.Видимость = ЗначениеЗаполнено(Идентификатор);
	
	СписокФайлов.Очистить();
	
	Для каждого СтрокаМассива Из ТекущийЭтап.Файлы Цикл
		НоваяСтрока = СписокФайлов.Добавить(СтрокаМассива, СокрЛП(СтрокаМассива));
	КонецЦикла;
	
	ПараметрФайла = РаботаСФайламиКлиентСервер.ПараметрыДанныхФайла();
	ПараметрФайла.ПолучатьСсылкуНаДвоичныеДанные = Ложь;
	Для Каждого СтрокаСписка Из СписокФайлов Цикл
		ТекущийФайл = СтрокаСписка.Значение;
		СвойстваФайла = РаботаСФайлами.ДанныеФайла(ТекущийФайл, ПараметрФайла);
		ПредставлениеФайла = СвойстваФайла.ИмяФайла + " (" + ОбщегоНазначенияЭДКОКлиентСервер.ТекстовоеПредставлениеРазмераФайла(СвойстваФайла.Размер, 2) + " Кб)";
		ИдентификаторСтроки = СтрокаСписка.ПолучитьИдентификатор();
		НоваяНадпись = Элементы.Добавить("СсылкаФайл_" + XMLСтрока(ИдентификаторСтроки), Тип("ДекорацияФормы"), Элементы.ГруппаФайлы);
		НоваяНадпись.Вид = ВидДекорацииФормы.Надпись;
		НоваяНадпись.Гиперссылка = Истина;
		НоваяНадпись.Заголовок = ПредставлениеФайла;
		НоваяНадпись.АвтоМаксимальнаяШирина = Ложь;
		НоваяНадпись.РастягиватьПоГоризонтали = Истина;
		НоваяНадпись.УстановитьДействие("Нажатие", "Подключаемый_ДекорацияНажатие");
	КонецЦикла;
	
	Элементы.ФормаВыгрузитьФайлы.Видимость = СписокФайлов.Количество() > 1;
	
КонецПроцедуры

#КонецОбласти
