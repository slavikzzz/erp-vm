
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриЧтенииСозданииНаСервере();
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура  ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СтрокаПланыСчетов = СтрокаПланыСчетов();
	УстановитьПараметрыВыбораВидовФинансовыхОтчетов();
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора.ИмяФормы = "Справочник.ВидыФинансовыхОтчетов.Форма.ВыборПлановСчетов" Тогда
		
		ВидыФинансовыхОтчетовКУдалению = ПроверитьВидыФинансовыхОтчетов(ВыбранноеЗначение);
		Если ВидыФинансовыхОтчетовКУдалению.Количество() > 0 Тогда
			
			ДополнительныеПараметры = Новый Структура();
			ДополнительныеПараметры.Вставить("ВыбранныеПланыСчетов", ВыбранноеЗначение);
			ДополнительныеПараметры.Вставить("ВидыФинансовыхОтчетовКУдалению", ВидыФинансовыхОтчетовКУдалению);
			
			Оповещение = Новый ОписаниеОповещения("ОбработкаОтветаУдалениеВидовОтчетов", ЭтотОбъект, ДополнительныеПараметры);
			Если ВидыФинансовыхОтчетовКУдалению.Количество() = 1 Тогда
				ТекстВопроса = СтрШаблон(НСтр("ru = 'Вид отчета ""%1"" будет удален из комплекта. Продолжить?';
												|en = 'The ""%1"" report kind will be removed from the kit. Continue?'"), ВидыФинансовыхОтчетовКУдалению);
			Иначе
				ТекстВопроса = СтрШаблон(
									НСтр("ru = 'Виды отчетов:
									|- %1
									|будут удалены из комплекта. Продолжить?';
									|en = 'Report kinds:
									|- %1
									|will be deleted from the kit. Continue?'"),
									СтрСоединить(ВидыФинансовыхОтчетовКУдалению, "," + Символы.ПС + "- "));
			КонецЕсли;
			
			Кнопки = Новый СписокЗначений;
			Кнопки.Добавить(КодВозвратаДиалога.Ок, НСтр("ru = 'Продолжить';
														|en = 'Continue'"));
			Кнопки.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отмена';
															|en = 'Cancel'"));
			ПоказатьВопрос(Оповещение, ТекстВопроса, Кнопки);
			
		КонецЕсли;
		
		ЗаполнитьПлановСчетов(ВыбранноеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВидыФинансовыхОтчетов(ВыбранныеПланыСчетов)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаПланыСчетов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ВидыФинансовыхОтчетов.ПланыСчетов КАК ТаблицаПланыСчетов
	|ГДЕ
	|	ТаблицаПланыСчетов.Ссылка В (&ОтчетыКомплекта)
	|	И НЕ ТаблицаПланыСчетов.ПланСчетов В (&ВыбранныеПланыСчетов)
	|";
	Запрос.УстановитьПараметр("ВыбранныеПланыСчетов", ВыбранныеПланыСчетов);
	Запрос.УстановитьПараметр("ОтчетыКомплекта", Объект.ВидыОтчетов.Выгрузить().ВыгрузитьКолонку("ВидФинансовогоОтчета"));
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
	
КонецФункции

&НаКлиенте
Процедура ОбработкаОтветаУдалениеВидовОтчетов(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.ОК Тогда
		СтрокиКУдалению = Новый Массив;
		Для каждого ВидОтчета Из ДополнительныеПараметры.ВидыФинансовыхОтчетовКУдалению Цикл
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
				СтрокиКУдалению,
				Объект.ВидыОтчетов.НайтиСтроки(Новый Структура("ВидФинансовогоОтчета", ВидОтчета)));
		КонецЦикла;
		Для каждого СтрокаКУдалению Из СтрокиКУдалению Цикл
			Объект.ВидыОтчетов.Удалить(СтрокаКУдалению);
		КонецЦикла;
		
		ЗаполнитьПлановСчетов(ДополнительныеПараметры.ВыбранныеПланыСчетов);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидыОтчетовВидФинансовогоОтчетаПриИзменении(Элемент)
	Элементы.ВидыОтчетов.ТекущиеДанные.НастройкиТекст = НСтр("ru = 'Настроить отборы';
															|en = 'Set filters'");
КонецПроцедуры

&НаКлиенте
Процедура ОписаниеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Описание");
	
КонецПроцедуры

&НаКлиенте
Процедура ПланыСчетовОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ПараметрыФормы = ПараметрыФормыВыбораПлановСчетов();
	ОткрытьФорму("Справочник.ВидыФинансовыхОтчетов.Форма.ВыборПлановСчетов", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЧтенииСозданииНаСервере() 
	
	СтрокаПланыСчетов = СтрокаПланыСчетов();
	УстановитьПараметрыВыбораВидовФинансовыхОтчетов();
	
КонецПроцедуры

&НаСервере
Функция СтрокаПланыСчетов()
	
	ПланыСчетовКомплекта = Новый Массив;
	Для каждого СтрокаТаблицы Из Объект.ПланыСчетов Цикл
		Если ТипЗнч(СтрокаТаблицы.ПланСчетов) = Тип("СправочникСсылка.ИдентификаторыОбъектовМетаданных") Тогда
			ОбъектМетаданныхПланСчетов = ОбщегоНазначения.ОбъектМетаданныхПоИдентификатору(СтрокаТаблицы.ПланСчетов);
			МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоПолномуИмени(ОбъектМетаданныхПланСчетов.ПолноеИмя()); // ОбъектМетаданныхПланСчетов - 
			ПланыСчетовКомплекта.Добавить(МенеджерОбъекта.ПредставлениеВФинансовыхОтчетах());
		Иначе
			ПланыСчетовКомплекта.Добавить(СтрокаТаблицы.ПланСчетов);
		КонецЕсли;
	КонецЦикла;
	
	Если ПланыСчетовКомплекта.Количество() <> 0 Тогда
		ПредставлениеПланыСчетов = СтрСоединить(ПланыСчетовКомплекта, ", ");
		ЦветГиперссылки = ЦветаСтиля.ГиперссылкаЦвет;
	Иначе
		ПредставлениеПланыСчетов = НСтр("ru = '<План счетов не выбран>';
										|en = '<Chart of accounts is not selected>'");
		ЦветГиперссылки = ЦветаСтиля.ПросроченныеДанныеЦвет;
	КонецЕсли;
	
	Возврат Новый ФорматированнаяСтрока(ПредставлениеПланыСчетов, , ЦветГиперссылки, , "ОткрытьВыборПлановСчетов")
	
КонецФункции

&НаСервере
Процедура ЗаполнитьПлановСчетов(ВыбранныеПланыСчетов)
	
	Объект.ПланыСчетов.Очистить();
	Для каждого ПланСчетов Из ВыбранныеПланыСчетов Цикл
		НоваяСтрока = Объект.ПланыСчетов.Добавить();
		НоваяСтрока.ПланСчетов = ПланСчетов;
	КонецЦикла;
	СтрокаПланыСчетов = СтрокаПланыСчетов();
	УстановитьПараметрыВыбораВидовФинансовыхОтчетов();
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ПараметрыФормыВыбораПлановСчетов()
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ВыбранныеПланыСчетов", Объект.ПланыСчетов.Выгрузить().ВыгрузитьКолонку("ПланСчетов"));
	Возврат ПараметрыФормы;
	
КонецФункции

&НаСервере
Процедура УстановитьПараметрыВыбораВидовФинансовыхОтчетов()
	
	ПланыСчетовКомплекта = Объект.ПланыСчетов.Выгрузить().ВыгрузитьКолонку("ПланСчетов");
	
	ПараметрыВыбораВидаОтчета = Новый Массив;
	ПараметрыВыбораВидаОтчета.Добавить(Новый ПараметрВыбора("ПланыСчетов", Новый ФиксированныйМассив(ПланыСчетовКомплекта)));
	
	Элементы.ВидыОтчетовВидФинансовогоОтчета.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораВидаОтчета);
	
КонецПроцедуры


#КонецОбласти