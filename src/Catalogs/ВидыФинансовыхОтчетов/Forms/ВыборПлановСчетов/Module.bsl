
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВыбранныеВОтчетеПланыСчетов.ЗагрузитьЗначения(Параметры.ВыбранныеПланыСчетов);
	Если Параметры.Свойство("ИспользуемыеПланыСчетов") Тогда
		ИспользуемыеВОтчетеПланыСчетов.ЗагрузитьЗначения(Параметры.ИспользуемыеПланыСчетов);
	КонецЕсли;
	
	СоздатьРеквизитыФормы();
	СоздатьЭлементыФормы();
	
	Для каждого СтрокаТаблицы Из ПрименяемыеПланыСчетов Цикл
		Если ВыбранныеВОтчетеПланыСчетов.НайтиПоЗначению(СтрокаТаблицы.Ссылка) <> Неопределено Тогда
			ЭтотОбъект[СтрокаТаблицы.ИмяРеквизита] = Истина;
		КонецЕсли;
	КонецЦикла;
	
	УстановитьДоступностьЭлементов();
	
	Если ИспользуемыеВОтчетеПланыСчетов.Количество() = 1 Тогда
		
		Элементы.ДекорацияИспользуемыеВОтчетеПланыСчетов.Заголовок =
			СтрШаблон(НСтр("ru = 'В отчете используются показатели плана счетов %1';
							|en = 'The report uses key indicators from the chart of accounts %1'"),
			          ИспользуемыеВОтчетеПланыСчетов[0].Значение);
		Элементы.ГруппаИспользуемыеВОтчетеПланыСчетов.Видимость = Истина;
		
	ИначеЕсли ИспользуемыеВОтчетеПланыСчетов.Количество() > 1 Тогда
		
		СтрокаПланыСчетов = СтрСоединить(ИспользуемыеВОтчетеПланыСчетов.ВыгрузитьЗначения(), ",");
		
		Элементы.ДекорацияИспользуемыеВОтчетеПланыСчетов.Заголовок =
			СтрШаблон(НСтр("ru = 'В отчете используются показатели планов счетов %1';
							|en = 'The report uses key indicators from the charts of accounts %1'"), СтрокаПланыСчетов);
		Элементы.ГруппаИспользуемыеВОтчетеПланыСчетов.Видимость = Истина;
	Иначе
		
		Элементы.ГруппаИспользуемыеВОтчетеПланыСчетов.Видимость = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Результат = Новый Массив;
	Для каждого СтрокаТаблицы Из ПрименяемыеПланыСчетов Цикл
		Если ЭтотОбъект[СтрокаТаблицы.ИмяРеквизита] Тогда
			Результат.Добавить(СтрокаТаблицы.Ссылка);
		КонецЕсли;
	КонецЦикла;
	
	ОповеститьОВыборе(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СоздатьРеквизитыФормы()
	
	ДобавляемыеРеквизиты = Новый Массив();
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПланыСчетовМеждународногоУчета.Ссылка КАК Ссылка,
	|	ПланыСчетовМеждународногоУчета.Наименование КАК Наименование,
	|	ПланыСчетовМеждународногоУчета.УчетВФункциональнойВалюте КАК УчетВФункциональнойВалюте,
	|	ПланыСчетовМеждународногоУчета.ВалютаПредставления КАК ВалютаПредставления
	|ИЗ
	|	Справочник.ПланыСчетовМеждународногоУчета КАК ПланыСчетовМеждународногоУчета
	|ГДЕ
	|	НЕ ПланыСчетовМеждународногоУчета.ПометкаУдаления
	|		ИЛИ ПланыСчетовМеждународногоУчета.Ссылка В (&ВыбранныеВОтчетеПланыСчетов)";
	Запрос.УстановитьПараметр("ВыбранныеВОтчетеПланыСчетов", ВыбранныеВОтчетеПланыСчетов);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		ИмяРеквизита = "ПланСчетов" + СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		
		НоваяСтрокаТаблицы = ПрименяемыеПланыСчетов.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаТаблицы, Выборка);
		НоваяСтрокаТаблицы.ИмяРеквизита = ИмяРеквизита;
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Булево") , "", Выборка.Наименование);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
	КонецЦикла;
	
	НастройкиРеглУчета = РеглУчетСервер.НастройкиУчета();
	Если НастройкиРеглУчета.ИспользоватьРеглУчет Тогда
		
		ТипПланСчетовРегл = РеглУчетКлиентСервер.ТипПланСчетов();
		ИмяПланаСчетовРегл = РеглУчетКлиентСервер.ИмяПланаСчетов();
		
		ИмяРеквизита = "ПланСчетов" + СтрЗаменить(Строка(Новый УникальныйИдентификатор()), "-", "");
		ЗаголовокРеквизита = ПланыСчетов[ИмяПланаСчетовРегл].ПредставлениеВФинансовыхОтчетах();
		
		НоваяСтрокаТаблицы = ПрименяемыеПланыСчетов.Добавить();
		НоваяСтрокаТаблицы.Ссылка = ОбщегоНазначения.ИдентификаторОбъектаМетаданных(ТипПланСчетовРегл);
		НоваяСтрокаТаблицы.ИмяРеквизита = ИмяРеквизита;
		НоваяСтрокаТаблицы.Наименование = ЗаголовокРеквизита;
		НоваяСтрокаТаблицы.УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл;
		Если НастройкиРеглУчета.ДополнительноВедетсяУправленческийУчет Тогда
			НоваяСтрокаТаблицы.ВалютаУправленческогоУчетаНаПланеСчетов = Константы.ВалютаУправленческогоУчета.Получить();
		КонецЕсли;
		Если НастройкиРеглУчета.ДополнительноВедетсяУчетВВалютеФинОтчетности Тогда
			НоваяСтрокаТаблицы.ВалютаФинансовойОтчетности = НастройкиРеглУчета.ВалютаФинОтчетности;
		КонецЕсли;
		
		НовыйРеквизит = Новый РеквизитФормы(ИмяРеквизита, Новый ОписаниеТипов("Булево") , "", ЗаголовокРеквизита);
		ДобавляемыеРеквизиты.Добавить(НовыйРеквизит);
		
	КонецЕсли;
	
	ЭтотОбъект.ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьЭлементыФормы()
	
	Для каждого СтрокаТаблицы Из ПрименяемыеПланыСчетов Цикл
		
		НовыйЭлемент = ЭтотОбъект.Элементы.Добавить(
							СтрокаТаблицы.ИмяРеквизита,
							Тип("ПолеФормы"),
							Элементы.ГруппаПланыСчетов);
		НовыйЭлемент.Вид = ВидПоляФормы.ПолеФлажка;
		НовыйЭлемент.ПутьКДанным = СтрокаТаблицы.ИмяРеквизита;
		НовыйЭлемент.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Право;
		
		МассивИнформацияПоВалютам = Новый Массив;
		Если СтрокаТаблицы.УчетВФункциональнойВалюте = Перечисления.ВидыУчетаВФункциональнойВалюте.ВВалютеРегл Тогда
			МассивИнформацияПоВалютам.Добавить(НСтр("ru = 'Функциональная валюта: валюта регл. учета организации';
													|en = 'Functional currency: company local accounting currency'"));
		Иначе
			МассивИнформацияПоВалютам.Добавить(СтрШаблон(НСтр("ru = 'Функциональная валюта: %1';
																|en = 'Functional currency: %1'"), ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета()));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВалютаПредставления) Тогда
			МассивИнформацияПоВалютам.Добавить(СтрШаблон(НСтр("ru = 'Валюта представления: %1';
																|en = 'Presentation currency: %1'"), СтрокаТаблицы.ВалютаПредставления));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВалютаУправленческогоУчетаНаПланеСчетов) Тогда
			МассивИнформацияПоВалютам.Добавить(СтрШаблон(НСтр("ru = 'Валюта  упр. учета: %1';
																|en = 'Management accounting currency: %1'"), СтрокаТаблицы.ВалютаУправленческогоУчетаНаПланеСчетов));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(СтрокаТаблицы.ВалютаФинансовойОтчетности) Тогда
			МассивИнформацияПоВалютам.Добавить(СтрШаблон(НСтр("ru = 'Валюта фин. отчетности: %1';
																|en = 'Financial reporting currency: %1'"), СтрокаТаблицы.ВалютаФинансовойОтчетности));
		КонецЕсли;
		
		НовыйЭлемент.Подсказка = СтрСоединить(МассивИнформацияПоВалютам, ",");
		НовыйЭлемент.ОтображениеПодсказки = ОтображениеПодсказки.ОтображатьСнизу;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементов()
	
	Для каждого СтрокаТаблицы Из ПрименяемыеПланыСчетов Цикл
		
		ПолеФормы = Элементы[СтрокаТаблицы.ИмяРеквизита]; // ПолеФормы - 
		
		ДоступностьФлага = Истина;
		
		Если ИспользуемыеВОтчетеПланыСчетов.НайтиПоЗначению(СтрокаТаблицы.Ссылка) <> Неопределено Тогда
			ДоступностьФлага = Ложь;
		КонецЕсли;
		
		ПолеФормы.Доступность = ДоступностьФлага;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти