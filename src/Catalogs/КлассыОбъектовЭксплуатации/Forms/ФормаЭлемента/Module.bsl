
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	УстановитьУсловноеОформление();
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	Если Не ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ПриСозданииЧтенииНаСервере(Истина);
	КонецЕсли;

	// СтандартныеПодсистемы.Свойства
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяЭлементаДляРазмещения", "ГруппаДополнительныеРеквизиты");
	ДополнительныеПараметры.Вставить("ОтложеннаяИнициализация", Истина);
	УправлениеСвойствами.ПриСозданииНаСервере(ЭтотОбъект, ДополнительныеПараметры);
	// Конец СтандартныеПодсистемы.Свойства

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ПриСозданииЧтенииНаСервере();

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	ТекущийОбъект.РеквизитыДляКонтроля.Загрузить(
		РеквизитыДляКонтроля.Выгрузить(
			Новый Структура("ОбязателенДляЗаполнения", Истина)));

	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ПередЗаписьюНаСервере(ЭтотОбъект, ТекущийОбъект);
	// Конец СтандартныеПодсистемы.Свойства

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	УстановитьДоступностьЭлементовНаСервере();
	
	ЗаполнитьРеквизитыДляКонтроля(ТекущийОбъект.РеквизитыДляКонтроля, ТекущийОбъект.ИспользуютсяПодклассы);
	
	Элементы.СтраницаОписания.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Описание);
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
	Элементы.РемонтныйЦиклВидРемонта.КнопкаСоздания = Истина;
	Элементы.ПрочиеРемонтыВидРемонта.КнопкаСоздания = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ПоказателиНаработки") Тогда
		
		НайденныеСтроки = Объект.ПоказателиНаработки.НайтиСтроки(Новый Структура("ПоказательНаработки", ВыбранноеЗначение));
		Если НайденныеСтроки.Количество() = 0 Тогда
			
			Объект.ПоказателиНаработки.Добавить().ПоказательНаработки = ВыбранноеЗначение;
			Модифицированность = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_КлассыОбъектовЭксплуатации");
	
	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	// СтандартныеПодсистемы.Свойства 
	Если УправлениеСвойствамиКлиент.ОбрабатыватьОповещения(ЭтотОбъект, ИмяСобытия, Параметр) Тогда
		ОбновитьЭлементыДополнительныхРеквизитов();
		УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	// СтандартныеПодсистемы.Свойства
	УправлениеСвойствами.ОбработкаПроверкиЗаполнения(ЭтотОбъект, Отказ, ПроверяемыеРеквизиты);
	// Конец СтандартныеПодсистемы.Свойства

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЭтоКлассУзлаПриИзменении(Элемент)
	ЭтоКлассУзлаПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ЭтоКлассУзлаПриИзмененииНаСервере()
	
	ЗаполнитьРеквизитыДляКонтроля(РеквизитыДляКонтроля, Объект.ИспользуютсяПодклассы);
	
КонецПроцедуры

&НаКлиенте
Процедура ИспользуютсяПодклассыПриИзменении(Элемент)
	ИспользуютсяПодклассыПриИзмененииНаСервере();
КонецПроцедуры

&НаСервере
Процедура ИспользуютсяПодклассыПриИзмененииНаСервере()
	
	ЗаполнитьРеквизитыДляКонтроля(РеквизитыДляКонтроля, Объект.ИспользуютсяПодклассы);
	УстановитьДоступностьЭлементовНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура НаборСвойствОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если ЗначениеЗаполнено(Объект.НаборСвойств) Тогда
		
		ОткрытьФорму(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.Форма.ФормаЭлемента",
			Новый Структура("Ключ", Объект.НаборСвойств));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НаборСвойствСоздание(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Наименование) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(НСтр("ru = 'Наименование должно быть заполнено';
																|en = 'The name is required'"),,"Объект.Наименование");
		Возврат;
		
	КонецЕсли;
	
	НаборСвойствСозданиеНаСервере();
	
	Если ЗначениеЗаполнено(Объект.НаборСвойств) Тогда
		
		ОткрытьФорму(
			"Справочник.НаборыДополнительныхРеквизитовИСведений.Форма.ФормаЭлемента",
			Новый Структура("Ключ", Объект.НаборСвойств));
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НаборСвойствСозданиеНаСервере()
	
	ОбъектНабора = Справочники.НаборыДополнительныхРеквизитовИСведений.СоздатьЭлемент();
	ОбъектНабора.Наименование = Объект.Наименование;
	ОбъектНабора.Используется = Истина;
	ОбъектНабора.Родитель = ?(
		Объект.ЭтоКлассУзла,
		УправлениеСвойствами.НаборСвойствПоИмени("Справочник_УзлыОбъектовЭксплуатации"),
		УправлениеСвойствами.НаборСвойствПоИмени("Справочник_ОбъектыЭксплуатации"));
	
	ОбъектНабора.Записать();
	
	Объект.НаборСвойств = ОбъектНабора.Ссылка;
	
КонецПроцедуры

&НаКлиенте
Процедура ГруппаСтраницПриСменеСтраницы(Элемент, ТекущаяСтраница)

	// СтандартныеПодсистемы.Свойства
	Если ЭтотОбъект.ПараметрыСвойств.Свойство(ТекущаяСтраница.Имя)
	        И Не ЭтотОбъект.ПараметрыСвойств.ВыполненаОтложеннаяИнициализация Тогда
	    
	    СвойстваВыполнитьОтложеннуюИнициализацию();
	    УправлениеСвойствамиКлиент.ПослеЗагрузкиДополнительныхРеквизитов(ЭтотОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.Свойства
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПоказателиНаработки

&НаКлиенте
Процедура ПоказателиНаработкиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.ПоказателиНаработки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Если НоваяСтрока И НЕ Копирование Тогда
		ТекущиеДанные.СпособРегистрации = ПредопределенноеЗначение("Перечисление.СпособыРегистрацииНаработки.Независимо");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказателиНаработкиСпособРегистрацииПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.ПоказателиНаработки.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ТекущиеДанные.РегистрироватьОтИсточника = 
		ТекущиеДанные.СпособРегистрации = ПредопределенноеЗначение("Перечисление.СпособыРегистрацииНаработки.ОтОбъектаЭксплуатации");

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборПоказателейНаработки(Команда)
	
	МассивВыбранных = Новый Массив;
	Для Каждого Строка Из Объект.ПоказателиНаработки Цикл
		МассивВыбранных.Добавить(Строка.ПоказательНаработки);
	КонецЦикла;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("МассивВыбранных", МассивВыбранных);
	СтруктураПараметров.Вставить("ЗакрыватьПриВыборе", Ложь);
	
	ОткрытьФорму("Справочник.ПоказателиНаработки.ФормаВыбора", СтруктураПараметров, ЭтаФорма, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьПоказательНаработки(Команда)
	
	ТекущаяСтрока = Элементы.ПоказателиНаработки.ТекущаяСтрока;
	Если ТекущаяСтрока <> Неопределено Тогда
		
		Объект.ПоказателиНаработки.Удалить(Объект.ПоказателиНаработки.НайтиПоИдентификатору(ТекущаяСтрока));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.Свойства

&НаКлиенте
Процедура Подключаемый_СвойстваВыполнитьКоманду(ЭлементИлиКоманда, НавигационнаяСсылка = Неопределено, СтандартнаяОбработка = Неопределено)
	
	УправлениеСвойствамиКлиент.ВыполнитьКоманду(ЭтотОбъект, ЭлементИлиКоманда, СтандартнаяОбработка);
	
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область СтандартныеПодсистемы

// СтандартныеПодсистемы.Свойства 

&НаСервере
Процедура ОбновитьЭлементыДополнительныхРеквизитов()

	УправлениеСвойствами.ОбновитьЭлементыДополнительныхРеквизитов(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ОбновитьЗависимостиДополнительныхРеквизитов()
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПриИзмененииДополнительногоРеквизита(Элемент)
	УправлениеСвойствамиКлиент.ОбновитьЗависимостиДополнительныхРеквизитов(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СвойстваВыполнитьОтложеннуюИнициализацию()
    УправлениеСвойствами.ЗаполнитьДополнительныеРеквизитыВФорме(ЭтотОбъект);
КонецПроцедуры

// Конец СтандартныеПодсистемы.Свойства

#КонецОбласти

#Область Прочее

&НаСервере
Процедура УстановитьУсловноеОформление()

	УсловноеОформление.Элементы.Очистить();

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РемонтныйЦиклИнтервалНаработки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РемонтныйЦиклПоказательНаработки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РемонтныйЦиклПоказательНаработкиЕдиницаИзмерения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РемонтныйЦиклПоНаработке");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РемонтныйЦиклИнтервалВремени.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РемонтныйЦиклЕдиницаВремени.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.РемонтныйЦиклПоНаработке");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПрочиеРемонтыИнтервалНаработки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПрочиеРемонтыПоказательНаработки.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПрочиеРемонтыПоказательНаработкиЕдиницаИзмерения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПрочиеРемонты.ПоНаработке");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПрочиеРемонтыИнтервалВремени.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПрочиеРемонтыЕдиницаВремени.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПрочиеРемонты.ПоНаработке");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("Видимость", Ложь);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПоказателиНаработкиМинимальныйПериодРасчета.Имя);

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПоказателиНаработкиМаксимальныйПериодРасчета.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПоказателиНаработки.ПересчитыватьСреднесуточноеЗначение");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.ПоказателиНаработкиПериодичностьРегистрации.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Объект.ПоказателиНаработки.РегистрироватьОтИсточника");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	Элемент.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не требуется>';
																|en = '<not required>'"));
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

	//

	Элемент = УсловноеОформление.Элементы.Добавить();

	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(Элементы.РеквизитыДляКонтроляОбязателенДляЗаполнения.Имя);

	ОтборЭлемента = Элемент.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("РеквизитыДляКонтроля.ТолькоПросмотрОбязательности");
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Истина;

	Элемент.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	Элемент.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);

КонецПроцедуры

&НаСервере
Процедура ПриСозданииЧтенииНаСервере(ЭтоНовый=Ложь)
	
	ИнициализацияФормыПриСозданииНаСервере();
	
	Элементы.СтраницаОписания.Картинка = ОбщегоНазначенияКлиентСервер.КартинкаКомментария(Объект.Описание);
	
	ЗаполнитьРеквизитыДляКонтроля(Объект.РеквизитыДляКонтроля, Объект.ИспользуютсяПодклассы);
	УстановитьДоступностьЭлементовНаСервере();
	
	Элементы.РемонтныйЦиклВидРемонта.КнопкаСоздания = Не ЭтоНовый;
	Элементы.ПрочиеРемонтыВидРемонта.КнопкаСоздания = Не ЭтоНовый;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьЭлементовНаСервере()
	
	МассивЭлементов = Новый Массив;
	МассивЭлементов.Добавить("СтраницаРемонтногоЦикла");
	МассивЭлементов.Добавить("СтраницаПрочихРемонтов");
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "Видимость", Не Объект.ИспользуютсяПодклассы);
	
	ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, "ЭтоКлассУзла", "Видимость", ИспользоватьУзлыОбъектовЭксплуатации);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьРеквизитыДляКонтроля(ДанныеЗаполнения, ИспользуютсяПодклассы)
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(НастройкиМетаданных.Имя КАК СТРОКА(255)) КАК ИмяРеквизита,
		|	ВЫРАЗИТЬ(НастройкиМетаданных.Синоним КАК СТРОКА) КАК СинонимРеквизита,
		|	ВЫРАЗИТЬ(НастройкиМетаданных.ОбязателенДляЗаполнения КАК БУЛЕВО) КАК ОбязателенДляЗаполнения,
		|	ВЫРАЗИТЬ(НастройкиМетаданных.ТолькоПросмотрОбязательности КАК БУЛЕВО) КАК ТолькоПросмотрОбязательности
		|ПОМЕСТИТЬ НастройкиМетаданных
		|ИЗ
		|	&НастройкиМетаданных КАК НастройкиМетаданных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(НастройкаТекущие.ИмяРеквизита КАК СТРОКА(255)) КАК ИмяРеквизита,
		|	ВЫРАЗИТЬ(НастройкаТекущие.ОбязателенДляЗаполнения КАК БУЛЕВО) КАК ОбязателенДляЗаполнения
		|ПОМЕСТИТЬ НастройкиТекущие
		|ИЗ
		|	&НастройкиТекущие КАК НастройкаТекущие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиМетаданных.ИмяРеквизита КАК ИмяРеквизита,
		|	НастройкиМетаданных.СинонимРеквизита КАК СинонимРеквизита,
		|	ВЫБОР
		|		КОГДА НастройкиМетаданных.ТолькоПросмотрОбязательности
		|			ТОГДА НастройкиМетаданных.ОбязателенДляЗаполнения
		|		ИНАЧЕ НастройкиТекущие.ОбязателенДляЗаполнения
		|	КОНЕЦ КАК ОбязателенДляЗаполнения,
		|	НастройкиМетаданных.ТолькоПросмотрОбязательности
		|ИЗ
		|	НастройкиМетаданных КАК НастройкиМетаданных
		|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиТекущие КАК НастройкиТекущие
		|		ПО НастройкиМетаданных.ИмяРеквизита = НастройкиТекущие.ИмяРеквизита");
	
	Запрос.УстановитьПараметр("НастройкиТекущие", ДанныеЗаполнения.Выгрузить( ,"ИмяРеквизита, ОбязателенДляЗаполнения"));
	Запрос.УстановитьПараметр(
		"НастройкиМетаданных",
		?(Объект.ЭтоКлассУзла,
			Справочники.УзлыОбъектовЭксплуатации.СоставРеквизитов(),
			Справочники.ОбъектыЭксплуатации.СоставРеквизитовОбъектаЭксплуатации()));
	
	Выборка = Запрос.Выполнить().Выбрать();
	РеквизитыДляКонтроля.Очистить();
	
	НастройкиОтдельныхРеквизитов = Новый Структура;
	НастройкиОтдельныхРеквизитов.Вставить("Подкласс", Новый Структура("ОбязателенДляЗаполнения", ИспользуютсяПодклассы));
	
	Пока Выборка.Следующий() Цикл
		
		СтрокаРеквизита = РеквизитыДляКонтроля.Добавить();
		СтрокаРеквизита.ИмяРеквизита = СокрЛП(Выборка.ИмяРеквизита);
		ЗаполнитьЗначенияСвойств(СтрокаРеквизита, Выборка, , "ИмяРеквизита");
		
		Если НастройкиОтдельныхРеквизитов.Свойство(СтрокаРеквизита.ИмяРеквизита) Тогда
			ЗаполнитьЗначенияСвойств(СтрокаРеквизита, НастройкиОтдельныхРеквизитов[СтрокаРеквизита.ИмяРеквизита]);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализацияФормыПриСозданииНаСервере()
	
	ИспользоватьУзлыОбъектовЭксплуатации = ПолучитьФункциональнуюОпцию("ИспользоватьУзлыОбъектовЭксплуатации");

	ДоступныеНаборыСвойств = Новый Массив;
	ДоступныеНаборыСвойств.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_ОбъектыЭксплуатации"));
	ДоступныеНаборыСвойств.Добавить(УправлениеСвойствами.НаборСвойствПоИмени("Справочник_УзлыОбъектовЭксплуатации"));
	
	СписокПараметровВыбора = Новый Массив();
	СписокПараметровВыбора.Добавить(Новый ПараметрВыбора("Отбор.Родитель", ДоступныеНаборыСвойств));
	
	Элементы.НаборСвойств.ПараметрыВыбора = Новый ФиксированныйМассив(СписокПараметровВыбора);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
