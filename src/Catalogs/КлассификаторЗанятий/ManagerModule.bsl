
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#Область ДляВызоваИзДругихПодсистем

// ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

// Возвращает реквизиты справочника, которые образуют естественный ключ для элементов справочника.
//
// Возвращаемое значение:
//  Массив из Строка - имена реквизитов, образующих естественный ключ.
//
Функция ПоляЕстественногоКлюча() Экспорт
	
	Результат = Новый Массив;
	
	Результат.Добавить("Код");
	
	Возврат Результат;
	
КонецФункции

// Конец ТехнологияСервиса.ВыгрузкаЗагрузкаДанных

#КонецОбласти

#КонецОбласти

#КонецЕсли

#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Начальное заполнение и обновление информационной базы.
Процедура НачальноеЗаполнение() Экспорт
	Обновить(ПолучитьМакет("ПредопределенныеЗначения").ПолучитьТекст(), Ложь);
КонецПроцедуры

// Обновляет данные регистра.
Процедура Обновить(ТекстXML, ПолучатьДанныеИзСервиса = Истина) Экспорт
	ЗарплатаКадры.ОбновитьКлассификатор(ТекстXML, ПолучатьДанныеИзСервиса);
КонецПроцедуры

Процедура ЗагрузитьКлассификатор(ТаблицаСоСсылками) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТаблицаСоСсылками", ТаблицаСоСсылками);
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеКлассификатора.Код КАК Код,
		|	ДанныеКлассификатора.КонтрольноеЧисло КАК КонтрольноеЧисло,
		|	ДанныеКлассификатора.НаименованиеГруппЗанятий КАК НаименованиеГруппЗанятий
		|ПОМЕСТИТЬ ВТДанныеКлассификатора
		|ИЗ
		|	&ТаблицаСоСсылками КАК ДанныеКлассификатора
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеСправочника.Ссылка КАК Ссылка,
		|	ДанныеКлассификатора.Код КАК Код,
		|	ДанныеКлассификатора.КонтрольноеЧисло КАК КонтрольноеЧисло,
		|	ДанныеКлассификатора.НаименованиеГруппЗанятий КАК НаименованиеГруппЗанятий
		|ИЗ
		|	ВТДанныеКлассификатора КАК ДанныеКлассификатора
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторЗанятий КАК ДанныеСправочника
		|		ПО (ДанныеКлассификатора.Код = ЕСТЬNULL(ДанныеСправочника.Код, НЕОПРЕДЕЛЕНО))";
	
	Родители = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			ОбъектСправочника = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			
			Если СтрДлина(Выборка.Код) < 4 Тогда
				ОбъектСправочника = СоздатьГруппу();
			Иначе
				ОбъектСправочника = СоздатьЭлемент();
			КонецЕсли;
			
			ОбъектСправочника.Родитель = Родители.Получить(Лев(Выборка.Код, СтрДлина(Выборка.Код) - 1));
			
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ОбъектСправочника, Выборка, , "Ссылка");
		ОбъектСправочника.ДополнительныеСвойства.Вставить("ЗаписьОбщихДанных");
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОбъектСправочника);
		
		Если СтрДлина(ОбъектСправочника.Код) < 4 Тогда
			Родители.Вставить(ОбъектСправочника.Код, ОбъектСправочника.Ссылка);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли