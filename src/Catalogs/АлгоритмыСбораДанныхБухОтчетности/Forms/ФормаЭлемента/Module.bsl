#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	УстановитьВидимостьОтбора();
	
	ТипыПоказатлей = Справочники.АлгоритмыСбораДанныхБухОтчетности.ТипыПоказателя();
	Для Каждого ТипПоказателяАлгоритма Из ТипыПоказатлей Цикл
		Элементы.Функция.СписокВыбора.Добавить(ТипПоказателяАлгоритма.Значение, ТипПоказателяАлгоритма.Представление);
	КонецЦикла;
	
	НастроитьЗаголовкиПолей(ЭтаФорма);
	
	Элементы.НаименованиеРасшифровки.Доступность = НЕ Объект.АвтоматическаяРасшифровка;
	
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)
	
	Если Объект.ОтборЗадан Тогда
		ТекущийОбъект.НастройкиОтбора = Новый ХранилищеЗначения(
			НастройкиОтбора.ПолучитьНастройки());
	Иначе
		ТекущийОбъект.НастройкиОтбора = Новый ХранилищеЗначения(Неопределено);
	КонецЕсли;

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	ВосстановитьНастройкиКомпоновщика("НастройкиОтбора", РеквизитФормыВЗначение("Объект"));
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ФункцияПриИзменении(Элемент)
	
	Объект.ОтборЗадан = Ложь;
	ЗагрузитьБазовыеНастройкиКомпоновщика();
	НастроитьЗаголовкиПолей(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаПриИзменении(Элемент)
	
	ОбновитьСхемуОтборов();
	
КонецПроцедуры

&НаКлиенте
Процедура КорСчетаПриИзменении(Элемент)
	 
	ОбновитьСхемуОтборов();
	
КонецПроцедуры

&НаСервере
Процедура ОтборНедоступенПриИзмененииНаСервере()
	
	Если Не Объект.ОтборНедоступен Тогда
		Объект.ВидДвиженияДенежныхСредств = Перечисления.ВидыДвиженийДенежныхСредств.ПустаяСсылка();
	КонецЕсли;
	
	УстановитьВидимостьОтбора();
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборНедоступенПриИзменении(Элемент)
	
	ОтборНедоступенПриИзмененииНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ТекстДобавитьИзменитьОтборНажатие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если Не ЗначениеЗаполнено(Объект.Счета) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Перед добавлением отбора необходимо выбрать счет.';
														|en = 'Select an account before adding the filter.'"),,
			"Объект.Счета");
		Возврат;
	КонецЕсли;
	
	Если Объект.ТипПоказателя = "ОБ" И Не ЗначениеЗаполнено(Объект.КорСчета) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Перед добавлением отбора необходимо выбрать кор. счет.';
														|en = 'Select a corr. account before adding the filter.'"),,
			"Объект.КорСчета");
		Возврат;
	КонецЕсли;

	ПараметрыОткрытия = ПараметрыОткрытияНастройкиОтборов(); 
	
	НастраиваемаяБухгалтерскаяОтчетностьКлиент.ОткрытьФормуНастройкиОтборов(
		ПараметрыОткрытия, ЭтотОбъект, НСтр("ru = 'Настройки отбора алгоритма сбора данных бухгалтерской отчетности';
											|en = 'Set up the filter of algorithm of accounting reporting data collection'"));

КонецПроцедуры

&НаКлиенте
Процедура ВидДвиженияДенежныхСредствПриИзменении(Элемент)
	
	ОбновитьРасшифровкуСлагаемого();
	
КонецПроцедуры

&НаКлиенте
Процедура РучнаяРасшифровкаПриИзменении(Элемент)
	
	Элементы.НаименованиеРасшифровки.Доступность = НЕ Объект.АвтоматическаяРасшифровка;

	Если Объект.АвтоматическаяРасшифровка Тогда
		ОбновитьРасшифровкуСлагаемого();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьВидимостьОтбора()

	Если ТипЗнч(Объект.Владелец) = Тип("СправочникСсылка.СтрокиБухОтчетности") 
			И ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Владелец, "ФормаОтчетности") = Перечисления.ФормыБухгалтерскойОтчетности.ОДДС 
			И Объект.ОтборНедоступен Тогда
		Элементы.ВидДвиженияДенежныхСредств.Видимость = Истина;
	Иначе
		Элементы.ВидДвиженияДенежныхСредств.Видимость = Ложь;
	КонецЕсли;

	Если Объект.ОтборНедоступен Тогда 
		Элементы.ТекстДобавитьИзменитьОтбор.Видимость = Ложь;
	Иначе 
		Элементы.ТекстДобавитьИзменитьОтбор.Видимость = Истина;
	КонецЕсли;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗаголовкиПолей(Форма)
	
	Объект = Форма.Объект;
	
	ПредставлениеГиперссылокОтбора = Новый Соответствие();
	ПредставлениеГиперссылокОтбора.Вставить(Истина, НСтр("ru = 'Отбор установлен, изменить';
														|en = 'Filter is set, change'"));
	ПредставлениеГиперссылокОтбора.Вставить(Ложь, НСтр("ru = 'Отбор не установлен, добавить';
														|en = 'Filter not set, add'"));
	
	Форма.ТекстДобавитьИзменитьОтбор = 
		ПредставлениеГиперссылокОтбора.Получить(Объект.ОтборЗадан);
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьБазовыеНастройкиКомпоновщика()
	
	Если Объект.ТипПоказателя = "ОБ" Тогда
		Макет = "НастройкиОтбораПоСчетамКорСчетам";
	Иначе
		Макет = "НастройкиОтбораПоСчетам"; 
	КонецЕсли;
	
	СхемаКомпоновки = Справочники.АлгоритмыСбораДанныхБухОтчетности.ПолучитьМакет(Макет);
	
	НастройкиОтбора = Новый КомпоновщикНастроекКомпоновкиДанных;
	НастройкиОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));;

	НастройкиОтбора.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	
	ОбновитьРасшифровкуСлагаемого();
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройкиКомпоновщика(ИмяРеквизитаСНастройками, ДокОбъект = Неопределено)
	
	Если ДокОбъект = Неопределено Тогда
		ДокОбъект = РеквизитФормыВЗначение("Объект");
	КонецЕсли;

	Если Объект.ТипПоказателя = "ОБ" Тогда
		Макет = "НастройкиОтбораПоСчетамКорСчетам";
	Иначе
		Макет = "НастройкиОтбораПоСчетам"; 
	КонецЕсли;
	
	СхемаКомпоновки = Справочники.АлгоритмыСбораДанныхБухОтчетности.ПолучитьМакет(Макет);
	
	НастройкиОтбора = Новый КомпоновщикНастроекКомпоновкиДанных;
	НастройкиОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(СхемаКомпоновки));;
	
	НастройкиКомпоновщика = ДокОбъект.НастройкиОтбора.Получить();

	Если Не НастройкиКомпоновщика = Неопределено Тогда
		НастройкиОтбора.ЗагрузитьНастройки(НастройкиКомпоновщика);		
	Иначе
		НастройкиОтбора.ЗагрузитьНастройки(СхемаКомпоновки.НастройкиПоУмолчанию);
	КонецЕсли;

КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтборУстановлен(НовыеНастройки)
	
	ОтборУстановлен = Ложь;
	НастройкиКомпоновщика = НовыеНастройки.ПолучитьНастройки();
	Для Каждого ЭлементОтбора Из НастройкиКомпоновщика.Отбор.Элементы Цикл
		Если ЭлементОтбора.Использование Тогда
			
			ОтборУстановлен = Истина;
			Прервать;
			
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ПараметрДанных Из НастройкиКомпоновщика.ПараметрыДанных.Элементы Цикл
		
		Если (ТипЗнч(ПараметрДанных.Значение) = Тип("Булево") 
			И ПараметрДанных.Значение) Или ОтборУстановлен Тогда
			
			ОтборУстановлен = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ОтборУстановлен;
	
КонецФункции

&НаСервере
Функция ПараметрыОткрытияНастройкиОтборов()
	
	ПараметрыОткрытия = Новый Структура;
	Если Объект.ТипПоказателя = "ОБ" Тогда
		ПараметрыОткрытия.Вставить("ИмяСхемы", "НастройкиОтбораПоСчетамКорСчетам");
		ПараметрыОткрытия.Вставить("КорСчета", ОбщегоНазначенияКлиентСервер.СвернутьМассив(Объект.КорСчета.Выгрузить().ВыгрузитьКолонку("Счет")));
	Иначе
		ПараметрыОткрытия.Вставить("ИмяСхемы", "НастройкиОтбораПоСчетам");
	КонецЕсли;
	ПараметрыОткрытия.Вставить("ИмяНастроекКомпоновщика", "НастройкиОтбора");
	ПараметрыОткрытия.Вставить("НеНастраиватьПараметры", Истина);
	ПараметрыОткрытия.Вставить("АдресСхемыКомпоновкиДанных", АдресСхемыКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("Счета", ОбщегоНазначенияКлиентСервер.СвернутьМассив(Объект.Счета.Выгрузить().ВыгрузитьКолонку("Счет")));
	ПараметрыОткрытия.Вставить("УникальныйИдентификатор", УникальныйИдентификатор);
	ПараметрыОткрытия.Вставить("НастройкиОтбора", НастройкиОтбора);

	Адреса = Справочники.АлгоритмыСбораДанныхБухОтчетности.ПолучитьАдресаСхемыКомпоновкиДанныхВоВременномХранилище(ПараметрыОткрытия);

	ПараметрыОткрытия.Вставить("СхемаКомпоновкиДанных", Адреса.СхемаКомпоновкиДанных);
	ПараметрыОткрытия.Вставить("НастройкиКомпоновкиДанных", Адреса.НастройкиКомпоновкиДанных);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции
	
&НаКлиенте
Процедура РедактироватьСхемуКомпоновкиДанныхЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Не ЗначениеЗаполнено(Результат) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтаФорма[ДополнительныеПараметры.ИмяНастроекКомпоновщика].ЗагрузитьНастройки(
		ПолучитьИзВременногоХранилища(Результат));
	
	Объект.ОтборЗадан = ОтборУстановлен(НастройкиОтбора);
	Модифицированность = Макс(Модифицированность, Объект.ОтборЗадан);
	
	Если Объект.ОтборЗадан Тогда
		ОбновитьРасшифровкуСлагаемого();
	КонецЕсли;
	
	НастроитьЗаголовкиПолей(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСхемуОтборов()
	
	ПараметрыОткрытияНастроек = ПараметрыОткрытияНастройкиОтборов();
	Схема = Справочники.АлгоритмыСбораДанныхБухОтчетности.ОбновитьСхемуОтборов(
		ОбщегоНазначенияКлиентСервер.СвернутьМассив(Объект.Счета.Выгрузить().ВыгрузитьКолонку("Счет")),
		Справочники.АлгоритмыСбораДанныхБухОтчетности.ПолучитьМакет(ПараметрыОткрытияНастроек.ИмяСхемы));
		
	Если Объект.ТипПоказателя = "ОБ" Тогда
		Схема = Справочники.АлгоритмыСбораДанныхБухОтчетности.ОбновитьСхемуОтборов(
			ОбщегоНазначенияКлиентСервер.СвернутьМассив(Объект.КорСчета.Выгрузить().ВыгрузитьКолонку("Счет")),
			Схема, "КорСубконто");	
	КонецЕсли;

		
	АдресСхемыКомпоновкиДанных = ПоместитьВоВременноеХранилище(Схема, УникальныйИдентификатор);
	НастройкиОтбора.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(Схема));
	НастройкиОтбора.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.Полное);

	ОбновитьРасшифровкуСлагаемого();
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРасшифровкуСлагаемого()
	
	Отборы = Неопределено;
	Если Объект.ОтборЗадан Тогда
		Отборы = НастройкиОтбора.ПолучитьНастройки();
	ИначеЕсли Не Объект.ВидДвиженияДенежныхСредств.Пустая() Тогда
		Отборы = Объект.ВидДвиженияДенежныхСредств;
	КонецЕсли;
			
	Объект.НаименованиеРасшифровки = Справочники.АлгоритмыСбораДанныхБухОтчетности.СформироватьРасшифровкуАлгоритма(
		Объект.ТипПоказателя,
		Объект.Счета.Выгрузить().ВыгрузитьКолонку("Счет"),
		Объект.КорСчета.Выгрузить().ВыгрузитьКолонку("Счет"),
		Отборы);
		
КонецПроцедуры

#КонецОбласти




