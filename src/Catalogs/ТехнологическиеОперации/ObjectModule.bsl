#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	ЗначенияРеквизитовРЦ = ЗначенияРеквизитовРЦ();
	
	ИсключитьИзПроверки = Новый СписокЗначений();
	ИсключитьИзПроверки.Добавить("ВариантНаладки",, СодержитВложенныйМаршрут ИЛИ СодержитТехнологическийПроцесс ИЛИ НЕ ЗначенияРеквизитовРЦ.ИспользуютсяВариантыНаладки);
	ИсключитьИзПроверки.Добавить("Загрузка",, СодержитВложенныйМаршрут ИЛИ СодержитТехнологическийПроцесс ИЛИ НЕ ЗначенияРеквизитовРЦ.ПараллельнаяЗагрузка);
	ИсключитьИзПроверки.Добавить("ВложенныйМаршрут",, НЕ СодержитВложенныйМаршрут);
	ИсключитьИзПроверки.Добавить("ТехнологическийПроцесс",, НЕ СодержитТехнологическийПроцесс);
	ИсключитьИзПроверки.Добавить("КоэффициентТехнологическогоПроцесса",, НЕ СодержитТехнологическийПроцесс);
	ИсключитьИзПроверки.Добавить("Контроль",, СодержитВложенныйМаршрут ИЛИ СодержитТехнологическийПроцесс ИЛИ НЕ ПолучитьФункциональнуюОпцию("ИспользоватьКонтрольВыполненияОпераций"));
	
	ТолькоПроверкаДополнительныхРеквизитов = ДополнительныеСвойства.Свойство("СтатусСпецификации")
		И ДополнительныеСвойства.СтатусСпецификации <> Перечисления.СтатусыСпецификаций.Действует;
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	Для каждого Элемент Из ИсключитьИзПроверки Цикл
		Если Элемент.Пометка ИЛИ ТолькоПроверкаДополнительныхРеквизитов Тогда
			МассивНепроверяемыхРеквизитов.Добавить(Элемент.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
	Если ТолькоПроверкаДополнительныхРеквизитов Тогда
		Возврат; // только проверка дополнительных реквизитов
	КонецЕсли;
	
	ПроверитьЗаполнениеРеквизитов(Отказ);
	
КонецПроцедуры

Процедура ПроверитьЗаполнениеРеквизитов(Отказ, НазваниеЭтапа = "") Экспорт
	
	Если НомерОперации >= НомерСледующейОперации 
		И НомерСледующейОперации <> 0 Тогда
		
		Если ЗначениеЗаполнено(НазваниеЭтапа) Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Номер следующей операции должен быть больше номера операции (этап: %2, операция: %3).';
											|en = 'The next operation number must be greater than the operation number (stage: %2, operation: %3).'"),
				НазваниеЭтапа, Наименование);
		Иначе
			ТекстСообщения = НСтр("ru = 'Номер следующей операции должен быть больше номера операции.';
									|en = 'Number of the next operation should be greater than the operation number.'");
		КонецЕсли;
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "НомерСледующейОперации",, Отказ);
		
	КонецЕсли; 
	
	Если ЗначениеЗаполнено(РабочийЦентр) Тогда
		
		Если ТипЗнч(РабочийЦентр) = Тип("СправочникСсылка.РабочиеЦентры") Тогда
		
			РеквизитыРабочийЦентр = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РабочийЦентр, "ВидРабочегоЦентра.ПараллельнаяЗагрузка, МаксимальнаяЗагрузка");
			
			Если РеквизитыРабочийЦентр.ВидРабочегоЦентраПараллельнаяЗагрузка 
				И Загрузка > РеквизитыРабочийЦентр.МаксимальнаяЗагрузка  Тогда
				
				Если ЗначениеЗаполнено(НазваниеЭтапа) Тогда
					ТекстСообщения = СтрШаблон(НСтр("ru = 'Загрузка операции превышает максимальную загрузку рабочего центра (этап: %2, операция: %3).';
													|en = 'Operation load exceeds maximum work center load (stage: %2, operation: %3).'"),
						НазваниеЭтапа, Наименование);
				Иначе
					ТекстСообщения = НСтр("ru = 'Загрузка операции превышает максимальную загрузку рабочего центра.';
											|en = 'Operation load exceeds the maximum work center load.'");
				КонецЕсли;
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Загрузка",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
		Если ВспомогательныеРабочиеЦентры.Количество() > 0 Тогда
			
			ТекстЗапроса = "
			|ВЫБРАТЬ ПЕРВЫЕ 1
			|	ИСТИНА
			|ИЗ
			|	Справочник.РабочиеЦентры КАК ОсновныеРабочиеЦентры
			|ГДЕ
			|	(ОсновныеРабочиеЦентры.Ссылка = &ОсновнойРабочийЦентр
			|		ИЛИ ОсновныеРабочиеЦентры.ВидРабочегоЦентра = &ОсновнойРабочийЦентр)
			|	И ИСТИНА В (
			|			ВЫБРАТЬ ПЕРВЫЕ 1
			|				ИСТИНА
			|			ИЗ 
			|				Справочник.РабочиеЦентры КАК ВспомогательныеРабочиеЦентры
			|			ГДЕ
			|				(ВспомогательныеРабочиеЦентры.Ссылка В (&ВспомогательныеРабочиеЦентры)
			|					ИЛИ ВспомогательныеРабочиеЦентры.ВидРабочегоЦентра В (&ВспомогательныеРабочиеЦентры))
			|				И ОсновныеРабочиеЦентры.Ссылка = ВспомогательныеРабочиеЦентры.Ссылка)
			|";
			
			Запрос = Новый Запрос(ТекстЗапроса);
			Запрос.УстановитьПараметр("ОсновнойРабочийЦентр",         РабочийЦентр);
			Запрос.УстановитьПараметр("ВспомогательныеРабочиеЦентры", ВспомогательныеРабочиеЦентры.ВыгрузитьКолонку("РабочийЦентр"));
			
			Если НЕ Запрос.Выполнить().Пустой() Тогда
				
				ТекстСообщения = НСтр("ru = 'Списке вспомогательных рабочих центров запрещено указывать рабочий центр (либо вид рабочего центра), дублирующий основной рабочий центр.';
										|en = 'It is prohibited to specify a work center or a work center type duplicating the main work center in the auxiliary work center list.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "ВспомогательныеРабочиеЦентры",, Отказ);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Участок) И ЗначениеЗаполнено(РабочийЦентр) Тогда
		
		Если ТипЗнч(РабочийЦентр) = Тип("СправочникСсылка.РабочиеЦентры") Тогда

			РеквизитРабочийЦентр = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РабочийЦентр, "Участок");

			Если Участок <> РеквизитРабочийЦентр Тогда

				ТекстСообщения = НСтр("ru = 'Поле ""Участок"" отличается от участка рабочего центра.';
										|en = '""Area"" field is different from the work center area.'");
				ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, ЭтотОбъект, "Участок", , Отказ);

			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;	
	
КонецПроцедуры

Процедура ПередЗаписью(Отказ)
	
	Если ОбменДанными.Загрузка Тогда
		Возврат;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(ЭтотОбъект);
	
	Если Владелец.Пустая() Тогда
		Возврат;
	КонецЕсли;
	
	УдаляемаяОперацияНеДолжнаИспользоватьсяВМаршрутнойКарте(Отказ);
	
	ПроверитьЗацикливание(Отказ);
	
	ПроверитьСтатусВладельца(Отказ);
	
	ЗаполнитьСлужебныеРеквизиты();
	
КонецПроцедуры

Процедура ПриКопировании(ОбъектКопирования)
	
	Идентификатор = 0;
	Основание = Неопределено;
	
КонецПроцедуры

Процедура ОбработкаЗаполнения(ДанныеЗаполнения, СтандартнаяОбработка)
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") И ДанныеЗаполнения.Свойство("Владелец") Тогда
		НомерОперации = Справочники.ТехнологическиеОперации.НовыйНомерОперации(ДанныеЗаполнения.Владелец);
		НомерСледующейОперации = НомерОперации + 1;
	КонецЕсли;	

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Прочее

Процедура ЗаполнитьСлужебныеРеквизиты() Экспорт
	
	// При копировании маршрутной карты исполняется альтернативный обработчик создания технологической операции
	//  см. Справочники.ТехнологическиеОперации.СкопироватьТехнологическуюОперацию.
	
	Если Не ЗначениеЗаполнено(Идентификатор) Тогда
		Идентификатор = Справочники.ТехнологическиеОперации.НовыйИдентификаторОперации(Владелец);
	КонецЕсли;
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.ЭтапыПроизводства") Тогда
		Спецификация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, "Владелец");
	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗацикливание(Отказ)

	Если НЕ СодержитВложенныйМаршрут Тогда
		Возврат;
	КонецЕсли;
	
	Если Справочники.ТехнологическиеОперации.ЕстьЗацикливание(ВложенныйМаршрут, Владелец, Отказ) Тогда
		ТекстСообщения = НСтр("ru = 'Выбранный вложенный маршрут приводит к зацикливанию операций.';
								|en = 'The selected nested route causes operation looping.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка, "ВложенныйМаршрут",, Отказ);
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверитьСтатусВладельца(Отказ)
	
	Если Отказ ИЛИ НЕ ЭтоНовый() Тогда
		Возврат;
	КонецЕсли;
	
	Если ДополнительныеСвойства.Свойство("НеПроверятьСтатусВладельца") Тогда
		Возврат;
	КонецЕсли;
	
	ШаблонСообщения = НСтр("ru = '%1 имеет статус ""Действует"". Добавление новых операций недоступно.';
							|en = '%1 has the Valid status. You cannot add new operations.'");
	
	Если ТипЗнч(Владелец) = Тип("СправочникСсылка.МаршрутныеКарты") Тогда
		ПутьКРеквизиту = "Статус";
		СтатусДействует = Перечисления.СтатусыМаршрутныхКарт.Действует;
		ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Маршрутная карта';
														|en = 'Route sheet'"));
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.ТехнологическиеПроцессы") Тогда
		ПутьКРеквизиту = "Статус";
		СтатусДействует = Перечисления.СтатусыТехнологическихПроцессов.Действует;
		ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Технологический процесс';
														|en = 'Technological process'"));
	ИначеЕсли ТипЗнч(Владелец) = Тип("СправочникСсылка.ЭтапыПроизводства") Тогда
		ПутьКРеквизиту = "Владелец.Статус";
		СтатусДействует = Перечисления.СтатусыСпецификаций.Действует;
		ТекстСообщения = СтрШаблон(ШаблонСообщения, НСтр("ru = 'Спецификация';
														|en = 'Bill of materials'"));
	Иначе
		Возврат;
	КонецЕсли;
	
	СтатусВладельца = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Владелец, ПутьКРеквизиту);
	Если СтатусВладельца = СтатусДействует Тогда
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Владелец,,,Отказ);
	КонецЕсли;
	
КонецПроцедуры

Функция ЗначенияРеквизитовРЦ()
	
	Если ЗначениеЗаполнено(РабочийЦентр) Тогда
		
		ИменаРеквизитов = Новый Структура;
		ИменаРеквизитов.Вставить("ИспользуютсяВариантыНаладки", "ИспользуютсяВариантыНаладки");
		ИменаРеквизитов.Вставить("ПараллельнаяЗагрузка", "ПараллельнаяЗагрузка");
		
		Если ТипЗнч(РабочийЦентр) = Тип("СправочникСсылка.РабочиеЦентры") Тогда
			Для каждого Элемент Из ИменаРеквизитов Цикл
				ИменаРеквизитов[Элемент.Ключ] = "ВидРабочегоЦентра." + Элемент.Значение;
			КонецЦикла;
		КонецЕсли;
		
		Результат = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РабочийЦентр, ИменаРеквизитов);
		
	Иначе
		
		Результат = Новый Структура;
		Результат.Вставить("ИспользуютсяВариантыНаладки", Ложь);
		Результат.Вставить("ПараллельнаяЗагрузка", Ложь);
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Процедура УдаляемаяОперацияНеДолжнаИспользоватьсяВМаршрутнойКарте(Отказ)

	Если НЕ ЭтоНовый() И ПометкаУдаления И НЕ ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "ПометкаУдаления") Тогда
		
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ТаблицаСвязи.Ссылка
		|ИЗ
		|	Справочник.МаршрутныеКарты.ВыходныеИзделия КАК ТаблицаСвязи
		|ГДЕ
		|	ТаблицаСвязи.ОперацияРедактирование = &Операция
		|	И НЕ ТаблицаСвязи.Ссылка.ПометкаУдаления
		|	И ТаблицаСвязи.Ссылка = &Владелец";
		
		Запрос.УстановитьПараметр("Операция", Ссылка);
		Запрос.УстановитьПараметр("Владелец", Владелец);
		
		Результат = Запрос.Выполнить();
		Если НЕ Результат.Пустой() Тогда
			ТекстСообщения = НСтр("ru = 'Операция используется в маршрутной карте. Удаление невозможно.';
									|en = 'The operation is used in the route sheet. Cannot remove it.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, Ссылка,,, Отказ);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
 
#КонецОбласти

#КонецЕсли