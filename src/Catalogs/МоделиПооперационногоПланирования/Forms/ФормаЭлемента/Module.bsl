#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);

	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ПриЧтенииСозданииНаСервере();
		
	КонецЕсли;
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	ПриЧтенииСозданииНаСервере();
	
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);

КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СоотношениеКритериевПриИзменении(Элемент)
	
	Регулятор = Элементы.СоотношениеКритериев;
	Веса = ВесаПоПозицииРегулятора(
		Регулятор.МинимальноеЗначение, Регулятор.МаксимальноеЗначение, СоотношениеКритериев);
	
	// Принято допущение, что критерий времени находится слева, а критерий стоимости справа от шкалы.
	Объект.ВесМинимизироватьВремя = Веса.Вес1;
	Объект.ВесМинимизироватьСтоимость = Веса.Вес2;
	
	ЗаполнитьРасшифровкуСоотношенияКритериев(ЭтотОбъект);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ОбщегоНазначенияУТКлиент.РазрешитьРедактированиеРеквизитовОбъекта(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ПриЧтенииСозданииНаСервере()

	УстановитьПоложениеРегулятораСоотношениеКритериев();
	ЗаполнитьРасшифровкуСоотношенияКритериев(ЭтотОбъект);

КонецПроцедуры

&НаСервере
Процедура УстановитьПоложениеРегулятораСоотношениеКритериев()
	
	Регулятор = Элементы.СоотношениеКритериев;
	СоотношениеКритериев = ПозицияРегулятораПоВесу(
		Регулятор.МинимальноеЗначение, Регулятор.МаксимальноеЗначение, Объект.ВесМинимизироватьВремя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВесаПоПозицииРегулятора(МинЗначение, МаксЗначение, ТекущееЗначение)
	
	Результат = Новый Структура("Вес1, Вес2", 0.5, 0.5);
	
	КоличествоДелений = МаксЗначение - МинЗначение;
	Если КоличествоДелений > 0 Тогда
		ЦенаДеления = ОКР(1/КоличествоДелений, 3);
		Результат.Вес1 = ОКР(1-((ТекущееЗначение-МинЗначение)*ЦенаДеления), 3);
		Результат.Вес2 = 1 - Результат.Вес1;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ПозицияРегулятораПоВесу(МинЗначение, МаксЗначение, Вес)
	
	КоличествоДелений = МаксЗначение - МинЗначение;
	Если КоличествоДелений > 0 Тогда
		ЦенаДеления = ОКР(1/КоличествоДелений, 3);
		Результат = (1-Вес)/ЦенаДеления+МинЗначение;
	Иначе
		Результат = МинЗначение;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьРасшифровкуСоотношенияКритериев(Форма)
	
	Если Форма.Объект.ВесМинимизироватьВремя >= Форма.Объект.ВесМинимизироватьСтоимость Тогда
		ОценкаВремя = ОКР(Форма.Объект.ВесМинимизироватьВремя, 2) * 100;
		ОценкаСтоимость = 100 - ОценкаВремя;
	Иначе
		ОценкаСтоимость = ОКР(Форма.Объект.ВесМинимизироватьСтоимость, 2) * 100;
		ОценкаВремя = 100 - ОценкаСтоимость;
	КонецЕсли;
	
	Если ОценкаВремя = ОценкаСтоимость Тогда
		
		Форма.Элементы.РасшифровкаСоотношениеКритериев.Заголовок = НСтр("ru = 'Текущая оценка: критерии оптимизации эквивалентны.';
																		|en = 'Current evaluation: optimization criteria are equivalent.'");
		
	ИначеЕсли ОценкаВремя = 100 Тогда
		
		Форма.Элементы.РасшифровкаСоотношениеКритериев.Заголовок = НСтр("ru = 'Текущая оценка: учитывается единственный критерий - сокращение срока выпуска.';
																		|en = 'Current evaluation: one criterion is considered - release time reduction.'");
		
	ИначеЕсли ОценкаСтоимость = 100 Тогда
		
		Форма.Элементы.РасшифровкаСоотношениеКритериев.Заголовок = НСтр("ru = 'Текущая оценка: учитывается единственный критерий - сокращение стоимости расписания.';
																		|en = 'Current evaluation: one criterion is considered - timetable cost reduction.'");
		
	Иначе
		
		Форма.Элементы.РасшифровкаСоотношениеКритериев.Заголовок = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Текущая оценка: значимость сокращения срока выпуска по отношению к сокращению стоимости расписания определяется соотношением %1% к %2%.';
					|en = 'Current evaluation: significance of release time reduction against the timetable cost reduction is determined by ratio %1% to %2%.'"),
				Формат(ОценкаВремя, "ЧЦ=3"),
				Формат(ОценкаСтоимость, "ЧЦ=3"));
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
