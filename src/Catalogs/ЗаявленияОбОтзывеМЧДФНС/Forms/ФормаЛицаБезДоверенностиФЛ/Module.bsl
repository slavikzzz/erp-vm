
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Параметры.СтруктураДанных;
	
	Если СтруктураДанных.Свойство("ТолькоПросмотрФормы") И СтруктураДанных.ТолькоПросмотрФормы Тогда
		Элементы.ЛицоБезДовФЛ_ФИО.ТолькоПросмотр 			= Истина;
		Элементы.ЛицоБезДовФЛ_Удостоверение.ТолькоПросмотр 	= Истина;
		Элементы.ЛицоБезДовФЛ_ИНН.ТолькоПросмотр 			= Истина;
		Элементы.ЛицоБезДовФЛ_НомЕРН.ТолькоПросмотр 		= Истина;
		Элементы.ЛицоБезДовФЛ_ОГРН.ТолькоПросмотр 			= Истина;
		Элементы.ЛицоБезДовФЛ_СНИЛС.ТолькоПросмотр 			= Истина;
		Элементы.ЛицоБезДовФЛ_Гражданство.ТолькоПросмотр 	= Истина;
		Элементы.ЛицоБезДовФЛ_ДатаРождения.ТолькоПросмотр 	= Истина;
		Элементы.ЛицоБезДовФЛ_Должность.ТолькоПросмотр 		= Истина;
		Элементы.ЛицоБезДовФЛ_Телефон.ТолькоПросмотр 		= Истина;
		Элементы.ФормаКнопкаСохранить.Доступность 			= Ложь;
	КонецЕсли;
	
	ВерсияФормата = ?(СтруктураДанных.Свойство("ВерсияФормата"), СтруктураДанных.ВерсияФормата, "");
	ЭтоПередоверие = СтруктураДанных.Свойство("ЭтоПередоверие") И СтруктураДанных.ЭтоПередоверие;
	
	ЭтоВерсия5_02 = ЗначениеЗаполнено(ВерсияФормата)
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияФормата + ".0.0", "5.02.0.0") >= 0;
	ЭтоВерсия5_03 = ЗначениеЗаполнено(ВерсияФормата)
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияФормата + ".0.0", "5.03.0.0") >= 0;
	
	Элементы.ГруппаЛицоБезДовФЛ_Удостоверение.Видимость = ЭтоПередоверие;
	Элементы.ГруппаЛицоБезДовФЛ_ИНННомЕРН.Видимость = ЭтоПередоверие;
	Элементы.ДекорацияЛицоБезДовФЛ_ИНННомЕРНРазделитель.Видимость = ЭтоПередоверие И ЭтоВерсия5_03;
	Элементы.ДекорацияЛицоБезДовФЛ_НомЕРН.Видимость = ЭтоПередоверие И ЭтоВерсия5_03;
	Элементы.ЛицоБезДовФЛ_НомЕРН.Видимость = ЭтоПередоверие И ЭтоВерсия5_03;
	Элементы.ГруппаЛицоБезДовФЛ_ОГРНСНИЛС.Видимость = ЭтоПередоверие;
	Элементы.ГруппаЛицоБезДовФЛ_Гражданство.Видимость = ЭтоПередоверие;
	Элементы.ГруппаЛицоБезДовФЛ_ДатаРождения.Видимость = ЭтоПередоверие;
	Элементы.ГруппаЛицоБезДовФЛ_Должность.Видимость = НЕ ЭтоПередоверие;
	Элементы.ЛицоБезДовФЛ_ИНН.АвтоОтметкаНезаполненного = НЕ ЭтоВерсия5_02;
	Элементы.ЛицоБезДовФЛ_ИНН.АвтоВыборНезаполненного = НЕ ЭтоВерсия5_02;
	
	Если СтруктураДанных <> Неопределено Тогда
		ЛицоБезДовФЛ_Фамилия 		= СтруктураДанных.ЛицоБезДовФЛ_Фамилия;
		ЛицоБезДовФЛ_Имя 			= СтруктураДанных.ЛицоБезДовФЛ_Имя;
		ЛицоБезДовФЛ_Отчество 		= СтруктураДанных.ЛицоБезДовФЛ_Отчество;
		ЛицоБезДовФЛ_ФИО 			= СтруктураДанных.ЛицоБезДовФЛ_ФИО;
		
		ЛицоБезДовФЛ_ВидДок 		= СтруктураДанных.ЛицоБезДовФЛ_ВидДок;
		ЛицоБезДовФЛ_СерДок 		= СтруктураДанных.ЛицоБезДовФЛ_СерДок;
		ЛицоБезДовФЛ_НомДок 		= СтруктураДанных.ЛицоБезДовФЛ_НомДок;
		ЛицоБезДовФЛ_ДатаДок 		= СтруктураДанных.ЛицоБезДовФЛ_ДатаДок;
		ЛицоБезДовФЛ_ВыдДок 		= СтруктураДанных.ЛицоБезДовФЛ_ВыдДок;
		ЛицоБезДовФЛ_КодВыдДок 		= СтруктураДанных.ЛицоБезДовФЛ_КодВыдДок;
		ЛицоБезДовФЛ_Удостоверение 	= СтруктураДанных.ЛицоБезДовФЛ_Удостоверение;
		
		ЛицоБезДовФЛ_ИНН 			= СтруктураДанных.ЛицоБезДовФЛ_ИНН;
		ЛицоБезДовФЛ_НомЕРН 		= СтруктураДанных.ЛицоБезДовФЛ_НомЕРН;
		ЛицоБезДовФЛ_ОГРН 			= СтруктураДанных.ЛицоБезДовФЛ_ОГРН;
		ЛицоБезДовФЛ_СНИЛС 			= СтруктураДанных.ЛицоБезДовФЛ_СНИЛС;
		ЛицоБезДовФЛ_Гражданство 	= СтруктураДанных.ЛицоБезДовФЛ_Гражданство;
		ЛицоБезДовФЛ_ДатаРождения 	= СтруктураДанных.ЛицоБезДовФЛ_ДатаРождения;
		
		ЛицоБезДовФЛ_Должность 		= СтруктураДанных.ЛицоБезДовФЛ_Должность;
		ЛицоБезДовФЛ_Телефон 		= СтруктураДанных.ЛицоБезДовФЛ_Телефон;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЛицоБезДовФЛ_ФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВводаФИО = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ФормаВводаФИО");
	
	ФормаВводаФИО.Фамилия 	= ЛицоБезДовФЛ_Фамилия;
	ФормаВводаФИО.Имя 		= ЛицоБезДовФЛ_Имя;
	ФормаВводаФИО.Отчество 	= ЛицоБезДовФЛ_Отчество;
	
	ФормаВводаФИО.ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ЛицоБезДовФЛ_ФИОНачалоВыбораЗавершение", ЭтотОбъект);
	ФормаВводаФИО.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаВводаФИО.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	
	ЛицоБезДовФЛ_Фамилия 	= "";
	ЛицоБезДовФЛ_Имя 		= "";
	ЛицоБезДовФЛ_Отчество 	= "";
	
	ЛицоБезДовФЛ_ФИО = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛ_УдостоверениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументВид", 				ЛицоБезДовФЛ_ВидДок);
	СтруктураДанных.Вставить("ДокументСерия", 				ЛицоБезДовФЛ_СерДок);
	СтруктураДанных.Вставить("ДокументНомер", 				ЛицоБезДовФЛ_НомДок);
	СтруктураДанных.Вставить("ДокументДатаВыдачи", 			ЛицоБезДовФЛ_ДатаДок);
	СтруктураДанных.Вставить("ДокументКемВыдан", 			ЛицоБезДовФЛ_ВыдДок);
	СтруктураДанных.Вставить("ДокументКодПодразделения", 	ЛицоБезДовФЛ_КодВыдДок);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЛицоБезДовФЛ_УдостоверениеНачалоВыбораЗавершение", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиРаспределенныйРеестр.Форма.ФормаВводаУдостоверения",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛ_УдостоверениеОчистка(Элемент, СтандартнаяОбработка)
	
	ЛицоБезДовФЛ_ВидДок 	= ПредопределенноеЗначение("Справочник.ВидыДокументовФизическихЛиц.ПустаяСсылка");
	ЛицоБезДовФЛ_СерДок 	= "";
	ЛицоБезДовФЛ_НомДок 	= "";
	ЛицоБезДовФЛ_ДатаДок 	= Неопределено;
	ЛицоБезДовФЛ_ВыдДок 	= "";
	ЛицоБезДовФЛ_КодВыдДок 	= "";
	
	ЛицоБезДовФЛ_Удостоверение = "";
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Фамилия", 		ЛицоБезДовФЛ_Фамилия);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Имя", 			ЛицоБезДовФЛ_Имя);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Отчество", 		ЛицоБезДовФЛ_Отчество);
	
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ВидДок", 		ЛицоБезДовФЛ_ВидДок);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_СерДок", 		ЛицоБезДовФЛ_СерДок);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_НомДок", 		ЛицоБезДовФЛ_НомДок);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ДатаДок", 		ЛицоБезДовФЛ_ДатаДок);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ВыдДок", 		ЛицоБезДовФЛ_ВыдДок);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_КодВыдДок", 		ЛицоБезДовФЛ_КодВыдДок);
	
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ИНН", 			ЛицоБезДовФЛ_ИНН);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_НомЕРН", 		ЛицоБезДовФЛ_НомЕРН);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ОГРН", 			ЛицоБезДовФЛ_ОГРН);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_СНИЛС", 			ЛицоБезДовФЛ_СНИЛС);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Гражданство", 	ЛицоБезДовФЛ_Гражданство);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_ДатаРождения", 	ЛицоБезДовФЛ_ДатаРождения);
	
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Должность", 		ЛицоБезДовФЛ_Должность);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Телефон", 		ЛицоБезДовФЛ_Телефон);
	
	Закрыть(СтруктураДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	ЭтоВерсия5_02 = ЗначениеЗаполнено(ВерсияФормата)
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияФормата + ".0.0", "5.02.0.0") >= 0;
	ЭтоВерсия5_03 = ЗначениеЗаполнено(ВерсияФормата)
		И ОбщегоНазначенияКлиентСервер.СравнитьВерсии(ВерсияФормата + ".0.0", "5.03.0.0") >= 0;
	
	Если НЕ ЗначениеЗаполнено(ЛицоБезДовФЛ_Фамилия) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задана фамилия.';
														|en = 'Не задана фамилия.'"),,
			"ЛицоБезДовФЛ_ФИО",, Отказ);
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ЛицоБезДовФЛ_Имя) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задано имя.';
														|en = 'Не задано имя.'"),,
			"ЛицоБезДовФЛ_ФИО",, Отказ);
	КонецЕсли;
	
	Если ЭтоПередоверие Тогда
		КодВидаДокумента = ДокументооборотСКОВызовСервера.ПолучитьКодВидаДокументаФизическогоЛица(ЛицоБезДовФЛ_ВидДок);
		Если ЗначениеЗаполнено(КодВидаДокумента) И КодВидаДокумента <> "07" И КодВидаДокумента <> "10"
			И КодВидаДокумента <> "11" И КодВидаДокумента <> "12" И КодВидаДокумента <> "13" И КодВидаДокумента <> "15"
			И КодВидаДокумента <> "19" И КодВидаДокумента <> "21" И КодВидаДокумента <> "24" Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Вид документа не поддерживается.';
															|en = 'Вид документа не поддерживается.'"),,
				"ЛицоБезДовФЛ_Удостоверение",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(СокрЛП(ЛицоБезДовФЛ_СерДок) + СокрЛП(ЛицоБезДовФЛ_НомДок)) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не заданы серия и номер документа.';
															|en = 'Не заданы серия и номер документа.'"),,
				"ЛицоБезДовФЛ_Удостоверение",, Отказ);
		КонецЕсли;
		
		Если СтрДлина(СокрЛП(ЛицоБезДовФЛ_СерДок) + СокрЛП(ЛицоБезДовФЛ_НомДок)) > 25 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Длина серии и номера документа больше 25 символов.';
															|en = 'Длина серии и номера документа больше 25 символов.'"),,
				"ЛицоБезДовФЛ_Удостоверение",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЛицоБезДовФЛ_ДатаДок) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задана дата выдачи документа.';
															|en = 'Не задана дата выдачи документа.'"),,
				"ЛицоБезДовФЛ_Удостоверение",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЛицоБезДовФЛ_ВыдДок) И КодВидаДокумента = "21" Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задано наименование органа, выдавшего документ.';
															|en = 'Не задано наименование органа, выдавшего документ.'"),,
				"ЛицоБезДовФЛ_Удостоверение",, Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛицоБезДовФЛ_ИНН)
			И НЕ РегламентированнаяОтчетностьВызовСервера.ИННСоответствуетТребованиямНаСервере(ЛицоБезДовФЛ_ИНН, Истина) Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ИНН.';
															|en = 'Указан некорректный ИНН.'"),,
				"ЛицоБезДовФЛ_ИНН",, Отказ);
		КонецЕсли;
		
		Если ЭтоВерсия5_03 И ЗначениеЗаполнено(ЛицоБезДовФЛ_НомЕРН) И СтрДлина(СокрЛП(ЛицоБезДовФЛ_НомЕРН)) <> 15 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный номер ЕРН.';
															|en = 'Указан некорректный номер ЕРН.'"),,
				"ЛицоБезДовФЛ_НомЕРН",, Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛицоБезДовФЛ_ОГРН) И СтрДлина(СокрЛП(ЛицоБезДовФЛ_ОГРН)) <> 15 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ОГРНИП.';
															|en = 'Указан некорректный ОГРНИП.'"),,
				"ЛицоБезДовФЛ_ОГРН",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ЛицоБезДовФЛ_СНИЛС) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан СНИЛС.';
															|en = 'Не задан СНИЛС.'"),,
				"ЛицоБезДовФЛ_СНИЛС",, Отказ);
			
		ИначеЕсли СтрДлина(ЛицоБезДовФЛ_СНИЛС) <> 14 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный СНИЛС.';
															|en = 'Указан некорректный СНИЛС.'"),,
				"ЛицоБезДовФЛ_СНИЛС",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура ЛицоБезДовФЛ_ФИОНачалоВыбораЗавершение(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	ЛицоБезДовФЛ_Фамилия 	= РезультатРедактирования.Фамилия;
	ЛицоБезДовФЛ_Имя 		= РезультатРедактирования.Имя;
	ЛицоБезДовФЛ_Отчество 	= РезультатРедактирования.Отчество;
	
	ЛицоБезДовФЛ_ФИО = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(РезультатРедактирования);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛ_УдостоверениеНачалоВыбораЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	ЛицоБезДовФЛ_ВидДок 	= РезультатВыбора.ДокументВид;
	ЛицоБезДовФЛ_СерДок 	= РезультатВыбора.ДокументСерия;
	ЛицоБезДовФЛ_НомДок 	= РезультатВыбора.ДокументНомер;
	ЛицоБезДовФЛ_ДатаДок 	= РезультатВыбора.ДокументДатаВыдачи;
	ЛицоБезДовФЛ_ВыдДок 	= РезультатВыбора.ДокументКемВыдан;
	ЛицоБезДовФЛ_КодВыдДок 	= РезультатВыбора.ДокументКодПодразделения;
	
	ЛицоБезДовФЛ_Удостоверение = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеУдостоверение(РезультатВыбора);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
