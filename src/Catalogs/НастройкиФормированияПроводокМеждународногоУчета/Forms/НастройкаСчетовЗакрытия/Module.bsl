#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	АдресНастройкиСчетов = Параметры.АдресНастройкиСчетов;
	НастройкаФормированияПроводок = Параметры.НастройкаФормированияПроводок;
	ПланСчетов = Параметры.ПланСчетов;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.НастройкиФормированияПроводокМеждународногоУчета) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;
	
	ПрочитатьДанныеНастройки();
		
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Счет Из ВыбранноеЗначение Цикл
			ДобавитьСчет(Счет);
		КонецЦикла;
	Иначе
		ДобавитьСчет(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыФормы

&НаКлиенте
Процедура СчетаДоходовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "СчетаДоходов";
	ОткрытьФормуВыбораСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаРасходовПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "СчетаРасходов";
	ОткрытьФормуВыбораСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура СчетаПрибылейУбытковПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "СчетаПрибылейУбытков";
	ОткрытьФормуВыбораСчетов();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ПодборСчетовДоходов(Команда)
	
	ИмяТаблицыПодбора = "СчетаДоходов";
	ПодборСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовРасходов(Команда)
	
	ИмяТаблицыПодбора = "СчетаРасходов";
	ПодборСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовПрибылейУбытков(Команда)
	
	ИмяТаблицыПодбора = "СчетаПрибылейУбытков";
	ПодборСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	СохранитьСчетаЗакрытия();
	Закрыть(РежимДиалогаВопрос.ОК);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодборСчетов()
	
	ОткрытьФормуВыбораСчетов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСчетов(Подбор = Ложь)
	
	ПараметрыФормы = Новый Структура;
	// Стандартные параметры формы.
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",            НЕ Подбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("ТолькоРазрешенные", Истина);
	
	// Стандартные параметры формы выбора (см. Расширение управляемой формы для динамического списка).
	ПараметрыФормы.Вставить("МножественныйВыбор",            Подбор);
	ПараметрыФормы.Вставить("РежимВыбора",                   Истина);
	// Предполагаемые реквизиты.
	ПараметрыФормы.Вставить("РежимОткрытияОкна",             РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормы.Вставить("РазрешитьНачалоПеретаскивания", Ложь);
	
	ПараметрыФормы.Вставить("Отбор", Новый Структура("ПланСчетов", ПланСчетов));
	
	ОткрытьФорму("ПланСчетов.Международный.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСчет(Счет)
	
	ТабличнаяЧасть = ЭтотОбъект[ИмяТаблицыПодбора];// СправочникТабличнаяЧасть.НастройкиФормированияПроводокМеждународногоУчета.СчетаДоходов - 
	НоваяСтрока = ТабличнаяЧасть.Добавить(); 
	НоваяСтрока.Счет = Счет;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеНастройки()
	
	Если ЗначениеЗаполнено(АдресНастройкиСчетов) Тогда
		СчетаЗакрытия = ПолучитьИзВременногоХранилища(АдресНастройкиСчетов);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиФормированияПроводок.СчетУчетаДоходов,
		|	НастройкиФормированияПроводок.СчетУчетаРасходов,
		|	НастройкиФормированияПроводок.СчетУчетаНераспределеннойПрибылиУбытка
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета КАК НастройкиФормированияПроводок
		|ГДЕ
		|	НастройкиФормированияПроводок.Ссылка = &НастройкаФормированияПроводок
		|;
		|
		|////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиФормированияПроводокСчетаДоходов.Счет КАК Счет
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаДоходов КАК НастройкиФормированияПроводокСчетаДоходов
		|ГДЕ
		|	НастройкиФормированияПроводокСчетаДоходов.Ссылка = &НастройкаФормированияПроводок
		|;
		|
		|////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиФормированияПроводокСчетаРасходов.Счет КАК Счет
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаРасходов КАК НастройкиФормированияПроводокСчетаРасходов
		|ГДЕ
		|	НастройкиФормированияПроводокСчетаРасходов.Ссылка = &НастройкаФормированияПроводок
		|;
		|
		|////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиФормированияПроводокСчетаПрибылейУбытков.Счет КАК Счет
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета.СчетаПрибылейУбытков КАК НастройкиФормированияПроводокСчетаПрибылейУбытков
		|ГДЕ
		|	НастройкиФормированияПроводокСчетаПрибылейУбытков.Ссылка = &НастройкаФормированияПроводок
		|";
		Запрос.УстановитьПараметр("НастройкаФормированияПроводок", НастройкаФормированияПроводок);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		
		ВыборкаШапка = РезультатыЗапроса[0].Выбрать();
		ВыборкаШапка.Следующий();
		
		СчетаЗакрытия = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаЗакрытия();
		СчетаЗакрытия.СчетУчетаДоходов = ВыборкаШапка.СчетУчетаДоходов;
		СчетаЗакрытия.СчетУчетаРасходов = ВыборкаШапка.СчетУчетаРасходов;
		СчетаЗакрытия.СчетУчетаНераспределеннойПрибылиУбытка = ВыборкаШапка.СчетУчетаНераспределеннойПрибылиУбытка;
		
		СчетаЗакрытия.СчетаДоходов = РезультатыЗапроса[1].Выгрузить();
		СчетаЗакрытия.СчетаРасходов = РезультатыЗапроса[2].Выгрузить();
		СчетаЗакрытия.СчетаПрибылейУбытков = РезультатыЗапроса[3].Выгрузить();
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма,СчетаЗакрытия,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаЗакрытия.СчетаДоходов, СчетаДоходов);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаЗакрытия.СчетаРасходов, СчетаРасходов);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаЗакрытия.СчетаПрибылейУбытков, СчетаПрибылейУбытков);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСчетаЗакрытия()
	
	СчетаЗакрытия = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаЗакрытия();
	ЗаполнитьЗначенияСвойств(СчетаЗакрытия,ЭтаФорма,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
	СчетаЗакрытия.СчетаДоходов = СчетаДоходов.Выгрузить();
	СчетаЗакрытия.СчетаРасходов = СчетаРасходов.Выгрузить();
	СчетаЗакрытия.СчетаПрибылейУбытков = СчетаПрибылейУбытков.Выгрузить();
	
	Если ЗначениеЗаполнено(АдресНастройкиСчетов) Тогда
		ПоместитьВоВременноеХранилище(СчетаЗакрытия, АдресНастройкиСчетов);
	ИначеЕсли ЗначениеЗаполнено(НастройкаФормированияПроводок) Тогда
		СправочникОбъект = НастройкаФормированияПроводок.ПолучитьОбъект();
		СправочникОбъект.Заблокировать();
		СправочникОбъект.СчетУчетаДоходов = СчетаЗакрытия.СчетУчетаДоходов;
		СправочникОбъект.СчетУчетаРасходов = СчетаЗакрытия.СчетУчетаРасходов;
		СправочникОбъект.СчетУчетаНераспределеннойПрибылиУбытка = СчетаЗакрытия.СчетУчетаНераспределеннойПрибылиУбытка;
		СправочникОбъект.СчетаДоходов.Загрузить(СчетаЗакрытия.СчетаДоходов);
		СправочникОбъект.СчетаРасходов.Загрузить(СчетаЗакрытия.СчетаРасходов);
		СправочникОбъект.СчетаПрибылейУбытков.Загрузить(СчетаЗакрытия.СчетаПрибылейУбытков);
		СправочникОбъект.Записать();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти