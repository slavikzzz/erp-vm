#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	АдресНастройкиСчетов = Параметры.АдресНастройкиСчетов;
	НастройкаФормированияПроводок = Параметры.НастройкаФормированияПроводок;
	ПланСчетов = Параметры.ПланСчетов;
	
	Если Не ПравоДоступа("Редактирование", Метаданные.Справочники.НастройкиФормированияПроводокМеждународногоУчета) Тогда
		ТолькоПросмотр = Истина;
	КонецЕсли;

	ПрочитатьДанныеНастройки();
	
	Элементы.ИсключитьИзРасчетаКР.ОтборСтрок = Новый ФиксированнаяСтруктура(Новый Структура("Исключить", Истина));
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если НЕ ЗначениеЗаполнено(ВыбранноеЗначение) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("Массив") Тогда
		Для Каждого Счет Из ВыбранноеЗначение Цикл
			ДобавитьСчет(Счет);
		КонецЦикла;
	Иначе
		ДобавитьСчет(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицИсключений

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР";
	ОткрытьФормуВыбораСчетов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРСчетПриИзменении(Элемент)
	
	Элементы.ИсключитьИзРасчетаКР.ТекущиеДанные.Исключить = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзПересчетаВППередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	
	Отказ = Истина;
	ИмяТаблицыПодбора = "ИсключитьИзПересчетаВП";
	ОткрытьФормуВыбораСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПередУдалением(Элемент, Отказ)
	
	УдаляемыйСчет = Элемент.ТекущиеДанные.Счет;
	
КонецПроцедуры

&НаКлиенте
Процедура ИсключитьИзРасчетаКРПослеУдаления(Элемент)
	
	НовыйСчет = ИсключитьИзРасчетаКР.Добавить();
	НовыйСчет.Счет = УдаляемыйСчет;
	ИсключитьИзРасчетаКР.Сортировать("Счет");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбновитьСчетаИсключения(Команда)
	ОбновитьСчетаИсключенияНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовИсключенияРасчета(Команда)
	
	ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР";
	ПодборСчетов(Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодборСчетовИсключенияПересчета(Команда)
	
	ИмяТаблицыПодбора = "ИсключитьИзПересчетаВП";
	ПодборСчетов();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	СохранитьСчетаКурсовыхРазниц();
	Закрыть(РежимДиалогаВопрос.ОК);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПодборСчетов(ТолькоВалютные = Ложь)
	
	ОткрытьФормуВыбораСчетов(ТолькоВалютные, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСчетов(ТолькоВалютные = Ложь, Подбор = Ложь)
	
	ПараметрыФормы = Новый Структура;
	// Стандартные параметры формы.
	ПараметрыФормы.Вставить("ЗакрыватьПриВыборе",            НЕ Подбор);
	ПараметрыФормы.Вставить("ЗакрыватьПриЗакрытииВладельца", Истина);
	ПараметрыФормы.Вставить("ПланСчетов", ПланСчетов);
	
	// Стандартные параметры формы выбора (см. Расширение управляемой формы для динамического списка).
	ПараметрыФормы.Вставить("МножественныйВыбор",            Подбор);
	ПараметрыФормы.Вставить("РежимВыбора",                   Истина);
	// Предполагаемые реквизиты.
	ПараметрыФормы.Вставить("РежимОткрытияОкна",             РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	ПараметрыФормы.Вставить("РазрешитьНачалоПеретаскивания", Ложь);
	
	ПараметрыФормы.Вставить("ТолькоРазрешенные", Истина);
	
	Отбор = Новый Структура;
	Отбор.Вставить("ПланСчетов", ПланСчетов);
	Если ТолькоВалютные Тогда
		Отбор.Вставить("Валютный", Истина);
	КонецЕсли;
	ПараметрыФормы.Вставить("Отбор", Отбор);
	
	ОткрытьФорму("ПланСчетов.Международный.ФормаВыбора",ПараметрыФормы,ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСчет(Счет)
	
	Исключения = ЭтотОбъект[ИмяТаблицыПодбора];// ТаблицаЗначений - 
	НоваяСтрока = Исключения.Добавить();
	НоваяСтрока.Счет = Счет;
	Если ИмяТаблицыПодбора = "ИсключитьИзРасчетаКР" Тогда
		НоваяСтрока.Исключить = Истина;
		Элементы.ИсключитьИзРасчетаКР.Обновить();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПрочитатьДанныеНастройки()
	
	Если ЗначениеЗаполнено(АдресНастройкиСчетов) Тогда
		СчетаКурсовыхРазниц = ПолучитьИзВременногоХранилища(АдресНастройкиСчетов);
	Иначе
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НастройкиФормированияПроводок.ДоходыКР,
		|	НастройкиФормированияПроводок.СтатьяДоходовКР,
		|	НастройкиФормированияПроводок.РасходыКР,
		|	НастройкиФормированияПроводок.СтатьяРасходовКР,
		|	НастройкиФормированияПроводок.ДоходыОтРазницПриПересчетеВП,
		|	НастройкиФормированияПроводок.СтатьяДоходовОтРазницПересчета,
		|	НастройкиФормированияПроводок.РасходыОтРазницПриПересчетеВП,
		|	НастройкиФормированияПроводок.СтатьяРасходовОтРазницПересчета
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета КАК НастройкиФормированияПроводок
		|ГДЕ
		|	НастройкиФормированияПроводок.Ссылка = &НастройкаФормированияПроводок
		|;
		|
		|////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиФормированияПроводокИсключитьИзПересчетаВП.Счет КАК Счет
		|ИЗ
		|	Справочник.НастройкиФормированияПроводокМеждународногоУчета.ИсключитьИзПересчетаВП КАК НастройкиФормированияПроводокИсключитьИзПересчетаВП
		|ГДЕ
		|	НастройкиФормированияПроводокИсключитьИзПересчетаВП.Ссылка = &НастройкаФормированияПроводок
		|";
		Запрос.УстановитьПараметр("НастройкаФормированияПроводок", НастройкаФормированияПроводок);
		
		РезультатыЗапроса = Запрос.ВыполнитьПакет();
		ВыборкаШапка = РезультатыЗапроса[0].Выбрать();
		ВыборкаШапка.Следующий();
		
		СчетаКурсовыхРазниц = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаКурсовыхРазниц();
		СчетаКурсовыхРазниц.ДоходыКР = ВыборкаШапка.ДоходыКР;
		СчетаКурсовыхРазниц.СтатьяДоходовКР = ВыборкаШапка.СтатьяДоходовКР;
		СчетаКурсовыхРазниц.РасходыКР = ВыборкаШапка.РасходыКР;
		СчетаКурсовыхРазниц.СтатьяРасходовКР = ВыборкаШапка.СтатьяРасходовКР;
		СчетаКурсовыхРазниц.ДоходыОтРазницПриПересчетеВП = ВыборкаШапка.ДоходыОтРазницПриПересчетеВП;
		СчетаКурсовыхРазниц.СтатьяДоходовОтРазницПересчета = ВыборкаШапка.СтатьяДоходовОтРазницПересчета;
		СчетаКурсовыхРазниц.РасходыОтРазницПриПересчетеВП = ВыборкаШапка.РасходыОтРазницПриПересчетеВП;
		СчетаКурсовыхРазниц.СтатьяРасходовОтРазницПересчета = ВыборкаШапка.СтатьяРасходовОтРазницПересчета;
		
		СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП = РезультатыЗапроса[1].Выгрузить();
		СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР = 
			Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаИсключенияРасчетаКР(ПланСчетов);
		
	КонецЕсли;
	ЗаполнитьЗначенияСвойств(ЭтаФорма,СчетаКурсовыхРазниц,,"ИсключитьИзРасчетаКР,ИсключитьИзПересчетаВП");
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР, ИсключитьИзРасчетаКР);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП, ИсключитьИзПересчетаВП);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьСчетаКурсовыхРазниц()
	
	СчетаКурсовыхРазниц = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаКурсовыхРазниц();
	ЗаполнитьЗначенияСвойств(СчетаКурсовыхРазниц,ЭтаФорма,,"ИсключитьИзРасчетаКР,ИсключитьИзПересчетаВП");
	СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР = ИсключитьИзРасчетаКР.Выгрузить();
	СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП = ИсключитьИзПересчетаВП.Выгрузить();
	
	Если ЗначениеЗаполнено(АдресНастройкиСчетов) Тогда
		ПоместитьВоВременноеХранилище(СчетаКурсовыхРазниц, АдресНастройкиСчетов);
	ИначеЕсли ЗначениеЗаполнено(НастройкаФормированияПроводок) Тогда
		НачатьТранзакцию();
		Попытка
			СправочникОбъект = НастройкаФормированияПроводок.ПолучитьОбъект();
			СправочникОбъект.Заблокировать();
			СправочникОбъект.ДоходыКР = СчетаКурсовыхРазниц.ДоходыКР;
			СправочникОбъект.СтатьяДоходовКР = СчетаКурсовыхРазниц.СтатьяДоходовКР;
			СправочникОбъект.СтатьяРасходовКР = СчетаКурсовыхРазниц.СтатьяРасходовКР;
			СправочникОбъект.ДоходыОтРазницПриПересчетеВП = СчетаКурсовыхРазниц.ДоходыОтРазницПриПересчетеВП;
			СправочникОбъект.СтатьяДоходовОтРазницПересчета = СчетаКурсовыхРазниц.СтатьяДоходовОтРазницПересчета;
			СправочникОбъект.РасходыОтРазницПриПересчетеВП = СчетаКурсовыхРазниц.РасходыОтРазницПриПересчетеВП;
			СправочникОбъект.СтатьяРасходовОтРазницПересчета = СчетаКурсовыхРазниц.СтатьяРасходовОтРазницПересчета;
			СправочникОбъект.ИсключитьИзПересчетаВП.Загрузить(СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП);
			СправочникОбъект.Записать();
			
			Справочники.НастройкиФормированияПроводокМеждународногоУчета.ЗаписатьСчетаИсключенияРасчетаКР(
				ПланСчетов,
				СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР);
				
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ТекстОшибки = ПодробноеПредставлениеОшибки(ИнформацияОбОшибке());
			ВызватьИсключение ТекстОшибки
		КонецПопытки;
		
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОбновитьСчетаИсключенияНаСервере()
	
	ИсключитьИзРасчетаКР.Загрузить(Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаИсключенияРасчетаКР(ПланСчетов));
	
КонецПроцедуры

#КонецОбласти