#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)

	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ОбработкаОповещения(ЭтотОбъект, ИмяСобытия);
	// Конец СтандартныеПодсистемы.РаботаСФайлами

КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ОбновлениеИнформационнойБазы.ПроверитьОбъектОбработан(Объект, ЭтотОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКоманды.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

	// СтандартныеПодсистемы.РаботаСФайлами
	ПараметрыГиперссылки = РаботаСФайлами.ГиперссылкаФайлов();
	ПараметрыГиперссылки.Размещение = "КоманднаяПанель";
	РаботаСФайлами.ПриСозданииНаСервере(ЭтотОбъект, ПараметрыГиперссылки);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);
	
	УправлениеЭлементамиФормыПриСоздании();
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	Если ТекущийОбъект.Описание <> Неопределено Тогда
		ОписаниеHTML = ТекущийОбъект.Описание.Получить();
		Если ОписаниеHTML <> Неопределено Тогда
			Описание.УстановитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
		КонецЕсли;
	КонецЕсли;
	МодификацияКонфигурацииПереопределяемый.ПриЧтенииНаСервере(ЭтаФорма, ТекущийОбъект);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
КонецПроцедуры

&НаСервере
Процедура ПередЗаписьюНаСервере(Отказ, ТекущийОбъект, ПараметрыЗаписи)

	Если НЕ ПустаяСтрока(АдресСчетовЗакрытия) Тогда
		СчетаЗакрытия = ПолучитьИзВременногоХранилища(АдресСчетовЗакрытия);
		ЗаполнитьЗначенияСвойств(ТекущийОбъект, СчетаЗакрытия,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
		ТекущийОбъект.СчетаДоходов.Загрузить(СчетаЗакрытия.СчетаДоходов);
		ТекущийОбъект.СчетаРасходов.Загрузить(СчетаЗакрытия.СчетаРасходов);
		ТекущийОбъект.СчетаПрибылейУбытков.Загрузить(СчетаЗакрытия.СчетаПрибылейУбытков);
		УдалитьИзВременногоХранилища(АдресСчетовЗакрытия);
		АдресСчетовЗакрытия = "";
	КонецЕсли;
	
	Если НЕ ПустаяСтрока(АдресСчетовКурсовыхРазниц) Тогда
		СчетаКурсовыхРазниц = ПолучитьИзВременногоХранилища(АдресСчетовКурсовыхРазниц);
		ЗаполнитьЗначенияСвойств(ТекущийОбъект, СчетаКурсовыхРазниц,,"ИсключитьИзПересчетаВП");
		Справочники.НастройкиФормированияПроводокМеждународногоУчета.ЗаписатьСчетаИсключенияРасчетаКР(
			Объект.Владелец,
			СчетаКурсовыхРазниц.ИсключитьИзРасчетаКР);
		ТекущийОбъект.ИсключитьИзПересчетаВП.Загрузить(СчетаКурсовыхРазниц.ИсключитьИзПересчетаВП);
		УдалитьИзВременногоХранилища(АдресСчетовКурсовыхРазниц);
		АдресСчетовКурсовыхРазниц = "";
	КонецЕсли;
	
	ОписаниеHTML = Новый Структура("Текст, Вложения","",Новый Структура);
	Описание.ПолучитьHTML(ОписаниеHTML.Текст, ОписаниеHTML.Вложения);
	ТекущийОбъект.Описание = Новый ХранилищеЗначения(ОписаниеHTML,Новый СжатиеДанных(9));
	
	МодификацияКонфигурацииПереопределяемый.ПередЗаписьюНаСервере(ЭтаФорма, Отказ, ТекущийОбъект, ПараметрыЗаписи);

КонецПроцедуры

&НаКлиенте
Процедура  ПослеЗаписи(ПараметрыЗаписи)

	МодификацияКонфигурацииКлиентПереопределяемый.ПослеЗаписи(ЭтаФорма, ПараметрыЗаписи);
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("СтандартныеПодсистемы.ПодключаемыеКоманды") Тогда
		МодульПодключаемыеКомандыКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ПодключаемыеКомандыКлиент");
		МодульПодключаемыеКомандыКлиент.ПослеЗаписи(ЭтотОбъект, Объект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)

	МодификацияКонфигурацииПереопределяемый.ПослеЗаписиНаСервере(ЭтаФорма, ТекущийОбъект, ПараметрыЗаписи);

	// Обработчик подсистемы запрета редактирования реквизитов объектов
	ЗапретРедактированияРеквизитовОбъектов.ЗаблокироватьРеквизиты(ЭтотОбъект);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	// СтандартныеПодсистемы.ПодключаемыеКоманды
	ПодключаемыеКомандыКлиент.НачатьОбновлениеКоманд(ЭтотОбъект);
	// Конец СтандартныеПодсистемы.ПодключаемыеКоманды
	
	// СтандартныеПодсистемы.РаботаСФайлами
	РаботаСФайламиКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
	// Конец СтандартныеПодсистемы.РаботаСФайлами
	
	УправлениеЭлементамиФормыПриОткрытии();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ЗакрытиеСчетовДоходовИРасходовПриИзменении(Элемент)
	
	УправлениеВидимостьюНастройкиСчетовЗакрытияПериода(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ОбщегоНазначенияКлиент.ПоказатьФормуРедактированияКомментария(
		Элемент.ТекстРедактирования, 
		ЭтотОбъект, 
		"Объект.Комментарий");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_КомандаПанелиПрисоединенныхФайлов(Команда)
	 РаботаСФайламиКлиент.КомандаУправленияПрисоединеннымиФайлами(ЭтотОбъект, Команда);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраПроверкаПеретаскивания(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраПеретаскивание(ЭтотОбъект, Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.РаботаСФайлами
&НаКлиенте
Процедура Подключаемый_ПолеПредпросмотраНажатие(Элемент, СтандартнаяОбработка)
	 РаботаСФайламиКлиент.ПолеПредпросмотраНажатие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
КонецПроцедуры
// Конец СтандартныеПодсистемы.РаботаСФайлами

// СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов
&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	ПолноеИмяФормы = "Справочник.НастройкиФормированияПроводокМеждународногоУчета.Форма.РазблокированиеРеквизитов";
	ПараметрыФормы = Новый Структура("НастройкаФормированияПроводок", Объект.Ссылка);
	ОповещениеФормы = Новый ОписаниеОповещения("Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение", ЭтотОбъект);
	
	ОткрытьФорму(
		ПолноеИмяФормы,
		ПараметрыФормы,
		ЭтотОбъект,,,,
		ОповещениеФормы,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъектаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() > 0 Тогда
		ЗапретРедактированияРеквизитовОбъектовКлиент.УстановитьДоступностьЭлементовФормы(ЭтотОбъект, Результат);
	КонецЕсли;
	
КонецПроцедуры
// Конец СтандартныеПодсистемы.ЗапретРедактированияРеквизитовОбъектов

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

// СтандартныеПодсистемы.ПодключаемыеКоманды
&НаКлиенте
Процедура Подключаемый_ВыполнитьКоманду(Команда)
	ПодключаемыеКомандыКлиент.ВыполнитьКоманду(ЭтотОбъект, Команда, Объект);
КонецПроцедуры

&НаСервере
Процедура Подключаемый_ВыполнитьКомандуНаСервере(Контекст, Результат) Экспорт
	ПодключаемыеКоманды.ВыполнитьКоманду(ЭтотОбъект, Контекст, Объект, Результат);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОбновитьКоманды()
	ПодключаемыеКомандыКлиентСервер.ОбновитьКоманды(ЭтотОбъект, Объект);
КонецПроцедуры
// Конец СтандартныеПодсистемы.ПодключаемыеКоманды

&НаКлиенте
Процедура ОткрытьНастройкуПроводокПоДаннымОперативногоУчета(Команда)
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.ПланСчетов = Объект.Владелец;
	ПараметрыФормы.НастройкаФормированияПроводок = Объект.Ссылка;
	МеждународныйУчетПоДаннымОперативногоУчетаКлиент.ОткрытьНастройкуШаблоновПроводок(ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуПроводокПоДаннымРеглУчета(Команда)
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.ПланСчетов = Объект.Владелец;
	ПараметрыФормы.НастройкаФормированияПроводок = Объект.Ссылка;
	МеждународныйУчетПоДаннымРеглУчетаКлиент.ОткрытьНастройкуСоответствияСчетовИОборотов(ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьНастройкуПроводокПоОбъектамУчета(Команда)
	
	ПараметрыФормы = МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок();
	ПараметрыФормы.ПланСчетов = Объект.Владелец;
	ПараметрыФормы.НастройкаФормированияПроводок = Объект.Ссылка;
	МеждународныйУчетПоДаннымФинансовыхРегистровКлиент.ОткрытьНастройкуСчетовПоОбъектамУчета(ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаСчетовЗакрытия(Команда)
	
	ПроверитьЗаписьОбъекта(НСтр("ru = 'Настройке счетов закрытия периода';
								|en = 'Set up period-end closing accounts'"), Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура НастройкаКурсовыхРазниц(Команда)
	
	ПроверитьЗаписьОбъекта(НСтр("ru = 'Настройке курсовых разниц';
								|en = 'Setting of exchange differences'"), Команда.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭлементамиФормыПриСоздании()
	
	Элементы.Владелец.Видимость = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоПлановСчетовВМеждународномУчете");
	
	УправлениеВидимостьюНастройкиСчетовЗакрытияПериода(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура УправлениеЭлементамиФормыПриОткрытии()
	
	Если ТипЗнч(ЭтотОбъект.ВладелецФормы) = Тип("ФормаКлиентскогоПриложения") Тогда
		ИмяФормыВладельца = ЭтотОбъект.ВладелецФормы.ИмяФормы;
		Если СтрНачинаетсяС(ИмяФормыВладельца, "Обработка.НастройкаСчетовМеждународногоУчета")
		//++ Локализация
		 ИЛИ СтрНачинаетсяС(ИмяФормыВладельца, "Обработка.НастройкаСоответствияСчетовИОборотовМеждународногоУчета")
		//-- Локализация
		 ИЛИ СтрНачинаетсяС(ИмяФормыВладельца, "Обработка.НастройкаШаблоновПроводокДляМеждународногоУчета") Тогда
			Элементы.ОткрытьНастройкуПроводокПоОбъектамУчета.Видимость = Ложь;
			Элементы.ОткрытьНастройкуФормированияПроводокПоДаннымОперативногоУчета.Видимость = Ложь;
			Элементы.ОткрытьНастройкуФормированияПроводокПоДаннымРеглУчета.Видимость = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗаписьОбъекта(ИмяФормы, ИмяКоманды)
	
	Если НЕ ЗначениеЗаполнено(Объект.Ссылка) Тогда
		
		ТекстВопроса = Нстр("ru = 'Данные еще не записаны.
								|Переход к ""%ИмяФормы%"" возможен только после записи данных.
								|Данные будут записаны.';
								|en = 'Data is not saved yet.
								|You can go to ""%ИмяФормы%"" only after saving the data.
								|Data will be saved.'");
		ТекстВопроса = СтрЗаменить(ТекстВопроса, "%ИмяФормы%", ИмяФормы);
		
		ПоказатьВопрос(Новый ОписаниеОповещения("ОбработкаОтветаНаВопросЗаписать", ЭтотОбъект, ИмяКоманды),
						ТекстВопроса,
						РежимДиалогаВопрос.ОКОтмена);
		
		Возврат;
		
	КонецЕсли;
	
	ВыполнитьНастройкуСчетов(ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОтветаНаВопросЗаписать(Ответ, ИмяКоманды) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Отмена Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементЗаписан = Записать();
	Если НЕ ЭлементЗаписан Тогда
		Возврат;
	КонецЕсли;
	
	ВыполнитьНастройкуСчетов(ИмяКоманды);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьНастройкуСчетов(ИмяКоманды)
	
	Если ИмяКоманды = "НастройкаСчетовЗакрытия" Тогда
	
		Если ПустаяСтрока(АдресСчетовЗакрытия) Тогда
			ПоместитьСчетаЗакрытияВХранилище();
		КонецЕсли;
		
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ПланСчетов", Объект.Владелец);
		ПараметрыФормы.Вставить("АдресНастройкиСчетов", АдресСчетовЗакрытия);
		Обработчик = Новый ОписаниеОповещения("СохранитьНастройкуСчетов",ЭтаФорма);
		ОткрытьФорму("Справочник.НастройкиФормированияПроводокМеждународногоУчета.Форма.НастройкаСчетовЗакрытия", ПараметрыФормы, ЭтаФорма,,,,Обработчик);
		
	ИначеЕсли ИмяКоманды = "НастройкаКурсовыхРазниц" Тогда
	
		Если ПустаяСтрока(АдресСчетовКурсовыхРазниц) Тогда
			ПоместитьСчетаКурсовыхРазницВХранилище();
		КонецЕсли;
	
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ПланСчетов", Объект.Владелец);
		ПараметрыФормы.Вставить("АдресНастройкиСчетов", АдресСчетовКурсовыхРазниц);
		Обработчик = Новый ОписаниеОповещения("СохранитьНастройкуСчетов",ЭтаФорма);
		ОткрытьФорму("Справочник.НастройкиФормированияПроводокМеждународногоУчета.Форма.НастройкаСчетовКурсовыхРазниц", ПараметрыФормы, ЭтаФорма,,,,Обработчик);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция СохранитьНастройкуСчетов(Результат, Параметр) Экспорт

	Если Результат = РежимДиалогаВопрос.ОК Тогда
		Модифицированность = Истина;
	КонецЕсли;

КонецФункции // СохранитьСчетаЗакрытия()

&НаСервере
Процедура ПоместитьСчетаЗакрытияВХранилище()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиФормированияПроводок.СчетУчетаДоходов,
	|	НастройкиФормированияПроводок.СчетУчетаРасходов,
	|	НастройкиФормированияПроводок.СчетУчетаНераспределеннойПрибылиУбытка,
	|	НастройкиФормированияПроводок.СчетаДоходов.(
	|		Счет
	|	),
	|	НастройкиФормированияПроводок.СчетаРасходов.(
	|		Счет
	|	),
	|	НастройкиФормированияПроводок.СчетаПрибылейУбытков.(
	|		Счет
	|	)
	|ИЗ
	|	Справочник.НастройкиФормированияПроводокМеждународногоУчета КАК НастройкиФормированияПроводок
	|ГДЕ
	|	НастройкиФормированияПроводок.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СчетаЗакрытия = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаЗакрытия();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СчетаЗакрытия, Выборка,,"СчетаДоходов,СчетаРасходов,СчетаПрибылейУбытков");
		СчетаЗакрытия.СчетаДоходов = Выборка.СчетаДоходов.Выгрузить();
		СчетаЗакрытия.СчетаРасходов = Выборка.СчетаРасходов.Выгрузить();
		СчетаЗакрытия.СчетаПрибылейУбытков = Выборка.СчетаПрибылейУбытков.Выгрузить();
	КонецЕсли;
	АдресСчетовЗакрытия = ПоместитьВоВременноеХранилище(СчетаЗакрытия, УникальныйИдентификатор);
	
КонецПроцедуры

&НаСервере
Процедура ПоместитьСчетаКурсовыхРазницВХранилище()
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НастройкиФормированияПроводок.ДоходыКР,
	|	НастройкиФормированияПроводок.СтатьяДоходовКР,
	|	НастройкиФормированияПроводок.РасходыКР,
	|	НастройкиФормированияПроводок.СтатьяРасходовКР,
	|	НастройкиФормированияПроводок.ДоходыОтРазницПриПересчетеВП,
	|	НастройкиФормированияПроводок.СтатьяДоходовОтРазницПересчета,
	|	НастройкиФормированияПроводок.РасходыОтРазницПриПересчетеВП,
	|	НастройкиФормированияПроводок.СтатьяРасходовОтРазницПересчета,
	|	НастройкиФормированияПроводок.ИсключитьИзПересчетаВП.(
	|		Счет
	|	)
	|ИЗ
	|	Справочник.НастройкиФормированияПроводокМеждународногоУчета КАК НастройкиФормированияПроводок
	|ГДЕ
	|	НастройкиФормированияПроводок.Ссылка = &Ссылка";
	
	Запрос.УстановитьПараметр("Ссылка", Объект.Ссылка);
	
	Выборка = Запрос.Выполнить().Выбрать();
	СчетаЗакрытия = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаКурсовыхРазниц();
	Если Выборка.Следующий() Тогда
		ЗаполнитьЗначенияСвойств(СчетаЗакрытия, Выборка,,"ИсключитьИзПересчетаВП");
		СчетаЗакрытия.ИсключитьИзРасчетаКР = Справочники.НастройкиФормированияПроводокМеждународногоУчета.СчетаИсключенияРасчетаКР(Объект.Владелец);
		СчетаЗакрытия.ИсключитьИзПересчетаВП = Выборка.ИсключитьИзПересчетаВП.Выгрузить();
	КонецЕсли;
	АдресСчетовКурсовыхРазниц = ПоместитьВоВременноеХранилище(СчетаЗакрытия, УникальныйИдентификатор);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеВидимостьюНастройкиСчетовЗакрытияПериода(Форма)
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	ЕстьЗакрытиеСчетов = Объект.ЗакрытиеСчетовДоходовИРасходов = ПредопределенноеЗначение("Перечисление.ЗакрытиеСчетовДоходовИРасходов.Ежемесячно")
		ИЛИ Объект.ЗакрытиеСчетовДоходовИРасходов = ПредопределенноеЗначение("Перечисление.ЗакрытиеСчетовДоходовИРасходов.ВКонцеГода");
	
	Элементы.НастройкаСчетовЗакрытия.Видимость = ЕстьЗакрытиеСчетов;
	
КонецПроцедуры


#КонецОбласти