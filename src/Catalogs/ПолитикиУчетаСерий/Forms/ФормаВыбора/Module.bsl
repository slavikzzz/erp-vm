
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ТипЗнч(Параметры.Отбор) = Тип("Структура") Тогда
		Параметры.Отбор = Новый Структура;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Параметры.Отбор, НоменклатураСервер.ОтборПолитикУчетаСерийПоПараметрам(Параметры));
	
	ГруппаИли = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(Список.Отбор.Элементы,
		"ГруппаИли",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли);
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИли,
			"Предопределенный",
			Истина,
			ВидСравненияКомпоновкиДанных.Равно,
			,
			Истина,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ГруппаИ = ОбщегоНазначенияКлиентСервер.СоздатьГруппуЭлементовОтбора(ГруппаИли,
		"ГруппаИ",
		ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИ);
	
	Для Каждого КлючЗначение из Параметры.Отбор Цикл
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			КлючЗначение.Ключ,
			КлючЗначение.Значение,
			?(ТипЗнч(КлючЗначение.Значение) = Тип("Массив")
				или ТипЗнч(КлючЗначение.Значение) = Тип("ФиксированныйМассив"), 
					ВидСравненияКомпоновкиДанных.ВСписке, 
					ВидСравненияКомпоновкиДанных.Равно),
				,
				Истина,
				РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	КонецЦикла;
	
	Параметры.Отбор.Очистить();
	
	СобытияФорм.ПриСозданииНаСервере(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
	ЭтоВыборОбщейДляВидаНоменклатурыПолитики = ЗначениеЗаполнено(Параметры.ВидНоменклатуры);
	ОсобенностьУчета	                     = Параметры.ОсобенностьУчета;
	
	ИспользоватьНеотфактурованныеПоставки = ПолучитьФункциональнуюОпцию("ИспользоватьНеотфактурованныеПоставки");
	ИспользоватьТоварыВПутиОтПоставщиков  = ПолучитьФункциональнуюОпцию("ИспользоватьТоварыВПутиОтПоставщиков");
	ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи = ПолучитьФункциональнуюОпцию("ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи");
	БазоваяВерсия                         = ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	Если ИспользоватьНеотфактурованныеПоставки
		Или ИспользоватьТоварыВПутиОтПоставщиков
		Или ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи Тогда
		
		СформироватьНадписьРасшифровкаОтбора();
		
	КонецЕсли;
	
	Элементы.ДекорацияРасшифровкаОтбора.Видимость = (ИспользоватьНеотфактурованныеПоставки
														Или ИспользоватьТоварыВПутиОтПоставщиков
														Или ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи)
													И ЭтоВыборОбщейДляВидаНоменклатурыПолитики
													И Не БазоваяВерсия;
	
	
	Элементы.ДекорацияОграниченияВыбораОбщейПолитикиНеВсеСкладыОрдерныеНаИзлишкиНедостачи.Видимость = 
		ЭтоВыборОбщейДляВидаНоменклатурыПолитики
		И СкладыСервер.ЕстьСкладыБезОрдернойСхемыПриОтраженииИзлишковНедостач()
		И Не БазоваяВерсия;
	
	ПриСозданииНаСервереЛокализация();

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияРасшифровкаОтбораОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылка, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылка = "ОтключитьОтбор" Тогда 
		МассивЭлементов = ОбщегоНазначенияКлиентСервер.НайтиЭлементыИГруппыОтбора(Список.Отбор,,"ГруппаИ");
		
		ГруппаИ = МассивЭлементов[0];
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетСерийВНеотфактурованныхПоставкахТоваров",,,,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетТоваровВПутиОтПоставщикаПоСериям",,,,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетСерийВПереданныхНаХранениеТоварах",,,,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетСерийПереданныхПереработчикуТоваров",,,,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(ГруппаИ,
			"УчетСерийВПереданныхНаКомиссиюТоваров",,,,
			Ложь,
			РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);

		Элементы.ДекорацияРасшифровкаОтбора.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтотОбъект, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СформироватьНадписьРасшифровкаОтбора()
	
	МассивТекстов = Новый Массив;
	МассивТекстов.Добавить(НСтр("ru = 'Выбираемая политика учета серий должна иметь те же настройки учета серий при';
								|en = 'The selected batch accounting policy must use the same batch accounting settings when'"));
	
	МассивПолитикУчетаСерий = Новый Массив;
	
	Если ИспользоватьТоварыВПутиОтПоставщиков Тогда
		МассивПолитикУчетаСерий.Добавить(НСтр("ru = 'учете товаров в пути от поставщика';
												|en = 'registering goods in transit from vendor'"));
	КонецЕсли;
	
	Если ИспользоватьНеотфактурованныеПоставки Тогда
		МассивПолитикУчетаСерий.Добавить(НСтр("ru = 'неотфактурованных поставках';
												|en = 'delivering uninvoiced goods'"));
	КонецЕсли;
	
	Если ИспользоватьПередачуНаОтветственноеХранениеСПравомПродажи Тогда
		МассивПолитикУчетаСерий.Добавить(НСтр("ru = 'учете переданных на хранение товаров';
												|en = 'registering goods transferred to storage'"));
	КонецЕсли;
	
	ТекстПолитикУчетаСерий = Символы.НПП + МассивПолитикУчетаСерий[0];
	
	Если МассивПолитикУчетаСерий.Количество() > 2 Тогда
		Для НомерЭлемента = 1 По МассивПолитикУчетаСерий.ВГраница() Цикл
			Если НомерЭлемента < МассивПолитикУчетаСерий.ВГраница() Тогда
				ТекстПолитикУчетаСерий = "," + Символы.НПП + МассивПолитикУчетаСерий[НомерЭлемента];
			Иначе
				ТекстПолитикУчетаСерий = Символы.НПП + НСтр("ru = 'и';
															|en = 'and'") + Символы.НПП + МассивПолитикУчетаСерий[НомерЭлемента]
											+ ".";
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли МассивПолитикУчетаСерий.Количество() = 2 Тогда
		ТекстПолитикУчетаСерий = ТекстПолитикУчетаСерий + Символы.НПП + НСтр("ru = 'и';
																			|en = 'and'") + Символы.НПП
									+ МассивПолитикУчетаСерий[1];
		
	КонецЕсли;
	
	МассивТекстов.Добавить(ТекстПолитикУчетаСерий);
	МассивТекстов.Добавить(НСтр("ru = 'Есть возможность';
								|en = 'You can'"));
	МассивТекстов.Добавить(Символы.НПП);
	МассивТекстов.Добавить(Новый ФорматированнаяСтрока(НСтр("ru = 'отключить отбор';
															|en = 'clear the filter'"), , , , "ОтключитьОтбор"));
	МассивТекстов.Добавить(Символы.НПП);
	МассивТекстов.Добавить(НСтр("ru = 'и выбрать политику с отличными настройками, но это может привести к проблемам в учете.';
								|en = 'and select a policy with different settings, but this might result in accounting issues.'"));
	
КонецПроцедуры

#КонецОбласти

#Область Локализация

&НаСервере
Процедура ПриСозданииНаСервереЛокализация()
	
	ЭтоПодконтрольнаяПродукцияВЕТИС = 
		ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПодконтрольнаяПродукцияВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.МолочнаяПродукцияПодконтрольнаяВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.МорепродуктыПодконтрольныеВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КормаДляЖивотныхПодконтрольныеВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.МясоПодконтрольноеВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.КонсервированнаяПродукцияПодконтрольнаяВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ЗерноВЕТИС
		Или ОсобенностьУчета = Перечисления.ОсобенностиУчетаНоменклатуры.ПродуктыПереработкиЗернаВЕТИС;
	
	Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Видимость = ЭтоВыборОбщейДляВидаНоменклатурыПолитики
		И ЭтоПодконтрольнаяПродукцияВЕТИС
		И (СкладыСервер.ЕстьОрдерныйНаОтгрузкуСклад()
			Или СкладыСервер.ЕстьОрдерныйНаПоступлениеСклад())
		И Не ПолучитьФункциональнуюОпцию("БазоваяВерсия");
	
	Если Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Видимость Тогда
		Если СкладыСервер.ЕстьСкладыБезОрдернойСхемыПриОтраженииИзлишковНедостач() Тогда
			Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок =
			НСтр("ru = 'Есть склады, для которых используется ордерная схема при отгрузке или поступлении, поэтому подконтрольной продукции %1 единой политикой учета серий может быть только политика, предусматривающая учет себестоимости по сериям. Но в базе не все склады ордерные на отражение излишков, недостач и порчи, что не дает сделать такую политику единой для всех складов. Выберите политику ""Серии не используются"" и проводите настройку для каждого склада.';
				|en = 'Some warehouses use warehouse management for shipment or receiving, therefore, only a policy in which cost accounting by batch is kept can serve as a batch accounting policy for products controlled by %1. But not all warehouses use warehouse management to record surpluses, shortages, or damage. Thus, such policy cannot be applied to all warehouses. Select the ""Batches are not used"" policy, and configure it for each warehouse.'");
			Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок = СтрШаблон(Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок, "ВетИС");
			
		Иначе
			Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок =
			НСтр("ru = 'Есть склады, для которых используется ордерная схема при отгрузке или поступлении, поэтому подконтрольной продукции %1 единой политикой учета серий может быть только политика, предусматривающая учет себестоимости по сериям.';
				|en = 'Some warehouses use warehouse management for shipment or receiving, therefore, only a policy in which cost accounting by batch is kept can serve as a batch accounting policy for products controlled by %1.'");
		
			Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок = СтрШаблон(Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Заголовок, "ВетИС");
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ДекорацияОграниченияВыбораОбщейПолитикиНеВсеСкладыОрдерныеНаИзлишкиНедостачи.Видимость =
		Элементы.ДекорацияОграниченияВыбораОбщейПолитикиНеВсеСкладыОрдерныеНаИзлишкиНедостачи.Видимость
		И Не Элементы.ДекорацияОграниченияВыбораОбщейПолитикиВЕТИС.Видимость
		И Не ЭтоПодконтрольнаяПродукцияВЕТИС;
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти


