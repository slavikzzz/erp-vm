#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиПравилРегистрации

// См. ЗарплатаКадрыРасширенныйСинхронизацияДанных.ШаблонОбработчика
Процедура ПриЗаполненииНастроекОбработчиковПравилРегистрации(Настройки) Экспорт
	ЗарплатаКадрыРасширенныйСинхронизацияДанных.ДляРегламентированныхДанных(Настройки);
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура СоздатьВТСреднемесячныеНормыВремени(МенеджерВременныхТаблиц, РежимРаботы, Год = Неопределено) Экспорт 
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("РежимРаботы", РежимРаботы);
	Запрос.УстановитьПараметр("Год", Год);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СреднемесячныеНормыВремениГрафиковРаботыСотрудников.Год КАК Год,
	|	&РежимРаботы КАК РежимРаботы,
	|	СРЕДНЕЕ(СреднемесячныеНормыВремениГрафиковРаботыСотрудников.СреднемесячноеЧислоЧасов) КАК СреднемесячноеЧислоЧасов,
	|	СРЕДНЕЕ(СреднемесячныеНормыВремениГрафиковРаботыСотрудников.СреднемесячноеЧислоДней) КАК СреднемесячноеЧислоДней
	|ПОМЕСТИТЬ ВТСреднемесячныеНормыВремени
	|ИЗ
	|	Справочник.ГрафикиРаботыСотрудников КАК ГрафикиРаботыСотрудников
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СреднемесячныеНормыВремениГрафиковРаботыСотрудников КАК СреднемесячныеНормыВремениГрафиковРаботыСотрудников
	|		ПО ГрафикиРаботыСотрудников.Ссылка = СреднемесячныеНормыВремениГрафиковРаботыСотрудников.ГрафикРаботыСотрудников
	|			И (ГрафикиРаботыСотрудников.РежимРаботы = &РежимРаботы)
	|			И (&УсловиеГод)
	|
	|СГРУППИРОВАТЬ ПО
	|	СреднемесячныеНормыВремениГрафиковРаботыСотрудников.Год";	
	Если Год = Неопределено Тогда
		ТекстУсловияГод = "ИСТИНА";
	Иначе
		ТекстУсловияГод = "СреднемесячныеНормыВремениГрафиковРаботыСотрудников.Год = &Год";
	КонецЕсли;	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеГод", ТекстУсловияГод);
	Запрос.Выполнить();	
КонецПроцедуры	

#Область ОбновлениеИнформационнойБазы

Процедура ЗаполнитьСменыРежимовРаботы(ПараметрыОбновления = Неопределено) Экспорт
	
	ОбновлениеИБ = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый;
	
	Запрос = Новый Запрос;
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РежимыРаботыСотрудниковШаблонЗаполнения.Смена КАК Смена,
		|	РежимыРаботыСотрудниковШаблонЗаполнения.Ссылка КАК РежимРаботы
		|ИЗ
		|	Справочник.РежимыРаботыСотрудников.ШаблонЗаполнения КАК РежимыРаботыСотрудниковШаблонЗаполнения
		|ГДЕ
		|	РежимыРаботыСотрудниковШаблонЗаполнения.Смена <> ЗНАЧЕНИЕ(Справочник.СменыРаботыСотрудников.ПустаяСсылка)
		|УПОРЯДОЧИТЬ ПО
		|	РежимРаботы";
			
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		ОбновлениеИБ.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	Иначе
		ОбновлениеИБ.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Ложь);
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("РежимРаботы") Цикл 
		РежимРаботыОбъект = Выборка.РежимРаботы.ПолучитьОбъект();
		Пока Выборка.Следующий() Цикл
			СтрокаСмены = РежимРаботыОбъект.Смены.Добавить();
			СтрокаСмены.Смена = Выборка.Смена;
		КонецЦикла;
		ОбновлениеИнформационнойБазы.ЗаписатьДанные(РежимРаботыОбъект);
	КонецЦикла;
	
	ОбновлениеИБ.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецЕсли