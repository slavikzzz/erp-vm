
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
//++ НЕ УТКА
	ЗаполнитьРеквизитыФормыПоПараметрам();
	УстановитьЗаголовокФормы();
	НастроитьЭлементыФормыПоПараметрам();
	
	Если Параметры.ТолькоПросмотр Тогда
		
		МассивЭлементов = Новый Массив;
		МассивЭлементов.Добавить(Элементы.Спецификация.Имя);
		МассивЭлементов.Добавить(Элементы.СпецификацияНабора.Имя);
		МассивЭлементов.Добавить(Элементы.СпецификацияРемонта.Имя);
		МассивЭлементов.Добавить(Элементы.ПланироватьНеРанее.Имя);
		МассивЭлементов.Добавить(Элементы.ЭтапВыпуска.Имя);
		
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаВыбора",   Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаОчистки",  Ложь);
		ОбщегоНазначенияУТКлиентСервер.УстановитьСвойствоЭлементовФормы(Элементы, МассивЭлементов, "КнопкаОткрытия", Истина);
		
	КонецЕсли;
	
	ПараметрыВыбораСпецификаций = УправлениеДаннымиОбИзделиях.ПараметрыВыбораСпецификаций(Новый Структура(), Справочники.РесурсныеСпецификации);
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.Спецификация,        ПараметрыВыбораСпецификаций.Сборка);
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.СпецификацияНабора,  ПараметрыВыбораСпецификаций.Сборка);
	УправлениеДаннымиОбИзделияхКлиентСервер.УстановитьПараметрыВыбораСпецификаций(Элементы.СпецификацияРемонта, ПараметрыВыбораСпецификаций.Ремонт);
	
//-- НЕ УТКА
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
//++ НЕ УТКА
	
	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ЭтапВыпуска");
		
	КонецЕсли;
	
	Если НЕ (СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации
		И (ИспользуетсяПроизводство21 ИЛИ ДинамическаяСтруктураЗаказовНаПроизводство))
			И НЕ (СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.Обеспечивать
				И ОтметкаСоставПоСпецификации) Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("Спецификация");
		
	КонецЕсли;

	Если НЕ ОтметкаРемонтПоСпецификации Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("СпецификацияРемонта");
		
	КонецЕсли;
	
	Если НЕ ОтметкаПланироватьНеРанее Тогда
		
		МассивНепроверяемыхРеквизитов.Добавить("ПланироватьНеРанее");
		
	КонецЕсли;
	
//-- НЕ УТКА
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ИсточникВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИсточникВыбора) = Тип("ФормаКлиентскогоПриложения")
		И (ИсточникВыбора.ИмяФормы = "Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса") Тогда
			
		Режим = ВыбранноеЗначение.Режим;
		
		Если Режим = "ЭтапВыпуска" Тогда
			ЭтапВыпуска = ВыбранноеЗначение.Этап;
			ЭтапВыпускаПредставление = ВыбранноеЗначение.ЭтапПредставление;
			ДобавитьПромежуточныйВыпускПриВыборе = ВыбранноеЗначение.ДобавитьПромежуточныйВыпускПриВыборе
		Иначе
			ПланироватьНеРанее = ВыбранноеЗначение.Этап;
			ПланироватьНеРанееПредставление = ВыбранноеЗначение.ЭтапПредставление;
		КонецЕсли;
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СпособПолученияМатериалаПриИзменении(Элемент)
	
//++ НЕ УТКА
	ПриИзмененииСпособаПолученияМатериала();
//-- НЕ УТКА
	Возврат; // пустой обработчик

КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаОчистка(Элемент, СтандартнаяОбработка)
	
	ЭтапВыпуска = Неопределено;
	ЭтапВыпускаПредставление = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭтапОткрытие(ЭтапВыпуска);
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапВыпускаНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим",          "ЭтапВыпуска");
	ПараметрыФормы.Вставить("ТекущаяСсылка",  ЭтапВыпуска);
	ПараметрыФормы.Вставить("Номенклатура",   Номенклатура);
	ПараметрыФормы.Вставить("Характеристика", Характеристика);
	ПараметрыФормы.Вставить("АдресВХранилище", АдресПолуфабрикаты);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееОчистка(Элемент, СтандартнаяОбработка)
	
	ПланироватьНеРанее = Неопределено;
	ПланироватьНеРанееПредставление = "";
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееОткрытие(Элемент, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ЭтапОткрытие(ПланироватьНеРанее);
	
КонецПроцедуры

&НаКлиенте
Процедура ПланироватьНеРанееНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	
	ПараметрыФормы.Вставить("Режим",          "Этап");
	ПараметрыФормы.Вставить("ТекущаяСсылка",  ПланироватьНеРанее);
	ПараметрыФормы.Вставить("АдресВХранилище", АдресПолуфабрикаты);
	
	ОткрытьФорму("Справочник.РесурсныеСпецификации.Форма.ФормаВыбораЭлементаПроизводственногоПроцесса", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтметкаСоставПоСпецификацииПриИзменении(Элемент)
	
	Спецификация = Неопределено;
	//++ НЕ УТКА
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура СпецификацияНабораПриИзменении(Элемент)
	
	//++ НЕ УТКА
	НастроитьЗависимыеЭлементыФормы(ЭтотОбъект);
	//-- НЕ УТКА
	
	Возврат; // пустой обработчик
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
//++ НЕ УТКА
	ОчиститьСообщения();
	
	Если ПроверитьЗаполнение() Тогда
		
		Если Модифицированность Тогда
			Модифицированность = Ложь;
			ОповеститьОВыборе(ЗначениеВыбора());
		Иначе
			Закрыть();
		КонецЕсли;
		
	КонецЕсли;
//-- НЕ УТКА
	Возврат; // пустой обработчик

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА

&НаСервере
Процедура ЗаполнитьРеквизитыФормыПоПараметрам()
	
	НастройкиПодсистемыПроизводство = ПроизводствоСерверПовтИсп.НастройкиПодсистемыПроизводство();
	ЗаполнитьЗначенияСвойств(ЭтаФорма, НастройкиПодсистемыПроизводство);
	
	Этап = Параметры.Этап;
	Владелец = Параметры.Владелец;
	
	Номенклатура             = Параметры.Номенклатура;
	Характеристика           = Параметры.Характеристика;
	ЭтоПервыйЭтап            = Параметры.ЭтоПервыйЭтап;
	ЭтоМатериалНабор         = Параметры.ЭтоМатериалНабор;
	ЭтоТехнологическийНабор  = Параметры.ЭтоТехнологическийНабор;
	СпособПолученияМатериала = Параметры.СпособПолученияМатериала;
	
	Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации Тогда
		
		Спецификация = Параметры.ИсточникПолученияПолуфабриката;
		
	ИначеЕсли СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		ЭтапВыпуска = Параметры.ИсточникПолученияПолуфабриката;
		ЭтапВыпускаПредставление = Параметры.ИсточникПолученияПолуфабрикатаПредставление;
		
	ИначеЕсли СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.Обеспечивать
		И ЭтоМатериалНабор Тогда
		
		Спецификация = Параметры.ИсточникПолученияПолуфабриката;
		ОтметкаСоставПоСпецификации = ЗначениеЗаполнено(Спецификация);
		
	КонецЕсли;
	
	Если ДинамическаяСтруктураЗаказовНаПроизводство Тогда // сброс устаревших настроек
		ПланироватьНеРанее = Неопределено;
		ПланироватьНеРанееПредставление = "";
	Иначе
		ПланироватьНеРанее = Параметры.ПланироватьНеРанее;
		ПланироватьНеРанееПредставление = Параметры.ПланироватьНеРанееПредставление;
	КонецЕсли;
	
	Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации
		И ЗначениеЗаполнено(ПланироватьНеРанее) Тогда
		
		ОтметкаПланироватьНеРанее = Истина;
	Иначе
		
		ОтметкаПланироватьНеРанее = Ложь;
	КонецЕсли;
	
	Если Параметры.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт Тогда
		
		Если СпособПолученияМатериала = Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе
			И ЗначениеЗаполнено(Параметры.СпецификацияРемонта) Тогда
			
			ОтметкаРемонтПоСпецификации = Истина;
		Иначе
			
			ОтметкаРемонтПоСпецификации = Ложь;
		КонецЕсли;
		
		СпецификацияРемонта = Параметры.СпецификацияРемонта;
		
	КонецЕсли;
	
	АдресПолуфабрикаты = Параметры.АдресПолуфабрикаты;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовокФормы()
	
	Если ЗначениеЗаполнено(Номенклатура) Тогда
	
		ТекстНоменклатура = СтрШаблон(НСтр("ru = 'Номенклатура: %1';
											|en = 'Item: %1'"), Номенклатура);
		
		Если ЗначениеЗаполнено(Характеристика) Тогда
			
			ТекстНоменклатура = ТекстНоменклатура + ", " + СтрШаблон(НСтр("ru = 'Характеристика: %1';
																			|en = 'Item variant: %1'"), Характеристика);
			
		КонецЕсли;
		
		АвтоЗаголовок = Ложь;
		Заголовок = СтрШаблон(НСтр("ru = 'Способ получения (%1)';
									|en = 'Receipt method (%1)'"), ТекстНоменклатура);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура НастроитьЭлементыФормыПоПараметрам()
	
	Если ДинамическаяСтруктураЗаказовНаПроизводство Или ИспользуетсяПроизводство21 Тогда
		Элементы.Спецификация.АвтоОтметкаНезаполненного = Истина;
		Элементы.Спецификация.ПодсказкаВвода = "";
	Иначе
		Элементы.Спецификация.АвтоОтметкаНезаполненного = Ложь;
		Элементы.Спецификация.ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>';
													|en = '<picked automatically>'");
	КонецЕсли;
	
	// Обеспечивать
	Элементы.ГруппаСоставПоСпецификации.Видимость = ЭтоМатериалНабор
		И (УправлениеДаннымиОбИзделияхПовтИсп.ДоступноХранениеСоставаНабораВСпецификациях()
			ИЛИ ЗначениеЗаполнено(Спецификация));
	
	// Производится на этапе
	Элементы.ГруппаПроизводитсяНаЭтапе.Видимость = НЕ ЭтоТехнологическийНабор;
	Элементы.СпособПроизводитсяНаЭтапе.Доступность = (Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ)
		И НЕ ЭтоПервыйЭтап
		И НЕ ЭтоМатериалНабор;
	Элементы.ГруппаРемонтПоСпецификации.Видимость = (Параметры.ТипПроизводственногоПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Ремонт);
	
	// Производится по спецификации
	Элементы.СпособПроизводитсяПоСпецификации.Доступность = (Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.УказываетсяВНСИ
			ИЛИ Параметры.СпособАвтовыбораНоменклатуры = Перечисления.СпособыАвтовыбораНоменклатуры.ЗадаетсяВСвойствеПродукции)
		И НЕ ЭтоМатериалНабор;
	Элементы.ГруппаПланироватьНеРанее.Видимость = НЕ ИспользуетсяПроизводство21 И НЕ ЭтоМатериалНабор И НЕ ЭтоТехнологическийНабор И НЕ ДинамическаяСтруктураЗаказовНаПроизводство;
	
	УстановитьКлючСохраненияПоложенияОкна();
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеЭлементыФормы(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ЭтапВыпуска.Видимость  = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе"));
	Элементы.Спецификация.Видимость = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации"));
	
	Элементы.ГруппаРемонтПоСпецификации.Доступность = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе"));
	Элементы.ГруппаПланироватьНеРанее.Доступность = (Форма.СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации"));
	
	Элементы.СпецификацияРемонта.Видимость = Форма.ОтметкаРемонтПоСпецификации;
	Элементы.ПланироватьНеРанее.Видимость = Форма.ОтметкаПланироватьНеРанее;
	
	Элементы.СпецификацияНабора.ОтметкаНезаполненного = Форма.ОтметкаСоставПоСпецификации И НЕ ЗначениеЗаполнено(Форма.Спецификация);
	Элементы.СпецификацияНабора.ТолькоПросмотр = НЕ Форма.ОтметкаСоставПоСпецификации;
	Элементы.СпецификацияНабора.ПодсказкаВвода = ?(Форма.ОтметкаСоставПоСпецификации, "", НСтр("ru = '<спецификация состава подбирается автоматически>';
																								|en = '<bill of materials of the content is picked automatically>'"));
	
КонецПроцедуры

&НаКлиенте
Функция ЗначениеВыбора()
	
	Результат = Новый Структура;
	
	Результат.Вставить("СпособПолученияМатериала", СпособПолученияМатериала);
	Результат.Вставить("ИсточникПолученияПолуфабриката", ИсточникПолученияПолуфабриката());
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации")
		И ОтметкаПланироватьНеРанее Тогда
		
		Результат.Вставить("ПланироватьНеРанее", ПланироватьНеРанее);
	Иначе
		
		Результат.Вставить("ПланироватьНеРанее", ПредопределенноеЗначение("Справочник.ЭтапыПроизводства.ПустаяСсылка"));
	КонецЕсли;
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе") Тогда
		
		Если ОтметкаРемонтПоСпецификации Тогда
			Результат.Вставить("СпецификацияРемонта", СпецификацияРемонта);
		Иначе
			Результат.Вставить("СпецификацияРемонта", ПредопределенноеЗначение("Справочник.РесурсныеСпецификации.ПустаяСсылка"));
		КонецЕсли;
		
		Если ДобавитьПромежуточныйВыпускПриВыборе Тогда
			Результат.Вставить("ДобавитьПромежуточныйВыпускПриВыборе", ДобавитьПромежуточныйВыпускПриВыборе);
		КонецЕсли;
		
	КонецЕсли;
	
	Результат.Вставить("ПроизводитсяВПроцессе", УправлениеДаннымиОбИзделияхКлиентСервер.ПолуфабрикатПроизводимыйВПроцессе(Результат));
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Функция ИсточникПолученияПолуфабриката()
	
	Если СпособПолученияМатериала = ПредопределенноеЗначение("Перечисление.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе") Тогда
		Результат = ЭтапВыпуска;
	Иначе
		Результат = Спецификация;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ПриИзмененииСпособаПолученияМатериала()

	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизвестиПоСпецификации Тогда
		
		Спецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
		ОтметкаПланироватьНеРанее = Ложь;
		
	КонецЕсли;

	Если СпособПолученияМатериала <> Перечисления.СпособыПолученияМатериаловВСпецификации.ПроизводитсяНаЭтапе Тогда
		
		ЭтапВыпуска = Справочники.ЭтапыПроизводства.ПустаяСсылка();
		ЭтапВыпускаПредставление = "";
		ОтметкаРемонтПоСпецификации = Ложь;
		
	КонецЕсли;
	
	НастроитьЗависимыеЭлементыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКлючСохраненияПоложенияОкна()
	
	МассивПризнаков = Новый Массив;
	МассивПризнаков.Добавить(ИспользуетсяПроизводство22);
	МассивПризнаков.Добавить(ЭтоТехнологическийНабор);
	МассивПризнаков.Добавить(ЭтоМатериалНабор);
	
	КлючСохраненияПоложенияОкна = СтрШаблон("%1_%2", ЭтотОбъект.ИмяФормы, СтрСоединить(МассивПризнаков));
	
КонецПроцедуры

//-- НЕ УТКА

&НаКлиенте
Процедура ЭтапОткрытие(ЭтапСсылка)
	
	Если ЕстьВозможностьОткрытияЭтапа(ЭтапВыпуска) Тогда
		ПараметрыФормы = Новый Структура("Ключ,ТолькоПросмотр", ЭтапСсылка, Истина);
		ОткрытьФорму("Справочник.ЭтапыПроизводства.ФормаОбъекта", ПараметрыФормы);
	Иначе
		ПоказатьПредупреждение(, НСтр("ru = 'Открыть элемент можно только после его записи.';
										|en = 'Element can be opened after it has been saved.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЕстьВозможностьОткрытияЭтапа(ЭтапСсылка)
	
	Возврат ЗначениеЗаполнено(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЭтапСсылка, "Ссылка"));
	
КонецФункции

#КонецОбласти