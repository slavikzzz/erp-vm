
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Параметры.СтруктураДанных;
	
	Если СтруктураДанных.Свойство("ТолькоПросмотрФормы") И СтруктураДанных.ТолькоПросмотрФормы Тогда
		Элементы.ДоверительЮЛ_РоссийскаяОрганизация.ТолькоПросмотр 	= Истина;
		Элементы.ДоверительЮЛ_НаимОрг.ТолькоПросмотр 				= Истина;
		Элементы.ДоверительЮЛ_ИНН.ТолькоПросмотр 					= Истина;
		Элементы.ДоверительЮЛ_ОГРН.ТолькоПросмотр 					= Истина;
		Элементы.ДоверительЮЛ_СтрРег.ТолькоПросмотр 				= Истина;
		Элементы.ДоверительЮЛ_Адр.ТолькоПросмотр 					= Истина;
		Элементы.ДоверительЮЛ_НаимРегОрг.ТолькоПросмотр 			= Истина;
		Элементы.ДоверительЮЛ_РегНомер.ТолькоПросмотр 				= Истина;
		Элементы.ДоверительФЛ_ИНН.ТолькоПросмотр 					= Истина;
		Элементы.ДоверительФЛ_Гражданство.ТолькоПросмотр 			= Истина;
		Элементы.ДоверительФЛ_ОГРН.ТолькоПросмотр 					= Истина;
		Элементы.ДоверительФЛ_СНИЛС.ТолькоПросмотр 					= Истина;
		Элементы.ФормаКнопкаСохранить.Доступность 					= Ложь;
	КонецЕсли;
	
	Доверитель_ЮридическоеЛицо = (СтруктураДанных = Неопределено ИЛИ СтруктураДанных.Доверитель_ЮридическоеЛицо);
	ДоверительЮЛ_РоссийскаяОрганизация = (СтруктураДанных = Неопределено
		ИЛИ СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация);
	
	Если СтруктураДанных <> Неопределено Тогда
		ДоверительЮЛ_НаимОрг 				= СтруктураДанных.ДоверительЮЛ_НаимОрг;
		ДоверительЮЛ_ИНН 					= СтруктураДанных.ДоверительЮЛ_ИНН;
		ДоверительЮЛ_ОГРН 					= СтруктураДанных.ДоверительЮЛ_ОГРН;
		ДоверительЮЛ_СтрРег 				= СтруктураДанных.ДоверительЮЛ_СтрРег;
		ДоверительЮЛ_НаимРегОрг 			= СтруктураДанных.ДоверительЮЛ_НаимРегОрг;
		ДоверительЮЛ_РегНомер 				= СтруктураДанных.ДоверительЮЛ_РегНомер;
		ДоверительЮЛ_Адр 					= СтруктураДанных.ДоверительЮЛ_Адр;
		ДоверительЮЛ_АдрXML 				= СтруктураДанных.ДоверительЮЛ_АдрXML;
		ДоверительФЛ_ИНН 					= СтруктураДанных.ДоверительФЛ_ИНН;
		ДоверительФЛ_ОГРН 					= СтруктураДанных.ДоверительФЛ_ОГРН;
		ДоверительФЛ_СНИЛС 					= СтруктураДанных.ДоверительФЛ_СНИЛС;
		ДоверительФЛ_Гражданство 			= СтруктураДанных.ДоверительФЛ_Гражданство;
	КонецЕсли;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоверительЮЛ_ИностраннаяОрганизацияПриИзменении(Элемент)
	УправлениеФормой(ЭтаФорма);
КонецПроцедуры

&НаКлиенте
Процедура ДоверительЮЛ_АдрНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ НЕ ДоверительЮЛ_РоссийскаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДоверительЮЛ_АдрНачалоВыбораЗавершение", ЭтотОбъект);
	
	ПараметрыФормы = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
		ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"), ДоверительЮЛ_АдрXML);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормы,, ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверительЮЛ_АдрОчистка(Элемент, СтандартнаяОбработка)
	
	ДоверительЮЛ_АдрXML = "";
	ДоверительЮЛ_Адр = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДоверительЮЛ_РоссийскаяОрганизация", 	ДоверительЮЛ_РоссийскаяОрганизация);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимОрг", 				ДоверительЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_ИНН", 					ДоверительЮЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительЮЛ_ОГРН", 					ДоверительЮЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительЮЛ_СтрРег", 				ДоверительЮЛ_СтрРег);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимРегОрг", 			ДоверительЮЛ_НаимРегОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_РегНомер", 				ДоверительЮЛ_РегНомер);
	СтруктураДанных.Вставить("ДоверительЮЛ_Адр", 					ДоверительЮЛ_Адр);
	СтруктураДанных.Вставить("ДоверительЮЛ_АдрXML", 				ДоверительЮЛ_АдрXML);
	СтруктураДанных.Вставить("ДоверительФЛ_ИНН", 					ДоверительФЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительФЛ_ОГРН", 					ДоверительФЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительФЛ_СНИЛС", 					ДоверительФЛ_СНИЛС);
	СтруктураДанных.Вставить("ДоверительФЛ_Гражданство", 			ДоверительФЛ_Гражданство);
	
	Закрыть(СтруктураДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ГруппаЛевая.Видимость = Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ГруппаПравая.Видимость = НЕ Форма.Доверитель_ЮридическоеЛицо
		ИЛИ НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ГруппаПравая.Заголовок = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация,
		НСтр("ru = 'Руководитель обособленного подразделения иностранной организации';
			|en = 'Руководитель обособленного подразделения иностранной организации'"),
		НСтр("ru = 'Индивидуальный предприниматель';
			|en = 'Индивидуальный предприниматель'"));
	
	Форма.Элементы.ДоверительЮЛ_НаимОрг.ПоложениеЗаголовка = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация,
		ПоложениеЗаголовкаЭлементаФормы.Верх, ПоложениеЗаголовкаЭлементаФормы.Авто);
	Форма.Элементы.ДоверительЮЛ_Адр.Заголовок = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация, НСтр("ru = 'Адрес в латинской транскрипции';
															|en = 'Адрес в латинской транскрипции'"), "");
	Форма.Элементы.ДоверительЮЛ_Адр.ПоложениеЗаголовка = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация,
		ПоложениеЗаголовкаЭлементаФормы.Верх, ПоложениеЗаголовкаЭлементаФормы.Авто);
	Форма.Элементы.ДоверительЮЛ_Адр.РедактированиеТекста = Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительЮЛ_Адр.КнопкаВыбора = Форма.Доверитель_ЮридическоеЛицо
		И Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительЮЛ_ОГРН.Видимость = Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительЮЛ_СтрРег.Видимость = НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительЮЛ_НаимРегОрг.Видимость = НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительЮЛ_РегНомер.Видимость = НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	
	Форма.Элементы.ДоверительФЛ_СНИЛС.Видимость = НЕ Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ДоверительФЛ_ОГРН.Видимость = НЕ Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ДоверительФЛ_ИНН.Видимость = НЕ Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ДоверительФЛ_ИНН.АвтоОтметкаНезаполненного = НЕ Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ДоверительФЛ_ИНН.АвтоВыборНезаполненного = НЕ Форма.Доверитель_ЮридическоеЛицо;
	Форма.Элементы.ДоверительФЛ_Гражданство.АвтоОтметкаНезаполненного = Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительФЛ_Гражданство.АвтоВыборНезаполненного = Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация;
	Форма.Элементы.ДоверительФЛ_Гражданство.Подсказка = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация,
		НСтр("ru = 'Незаполненность поля означает лицо без гражданства';
			|en = 'Незаполненность поля означает лицо без гражданства'"), "");
	Форма.Элементы.ДоверительФЛ_Гражданство.ОтображениеПодсказки = ?(Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.ДоверительЮЛ_РоссийскаяОрганизация, ОтображениеПодсказки.Кнопка, ОтображениеПодсказки.Авто);
	
КонецПроцедуры

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	Если Доверитель_ЮридическоеЛицо Тогда
		Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_НаимОрг) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задано наименование организации.';
															|en = 'Не задано наименование организации.'"),,
				"ДоверительЮЛ_НаимОрг",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_ИНН) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан ИНН организации.';
															|en = 'Не задан ИНН организации.'"),, "ДоверительЮЛ_ИНН",,
				Отказ);
		ИначеЕсли НЕ РегламентированнаяОтчетностьВызовСервера.ИННСоответствуетТребованиямНаСервере(
			ДоверительЮЛ_ИНН, Ложь) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ИНН организации.';
															|en = 'Указан некорректный ИНН организации.'"),,
				"ДоверительЮЛ_ИНН",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_Адр) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан адрес организации.';
															|en = 'Не задан адрес организации.'"),, "ДоверительЮЛ_Адр",,
				Отказ);
		КонецЕсли;
		
		Если ДоверительЮЛ_РоссийскаяОрганизация Тогда
			Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_ОГРН) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан ОГРН организации.';
																|en = 'Не задан ОГРН организации.'"),, "ДоверительЮЛ_ОГРН",,
					Отказ);
			ИначеЕсли СтрДлина(ДоверительЮЛ_ОГРН) <> 13 Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ОГРН организации.';
																|en = 'Указан некорректный ОГРН организации.'"),,
					"ДоверительЮЛ_ОГРН",, Отказ);
			КонецЕсли;
			
		Иначе
			Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_СтрРег) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задана страна регистрации организации.';
																|en = 'Не задана страна регистрации организации.'"),,
					"ДоверительЮЛ_СтрРег",, Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_НаимРегОрг) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задано наименование регистрирующего органа организации.';
																|en = 'Не задано наименование регистрирующего органа организации.'"),,
					"ДоверительЮЛ_НаимРегОрг",, Отказ);
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(ДоверительЮЛ_РегНомер) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан регистрационный номер организации.';
																|en = 'Не задан регистрационный номер организации.'"),,
					"ДоверительЮЛ_РегНомер",, Отказ);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДоверительФЛ_ИНН) И НЕ РегламентированнаяОтчетностьВызовСервера.ИННСоответствуетТребованиямНаСервере(
				ДоверительФЛ_ИНН, Истина) Тогда
				ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ИНН руководителя обособленного подразделения.';
																|en = 'Указан некорректный ИНН руководителя обособленного подразделения.'"),,
					"ДоверительЮЛ_ИНН",, Отказ);
			КонецЕсли;
		КонецЕсли;
		
	Иначе
		Если НЕ ЗначениеЗаполнено(ДоверительФЛ_ИНН) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан ИНН.';
															|en = 'Не задан ИНН.'"),, "ДоверительФЛ_ИНН",,
				Отказ);
		ИначеЕсли НЕ РегламентированнаяОтчетностьВызовСервера.ИННСоответствуетТребованиямНаСервере(
			ДоверительФЛ_ИНН, Истина) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ИНН.';
															|en = 'Указан некорректный ИНН.'"),,
				"ДоверительФЛ_ИНН",, Отказ);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ДоверительФЛ_ОГРН) И СтрДлина(ДоверительФЛ_ОГРН) <> 15 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный ОГРНИП.';
															|en = 'Указан некорректный ОГРНИП.'"),,
				"ДоверительФЛ_ОГРН",, Отказ);
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДоверительФЛ_СНИЛС) Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не задан СНИЛС.';
															|en = 'Не задан СНИЛС.'"),,
				"ДоверительФЛ_СНИЛС",, Отказ);
		ИначеЕсли СтрДлина(ДоверительФЛ_СНИЛС) <> 14 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Указан некорректный СНИЛС.';
															|en = 'Указан некорректный СНИЛС.'"),,
				"ДоверительФЛ_СНИЛС",, Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

&НаКлиенте
Процедура ДоверительЮЛ_АдрНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ДоверительЮЛ_АдрXML = Результат.КонтактнаяИнформация;
	ДоверительЮЛ_Адр = ДокументооборотСКОВызовСервера.ПредставлениеКонтактнойИнформации(Результат.КонтактнаяИнформация);
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти
