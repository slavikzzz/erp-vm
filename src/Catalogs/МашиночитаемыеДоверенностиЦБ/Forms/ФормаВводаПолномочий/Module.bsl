
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Параметры.СтруктураДанных;
	
	Если СтруктураДанных.Свойство("ТолькоПросмотрФормы") И СтруктураДанных.ТолькоПросмотрФормы Тогда
		Элементы.ПолныеПолномочия.ТолькоПросмотр 	= Истина;
		Элементы.Полномочия.ТолькоПросмотр 			= Истина;
		Элементы.ФормаКнопкаСохранить.Доступность 	= Ложь;
	КонецЕсли;
	
	// определяем возможные полномочия в таблице
	Для ВидПолномочия = 1 По ДокументооборотСКОКлиентСервер.КоличествоПолномочийМЧДЦБ() Цикл
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		ОпределитьПолномочиеВТаблице(ПредставлениеВида,
			ДокументооборотСКОКлиентСервер.ОбозначениеПолномочияМЧДЦБПоКоду(ПредставлениеВида, Истина));
	КонецЦикла;
	
	// расставляем флажки
	Если НЕ СтруктураДанных.ПризнакПолныеПолномочия Тогда
		Для каждого СтрПолномочие Из Полномочия Цикл
			СтрПолномочие.Пометка = СтруктураДанных["Признак" + СтрПолномочие.Код];
		КонецЦикла;
	КонецЕсли;
	
	// устанавливаем в исходное значение переключатель "Полные полномочия"
	ПолныеПолномочия = ?(СтруктураДанных.ПризнакПолныеПолномочия, "0", "1");
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РеквизитПереключательПолныеПолномочияПриИзменении(Элемент)
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура УстановитьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Истина;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СнятьФлажки(Команда)
	
	Для Каждого Стр Из Полномочия Цикл
		Стр.Пометка = Ложь;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	Если НЕ СохранениеВозможно() Тогда
		Возврат;
	КонецЕсли;
	
	Результат = Новый Структура;
	Результат.Вставить("ПризнакПолныеПолномочия", ?(ПолныеПолномочия = "1", Ложь, Истина));
	Для Каждого Стр Из Полномочия Цикл
		Результат.Вставить("Признак" + Стр.Код, ?(ПолныеПолномочия = "1", Стр.Пометка, Ложь));
	КонецЦикла;
	
	Закрыть(Результат);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ГруппаТаблицаПолномочий.Доступность = (Форма.ПолныеПолномочия = "1");
	
КонецПроцедуры

&НаСервере
Процедура ОпределитьПолномочиеВТаблице(КодПолномочия, НаименованиеПолномочия)
	
	НовСтр = Полномочия.Добавить();
	НовСтр.Код = КодПолномочия;
	НовСтр.Наименование = НаименованиеПолномочия;
	
КонецПроцедуры

&НаКлиенте
Функция СохранениеВозможно()
	
	Отказ = Ложь;
	
	ОчиститьСообщения();
	
	// проверяем полномочия
	Если ПолныеПолномочия <> "0" Тогда
		СтрокиИстина = Полномочия.НайтиСтроки(Новый Структура("Пометка", Истина));
		Если СтрокиИстина.Количество() = 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбран ни один вид полномочия.';
															|en = 'Не выбран ни один вид полномочия.'"), , "Полномочия", , Отказ);
		КонецЕсли;
	КонецЕсли;
	
	Возврат НЕ Отказ;
	
КонецФункции

#КонецОбласти
