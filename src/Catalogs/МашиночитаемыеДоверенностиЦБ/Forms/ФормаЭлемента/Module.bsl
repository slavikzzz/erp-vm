&НаКлиенте
Перем КонтекстЭДОКлиент;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Ключ.Пустая() Тогда
		Если НЕ ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
			Объект.СведенияОбИнформационнойСистеме = "-";
			
			Если Параметры.Свойство("Организация") И ЗначениеЗаполнено(Параметры.Организация) Тогда
				Объект.Организация = Параметры.Организация;
				Объект.Доверитель = Параметры.Организация;
				ПодставитьРеквизитыДоверителя(ЭтаФорма);
				
			Иначе
				УчетПоВсемОрганизациям = РегламентированнаяОтчетность.ПолучитьПризнакУчетаПоВсемОрганизациям();
				Элементы.Доверитель.ТолькоПросмотр = НЕ УчетПоВсемОрганизациям;
				
				ОргПоУмолчанию = РегламентированнаяОтчетность.ПолучитьЗначениеПоУмолчанию("ОсновнаяОрганизация");
				
				КонтекстЭДОСервер = КонтекстЭДОСервер();
				
				Если ЗначениеЗаполнено(ОргПоУмолчанию)
					И ?(КонтекстЭДОСервер = Неопределено, Истина,
					КонтекстЭДОСервер.СписокДопустимыхОрганизацийВОбъектахОбмена().Найти(ОргПоУмолчанию) <> Неопределено)
					И ((ЗначениеЗаполнено(ОргПоУмолчанию) И НЕ УчетПоВсемОрганизациям)
					ИЛИ (НЕ ЗначениеЗаполнено(Объект.Организация) И УчетПоВсемОрганизациям
					И (ЗначениеЗаполнено(ОргПоУмолчанию)))) Тогда
					
					Объект.Организация = ОргПоУмолчанию;
					Объект.Доверитель = ОргПоУмолчанию;
					ПодставитьРеквизитыДоверителя(ЭтаФорма);
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Объект.Статус = Перечисления.СтатусыМашиночитаемойДоверенностиКО.ВРаботе;
		Объект.ДатаОтправки = Неопределено;
		Объект.ДатаОбновленияСтатуса = Неопределено;
		Объект.ИмяФайлаВыгрузки = "";
		Объект.ОтпечатокСертификата = "";
	КонецЕсли;
	
	Инициализация();
	
	УправлениеФормой(ЭтаФорма);
	ПрорисоватьСтатус(ЭтаФорма);
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ОтметитьКакПрочтенное(Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если ПараметрыПриложения["МашиночитаемыеДоверенностиЦБ.ЗакрытьПанельИнформации"] = Истина Тогда
		Элементы.ПанельИнформации.Видимость = Ложь;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииПослеПолученияКонтекстаЭДО", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПолучитьКонтекстЭДО(ОписаниеОповещения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_МашиночитаемыеДоверенностиЦБ",, Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	СохранитьСтатусОтправкиУведомления();
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ЗначениеЗаполнено(Объект.Доверитель) И ИмяСобытия = "Запись_Организации"
		И (Параметр = Объект.Доверитель ИЛИ Источник = Объект.Доверитель) Тогда
		
		ПодставитьРеквизитыДоверителя(ЭтаФорма);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ) И (ИмяСобытия = "Запись_Контрагенты"
		ИЛИ ИмяСобытия = "Запись_Контрагента" ИЛИ ИмяСобытия = "Запись_ФизическиеЛица"
		ИЛИ ИмяСобытия = "Запись_ВладельцаИлиБухгалтера")
		И (Параметр = Объект.ЛицоБезДовФЛ ИЛИ Источник = Объект.ЛицоБезДовФЛ) Тогда
		
		ПодставитьРеквизитыЛицаБезДоверенностиФЛ();
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.Представитель) И (ИмяСобытия = "Запись_Организации"
		ИЛИ ИмяСобытия = "Запись_Контрагенты" ИЛИ ИмяСобытия = "Запись_Контрагента"
		ИЛИ ИмяСобытия = "Запись_ФизическиеЛица" ИЛИ ИмяСобытия = "Запись_ВладельцаИлиБухгалтера")
		И (Параметр = Объект.Представитель ИЛИ Источник = Объект.Представитель) Тогда
		
		ПодставитьРеквизитыПредставителя();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДоверительПриИзменении(Элемент)
	
	ПодставитьРеквизитыДоверителя(ЭтаФорма);
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.Доверитель) = Тип("Строка") Тогда
		Объект.ДоверительЮЛ_НаимОрг = Объект.Доверитель;
		ВвестиРеквизитыДоверителя();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ДоверительОчистка(Элемент, СтандартнаяОбработка)
	
	Если НЕ ПодписьЗагружена Тогда
		Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	КонецЕсли;
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	Доверитель_ЮридическоеЛицо 					= Истина;
	Объект.ДоверительЮЛ_ИностраннаяОрганизация 	= Ложь;
	Объект.ДоверительЮЛ_НаимОрг 				= "";
	Объект.ДоверительЮЛ_ИНН 					= "";
	Объект.ДоверительЮЛ_ОГРН 					= "";
	Объект.ДоверительЮЛ_СтрРег 					= ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ДоверительЮЛ_НаимРегОрг 				= "";
	Объект.ДоверительЮЛ_РегНомер 				= "";
	Объект.ДоверительЮЛ_АдрРус 					= "";
	Объект.ДоверительЮЛ_АдрXML 					= "";
	Объект.ДоверительЮЛ_АдрЛат 					= "";
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительРук")));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ")));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительРук")));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ")));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	
	Объект.ДоверительФЛ_ИНН 			= "";
	Объект.ДоверительФЛ_ОГРН 			= "";
	Объект.ДоверительФЛ_СНИЛС 			= "";
	Объект.ДоверительФЛ_Гражданство 	= ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	
	Объект.ЛицоБезДовФЛ 				= Неопределено;
	Объект.ЛицоБезДовФЛ_СНИЛС 			= "";
	Объект.ЛицоБезДовФЛ_Гражданство 	= ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ЛицоБезДовФЛ_Должность 		= "";
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыДоверителяНажатие(Элемент)
	
	ВвестиРеквизитыДоверителя();
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛПриИзменении(Элемент)
	
	ПодставитьРеквизитыЛицаБезДоверенностиФЛ();
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.ЛицоБезДовФЛ) = Тип("Строка") Тогда
		ВвестиРеквизитыЛицаБезДоверенностиФЛ();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЛицоБезДовФЛОчистка(Элемент, СтандартнаяОбработка)
	
	Объект.ЛицоБезДовФЛ 				= Неопределено;
	Объект.ЛицоБезДовФЛ_СНИЛС 			= "";
	Объект.ЛицоБезДовФЛ_Гражданство 	= ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ЛицоБезДовФЛ_Должность 		= "";
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияРеквизитыЛицаБезДоверенностиФЛНажатие(Элемент)
	
	ВвестиРеквизитыЛицаБезДоверенностиФЛ();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительПриИзменении(Элемент)
	
	ПодставитьРеквизитыПредставителя();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительОчистка(Элемент, СтандартнаяОбработка)
	
	Если ПодписьЗагружена Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_ФИО = "";
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_Удостоверение = "";
	
	Объект.ПредставительФЛ_ИНН = "";
	Объект.ПредставительФЛ_СНИЛС = "";
	Объект.ПредставительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
	Объект.ПредставительФЛ_Должность = "";
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ФормаВводаФИО = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ФормаВводаФИО");
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	ФормаВводаФИО.Фамилия 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Фамилия, "");
	ФормаВводаФИО.Имя 		= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Имя, "");
	ФормаВводаФИО.Отчество 	= ?(СтрокиФИО.Количество() <> 0, СтрокиФИО[0].Отчество, "");
	
	ФормаВводаФИО.ОписаниеОповещенияОЗакрытии =
		Новый ОписаниеОповещения("ПредставительФЛ_ФИОНачалоВыбораПослеВвода", ЭтотОбъект);
	ФормаВводаФИО.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаВводаФИО.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИООчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокФИО Цикл
		Объект.ФИО.Удалить(СтрокиФИО[КоличествоСтрокФИО - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_ФИО = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ДокументВид",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВидДок, ""));
	СтруктураДанных.Вставить("ДокументСерия",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].СерДок, ""));
	СтруктураДанных.Вставить("ДокументНомер",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].НомДок, ""));
	СтруктураДанных.Вставить("ДокументДатаВыдачи",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ДатаДок, ""));
	СтруктураДанных.Вставить("ДокументКемВыдан",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].ВыдДок, ""));
	СтруктураДанных.Вставить("ДокументКодПодразделения",
		?(СтрокиУдостоверений.Количество() <> 0, СтрокиУдостоверений[0].КодВыдДок, ""));

	ОписаниеОповещения = Новый ОписаниеОповещения("ПредставительФЛ_УдостоверениеНачалоВыбораПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиЦБ.Форма.ФормаВводаУдостоверения",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеОчистка(Элемент, СтандартнаяОбработка)
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
		Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
	КонецЦикла;
	
	ПредставительФЛ_Удостоверение = "";
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолномочияПредставителяНажатие(Элемент)
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ПризнакПолныеПолномочия", ?(Объект.ПолномочияПредставителя.Количество() <> 0,
		Объект.ПолномочияПредставителя[0].ПризнакПолныеПолномочия, Истина));
	Для ВидПолномочия = 1 По ДокументооборотСКОКлиентСервер.КоличествоПолномочийМЧДЦБ() Цикл
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		СтруктураДанных.Вставить("Признак" + ПредставлениеВида, ?(Объект.ПолномочияПредставителя.Количество() <> 0,
			Объект.ПолномочияПредставителя[0]["Признак" + ПредставлениеВида], Ложь));
	КонецЦикла;
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ДекорацияПолномочияПредставителяНажатиеПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиЦБ.Форма.ФормаВводаПолномочий",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Подписать(Команда)
	
	ОчиститьСообщения();
	Если НЕ ПодписьЗагружена Тогда
		РезультатыПроверки = ДокументооборотСКОВызовСервера.ПроверитьМЧДЦБ(Объект);
		
		Если РезультатыПроверки.Количество() <> 0 Тогда
			Для каждого РезультатПроверки Из РезультатыПроверки Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстОшибки,,
					РезультатПроверки.Поле);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьПослеПодтвержденияПодписи", ЭтотОбъект);
	Если ПодписьЗагружена Тогда
		ПоказатьВопрос(
			ОписаниеОповещения,
			НСтр("ru = 'Машиночитаемая доверенность уже подписана.
					   |Заменить подпись?';
					   |en = 'Машиночитаемая доверенность уже подписана.
					   |Заменить подпись?'"),
			РежимДиалогаВопрос.ДаНет,,
			КодВозвратаДиалога.Нет);
		
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОчиститьСообщения();
	Если НЕ ПодписьЗагружена Тогда
		РезультатыПроверки = ДокументооборотСКОВызовСервера.ПроверитьМЧДЦБ(Объект);
		
		Если РезультатыПроверки.Количество() <> 0 Тогда
			Для каждого РезультатПроверки Из РезультатыПроверки Цикл
				ОбщегоНазначенияКлиент.СообщитьПользователю(РезультатПроверки.ТекстОшибки,,
					РезультатПроверки.Поле);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьПослеПодтвержденияВыгрузкиПодписи", ЭтотОбъект);
	Если ПодписьЗагружена Тогда
		ПоказатьВопрос(
			ОписаниеОповещения,
			НСтр("ru = 'Будут выгружены файлы машиночитаемой доверенности и подписи доверителя. Продолжить?';
				|en = 'Будут выгружены файлы машиночитаемой доверенности и подписи доверителя. Продолжить?'"),
			РежимДиалогаВопрос.ДаНет,,
			КодВозвратаДиалога.Да);
		
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения, КодВозвратаДиалога.Да);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПодтвержденияПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПодписатьПослеПодписи", ЭтотОбъект);
	ДокументооборотСКОКлиент.ПодписатьМЧДЦБ(ОписаниеОповещения,, ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодписатьПослеПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат.Выполнено Тогда
		Прочитать();
		ПодписьЗагружена = Истина;
		УправлениеФормой(ЭтаФорма);
		ПрорисоватьСтатус(ЭтаФорма);
		
		СохранитьСтатусОтправкиУведомления();
		
		Оповестить("Запись_МашиночитаемыеДоверенностиЦБ",, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьПослеПодтвержденияВыгрузкиПодписи(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыВозврата = Новый Структура;
	ПараметрыВозврата.Вставить("ВозвращатьАдресВоВременномХранилище", 	Истина);
	ПараметрыВозврата.Вставить("ВозвращатьИмяФайлаСРасширением", 		Истина);
	ПараметрыВозврата.Вставить("ВозвращатьПриложеннуюПодпись", 			Истина);
	РезультатВыгрузки = ДокументооборотСКОВызовСервера.ВыгрузитьМЧДЦБ(
		Объект.Ссылка,
		Ложь,
		ПараметрыВозврата);
	
	Если ЗначениеЗаполнено(РезультатВыгрузки) Тогда
		ОперацииСФайламиЭДКОКлиент.СохранитьФайлы(РезультатВыгрузки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Загрузить(Команда)
	
	Если НЕ ДокументооборотСКОКлиент.ПроверитьИЗаписать(ЭтотОбъект) Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьПослеЗагрузки", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиЦБ.Форма.ФормаЗагрузкиИзФайла",
		Новый Структура("СсылкаНаДоверенность", Объект.Ссылка),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьПанельИнформацииНажатие(Элемент)
	
	ПараметрыПриложения.Вставить("МашиночитаемыеДоверенностиЦБ.ЗакрытьПанельИнформации", Истина);
	Элементы.ПанельИнформации.Видимость = Ложь;
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтаФорма, "ЦБ");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтаФорма, "ЦБ");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтаФорма, "ЦБ");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтаФорма, "ЦБ");
	
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтаФорма, "ЦБ");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтаФорма);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ЦБ"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже зарегистрировано?';
													|en = 'Вы уверены, что уведомление уже зарегистрировано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура Инициализация()
	
	Если ТипЗнч(Объект.Доверитель) <> Тип("Строка") Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Организации"));
		Элементы.Доверитель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	
	Если ТипЗнч(Объект.ЛицоБезДовФЛ) <> Тип("Строка") Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
		Элементы.ЛицоБезДовФЛ.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	
	Если ТипЗнч(Объект.Представитель) <> Тип("Строка") Тогда
		МассивТипов = Новый Массив;
		МассивТипов.Добавить(Тип("СправочникСсылка.Контрагенты"));
		МассивТипов.Добавить(Тип("СправочникСсылка.ФизическиеЛица"));
		Элементы.Представитель.ОграничениеТипа = Новый ОписаниеТипов(МассивТипов);
	КонецЕсли;
	
	Доверитель_ЮридическоеЛицо = НЕ ЗначениеЗаполнено(Объект.Доверитель)
		ИЛИ ДокументооборотСКОВызовСервера.ЭтоЮридическоеЛицо(Объект.Доверитель);
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ));
	ПредставительФЛ_ФИО = ?(СтрокиФИО.Количество() <> 0,
		ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(СтрокиФИО[0]), "");
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		Перечисления.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ));
	ПредставительФЛ_Удостоверение = ?(СтрокиУдостоверений.Количество() <> 0,
		ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеУдостоверение(СтрокиУдостоверений[0]), "");
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И ЗначениеЗаполнено(Объект.ИмяФайлаВыгрузки) Тогда
		РеквизитыОбъекта = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект.Ссылка, "ФайлВырузки, ЭлектроннаяПодпись");
		ПодписьЗагружена = (РеквизитыОбъекта.ФайлВырузки.Получить() <> Неопределено
			И РеквизитыОбъекта.ЭлектроннаяПодпись.Получить() <> Неопределено);
	Иначе
		ПодписьЗагружена = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПрорисоватьСтатус(Форма)
	
	ПараметрыПрорисовкиПанелиОтправки = ДокументооборотСКОВызовСервера.ПараметрыПрорисовкиПанелиОтправки(
		Форма.Объект.Ссылка,
		Форма.Объект.Организация,
		"ЦБ");
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ПрименитьПараметрыПрорисовкиПанелиОтправки(
		Форма,
		ПараметрыПрорисовкиПанелиОтправки);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Форма.Элементы.ГруппаЛицоБезДоверенностиФЛ.Видимость = Форма.Доверитель_ЮридическоеЛицо
		И НЕ Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация;
	
	Если Форма.Объект.ПолномочияПредставителя.Количество() = 0
		ИЛИ Форма.Объект.ПолномочияПредставителя[0].ПризнакПолныеПолномочия Тогда
		Форма.Элементы.ДекорацияПолномочияПредставителя.Заголовок = НСтр("ru = 'Все';
																		|en = 'Все'");
	Иначе
		ПредставленияВидов = "";
		Для ВидПолномочия = 1 По ДокументооборотСКОКлиентСервер.КоличествоПолномочийМЧДЦБ() Цикл
			ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
			Если Форма.Объект.ПолномочияПредставителя[0]["Признак" + ПредставлениеВида] Тогда
				ПредставленияВидов = ПредставленияВидов + ?(ЗначениеЗаполнено(ПредставленияВидов), ", ", "")
					+ ДокументооборотСКОКлиентСервер.ОбозначениеПолномочияМЧДЦБПоКоду(ПредставлениеВида, Истина);
			КонецЕсли;
		КонецЦикла;
		Форма.Элементы.ДекорацияПолномочияПредставителя.Заголовок = ПредставленияВидов;
	КонецЕсли;
	
	Если Форма.ПодписьЗагружена И Форма.Элементы.Подписать.КнопкаПоУмолчанию Тогда
		Форма.Элементы.Подписать.КнопкаПоУмолчанию = Ложь;
	КонецЕсли;
	
	ТолькоПросмотрФормы = Форма.ПодписьЗагружена;
	
	Форма.Элементы.Загрузить.Видимость = НЕ ТолькоПросмотрФормы;
	
	Форма.Элементы.НомерДоверенности.ТолькоПросмотр 				= ТолькоПросмотрФормы;
	Форма.Элементы.ДатаВыдачи.ТолькоПросмотр 						= ТолькоПросмотрФормы;
	Форма.Элементы.ДатаОкончания.ТолькоПросмотр 					= ТолькоПросмотрФормы;
	Форма.Элементы.ЛицоБезДовФЛ.ТолькоПросмотр 						= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_ФИО.ТолькоПросмотр 				= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_Удостоверение.ТолькоПросмотр 	= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_ИНН.ТолькоПросмотр 				= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_СНИЛС.ТолькоПросмотр 			= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_Гражданство.ТолькоПросмотр 		= ТолькоПросмотрФормы;
	Форма.Элементы.ПредставительФЛ_Должность.ТолькоПросмотр 		= ТолькоПросмотрФормы;
	Форма.Элементы.НомерРодительскойДоверенности.ТолькоПросмотр 	= ТолькоПросмотрФормы;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПодставитьРеквизитыДоверителя(Форма)
	
	Если НЕ Форма.ПодписьЗагружена И ТипЗнч(Форма.Объект.Доверитель) = Тип("СправочникСсылка.Организации")
		И Форма.Объект.Доверитель <> ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка") Тогда
		
		Если НЕ Форма.ПодписьЗагружена Тогда
			Форма.Объект.Организация = Форма.Объект.Доверитель;
		КонецЕсли;
		
		СвойстваОрганизации = ДокументооборотСКОВызовСервера.ПолучитьСвойстваОрганизации(Форма.Объект.Доверитель);
		
		Форма.Доверитель_ЮридическоеЛицо = СвойстваОрганизации.ЭтоЮридическоеЛицо;
		Форма.Объект.ДоверительЮЛ_ИностраннаяОрганизация = НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация;
		
		Форма.Объект.ДоверительЮЛ_НаимОрг = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			?(НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация И ЗначениеЗаполнено(СвойстваОрганизации.НаимИОПол),
			СвойстваОрганизации.НаимИОПол, СвойстваОрганизации.НаимЮЛПол), "");
		Форма.Объект.ДоверительЮЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ИННЮЛ, "");
		Форма.Объект.ДоверительЮЛ_ОГРН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И СвойстваОрганизации.ЭтоРоссийскаяОрганизация, СвойстваОрганизации.ОГРН, "");
		Форма.Объект.ДоверительЮЛ_СтрРег = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация, СвойстваОрганизации.СтранаРегистрацииИностраннойОрганизации,
			ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
		Форма.Объект.ДоверительЮЛ_НаимРегОрг = "";
		Форма.Объект.ДоверительЮЛ_РегНомер = "";
		
		Если СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
			Если СвойстваОрганизации.ЭтоРоссийскаяОрганизация Тогда
				АдресСтруктурой = Новый Структура("Строка, XML, JSON, Представление, Значение",
					СвойстваОрганизации.АдрЮР, СвойстваОрганизации.АдрЮР_XML, СвойстваОрганизации.АдрЮР_JSON,
					СвойстваОрганизации.АдрЮР, СвойстваОрганизации.АдрЮР_XML);
			Иначе
				АдресСтруктурой = Новый Структура("Строка, XML, JSON, Представление, Значение",
					СвойстваОрганизации.АдрИО, СвойстваОрганизации.АдрИО_XML, СвойстваОрганизации.АдрИО_JSON,
					СвойстваОрганизации.АдрИО, СвойстваОрганизации.АдрИО_XML);
			КонецЕсли;
			ДокументооборотСКОВызовСервера.ПреобразоватьАдресВФорматXML(АдресСтруктурой,
				ПредопределенноеЗначение("Справочник.ВидыКонтактнойИнформации.ЮрАдресОрганизации"));
			Форма.Объект.ДоверительЮЛ_АдрXML = АдресСтруктурой.XML;
			Если ЗначениеЗаполнено(АдресСтруктурой.XML) Тогда
				Форма.Объект.ДоверительЮЛ_АдрРус = ДокументооборотСКОВызовСервера.ПредставлениеКонтактнойИнформации(
					АдресСтруктурой.XML);
			Иначе
				Форма.Объект.ДоверительЮЛ_АдрРус = АдресСтруктурой.Представление;
			КонецЕсли;
		Иначе
			Форма.Объект.ДоверительЮЛ_АдрXML = "";
			Форма.Объект.ДоверительЮЛ_АдрРус = "";
		КонецЕсли;
		Форма.Объект.ДоверительЮЛ_АдрЛат = "";
		
		СубъектДоверенности = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительРук"),
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ДоверительФЛ"));
		СтрокиФИО = Форма.Объект.ФИО.НайтиСтроки(Новый Структура("Владелец", СубъектДоверенности));
		КоличествоСтрокФИО = СтрокиФИО.Количество();
		Если КоличествоСтрокФИО = 0 Тогда
			СтрокаФИО = Форма.Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = СубъектДоверенности;
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			СвойстваОрганизации.ФамилияРук, СвойстваОрганизации.ФамилияИП);
		СтрокаФИО.Имя = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			СвойстваОрганизации.ИмяРук, СвойстваОрганизации.ИмяИП);
		СтрокаФИО.Отчество = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
			СвойстваОрганизации.ОтчествоРук, СвойстваОрганизации.ОтчествоИП);
		
		СтрокиУдостоверений = Форма.Объект.УдостоверенияЛичности.НайтиСтроки(
			Новый Структура("Владелец", СубъектДоверенности));
		КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
		Если КоличествоСтрокУдостоверений = 0 Тогда
			Если НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
				СтрокаУдостоверения = Форма.Объект.УдостоверенияЛичности.Добавить();
				СтрокаУдостоверения.Владелец = СубъектДоверенности;
			КонецЕсли;
		Иначе
			Если НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
				СтрокаУдостоверения = СтрокиУдостоверений[0];
			Иначе
				Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
					Форма.Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		Если НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо Тогда
			СтрокаУдостоверения.ВидДок = СвойстваОрганизации.ВидУдостоверения;
			СтрокаУдостоверения.СерДок = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
				СвойстваОрганизации.СерияУдЛичнРук, СвойстваОрганизации.СерияУдЛичн);
			СтрокаУдостоверения.НомДок = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
				СвойстваОрганизации.НомерУдЛичнРук, СвойстваОрганизации.НомерУдЛичн);
			СтрокаУдостоверения.ДатаДок = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
				СвойстваОрганизации.ДатаУдЛичнРук, СвойстваОрганизации.ДатаУдЛичн);
			СтрокаУдостоверения.ВыдДок = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
				СвойстваОрганизации.ОрганВыданУдЛичнРук, СвойстваОрганизации.ОрганВыданУдЛичн);
			СтрокаУдостоверения.КодВыдДок = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо,
				СвойстваОрганизации.КодПодрУдЛичнРук, СвойстваОрганизации.КодПодрУдЛичн);
		КонецЕсли;
		
		Форма.Объект.ДоверительФЛ_ИНН = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация, СвойстваОрганизации.ИННРук,
			?(НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ИННФЛ, ""));
		Форма.Объект.ДоверительФЛ_ОГРН = ?(НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.ОГРН, "");
		Форма.Объект.ДоверительФЛ_СНИЛС = ?(НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо, СвойстваОрганизации.СНИЛС, "");
		Форма.Объект.ДоверительФЛ_Гражданство = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И НЕ СвойстваОрганизации.ЭтоРоссийскаяОрганизация ИЛИ НЕ СвойстваОрганизации.ЭтоЮридическоеЛицо,
			СвойстваОрганизации.Гражданство, ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
		
		Форма.Объект.ЛицоБезДовФЛ = СвойстваОрганизации.Руководитель;
		Форма.Объект.ЛицоБезДовФЛ_СНИЛС = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И СвойстваОрганизации.ЭтоРоссийскаяОрганизация, СвойстваОрганизации.СНИЛС, "");
		Форма.Объект.ЛицоБезДовФЛ_Гражданство = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И СвойстваОрганизации.ЭтоРоссийскаяОрганизация,
			СвойстваОрганизации.Гражданство, ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка"));
		Форма.Объект.ЛицоБезДовФЛ_Должность = ?(СвойстваОрганизации.ЭтоЮридическоеЛицо
			И СвойстваОрганизации.ЭтоРоссийскаяОрганизация, СвойстваОрганизации.Должность, "");
		
		СтрокиФИО = Форма.Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
		КоличествоСтрокФИО = СтрокиФИО.Количество();
		СтрокиУдостоверений = Форма.Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
		КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
		
		Форма.Модифицированность = Истина;
		
		УправлениеФормой(Форма);
		
	Иначе
		Форма.Объект.Организация = ПредопределенноеЗначение("Справочник.Организации.ПустаяСсылка");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыДоверителя()
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Доверитель_ЮридическоеЛицо", Доверитель_ЮридическоеЛицо);
	СтруктураДанных.Вставить("ДоверительЮЛ_РоссийскаяОрганизация", НЕ Объект.ДоверительЮЛ_ИностраннаяОрганизация);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимОрг", Объект.ДоверительЮЛ_НаимОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_ИНН", Объект.ДоверительЮЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительЮЛ_ОГРН", Объект.ДоверительЮЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительЮЛ_СтрРег", Объект.ДоверительЮЛ_СтрРег);
	СтруктураДанных.Вставить("ДоверительЮЛ_НаимРегОрг", Объект.ДоверительЮЛ_НаимРегОрг);
	СтруктураДанных.Вставить("ДоверительЮЛ_РегНомер", Объект.ДоверительЮЛ_РегНомер);
	СтруктураДанных.Вставить("ДоверительЮЛ_Адр", ?(Доверитель_ЮридическоеЛицо
		И Объект.ДоверительЮЛ_ИностраннаяОрганизация И ЗначениеЗаполнено(Объект.ДоверительЮЛ_АдрЛат),
		Объект.ДоверительЮЛ_АдрЛат, Объект.ДоверительЮЛ_АдрРус));
	СтруктураДанных.Вставить("ДоверительЮЛ_АдрXML", Объект.ДоверительЮЛ_АдрXML);
	
	СтруктураДанных.Вставить("ДоверительФЛ_ИНН", Объект.ДоверительФЛ_ИНН);
	СтруктураДанных.Вставить("ДоверительФЛ_ОГРН", Объект.ДоверительФЛ_ОГРН);
	СтруктураДанных.Вставить("ДоверительФЛ_СНИЛС", Объект.ДоверительФЛ_СНИЛС);
	СтруктураДанных.Вставить("ДоверительФЛ_Гражданство", Объект.ДоверительФЛ_Гражданство);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыДоверителяПослеВвода", ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиЦБ.Форма.ФормаДоверителя",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыДоверителяПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(СтруктураДанных.ДоверительЮЛ_НаимОрг) И НЕ ЗначениеЗаполнено(Объект.Доверитель) Тогда
		Элементы.Доверитель.ОграничениеТипа = Новый ОписаниеТипов;
		Объект.Доверитель = СтруктураДанных.ДоверительЮЛ_НаимОрг;
	КонецЕсли;
	
	Объект.ДоверительЮЛ_ИностраннаяОрганизация = Доверитель_ЮридическоеЛицо
		И НЕ СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация;
	Объект.ДоверительЮЛ_НаимОрг = СтруктураДанных.ДоверительЮЛ_НаимОрг;
	Объект.ДоверительЮЛ_ИНН = ?(Доверитель_ЮридическоеЛицо, СтруктураДанных.ДоверительЮЛ_ИНН, "");
	Объект.ДоверительЮЛ_ОГРН = СтруктураДанных.ДоверительЮЛ_ОГРН;
	Объект.ДоверительЮЛ_СтрРег = СтруктураДанных.ДоверительЮЛ_СтрРег;
	Объект.ДоверительЮЛ_НаимРегОрг = СтруктураДанных.ДоверительЮЛ_НаимРегОрг;
	Объект.ДоверительЮЛ_РегНомер = СтруктураДанных.ДоверительЮЛ_РегНомер;
	Объект.ДоверительЮЛ_АдрЛат = ?(СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация,
		"", СтруктураДанных.ДоверительЮЛ_Адр);
	Объект.ДоверительЮЛ_АдрРус = ?(СтруктураДанных.ДоверительЮЛ_РоссийскаяОрганизация,
		СтруктураДанных.ДоверительЮЛ_Адр, "");
	Объект.ДоверительЮЛ_АдрXML = СтруктураДанных.ДоверительЮЛ_АдрXML;
	
	Объект.ДоверительФЛ_ИНН 			= СтруктураДанных.ДоверительФЛ_ИНН;
	Объект.ДоверительФЛ_ОГРН 			= СтруктураДанных.ДоверительФЛ_ОГРН;
	Объект.ДоверительФЛ_СНИЛС 			= СтруктураДанных.ДоверительФЛ_СНИЛС;
	Объект.ДоверительФЛ_Гражданство 	= СтруктураДанных.ДоверительФЛ_Гражданство;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодставитьРеквизитыЛицаБезДоверенностиФЛ()
	
	Если ТипЗнч(Объект.ЛицоБезДовФЛ) = Тип("СправочникСсылка.Контрагенты")
		И Объект.ЛицоБезДовФЛ <> ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
		
		СвойстваКонтрагента = ДокументооборотСКОВызовСервера.ПолучитьСвойстваКонтрагента(Объект.ЛицоБезДовФЛ);
		
		Если СвойстваКонтрагента.ЭтоЮридическоеЛицо = Истина Тогда
			Объект.ЛицоБезДовФЛ = ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка");
		КонецЕсли;
		
		Объект.ЛицоБезДовФЛ_СНИЛС 			= "";
		Объект.ЛицоБезДовФЛ_Гражданство 	= ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
		Объект.ЛицоБезДовФЛ_Должность 		= "";
		
		Модифицированность = Истина;
		
		УправлениеФормой(ЭтаФорма);
		
	ИначеЕсли ТипЗнч(Объект.ЛицоБезДовФЛ) = Тип("СправочникСсылка.ФизическиеЛица")
		И Объект.ЛицоБезДовФЛ <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваФизическогоЛица = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Объект.ЛицоБезДовФЛ);
		
		Объект.ЛицоБезДовФЛ_СНИЛС 			= СвойстваФизическогоЛица.СНИЛС;
		Объект.ЛицоБезДовФЛ_Гражданство 	= СвойстваФизическогоЛица.Гражданство;
		Объект.ЛицоБезДовФЛ_Должность 		= СвойстваФизическогоЛица.Должность;
		
		Модифицированность = Истина;
		
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыЛицаБезДоверенностиФЛ()
	
	Если НЕ Доверитель_ЮридическоеЛицо ИЛИ Объект.ДоверительЮЛ_ИностраннаяОрганизация Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_СНИЛС", Объект.ЛицоБезДовФЛ_СНИЛС);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Гражданство", Объект.ЛицоБезДовФЛ_Гражданство);
	СтруктураДанных.Вставить("ЛицоБезДовФЛ_Должность", Объект.ЛицоБезДовФЛ_Должность);
	
	СтруктураДанных.Вставить("ТолькоПросмотрФормы", ПодписьЗагружена);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиРеквизитыЛицаБезДоверенностиФЛПослеВвода",
		ЭтотОбъект);
	ОткрытьФорму(
		"Справочник.МашиночитаемыеДоверенностиЦБ.Форма.ФормаЛицаБезДоверенностиФЛ",
		Новый Структура("СтруктураДанных", СтруктураДанных),
		ЭтаФорма,,,,
		ОписаниеОповещения,
		РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиРеквизитыЛицаБезДоверенностиФЛПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Объект.ЛицоБезДовФЛ) Тогда
		Элементы.ЛицоБезДовФЛ.ОграничениеТипа = Новый ОписаниеТипов;
		Объект.ЛицоБезДовФЛ = "";
	КонецЕсли;
	
	Объект.ЛицоБезДовФЛ_СНИЛС = СтруктураДанных.ЛицоБезДовФЛ_СНИЛС;
	Объект.ЛицоБезДовФЛ_Гражданство = СтруктураДанных.ЛицоБезДовФЛ_Гражданство;
	Объект.ЛицоБезДовФЛ_Должность = СтруктураДанных.ЛицоБезДовФЛ_Должность;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПодставитьРеквизитыПредставителя()
	
	Если НЕ ПодписьЗагружена И ТипЗнч(Объект.Представитель) = Тип("СправочникСсылка.Контрагенты")
		И Объект.Представитель <> ПредопределенноеЗначение("Справочник.Контрагенты.ПустаяСсылка") Тогда
		
		СвойстваКонтрагента = ДокументооборотСКОВызовСервера.ПолучитьСвойстваКонтрагента(Объект.Представитель);
		
		Если СвойстваКонтрагента.ЭтоЮридическоеЛицо = Ложь Тогда
			СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
				ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
			КоличествоСтрокФИО = СтрокиФИО.Количество();
			Если КоличествоСтрокФИО = 0 Тогда
				СтрокаФИО = Объект.ФИО.Добавить();
				СтрокаФИО.Владелец =
					ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ");
			Иначе
				СтрокаФИО = СтрокиФИО[0];
			КонецЕсли;
			СтрокаФИО.Фамилия 	= СвойстваКонтрагента.Фамилия;
			СтрокаФИО.Имя 		= СвойстваКонтрагента.Имя;
			СтрокаФИО.Отчество 	= СвойстваКонтрагента.Отчество;
			
			ПредставительФЛ_ФИО = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(СтрокаФИО);
			
			СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
				ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
			КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
			Для НомерСКонца = 1 По КоличествоСтрокУдостоверений Цикл
				Объект.УдостоверенияЛичности.Удалить(СтрокиУдостоверений[КоличествоСтрокУдостоверений - НомерСКонца]);
			КонецЦикла;
			
			ПредставительФЛ_Удостоверение = "";
			
			Объект.ПредставительФЛ_ИНН = СвойстваКонтрагента.ИНН;
			Объект.ПредставительФЛ_СНИЛС = "";
			Объект.ПредставительФЛ_Гражданство = ПредопределенноеЗначение("Справочник.СтраныМира.ПустаяСсылка");
			Объект.ПредставительФЛ_Должность = "";
			
			Модифицированность = Истина;
			
			УправлениеФормой(ЭтаФорма);
			
		КонецЕсли;
		
	ИначеЕсли НЕ ПодписьЗагружена И ТипЗнч(Объект.Представитель) = Тип("СправочникСсылка.ФизическиеЛица")
		И Объект.Представитель <> ПредопределенноеЗначение("Справочник.ФизическиеЛица.ПустаяСсылка") Тогда
		
		СвойстваФизическогоЛица = ДокументооборотСКОВызовСервера.ПолучитьСвойстваФизическогоЛица(Объект.Представитель);
		
		СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
		КоличествоСтрокФИО = СтрокиФИО.Количество();
		Если КоличествоСтрокФИО = 0 Тогда
			СтрокаФИО = Объект.ФИО.Добавить();
			СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ");
		Иначе
			СтрокаФИО = СтрокиФИО[0];
		КонецЕсли;
		СтрокаФИО.Фамилия 	= СвойстваФизическогоЛица.ФИО.Фамилия;
		СтрокаФИО.Имя 		= СвойстваФизическогоЛица.ФИО.Имя;
		СтрокаФИО.Отчество 	= СвойстваФизическогоЛица.ФИО.Отчество;
		
		ПредставительФЛ_ФИО = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(СтрокаФИО);
		
		СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
		КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
		Если КоличествоСтрокУдостоверений = 0 Тогда
			СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
			СтрокаУдостоверения.Владелец =
				ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ");
		Иначе
			СтрокаУдостоверения = СтрокиУдостоверений[0];
		КонецЕсли;
		СтрокаУдостоверения.ВидДок 		= СвойстваФизическогоЛица.ВидДокумента;
		СтрокаУдостоверения.СерДок 		= СвойстваФизическогоЛица.Серия;
		СтрокаУдостоверения.НомДок 		= СвойстваФизическогоЛица.Номер;
		СтрокаУдостоверения.ДатаДок 	= СвойстваФизическогоЛица.ДатаВыдачи;
		СтрокаУдостоверения.ВыдДок 		= СвойстваФизическогоЛица.КемВыдан;
		СтрокаУдостоверения.КодВыдДок 	= СвойстваФизическогоЛица.КодПодразделения;
		
		ПредставительФЛ_Удостоверение =
			ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);
		
		Объект.ПредставительФЛ_ИНН 			= СвойстваФизическогоЛица.ИНН;
		Объект.ПредставительФЛ_СНИЛС 		= СвойстваФизическогоЛица.СНИЛС;
		Объект.ПредставительФЛ_Гражданство 	= СвойстваФизическогоЛица.Гражданство;
		Объект.ПредставительФЛ_Должность 	= СвойстваФизическогоЛица.Должность;
		
		Модифицированность = Истина;
		
		УправлениеФормой(ЭтаФорма);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииПослеПолученияКонтекстаЭДО(Результат, ДополнительныеПараметры) Экспорт
	
	КонтекстЭДОКлиент = Результат.КонтекстЭДО;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_ФИОНачалоВыбораПослеВвода(РезультатРедактирования, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатРедактирования) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиФИО = Объект.ФИО.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	КоличествоСтрокФИО = СтрокиФИО.Количество();
	Если КоличествоСтрокФИО = 0 Тогда
		СтрокаФИО = Объект.ФИО.Добавить();
		СтрокаФИО.Владелец = ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ");
	Иначе
		СтрокаФИО = СтрокиФИО[0];
	КонецЕсли;
	СтрокаФИО.Фамилия 	= РезультатРедактирования.Фамилия;
	СтрокаФИО.Имя 		= РезультатРедактирования.Имя;
	СтрокаФИО.Отчество 	= РезультатРедактирования.Отчество;
	
	ПредставительФЛ_ФИО = ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеФИО(СтрокаФИО);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПредставительФЛ_УдостоверениеНачалоВыбораПослеВвода(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если НЕ ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтрокиУдостоверений = Объект.УдостоверенияЛичности.НайтиСтроки(Новый Структура("Владелец",
		ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ")));
	
	КоличествоСтрокУдостоверений = СтрокиУдостоверений.Количество();
	Если КоличествоСтрокУдостоверений = 0 Тогда
		СтрокаУдостоверения = Объект.УдостоверенияЛичности.Добавить();
		СтрокаУдостоверения.Владелец =
			ПредопределенноеЗначение("Перечисление.СубъектыДоверенностиНалогоплательщика.ПредставительФЛ");
	Иначе
		СтрокаУдостоверения = СтрокиУдостоверений[0];
	КонецЕсли;
	СтрокаУдостоверения.ВидДок 		= РезультатВыбора.ДокументВид;
	СтрокаУдостоверения.СерДок 		= РезультатВыбора.ДокументСерия;
	СтрокаУдостоверения.НомДок 		= РезультатВыбора.ДокументНомер;
	СтрокаУдостоверения.ДатаДок 	= РезультатВыбора.ДокументДатаВыдачи;
	СтрокаУдостоверения.ВыдДок 		= РезультатВыбора.ДокументКемВыдан;
	СтрокаУдостоверения.КодВыдДок 	= РезультатВыбора.ДокументКодПодразделения;
	
	ПредставительФЛ_Удостоверение =
		ДокументооборотСКОКлиентСервер.ПолучитьПредставлениеУдостоверение(СтрокаУдостоверения);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ДекорацияПолномочияПредставителяНажатиеПослеВвода(
		СтруктураДанных,
		ДополнительныеПараметры) Экспорт
	
	Если СтруктураДанных = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Объект.ПолномочияПредставителя.Количество() = 0 Тогда
		ПолномочиеПредставителя = Объект.ПолномочияПредставителя.Добавить();
	Иначе
		ПолномочиеПредставителя = Объект.ПолномочияПредставителя[0];
	КонецЕсли;
	
	ПолномочиеПредставителя.ПризнакПолныеПолномочия = СтруктураДанных.ПризнакПолныеПолномочия;
	Для ВидПолномочия = 1 По ДокументооборотСКОКлиентСервер.КоличествоПолномочийМЧДЦБ() Цикл
		ПредставлениеВида = Формат(ВидПолномочия, "ЧЦ=2; ЧВН=");
		ПолномочиеПредставителя["Признак" + ПредставлениеВида] = СтруктураДанных["Признак" + ПредставлениеВида];
	КонецЦикла;
	
	Модифицированность = Истина;
	
	УправлениеФормой(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПослеЗагрузки(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		Прочитать();
		Инициализация();
		УправлениеФормой(ЭтаФорма);
		ПрорисоватьСтатус(ЭтаФорма);
		
		СохранитьСтатусОтправкиУведомления();
		
		Оповестить("Запись_МашиночитаемыеДоверенностиЦБ",, Объект.Ссылка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КонтекстЭДОСервер()
	
	Возврат ДокументооборотСКО.ПолучитьОбработкуЭДО();
	
КонецФункции

&НаСервере
Процедура СохранитьСтатусОтправкиУведомления()
	
	РегламентированнаяОтчетность.СохранитьСтатусОтправкиУведомления(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти
