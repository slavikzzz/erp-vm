#Область ОписаниеПеременных

&НаКлиенте
Перем ТекущиеЗначенияРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	НастроитьФормуПоПараметрамФормы();
	
	НастроитьЗависимыеЭлементыФормыНаСервере();

	ОбъектыЭксплуатацииЛокализация.ПриСозданииНаСервере_ФормаВыбора2_4(ЭтотОбъект);
	
	ВерсионированиеОбъектов.ПриСозданииНаСервере(ЭтотОбъект);
	
	// ИнтеграцияС1СДокументооборотом
	ИнтеграцияС1СДокументооборотБазоваяФункциональность.ПриСозданииНаСервере(ЭтотОбъект);
	// Конец ИнтеграцияС1СДокументооборотом
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтборСтатусПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Статус", ОтборСтатус,,, ЗначениеЗаполнено(ОтборСтатус));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборСостояниеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Список, "Состояние", ОтборСостояние);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОрганизацияПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Организация", ОтборОрганизация,,, ЗначениеЗаполнено(ОтборОрганизация));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "Подразделение", ОтборПодразделение,,, ЗначениеЗаполнено(ОтборПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборЭксплуатирующееПодразделениеПриИзменении(Элемент)

	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ЭксплуатирующееПодразделение", ОтборЭксплуатирующееПодразделение,,, ЗначениеЗаполнено(ОтборЭксплуатирующееПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборРемонтирующееПодразделениеПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "РемонтирующееПодразделение", ОтборРемонтирующееПодразделение,,, ЗначениеЗаполнено(ОтборРемонтирующееПодразделение));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборМОЛПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "МОЛ", ОтборМОЛ,,, ЗначениеЗаполнено(ОтборМОЛ));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборАмортизационнаяГруппаПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "АмортизационнаяГруппа", ОтборАмортизационнаяГруппа,,, ЗначениеЗаполнено(ОтборАмортизационнаяГруппа));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборГруппаОСПриИзменении(Элемент)
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ГруппаОС", ОтборГруппаОС,,, ЗначениеЗаполнено(ОтборГруппаОС));
	
КонецПроцедуры

&НаКлиенте
Процедура ОтборОстаточныйСрокИспользованияПредставлениеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ОтборОстаточныйСрокИспользования",         ОтборОстаточныйСрокИспользования);
	ПараметрыОткрытия.Вставить("ОтборОстаточныйСрокИспользованияВидУчета", ОтборОстаточныйСрокИспользованияВидУчета);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораОтборОстаточныйСрокИспользованияЗавершение", ЭтотОбъект);
	
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.Форма.ОтборОстаточногоСрокаИспользования", ПараметрыОткрытия,
		ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ВыбратьЭлементы(Неопределено);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьЭлементы(Команда)
	
	ВыбранныеЭлементы = Новый Массив;
	
	Если ЗначениеЗаполнено(РеквизитыКоторыеДолжныСовпадать) Тогда
		ПроверитьРеквизиты = СтрРазделить(РеквизитыКоторыеДолжныСовпадать, ",");
	Иначе
		ПроверитьРеквизиты = Новый Массив;
	КонецЕсли;
	
	Для каждого ИдентификаторСтроки Из Элементы.Список.ВыделенныеСтроки Цикл
		
		ДанныеСтроки = Элементы.Список.ДанныеСтроки(ИдентификаторСтроки);
		
		Если ДанныеСтроки = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ЗначениеЗаполнено(ДанныеСтроки.Ссылка) 
			ИЛИ ДанныеСтроки.ПометкаУдаления
			ИЛИ ДанныеСтроки.ЭтоГруппа 
				И Элементы.Список.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.Группы
				И Элементы.Список.ВыборГруппИЭлементов <> ИспользованиеГруппИЭлементов.ГруппыИЭлементы Тогда
			Продолжить;
		КонецЕсли;
		
		Если ПроверитьРеквизиты.Количество() <> 0 Тогда
			
			Если ТекущиеЗначенияРеквизитов = Неопределено Тогда
				ТекущиеЗначенияРеквизитов = Новый Структура(РеквизитыКоторыеДолжныСовпадать);
				ЗаполнитьЗначенияСвойств(ТекущиеЗначенияРеквизитов, ДанныеСтроки);
			КонецЕсли; 
			
			Если НЕ ПроверитьВыбор(ДанныеСтроки, ПроверитьРеквизиты, ТекущиеЗначенияРеквизитов) Тогда
				Если НЕ ЭлементыВыбраны Тогда
					// Очистим текущие значения, чтобы при повторном выборе их не учитывать.
					ТекущиеЗначенияРеквизитов = Неопределено;
				КонецЕсли;
				Возврат;
			КонецЕсли;
			
		КонецЕсли;
		
		ВыбранныеЭлементы.Добавить(ДанныеСтроки.Ссылка);
		
	КонецЦикла;
	
	Если ВыбранныеЭлементы.Количество() <> 0 Тогда
		
		ЭлементыВыбраны = Истина;
		
		Если Элементы.Список.МножественныйВыбор Тогда
			ОповеститьОВыборе(ВыбранныеЭлементы);
		Иначе
			ОповеститьОВыборе(ВыбранныеЭлементы[0]);
		КонецЕсли; 
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьГрупповоеОС(Команда)
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("ТипОС", ПредопределенноеЗначение("Перечисление.ТипыОС.ГрупповоеОС"));

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ДанныеОтбора);
	
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьОСУзел(Команда)
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("ТипОС", ПредопределенноеЗначение("Перечисление.ТипыОС.Узел"));

	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ДанныеОтбора);
	
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

&НаКлиенте
Процедура СоздатьКомпонентАмортизации(Команда)
	
	ДанныеОтбора = Новый Структура;
	ДанныеОтбора.Вставить("ТипОС", ПредопределенноеЗначение("Перечисление.ТипыОС.КомпонентАмортизации"));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Основание", ДанныеОтбора);
	
	ОткрытьФорму("Справочник.ОбъектыЭксплуатации.ФормаОбъекта", ПараметрыФормы);

КонецПроцедуры

// ИнтеграцияС1СДокументооборотом
&НаКлиенте
Процедура Подключаемый_ВыполнитьКомандуИнтеграции(Команда)
	
	ИнтеграцияС1СДокументооборотБазоваяФункциональностьКлиент.ВыполнитьПодключаемуюКомандуИнтеграции(
		Команда,
		ЭтотОбъект,
		Элементы.Список);
	
КонецПроцедуры
// Конец ИнтеграцияС1СДокументооборотом

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьФормуПоПараметрамФормы()

	РеквизитыКоторыеДолжныСовпадать = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "РеквизитыКоторыеДолжныСовпадать", "");

	ЗаполнитьФиксированныеОтборы();
	УстановитьСвойстваДинамическогоСписка();
	
	Если Параметры.Свойство("Контекст") Тогда
		ДоступныеКонтексты = Новый Структура(Параметры.Контекст);
	Иначе
		ДоступныеКонтексты = Новый Структура("УУ,БУ");
	КонецЕсли;
	
	ОтборСписка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Отбор", Новый Структура);
		
	Если ОтборСписка.Свойство("ОтражатьВРеглУчете")
			И НЕ ОтборСписка.ОтражатьВРеглУчете
			И ДоступныеКонтексты.Свойство("БУ")
		ИЛИ НЕ ДоступныеКонтексты.Свойство("БУ") Тогда
			
		Элементы.СостояниеБУ.Видимость = Ложь;
		Элементы.ДатаПринятияКУчетуРегл.Видимость = Ложь;
	КонецЕсли; 
	
	Если ОтборСписка.Свойство("ОтражатьВУпрУчете")
			И НЕ ОтборСписка.ОтражатьВУпрУчете
			И ДоступныеКонтексты.Свойство("УУ")
		ИЛИ НЕ ДоступныеКонтексты.Свойство("УУ") Тогда
			
		Элементы.СостояниеУУ.Видимость = Ложь;
		Элементы.ДатаПринятияКУчетуУпр.Видимость = Ложь;
	КонецЕсли; 
	
	Если НЕ ДоступныеКонтексты.Свойство("БУ")
		И НЕ ДоступныеКонтексты.Свойство("УУ") Тогда
		
		Элементы.ОтборСостояние.Видимость = Ложь;
		Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		Элементы.ОтборОрганизация.Видимость = Ложь;
		Элементы.ОтборПодразделение.Видимость = Ложь;
		Элементы.ОтборМОЛ.Видимость = Ложь;
		Элементы.ОтборОстаточныйСрокИспользованияПредставление.Видимость = Ложь;
		Элементы.ОтборАмортизационнаяГруппа.Видимость = Ложь;
		Элементы.ОтборАмортизационнаяГруппаСписок.Видимость = Ложь;
		Элементы.ОтборГруппаОС.Видимость = Ложь;
		Элементы.ОтборГруппаОССписок.Видимость = Ложь;
		
		Элементы.Подразделение.Видимость = Ложь;
		Элементы.ГруппаОС.Видимость = Ложь;
		Элементы.АмортизационнаяГруппа.Видимость = Ложь;
		
	КонецЕсли; 
	
	Если НЕ ДоступныеКонтексты.Свойство("УР") Тогда
		
		Элементы.ОтборСтатус.Видимость = Ложь;
		Элементы.ОтборЭксплуатирующееПодразделение.Видимость = Ложь;
		Элементы.ОтборРемонтирующееПодразделение.Видимость = Ложь;
		
		Элементы.ЭксплуатирующееПодразделение.Видимость = Ложь;
		Элементы.РемонтирующееПодразделение.Видимость = Ложь;
		
	КонецЕсли; 
	
	Если Параметры.Свойство("ЗаголовокФормы") Тогда
		Заголовок = Параметры.ЗаголовокФормы;
	ИначеЕсли ДоступныеКонтексты.Свойство("УР") Тогда 
		Заголовок = НСтр("ru = 'Объекты эксплуатации';
						|en = 'Assets'");
	КонецЕсли; 
	
КонецПроцедуры
 
&НаСервере
Процедура ЗаполнитьФиксированныеОтборы()
	
	ОтборСписка = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Параметры, "Отбор", Новый Структура);

	ЗаполнитьБыстрыйОтбор("Статус", ОтборСписка, Элементы.ОтборСтатус.Имя);
	ЗаполнитьБыстрыйОтбор("ЭксплуатирующееПодразделение", ОтборСписка, Элементы.ОтборЭксплуатирующееПодразделение.Имя,, "ЭксплуатирующееПодразделение");
	ЗаполнитьБыстрыйОтбор("РемонтирующееПодразделение", ОтборСписка, Элементы.ОтборРемонтирующееПодразделение.Имя,, "РемонтирующееПодразделение");
	
	ЗаполнитьБыстрыйОтбор("АмортизационнаяГруппа", ОтборСписка, Элементы.ОтборАмортизационнаяГруппа.Имя, Элементы.ОтборАмортизационнаяГруппаСписок.Имя, "АмортизационнаяГруппа");
	ЗаполнитьБыстрыйОтбор("ГруппаОС", ОтборСписка, Элементы.ОтборГруппаОС.Имя, Элементы.ОтборГруппаОССписок.Имя, "ГруппаОС");
	
	Если ПравоДоступа("Чтение", Метаданные.РегистрыСведений.МестонахождениеОС) Тогда
		ЗаполнитьБыстрыйОтбор("Организация", ОтборСписка, Элементы.ОтборОрганизация.Имя);
		ЗаполнитьБыстрыйОтбор("Подразделение", ОтборСписка, Элементы.ОтборПодразделение.Имя, , "Подразделение");
		ЗаполнитьБыстрыйОтбор("МОЛ", ОтборСписка, Элементы.ОтборМОЛ.Имя);
	Иначе
		Элементы.ОтборОрганизация.Видимость = Ложь;
		Элементы.ОтборПодразделение.Видимость = Ложь;
		Элементы.ОтборМОЛ.Видимость = Ложь;
		Элементы.Подразделение.Видимость = Ложь;
	КонецЕсли; 
	
	Если ВнеоборотныеАктивыСлужебный.ЕстьПраваНаЧтениеСостоянияОС() Тогда
		
		ЗаполнитьБыстрыйОтбор("Состояние", ОтборСписка, Элементы.ОтборСостояние.Имя, Элементы.ОтборСостояниеСписок.Имя);
		
		ОтборНеПринятыхКУчету = ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияОС.НеПринятоКУчету) <> Неопределено
								ИЛИ ОтборСостояниеСписок.НайтиПоЗначению(Перечисления.СостоянияОС.СнятоСУчета) <> Неопределено
								ИЛИ ОтборСостояние = Перечисления.СостоянияОС.НеПринятоКУчету
								ИЛИ ОтборСостояние = Перечисления.СостоянияОС.СнятоСУчета;

		Если ОтборНеПринятыхКУчету Тогда
			Элементы.ОтборОрганизация.ТолькоПросмотр = Истина;
			Элементы.ОтборПодразделение.ТолькоПросмотр = Истина;
			Элементы.ОтборМОЛ.ТолькоПросмотр = Истина;
			Элементы.Подразделение.Видимость = Ложь;
		КонецЕсли;
		
		Если Элементы.ОтборСостояние.Видимость Тогда
			Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		КонецЕсли;
		
	Иначе
		Элементы.ОтборСостояние.Видимость = Ложь;
		Элементы.ОтборСостояниеСписок.Видимость = Ложь;
		Элементы.СостояниеБУ.Видимость = Ложь;
		Элементы.СостояниеУУ.Видимость = Ложь;
	КонецЕсли; 
	
	Если Элементы.ОтборГруппаОС.Видимость Тогда
		Элементы.ОтборГруппаОССписок.Видимость = Ложь;
	КонецЕсли;
	
	Если Элементы.ОтборАмортизационнаяГруппа.Видимость Тогда
		Элементы.ОтборАмортизационнаяГруппаСписок.Видимость = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьСвойстваДинамическогоСписка()

	Параметры.ИспользоватьОтборПоОстаточномуСПИ = Истина;
	
	ОписаниеЗапросаДляВыбора = Справочники.ОбъектыЭксплуатации.ОписаниеЗапросаДляВыбора(Параметры);
	
	СвойстваСписка = ОбщегоНазначения.СтруктураСвойствДинамическогоСписка();
	СвойстваСписка.ТекстЗапроса = ОписаниеЗапросаДляВыбора.ТекстЗапроса;
	ОбщегоНазначения.УстановитьСвойстваДинамическогоСписка(Элементы.Список, СвойстваСписка);
	
	Для каждого ОписаниеПараметра Из ОписаниеЗапросаДляВыбора.ПараметрыЗапроса Цикл
		Список.Параметры.УстановитьЗначениеПараметра(ОписаниеПараметра.Ключ, ОписаниеПараметра.Значение);
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьБыстрыйОтбор(ИмяОтбора, ОтборСписка, ИмяЭлементаОтбора, ИмяЭлементаСписка = Неопределено, ЭлементыСписка = Неопределено)

	// Заполняет быстрые отборы и скрывает колонки в списке
	
	ЗначениеОтбора = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОтборСписка, ИмяОтбора, Неопределено);
	
	ЭтоСписок = Ложь;
	
	Если ТипЗнч(ЗначениеОтбора) = Тип("ФиксированныйМассив") 
		ИЛИ ТипЗнч(ЗначениеОтбора) = Тип("Массив") Тогда
		
		Если ИмяОтбора = "Состояние"
			ИЛИ ИмяОтбора = "ГруппаОС"
			ИЛИ ИмяОтбора = "АмортизационнаяГруппа" Тогда
			
			Если ЗначениеОтбора.Количество() > 1 Тогда
				ЭтоСписок = Истина;
				Элементы[ИмяЭлементаОтбора].Видимость = Ложь;
				ЗначениеОтбора = ВнеоборотныеАктивыСлужебный.ФиксированныйМассивВСписок(ЗначениеОтбора);
			Иначе
				ЗначениеОтбора = ЗначениеОтбора.Получить(0);
				Элементы[ИмяЭлементаСписка].Видимость = Ложь;
			КонецЕсли;
		Иначе
			// Для других полей отображение в виде списка не предусмотрено.
			Элементы[ИмяЭлементаОтбора].Видимость = Ложь;
			Возврат;
		КонецЕсли; 
	КонецЕсли;
	
	Если ЭтоСписок Тогда
		ИмяЗаполняемогоЭлемента = ИмяЭлементаСписка;
	Иначе
		ИмяЗаполняемогоЭлемента = ИмяЭлементаОтбора;
	КонецЕсли;
	
	ЭтаФорма[ИмяЗаполняемогоЭлемента] = ЗначениеОтбора;
	Если ЗначениеЗаполнено(ЗначениеОтбора) Тогда
		Элементы[ИмяЗаполняемогоЭлемента].ТолькоПросмотр = Истина;
		Если ЭлементыСписка <> Неопределено Тогда
			Для каждого ИмяЭлемента Из СтрРазделить(ЭлементыСписка, ",") Цикл
				Элементы[ИмяЭлемента].Видимость = Ложь;
			КонецЦикла; 
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьВыбор(ДанныеСтроки, ПроверитьРеквизиты, ТекущиеЗначенияРеквизитов)

	ТекстПредупреждения = Неопределено;
	МестонахождениеНеСовпадает = Ложь;
	ПрочиеРеквизитыНеСовпадают = Ложь;
	
	Для каждого ИмяРеквизита Из ПроверитьРеквизиты Цикл
		
		Если ДанныеСтроки[ИмяРеквизита] <> ТекущиеЗначенияРеквизитов[ИмяРеквизита] 
			И (ЗначениеЗаполнено(ТекущиеЗначенияРеквизитов[ИмяРеквизита])
				ИЛИ ЗначениеЗаполнено(ДанныеСтроки[ИмяРеквизита])) Тогда
			
			Если ИмяРеквизита = "Организация"
				ИЛИ ИмяРеквизита = "Подразделение" 
				ИЛИ ИмяРеквизита = "МОЛ" Тогда
					
				МестонахождениеНеСовпадает = Истина;
			Иначе
				ПрочиеРеквизитыНеСовпадают = Истина;
			КонецЕсли;
			
		КонецЕсли; 
		
	КонецЦикла; 
	
	Если МестонахождениеНеСовпадает Тогда
		
		Если ПроверитьРеквизиты.Найти("МОЛ") <> Неопределено Тогда
			ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать основные средства, числящиеся в одной организации, подразделении и МОЛ';
										|en = 'Select fixed assets that are in the same company, business unit and financially liable person'");
		Иначе
			ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать основные средства, числящиеся в одной организации и подразделении';
										|en = 'Select fixed assets that are in the same company, business unit'");
		КонецЕсли;
		
	ИначеЕсли ПрочиеРеквизитыНеСовпадают Тогда
		ТекстПредупреждения = НСтр("ru = 'Необходимо выбрать однотипные основные средства';
									|en = 'You must select the same type of fixed assets'");
	КонецЕсли;

	Если ТекстПредупреждения <> Неопределено Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура НастроитьЗависимыеЭлементыФормыНаСервере(ИзмененныеРеквизиты = "")
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Если ОбновитьВсе Тогда
	
		ДоступенУчетЗаБалансом = Истина;
		Если НЕ ПолучитьФункциональнуюОпцию("РегламентированныйУчетВНА") Тогда
			Элементы.СостояниеУУ.Заголовок = НСтр("ru = 'Состояние';
													|en = 'State'");
			Элементы.СостояниеБУ.Видимость = Ложь;
			Элементы.ДатаПринятияКУчетуУпр.Заголовок = НСтр("ru = 'Принято к учету';
															|en = 'Recognized'");
			Элементы.ДатаПринятияКУчетуРегл.Видимость = Ложь;
			ДоступенУчетЗаБалансом = Ложь;
		КонецЕсли; 
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ОтборСостояние.СписокВыбора,
			ДоступенУчетЗаБалансом,
			Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету);
			
		Если НЕ ПравоДоступа("ИнтерактивноеДобавление", Метаданные.Справочники.ОбъектыЭксплуатации) Тогда
			Элементы.СписокСоздатьГрупповуюЕдиницуОС.Видимость = Ложь;
			Элементы.СписокСоздатьОСУзел.Видимость = Ложь;
			Элементы.СписокСоздатьКомпонентАмортизации.Видимость = Ложь;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораОтборОстаточныйСрокИспользованияЗавершение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПустаяСтрока(ОтборОстаточныйСрокИспользованияВидУчета)
		И ОтборОстаточныйСрокИспользованияВидУчета <> Результат.ОтборОстаточныйСрокИспользованияВидУчета Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, СтрШаблон("ОстаточныйСрокИспользования%1", ОтборОстаточныйСрокИспользованияВидУчета),
			0,,, Ложь);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Результат);
	
	ПредставлениеОтбора = "";
	
	Если Не ПустаяСтрока(ОтборОстаточныйСрокИспользованияВидУчета) Тогда
		ПредставлениеОтбора = СтрШаблон(НСтр("ru = 'Вида учета %1, ≤ %2 мес.';
											|en = 'Accounting kind %1, ≤ %2 mo.'"),
			ОтборОстаточныйСрокИспользованияВидУчета, ОтборОстаточныйСрокИспользования);
		
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Список, СтрШаблон("ОстаточныйСрокИспользования%1", ОтборОстаточныйСрокИспользованияВидУчета),
			ОтборОстаточныйСрокИспользования, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно,, Истина);
	КонецЕсли;
	
	ОтборОстаточныйСрокИспользованияПредставление = ПредставлениеОтбора;

КонецПроцедуры

#КонецОбласти
