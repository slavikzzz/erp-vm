#Область ОбработчикиСобытийФормы


&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// При открытии из справочника организации заполним из параметров открытия формы.
	Параметры.Отбор.Свойство("Владелец", Организация);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Элементы.Организация.ТолькоПросмотр = Истина;
	Иначе
		// Открыто из панели справочников ВНА
		ПриЧтенииСозданииНаСервере();
	КонецЕсли;

	УправлениеВидимостью();
	УстановитьУсловноеОформление();
	
КонецПроцедуры


&НаКлиенте
Процедура ПриОткрытии(Отказ)

	УстановитьОтборВСписке(Список, "Владелец", Организация);
	УстановитьОтборПоАрхиву();

КонецПроцедуры


&НаСервере
Процедура ПриЧтенииСозданииНаСервере()
	
	ИспользоватьНесколькоОрганизаций       = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	
	Если Не ИспользоватьНесколькоОрганизаций Тогда
		Если Не ЗначениеЗаполнено(Организация) Тогда
			Организация = ЗначениеНастроекПовтИсп.ПолучитьОрганизациюПоУмолчанию();
		КонецЕсли;
	Иначе
		Организация = ПолучитьПервуюОрганизацию();
	КонецЕсли;

КонецПроцедуры



#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы



&НаКлиенте
Процедура ОрганизацияПриИзменении(Элемент)
	
	УстановитьОтборВСписке(Список, "Владелец", Организация);
	
КонецПроцедуры


&НаКлиенте
Процедура ПоказыватьАрхивныеЗаписиПриИзменении(Элемент)
	
	УстановитьОтборПоАрхиву();
	
КонецПроцедуры



#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеВидимостью()
	
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций");
	Элементы.Организация.Видимость = ИспользоватьНесколькоОрганизаций;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьУсловноеОформление()
	
		ОформлениеСписка = Список.КомпоновщикНастроек.Настройки.УсловноеОформление;
		ОформлениеСписка.Элементы.Очистить();
		
		ОформлениеСтрокАрхива = ОформлениеСписка.Элементы.Добавить();
		
		ОтборСтрокАрхива = ОформлениеСтрокАрхива.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
		ОтборСтрокАрхива.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("Архив");
		ОтборСтрокАрхива.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
		ОтборСтрокАрхива.ПравоеЗначение = Истина;
		
		ОформлениеСтрокАрхива.Оформление.УстановитьЗначениеПараметра("ЦветТекста", WebЦвета.LightGray);
	
КонецПроцедуры


// Получить первую организацию.
//
// Возвращаемое значение:
// СправочникСсылка.Организации - Первая не помеченная на удаление организация
//
&НаСервере
Функция ПолучитьПервуюОрганизацию()

	// Получим первую не удаленную организацию
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1 РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ПометкаУдаления = ЛОЖЬ
	|	И Организации.Предопределенный = ЛОЖЬ
	|	И Организации.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыОрганизаций.Действует)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организации.Наименование";

	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();

	Пока Выборка.Следующий() Цикл
		Возврат Выборка.Организация;
	КонецЦикла;

	Возврат Справочники.Организации.ПустаяСсылка();
	
КонецФункции


&НаКлиенте
Процедура УстановитьОтборПоАрхиву()
	
	Если ПоказыватьАрхивныеЗаписи = Истина Тогда
		
		УдалитьОтборВСписке(Список, "Архив");
		
	Иначе
		
		УстановитьОтборВСписке(Список, "Архив", ПоказыватьАрхивныеЗаписи);
		
	КонецЕсли;

КонецПроцедуры


// Установить 1 отбор в списке.
//
// Параметры:
// Список - ДинамическийСписок
// ПолеОтбора - Строка
// ЗначениеОтбора - СправочникСсылка
&НаКлиенте
Процедура УстановитьОтборВСписке(Список, ПолеОтбора, ЗначениеОтбора)
	
	УдалитьОтборВСписке(Список, ПолеОтбора);

	ОтборСписка = Список.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборСписка.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеОтбора);;
	ОтборСписка.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборСписка.Использование = Истина;
	ОтборСписка.РежимОтображения = РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Авто;
	ОтборСписка.ПравоеЗначение = ЗначениеОтбора;

КонецПроцедуры


&НаКлиенте
Процедура УдалитьОтборВСписке(Список, ПолеОтбора)
	
	ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПолеОтбора);
	
	УдаляемыеОтборы = Новый Массив;

	Для Каждого ОтборСписка Из Список.Отбор.Элементы Цикл
		Если ОтборСписка.ЛевоеЗначение = ЛевоеЗначение Тогда
			УдаляемыеОтборы.Добавить(ОтборСписка);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого УдаляемыйОтбор Из УдаляемыеОтборы Цикл
		Список.Отбор.Элементы.Удалить(УдаляемыйОтбор);
	КонецЦикла;
	
КонецПроцедуры



#КонецОбласти
