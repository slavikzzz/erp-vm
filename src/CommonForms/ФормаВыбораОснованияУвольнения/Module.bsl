#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.ТипОснования) Тогда
		
		ТипКлассификатора = Параметры.ТипОснования.Типы()[0];
		МетаданныеОбъекта = Метаданные.НайтиПоТипу(ТипКлассификатора);
		ПолноеИмяКлассификатора = МетаданныеОбъекта.ПолноеИмя();
		
		Если МетаданныеОбъекта <> Метаданные.Справочники.ОснованияУвольнения Тогда
			
			Список.ТекстЗапроса = СтрЗаменить(Список.ТекстЗапроса,
				"ПОЛНОЕ СОЕДИНЕНИЕ Справочник.ОснованияУвольнения КАК ОснованияУвольнения",
				"ПОЛНОЕ СОЕДИНЕНИЕ " + ПолноеИмяКлассификатора + " КАК ОснованияУвольнения");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.Отбор.Свойство("ДокументОснование") Тогда
		
		Если ЗначениеЗаполнено(Параметры.Отбор.ДокументОснование) Тогда
			
			Если ТипЗнч(Параметры.Отбор.ДокументОснование) = Тип("ПеречислениеСсылка.НормативныеДокументыОснованийКадровыхПриказов")
				Или Параметры.Отбор.ДокументОснование.Количество() = 1 Тогда
				
				Элементы.Список.НачальноеОтображениеДерева = НачальноеОтображениеДерева.РаскрыватьВерхнийУровень;
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
				Список, "ДокументОснование", Параметры.Отбор.ДокументОснование, Истина)
			
		КонецЕсли;
		
		Параметры.Отбор.Удалить("ДокументОснование");
		
	КонецЕсли;
	
	УстановитьДоступностьКоманд();
	
	КадровыйУчет.ОснованияУвольненияПриСозданииНаСервереФормыСписка(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбора(ВыбранноеЗначение, ИсточникВыбора)
	
	Если ТипЗнч(ВыбранноеЗначение) = Тип("СправочникСсылка.ОснованияУвольненияПользовательские") Тогда
		ОповеститьОВыборе(ВыбранноеЗначение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_ОснованияУвольненияПользовательские" Тогда
		Элементы.Список.Обновить();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Создать(Команда)
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
	Если Элементы.Список.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СтрокаГруппировкиДинамическогоСписка")Тогда
		
		ЗначенияЗаполнения = Новый Структура;
		ЗначенияЗаполнения.Вставить(
			Элементы.Список.ТекущаяСтрока.ИмяГруппировки,
			Элементы.Список.ТекущаяСтрока.Ключ);
		
		ПараметрыОткрытия.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
		
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ОснованияУвольненияПользовательские.ФормаОбъекта", ПараметрыОткрытия,
		ЭтотОбъект, Истина, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура Изменить(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")Тогда
		
		СсылкаСписка = Элементы.Список.ТекущаяСтрока;
		Если ТипЗнч(СсылкаСписка) = Тип("СправочникСсылка.ОснованияУвольненияПользовательские") Тогда
			ИмяСправочника = "Справочник.ОснованияУвольненияПользовательские";
		Иначе
			ИмяСправочника = ПолноеИмяКлассификатора;
		КонецЕсли;
		
		ИмяФормыСправочника = ИмяСправочника + ".ФормаОбъекта";
		ПараметрыОткрытия = Новый Структура("Ключ", СсылкаСписка);
		
		ОткрытьФорму(ИмяФормыСправочника, ПараметрыОткрытия, ЭтотОбъект, Истина, , , ,
			РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Скопировать(Команда)
	
	Если Элементы.Список.ТекущаяСтрока <> Неопределено
		И ТипЗнч(Элементы.Список.ТекущаяСтрока) <> Тип("СтрокаГруппировкиДинамическогоСписка")Тогда
		
		СсылкаСписка = Элементы.Список.ТекущаяСтрока;
		ПараметрыОткрытия = Новый Структура;
		ПараметрыОткрытия.Вставить("РежимВыбора", Истина);
		Если ТипЗнч(СсылкаСписка) = Тип("СправочникСсылка.ОснованияУвольненияПользовательские") Тогда
			ПараметрыОткрытия.Вставить("ЗначениеКопирования", СсылкаСписка);
		Иначе
			ПараметрыОткрытия.Вставить("Основание", СсылкаСписка);
		КонецЕсли;
		
		ОткрытьФорму("Справочник.ОснованияУвольненияПользовательские.ФормаОбъекта", ПараметрыОткрытия,
			ЭтотОбъект, Истина, , , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПометитьНаУдаление(Команда)
	
	Если ТипЗнч(Элементы.Список.ТекущаяСтрока) = Тип("СправочникСсылка.ОснованияУвольненияПользовательские")Тогда
		
		Если Элементы.Список.ТекущиеДанные.ПометкаУдаления Тогда
			ТекстВопроса = НСтр("ru = 'Снять с ""%1"" пометку на удаление';
								|en = 'Clear the deletion mark from ""%1""'") + "?";
		Иначе
			ТекстВопроса = НСтр("ru = 'Пометить ""%1"" на удаление';
								|en = 'Mark ""%1"" for deletion.'") + "?";
		КонецЕсли;
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ТекстВопроса,
			Элементы.Список.ТекущаяСтрока);
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Ссылка", Элементы.Список.ТекущаяСтрока);
		ДополнительныеПараметры.Вставить("ПометкаУдаления", Не Элементы.Список.ТекущиеДанные.ПометкаУдаления);
		
		Оповещение = Новый ОписаниеОповещения("ПометитьНаУдалениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьНеИспользуемые(Команда)
	
	КадровыйУчетКлиент.ОснованияУвольненияПоказатьНеИспользуемые(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоДействующие(Команда)
	
	КадровыйУчетКлиент.ОснованияУвольненияТолькоДействующие(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПометитьНаУдалениеЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		УстановитьПометкуУдаления(
			ДополнительныеПараметры.Ссылка,
			ДополнительныеПараметры.ПометкаУдаления);
		
		Элементы.Список.Обновить();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьПометкуУдаления(Ссылка, ПометкаУдаления)
	
	ОбъектСправочника = Ссылка.ПолучитьОбъект();
	ОбъектСправочника.УстановитьПометкуУдаления(ПометкаУдаления);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьДоступностьКоманд()
	
	ДоступностьКоманд = ПравоДоступа("Добавление", Метаданные.Справочники.ОснованияУвольненияПользовательские);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СписокСоздать",
		"Доступность",
		ДоступностьКоманд);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СписокСкопировать",
		"Доступность",
		ДоступностьКоманд);
	
	ДоступностьКоманд = ПравоДоступа("ИнтерактивнаяПометкаУдаления", Метаданные.Справочники.ОснованияУвольненияПользовательские);
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"СписокПометитьНаУдаление",
		"Доступность",
		ДоступностьКоманд);
	
КонецПроцедуры

#КонецОбласти

