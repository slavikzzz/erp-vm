
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("ДатаПлатежа", ДатаПлатежа);
	
	ХозяйственнаяОперация = Неопределено;
	Параметры.Свойство("ХозяйственнаяОперация", ХозяйственнаяОперация);
	Параметры.Свойство("ТипНалога", ТипНалога);
	
	ОтборВедомостей = Новый Структура;
	Параметры.Свойство("ОтборВедомостей", ОтборВедомостей);
	
	Если Параметры.Свойство("ЗаявкаНаОплату") Тогда
		ОтборВедомостей.Вставить("МассивВедомостей", ПолучитьВедомостиПоЗаявкеНаОплату(Параметры.ЗаявкаНаОплату));
	КонецЕсли;
	
	ИсключатьОплаченные = Параметры.Свойство("ИсключатьОплаченные") И Параметры.ИсключатьОплаченные;
	
	ИсточникВыбора = Неопределено;
	Параметры.Свойство("Источник", ИсточникВыбора);
	
	УстановитьОтборВедомостей(ОтборВедомостей, ИсключатьОплаченные, ИсточникВыбора);
	
	Если ОтборВедомостей.Свойство("Организация") Тогда
		РегистрацияОрганизацииВНалоговомОргане = ЗарплатаКадры.РегистрацияВНалоговомОргане(ОтборВедомостей.Организация);
	КонецЕсли;
	
	ВедомостиДляПеречисленияЗарплаты = Ложь;
	ВедомостиДляПеречисленияНалога = Ложь;
	
	Если ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту
		ИЛИ ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыНаЛицевыеСчета Тогда
		
		ВедомостиДляПеречисленияЗарплаты = Истина;
		
		КодВидаДохода = Неопределено;
		Параметры.Свойство("КодВидаДохода", КодВидаДохода);
		Если КодВидаДохода = "2" Тогда
			ВидДохода = Перечисления.ВидыДоходовИсполнительногоПроизводства.КомпенсацииНеоблагаемые;
		ИначеЕсли КодВидаДохода = "3" Тогда
			ВидДохода = Перечисления.ВидыДоходовИсполнительногоПроизводства.КомпенсацииОблагаемые;
		Иначе
			ВидДохода = Перечисления.ВидыДоходовИсполнительногоПроизводства.ЗарплатаВознаграждения;
		КонецЕсли;
		
		Если ПлатежиВБюджетКлиентСервер.ДействуетУказание2019_5286У(ДатаПлатежа) Тогда
			УстановитьОтборВидаДохода();
		КонецЕсли;
		
	ИначеЕсли ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ПеречислениеВБюджет Тогда
		
		ВедомостиДляПеречисленияНалога = Истина;
		
		Заголовок = НСтр("ru = 'Перечисление налога по ведомостям';
						|en = 'Tax transfer by paysheets'");
		
		Если НЕ (ОтборВедомостей.Свойство("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане)
			И ЗначениеЗаполнено(РегистрацияВНалоговомОргане)) Тогда
			РегистрацияВНалоговомОргане = РегистрацияОрганизацииВНалоговомОргане;
		КонецЕсли;
		
		УстановитьОтборНалоговогоОргана();
		
	КонецЕсли;
	
	Элементы.ВидДохода.Видимость = ВедомостиДляПеречисленияЗарплаты
		И ПлатежиВБюджетКлиентСервер.ДействуетУказание2019_5286У(ДатаПлатежа);
	
	Элементы.ЗарплатныйПроект.Видимость =
		ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ВыплатаЗарплатыПоЗарплатномуПроекту;
	
	Элементы.РегистрацияВНалоговомОргане.Видимость       = ВедомостиДляПеречисленияНалога;
	Элементы.СписокРегистрацияВНалоговомОргане.Видимость = ВедомостиДляПеречисленияНалога;
	Элементы.СписокСумма.Видимость = Не ВедомостиДляПеречисленияНалога;
	Элементы.СписокСуммаНДФЛ.Видимость = ВедомостиДляПеречисленияНалога
		И ТипНалога <> Перечисления.ТипыНалогов.НДФЛСПревышения;
	Элементы.СписокСуммаНДФЛСПревышения.Видимость = ВедомостиДляПеречисленияНалога
		И ТипНалога = Перечисления.ТипыНалогов.НДФЛСПревышения;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ВидДоходаПриИзменении(Элемент)
	УстановитьОтборВидаДохода();
КонецПроцедуры

&НаКлиенте
Процедура РегистрацияВНалоговомОрганеПриИзменении(Элемент)
	УстановитьОтборНалоговогоОргана();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыборЗначения(Элемент, Значение, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено Тогда
		
		ЗначениеВыбора = Новый Структура;
		ЗначениеВыбора.Вставить("Ведомость", ТекущиеДанные.Ссылка);
		ЗначениеВыбора.Вставить("Получатель", ТекущиеДанные.Получатель);
		ЗначениеВыбора.Вставить("ПериодРегистрации", ТекущиеДанные.Месяц);
		
		Если ВедомостиДляПеречисленияНалога Тогда
			Если ТипНалога = ПредопределенноеЗначение("Перечисление.ТипыНалогов.НДФЛСПревышения") Тогда
				ЗначениеВыбора.Вставить("Сумма", ТекущиеДанные.СуммаНДФЛСПревышения);
			Иначе
				ЗначениеВыбора.Вставить("Сумма", ТекущиеДанные.СуммаНДФЛ);
			КонецЕсли;
		Иначе
			ЗначениеВыбора.Вставить("Сумма", ТекущиеДанные.Сумма);
		КонецЕсли;
		
		Если ТекущиеДанные.ВидДохода = ПредопределенноеЗначение("Перечисление.ВидыДоходовИсполнительногоПроизводства.ЗарплатаВознаграждения") Тогда
			ЗначениеВыбора.Вставить("КодВидаДохода", "1");
		ИначеЕсли ТекущиеДанные.ВидДохода = ПредопределенноеЗначение("Перечисление.ВидыДоходовИсполнительногоПроизводства.КомпенсацииНеоблагаемые") Тогда
			ЗначениеВыбора.Вставить("КодВидаДохода", "2");
		ИначеЕсли ТекущиеДанные.ВидДохода = ПредопределенноеЗначение("Перечисление.ВидыДоходовИсполнительногоПроизводства.КомпенсацииОблагаемые") Тогда
			ЗначениеВыбора.Вставить("КодВидаДохода", "3");
		Иначе
			ЗначениеВыбора.Вставить("КодВидаДохода", "");
		КонецЕсли;
		
		ОповеститьОВыборе(ЗначениеВыбора);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьОтборВедомостей(ПараметрыОтбора, ИсключатьОплаченные, Источник)
	
	УстановитьПривилегированныйРежим(Истина);
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ИнтеграцияБЗК.ПодготовитьДанныеОСостоянииВедомостей(МенеджерВременныхТаблиц, ПараметрыОтбора);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("ВключаяОплаченные", НЕ ИсключатьОплаченные);
	Запрос.УстановитьПараметр("ВключаяДепонированные", ТипЗнч(Источник) = Тип("ДокументСсылка.РасходныйКассовыйОрдер"));
	Запрос.УстановитьПараметр("ИсключатьВключенныеВЗаявки", ТипЗнч(Источник) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостояниеВедомостей.Ведомость КАК Ведомость
	|ИЗ
	|	ВТСостояниеВыплатыПоВедомостям КАК СостояниеВедомостей
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявкиВедомостей КАК ЗаявкиВедомостей
	|	ПО СостояниеВедомостей.Ведомость = ЗаявкиВедомостей.Ведомость
	|		И ЗаявкиВедомостей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ВыплатаЗарплаты)
	|ГДЕ
	|	(&ВключаяОплаченные
	|		ИЛИ СостояниеВедомостей.СуммаОплаты = 0
	|		ИЛИ (&ВключаяДепонированные И СостояниеВедомостей.Депонирована))
	|	И (НЕ &ИсключатьВключенныеВЗаявки
	|		ИЛИ ЗаявкиВедомостей.Ссылка ЕСТЬ NULL)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СостояниеВедомостей.Ведомость
	|ИЗ
	|	ВТСостояниеНалоговПоВедомостям КАК СостояниеВедомостей
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаявкиВедомостей КАК ЗаявкиВедомостей
	|	ПО ЗаявкиВедомостей.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
	|		И СостояниеВедомостей.Ведомость = ЗаявкиВедомостей.Ведомость
	|		И СостояниеВедомостей.ТипНалога = ЗаявкиВедомостей.ТипНалога
	|ГДЕ
	|	(&ВключаяОплаченные
	|		ИЛИ СостояниеВедомостей.СуммаОплаты = 0)
	|	И (НЕ &ИсключатьВключенныеВЗаявки
	|		ИЛИ ЗаявкиВедомостей.Ссылка ЕСТЬ NULL)";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"Ссылка",
		Результат.ВыгрузитьКолонку("Ведомость"),
		ВидСравненияКомпоновкиДанных.ВСписке,,
		Истина);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборВидаДохода()
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список, "ВидДохода", ВидДохода, ВидСравненияКомпоновкиДанных.Равно,, ЗначениеЗаполнено(ВидДохода));
	
КонецПроцедуры

&НаСервере
Функция ПолучитьВедомостиПоЗаявкеНаОплату(Заявка)

	Запрос = Новый Запрос(
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	РасшифровкаЗаявки.Ведомость КАК Ведомость
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаЗаявки
	|ГДЕ
	|	РасшифровкаЗаявки.Ссылка = &Заявка");
	
	Запрос.УстановитьПараметр("Заявка", Заявка);
	
	Результат = Запрос.Выполнить().Выгрузить();
	Возврат Результат.ВыгрузитьКолонку("Ведомость");

КонецФункции

&НаСервере
Процедура УстановитьОтборНалоговогоОргана()
	
	МассивРегистраций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(РегистрацияВНалоговомОргане);
	Если ЗначениеЗаполнено(РегистрацияВНалоговомОргане) И РегистрацияВНалоговомОргане = РегистрацияОрганизацииВНалоговомОргане Тогда
		МассивРегистраций.Добавить(Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка());
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		Список,
		"РегистрацияВНалоговомОргане",
		МассивРегистраций,
		ВидСравненияКомпоновкиДанных.ВСписке,,
		ЗначениеЗаполнено(РегистрацияВНалоговомОргане));
	
КонецПроцедуры

#КонецОбласти