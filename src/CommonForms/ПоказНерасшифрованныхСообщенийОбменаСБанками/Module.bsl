&НаКлиенте
Перем МассивТранзакцийКлиент Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Сервис = Перечисления.СервисыОбменаСБанками.ФинансоваяОтчетность;
	
	Если Параметры.Транзакции = Неопределено Тогда 
		Отказ = Истина;
		Возврат;
	Иначе
		МассивТранзакций = Параметры.Транзакции;
	КонецЕсли;
	
	Если ТипЗнч(МассивТранзакций) <> Тип("Массив") И МассивТранзакций.Количество() = 0 Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ЗаполнитьРеквизитыИНастройки(МассивТранзакций, Отказ);
	
	ОпределитьКоличествоСообщенийКРасшифровке();
	
	Если Отказ Тогда 
		Возврат;
	КонецЕсли;
	
	ПродолжитьАвтообмен = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если Параметр = Неопределено ИЛИ ТипЗнч(Параметр) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(Параметр, Отказ);
	Если Отказ Тогда 
		Если Открыта() Тогда
			Закрыть();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаРасшифровать(Команда)
	
	ПродолжитьАвтообмен = Истина;
	ЗакрытьФормуИНачатьРасшифровку();
	
КонецПроцедуры

&НаКлиенте
Процедура БольшеНеПоказывать(Команда)
	
	ПродолжитьАвтообмен = Ложь;
	Закрыть(ПродолжитьАвтообмен);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьПозже(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРеквизитыИНастройки(Транзакции, Отказ)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТранзакцияОбменаСБанками.Документооборот.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТранзакцияОбменаСБанками.Ссылка) КАК КоличествоСообщений
	|ИЗ
	|	Справочник.ТранзакцииОбменаСБанками КАК ТранзакцияОбменаСБанками
	|ГДЕ
	|	ТранзакцияОбменаСБанками.Ссылка В(&Ссылка)
	|	И ТранзакцияОбменаСБанками.Документооборот.Сервис = &Сервис
	|
	|СГРУППИРОВАТЬ ПО
	|	ТранзакцияОбменаСБанками.Документооборот.Организация";
	
	Запрос.УстановитьПараметр("Ссылка", Транзакции);
	Запрос.УстановитьПараметр("Сервис", Сервис);
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Если Результат.Количество() = 0 Тогда 
		Отказ = Истина;
		Возврат;
	КонецЕсли;
	
	ОрганизацииИзТранзакций = Результат.ВыгрузитьКолонку("Организация");
	
	ТаблицаРасшифровкиПоОрганизациям.Очистить();
	
	Для Каждого СтрокаРезультата Из Результат Цикл
		
		НоваяСтрока = ТаблицаРасшифровкиПоОрганизациям.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаРезультата);
		НоваяСтрока.Отметка = Истина;
		
	КонецЦикла;
	
	// По организациям сообщения есть, сохраняем параметр в реквизит.
	Для Каждого ЭлементМассива Из Транзакции Цикл 
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.Транзакция = ЭлементМассива;
	КонецЦикла;

КонецПроцедуры

&НаКлиенте
Процедура ПриПовторномОткрытии()
	
	Если МассивТранзакцийКлиент = Неопределено ИЛИ ТипЗнч(МассивТранзакцийКлиент) <> Тип("Массив") Тогда 
		Возврат;
	КонецЕсли;
	
	Отказ = Ложь;
	ЗаполнитьРеквизитыИНастройки(МассивТранзакцийКлиент, Отказ);
	Если Отказ Тогда 
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФормуИНачатьРасшифровку()
 
	СобратьСообщенияДляРасшифровки();
	
	ВсегоСообщений = ТребующиеРасшифровки.Количество();
	
	Если ВсегоСообщений = 0 Тогда
		Закрыть();
		Возврат;
	КонецЕсли;
	
	// Расшифровка будет запущена сразу после закрытия этой формы вместе с формой бублика.
	ДополнительныеПараметры = ДопПараметрыДляРасшифровки();
	Закрыть(ДополнительныеПараметры);
	
КонецПроцедуры
	
&НаСервере
Процедура СобратьСообщенияДляРасшифровки()
	
	МассивОрганизаций = РеквизитФормыВЗначение("ТаблицаРасшифровкиПоОрганизациям").ВыгрузитьКолонку("Организация");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СвойстваТранспортныхСообщений.Транзакция.Документооборот.Организация КАК Организация,
	|	СвойстваТранспортныхСообщений.Транзакция КАК Ссылка,
	|	СвойстваТранспортныхСообщений.Транзакция.ТипТранзакции КАК ТипТранзакции
	|ИЗ
	|	РегистрСведений.СвойстваТранзакцийОбменаСБанками КАК СвойстваТранспортныхСообщений
	|ГДЕ
	|	СвойстваТранспортныхСообщений.Транзакция.Документооборот.Организация В(&Организации)
	|	И СвойстваТранспортныхСообщений.ТребуетРасшифровки
	|	И СвойстваТранспортныхСообщений.Транзакция.Документооборот.Сервис = &Сервис";
	
	Запрос.УстановитьПараметр("Организации", 			МассивОрганизаций);
	Запрос.УстановитьПараметр("Сервис", 				Сервис);
	
	ТребующиеРасшифровки.Очистить();
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		Транзакция = Выборка.Ссылка;
		НоваяСтрока = ТребующиеРасшифровки.Добавить();
		НоваяСтрока.Организация = Выборка.Организация;
		НоваяСтрока.Транзакция = Транзакция;
		НоваяСтрока.ТипТранзакции = Выборка.ТипТранзакции;
	КонецЦикла;
	
	// уточнение количества собранных вх.сообщений
	ПромежуточнаяТаблица = ТребующиеРасшифровки.Выгрузить();
	ПромежуточнаяТаблица.Свернуть("Организация");
	
	Для Каждого СтрокаСвертки ИЗ ПромежуточнаяТаблица Цикл 
		
		Отбор = Новый Структура("Организация", СтрокаСвертки.Организация);
		
		РезультатОтбора = ТаблицаРасшифровкиПоОрганизациям.НайтиСтроки(Отбор);
		Если РезультатОтбора.Количество() > 0 Тогда 
			ОтборТребующихРасшифровки = ТребующиеРасшифровки.НайтиСтроки(Отбор);
			РезультатОтбора[0].КоличествоСообщений = ОтборТребующихРасшифровки.Количество();
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ДопПараметрыДляРасшифровки()

	АдресТребующиеРасшифровки = ПоместитьВоВременноеХранилище(
		РеквизитФормыВЗначение("ТребующиеРасшифровки"), 
		Новый УникальныйИдентификатор);
		
	АдресТаблицаРасшифровкиПоОрганизациям = ПоместитьВоВременноеХранилище(
		РеквизитФормыВЗначение("ТаблицаРасшифровкиПоОрганизациям"),
		Новый УникальныйИдентификатор);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("АдресТребующиеРасшифровки", АдресТребующиеРасшифровки);
	ДополнительныеПараметры.Вставить("АдресТаблицаРасшифровкиПоОрганизациям", АдресТаблицаРасшифровкиПоОрганизациям);
	
	Возврат ДополнительныеПараметры;

КонецФункции

&НаСервере
Процедура ОпределитьКоличествоСообщенийКРасшифровке()

	КоличествоСообщенийКРасшифровке = 0;
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасшифровкиПоОрганизациям Цикл
		КоличествоСообщенийКРасшифровке = КоличествоСообщенийКРасшифровке + СтрокаТаблицы.КоличествоСообщений;
	КонецЦикла;
	
	ТекстНадписи = НСтр("ru = 'Получено %1 от сервиса 1С:ФинОтчетность.
                         |Расшифровать сообщения сейчас?';
                         |en = 'Received %1 from 1C:Financial Reporting service.
                         |Do you want to decrypt the messages now?'");
						 
	ЧислоИПредметИсчисления = СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка
		(НСтр("ru = '%1 сообщений;%1 сообщение;%1 сообщения;%1 сообщения;%1 сообщений;%1 сообщения';
				|en = '%1 messages;%1 message;;;;%1messages'"),
		КоличествоСообщенийКРасшифровке,
		ВидЧисловогоЗначения.Количественное,
		"ЧДЦ=0");
	
	ТекстНадписи = СтрШаблон(ТекстНадписи, ЧислоИПредметИсчисления);
	Элементы.ТекстНадписи.Заголовок = ТекстНадписи;
	
КонецПроцедуры

#КонецОбласти

