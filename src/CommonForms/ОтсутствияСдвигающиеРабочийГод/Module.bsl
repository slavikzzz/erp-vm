
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ВидЕжегодногоОтпуска = Параметры.ВидЕжегодногоОтпуска;
	
	ОтсутствияСдвигающиеРабочийГод.Загрузить(ПолучитьИзВременногоХранилища(Параметры.АдресСведенийОбОтсутствиях));
	
	СписокСостояний = Новый ФиксированныйМассив(Перечисления.СостоянияСотрудника.СостоянияПрерывающиеПравоНаОтпуск());
	
	ПараметрыВыбораСостояний = Новый Массив;
	ПараметрыВыбораСостояний.Добавить(Новый ПараметрВыбора("Отбор.Ссылка", СписокСостояний));
	
	Элементы.ОтсутствияСдвигающиеРабочийГодСостояние.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбораСостояний);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОК(Команда)
	
	ОчиститьСообщения();
	
	Если Модифицированность Тогда
		
		Отказ = Ложь;
		ПроверитьСведенияОбОтсутствиях(Отказ);
		
		Если Отказ Тогда 
			Возврат;
		КонецЕсли;
		
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("ВидЕжегодногоОтпуска", ВидЕжегодногоОтпуска);
		ПараметрыОповещения.Вставить("ОтсутствияСдвигающиеРабочийГод", ОтсутствияСдвигающиеРабочийГод);
		
		Оповестить("ИзмененыОтсутствияСдвигающиеРабочийГод", ПараметрыОповещения, ВладелецФормы);
		
	КонецЕсли;
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПроверитьСведенияОбОтсутствиях(Отказ)
	
	ВидыОтсутствий = Новый Соответствие;
	
	Для Каждого СтрокаОтсутствия Из ОтсутствияСдвигающиеРабочийГод Цикл 
		
		ИндексСтрокой = Формат(ОтсутствияСдвигающиеРабочийГод.Индекс(СтрокаОтсутствия), "ЧН=0; ЧГ=0");
		
		Если Не ЗначениеЗаполнено(СтрокаОтсутствия.Состояние) Тогда 
			ТекстСообщения = НСтр("ru = 'Не указан вид отсутствия.';
									|en = 'Absence kind is not specified.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ОтсутствияСдвигающиеРабочийГод[" + ИндексСтрокой + "].Состояние", , Отказ);
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(СтрокаОтсутствия.КоличествоДней) Тогда 
			ТекстСообщения = НСтр("ru = 'Не указано количество дней.';
									|en = 'Number of days is not specified.'");
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ОтсутствияСдвигающиеРабочийГод[" + ИндексСтрокой + "].КоличествоДней", , Отказ);
		КонецЕсли;
		
		Если ВидыОтсутствий[СтрокаОтсутствия.Состояние] <> Неопределено Тогда 
			ТекстСообщения = НСтр("ru = 'Информация о виде отсутствия %1 была введена ранее.';
									|en = 'Information about absence kind %1 was entered earlier.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ТекстСообщения, СтрокаОтсутствия.Состояние);
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ОтсутствияСдвигающиеРабочийГод[" + ИндексСтрокой + "].Состояние", , Отказ);
		КонецЕсли;
		
		ВидыОтсутствий.Вставить(СтрокаОтсутствия.Состояние, Истина);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
