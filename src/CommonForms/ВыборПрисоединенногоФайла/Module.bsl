#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ИспользоватьНесколькоОрганизаций = ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизацийБухгалтерскийУчет");
	
	Если НЕ ПустаяСтрока(Параметры.Заголовок) Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	МножественныйВыбор = ?(Параметры.Свойство("МножественныйВыбор"), Параметры.МножественныйВыбор, Истина);
	Элементы.ПрисоединенныеФайлы.МножественныйВыбор = МножественныйВыбор;
	Элементы.ПрисоединенныеФайлы.РежимВыделения = ?(МножественныйВыбор, РежимВыделенияТаблицы.Множественный,
		РежимВыделенияТаблицы.Одиночный);
	
	МаксимальныйРазмерФайла = Параметры.МаксимальныйРазмер * 1024;
	ЗаполнитьДопустимыеТипыФайлов(Параметры.ФильтрДиалогаВыбора);
	
	// Покажем описание отбора по типу и размеру файлов.
	ТекстыОписанияОтбора = Новый Массив;
	Если ДопустимыеТипыФайловПредставление.Количество() > 0 Тогда
		ТекстыОписанияОтбора.Добавить(
			СтрШаблон(НСтр("ru = 'Тип файла: %1';
							|en = 'File type: %1'"), СтрСоединить(ДопустимыеТипыФайловПредставление.ВыгрузитьЗначения(), "; ")));
	КонецЕсли;
	
	Если МаксимальныйРазмерФайла > 0 Тогда
		ТекстыОписанияОтбора.Добавить(СтрШаблон(НСтр("ru = 'Максимальный размер: %1';
													|en = 'Maximum size: %1'"), ПредставлениеРазмераФайла(МаксимальныйРазмерФайла)));
	КонецЕсли;
	
	Если ТекстыОписанияОтбора.Количество() > 0 Тогда
		Элементы.ДекорацияОписаниеОтбора.Заголовок = СтрСоединить(ТекстыОписанияОтбора, ". ");
		Элементы.ДекорацияОписаниеОтбора.Видимость = Истина;
	КонецЕсли;

	// Составим список объектов метаданных, к которым в текущей базе фактически присоединены файлы.
	ЕстьПрисоединенныеФайлы = Ложь;
	
	ОтображаемыеПодсистемы = Новый Массив;
	ПолучитьОтображаемыеПодсистемы(ОтображаемыеПодсистемы);
	
	ДеревоТипов = Новый ДеревоЗначений;
	ДеревоТипов.Колонки.Добавить("ЭтоГруппа", Новый ОписаниеТипов("Булево"));
	ДеревоТипов.Колонки.Добавить("Имя", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ДеревоТипов.Колонки.Добавить("Представление", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ДеревоТипов.Колонки.Добавить("Владелец", ОбщегоНазначения.ОписаниеТипаСтрока(0));
	ДеревоТипов.Колонки.Добавить("КартинкаСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	
	ГруппаСправочники = ДеревоТипов.Строки.Добавить();
	ГруппаСправочники.ЭтоГруппа = Истина;
	ГруппаСправочники.Имя = "Справочники";
	ГруппаСправочники.Представление = НСтр("ru = 'Справочники';
											|en = 'Catalogs'");
	ГруппаСправочники.КартинкаСтроки = 0;
	
	ГруппаДокументы = ДеревоТипов.Строки.Добавить();
	ГруппаДокументы.ЭтоГруппа = Истина;
	ГруппаДокументы.Имя = "Документы";
	ГруппаДокументы.Представление = НСтр("ru = 'Документы';
										|en = 'Documents'");
	ГруппаДокументы.КартинкаСтроки = 0;
	
	Типы = Метаданные.ОпределяемыеТипы.ПрисоединенныйФайл.Тип.Типы();
	ТекстыЗапросов = Новый Массив;
	Для каждого Тип Из Типы Цикл
		
		МетаданныеТипа = Метаданные.НайтиПоТипу(Тип);
		Если МетаданныеТипа = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если МетаданныеТипа.Реквизиты.Найти("ВладелецФайла") = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПравоДоступа("Просмотр", МетаданныеТипа) Тогда
			Продолжить;
		КонецЕсли;
		
		ТипВладельца = МетаданныеТипа.Реквизиты.ВладелецФайла.Тип.Типы()[0];
		
		МетаданныеВладельца = Метаданные.НайтиПоТипу(ТипВладельца);
		Если МетаданныеВладельца = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если НЕ ПравоДоступа("Просмотр", МетаданныеВладельца) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Метаданные.Справочники.Содержит(МетаданныеВладельца)
			И НЕ ВходитВОтображаемыеПодсистемы(ОтображаемыеПодсистемы, МетаданныеВладельца) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Метаданные.Документы.Содержит(МетаданныеВладельца) Тогда

			РегистрируемыйДокумент = Ложь;
			ЗаполнениеФинОтчетностиВБанкиПереопределяемый.ВходитВРегистрируемыеДокументы(МетаданныеВладельца, РегистрируемыйДокумент);
			Если Не РегистрируемыйДокумент Тогда
				Продолжить;
			КонецЕсли;

		КонецЕсли;
		
		УсловияЗапроса = Новый Массив;
		Если ДопустимыеТипыФайлов.Количество() > 0 Тогда
			УсловияЗапроса.Добавить(МетаданныеТипа.ПолноеИмя() + ".Расширение В (&ДопустимыеТипыФайлов)");
		КонецЕсли;
		Если МаксимальныйРазмерФайла > 0 Тогда
			УсловияЗапроса.Добавить(МетаданныеТипа.ПолноеИмя() + ".Размер <= &МаксимальныйРазмерФайла");
		КонецЕсли;
		УсловиеЗапроса = ?(УсловияЗапроса.Количество() > 0, СтрСоединить(УсловияЗапроса, " И "), "ИСТИНА");
		
		ТекстыЗапросов.Добавить(
			СтрШаблон("ВЫБРАТЬ %1 ПЕРВЫЕ 1 ""%2"" КАК Имя, ""%3"" КАК Владелец, ""%4"" КАК Представление, %5.Ссылка КАК Файл ГДЕ %6",
				?(ТекстыЗапросов.Количество()=0, "РАЗРЕШЕННЫЕ", ""),
				МетаданныеТипа.Имя,
				МетаданныеВладельца.ПолноеИмя(),
				СтрЗаменить(МетаданныеВладельца.Синоним, """", """"""),
				МетаданныеТипа.ПолноеИмя(),
				УсловиеЗапроса));
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, "
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|");
	
	Запрос.УстановитьПараметр("ДопустимыеТипыФайлов", ДопустимыеТипыФайлов.ВыгрузитьЗначения());
	Запрос.УстановитьПараметр("МаксимальныйРазмерФайла", МаксимальныйРазмерФайла);
	ИспользуемыеТипыПрисоединенныхФайлов = Запрос.Выполнить().Выгрузить();
	ЕстьПрисоединенныеФайлы = ИспользуемыеТипыПрисоединенныхФайлов.Количество() > 0;
	
	Для каждого ИспользуемыйТипПрисоединенныхФайлов Из ИспользуемыеТипыПрисоединенныхФайлов Цикл
		Если СтрНачинаетсяС(ВРег(ИспользуемыйТипПрисоединенныхФайлов.Владелец), "ДОКУМЕНТ") Тогда
			НоваяСтрока = ГруппаДокументы.Строки.Добавить();
		ИначеЕсли СтрНачинаетсяС(ВРег(ИспользуемыйТипПрисоединенныхФайлов.Владелец), "СПРАВОЧНИК") Тогда
			НоваяСтрока = ГруппаСправочники.Строки.Добавить();
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ИспользуемыйТипПрисоединенныхФайлов);
		НоваяСтрока.КартинкаСтроки = 3;
	КонецЦикла;
	
	СтрокиДляУдаления = Новый Массив;
	Для каждого Строка Из ДеревоТипов.Строки Цикл
		Если Строка.Строки.Количество() = 0 Тогда
			СтрокиДляУдаления.Добавить(Строка);
		Иначе
			Строка.Строки.Сортировать("Представление");
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаДляУдаления Из СтрокиДляУдаления Цикл
		ДеревоТипов.Строки.Удалить(СтрокаДляУдаления);
	КонецЦикла;
	
	ЗначениеВДанныеФормы(ДеревоТипов, ТипыОбъектов);
	
	Если ДопустимыеТипыФайлов.Количество() > 0 Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ПрисоединенныеФайлы, "Расширение",
			ДопустимыеТипыФайлов.ВыгрузитьЗначения(), ВидСравненияКомпоновкиДанных.ВСписке);
	КонецЕсли;
	Если МаксимальныйРазмерФайла > 0 Тогда
		ОтборыСписковКлиентСервер.УстановитьЭлементОтбораСписка(ПрисоединенныеФайлы, "Размер",
			МаксимальныйРазмерФайла, ВидСравненияКомпоновкиДанных.МеньшеИлиРавно);
	КонецЕсли;
	
	Элементы.ДекорацияПрисоединенныеФайлыОтсутствуют.Видимость = НЕ ЕстьПрисоединенныеФайлы;
	
	ЭтотОбъект.КоманднаяПанель.Доступность = ЕстьПрисоединенныеФайлы;
	Элементы.ТипыОбъектов.Видимость = ЕстьПрисоединенныеФайлы;
	Элементы.ПрисоединенныеФайлы.Видимость = ЕстьПрисоединенныеФайлы;
	
	Если ЕстьПрисоединенныеФайлы Тогда
		Элементы.ТипыОбъектов.ТекущаяСтрока = 1;
		
		СохраненнаяСтрока = Неопределено;
		СохраненныйТипОбъекта = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ВладелецНастроек(), "ТипОбъекта");
		Если СохраненныйТипОбъекта <> Неопределено Тогда
			Для каждого ГруппаДерева Из ТипыОбъектов.ПолучитьЭлементы() Цикл
				Если ГруппаДерева.Имя = СохраненныйТипОбъекта Тогда
					Элементы.ТипыОбъектов.ТекущаяСтрока = ГруппаДерева.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
				Для каждого ЭлементГруппы Из ГруппаДерева.ПолучитьЭлементы() Цикл
					Если ЭлементГруппы.Имя = СохраненныйТипОбъекта Тогда
						СохраненнаяСтрока = ЭлементГруппы.ПолучитьИдентификатор();
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Если СохраненнаяСтрока <> Неопределено Тогда
					Элементы.ТипыОбъектов.ТекущаяСтрока = СохраненнаяСтрока;
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		СохраненныйФайл = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ВладелецНастроек(), "Файл");
		
		ПоказыватьПомеченныеНаУдаление = ОбщегоНазначения.ХранилищеОбщихНастроекЗагрузить(ВладелецНастроек(),
			"ПоказыватьПомеченныеНаУдаление", Ложь);
		ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ПрисоединенныеФайлы, "ПометкаУдаления" , Ложь, НЕ ПоказыватьПомеченныеНаУдаление);
		Элементы.ФормаПоказыватьПомеченныеНаУдаление.Пометка = ПоказыватьПомеченныеНаУдаление;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Элементы.ТипыОбъектов.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТипОбъекта = ?(Элементы.ТипыОбъектов.ТекущиеДанные <> Неопределено,
		Элементы.ТипыОбъектов.ТекущиеДанные.Имя,
		Неопределено);
	
	Файл = ?(ЗначениеЗаполнено(Элементы.ПрисоединенныеФайлы.ТекущаяСтрока),
		Элементы.ПрисоединенныеФайлы.ТекущаяСтрока,
		Неопределено);
	
	СохранитьСостояниеФормы(ТипОбъекта, Файл, ПоказыватьПомеченныеНаУдаление);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	Выбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьКарточку(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Ключ", Элементы.ПрисоединенныеФайлы.ТекущиеДанные.Ссылка);
	
	РаботаСФайламиКлиент.ОткрытьФормуФайла(Элементы.ПрисоединенныеФайлы.ТекущиеДанные.Ссылка,, ПараметрыФормы);
	
КонецПроцедуры

&НаКлиенте
Процедура Просмотреть(Команда)
	
	ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(
		Элементы.ПрисоединенныеФайлы.ТекущаяСтрока, Неопределено, УникальныйИдентификатор);
	
	РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПомеченныеНаУдаление(Команда)
	
	ПоказыватьПомеченныеНаУдаление = НЕ ПоказыватьПомеченныеНаУдаление;
	Элементы.ФормаПоказыватьПомеченныеНаУдаление.Пометка = ПоказыватьПомеченныеНаУдаление;
	
	ОтборыСписковКлиентСервер.ИзменитьЭлементОтбораСписка(ПрисоединенныеФайлы, "ПометкаУдаления" , Ложь, НЕ ПоказыватьПомеченныеНаУдаление);
	Элементы.ПрисоединенныеФайлы.Обновить();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТипыОбъектов

&НаКлиенте
Процедура ТипыОбъектовПриАктивизацииСтроки(Элемент)
	
	ЭтотОбъект.КоманднаяПанель.Доступность = Ложь;
	
	Если Элемент.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.ЭтоГруппа Тогда
		ОтобразитьПредставлениеГруппы(ЭтотОбъект, Элемент.ТекущиеДанные.Имя);
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Владелец) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Элемент.ТекущиеДанные.Имя) Тогда
		Возврат;
	КонецЕсли;
	
	ЭтотОбъект.КоманднаяПанель.Доступность = Истина;
	
	ОтобразитьПрисоединенныеФайлы(Элемент.ТекущиеДанные.Владелец, Элемент.ТекущиеДанные.Имя);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПрисоединенныеФайлы

&НаКлиенте
Процедура ПрисоединенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Выбор();
	
КонецПроцедуры

&НаКлиенте
Процедура ПрисоединенныеФайлыПриАктивизацииСтроки(Элемент)
	
	ЭтотОбъект.КоманднаяПанель.Доступность = Элемент.ТекущиеДанные <> Неопределено;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Выбор()
	
	Результат = ?(МножественныйВыбор,
		Элементы.ПрисоединенныеФайлы.ВыделенныеСтроки,
		Элементы.ПрисоединенныеФайлы.ТекущаяСтрока);
	
	Закрыть(Результат);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьПредставлениеГруппы(Форма, Имя)
	
	Если Имя = "Справочники" Тогда
		Форма.Элементы.ГруппаПрисоединенныеФайлыСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаНеобходимоВыбратьВидСправочника;
	ИначеЕсли Имя = "Документы" Тогда
		Форма.Элементы.ГруппаПрисоединенныеФайлыСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаНеобходимоВыбратьВидДокумента;
	Иначе
		Форма.Элементы.ГруппаПрисоединенныеФайлыСтраницы.ТекущаяСтраница = Форма.Элементы.ГруппаПрисоединенныеФайлы;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтобразитьПрисоединенныеФайлы(Владелец, Имя)
	
	Элементы.ГруппаПрисоединенныеФайлыСтраницы.ТекущаяСтраница = Элементы.ГруппаПрисоединенныеФайлы;
	
	ТекстЗапроса = СтрШаблон("ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Файлы.ВладелецФайла.Номер КАК Номер,
	|	Файлы.ВладелецФайла.Дата КАК Дата,
	|	Файлы.ВладелецФайла.Контрагент КАК Контрагент,
	|	Файлы.ВладелецФайла.ДоговорКонтрагента КАК Договор,
	|	ЕСТЬNULL(Файлы.ВладелецФайла.ФизЛицо, Файлы.ВладелецФайла.ФизическоеЛицо) КАК ФизЛицо,
	|	Файлы.ВладелецФайла.Организация КАК Организация,
	|	Файлы.ВладелецФайла.Ответственный КАК Ответственный,
	|	Файлы.ВладелецФайла.Комментарий КАК Комментарий,
	|	Файлы.ВладелецФайла.СуммаДокумента КАК Сумма,
	|	Файлы.ВладелецФайла.Ссылка КАК Владелец,
	|	ВЫБОР КОГДА Файлы.ПометкаУдаления
	|		ТОГДА Файлы.ИндексКартинки + 1
	|		ИНАЧЕ Файлы.ИндексКартинки
	|	КОНЕЦ КАК ИндексКартинки,
	|	Файлы.ПометкаУдаления КАК ПометкаУдаления,
	|	Файлы.Расширение КАК Расширение,
	|	Файлы.Размер КАК Размер,
	|	Файлы.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.%1 КАК Файлы
	|	// Соединение для исключения из выборки файлов, присоединенных к недоступным по RLS объектам.
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации ПО Файлы.ВладелецФайла.Организация = Организации.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(Файлы.Служебный, ЛОЖЬ) = ЛОЖЬ", Имя);
	
	МетаданныеФайла = Метаданные.НайтиПоПолномуИмени("Справочник." + Имя);
	МетаданныеВладельца = Метаданные.НайтиПоПолномуИмени(Владелец);
	
	ЭтоДоговор = Ложь;
	ЭтоОрганизация = Ложь;
	Если Метаданные.Справочники.Содержит(МетаданныеВладельца) Тогда
		
		ТипыДоговора = БухгалтерскийУчетКлиентСерверПереопределяемый.ПолучитьОписаниеТиповДоговора();
		ЭтоДоговор = МетаданныеВладельца.Владельцы.Количество() <> 0
			И ТипыДоговора.СодержитТип(Тип("СправочникСсылка." + МетаданныеВладельца.Имя));
		ЭтоОрганизация = (МетаданныеВладельца.Имя = "Организации");

	КонецЕсли;
	
	ЕстьНомер = ЕстьСтандартныйРеквизит(МетаданныеВладельца, "Номер")
		ИЛИ МетаданныеВладельца.Реквизиты.Найти("Номер") <> Неопределено;
	ЕстьДата = ЕстьСтандартныйРеквизит(МетаданныеВладельца, "Дата")
		ИЛИ МетаданныеВладельца.Реквизиты.Найти("Дата") <> Неопределено;
	
	ЕстьКонтрагент = ЭтоДоговор ИЛИ МетаданныеВладельца.Реквизиты.Найти("Контрагент") <> Неопределено;
	ЕстьОрганизация = ЭтоОрганизация ИЛИ МетаданныеВладельца.Реквизиты.Найти("Организация") <> Неопределено;
	
	ЕстьПризнакСлужебный = МетаданныеФайла.Реквизиты.Найти("Служебный") <> Неопределено;
	ЕстьДоговор = МетаданныеВладельца.Реквизиты.Найти("ДоговорКонтрагента") <> Неопределено;
	ЕстьФизЛицо = МетаданныеВладельца.Реквизиты.Найти("ФизЛицо") <> Неопределено;
	ЕстьФизическоеЛицо = МетаданныеВладельца.Реквизиты.Найти("ФизическоеЛицо") <> Неопределено;
	ЕстьОтветственный = МетаданныеВладельца.Реквизиты.Найти("Ответственный") <> Неопределено;
	ЕстьКомментарий = МетаданныеВладельца.Реквизиты.Найти("Комментарий") <> Неопределено;
	ЕстьСумма = МетаданныеВладельца.Реквизиты.Найти("СуммаДокумента") <> Неопределено;
	
	Элементы.ПрисоединенныеФайлыНомер.Видимость = ЕстьНомер;
	Элементы.ПрисоединенныеФайлыДата.Видимость = ЕстьДата;
	Элементы.ПрисоединенныеФайлыКонтрагент.Видимость = ЕстьКонтрагент;
	Элементы.ПрисоединенныеФайлыДоговор.Видимость = ЕстьДоговор;
	Элементы.ПрисоединенныеФайлыОрганизация.Видимость = ЕстьОрганизация И ИспользоватьНесколькоОрганизаций;
	Элементы.ПрисоединенныеФайлыФизЛицо.Видимость = ЕстьФизЛицо ИЛИ ЕстьФизическоеЛицо;
	Элементы.ПрисоединенныеФайлыОтветственный.Видимость = ЕстьОтветственный;
	Элементы.ПрисоединенныеФайлыКомментарий.Видимость = ЕстьКомментарий;
	Элементы.ПрисоединенныеФайлыСумма.Видимость = ЕстьСумма;
	
	Если НЕ ЕстьНомер Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Номер", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьДата Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Дата", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьКонтрагент Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Контрагент", "NULL");
	КонецЕсли;
	
	Если ЭтоДоговор Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Контрагент", "Файлы.ВладелецФайла.Владелец");
	КонецЕсли;
	
	Если НЕ ЕстьДоговор Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.ДоговорКонтрагента", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьОрганизация Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации ПО Файлы.ВладелецФайла.Организация = Организации.Ссылка",
			"");
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Организация", "NULL");
	КонецЕсли;
	
	Если ЭтоОрганизация Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Организация", "Файлы.ВладелецФайла");
	КонецЕсли;
	
	Если НЕ ЕстьФизЛицо Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.ФизЛицо", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьФизическоеЛицо Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.ФизическоеЛицо", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьОтветственный Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Ответственный", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьКомментарий Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.Комментарий", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьСумма Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.ВладелецФайла.СуммаДокумента", "NULL");
	КонецЕсли;
	
	Если НЕ ЕстьПризнакСлужебный Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Файлы.Служебный", "NULL");
	КонецЕсли;
	
	Если ПоказыватьПомеченныеНаУдаление Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "НЕ Файлы.ПометкаУдаления", "ИСТИНА");
	КонецЕсли;
	
	ПрисоединенныеФайлы.ТекстЗапроса = ТекстЗапроса;
	Элементы.ПрисоединенныеФайлы.Обновить();
	
	Если СохраненныйФайл <> Неопределено Тогда
		Элементы.ПрисоединенныеФайлы.ТекущаяСтрока = СохраненныйФайл;
		СохраненныйФайл = Неопределено;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДопустимыеТипыФайлов(ФильтрДиалогаВыбора)
	
	Если ПустаяСтрока(ФильтрДиалогаВыбора) Тогда
		Возврат; // Нет ограничения по типу файлов.
	КонецЕсли;
	
	Если СтрНайти(ФильтрДиалогаВыбора, "*.*") <> 0 Тогда
		Возврат; // Нет ограничения по типу файлов.
	КонецЕсли;
	
	ОписаниеТиповФайлов = СтрРазделить(ФильтрДиалогаВыбора, "|", Ложь);
	
	Если ОписаниеТиповФайлов.Количество() % 2 <> 0 Тогда
		Возврат; // Передан некорректный фильтр диалога выбора: описание типов не парное.
	КонецЕсли;
	
	ИндексЭлемента = 0;
	Пока ИндексЭлемента <= ОписаниеТиповФайлов.ВГраница() Цикл
		ПредставлениеТипа = ОписаниеТиповФайлов[ИндексЭлемента];
		ДопустимыеТипыФайловПредставление.Добавить(СокрЛП(ПредставлениеТипа));
		
		РасширенияФайлов = СтрРазделить(СтрЗаменить(ОписаниеТиповФайлов[ИндексЭлемента+1], "*.", ""), ";", Ложь);
		Для каждого Расширение Из РасширенияФайлов Цикл
			ДопустимыеТипыФайлов.Добавить(СокрЛП(Расширение));
		КонецЦикла;
		
		ИндексЭлемента = ИндексЭлемента + 2;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПредставлениеРазмераФайла(Размер)
	
	Кб = 1024;
	Мб = 1024 * Кб;
	
	Если Размер >= Мб Тогда
		ПредставлениеРазмера = Окр(Размер / Мб, 1);
		Возврат СтрШаблон(НСтр("ru = '%1 Мб';
								|en = '%1 MB'"), ПредставлениеРазмера);
	ИначеЕсли Размер >= Кб Тогда
		ПредставлениеРазмера = Окр(Размер / Кб, 1);
		Возврат СтрШаблон(НСтр("ru = '%1 Кб';
								|en = '%1 KB'"), ПредставлениеРазмера);
	Иначе
		Возврат СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(
			НСтр("ru = ';%1 байт;;%1 байта;%1 байт;%1 байт';
				|en = ';%1 byte;;;;%1bytes'"), Размер);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ЕстьСтандартныйРеквизит(МетаданныеОбъекта, ИмяРеквизита)
	
	Для каждого Реквизит Из МетаданныеОбъекта.СтандартныеРеквизиты Цикл
		Если Реквизит.Имя = ИмяРеквизита Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Процедура ПолучитьОтображаемыеПодсистемы(ОтображаемыеПодсистемы, Знач Подсистемы = Неопределено)
	
	Если Подсистемы = Неопределено Тогда
		Подсистемы = Метаданные.Подсистемы;
	КонецЕсли;
	
	Если Подсистемы.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Если ОтображаемыеПодсистемы = Неопределено Тогда
		ОтображаемыеПодсистемы = Новый Массив;
	КонецЕсли;
	
	Для каждого Подсистема Из Подсистемы Цикл
		Если Подсистема.ВключатьВКомандныйИнтерфейс Тогда
			ОтображаемыеПодсистемы.Добавить(Подсистема);
			ПолучитьОтображаемыеПодсистемы(ОтображаемыеПодсистемы, Подсистема.Подсистемы);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВходитВОтображаемыеПодсистемы(ОтображаемыеПодсистемы, ОбъектМетаданных)
	
	Для каждого Подсистема Из ОтображаемыеПодсистемы Цикл
		Если Подсистема.Состав.Содержит(ОбъектМетаданных) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервереБезКонтекста
Процедура СохранитьСостояниеФормы(Знач ТипОбъекта, Знач Файл, Знач ПоказыватьПомеченныеНаУдаление)
	
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ВладелецНастроек(), "ТипОбъекта", ТипОбъекта);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ВладелецНастроек(), "Файл", Файл);
	ОбщегоНазначения.ХранилищеОбщихНастроекСохранить(ВладелецНастроек(), "ПоказыватьПомеченныеНаУдаление", ПоказыватьПомеченныеНаУдаление);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ВладелецНастроек()
	
	Возврат "ВыборПрисоединенныхФайлов";
	
КонецФункции

#КонецОбласти
