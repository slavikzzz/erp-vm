
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("Заголовок") Тогда
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
	// Сформируем текст краткого сообщения о результатах отправки.
	Если Параметры.КоличествоУспешноОбработано > 0 Тогда
		Если Параметры.КоличествоУспешноОбработано > 1 Тогда
			КоличествоПрописью = СтрШаблон(НСтр("ru = ' %1 получателям';
												|en = ' %1 recipients'"), Параметры.КоличествоУспешноОбработано);
		Иначе
			КоличествоПрописью = "";
		КонецЕсли;
		
		// Отдельные типы транзакций могут отсутствовать в конфигурации, куда встроена библиотека. Поэтому проверяем по имени.
		ИмяТипаТранзакции = ОбщегоНазначения.ИмяЗначенияПеречисления(Параметры.ТипТранзакции);
		Если ИмяТипаТранзакции = "ЗаявкаНаКредит" Или ИмяТипаТранзакции = "ЗаявкаНаЛизинг" Тогда
			ШаблонТекста = НСтр("ru = 'Заявка успешно отправлена%1.';
								|en = 'Request is sent%1.'");
		ИначеЕсли ИмяТипаТранзакции = "АкцептЗаемщика" Или ИмяТипаТранзакции = "АкцептКлиента" Тогда
			ШаблонТекста = НСтр("ru = 'Согласие с предложенными условиями успешно отправлено%1.';
								|en = 'Consent to proposed terms is sent%1.'");
		Иначе
			ШаблонТекста = НСтр("ru = 'Сообщение успешно отправлено%1.';
								|en = 'Message successfully sent%1.'");
		КонецЕсли;
		Элементы.НадписьОшибка.Заголовок = СтрШаблон(ШаблонТекста, КоличествоПрописью);

	Иначе
		Элементы.НадписьОшибка.Заголовок = НСтр("ru = 'Возникли ошибки:';
												|en = 'The errors occurred:'");
	КонецЕсли;

	Подстроки = Новый Массив;
	
	Если ЗначениеЗаполнено(Параметры.НеОтправленныеТранзакции) Тогда
		// Определим перечень банков, с которыми возникли проблемы.
		НаименованияБанков = НаименованияБанков(Параметры.НеОтправленныеТранзакции);
		Подстроки.Добавить(СтрШаблон(НСтр("ru = 'Не отправлено в %1';
											|en = 'Not sent to %1'"), СтрСоединить(НаименованияБанков, ", ")));
	КонецЕсли;
	
	ПозицияСкобки = СтрНайти(Параметры.ОписаниеОшибки, "{");
	Если ПозицияСкобки = 0 Тогда
		
		Подстроки.Добавить(Параметры.ОписаниеОшибки);
		ОписаниеОшибки = СтрСоединить(Подстроки, Символы.ПС);
		Элементы.ГруппаПодробнее.Видимость = Ложь;
		
	Иначе
		
		Подстроки.Добавить(Лев(Параметры.ОписаниеОшибки, ПозицияСкобки - 1));
		ОписаниеОшибки = СтрСоединить(Подстроки, Символы.ПС);
		
		ПодробноеОписаниеОшибки = Сред(Параметры.ОписаниеОшибки, ПозицияСкобки + 1);
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция НаименованияБанков(Транзакции)
	
	РеквизитыТранзакций = УниверсальныйОбменСБанками.РеквизитыТранзакций(Транзакции);
	
	Банки = РеквизитыТранзакций.ВыгрузитьКолонку("Банк");
	
	РеквизитыБанков = УниверсальныйОбменСБанками.РеквизитыБанков(Банки, "Наименование");
	
	Результат = Новый Массив;
	Для каждого РеквизитБанка Из РеквизитыБанков Цикл
		Результат.Добавить(РеквизитБанка.Наименование);
	КонецЦикла;

	Возврат Результат;

КонецФункции

#КонецОбласти