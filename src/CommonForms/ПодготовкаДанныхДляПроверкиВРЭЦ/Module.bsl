
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ДекларацияНДС = Параметры.ДекларацияНДС;
	РеестрНДС     = Параметры.РеестрНДС;
	Организация   = Параметры.Организация;
	
	РеестрНДСПредставление     = ПредставлениеОтчета(РеестрНДС);
	ДекларацияНДСПредставление = ПредставлениеОтчета(ДекларацияНДС); 
	
	Если Метаданные.ОпределяемыеТипы.ДоговорКонтрагентаБРО.Тип.Типы().Количество() = 1
		И Метаданные.ОпределяемыеТипы.ДоговорКонтрагентаБРО.Тип.СодержитТип(Тип("Строка")) Тогда
		Элементы.СканыДоговоровЗаполнить.Видимость = Ложь;
		Элементы.ВложенияПоДоговорамКонтрагент.Видимость = Ложь;
		Элементы.ВложенияПоДоговорамДоговорКонтрагента.Видимость = Ложь;
	КонецЕсли;
	
	ОформлениеЭлементов();
	
КонецПроцедуры  

&НаСервере
Процедура ОформлениеЭлементов()
	
	Настройки = ДокументооборотСРЭЦ.ПолучитьНастройки(Организация);
	
	ИспользоватьОбмен = Настройки.ИспользоватьОбмен;
	ОбменНастроен = Настройки.ОбменНастроен;   
	
	Элементы.ГруппаНеобходимостиНастройки.Видимость = НЕ (ИспользоватьОбмен И ОбменНастроен); 
	Элементы.ПроверитьВРЭЦ.Доступность = ИспользоватьОбмен И ОбменНастроен;
	
	СвязиПараметровВыбора = Новый Массив();
	СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Владелец", "Элементы.ВложенияПоДоговорам.ТекущиеДанные.Контрагент"));
	СвязиПараметровВыбора.Добавить(Новый СвязьПараметраВыбора("Отбор.Организация", "Организация"));
	Элементы.ВложенияПоДоговорамДоговорКонтрагента.СвязиПараметровВыбора = Новый ФиксированныйМассив(СвязиПараметровВыбора);
	
	ВидДоговораСПокупателем = Неопределено;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ПолучитьВидДоговораСПокупателем(ВидДоговораСПокупателем);
	
	Если ВидДоговораСПокупателем <> Неопределено Тогда
		ПараметрыВыбора = Новый Массив();
		ПараметрыВыбора.Добавить(Новый ПараметрВыбора("Отбор.ВидДоговора", ВидДоговораСПокупателем));
		Элементы.ВложенияПоДоговорамДоговорКонтрагента.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	КонецЕсли; 
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_Файл"
		И ТипЗнч(Источник) <> Тип("Массив") Тогда
		
		Если ТипЗнч(Параметр) = Тип("Структура") И Параметр.Свойство("Файл") Тогда
			ТекущиеДанные = Элементы.ВложенияПоДоговорам.ТекущиеДанные;
			ТекущиеДанные.Файл = Параметр.Файл;
		ИначеЕсли Источник <> Неопределено Тогда
			Элементы.ВложенияПоДоговорам.ТекущиеДанные.Файл = Источник;
		КонецЕсли;
		
		ЗаполнитьДанныеПоФайлу(); 
		
	ИначеЕсли ИмяСобытия = "ИзменениеНастроекРЭЦОрганизации" И Параметр = Организация Тогда
		
		ОформлениеЭлементов();
		
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВложенияПоДоговорам

&НаКлиенте
Процедура ВложенияПоДоговорамВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле.Имя = "ВложенияПоДоговорамНаименование" Тогда 
		СтандартнаяОбработка = Ложь;
		ТекущиеДанные = Элементы.ВложенияПоДоговорам.ТекущиеДанные;
		
		Если ТипЗнч(ТекущиеДанные.ДоговорКонтрагента) <> Тип("Строка") И НЕ ЗначениеЗаполнено(ТекущиеДанные.ДоговорКонтрагента) Тогда
			СтрокаТаблицы = ВложенияПоДоговорам.НайтиПоИдентификатору(ВыбраннаяСтрока);
			ИндексСтроки = ВложенияПоДоговорам.Индекс(СтрокаТаблицы);
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = НСтр("ru = 'Выберите договор';
									|en = 'Выберите договор'");
			Сообщение.Поле = "ВложенияПоДоговорам[" + ИндексСтроки + "].ДоговорКонтрагента";
			Сообщение.Сообщить();
			Возврат;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ТекущиеДанные.Файл) Тогда
			ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(
				ТекущиеДанные.Файл, Неопределено, УникальныйИдентификатор);
			РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
		Иначе
			Если ТипЗнч(ТекущиеДанные.ДоговорКонтрагента) <> Тип("Строка") Тогда
				РаботаСФайламиСлужебныйКлиент.ДобавитьФайлИзФайловойСистемы(
					ТекущиеДанные.ДоговорКонтрагента, ЭтотОбъект);
			Иначе
				ВладелецФайла = НайтиСоздатьПапкуФайлов("Файлы для отправки в РЭЦ");
				РаботаСФайламиСлужебныйКлиент.ДобавитьФайлИзФайловойСистемы(
					ВладелецФайла, ЭтотОбъект);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Функция НайтиСоздатьПапкуФайлов(ИмяПапки)
	
	Родитель = Справочники.ПапкиФайлов.ПустаяСсылка();
	
	ЗапросВПапки = Новый Запрос;
	ЗапросВПапки.УстановитьПараметр("Наименование", ИмяПапки);
	ЗапросВПапки.УстановитьПараметр("Родитель", Родитель);
	ЗапросВПапки.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПапкиФайлов.Ссылка КАК Ссылка
	|ИЗ
	|	Справочник.ПапкиФайлов КАК ПапкиФайлов
	|ГДЕ
	|	ПапкиФайлов.Наименование = &Наименование
	|	И ПапкиФайлов.Родитель = &Родитель";

	РезультатЗапроса = ЗапросВПапки.Выполнить();
	ВыборкаЗапроса = РезультатЗапроса.Выбрать();
	
	Если ВыборкаЗапроса.Количество() > 0 Тогда
		ВыборкаЗапроса.Следующий();
		Возврат ВыборкаЗапроса.Ссылка;
	КонецЕсли;
	
	Папка = Справочники.ПапкиФайлов.СоздатьЭлемент();
	Папка.Ответственный = Пользователи.АвторизованныйПользователь();
	Папка.Родитель = Родитель;
	Папка.Наименование = ИмяПапки;
	Папка.ДатаСоздания = ТекущаяДатаСеанса();
	Папка.Заполнить(Неопределено);
	Папка.Записать();
	
	Возврат Папка.Ссылка;
	
КонецФункции

&НаКлиенте
Процедура ВложенияПоДоговорамДоговорКонтрагентаПриИзменении(Элемент)
	ОчиститьДанныеПоФайлу();
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПоДоговорамКонтрагентПриИзменении(Элемент)
	ОчиститьДанныеПоФайлу();
КонецПроцедуры


&НаКлиенте
Процедура ВложенияПоДоговорамНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ТекущиеДанные = Элементы.ВложенияПоДоговорам.ТекущиеДанные;
	
	Если ТипЗнч(ТекущиеДанные.ДоговорКонтрагента) <> Тип("Строка") И НЕ ЗначениеЗаполнено(ТекущиеДанные.ДоговорКонтрагента) Тогда
		СтрокаТаблицы = ВложенияПоДоговорам.НайтиПоИдентификатору(Элементы.ВложенияПоДоговорам.ТекущаяСтрока);
		ИндексСтроки = ВложенияПоДоговорам.Индекс(СтрокаТаблицы);
		Сообщение = Новый СообщениеПользователю;
		Сообщение.Текст = НСтр("ru = 'Выберите договор';
								|en = 'Выберите договор'");
		Сообщение.Поле = "ВложенияПоДоговорам[" + ИндексСтроки + "].ДоговорКонтрагента";
		Сообщение.Сообщить();
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Файл) Тогда
		ДанныеФайла = РаботаСФайламиСлужебныйВызовСервера.ДанныеФайлаДляОткрытия(
			ТекущиеДанные.Файл, Неопределено, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
	Иначе
		Если ТипЗнч(ТекущиеДанные.ДоговорКонтрагента) <> Тип("Строка") Тогда
			РаботаСФайламиСлужебныйКлиент.ДобавитьФайлИзФайловойСистемы(
				ТекущиеДанные.ДоговорКонтрагента, ЭтотОбъект);
		Иначе
			ВладелецФайла = НайтиСоздатьПапкуФайлов("Файлы для отправки в РЭЦ");
			РаботаСФайламиСлужебныйКлиент.ДобавитьФайлИзФайловойСистемы(
				ВладелецФайла, ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
		
КонецПроцедуры

&НаКлиенте
Процедура ВложенияПоДоговорамНаименованиеОчистка(Элемент, СтандартнаяОбработка)
	ОчиститьДанныеПоФайлу();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Заполнить(Команда)
	
	Если ВложенияПоДоговорам.Количество() > 0 Тогда
		ТекстВопроса = НСтр("ru = 'Перед заполнением табличная часть будет очищена. Заполнить?';
							|en = 'Перед заполнением табличная часть будет очищена. Заполнить?'") ;
		Оповещение = Новый ОписаниеОповещения("ВопросПередЗаполнениемТабличнойЧастиЗавершение", ЭтотОбъект);
		ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да, Заголовок);
	Иначе
		
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВРЭЦ(Команда)        
	
	Если ПроверитьЗаполнение() = Ложь Тогда
		Возврат;
	КонецЕсли;
	
	Оповещение = Новый ОписаниеОповещения("ОтправкаВРЭЦПослеНастроек", ЭтотОбъект);
	
	Если ИспользоватьОбмен И ОбменНастроен Тогда
		ВыполнитьОбработкуОповещения(Оповещение, Истина);
	Иначе
		Отпечаток = СертификатУчетнойЗаписи(Организация);
			
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Сертификат", Отпечаток);
		ПараметрыФормы.Вставить("ОрганизацияСсылка", Организация);
		
		ОткрытьФорму("РегистрСведений.НастройкиОбменаРЭЦ.Форма.ФормаЗаписи", ПараметрыФормы,,,,, Оповещение); // ФормаРегистрации -> ФормаЗаписи
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция СертификатУчетнойЗаписи(Организация)
	
	УчетнаяЗапись = Организация.УчетнаяЗаписьОбмена;
	
	Сертификат = Мультирежим.СертификатПользователя(УчетнаяЗапись, "Отпечаток");
	Если НЕ Сертификат.Найден Тогда
		ТекстСообщения = Сертификат.ТекстОшибки;
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;

	Возврат Сертификат.Отпечаток;

КонецФункции

&НаКлиенте
Процедура ОтправкаВРЭЦПослеНастроек(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Истина Тогда
		МодульВыгрузки = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента",,); //Контекст.ВладелецФормы

		МассивВыгрузкиДекларация = Новый Массив;
		ИменаФайловДекларация = Новый Массив;
		КодировкаДекларация = "";

		ВыгрузкаВыполненаДекларация = МодульВыгрузки.ВыгрузитьОтчет(
			ДекларацияНДС, Ложь, Ложь, 
			МассивВыгрузкиДекларация, ИменаФайловДекларация, 
			КодировкаДекларация, Ложь);
			
		Если ВыгрузкаВыполненаДекларация <> Истина Тогда
			Возврат;		
		КонецЕсли;      
		
		Для Каждого ИмяФайлаДекларации Из ИменаФайловДекларация Цикл
			Если СтрНачинаетсяС(ИмяФайлаДекларации, "NO_NDS_") Тогда
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		УстановитьИмяФайлаВыгрузкиДеклНДС(РеестрНДС, ИмяФайлаДекларации);     
		
		МодульВыгрузки = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента",,); //Контекст.ВладелецФормы
		
		МассивВыгрузкиРеестрНДС = Новый Массив;
		ИменаФайловРеестрНДС = Новый Массив;
		КодировкаРеестрНДС = "";

		ВыгрузкаВыполненаРеестрНДС = МодульВыгрузки.ВыгрузитьОтчет(
			РеестрНДС, Ложь, Ложь, 
			МассивВыгрузкиРеестрНДС, ИменаФайловРеестрНДС, 
			КодировкаРеестрНДС, Ложь);
			
		Если ВыгрузкаВыполненаРеестрНДС <> Истина Тогда
			Возврат;		
		КонецЕсли;    
		
		ОтправкаВРЭЦПослеВыгрузки(МассивВыгрузкиДекларация, МассивВыгрузкиРеестрНДС);
	Иначе 
		Возврат;
	КонецЕсли;
	
КонецПроцедуры       


&НаСервереБезКонтекста
Процедура УстановитьИмяФайлаВыгрузкиДеклНДС(РеестрНДС, ИмяФайлаВыгрузкиДеклНДС)

	РеестрНДСОбъект = РеестрНДС.ПолучитьОбъект();
	Данные = РеестрНДСОбъект.ДанныеОтчета.Получить();

	Данные.ИмяФайлаВыгрузкиДеклНДС = СтрЗаменить(ИмяФайлаВыгрузкиДеклНДС, ".xml", "");    
	РеестрНДСОбъект.ДанныеОтчета = Новый ХранилищеЗначения(Данные);    
	РеестрНДСОбъект.Записать();
	
КонецПроцедуры


&НаКлиенте
Процедура ОтправкаВРЭЦПослеВыгрузки(МассивВыгрузкиДекларация, МассивВыгрузкиРеестрНДС)
	 
	СписокОтправки = Новый Массив;
	СписокОтправки.Добавить(ДекларацияНДС);
	СписокОтправки.Добавить(РеестрНДС);
	Для Каждого СтрВложения Из ВложенияПоДоговорам Цикл
		Если ЗначениеЗаполнено(СтрВложения.Файл) Тогда
			СписокОтправки.Добавить(СтрВложения.Файл);
		КонецЕсли;
	КонецЦикла;
	
	ИнформацияПоДекларацииНДС = ПолучитьДанныеПоДекларацииДляОтправки(ДекларацияНДС); 
	
	ПараметрыДлительнойОтправки = ДлительнаяОтправкаКлиент.ПараметрыДлительнойОтправки();
	ПараметрыДлительнойОтправки.ОтчетСсылка 				= РеестрНДС;
	ПараметрыДлительнойОтправки.ОбщееКоличествоЭтапов 		= СписокОтправки.Количество();
	//ПараметрыДлительнойОтправки.КонтекстДлительнойОперации 	= КонтекстДлительнойОперации;
	ПараметрыДлительнойОтправки.Вставить("НаименованиеКонтролирующегоОргана", "РЭЦ");
	
	Если НЕ ДлительнаяОтправкаКлиент.ПоказатьФормуДлительнойОтправки(ПараметрыДлительнойОтправки) Тогда // отправка отчета в ФНС
		Возврат;
	КонецЕсли;
	
	ОповещениеОЗакрытииФормыДлительногоДействия = Новый ОписаниеОповещения("ДлительноеДействие_Закрытие", ЭтотОбъект); 
	ПараметрыДляПередачиВФорму = Новый Структура;
	ПараметрыДляПередачиВФорму.Вставить("ВыполняемоеОповещение", ОповещениеОЗакрытииФормыДлительногоДействия);
	
	Оповестить("", ПараметрыДляПередачиВФорму);

	МодульДокументооборотСРЭЦКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДокументооборотСРЭЦКлиент"); 
	
	Контекст = Новый Структура;
	Контекст.Вставить("Отправка", "Декларация");
	Контекст.Вставить("ИнформацияПоДекларацииНДС", ИнформацияПоДекларацииНДС);
	Контекст.Вставить("МассивВыгрузки", МассивВыгрузкиРеестрНДС);
	Контекст.Вставить("СписокОтправки", СписокОтправки); 
	Контекст.Вставить("МодульДокументооборотСРЭЦКлиент", МодульДокументооборотСРЭЦКлиент);
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьОтчет_Продолжение", ЭтотОбъект, Контекст);
	
	МодульДокументооборотСРЭЦКлиент.ОтправитьОтчет(
			Организация,
			ДекларацияНДС,
			ИнформацияПоДекларацииНДС,
			СписокОтправки,  
			МассивВыгрузкиДекларация,
			ВладелецФормы,
			Неопределено, 
			ОписаниеОповещения);  
	
КонецПроцедуры  

&НаКлиенте
Процедура ОтправитьОтчет_Продолжение(Результат, Контекст) Экспорт
	
	Если Результат.Выполнено = Истина Тогда 
		
		НовыйКонтекст = Новый Структура;    
		НовыйКонтекст.Вставить("МодульДокументооборотСРЭЦКлиент", Контекст.МодульДокументооборотСРЭЦКлиент);
		НовыйКонтекст.Вставить("ИнформацияПоДекларацииНДС", Контекст.ИнформацияПоДекларацииНДС);
		НовыйКонтекст.Вставить("СписокОтправки", Контекст.СписокОтправки);
		НовыйКонтекст.Вставить("МассивВыгрузки", Неопределено);
		
		КонтекстСессии = Новый Структура;
		КонтекстСессии.Вставить("access_token", Результат.access_token);
		КонтекстСессии.Вставить("claims__mdm_id", Результат.claims__mdm_id);
		КонтекстСессии.Вставить("Отправка", Результат.Отправка);
		
		ОбъектОтправки = Неопределено;
		Если Контекст.Отправка = "Декларация" Тогда 		
			НовыйКонтекст.Вставить("Отправка", "Реестр");
			ОбъектОтправки = РеестрНДС;
		ИначеЕсли Контекст.Отправка = "Реестр" Тогда 
			НовыйКонтекст.Вставить("Отправка", "Вложения");
			Если ВложенияПоДоговорам.Количество() > 0 Тогда
				СтрВложения = ВложенияПоДоговорам.Получить(0);
				
				НовыйКонтекст.Вставить("ИндексВложения", 0);
				ОбъектОтправки = СтрВложения.Файл;
			КонецЕсли;
		ИначеЕсли Контекст.Отправка = "Вложения" Тогда  
			НовыйКонтекст.Вставить("Отправка", "Вложения"); 
			Если ВложенияПоДоговорам.Количество() > Контекст.ИндексВложения + 1 Тогда
				СтрВложения = ВложенияПоДоговорам.Получить(Контекст.ИндексВложения + 1);
				
				НовыйКонтекст.Вставить("ИндексВложения", Контекст.ИндексВложения + 1);
				ОбъектОтправки = СтрВложения.Файл;	
			КонецЕсли;
		КонецЕсли;  
		
		Если ОбъектОтправки <> Неопределено Тогда       
			ДлительнаяОтправкаКлиент.ВывестиСостояние("");
			
			ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьОтчет_Продолжение", ЭтотОбъект, НовыйКонтекст);		
			Контекст.МодульДокументооборотСРЭЦКлиент.ОтправитьОтчет(
						Организация,
						ОбъектОтправки,
						Контекст.ИнформацияПоДекларацииНДС,
						Контекст.СписокОтправки,
						Контекст.МассивВыгрузки,
						ВладелецФормы,
						КонтекстСессии,
						ОписаниеОповещения); 
		Иначе                      
			//ПараметрОповещения = Новый Структура;
			//ПараметрОповещения.Вставить("ДополнительноеСообщение", НСтр("ru='Для обновления статуса проверки нажмите кнопку ""Обновить"" в панели сервиса ""Мой экспорт"".'"));
			Оповестить("Успешная отправка"); //ПараметрОповещения
			//ДлительнаяОтправкаКлиент.ЗакрытьФормуДлительнойОтправкиБезДальнейшихДействий(); 
			
			//ВладелецФормы.ОбновитьОтображениеДанных();
			//Закрыть();				
		КонецЕсли;
	Иначе
		ДлительнаяОтправкаКлиент.ЗакрытьФормуДлительнойОтправкиБезДальнейшихДействий();
		Если Результат.Свойство("Ошибка") Тогда
			ТекстОшибки = Результат.Ошибка;
		Иначе
			ТекстОшибки = НСтр("ru = 'Не удалось выполнить отправку';
								|en = 'Не удалось выполнить отправку'");
		КонецЕсли;
		ПоказатьПредупреждение(, ТекстОшибки, , "Ошибка");
	КонецЕсли;
	
КонецПроцедуры    

&НаКлиенте
Процедура ДлительноеДействие_Закрытие(Результат, ДополнительныеПараметры) Экспорт
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСервер.ОбновитьПанельСостоянияОтправкиВРегламентированномОтчете(
		ВладелецФормы, 
		"РЭЦ");
		
	Если Результат <> Ложь Тогда
		Закрыть(); 
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьДанныеПоДекларацииДляОтправки(Декларация)
	
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Декларация, "ДатаНачала, ДатаОкончания");
	
КонецФункции

&НаКлиенте
Процедура ВопросПередЗаполнениемТабличнойЧастиЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		ЗаполнитьНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаСервере()
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ДекларацияНДС", ДекларацияНДС);
	ПараметрыЗаполнения.Вставить("Организация", Организация);
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор);
	ПараметрыЗаполнения.Вставить("АдресВоВременномХранилище", АдресВоВременномХранилище);
	
	ВложенияПоДоговорам.Очистить();
	
	РегламентированнаяОтчетность.ЗаполнениеДанныхПоДоговорамДляПроверкиВРЭЦ(ПараметрыЗаполнения);
	
	РезультатЗаполненияДанных = ПолучитьИзВременногоХранилища(АдресВоВременномХранилище);
	Если РезультатЗаполненияДанных <> Неопределено Тогда
		ВложенияПоДоговорам.Загрузить(РезультатЗаполненияДанных);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьДанныеПоФайлу()
	ТекущиеДанные = Элементы.ВложенияПоДоговорам.ТекущиеДанные;
	Если ЗначениеЗаполнено(ТекущиеДанные.Файл) Тогда
		РеквизитыФайла = ПолучитьРеквизитыФайлаНаСервере(ТекущиеДанные.Файл);
		Если РеквизитыФайла <> Неопределено Тогда
			ТекущиеДанные.ИндексКартинки = РеквизитыФайла.ИндексКартинки;
			ТекущиеДанные.Наименование = РеквизитыФайла.Наименование;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПредставлениеОтчета(РегОтчет)
	
	Если ЗначениеЗаполнено(РегОтчет) Тогда
		Возврат РегОтчет.НаименованиеОтчета + " за " + РегОтчет.ПредставлениеПериода
			+ " (Вид: " + СтрЗаменить(СтрЗаменить(СокрЛП(РегОтчет.ПредставлениеВида),
			"П", "первичная"), "К/", "Номер корректировки: ")
			+ ")";
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция  ПолучитьРеквизитыФайлаНаСервере(Файл)
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Файл,"Наименование, ИндексКартинки");
КонецФункции

&НаКлиенте
Процедура ОчиститьДанныеПоФайлу()
	
	ТекущиеДанные = Элементы.ВложенияПоДоговорам.ТекущиеДанные;
	ТекущиеДанные.ИндексКартинки = 0;
	ТекущиеДанные.Наименование   = "";
	ТекущиеДанные.Файл           = Неопределено;
	
КонецПроцедуры

&НаКлиенте
Процедура Настройки(Команда)
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ОрганизацияСсылка", Организация);
	
	Отпечаток = СертификатУчетнойЗаписи(Организация);
			
	ПараметрыФормы.Вставить("Сертификат", Отпечаток);
			
	ОткрытьФорму("РегистрСведений.НастройкиОбменаРЭЦ.ФормаЗаписи", ПараметрыФормы, ЭтотОбъект, УникальныйИдентификатор,,,,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

#КонецОбласти