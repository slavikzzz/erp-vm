
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ОбработатьПереданныеПараметры();
	
	Если НЕ ДоступнаНастройкаСчетовРеглУчета()
		И НЕ ДоступнаНастройкаСчетовМеждународногоУчета() Тогда
		Отказ = Истина;
	Иначе
		УправлениеРеквизитамиЭлементамиФормыПриСоздании();
		ВывестиНаФормуДанныеНастройки(Параметры.ДанныеНастройки);
		
		// Выбор статей и аналитик.
		ПараметрыВыбораСтатейИАналитик = ПараметрыВыбораСтатейИАналитик();
		ДоходыИРасходыСервер.ПриЧтенииНаСервере(ЭтотОбъект, ПараметрыВыбораСтатейИАналитик);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГруппаСтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	
	//++ НЕ УТКА
	Если СтрНачинаетсяС(ТекущаяСтраница.Имя, "СтраницаМеждународный") Тогда
		НомерПланаСчетов = СтрЗаменить(ТекущаяСтраница.Имя, "СтраницаМеждународный", "");
		ИзменитьПараметрыВыбораПоляСчетУчетаМеждународный(ЭтотОбъект, НомерПланаСчетов);
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат; // В КА обработчик пустой
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяАктивовПассивовНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	// Выбор статей и аналитик.
	ДоходыИРасходыКлиент.НачалоВыбораСтатьи(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура СтатьяАктивовПассивовПриИзменении(Элемент)
	
	СтатьяАктивовПассивовПриИзмененииНаСервере();
	
	// Выбор статей и аналитик.
	ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(ЭтотОбъект, Элемент);
	
КонецПроцедуры

&НаСервере
Процедура СтатьяАктивовПассивовПриИзмененииНаСервере()
	
	МеждународнаяНастройкаДоступна = ДоступнаНастройкаСчетовМеждународногоУчета();
	
	Если МеждународнаяНастройкаДоступна И ПланыСчетовМеждународные.Количество() = 0 Тогда
		ДобавитьРеквизитыЭлементыМеждународногоУчета();
	ИначеЕсли НЕ МеждународнаяНастройкаДоступна И ПланыСчетовМеждународные.Количество() > 0 Тогда
		УдалитьРеквизитыЭлементыМеждународногоУчета();
	КонецЕсли;
	
КонецПроцедуры

//++ Локализация

&НаКлиенте
Процедура Подключаемый_СчетУчетаПриИзменении(Элемент)
	
	СчетУчетаПриИзмененииСервер();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоПриИзменении(Элемент)
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

//-- Локализация

&НаКлиенте
Процедура Подключаемый_СчетУчетаМеждународныйУчетПриИзменении(Элемент)
	
	//++ НЕ УТКА
	НомерПланаСчетов = СтрЗаменить(Элемент.Имя, "СчетУчета", "");
	
	СчетУчетаМеждународныйПриИзмененииСервер(НомерПланаСчетов);
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СчетУчетаМеждународныйУчетНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	//++ НЕ УТКА
	НомерПланаСчетов = СтрЗаменить(Элемент.Имя, "СчетУчета", "");
	//-- НЕ УТКА
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_СубконтоМеждународныйПриИзменении(Элемент)
	
	//++ НЕ УТКА
	НомерПланаСчетов = СтрЗаменить(Элемент.Имя, "Субконто", "");
	НомерПланаСчетов = Лев(НомерПланаСчетов, СтрДлина(НомерПланаСчетов) - 1);
	
	ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ЭтотОбъект, НомерПланаСчетов);
	//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗагрузитьНастройкиСчетовИзСтатьи(Команда)
	
	ЗагрузитьНастройкиСчетовИзСтатьиНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура ОК(Команда)
	
	ДанныеНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовУчета();
	
	//++ Локализация
	Если ДоступнаНастройкаСчетовРеглУчета() Тогда
		ДанныеНастройки.СчетУчета = СчетУчета;
		ДанныеНастройки.Субконто1 = Субконто1;
		ДанныеНастройки.Субконто2 = Субконто2;
		ДанныеНастройки.Субконто3 = Субконто3;
	КонецЕсли;
	//-- Локализация
	
	//++ НЕ УТКА
	НомерПланаСчетов = 1;
	
	Для Каждого ПланСчетов Из ПланыСчетовМеждународные Цикл
		Если ЗначениеЗаполнено(ЭтотОбъект["СчетУчета" + НомерПланаСчетов]) Тогда
			ДанныеМеждународнойНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовМеждународногоУчета();
			ДанныеМеждународнойНастройки.ПланСчетов = ПланСчетов;
			ДанныеМеждународнойНастройки.СчетУчета =  ЭтотОбъект["СчетУчета" + НомерПланаСчетов];
			ДанныеМеждународнойНастройки.Субконто1 =  ЭтотОбъект["Субконто" + НомерПланаСчетов + "1"];
			ДанныеМеждународнойНастройки.Субконто2 =  ЭтотОбъект["Субконто" + НомерПланаСчетов + "2"];
			ДанныеМеждународнойНастройки.Субконто3 =  ЭтотОбъект["Субконто" + НомерПланаСчетов + "3"];
			ДанныеНастройки.НастройкиМеждународногоУчета.Добавить(ДанныеМеждународнойНастройки);
		КонецЕсли;
		НомерПланаСчетов = НомерПланаСчетов + 1;
	КонецЦикла;
	
	Для Каждого НедоступнаяНастройка Из НедоступныеНастройкиСчетов Цикл
		Если ЗначениеЗаполнено(НедоступнаяНастройка.СчетУчета) Тогда
			ДанныеМеждународнойНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовМеждународногоУчета();
			ЗаполнитьЗначенияСвойств(ДанныеМеждународнойНастройки, НедоступнаяНастройка);
			ДанныеНастройки.НастройкиМеждународногоУчета.Добавить(ДанныеМеждународнойНастройки);
		КонецЕсли;
	КонецЦикла;
	//-- НЕ УТКА
	
	ВозвращаемоеЗначение = Новый Структура();
	ВозвращаемоеЗначение.Вставить("ДанныеНастройки", ДанныеНастройки);
	ВозвращаемоеЗначение.Вставить("СтатьяАктивовПассивов", СтатьяАктивовПассивов);
	ВозвращаемоеЗначение.Вставить("АналитикаАктивовПассивов", АналитикаАктивовПассивов);
	
	Если ЗначениеЗаполнено(НастройкаСчетовУчета) Тогда
		ВозвращаемоеЗначение.Вставить("НастройкаСчетовУчета", НастройкаСчетовУчета);
	Иначе
		ВозвращаемоеЗначение.Вставить("НастройкаСчетовУчета", НастройкаСчетовУчетаСлужебныйВызовСервера.СсылкаНовогоЭлементаНастройкиСчетовУчета());
	КонецЕсли;
	
	Закрыть(ВозвращаемоеЗначение);
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	
	Модифицированность = Ложь;
	Закрыть();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияФормы

&НаСервере
Процедура ОбработатьПереданныеПараметры()
	
	Период = Параметры.Период;
	НастройкаСчетовУчета = Параметры.НастройкаСчетовУчета;
	
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.КонтекстНастройки);
	ИсточникиПодбораСубконто.ЗагрузитьЗначения(Параметры.ИсточникиПодбораСубконто.ВыгрузитьЗначения());
	
	СтатьиСНастройкамиПоОбъектам = Новый ФиксированныйМассив(ОбщегоНазначенияУТКлиентСервер.Массив(Параметры.СтатьиСНастройкамиПоОбъектам));
	
КонецПроцедуры

&НаСервере
Функция ДоступнаНастройкаСчетовРеглУчета()
	
	НастройкаДоступна = НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета();
	
	Возврат НастройкаДоступна;
	
КонецФункции

&НаСервере
Функция ДоступнаНастройкаСчетовМеждународногоУчета()
	
	НастройкаДоступна = НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета();
	
	//++ НЕ УТКА
	Если НастройкаДоступна Тогда
		Если ТипЗнч(НастройкаСчетовУчета) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			НастройкаДоступна = СтатьиСНастройкамиПоОбъектам.Найти(НастройкаСчетовУчета) = Неопределено;
		Иначе
			НастройкаДоступна = ЗначениеЗаполнено(СтатьяАктивовПассивов)
				И СтатьиСНастройкамиПоОбъектам.Найти(СтатьяАктивовПассивов) = Неопределено;
			
			Если НЕ НастройкаДоступна Тогда
				ДанныеНастройки = Неопределено;
				Если Параметры.Свойство("ДанныеНастройки", ДанныеНастройки) И ТипЗнч(ДанныеНастройки) = Тип("Структура") Тогда
					Для Каждого ДанныеМеждународнойНастройки Из ДанныеНастройки.НастройкиМеждународногоУчета Цикл
						Если ЗначениеЗаполнено(ДанныеМеждународнойНастройки.СчетУчета) Тогда
							НастройкаДоступна = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат НастройкаДоступна;
	
КонецФункции

&НаСервере
Процедура УправлениеРеквизитамиЭлементамиФормыПриСоздании()
	
	ТолькоПросмотр = Параметры.ТолькоПросмотр;
	Элементы.КнопкаОК.Видимость = Не Параметры.ТолькоПросмотр;
	
	Если НЕ ЗначениеЗаполнено(СтатьяАктивовПассивов) Тогда
		Элементы.ГруппаСтатьяАналитикаАктивовПассивов.Видимость = Ложь;
	КонецЕсли;
	
	Если ДоступнаНастройкаСчетовРеглУчета() Тогда
		Элементы.СтраницаРеглУчет.Видимость = Истина;
		//++ Локализация
		УстановитьОбработчикиСобытийРегламентированногоУчета();
		//-- Локализация
	Иначе
		Элементы.СтраницаРеглУчет.Видимость = Ложь;
	КонецЕсли;
	
	Если ДоступнаНастройкаСчетовМеждународногоУчета() Тогда
		ДобавитьРеквизитыЭлементыМеждународногоУчета();
	Иначе
		ПланыСчетовМеждународные = Новый ФиксированныйМассив(Новый Массив());
		УправлениеЭлементамиОтображенияСчетов();
	КонецЕсли;
	
	//++ НЕ УТКА
	Если ПланыСчетовМеждународные.Количество() > 0 Тогда
		НомерПланаСчетов = 1;
		ИзменитьПараметрыВыбораПоляСчетУчетаМеждународный(ЭтотОбъект, НомерПланаСчетов);
	КонецЕсли;
	//-- НЕ УТКА
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиОтображенияСчетов()
	
	КоличествоВидимыхСчетов = 0;
	
	Для Каждого СтраницаСчета Из Элементы.ГруппаСтраницы.ПодчиненныеЭлементы Цикл
		КоличествоВидимыхСчетов = КоличествоВидимыхСчетов + СтраницаСчета.Видимость;
	КонецЦикла;
	
	Если КоличествоВидимыхСчетов = 0 Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Ложь;
		Заголовок = НСтр("ru = 'Настройка счетов учета не требуется';
						|en = 'Ledger account setup is not required'");
	ИначеЕсли КоличествоВидимыхСчетов = 1 Тогда
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Истина;
		Элементы.ЗагрузитьНастройкиСтатьи.Заголовок = НСтр("ru = 'Загрузить счет из статьи';
															|en = 'Import an account from an item'");
		Если ТипЗнч(НастройкаСчетовУчета) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			Заголовок = НСтр("ru = 'Настройка счета учета в документах по умолчанию';
							|en = 'Set up a ledger account in default documents'");
		Иначе
			Заголовок = НСтр("ru = 'Настройка счета учета операции';
							|en = 'Set up a transaction ledger account'");
		КонецЕсли;
	Иначе
		Элементы.ГруппаСтраницы.ОтображениеСтраниц = ОтображениеСтраницФормы.ЗакладкиСверху;
		Элементы.ЗагрузитьНастройкиСтатьи.Видимость = Истина;
		Элементы.ЗагрузитьНастройкиСтатьи.Заголовок = НСтр("ru = 'Загрузить счета из статьи';
															|en = 'Import accounts from item'");
		Если ТипЗнч(НастройкаСчетовУчета) = Тип("ПланВидовХарактеристикСсылка.СтатьиАктивовПассивов") Тогда
			Заголовок = НСтр("ru = 'Настройка счетов учета в документах по умолчанию';
							|en = 'Set up ledger accounts in default documents'");
		Иначе
			Заголовок = НСтр("ru = 'Настройка счетов учета операции';
							|en = 'Transaction ledger accounts settings'");
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьРеквизитыЭлементыМеждународногоУчета()
	
	МассивПлановСчетов = Новый Массив();
	
	//++ НЕ УТКА
	
	Запрос = Новый Запрос();
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПланыСчетов.Ссылка КАК Ссылка,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ПланыСчетов.Ссылка) КАК СсылкаПредставление
	|ИЗ
	|	Справочник.ПланыСчетовМеждународногоУчета КАК ПланыСчетов
	|ГДЕ
	|	НЕ ПланыСчетов.ПометкаУдаления";
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Запрос.Текст = Запрос.Текст + "
		|	И ПланыСчетов.Ссылка В (
		|		ВЫБРАТЬ
		|			ПланыСчетовОрганизаций.ПланСчетов
		|		ИЗ
		|			РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|			) КАК ПланыСчетовОрганизаций
		|		ГДЕ
		|			ПланыСчетовОрганизаций.НастройкаФормированияПроводок <> ЗНАЧЕНИЕ(Справочник.НастройкиФормированияПроводокМеждународногоУчета.ПустаяСсылка)
		|	)
		|";
		Запрос.УстановитьПараметр("Период", Период);
		Запрос.УстановитьПараметр("Организация", Организация);
	КонецЕсли;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ДобавляемыеРеквизиты = Новый Массив();
	
	Для НомерПланаСчетов = 1 По Выборка.Количество() Цикл
		ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("СчетУчета" + НомерПланаСчетов,
			Новый ОписаниеТипов("ПланСчетовСсылка.Международный")));
		
		Для НомерСубконто = 1 По 3 Цикл
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("Субконто" + НомерПланаСчетов + НомерСубконто,
				Новый ОписаниеТипов("Неопределено")));
			ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ЗаголовокСубконто" + НомерПланаСчетов + НомерСубконто,
				ОбщегоНазначения.ОписаниеТипаСтрока(0)));
		КонецЦикла;
	КонецЦикла;
	
	Если ДобавляемыеРеквизиты.Количество() > 0 Тогда
		ИзменитьРеквизиты(ДобавляемыеРеквизиты);
	Иначе
		ПланыСчетовМеждународные = Новый ФиксированныйМассив(МассивПлановСчетов);
		Возврат;
	КонецЕсли;
	
	НомерПланаСчетов = 1;
	
	Пока Выборка.Следующий() Цикл
		МассивПлановСчетов.Добавить(Выборка.Ссылка);
		
		НоваяСтраница = Элементы.Добавить("СтраницаМеждународный" + НомерПланаСчетов, Тип("ГруппаФормы"), Элементы.ГруппаСтраницы);
		НоваяСтраница.Вид = ВидГруппыФормы.Страница;
		НоваяСтраница.Заголовок = Выборка.СсылкаПредставление;
		НоваяСтраница.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		
		НовыеЗаголовки = Элементы.Добавить("ГруппаЗаголовки" + НомерПланаСчетов, Тип("ГруппаФормы"), НоваяСтраница);
		НовыеЗаголовки.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		НовыеЗаголовки.Отображение = ОтображениеОбычнойГруппы.Нет;
		НовыеЗаголовки.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		НовыеЗаголовки.Объединенная = Ложь;
		НовыеЗаголовки.ОтображатьЗаголовок = Ложь;
		
		НоваяДекорация = Элементы.Добавить("ДекорацияСчетУчета" + НомерПланаСчетов, Тип("ДекорацияФормы"), НовыеЗаголовки);
		НоваяДекорация.Вид = ВидДекорацииФормы.Надпись;
		НоваяДекорация.Заголовок = НСтр("ru = 'Счет учета';
										|en = 'Ledger account'");
		НоваяДекорация.РастягиватьПоГоризонтали = Истина;
		НоваяДекорация.АвтоМаксимальнаяШирина = Ложь;
		НоваяДекорация.МаксимальнаяШирина = 60;
		
		Для НомерСубконто = 1 По 3 Цикл
			НовыйЗаголовок = Элементы.Добавить("ЗаголовокСубконто" + НомерПланаСчетов + НомерСубконто, Тип("ПолеФормы"), НовыеЗаголовки);
			НовыйЗаголовок.Вид = ВидПоляФормы.ПолеНадписи;
			НовыйЗаголовок.ПутьКДанным = "ЗаголовокСубконто" + НомерПланаСчетов + НомерСубконто;
			НовыйЗаголовок.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовыйЗаголовок.РастягиватьПоГоризонтали = Истина;
			НовыйЗаголовок.АвтоМаксимальнаяШирина = Ложь;
			НовыйЗаголовок.МаксимальнаяШирина = 60;
			НовыйЗаголовок.Видимость = Ложь;
		КонецЦикла;
		
		НовыйСчетСубконто = Элементы.Добавить("ГруппаСчетСубконто" + НомерПланаСчетов, Тип("ГруппаФормы"), НоваяСтраница);
		НовыйСчетСубконто.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		НовыйСчетСубконто.Отображение = ОтображениеОбычнойГруппы.Нет;
		НовыйСчетСубконто.Группировка = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		НовыйСчетСубконто.Объединенная = Ложь;
		НовыйСчетСубконто.ОтображатьЗаголовок = Ложь;
		
		НовыйСчетНаименование = Элементы.Добавить("ГруппаСчетУчетаНаименование" + НомерПланаСчетов, Тип("ГруппаФормы"), НовыйСчетСубконто);
		НовыйСчетНаименование.Вид = ВидГруппыФормы.ОбычнаяГруппа;
		НовыйСчетНаименование.Отображение = ОтображениеОбычнойГруппы.Нет;
		НовыйСчетНаименование.Группировка = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		НовыйСчетНаименование.Объединенная = Истина;
		НовыйСчетНаименование.ОтображатьЗаголовок = Ложь;
		
		НовыйСчет = Элементы.Добавить("СчетУчета" + НомерПланаСчетов, Тип("ПолеФормы"), НовыйСчетНаименование);
		НовыйСчет.Вид = ВидПоляФормы.ПолеВвода;
		НовыйСчет.ПутьКДанным = "СчетУчета" + НомерПланаСчетов;
		НовыйСчет.УстановитьДействие("НачалоВыбора", "Подключаемый_СчетУчетаМеждународныйУчетНачалоВыбора");
		НовыйСчет.УстановитьДействие("ПриИзменении", "Подключаемый_СчетУчетаМеждународныйУчетПриИзменении");
		НовыйСчет.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		НовыйСчет.РастягиватьПоГоризонтали = Ложь;
		НовыйСчет.Ширина = 9;
		
		НовоеНаименование = Элементы.Добавить("СчетУчетаНаименование" + НомерПланаСчетов, Тип("ПолеФормы"), НовыйСчетНаименование);
		НовоеНаименование.Вид = ВидПоляФормы.ПолеНадписи;
		НовоеНаименование.ПутьКДанным = "СчетУчета" + НомерПланаСчетов + ".Наименование";
		НовоеНаименование.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
		
		Для НомерСубконто = 1 По 3 Цикл
			НовоеСубконто = Элементы.Добавить("Субконто" + НомерПланаСчетов + НомерСубконто, Тип("ПолеФормы"), НовыйСчетСубконто);
			НовоеСубконто.Вид = ВидПоляФормы.ПолеВвода;
			НовоеСубконто.ПутьКДанным = "Субконто" + НомерПланаСчетов + НомерСубконто;
			НовоеСубконто.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоМеждународныйПриИзменении");
			НовоеСубконто.ПоложениеЗаголовка = ПоложениеЗаголовкаЭлементаФормы.Нет;
			НовоеСубконто.Видимость = Ложь;
		КонецЦикла;
		
		НомерПланаСчетов = НомерПланаСчетов + 1;
	КонецЦикла;
	
	//-- НЕ УТКА
	
	ПланыСчетовМеждународные = Новый ФиксированныйМассив(МассивПлановСчетов);
	
	УправлениеЭлементамиОтображенияСчетов();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьРеквизитыЭлементыМеждународногоУчета()
	
	//++ НЕ УТКА
	УдаляемыеРеквизиты = Новый Массив();
	
	Для НомерПланаСчетов = 1 По ПланыСчетовМеждународные.Количество() Цикл
		УдаляемаяСтраница = Элементы["СтраницаМеждународный" + НомерПланаСчетов];
		Элементы.Удалить(УдаляемаяСтраница);
		
		УдаляемыеРеквизиты.Добавить("СчетУчета" + НомерПланаСчетов);
		Для НомерСубконто = 1 По 3 Цикл
			УдаляемыеРеквизиты.Добавить("Субконто" + НомерПланаСчетов + НомерСубконто);
			УдаляемыеРеквизиты.Добавить("ЗаголовокСубконто" + НомерПланаСчетов + НомерСубконто);
		КонецЦикла;
	КонецЦикла;
	
	Если УдаляемыеРеквизиты.Количество() > 0 Тогда
		ИзменитьРеквизиты(, УдаляемыеРеквизиты);
	КонецЕсли;
	//-- НЕ УТКА
	
	ПланыСчетовМеждународные = Новый ФиксированныйМассив(Новый Массив());
	НедоступныеНастройкиСчетов = Новый ФиксированныйМассив(Новый Массив());
	
	УправлениеЭлементамиОтображенияСчетов();
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНаФормуДанныеНастройки(ДанныеНастройки, ЗагрузкаИзСтатьи = Ложь)
	
	//++ Локализация
	Если НЕ ЗагрузкаИзСтатьи ИЛИ ДоступнаНастройкаСчетовРеглУчета() Тогда
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, ДанныеНастройки, НастройкаСчетовУчетаКлиентСервер.РеквизитыНастройкиСчетаУчета());
		Если Элементы.СтраницаРеглУчет.Видимость Тогда
			УправлениеЭлементамиФормыРегламентированногоУчета();
		КонецЕсли;
	КонецЕсли;
	//-- Локализация
	
	//++ НЕ УТКА
	НедоступныеНастройки = Новый Массив();
	
	Для Каждого НастройкаМеждународногоУчета Из ДанныеНастройки.НастройкиМеждународногоУчета Цикл
		ИндексПланаСчетов = ПланыСчетовМеждународные.Найти(НастройкаМеждународногоУчета.ПланСчетов);
		
		Если ИндексПланаСчетов <> Неопределено Тогда
			НомерПланаСчетов = ИндексПланаСчетов + 1;
			ЭтотОбъект["СчетУчета" + НомерПланаСчетов] = НастройкаМеждународногоУчета.СчетУчета;
			ЭтотОбъект["Субконто" + НомерПланаСчетов + "1"] = НастройкаМеждународногоУчета.Субконто1;
			ЭтотОбъект["Субконто" + НомерПланаСчетов + "2"] = НастройкаМеждународногоУчета.Субконто2;
			ЭтотОбъект["Субконто" + НомерПланаСчетов + "3"] = НастройкаМеждународногоУчета.Субконто3;
			УправлениеЭлементамиФормыМеждународногоУчета(НомерПланаСчетов);
		ИначеЕсли НЕ ЗагрузкаИзСтатьи Тогда
			НедоступнаяНастройка = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовМеждународногоУчета();
			ЗаполнитьЗначенияСвойств(НедоступнаяНастройка, НастройкаМеждународногоУчета);
			НедоступныеНастройки.Добавить(НедоступнаяНастройка);
		КонецЕсли;
	КонецЦикла;
	
	Если НЕ ЗагрузкаИзСтатьи Тогда
		НедоступныеНастройкиСчетов = Новый ФиксированныйМассив(НедоступныеНастройки);
	КонецЕсли;
	//-- НЕ УТКА
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура ЗагрузитьНастройкиСчетовИзСтатьиНаСервере()
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СтатьяАктивовПассивов", СтатьяАктивовПассивов);
	Запрос.Текст = "
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СтатьиАктивовПассивов.Ссылка    КАК Ссылка
	//++ Локализация
	|	,
	|	СтатьиАктивовПассивов.СчетУчета КАК СчетУчета,
	|	СтатьиАктивовПассивов.Субконто1 КАК Субконто1,
	|	СтатьиАктивовПассивов.Субконто2 КАК Субконто2,
	|	СтатьиАктивовПассивов.Субконто3 КАК Субконто3
	//-- Локализация

	//++ НЕ УТКА
	|	,
	|	СтатьиАктивовПассивов.НастройкиМеждународногоУчета КАК НастройкиМеждународногоУчета
	//-- НЕ УТКА
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|ГДЕ
	|	СтатьиАктивовПассивов.Ссылка = &СтатьяАктивовПассивов
	|";
	
	Результат = Запрос.Выполнить();
	ВыборкаНастройки = Результат.Выбрать();
	ДанныеНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовУчета();
	
	Пока ВыборкаНастройки.Следующий() Цикл
		//++ Локализация
		ЗаполнитьЗначенияСвойств(ДанныеНастройки, ВыборкаНастройки, НастройкаСчетовУчетаКлиентСервер.РеквизитыНастройкиСчетаУчета());
		//-- Локализация

		//++ НЕ УТКА
		РезультатНастройкиМеждународногоУчета = ВыборкаНастройки.НастройкиМеждународногоУчета; // ВыборкаИзРезультатаЗапроса - 
		ВыборкаНастройкиМеждународногоУчета = РезультатНастройкиМеждународногоУчета.Выбрать();
		Пока ВыборкаНастройкиМеждународногоУчета.Следующий() Цикл
			ДанныеМеждународнойНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовМеждународногоУчета();
			ЗаполнитьЗначенияСвойств(ДанныеМеждународнойНастройки, ВыборкаНастройкиМеждународногоУчета);
			ДанныеНастройки.НастройкиМеждународногоУчета.Добавить(ДанныеМеждународнойНастройки);
		КонецЦикла;
		//-- НЕ УТКА
	КонецЦикла;
	
	ВывестиНаФормуДанныеНастройки(ДанныеНастройки, Истина);
	
КонецПроцедуры

//++ Локализация

&НаСервере
Процедура УстановитьОбработчикиСобытийРегламентированногоУчета()
	
	Элементы.СчетУчета.УстановитьДействие("ПриИзменении", "Подключаемый_СчетУчетаПриИзменении");
	Элементы.Субконто1.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто1.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто2.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто2.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	Элементы.Субконто3.УстановитьДействие("ПриИзменении", "Подключаемый_СубконтоПриИзменении");
	Элементы.Субконто3.УстановитьДействие("НачалоВыбора", "Подключаемый_СубконтоНачалоВыбора");
	
КонецПроцедуры

&НаСервере
Процедура УправлениеЭлементамиФормыРегламентированногоУчета()
	
	ПоляФормы = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
	ЗаголовкиПолей = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто1", "ЗаголовокСубконто2", "ЗаголовокСубконто3");
	
	БухгалтерскийУчетКлиентСервер.ПриВыбореСчета(СчетУчета, ЭтаФорма, ПоляФормы, ЗаголовкиПолей);
	
	ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма);
	
	Если ИсточникиПодбораСубконто.Количество() > 0 Тогда
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = "";
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			
			Для Каждого Аналитика Из ИсточникиПодбораСубконто Цикл
				Если ТипЗначенияСубконто.СодержитТип(Аналитика.Значение) Тогда
					Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>';
																							|en = '<picked automatically>'");
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СчетУчетаПриИзмененииСервер()
	
	ПоляОбъекта = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто1", "Субконто2", "Субконто3");
		
	БухгалтерскийУчетКлиентСервер.ПриИзмененииСчета(СчетУчета, ЭтаФорма, ПоляОбъекта, Ложь);
	
	Если ЗначениеЗаполнено(АналитикаАктивовПассивов) Тогда
		СвойстваСчета = БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(СчетУчета);
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			Если ТипЗначенияСубконто.СодержитТип(ТипЗнч(АналитикаАктивовПассивов)) Тогда
				ЭтаФорма[ПоляОбъекта["Субконто" + НомерСубконто]] = АналитикаАктивовПассивов;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УправлениеЭлементамиФормыРегламентированногоУчета();
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(ЭтаФорма.Организация, ЭтаФорма, "Субконто%Индекс%", "СчетУчета");
	НастройкаСчетовУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(ЭтаФорма, ЭтаФорма, "Субконто%Индекс%", "Субконто%Индекс%", ПараметрыЗаписи);
	
КонецПроцедуры

&НаКлиенте
Процедура СпособыСубконтоНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(ЭтаФорма.Организация, ЭтаФорма, "Субконто%Индекс%", "СчетУчета");
	ОбщегоНазначенияБПКлиент.НачалоВыбораЗначенияСубконто(ЭтаФорма, Элемент, СтандартнаяОбработка, ПараметрыЗаписи);

КонецПроцедуры

//-- Локализация

//++ НЕ УТКА

&НаСервере
Процедура УправлениеЭлементамиФормыМеждународногоУчета(НомерПланаСчетов)
	
	ПоляФормы = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто" + НомерПланаСчетов + "1",
		"Субконто" + НомерПланаСчетов + "2",
		"Субконто" + НомерПланаСчетов + "3");
	
	ЗаголовкиПолей = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"ЗаголовокСубконто" + НомерПланаСчетов + "1",
		"ЗаголовокСубконто" + НомерПланаСчетов + "2",
		"ЗаголовокСубконто" + НомерПланаСчетов + "3");
	
	СвойстваСчета = МеждународныйУчетСерверПовтИсп.СвойстваСчета(ЭтотОбъект["СчетУчета" + НомерПланаСчетов]);
	
	Для НомерСубконто = 1 По 3 Цикл
		ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
		Если НомерСубконто <= СвойстваСчета.КоличествоСубконто Тогда
			ЭтотОбъект[ЗаголовкиПолей["Субконто" + НомерСубконто]] = СвойстваСчета["ВидСубконто" + НомерСубконто + "Наименование"] + ":";
			Элементы[ЗаголовкиПолей["Субконто" + НомерСубконто]].Видимость  = Истина;
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].Видимость       = Истина;
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].ОграничениеТипа = ТипЗначенияСубконто;
		Иначе 
			ЭтотОбъект[ЗаголовкиПолей["Субконто" + НомерСубконто]] = "";
			Элементы[ЗаголовкиПолей["Субконто" + НомерСубконто]].Видимость  = Ложь;
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].Видимость       = Ложь;
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].ОграничениеТипа = Новый ОписаниеТипов("Неопределено");
		КонецЕсли;
	КонецЦикла;
	
	Если ИсточникиПодбораСубконто.Количество() > 0 Тогда
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = "";
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			
			Для Каждого Аналитика Из ИсточникиПодбораСубконто Цикл
				Если ТипЗначенияСубконто.СодержитТип(Аналитика.Значение) Тогда
					Элементы[ПоляФормы["Субконто" + НомерСубконто]].ПодсказкаВвода = НСтр("ru = '<подбирается автоматически>';
																							|en = '<picked automatically>'");
					Прервать;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СчетУчетаМеждународныйПриИзмененииСервер(НомерПланаСчетов)
	
	ПоляОбъекта = Новый Структура(
		"Субконто1, Субконто2, Субконто3",
		"Субконто" + НомерПланаСчетов + "1",
		"Субконто" + НомерПланаСчетов + "2",
		"Субконто" + НомерПланаСчетов + "3");
		
	СвойстваСчета = МеждународныйУчетСерверПовтИсп.СвойстваСчета(ЭтотОбъект["СчетУчета" + НомерПланаСчетов]);
	
	Для НомерСубконто = 1 По 3 Цикл
		Если НомерСубконто <= СвойстваСчета.КоличествоСубконто Тогда
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			ЗначениеСубконто = ТипЗначенияСубконто.ПривестиЗначение(ЭтотОбъект[ПоляОбъекта["Субконто" + НомерСубконто]]);
			ЭтотОбъект[ПоляОбъекта["Субконто" + НомерСубконто]] = ЗначениеСубконто;
		Иначе 
			ЭтотОбъект[ПоляОбъекта["Субконто" + НомерСубконто]] = Неопределено;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(АналитикаАктивовПассивов) Тогда
		Для НомерСубконто = 1 По СвойстваСчета.КоличествоСубконто Цикл
			ТипЗначенияСубконто = СвойстваСчета["ВидСубконто" + НомерСубконто + "ТипЗначения"];
			Если ТипЗначенияСубконто.СодержитТип(ТипЗнч(АналитикаАктивовПассивов)) Тогда
				ЭтотОбъект[ПоляОбъекта["Субконто" + НомерСубконто]] = АналитикаАктивовПассивов;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ЭтотОбъект, НомерПланаСчетов);
	УправлениеЭлементамиФормыМеждународногоУчета(НомерПланаСчетов);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПолейСубконтоМеждународный(ЭтаФорма, НомерПланаСчетов)
	
	ПараметрыЗаписи = НастройкаСчетовУчетаКлиентСервер.ПараметрыВыбораСубконто(
		ЭтаФорма.Организация,
		ЭтаФорма,
		"Субконто" + НомерПланаСчетов + "%Индекс%",
		"СчетУчета" + НомерПланаСчетов);
		
	НастройкаСчетовУчетаКлиентСервер.ИзменитьПараметрыВыбораПолейСубконто(
		ЭтаФорма,
		ЭтаФорма,
		"Субконто" + НомерПланаСчетов + "%Индекс%",
		"Субконто" + НомерПланаСчетов + "%Индекс%",
		ПараметрыЗаписи); 
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьПараметрыВыбораПоляСчетУчетаМеждународный(ЭтаФорма, НомерПланаСчетов)
	
	ПланСчетовМеждународный = ЭтаФорма.ПланыСчетовМеждународные[НомерПланаСчетов - 1];
	ЭлементСчетУчета = ЭтаФорма.Элементы["СчетУчета" + НомерПланаСчетов];
	
	ПараметрВыбора = Новый ПараметрВыбора("Отбор.ПланСчетов", ПланСчетовМеждународный);
	ПараметрыВыбора = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ПараметрВыбора);
	ЭлементСчетУчета.ПараметрыВыбора = Новый ФиксированныйМассив(ПараметрыВыбора);
	
КонецПроцедуры

//-- НЕ УТКА

&НаСервере
Функция ПараметрыВыбораСтатейИАналитик() Экспорт
	
	ПараметрыВыбора = ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики();
	ПараметрыВыбора.ПутьКДанным = "ЭтотОбъект";
	ПараметрыВыбора.Статья = "СтатьяАктивовПассивов";
	ПараметрыВыбора.ТипСтатьи = "ТипСтатьи";
	
	ПараметрыВыбора.ВыборСтатьиРасходов = Ложь;
	ПараметрыВыбора.АналитикаРасходов = "";
	
	ПараметрыВыбора.ВыборСтатьиАктивовПассивов = Истина;
	ПараметрыВыбора.АналитикаАктивовПассивов = "АналитикаАктивовПассивов";
	
	ПараметрыВыбора.ЭлементыФормы.Статья.Добавить("СтатьяАктивовПассивов");
	ПараметрыВыбора.ЭлементыФормы.АналитикаАктивовПассивов.Добавить("АналитикаАктивовПассивов");
	
	Возврат ПараметрыВыбора;
	
КонецФункции


#КонецОбласти

#КонецОбласти
