#Область ОписаниеПеременных

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)

	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	СобытияФорм.ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РазрешитьРедактирование(Команда)
	
	РазблокируемыеРеквизиты = РазблокируемыеРеквизиты();
	Закрыть(РазблокируемыеРеквизиты);

КонецПроцедуры

&НаКлиенте
Процедура ПроверитьИспользованиеОбъекта(Команда)
	
	ПроверитьИспользованиеСчетаНаСервере();
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьПереопределяемуюКоманду(Команда)
	
	СобытияФормКлиент.ВыполнитьПереопределяемуюКоманду(ЭтаФорма, Команда);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ДекорацияОбъектИспользуетсяОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "Отчет" Тогда
		ОткрытьОСВПоСчету();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПроверитьИспользованиеСчетаНаСервере()
	
	УстановитьПривилегированныйРежим(Истина);
	
	Счет = Параметры.Объект;
	
	ПолноеИмяОбъектаМетаданных = "";
	
	//++ Локализация

	//++ НЕ УТ
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		ПолноеИмяОбъектаМетаданных = "РегистрБухгалтерии.Хозрасчетный.Обороты(,,, Счет = &Счет,,,,)";
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	//++ НЕ УТКА
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Международный") Тогда
		СвойстваСчета = МеждународныйУчетСерверПовтИсп.СвойстваСчета(Счет);   
		Если СвойстваСчета.ВариантФормированияПроводок = ПредопределенноеЗначение("Перечисление.ВариантыФормированияПроводок.СКорреспонденцией") Тогда
			ПолноеИмяОбъектаМетаданных = "РегистрБухгалтерии.Международный.Обороты(,,, Счет = &Счет,,,,)";
		ИначеЕсли СвойстваСчета.ВариантФормированияПроводок = ПредопределенноеЗначение("Перечисление.ВариантыФормированияПроводок.БезКорреспонденции") Тогда 
			ПолноеИмяОбъектаМетаданных = "РегистрБухгалтерии.МеждународныйБезКорреспонденции.Обороты(,,, Счет = &Счет,,)";
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТКА
	
	ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	РегистрБухгалтерииОбороты.Организация КАК Организация
		|ИЗ
		|	&ПолноеИмяОбъектаМетаданных КАК РегистрБухгалтерииОбороты";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПолноеИмяОбъектаМетаданных", ПолноеИмяОбъектаМетаданных);
	
	Запрос = Новый Запрос;
    Запрос.Текст = ТекстЗапроса;
	Запрос.УстановитьПараметр("Счет", Счет);
	РезультатЗапроса = Запрос.Выполнить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Если РезультатЗапроса.Пустой() Тогда
		Элементы.ГруппаОбъектИспользуетсяСтраницы.ТекущаяСтраница = Элементы.ГруппаОбъектИспользуетсяОбъектНеИспользуется;
		Элементы.РазрешитьРедактирование.Доступность = Истина;
	Иначе

		Элементы.ГруппаОбъектИспользуетсяСтраницы.ТекущаяСтраница = Элементы.ГруппаОбъектИспользуетсяОбъектИспользуется;

		Если Пользователи.ЭтоПолноправныйПользователь() Тогда
			
			Элементы.ДекорацияОбъектИспользуется.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
				НСтр("ru = 'Счет используется в проводках.
					|Выключение признаков учета или удаление видов субконто может привести к удалению данных.
					|Откройте <a href = ""Отчет"">Оборотно-сальдовую ведомость по счету</a>  для просмотра проводок';
					|en = 'The account is used in entries.
					|If you disable accounting flags or delete extra dimension types, it might result in the data deletion.
					|To view entries, open the <a href = ""Отчет"">Trial balance for account</a>'"));

			Элементы.РазрешитьРедактирование.Доступность = Истина;

		Иначе

			ОрганизацииИзПроводок = РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Организация");

			Запрос = Новый Запрос;
			Запрос.Текст =
			"ВЫБРАТЬ РАЗЛИЧНЫЕ РАЗРЕШЕННЫЕ
			|	Организации.Ссылка КАК Организация
			|ИЗ
			|	Справочник.Организации КАК Организации";

			ДоступныеОрганизации = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Организация");

			ЕстьНедоступныеОрганизации = Ложь;
			Для Каждого ОрганизацияПроводок Из ОрганизацииИзПроводок Цикл
				Если ДоступныеОрганизации.Найти(ОрганизацияПроводок) = Неопределено Тогда
					ЕстьНедоступныеОрганизации = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла;
			
			Если ЕстьНедоступныеОрганизации Тогда
				Элементы.ДекорацияОбъектИспользуется.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
					НСтр("ru = 'Счет используется в проводках.
						|Выключение признаков учета или удаление видов субконто может привести к удалению данных.
						|Откройте <a href = ""Отчет"">Оборотно-сальдовую ведомость по счету</a>  для просмотра проводок.
						|Также счет используется в проводках по организациям недоступных для просмотра.';
						|en = 'The account is used in entries.
						|If you disable accounting flags or delete extra dimension types, it might result in the data deletion.
						|To view entries, open the <a href = ""Отчет"">Trial balance for account</a>.
						|The account is also used in entries of the companies that are not available for view.'"));
			Иначе
				Элементы.ДекорацияОбъектИспользуется.Заголовок = СтроковыеФункции.ФорматированнаяСтрока(
					НСтр("ru = 'Счет используется в проводках.
						|Выключение признаков учета или удаление видов субконто может привести к удалению данных.
						|Откройте <a href = ""Отчет"">Оборотно-сальдовую ведомость по счету</a>  для просмотра проводок.';
						|en = 'The account is used in entries.
						|If you disable accounting flags or delete extra dimension types, it might result in the data deletion.
						|To view entries, open the <a href = ""Отчет"">Trial balance for account</a>.'"));				
			КонецЕсли;
			
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОСВПоСчету()

	Счет = Параметры.Объект;
	
	//++ Локализация

	//++ НЕ УТ
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
		
		// Инициализируем параметры расшифровки
		НастройкиРасшифровки = Новый Структура();
		
		// Инициализируем пользовательские настройки
		ПользовательскиеНастройки = Новый ПользовательскиеНастройкиКомпоновкиДанных;
		ДополнительныеСвойства = ПользовательскиеНастройки.ДополнительныеСвойства;
		ДополнительныеСвойства.Вставить("ПоказательБУ", 	Истина);
		ДополнительныеСвойства.Вставить("РежимРасшифровки", Истина);
		ДополнительныеСвойства.Вставить("НачалоПериода",	Дата(1, 1, 1));
		ДополнительныеСвойства.Вставить("КонецПериода", 	Дата(1, 1, 1));
		ДополнительныеСвойства.Вставить("ПоСубсчетам", 		Истина);
		
		ДополнительныеСвойства.Вставить("Счет", Счет);
		
		// Добавляем группировку по Организация
		ГруппировкаОрганизация = Новый Структура;
		ГруппировкаОрганизация.Вставить("Поле", "Организация");
		ГруппировкаОрганизация.Вставить("Использование",  Истина);
		ГруппировкаОрганизация.Вставить("ТипГруппировки", 0);
		
		// Группировка передается в отчет как массив структур
		// Элемент массива содержит структуру описывающую строку таблицы "Группировка" стандартного отчета.
		ДополнительныеСвойства.Вставить("Группировка", ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ГруппировкаОрганизация));
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ВидРасшифровки", 2);
		ПараметрыФормы.Вставить("ПользовательскиеНастройки", ПользовательскиеНастройки);
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		
		ОткрытьФорму("Отчет.ОборотноСальдоваяВедомостьПоСчету.Форма.ФормаОтчета", ПараметрыФормы, , Истина);
	
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация

	//++ НЕ УТКА
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Международный") Тогда
		
		ПараметрыОткрытия = ПараметрыОСВПоСчетуМеждународный(Счет);
		ИмяОтчета = ПараметрыОткрытия.ИмяОтчета;
		ПараметрыФормы = ПараметрыОткрытия.ПараметрыФормы;	
		ОткрытьФорму("Отчет." + ИмяОтчета + ".Форма", ПараметрыФормы,, Истина);
		
	КонецЕсли;
	//-- НЕ УТКА
	
КонецПроцедуры

//++ НЕ УТКА
&НаСервере
Функция ПараметрыОСВПоСчетуМеждународный(Счет)
	
	СвойстваСчета = МеждународныйУчетСерверПовтИсп.СвойстваСчета(Счет);
	
	Если СвойстваСчета.ВариантФормированияПроводок = Перечисления.ВариантыФормированияПроводок.БезКорреспонденции Тогда
		ИмяОтчета = Метаданные.Отчеты.БухгалтерскийОтчетМеждународныйБезКорреспонденции.Имя;
		ИмяВариантаОтчета = "ОСВ_ПоСчетуМеждународный";
		
		ИмяСхемы = Метаданные.Отчеты.БухгалтерскийОтчетМеждународныйБезКорреспонденции.ОсновнаяСхемаКомпоновкиДанных.Имя;
		СхемаКомпоновкиДанных = Отчеты.БухгалтерскийОтчетМеждународныйБезКорреспонденции.ПолучитьМакет(ИмяСхемы); // СхемаКомпоновкиДанных -
		НастройкиВарианта = СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаОтчета].Настройки;
	Иначе
		ИмяОтчета = Метаданные.Отчеты.БухгалтерскийОтчетМеждународныйСКорреспонденцией.Имя;
		ИмяВариантаОтчета = "ОСВПоСчетуСКорреспонденциейМеждународный";
		
		ИмяСхемы = Метаданные.Отчеты.БухгалтерскийОтчетМеждународныйСКорреспонденцией.ОсновнаяСхемаКомпоновкиДанных.Имя;
		СхемаКомпоновкиДанных = Отчеты.БухгалтерскийОтчетМеждународныйСКорреспонденцией.ПолучитьМакет(ИмяСхемы); // СхемаКомпоновкиДанных -
		НастройкиВарианта = СхемаКомпоновкиДанных.ВариантыНастроек[ИмяВариантаОтчета].Настройки;
	КонецЕсли;

	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(НастройкиВарианта);
	Настройки = КомпоновщикНастроек.Настройки;
	НастройкиОтбор = Настройки.Отбор;
	
	// Установим параметры отчета расшифровки
	ПериодОтчета = Новый Структура;
	ПериодОтчета.Вставить("ДатаНачала", Дата(1, 1, 1));
	ПериодОтчета.Вставить("ДатаОкончания", Дата(1, 1, 1));
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "ПериодОтчета", ПериодОтчета);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "ПредставлениеСчетовПоКоду", Истина);
	ЭтоФункциональнаяВалюта = Истина;
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "ПоказательСумма", ЭтоФункциональнаяВалюта);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "ПоказательСуммаПредставления", НЕ ЭтоФункциональнаяВалюта);
	
	ФинансоваяОтчетностьСервер.УстановитьОтбор(НастройкиОтбор,"Счет", Счет);
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(Настройки, "ПланСчетов", СвойстваСчета.ПланСчетов);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("КлючВарианта", ИмяВариантаОтчета); 
	ПараметрыФормы.Вставить("ПользовательскиеНастройки", КомпоновщикНастроек.ПользовательскиеНастройки);
	ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);

	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ИмяОтчета", ИмяОтчета);
	ПараметрыОткрытия.Вставить("ПараметрыФормы", ПараметрыФормы);
	
	Возврат ПараметрыОткрытия;
	
КонецФункции
//-- НЕ УТКА

&НаСервере
Функция РазблокируемыеРеквизиты()
	
	РазблокируемыеРеквизиты = Новый Массив;
	Счет = Параметры.Объект;
	
	//++ Локализация

	//++ НЕ УТ
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Хозрасчетный") Тогда
    	РазблокируемыеРеквизиты = ПланыСчетов.Хозрасчетный.ПолучитьБлокируемыеРеквизитыОбъекта();
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
	//++ НЕ УТКА
	Если ТипЗнч(Счет) = Тип("ПланСчетовСсылка.Международный") Тогда
    	РазблокируемыеРеквизиты = ПланыСчетов.Международный.ПолучитьБлокируемыеРеквизитыОбъекта();
	КонецЕсли;
	//-- НЕ УТКА
	
	Возврат РазблокируемыеРеквизиты;
	
КонецФункции

#Область Прочее

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	ЗапретРедактированияРеквизитовОбъектовУТКлиент.ПроверитьВыполнениеЗадания(
		ЭтаФорма,
		ФормаДлительнойОперации,
		ПараметрыОбработчикаОжидания);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
