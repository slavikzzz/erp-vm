#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	РезультатПолученияПротокола = Параметры.РезультатПолученияПротокола;
	
	Если НЕ РезультатПолученияПротокола.Выполнено Тогда
		Возврат;
	КонецЕсли;
	
	Если Параметры.Свойство("ПоказыватьГиперссылкуЭтаповОтправки") Тогда
		Элементы.ГиперссылкаЭтапыОтправки.Видимость = Параметры.ПоказыватьГиперссылкуЭтаповОтправки;
	КонецЕсли;
	
	Наименование = УниверсальныйОбменСБанками.ПредставлениеПредмета(
		Перечисления.СервисыОбменаСБанками.ФинансоваяОтчетность,
		РезультатПолученияПротокола.Предмет,
		Истина);
	
	Протокол = РезультатПолученияПротокола.ТекстПротокола;
	
	РазобратьПротокол();
	ЗаполнитьДанныеВШапкеФормы();
	УправлениеЭУ(Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если НЕ РезультатПолученияПротокола.Выполнено Тогда
		ПоказатьПредупреждение(, РезультатПолученияПротокола.ОписаниеОшибки,, НСтр("ru = 'Ошибка получения протокола';
																					|en = 'Protocol receipt error'"));
		Закрыть(Ложь);
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаЭтапыОтправкиНажатие(Элемент)
	
	УниверсальныйОбменСБанкамиКлиент.
		ПоказатьФормуСостоянияДокументооборота(РезультатПолученияПротокола.Документооборот);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ГиперссылкаСохранитьПротоколНажатие(Элемент)
	
	ДанныеПротокола = РезультатПолученияПротокола.ДанныеПротокола;
	ДанныеПодписи = РезультатПолученияПротокола.ДанныеПодписи;
	
	ФинОтчетностьВБанкиКлиент.СохранитьПротокол("ПоложительныйПротокол",
		Банк,
		Организация,
		ДанныеПротокола,
		ДанныеПодписи);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УправлениеЭУ(Отказ = Ложь)
	
	Элементы.Наименование.Видимость = НЕ ПустаяСтрока(Наименование);
	
	Элементы.Результат.Заголовок = НСтр("ru = 'Отчет сдан';
										|en = 'Report submitted'");
	Элементы.Результат.ЦветТекста = ЦветаСтиля.ЦветПоложительногоПротокола;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеВШапкеФормы()

	Элементы.Наименование.Заголовок	= Наименование;
	
	Если ЗначениеЗаполнено(Организация) Тогда
		Элементы.Организация.Заголовок		= Организация;
	Иначе
		Шаблон = НСтр("ru = '<Организация с ИНН %1 не найдена>';
						|en = '<Company with %1 TIN is not found>'");
		Элементы.Организация.Заголовок 		= СтрШаблон(Шаблон, ИННОрганизации);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Банк) Тогда
		Элементы.Банк.Заголовок				= Банк;
	Иначе
		Шаблон = НСтр("ru = '<Получатель с идентификатором %1 не найден>';
						|en = '<Recipient with %1 ID is not found>'");
		Элементы.Банк.Заголовок				= СтрШаблон(Шаблон, ИдентификаторБанка);
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ДатаСдачи) Тогда
		Элементы.ДатаСдачи.Заголовок 		= Формат(ДатаСдачи, "ДФ=dd.MM.yyyy");
	Иначе
		Элементы.ДатаСдачи.Заголовок 		= НСтр("ru = '<Дата сдачи не найдена в протоколе>';
													|en = '<Submission date is not found in the protocol>'");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазобратьПротокол()
	
	Если СтрНайти(Протокол, "ИзвещениеОСдачеОтчетности") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Чтение = Новый ЧтениеXML;
	Чтение.УстановитьСтроку(Протокол);
	ДанныеПротокола = ФабрикаXDTO.ПрочитатьXML(Чтение);
	
	ИдентификаторБанка = ДанныеПротокола.Банк.Идентификатор;
	Банк = УниверсальныйОбменСБанками.НайтиБанкПоИдентификатору(ИдентификаторБанка);
	ИННОрганизации = ДанныеПротокола.Организация.ИНН;
	Организация = УниверсальныйОбменСБанками.НайтиОрганизациюПоИНН(ИННОрганизации);
	
	Если НЕ ПустаяСтрока(ДанныеПротокола.ДатаСдачи) Тогда
		ДатаСдачи = XMLЗначение(Тип("Дата"), ДанныеПротокола.ДатаСдачи);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти