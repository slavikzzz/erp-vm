#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ИнициализироватьПараметры(Параметры);
	ОбновитьРезультатОтправкиВСПАРК();
	
	ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Ошибка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СразуПререотправить Тогда
		ПовторитьОтправку();
	КонецЕсли;
	
	Если ОткрытьПредложение Тогда
		ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Предложение);
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "ОбновитьРезультатОтправкиСПАРК" Тогда
		
		ОбновитьРезультатОтправкиВСПАРК();
		ПоказатьРезультатОтправки();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОтправитьВСПАРК(Команда)
	
	ОтправкаРегОтчетовВСПАРКВызовСервера.ЗаписатьСтатистикуОтправкиБухОтчетностиВСПАРК("Передумали");
	ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Бублик);
	// Чтобы бублик успел отрисоваться
	ПодключитьОбработчикОжидания("Подключаемый_ОтправитьНеотправленныеВСПАРК", 1, Истина);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПараметры(Параметры)
	
	Отчет               = Параметры.Ссылка;
	ОткрытьПредложение  = Параметры.ОткрытьПредложение;
	СразуПререотправить = Параметры.СразуПререотправить;
	
	КонтекстЭДОСервер  = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	СведенияОбОтчете   = КонтекстЭДОСервер.СведенияПоОтправляемымОбъектам(Отчет);
	Организация        = СведенияОбОтчете.Организация;
	НаименованиеОтчета = НаименованиеОтчета(СведенияОбОтчете);
	
	ИнформационнаяБазаФайловая = ОбщегоНазначения.ИнформационнаяБазаФайловая();
	
КонецПроцедуры

&НаКлиенте
Процедура БольшеНеНапоминать(Команда)
	
	ОтправкаРегОтчетовВСПАРКВызовСервера.ЗаписатьСтатистикуОтправкиБухОтчетностиВСПАРК("ОтказалисьПовторитьОтправкуПослеПревышеноПопыток");
	БольшеНеНапоминатьНаСервере();
	Оповестить("СПАРК_БольшеНеНапоминать",, Отчет);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПовторитьОтправку(Команда = Неопределено)
	
	ОтправкаРегОтчетовВСПАРКВызовСервера.ЗаписатьСтатистикуОтправкиБухОтчетностиВСПАРК("СогласилисьПовторитьОтправкуПослеПревышеноПопыток");
	ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Бублик);
	// Чтобы бублик успел отрисоваться
	ПодключитьОбработчикОжидания("Подключаемый_ОтправитьНеотправленныеВСПАРК", 1, Истина); 
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура Подключаемый_ОтправитьНеотправленныеВСПАРК()
	
	ОтправкаРегОтчетовВСПАРККлиент.ОтправитьНеотправленныеВСПАРК(Отчет);// фоновое задание
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьРезультатОтправкиВСПАРК() Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	ОтчетыПереданныеВСПАРК.Отчет КАК Отчет,
		|	ОтчетыПереданныеВСПАРК.СтатусОтправки КАК СтатусОтправки,
		|	ОтчетыПереданныеВСПАРК.ОписаниеОшибки КАК ОписаниеОшибки,
		|	ОтчетыПереданныеВСПАРК.КоличествоНеудачныхПопыток КАК КоличествоНеудачныхПопыток
		|ИЗ
		|	РегистрСведений.ОтчетыПереданныеВСПАРК КАК ОтчетыПереданныеВСПАРК
		|ГДЕ
		|	ОтчетыПереданныеВСПАРК.Отчет = &Отчет";
	
	Запрос.УстановитьПараметр("Отчет", Отчет);
	РезультатЗапроса = Запрос.Выполнить().Выбрать();
	
	Если РезультатЗапроса.Следующий() Тогда
		
		ОписаниеОшибки = РезультатЗапроса.ОписаниеОшибки;
		СтатусОтправки = РезультатЗапроса.СтатусОтправки;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьРезультатОтправки() Экспорт
	
	Если СтатусОтправки = ПредопределенноеЗначение("Перечисление.СтатусыОтправкиВСПАРК.ОтправленУспешно") Тогда
		
		ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Успешно);
		
	Иначе
		
		Элементы.ОписаниеОшибки.Заголовок = ОписаниеОшибки;
		ИзменитьОформлениеФормы(ЭтотОбъект, Элементы.Ошибка);

	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеФормы(Форма, Страница)
	
	Элементы = Форма.Элементы;
	
	Если Страница = Элементы.Предложение Тогда
		ИзменитьОформлениеСтраницыПредложение(Форма);
	ИначеЕсли Страница = Элементы.Ошибка Тогда
		ИзменитьОформлениеСтраницыОшибка(Форма);
	ИначеЕсли Страница = Элементы.Бублик Тогда
		ИзменитьОформлениеСтраницыБублика(Форма);
	ИначеЕсли Страница = Элементы.Успешно Тогда
		ИзменитьОформлениеСтраницыРезультат(Форма);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция НаименованиеОтчета(СведенияОбОтчете)
	
	ВариантОтчета = Строка(СведенияОбОтчете.ВариантОтчета);
	Если ВариантОтчета = "П" Тогда
		ВариантОтчета = НСтр("ru = 'первичный';
							|en = 'первичный'");
	ИначеЕсли Лев(ВариантОтчета, 2) = "К/" Тогда
		ВариантОтчета = НСтр("ru = 'корректирующий';
							|en = 'корректирующий'") + " / " + Сред(ВариантОтчета, 3);
	КонецЕсли;
	
	ЛеваяСкобка 	= ?(НЕ ПустаяСтрока(ВариантОтчета), " (", "");
	ПраваяСкобка 	= ?(НЕ ПустаяСтрока(ВариантОтчета), ")", "");
	
	Возврат Строка(СведенияОбОтчете.Наименование) + ЛеваяСкобка + ВариантОтчета + ПраваяСкобка;

КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеСтраницыПредложение(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ОтправитьВСПРАК.КнопкаПоУмолчанию = Истина;
	
	АктивизироватьСтраницу(
		Форма, 
		Элементы.Предложение,
		НСтр("ru = 'Отправка бухгалтерской отчетности в СПАРК';
			|en = 'Отправка бухгалтерской отчетности в СПАРК'"));

КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеСтраницыОшибка(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ФормаПовторитьОтправку.КнопкаПоУмолчанию = Истина;
	
	Подстрока1 = НСтр("ru = 'Ранее вы дали согласие на отправку копии сданного ';
						|en = 'Ранее вы дали согласие на отправку копии сданного '");
	Подстрока2 = Новый ФорматированнаяСтрока(НСтр("ru = 'отчета';
													|en = 'отчета'"),,,,ПолучитьНавигационнуюСсылку(Форма.Отчет));
	Подстрока3 = " " + """" + Форма.НаименованиеОтчета + """" + НСтр("ru = ' по организации ';
																	|en = ' по организации '") + """" + Строка(Форма.Организация) + """" + НСтр("ru = ' в систему СПАРК.';
																																				|en = ' в систему СПАРК.'");
	
	Элементы.Подсказка.Заголовок = Новый ФорматированнаяСтрока(
		Подстрока1,
		Подстрока2,
		Подстрока3);
		
	Элементы.ОписаниеОшибки.Заголовок = Форма.ОписаниеОшибки;
	
	Подстрока1 = НСтр("ru = 'Что делать?';
						|en = 'Что делать?'");
	
	Подстрока2_1 = НСтр("ru = '1. Убедитесь, что ';
						|en = '1. Убедитесь, что '");
	Подстрока2_2 = Новый ФорматированнаяСтрока(НСтр("ru = 'адрес';
													|en = 'адрес'"),,,,"https://1cservice.spark-interfax.ru/AccountingReportLoadService.asmx?op=SendAccountingReport");
	Подстрока2_3 = НСтр("ru = ', на который отправляется отчет, доступен';
						|en = ', на который отправляется отчет, доступен'");
	
	Если Форма.ИнформационнаяБазаФайловая Тогда
		Подстрока2_4 = НСтр("ru = '.';
							|en = '.'");
	Иначе
		Подстрока2_4 = НСтр("ru = ' с сервера.';
							|en = ' с сервера.'");
	КонецЕсли;
	
	Подстрока2 = Новый ФорматированнаяСтрока(
		Подстрока2_1,
		Подстрока2_2,
		Подстрока2_3,
		Подстрока2_4);
	
	Подстрока3 = НСтр("ru = '2. Повторите отправку позже из отчета.';
						|en = '2. Повторите отправку позже из отчета.'");
	
	Элементы.Подсказка2.Заголовок = Новый ФорматированнаяСтрока(
		Подстрока1,
		Символы.ПС,
		Подстрока2,
		Символы.ПС,
		Подстрока3);
	
	АктивизироватьСтраницу(
		Форма, 
		Элементы.Ошибка,
		НСтр("ru = 'Отправка бухгалтерской отчетности в СПАРК';
			|en = 'Отправка бухгалтерской отчетности в СПАРК'"));

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеСтраницыБублика(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Состояние.Заголовок = НСтр("ru = Отчет '") + Форма.НаименованиеОтчета + НСтр("ru = ' отправляется в систему СПАРК';
																							|en = ' отправляется в систему СПАРК'");
	
	АктивизироватьСтраницу(
		Форма, 
		Элементы.Бублик,
		НСтр("ru = 'Подождите, пожалуйста...';
			|en = 'Подождите, пожалуйста...'"));
	
КонецПроцедуры
	
&НаКлиентеНаСервереБезКонтекста
Процедура ИзменитьОформлениеСтраницыРезультат(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.Закрыть1.КнопкаПоУмолчанию = Истина;
	
	Элементы.СостояниеРезультат.Заголовок = НСтр("ru = Отчет '") + Форма.НаименованиеОтчета + НСтр("ru = ' отправлен в систему СПАРК';
																									|en = ' отправлен в систему СПАРК'");
	
	АктивизироватьСтраницу(
		Форма, 
		Элементы.Успешно,
		НСтр("ru = 'Успешно!';
			|en = 'Успешно!'"));

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура АктивизироватьСтраницу(Форма, ТекущаяСтраница, ЗаголовокСтраницы = "")
	
	Если ЗаголовокСтраницы <> "" Тогда
		Форма.Заголовок = ЗаголовокСтраницы;
	КонецЕсли;
	
	ДокументооборотСКОКлиентСервер.АктивизироватьСтраницу(Форма.Элементы.Страницы, ТекущаяСтраница);
	
КонецПроцедуры

&НаСервере
Процедура БольшеНеНапоминатьНаСервере()
	
	ОтправкаРегОтчетовВСПАРК.ЗаписатьОтчетСПАРКВРегистр(
		Отчет, 
		Перечисления.СтатусыОтправкиВСПАРК.БольшеНеНапоминать); 
	
КонецПроцедуры


#КонецОбласти