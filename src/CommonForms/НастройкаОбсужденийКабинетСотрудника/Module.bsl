
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЦветСтиляПоясняющийОшибкуТекст 	= ЦветаСтиля.ПоясняющийОшибкуТекст;
	ЦветСтиляИнформационнойНадписи  = ЦветаСтиля.ТекстИнформационнойНадписи;
	ЕстьПраваНаПросмотрЖурналаРегистрации = ПравоДоступа("ЖурналРегистрации", Метаданные);
	
	Если Не СистемаВзаимодействия.ИнформационнаяБазаЗарегистрирована() Тогда
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаТребуетсяРегистрация;
	Иначе
		
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтраницаНастройкиОбсуждений;
		
		// проверка на блокировку
		СистемаВзаимодействийПодключена = Обсуждения.СистемаВзаимодействийПодключена();
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаБлокировкаВнешнихРесурсов",
			"Видимость", Не СистемаВзаимодействийПодключена);
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"СтраницыПодключениеНастройка",
			"Доступность", СистемаВзаимодействийПодключена);
		
		Настройки = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.НастройкиИнтеграции();
		ИспользоватьОбсуждения = Настройки.ИспользоватьОбсуждения;
		КоординаторОбсуждений  = Настройки.КоординаторОбсуждений;
		ИспользуютсяОбсуждения = ПолучитьФункциональнуюОпцию("ИспользуютсяОбсужденияКабинетСотрудника");
		
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИндикаторВключитьОбсуждения",
			"Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИндикаторОтключитьОбсуждения",
			"Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИндикаторСовместноеИспользование",
			"Видимость", Ложь);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ИндикаторОбработкаНовыхОбсуждений",
			"Видимость", Ложь);
		
		ОбновитьЭлементыФормы();
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КоординаторОбсужденийПриИзменении(Элемент)
	СохранитьКоординатораНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ИспользоватьОбсужденияПриИзменении(Элемент)
	
	Если ИспользоватьОбсуждения Тогда
		НачатьВключениеОбсуждений();
		ПриНачалеЗадания();
	Иначе
		Если ИспользуютсяОбсуждения Тогда
			ПоказатьВопросПередОтключениемОбсуждений();
		Иначе
			НачатьОтключениеОбсуждений();
			ПриНачалеЗадания();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОбъединениеПриложений(Команда)
	
	НачатьОбъединениеПриложений();
	ПриНачалеЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьНовыеОбсуждения(Команда)
	
	НачатьОбработкуНовыхОбсуждений();
	ПриНачалеЗадания();
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьСообщениеРезультатаОбработки(Команда)
	ОбновитьРезультатОбработкиОбсуждений();
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьЖурналРегистрации(Команда)
	
	ОтборЖурналаРегистрации = ОтборЖурналаРегистрации();
	ЖурналРегистрацииКлиент.ОткрытьЖурналРегистрации(ОтборЖурналаРегистрации, ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПриНачалеЗадания()
	
	Если ЗначениеЗаполнено(АктивноеЗадание) Тогда
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ВыводитьОкноОжидания = Ложь;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			АктивноеЗадание.ДлительнаяОперация,
			Новый ОписаниеОповещения("ПриЗавершенииЗадания", ЭтотОбъект, АктивноеЗадание.Имя),
			ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗавершенииЗадания(Результат, ИмяЗадания) Экспорт
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			АктивноеЗадание.ИмяДекорации,
			"Видимость",
			Ложь);
	
	АктивноеЗадание = Неопределено;
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.Статус = "Ошибка" Тогда
		ТекстСообщения = НСтр("ru = 'При выполнении фонового задания возникла ошибка:';
								|en = 'An error occurred while executing a background job:'") + Символы.ПС + Результат.КраткоеПредставлениеОшибки;
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
		
	Если ИмяЗадания = "ВключениеОбсуждений" Тогда
		ВключитьОбсужденияЗавершение(Результат.АдресРезультата);
	ИначеЕсли ИмяЗадания = "ОтключениеОбсуждений" Тогда
		ОтключениеОбсужденийЗавершение(Результат.АдресРезультата);
	ИначеЕсли ИмяЗадания = "ОбъединениеПриложений" Тогда
		ОбъединениеПриложенийЗавершение(Результат.АдресРезультата);
		Если ИспользуютсяОбсуждения Тогда
			ИнтеграцияКабинетСотрудникаКлиент.ПодключитьОбработчикиОбсуждений(ИдентификаторСлужебногоОбсуждения);
		КонецЕсли;
	ИначеЕсли ИмяЗадания = "ОбработкаНовыхОбсуждений" Тогда
		ОбработкаНовыхОбсужденийЗавершение(Результат.АдресРезультата);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗапуститьФоновоеЗадание(ИмяМетода, ИмяЗадания, ИмяДекорации, ПараметрыМетода = Неопределено)
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	ПараметрыВыполненияВФоне.ОжидатьЗавершение = 0;
	
	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			ИмяДекорации,
			"Видимость",
			Истина);
	
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне(ИмяМетода, ПараметрыМетода, ПараметрыВыполненияВФоне);
	
	НовоеЗадание = Новый Структура("Имя,ДлительнаяОперация,ИмяДекорации");
	НовоеЗадание.Имя = ИмяЗадания;
	НовоеЗадание.ДлительнаяОперация = РезультатВыполнения;
	НовоеЗадание.ИмяДекорации = ИмяДекорации;
	
	АктивноеЗадание = Новый ФиксированнаяСтруктура(НовоеЗадание);
	
КонецПроцедуры

&НаСервере
Процедура НачатьВключениеОбсуждений()

	ИмяЗадания 		= "ВключениеОбсуждений";
	ИмяМетода 		= "ИнтеграцияКабинетСотрудникаОбсуждения.ВключитьОбсужденияФоновоеЗадание";
	ИмяДекорации 	= "ИндикаторВключитьОбсуждения";
	
	ЗапуститьФоновоеЗадание(ИмяМетода, ИмяЗадания, ИмяДекорации);

КонецПроцедуры

&НаСервере
Процедура ВключитьОбсужденияЗавершение(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		ИспользоватьОбсуждения = Ложь;
	Иначе
		Если Результат.СообщениеОбОшибке <> Неопределено Тогда
			ТекстСообщения = НСтр("ru = 'Включение обсуждений не выполнено:';
									|en = 'Conversations are disabled:'") + Символы.ПС + Результат.СообщениеОбОшибке;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
			ИспользоватьОбсуждения = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура НачатьОбъединениеПриложений()

	Элементы.ОбъединениеПриложений.Доступность = Ложь;
	
	ИмяЗадания 		= "ОбъединениеПриложений";
	ИмяМетода 		= "ИнтеграцияКабинетСотрудникаОбсуждения.ОбъединениеПриложенийФоновоеЗадание";
	ИмяДекорации 	= "ИндикаторСовместноеИспользование";
	
	ЗапуститьФоновоеЗадание(ИмяМетода, ИмяЗадания, ИмяДекорации);

КонецПроцедуры

&НаСервере
Процедура ОбъединениеПриложенийЗавершение(АдресРезультата)

	Элементы.ОбъединениеПриложений.Доступность = Истина;
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	ИспользуютсяОбсуждения = ПолучитьФункциональнуюОпцию("ИспользуютсяОбсужденияКабинетСотрудника");
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.СообщениеОбОшибке <> Неопределено Тогда
			ОбщегоНазначения.СообщитьПользователю(Результат.СообщениеОбОшибке);
		ИначеЕсли Результат.НеПодключено Тогда
			ТекстСообщения = НСтр("ru = 'Приложение 1С:Кабинет сотрудника не зарегистрировано в системе взаимодействия.';
									|en = '1C:Employee Account application is not registered in the collaboration system.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		ИначеЕсли Результат.НеЗарегистрированоУАбонента Тогда
			ТекстСообщения = НСтр("ru = 'Приложение 1С:Кабинет сотрудника не зарегистрировано в системе взаимодействия у текущего абонента.';
									|en = '1C:Employee Account application is not registered in the collaboration system of the current subscriber.'");
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	ИдентификаторСлужебногоОбсуждения = "";
	Если ИспользуютсяОбсуждения Тогда
		Ответ = ИнтеграцияКабинетСотрудникаОбсуждения.ОбсуждениеДляСлужебныхОповещений();
		Если Ответ.СообщениеОбОшибке = Неопределено Тогда
			ИдентификаторСлужебногоОбсуждения = Строка(Ответ.ОбсуждениеСВ.Идентификатор);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура НачатьОтключениеОбсуждений()

	ИмяЗадания 		= "ОтключениеОбсуждений";
	ИмяМетода 		= "ИнтеграцияКабинетСотрудникаОбсуждения.ОтключениеОбсужденийФоновоеЗадание";
	ИмяДекорации 	= "ИндикаторОтключитьОбсуждения";
	
	ЗапуститьФоновоеЗадание(ИмяМетода, ИмяЗадания, ИмяДекорации);

КонецПроцедуры

&НаСервере
Процедура ОтключениеОбсужденийЗавершение(АдресРезультата)

	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	
	ИспользуютсяОбсуждения = ПолучитьФункциональнуюОпцию("ИспользуютсяОбсужденияКабинетСотрудника");
	Настройки = РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.НастройкиИнтеграции();
	ИспользоватьОбсуждения = Настройки.ИспользоватьОбсуждения;
	
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		Если Результат.СообщениеОбОшибке <> Неопределено Тогда
			ТекстСообщения = Результат.СообщениеОбОшибке;
			ОбщегоНазначения.СообщитьПользователю(ТекстСообщения);
		КонецЕсли;
	КонецЕсли;
	
	ОбновитьЭлементыФормы();
	
КонецПроцедуры

&НаСервере
Процедура НачатьОбработкуНовыхОбсуждений()

	ИмяЗадания 		= "ОбработкаНовыхОбсуждений";
	ИмяМетода 		= "ИнтеграцияКабинетСотрудникаОбсуждения.ОбработатьНовыеОбсужденияФоновоеЗадание";
	ИмяДекорации 	= "ИндикаторОбработкаНовыхОбсуждений";
	
	ЗапуститьФоновоеЗадание(ИмяМетода, ИмяЗадания, ИмяДекорации);

КонецПроцедуры

&НаСервере
Процедура ОбработкаНовыхОбсужденийЗавершение(АдресРезультата)

	ОбновитьРезультатОбработкиОбсуждений();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьВопросПередОтключениемОбсуждений();

	Если ИспользуютсяОбсуждения Тогда
		ТекстВопроса = НСтр("ru = 'При отключении обсуждений будет отключено совместное использование приложений в системе взаимодействия.';
							|en = 'If conversations are disabled, application sharing in the collaboration system will be disabled.'");
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОтключитьИспользоватьОбсужденияПродолжение", ЭтаФорма);
		ПоказатьВопрос(
			ОповещениеОЗавершении,
			ТекстВопроса,
			ИнтеграцияУправлениеПерсоналомКлиента.ОписаниеКнопокВопроса());
	Иначе
		НачатьОтключениеОбсуждений();
		ПриНачалеЗадания();
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ОтключитьИспользоватьОбсужденияПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = КодВозвратаДиалога.Да Тогда
		НачатьОтключениеОбсуждений();
		ПриНачалеЗадания();
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура СохранитьКоординатораНаСервере()

	РегистрыСведений.НастройкиИнтеграцииКабинетСотрудника.СохранитьЗначениеКоординаторОбсуждений(КоординаторОбсуждений);

КонецПроцедуры

&НаСервере
Процедура ОбновитьЭлементыФормы()
	
	Если ИспользуютсяОбсуждения Тогда
		Элементы.СтраницыПодключениеНастройка.ТекущаяСтраница = Элементы.СтраницаОбслуживание;
		ОбновитьРезультатОбработкиОбсуждений();
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"СтраницаПодключение",
			"Видимость", Ложь);
	Иначе
		Элементы.СтраницыПодключениеНастройка.ТекущаяСтраница = Элементы.СтраницаПодключение;
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"СтраницаПодключение",
			"Видимость", Истина);
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(Элементы,
			"ГруппаОбъединитьПриложенияКоманда",
			"Доступность", ИспользоватьОбсуждения);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбновитьРезультатОбработкиОбсуждений()
	
	Приложение = Перечисления.ПриложенияДляИнтеграции.КабинетСотрудника;
	Событие = Перечисления.ВидыСобытийОбменаУправлениеПерсоналом.ОбработкаОбсуждений;
	РезультатОбработки = РегистрыСведений.СобытияОбменаУправлениеПерсоналом.СобытиеОбмена(Приложение, Событие);
	Если Не ЗначениеЗаполнено(РезультатОбработки.ДатаНачала) Тогда
		Элементы.РезультатОбработкиОбсуждений.Заголовок = НСтр("ru = 'Обработка обсуждений еще не выполнялась';
																|en = 'Conversations have not been processed yet'");
		Элементы.ОткрытьЖурналРегистрации.Видимость = Ложь;
	Иначе
		Элементы.ОткрытьЖурналРегистрации.Видимость = ЕстьПраваНаПросмотрЖурналаРегистрации;
		СтрокаШаблон = НСтр("ru = 'Обработка выполнена: %1';
							|en = 'Processed: %1'");
		СтрокаЗаголовок = СтрШаблон(СтрокаШаблон, РезультатОбработки.ДатаОкончания);
		ЦветТекстаСообщения = ЦветСтиляИнформационнойНадписи;
		Если РезультатОбработки.БылиОшибки Тогда
			ЦветТекстаСообщения = ЦветСтиляПоясняющийОшибкуТекст;
			СтрокаБылиОшибки = НСтр("ru = 'При обработке были ошибки.';
									|en = 'Errors occurred upon processing.'");
			СтрокаЗаголовок = СтрШаблон("%1.
			|%2", СтрокаЗаголовок, СтрокаБылиОшибки);
		КонецЕсли;
		Элементы.РезультатОбработкиОбсуждений.ЦветТекста = ЦветТекстаСообщения;
		Элементы.РезультатОбработкиОбсуждений.Заголовок = СтрокаЗаголовок;
	КонецЕсли;
		
КонецПроцедуры

&НаСервереБезКонтекста
Функция ОтборЖурналаРегистрации()
	
	Отбор = Новый Структура;
	
	ИменаСобытий = Новый Массив;
	ИменаСобытий.Добавить(КабинетСотрудника.ИмяСобытияОбсуждения());
	Отбор.Вставить("СобытиеЖурналаРегистрации", ИменаСобытий);
	
	ВидСобытия = Перечисления.ВидыСобытийОбменаУправлениеПерсоналом.ОбработкаОбсуждений;
	Приложение = Перечисления.ПриложенияДляИнтеграции.КабинетСотрудника;
	РезультатОбработки = РегистрыСведений.СобытияОбменаУправлениеПерсоналом.СобытиеОбмена(Приложение, ВидСобытия);
	Отбор.Вставить("ДатаНачала", РезультатОбработки.ДатаНачала);
	Отбор.Вставить("ДатаОкончания",  РезультатОбработки.ДатаОкончания);
	
	Возврат Отбор;

КонецФункции

#КонецОбласти












