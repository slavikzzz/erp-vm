
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Не ЗначениеЗаполнено(Параметры.СпособВыплаты) Тогда
		Отказ = Истина;
		Возврат;
	КонецЕсли;	
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Параметры, "СпособВыплаты, Организация, ВыбранныеДокументы, ДатаОстатков, ИсключаемыйРегистратор");
	
	УстановитьЗаголовок();
	
	ЗаполнитьСписокДокументов();
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура СписокДокументовВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ОткрытьДокумент(Элемент.ТекущиеДанные.Значение)
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьВыполнить(Команда)
	
	ВыбранныеДокументы = Новый СписокЗначений;
	Для Каждого ЭлементСпискаДокументов Из СписокДокументов Цикл
		Если ЭлементСпискаДокументов.Пометка Тогда
			ВыбранныеДокументы.Добавить(ЭлементСпискаДокументов.Значение);
		КонецЕсли	
	КонецЦикла;	
	
	Оповестить("ВыборДокументовОснованийВедомостейПрочихДоходов", ВыбранныеДокументы, ЭтаФорма);
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьВыполнить(Команда)
	
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьВыполнить(Команда)
	ТекущиеДанные = Элементы.СписокДокументов.ТекущиеДанные;
	Если Элементы.СписокДокументов.ТекущиеДанные <> Неопределено Тогда
		ОткрытьДокумент(ТекущиеДанные.Значение)
	КонецЕсли	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьВыполнить(Команда)
	ЗаполнитьСписокДокументов();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовок()
	
	Заголовок = 
		СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = '%1 для выплаты по ведомости';
				|en = '%1 for payment against the paysheet'"),
			СпособВыплаты);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСписокДокументов()
	
	ШаблонПредставления = НСтр("ru = '%1 от %2 - %3';
								|en = '%1 from %2 - %3'");
	
	СписокДокументов.Очистить();
	
	Отбор = ВзаиморасчетыПоПрочимДоходам.ОтборЗапросаОстаткиВзаиморасчетовСКонтрагентамиАкционерам();
	Отбор.Основания = Перечисления.СпособыВыплатыПрочихДоходов.МетаданныеОснования(СпособВыплаты);
	
	ЗапросОстатков = ВзаиморасчетыПоПрочимДоходам.ЗапросОстаткиВзаиморасчетовСКонтрагентамиАкционерами(
		ИсключаемыйРегистратор,
		ДатаОстатков,
		Организация,
		Перечисления.СпособыВыплатыПрочихДоходов.СпособРасчетов(СпособВыплаты),
		Отбор,
		Ложь);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	УстановитьПривилегированныйРежим(Истина);
	ЗарплатаКадры.СоздатьВТПоЗапросу(Запрос.МенеджерВременныхТаблиц, ЗапросОстатков, "ВТОстаткиВзаиморасчетов"); 
	УстановитьПривилегированныйРежим(Ложь);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	Остатки.ДокументОснование КАК ДокументОснование,
	|	ТаблицаДокументов.КраткийСоставДокумента КАК КраткийСоставДокумента,
	|	ТаблицаДокументов.Номер КАК Номер,
	|	ТаблицаДокументов.Дата КАК Дата
	|ИЗ
	|	#ТаблицаДокументов КАК ТаблицаДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОстаткиВзаиморасчетов КАК Остатки
	|		ПО ТаблицаДокументов.Ссылка = Остатки.ДокументОснование";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ТаблицаДокументов", Отбор.Основания.ПолноеИмя());
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Представление = 
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонПредставления, 
				Выборка.Номер, 
				Формат(Выборка.Дата, "ДЛФ=Д"),
				Выборка.КраткийСоставДокумента);
		
		ЭлементСпискаДокументов = СписокДокументов.Добавить(Выборка.ДокументОснование, Представление);
		ЭлементСпискаДокументов.Пометка = ВыбранныеДокументы.НайтиПоЗначению(Выборка.ДокументОснование) <> Неопределено;
		
	КонецЦикла;
	
КонецПроцедуры	

&НаКлиенте
Процедура ОткрытьДокумент(Ссылка)
	ПоказатьЗначение(, Ссылка);
КонецПроцедуры

#КонецОбласти
