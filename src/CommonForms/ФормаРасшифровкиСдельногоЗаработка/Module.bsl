#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьТаблицуРасшифровки();
	ПриПолученииДанныхНаСервере();
	УстановитьЗаголовок();
	УстановитьВидимостьЭлементовФормы(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыТаблицаРасшифровкиПоказателей

&НаКлиенте
Процедура ТаблицаРасшифровкиПоказателейВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	ТекущиеДанные = Элементы.ТаблицаРасшифровкиПоказателей.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	ПоказатьЗначение(, ТекущиеДанные.Регистратор);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере	
Процедура ЗаполнитьТаблицуРасшифровки()

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Параметры.Организация);
	Запрос.УстановитьПараметр("Сотрудник", Параметры.Сотрудник);
	Запрос.УстановитьПараметр("СдельныйЗаработок", ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.ПоказателиРасчетаЗарплаты.СдельныйЗаработок"));
	
	Если ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Начисление, "ИспользоватьОперативныеПоказателиВЦеломЗаМесяц") Тогда
		ДатаНачала = НачалоМесяца(Параметры.ДатаНачала);
		ДатаОкончания = КонецМесяца(Параметры.ДатаОкончания);
	Иначе
		ДатаНачала = НачалоДня(Параметры.ДатаНачала);
		ДатаОкончания = КонецДня(Параметры.ДатаОкончания);
	КонецЕсли;
	Запрос.УстановитьПараметр("ДатаНачала", ДатаНачала);
	Запрос.УстановитьПараметр("ДатаОкончания", ДатаОкончания);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	&Сотрудник КАК Сотрудник,
	|	&ДатаНачала КАК ДатаНачала,
	|	&ДатаОкончания КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТДанныеДляРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчета.Сотрудник,
	|	ЗначенияОперативногоПоказателя.Период КАК Период,
	|	ЗначенияОперативногоПоказателя.Регистратор,
	|	ЗначенияОперативногоПоказателя.Значение КАК Сумма
	|ИЗ
	|	ВТДанныеДляРасчета КАК ДанныеДляРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗначенияОперативныхПоказателейРасчетаЗарплатыСотрудников КАК ЗначенияОперативногоПоказателя
	|		ПО ДанныеДляРасчета.Сотрудник = ЗначенияОперативногоПоказателя.Сотрудник
	|			И (ЗначенияОперативногоПоказателя.Показатель = &СдельныйЗаработок)
	|			И (ЗначенияОперативногоПоказателя.Период МЕЖДУ ДанныеДляРасчета.ДатаНачала И ДанныеДляРасчета.ДатаОкончания)
	|			И (ЗначенияОперативногоПоказателя.Сотрудник <> ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДляРасчета.Сотрудник,
	|	ЗначенияОперативногоПоказателя.Период,
	|	ЗначенияОперативногоПоказателя.Регистратор,
	|	ЗначенияОперативногоПоказателя.Значение
	|ИЗ
	|	ВТДанныеДляРасчета КАК ДанныеДляРасчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО (Сотрудники.Ссылка = ДанныеДляРасчета.Сотрудник)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗначенияОперативныхПоказателейРасчетаЗарплатыСотрудников КАК ЗначенияОперативногоПоказателя
	|		ПО (Сотрудники.ФизическоеЛицо = ЗначенияОперативногоПоказателя.ФизическоеЛицо)
	|			И (ЗначенияОперативногоПоказателя.Организация = ДанныеДляРасчета.Организация)
	|			И (ЗначенияОперативногоПоказателя.Показатель = &СдельныйЗаработок)
	|			И (ЗначенияОперативногоПоказателя.Период МЕЖДУ ДанныеДляРасчета.ДатаНачала И ДанныеДляРасчета.ДатаОкончания)
	|			И (ЗначенияОперативногоПоказателя.Сотрудник = ЗНАЧЕНИЕ(Справочник.Сотрудники.ПустаяСсылка))";
	
	РезультатЗапроса = Запрос.Выполнить();

	ТаблицаРасшифровкиПоказателей.Загрузить(РезультатЗапроса.Выгрузить());
	
	Итого = ТаблицаРасшифровкиПоказателей.Итог("Сумма");
	НачисленоЗаПериод = Параметры.ЗначениеПоказателя;
	
	Если НачисленоЗаПериод <> Итого Тогда
		
		Шаблон = ?(Параметры.ВремяВЧасах,
			НСтр("ru = ';%1 час;;%1 часа;%1 часов;%1 часа';
				|en = ';%1 hour;;%1 hour;%1 hours;%1 hour'"),
			НСтр("ru = ';%1 день;;%1 дня;%1 дней;%1 дня';
				|en = ';%1 day;;%1 day;%1 days;%1 day'"));
		
		Если Параметры.Отработано >= 0 Тогда
			Отработано = Параметры.Отработано;
			ЗаголовокПоля = НСтр("ru = 'Начислено за %1';
								|en = 'Accrued for %1'");
		Иначе
			Отработано = -Параметры.Отработано;
			ЗаголовокПоля = НСтр("ru = 'Сторнировано за %1';
								|en = 'Formed for %1'");
		КонецЕсли;
			
		Элементы.Начислено.Заголовок = СтрШаблон(ЗаголовокПоля,
			СтроковыеФункцииКлиентСервер.СтрокаСЧисломДляЛюбогоЯзыка(Шаблон, Отработано,, "ЧЦ=2; ЧН=0"));
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьВидимостьЭлементовФормы(Форма);
	
	ЕстьПоказатели = Форма.ТаблицаРасшифровкиПоказателей.Количество() > 0;
	
	Если ЕстьПоказатели Тогда
					
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"ПоказателиГруппаГруппа",
			"Видимость",
			ЕстьПоказатели);
			
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Форма.Элементы,
			"Начислено",
			"Видимость",
			Форма.НачисленоЗаПериод <> Форма.Итого);	
			
		Форма.Элементы.ГруппаСтраницФормы.ТекущаяСтраница = Форма.Элементы.СодержимоеСтраница;
		
	Иначе
		
		Форма.Элементы.ГруппаСтраницФормы.ТекущаяСтраница = Форма.Элементы.НетСодержимогоСтраница;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере	
Процедура ПриПолученииДанныхНаСервере()
	ДатаНачала = Параметры.ДатаНачала;
КонецПроцедуры

&НаСервере
Процедура УстановитьЗаголовок()

	Заголовок = Параметры.Сотрудник;
	ЗарплатаКадрыКлиентСервер.ЗаполнитьМесяцПоДате(ЭтаФорма, "ДатаНачала", "МесяцНачисленияСтрокой");
	
КонецПроцедуры

#КонецОбласти