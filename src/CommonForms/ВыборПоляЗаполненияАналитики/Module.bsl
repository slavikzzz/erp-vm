
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ВидАналитики = Параметры.ВидАналитики;
	АдресСхемыКомпоновкиДанных = Параметры.АдресСхемыКомпоновкиДанных;
	ТекущееВыражение = Параметры.ТекущееВыражение;
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("ТипЗначения",               "ТипЗначения");
	Реквизиты.Вставить("ДополнительноеСвойство",    "ДополнительноеСвойство");
	Реквизиты.Вставить("ЭтоДополнительноеСведение", "ДополнительноеСвойство.ЭтоДополнительноеСведение");
	ЗначенияРеквизитовВидаАналитики = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ВидАналитики, Реквизиты);
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ЗначенияРеквизитовВидаАналитики);
	ЗаполнитьДополнительноеСвойствоИдентификатор();
	
	ВидимостьКоманды = ЗначениеЗаполнено(ДополнительноеСвойство);
	Элементы.ФормаДобавитьДополнительноеСвойство.Видимость = ВидимостьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюДобавитьДополнительноеСвойство.Видимость = ВидимостьКоманды;
	Если ВидимостьКоманды Тогда
		Если ЭтоДополнительноеСведение Тогда
			ЗаголовокКоманды = НСтр("ru = 'Добавить дополнительное сведение';
									|en = 'Add additional information'");
		Иначе
			ЗаголовокКоманды = НСтр("ru = 'Добавить дополнительный реквизит';
									|en = 'Add additional attribute'");
		КонецЕсли;
		Элементы.ФормаДобавитьДополнительноеСвойство.Заголовок = ЗаголовокКоманды;
		Элементы.ДеревоВыбораКонтекстноеМенюДобавитьДополнительноеСвойство.Заголовок = ЗаголовокКоманды;
	КонецЕсли;
	
	ОписаниеТиповДопСвойств = Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.Тип;
	ВидАналитикиМожноОпределитьЧерезДопСвойство = Ложь;
	Если ТипЗначения.Типы().Количество() = 1 И ОписаниеТиповДопСвойств.СодержитТип(ТипЗначения.Типы()[0]) Тогда
		ВидАналитикиМожноОпределитьЧерезДопСвойство = Истина;
	КонецЕсли;
	
	ВидимостьКоманды = Не ЗначениеЗаполнено(ДополнительноеСвойство) И ВидАналитикиМожноОпределитьЧерезДопСвойство;
	
	Элементы.ФормаСоздатьДополнительныйРеквизит.Видимость = ВидимостьКоманды;
	Элементы.ФормаСоздатьДополнительноеСведение.Видимость = ВидимостьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюСоздатьДополнительноеСведение.Видимость = ВидимостьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюСоздатьДополнительныйРеквизит.Видимость = ВидимостьКоманды;
	
	МаксимальныйУровеньРазверткиСтрок = 2;
	ФинансоваяОтчетностьСервер.ЗаполнитьДоступныеПоляПоСхемеКомпоновкиДанных(ЭтаФорма);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	
	ОбработатьВыбор(Элементы.ДеревоВыбора.ТекущаяСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДополнительноеСвойство(Команда)
	
	ТекущиеДанные = Элементы.ДеревоВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущееВыражение = ТекущиеДанные.ПолныйИдентификаторСтроки;
	
	ДобавитьДополнительноеСвойствоСервер(ДополнительноеСвойство, ТекущиеДанные.ТипЗначения)
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДополнительноеСведение(Команда)
	
	ТекущиеДанные = Элементы.ДеревоВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущееВыражение = ТекущиеДанные.ПолныйИдентификаторСтроки;
	
	СоздатьДополнительноеСвойствоКлиент(ТекущиеДанные.ТипЗначения, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДополнительныйРеквизит(Команда)
	
	ТекущиеДанные = Элементы.ДеревоВыбора.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	ТекущееВыражение = ТекущиеДанные.ПолныйИдентификаторСтроки;
	
	СоздатьДополнительноеСвойствоКлиент(ТекущиеДанные.ТипЗначения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ДеревоВыбораПриАктивизацииСтроки(Элемент)
	
	ДоступностьКоманды = Ложь;
	
	ТекущиеДанные = Элементы.ДеревоВыбора.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ТекущееВыражение = ТекущиеДанные.ПолныйИдентификаторСтроки;
		// Поле ссылочного типа и не превышает максимальный уровень развертки.
		ДоступностьКоманды = (ТекущиеДанные.РазворачиватьДоРеквизитов);
	КонецЕсли;
	
	Элементы.ФормаСоздатьДополнительныйРеквизит.Доступность = ДоступностьКоманды;
	Элементы.ФормаСоздатьДополнительноеСведение.Доступность = ДоступностьКоманды;
	Элементы.ФормаДобавитьДополнительноеСвойство.Доступность = ДоступностьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюСоздатьДополнительноеСведение.Доступность = ДоступностьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюДобавитьДополнительноеСвойство.Доступность = ДоступностьКоманды;
	Элементы.ДеревоВыбораКонтекстноеМенюСоздатьДополнительныйРеквизит.Доступность = ДоступностьКоманды; 
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбораПередРазворачиванием(Элемент, Строка, Отказ)
	
	ТекущиеДанные = ДеревоВыбора.НайтиПоИдентификатору(Строка);
	Если ТекущиеДанные.РазворачиватьДоРеквизитов
		И НЕ ТекущиеДанные.ПодчиненныеСтрокиРазворачивались Тогда
		// Если есть подчиненные реквизиты и для них не были получены реквизиты следующего уровня.
		РазвернутьПодчиненныеСтрокиДереваОперандов(Строка);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РазвернутьПодчиненныеСтрокиДереваОперандов(ИдентификаторТекущейСтрокиДереваОперандов)
	
	РаботаСФормулами.РазвернутьСтрокуОперандаДереваФормы(ДеревоВыбора,
		ИдентификаторТекущейСтрокиДереваОперандов,
		МаксимальныйУровеньРазверткиСтрок);
	
	// Обработка ограничений по типу значения или идентификатору доп.реквизита на форме.
	ТекущиеДанные = ДеревоВыбора.НайтиПоИдентификатору(ИдентификаторТекущейСтрокиДереваОперандов);
	Для Каждого ДобавленнаяСтрока Из ТекущиеДанные.ПолучитьЭлементы() Цикл
		Если ДобавленнаяСтрока.РазрешаетсяВыборОперанда Тогда
			ДобавленнаяСтрока.РазрешаетсяВыборОперанда = ФинансоваяОтчетностьСервер.ПодходящееПолеВыбора(ДобавленнаяСтрока,
				ТипЗначения, ДополнительноеСвойствоИдентификатор);
		КонецЕсли;
	КонецЦикла;
	
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоВыбораВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ОбработатьВыбор(ВыбраннаяСтрока);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УдалитьНедопустимыеСимволы(Строка) Экспорт
	НедопустимыеСимволы = """'`/\[]{}:;|-=?*<>,.()+#№@!%^&~";
	Строка = СтрСоединить(СтрРазделить(Строка, НедопустимыеСимволы, Истина));
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыбор(ВыбраннаяСтрока)
	
	Если ВыбраннаяСтрока = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтрокаДерева = ДеревоВыбора.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если Не СтрокаДерева.РазрешаетсяВыборОперанда Тогда
		Возврат;
	КонецЕсли;
	
	ОповеститьОВыборе(СтрокаДерева.ПолныйИдентификаторСтроки);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьДополнительноеСвойствоКлиент(ТипЗначенияПоляИсточника, ДополнительноеСведение = Ложь)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ДополнительноеСведение", ДополнительноеСведение);
	ДополнительныеПараметры.Вставить("ТипЗначенияПоляИсточника", ТипЗначенияПоляИсточника);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриВводеНаименованияДополнительногоСвойства", ЭтотОбъект, ДополнительныеПараметры);
	ТекстСообщения = НСтр("ru = 'Введите наименование';
							|en = 'Enter name'");
	ПоказатьВводСтроки(ОписаниеОповещения, , ТекстСообщения, 150);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриВводеНаименованияДополнительногоСвойства(Наименование, ДополнительныеПараметры) Экспорт
	
	Если ПустаяСтрока(Наименование) Тогда
		ТекстСообщения = НСтр("ru = 'Введите наименование реквизита';
								|en = 'Enter attribute description'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
		Возврат;
	КонецЕсли;
	
	СоздатьДополнительноеСвойствоСервер(Наименование, 
		ДополнительныеПараметры.ТипЗначенияПоляИсточника,
		ДополнительныеПараметры.ДополнительноеСведение);
	
КонецПроцедуры

&НаСервере
Процедура СоздатьДополнительноеСвойствоСервер(Наименование, ТипЗначенияПоляИсточника, ЭтоДополнительноеСведение)
	
	ПоследнееСозданноеСвойство = Неопределено;
	
	Для каждого Тип Из ТипЗначенияПоляИсточника.Типы() Цикл
		
		Ссылка = Новый (Тип);
		НаборСвойств = ПроверитьВозможностьДобавленияДополнительногоСвойства(Ссылка, ЭтоДополнительноеСведение);
		Если НаборСвойств = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		НачатьТранзакцию();
		Попытка
			НовоеДополнительноеСвойство = ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения.СоздатьЭлемент();
			НовоеДополнительноеСвойство.НаборСвойств = НаборСвойств;
			НовоеДополнительноеСвойство.Заголовок = Наименование;
			НовоеДополнительноеСвойство.Наименование = Наименование;
			НовоеДополнительноеСвойство.ТипЗначения = ТипЗначения;
			НовоеДополнительноеСвойство.ЭтоДополнительноеСведение = ЭтоДополнительноеСведение;
			
			ЗаголовокОбъекта = Наименование;
			УдалитьНедопустимыеСимволы(ЗаголовокОбъекта);
			ЗаголовокОбъектаЧастями = СтрРазделить(ЗаголовокОбъекта, " ", Ложь);
			Имя = "";
			Для Каждого ЧастьЗаголовка Из ЗаголовокОбъектаЧастями Цикл
				Имя = Имя + ВРег(Лев(ЧастьЗаголовка, 1)) + Сред(ЧастьЗаголовка, 2);
			КонецЦикла;
			УИД = Новый УникальныйИдентификатор();
			СтрокаУИД = СтрЗаменить(Строка(УИД), "-", "");
			НовоеДополнительноеСвойство.Имя = Имя + "_" + СтрокаУИД;
			
			НовоеДополнительноеСвойство.Записать();
			
			ДобавитьДополнительноеСвойствоДляОбъекта(НаборСвойств, НовоеДополнительноеСвойство.Ссылка, ЭтоДополнительноеСведение); 
			
			ПоследнееСозданноеСвойство = НовоеДополнительноеСвойство.Ссылка;
			
			ЗафиксироватьТранзакцию();
		Исключение
			ОтменитьТранзакцию();
			ВызватьИсключение;
		КонецПопытки;
		
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ПоследнееСозданноеСвойство) Тогда
		ТекущееВыражение = ТекущееВыражение + "." + ИдентификаторДополнительногоРеквизитаНаЯзыкеФормул(ПоследнееСозданноеСвойство);
	КонецЕсли;
	
	ФинансоваяОтчетностьСервер.ЗаполнитьДоступныеПоляПоСхемеКомпоновкиДанных(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Функция НаборСвойствОбъекта(Ссылка)
	
	НаборыСвойств = УправлениеСвойствамиСлужебный.ПолучитьНаборыСвойствОбъекта(Ссылка);
	
	Если НаборыСвойств.Количество() = 0 Тогда
		Возврат Неопределено;
	Иначе
		Возврат НаборыСвойств[0].Набор;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ДобавитьДополнительноеСвойствоСервер(ВыбранноеДополнительноеСвойство, ОписаниеТипов)
	
	ЭтоДополнительноеСведение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ВыбранноеДополнительноеСвойство, "ЭтоДополнительноеСведение");
	
	Для каждого Тип Из ОписаниеТипов.Типы() Цикл
		Ссылка = Новый (Тип);
		НаборСвойств = ПроверитьВозможностьДобавленияДополнительногоСвойства(Ссылка, ЭтоДополнительноеСведение);
		Если НаборСвойств = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		ДобавитьДополнительноеСвойствоДляОбъекта(НаборСвойств, ВыбранноеДополнительноеСвойство, ЭтоДополнительноеСведение);
	КонецЦикла;
	
	ФинансоваяОтчетностьСервер.ЗаполнитьДоступныеПоляПоСхемеКомпоновкиДанных(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьДополнительноеСвойствоДляОбъекта(НаборСвойств, ВыбранноеДополнительноеСвойство, ЭтоДополнительноеСведение)
	
	НаборСвойствОбъект = НаборСвойств.ПолучитьОбъект(); // СправочникОбъект.НаборыДополнительныхРеквизитовИСведений - 
	Если ЭтоДополнительноеСведение Тогда
		ДополнительныеСвойства = НаборСвойствОбъект.ДополнительныеСведения; // ТабличнаяЧасть -
	Иначе
		ДополнительныеСвойства = НаборСвойствОбъект.ДополнительныеРеквизиты; // ТабличнаяЧасть -
	КонецЕсли;
	
	НовоеСвойство = ДополнительныеСвойства.Добавить(); // СтрокаТабличнойЧасти -
	НовоеСвойство.Свойство = ВыбранноеДополнительноеСвойство;
	
	НаборСвойствОбъект.Записать();
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьДобавленияДополнительногоСвойства(Ссылка, ЭтоДополнительноеСведение)
	
	МожноДобавитьДополнительноеСвойство = Истина;
	Если ЭтоДополнительноеСведение Тогда
		Если Не УправлениеСвойствами.ИспользоватьДопСведения(Ссылка) Тогда
			МожноДобавитьДополнительноеСвойство = Ложь;
			ШаблонСообщения = НСтр("ru = 'Для объекта ""%1"" не предусмотрено использование дополнительных сведений.';
									|en = 'Usage of additional information is not provided for the ""%1"" object.'");
		КонецЕсли;
	Иначе
		Если Не УправлениеСвойствами.ИспользоватьДопРеквизиты(Ссылка) Тогда
			МожноДобавитьДополнительноеСвойство = Ложь;
			ШаблонСообщения = НСтр("ru = 'Для объекта ""%1"" не предусмотрено использование дополнительных реквизитов.';
									|en = 'Usage of additional attributes is not provided for the ""%1"" object.'");
		КонецЕсли;
	КонецЕсли;
		
	Если Не МожноДобавитьДополнительноеСвойство Тогда
		ОбщегоНазначения.СообщитьПользователю(
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонСообщения, Ссылка.Метаданные().Представление()));
		Возврат Неопределено;
	КонецЕсли;
	
	НаборСвойствОбъекта = НаборСвойствОбъекта(Ссылка);
	
	Возврат НаборСвойствОбъекта;
	
КонецФункции

&НаСервере
Функция ИдентификаторДополнительногоРеквизитаНаЯзыкеФормул(ДополнительноеСвойство)
	
	Идентификатор = "";
	МетаданныеХарактеристик = Метаданные.ПланыВидовХарактеристик.ДополнительныеРеквизитыИСведения;
	ВыражениеИдентификатора = РаботаСФормулами.ВыражениеПолногоИдентификатораХарактеристики(МетаданныеХарактеристик, Ложь);
	ВыражениеИдентификатора = СтрЗаменить(ВыражениеИдентификатора, "%ИмяТаблицы%", "ДополнительныеРеквизитыИСведения");
	Запрос = Новый Запрос;
	Текст =
	"ВЫБРАТЬ
	|	&ВыражениеИдентификатораХарактеристики КАК ДополнительноеСвойствоИдентификатор
	|ИЗ
	|	ПланВидовХарактеристик.ДополнительныеРеквизитыИСведения КАК ДополнительныеРеквизитыИСведения
	|ГДЕ
	|	ДополнительныеРеквизитыИСведения.Ссылка = &ДополнительноеСвойство";
	Текст = СтрЗаменить(Текст, "&ВыражениеИдентификатораХарактеристики", ВыражениеИдентификатора);
	Запрос.Текст = Текст;
	Запрос.УстановитьПараметр("ДополнительноеСвойство", ДополнительноеСвойство);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Идентификатор = Выборка.ДополнительноеСвойствоИдентификатор;
	КонецЦикла;
	
	Возврат Идентификатор;
КонецФункции

&НаСервере
Процедура ЗаполнитьДополнительноеСвойствоИдентификатор()
	Если ЗначениеЗаполнено(ДополнительноеСвойство) Тогда
		ДополнительноеСвойствоИдентификатор = ИдентификаторДополнительногоРеквизитаНаЯзыкеФормул(ДополнительноеСвойство);
	Иначе
		ДополнительноеСвойствоИдентификатор = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти