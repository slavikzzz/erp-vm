
#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если СпособОткрытия = "Дерево" Тогда 
		Для Каждого Стр Из ВыбранныеФайлыДерево.ПолучитьЭлементы() Цикл 
			Элементы.ВыбранныеФайлыДерево.Развернуть(Стр.ПолучитьИдентификатор());
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ЗначениеЗаполнено(Параметры.ВладелецФайла) Тогда
		ВладелецФайла = Параметры.ВладелецФайла;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.ВидДокумента) Тогда
		ВидДокумента = Параметры.ВидДокумента;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Параметры.СпособОткрытия) Тогда
		СпособОткрытия = Параметры.СпособОткрытия;
	КонецЕсли;
	
	ОтсканированныеФайлы = РегистрационныеФормыВызовСервера.ТаблицаОтсканированныхСтраницДокумента(ВладелецФайла, ВидДокумента);
	Если Параметры.СпособОткрытия = "Дерево" Тогда
		ЗагрузкаДереваФайлов(ОтсканированныеФайлы);
		Элементы.ВыбранныеФайлы.Видимость = Ложь;
	ИначеЕсли Параметры.СпособОткрытия = "Список" Тогда
		ВыбранныеФайлы.Загрузить(ОтсканированныеФайлы);
		Элементы.ВыбранныеФайлыДерево.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	Если Не ЗавершениеРаботы И Модифицированность Тогда
		СтандартнаяОбработка = Ложь;
		Отказ = Истина;
		ПередЗакрытиемАсинх();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПередЗакрытиемАсинх()
	Результат = Ждать ВопросАсинх("Данные были изменены. Записать изменения?", РежимДиалогаВопрос.ДаНет);
	Если КодВозвратаДиалога.Да = Результат Тогда 
		ПередЗакрытиемЗавершение(Результат, Неопределено);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	КоличествоФайлов = 0;
	Если СпособОткрытия = "Список" Тогда 
		Для Каждого ТекущийФайл Из ВыбранныеФайлы Цикл
			Если ЗначениеЗаполнено(ТекущийФайл.Ссылка) Тогда
				КоличествоФайлов = КоличествоФайлов + 1;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СпособОткрытия = "Дерево" Тогда 
		Для Каждого ТекущаяПапка Из ВыбранныеФайлыДерево.ПолучитьЭлементы() Цикл
			Для Каждого ТекущийФайл Из ТекущаяПапка.ПолучитьЭлементы() Цикл
				Если ЗначениеЗаполнено(ТекущийФайл.Ссылка) Тогда
					КоличествоФайлов = КоличествоФайлов + 1;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	ОповеститьОВыборе(КоличествоФайлов);
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	ДопустимыеРасширения = ДопустимыеРасширенияФайлов();
	ТекстСообщения = СтрШаблон(НСтр("ru = 'Выбран некорректный файл.
		|Сканы документов должны быть в формате: %1.';
		|en = 'Выбран некорректный файл.
		|Сканы документов должны быть в формате: %1.'"), СтрСоединить(ДопустимыеРасширения, ", "));
	
	Для Каждого ТекущийФайл Из ВыбранныеФайлы Цикл
		Если Не ЗначениеЗаполнено(ТекущийФайл.Ссылка)
			И ДопустимыеРасширения.Найти(НРег(ТекущийФайл.РасширениеФайла)) = Неопределено Тогда
			
			ИмяПоля = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("ВыбранныеФайлы", ТекущийФайл.НомерСтроки, "ИмяФайла");
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , ИмяПоля, , Отказ);
		КонецЕсли;
	КонецЦикла;
	Для Каждого ТекущаяПапка Из ВыбранныеФайлыДерево.ПолучитьЭлементы() Цикл
		Для Каждого ТекущийФайл Из ТекущаяПапка.ПолучитьЭлементы() Цикл
			Если Не ЗначениеЗаполнено(ТекущийФайл.Ссылка)
				И ДопустимыеРасширения.Найти(НРег(ТекущийФайл.РасширениеФайла)) = Неопределено Тогда
				
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , , , Отказ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Если ТолькоПросмотр Тогда 
		Выполнение = Ложь;
	КонецЕсли;
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		Выполнение = Выполнение И (ВыбранныеФайлыДерево.НайтиПоИдентификатору(Элт).ПолучитьРодителя() <> Неопределено);
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если Строка <> Неопределено
		И ВыбранныеФайлыДерево.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено Тогда 
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если Строка = Неопределено Или (ВыбранныеФайлыДерево.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено) Тогда 
		Возврат;
	КонецЕсли;
	Папка = ВыбранныеФайлыДерево.НайтиПоИдентификатору(Строка);
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		ПеретаскиваемыйЭлемент = ВыбранныеФайлыДерево.НайтиПоИдентификатору(Элт);
		ЗаполнитьЗначенияСвойств(Папка.ПолучитьЭлементы().Добавить(), ПеретаскиваемыйЭлемент);
	КонецЦикла;
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		ПеретаскиваемыйЭлемент = ВыбранныеФайлыДерево.НайтиПоИдентификатору(Элт);
		ПеретаскиваемыйЭлемент.ПолучитьРодителя().ПолучитьЭлементы().Удалить(ПеретаскиваемыйЭлемент);
	КонецЦикла;
	ОбновитьНумерациюСтрок();
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеФайлы

&НаКлиенте
Процедура ВыбранныеФайлыПриИзменении(Элемент)
	ОбновитьНумерациюСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Элемент", Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыбранныеФайлыДобавлениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ДопустимыеРасширения = СтрСоединить(ДопустимыеРасширенияФайлов(), ";*.");
	
	Фильтр = СтрШаблон(НСтр("ru = 'Картинка (*.%1)|*%1';
							|en = 'Картинка (*.%1)|*%1'"), ДопустимыеРасширения);
	
	ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
	ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
	ПараметрыЗагрузки.Диалог.Фильтр = Фильтр;
	ПараметрыЗагрузки.Диалог.МножественныйВыбор = Истина;
	ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещения, ПараметрыЗагрузки);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = Элементы.ВыбранныеФайлы.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
#Если ВебКлиент Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПоказатьПрисоединенныйФайлВВебКлиенте(ТекущиеДанные.Ссылка);
#Иначе
		ДанныеФайла = РегистрационныеФормыВызовСервера.ДанныеФайлаДляОткрытия(
			ТекущиеДанные.Ссылка, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
#КонецЕсли
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ПутьКФайлу) Тогда
		ФайловаяСистемаКлиент.ОткрытьФайл(ТекущиеДанные.ПутьКФайлу);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыПередУдалением(Элемент, Отказ)
	ФайлыКУдалению = Новый Массив;
	
	ВыбранныеСтроки = Элементы.ВыбранныеФайлы.ВыделенныеСтроки;
	Для Каждого ТекущаяСтрока Из ВыбранныеСтроки Цикл
		
		Если Элементы.ВыбранныеФайлы.ПроверитьСтроку(ТекущаяСтрока) Тогда
			ДанныеСтроки = Элементы.ВыбранныеФайлы.ДанныеСтроки(ТекущаяСтрока);
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				ФайлыКУдалению.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	ПометитьНаУдалениеПрикрепленныеФайлы(ФайлыКУдалению);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыВыбранныеФайлыДерево

&НаКлиенте
Процедура ВыбранныеФайлыДеревоПриИзменении(Элемент)
	ОбновитьНумерациюСтрок();
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоПередУдалением(Элемент, Отказ)
	ФайлыКУдалению = Новый Массив;
	
	Для Каждого ТекущаяСтрока Из Элементы.ВыбранныеФайлыДерево.ВыделенныеСтроки Цикл
		Если Элементы.ВыбранныеФайлыДерево.ПроверитьСтроку(ТекущаяСтрока) Тогда
			ДанныеСтроки = Элементы.ВыбранныеФайлыДерево.ДанныеСтроки(ТекущаяСтрока);
			
			Для Каждого Файл Из ДанныеСтроки.ПолучитьЭлементы() Цикл 
				Если ЗначениеЗаполнено(Файл.Ссылка) Тогда
					ФайлыКУдалению.Добавить(Файл.Ссылка);
				КонецЕсли;
			КонецЦикла;
			Если ЗначениеЗаполнено(ДанныеСтроки.Ссылка) Тогда
				ФайлыКУдалению.Добавить(ДанныеСтроки.Ссылка);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ПометитьНаУдалениеПрикрепленныеФайлы(ФайлыКУдалению);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ВыбранныеФайлыДеревоВыборАсинх(Элемент, ВыбраннаяСтрока, Поле);
КонецПроцедуры

&НаКлиенте
Процедура ВыбранныеФайлыДеревоПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ВыбранныеФайлыДеревоПередНачаломДобавленияАсинх(Элемент, Копирование, Родитель, Группа, Параметр);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ДействиеОК(Команда)
	Если Модифицированность Тогда
		ЗаписатьПрикрепленныеФайлы();
		Модифицированность = Ложь;
	КонецЕсли;
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ВыбранныеФайлыДобавлениеЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если Не ЗначениеЗаполнено(РезультатВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	ДопустимыеРасширения = ДопустимыеРасширенияФайлов();
	
	Для Каждого ТекущийФайл Из РезультатВыбора Цикл
		
		СтрокиРазделения = СтрРазделить(ТекущийФайл.ИмяФайла, ".");
		РасширениеФайла = СтрокиРазделения[СтрокиРазделения.Количество() - 1];
		Если ДопустимыеРасширения.Найти(НРег(РасширениеФайла)) = Неопределено Тогда
			ТекстСообщения = СтрШаблон(НСтр("ru = 'Неверный формат файла: %1.
				|Допустимые расширения файлов: %2';
				|en = 'Неверный формат файла: %1.
				|Допустимые расширения файлов: %2'"),
				ТекущийФайл.ИмяФайла,
				СтрСоединить(ДопустимыеРасширения, ", "));
			ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
			Продолжить;
		КонецЕсли;
		
		Если ДополнительныеПараметры.Элемент.Имя = "ВыбранныеФайлы" Тогда 
			НоваяСтрока = ВыбранныеФайлы.Добавить();
			НоваяСтрока.НомерСтроки = ВыбранныеФайлы.Количество();
			НоваяСтрока.АдресФайла = ТекущийФайл.Хранение;
			НоваяСтрока.ИмяФайла = ТекущийФайл.ИмяФайла;
			НоваяСтрока.РасширениеФайла = РасширениеФайла;
			НоваяСтрока.ПутьКФайлу = ТекущийФайл.ПолноеИмя;
		ИначеЕсли ДополнительныеПараметры.Элемент.Имя = "ВыбранныеФайлыДерево" Тогда 
			НоваяСтрока = ДополнительныеПараметры.ПапкаДляДобавления.ПолучитьЭлементы().Добавить();
			НоваяСтрока.НомерСтроки = ДополнительныеПараметры.ПапкаДляДобавления.ПолучитьЭлементы().Количество();
			НоваяСтрока.АдресФайла = ТекущийФайл.Хранение;
			НоваяСтрока.ИмяФайла = ТекущийФайл.ИмяФайла;
			НоваяСтрока.РасширениеФайла = РасширениеФайла;
			НоваяСтрока.ПутьКФайлу = ТекущийФайл.ПолноеИмя;
			НоваяСтрока.ИндексКартинки = 1;
			Элементы.ВыбранныеФайлыДерево.Развернуть(ДополнительныеПараметры.ПапкаДляДобавления.ПолучитьИдентификатор());
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаписатьПрикрепленныеФайлы()
	Если СпособОткрытия = "Список" Тогда 
		Для Каждого ТекущийФайл Из ВыбранныеФайлы Цикл
			ОписаниеФайла = СтрШаблон(Нстр("ru = '%1,%2';
											|en = '%1,%2'"),
				ВидДокумента, Формат(ТекущийФайл.НомерСтроки, "ЧДЦ=0; ЧГ=0"));
			
			Если ТекущийФайл.Ссылка.Пустая() Тогда
				СведенияОФайле = РаботаСФайлами.ПараметрыДобавленияФайла();
				СведенияОФайле.ВладелецФайлов = ВладелецФайла;
				СведенияОФайле.Автор = Пользователи.ТекущийПользователь();
				СведенияОФайле.ИмяБезРасширения = ТекущийФайл.ИмяФайла;
				СведенияОФайле.РасширениеБезТочки = ТекущийФайл.РасширениеФайла;
				СведенияОФайле.Служебный = Истина;
				ТекущийФайл.Ссылка = РаботаСФайлами.ДобавитьФайл(СведенияОФайле, ТекущийФайл.АдресФайла, , ОписаниеФайла);
			Иначе
				СпрОбъект = ТекущийФайл.Ссылка.ПолучитьОбъект();
				СпрОбъект.Описание = ОписаниеФайла;
				СпрОбъект.Записать();
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СпособОткрытия = "Дерево" Тогда
		Для Каждого ТекущаяПапка Из ВыбранныеФайлыДерево.ПолучитьЭлементы() Цикл
			Для Каждого ТекущийФайл Из ТекущаяПапка.ПолучитьЭлементы() Цикл
				ОписаниеФайла = СтрШаблон(Нстр("ru = '%1,%2,%3,*%4';
												|en = '%1,%2,%3,*%4'"),
					ВидДокумента, Формат(ТекущийФайл.НомерСтроки, "ЧДЦ=0; ЧГ=0"),
					Формат(ТекущаяПапка.НомерСтрокиГруппы, "ЧДЦ=0; ЧГ=0"), ТекущаяПапка.ИмяФайла);
				
				Если ТекущийФайл.Ссылка.Пустая() Тогда
					СведенияОФайле = РаботаСФайлами.ПараметрыДобавленияФайла();
					СведенияОФайле.ВладелецФайлов = ВладелецФайла;
					СведенияОФайле.Автор = Пользователи.ТекущийПользователь();
					СведенияОФайле.ИмяБезРасширения = ТекущийФайл.ИмяФайла;
					СведенияОФайле.РасширениеБезТочки = ТекущийФайл.РасширениеФайла;
					СведенияОФайле.Служебный = Истина;
					ТекущийФайл.Ссылка = РаботаСФайлами.ДобавитьФайл(СведенияОФайле, ТекущийФайл.АдресФайла, , ОписаниеФайла);
				Иначе
					СпрОбъект = ТекущийФайл.Ссылка.ПолучитьОбъект();
					СпрОбъект.Описание = ОписаниеФайла;
					СпрОбъект.Записать();
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьНумерациюСтрок()
	КоличествоСтрок = ВыбранныеФайлы.Количество() - 1;
	Для ИндексСтроки = 0 По КоличествоСтрок Цикл
		ВыбранныеФайлы[ИндексСтроки].НомерСтроки = ИндексСтроки + 1;
	КонецЦикла;
	
	Папки = ВыбранныеФайлыДерево.ПолучитьЭлементы();
	КоличествоСтрок = Папки.Количество() - 1;
	Для ИндексСтроки = 0 По КоличествоСтрок Цикл
		Папки[ИндексСтроки].НомерСтрокиГруппы = ИндексСтроки + 1;
	КонецЦикла;
	
	Для Каждого Стр Из ВыбранныеФайлыДерево.ПолучитьЭлементы() Цикл 
		Файлы = Стр.ПолучитьЭлементы();
		КоличествоСтрок = Файлы.Количество() - 1;
		Для ИндексСтроки = 0 По КоличествоСтрок Цикл
			Файлы[ИндексСтроки].НомерСтроки = ИндексСтроки + 1;
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПометитьНаУдалениеПрикрепленныеФайлы(ФайлыКУдалению)
	
	Для Каждого ТекущийФайл Из ФайлыКУдалению Цикл
		СпрОбъект = ТекущийФайл.ПолучитьОбъект();
		СпрОбъект.УстановитьПометкуУдаления(Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Параметры) Экспорт
	
	Если Результат = КодВозвратаДиалога.Нет Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;
	
	Если ПроверитьЗаполнение() Тогда
		Модифицированность = Ложь;
		ЗаписатьПрикрепленныеФайлы();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ДопустимыеРасширенияФайлов()
	
	Результат = Новый Массив;
	Результат.Добавить("png");
	Результат.Добавить("jpg");
	Результат.Добавить("jpeg");
	Результат.Добавить("bmp");
	Результат.Добавить("tiff");
	Результат.Добавить("tif");
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ЗагрузкаДереваФайлов(ОтсканированныеФайлы)
	НомерСтрокиГруппы = Неопределено;
	Папка = Неопределено;
	Для Каждого Стр Из ОтсканированныеФайлы Цикл 
		Если НомерСтрокиГруппы <> Стр.НомерСтрокиГруппы Тогда 
			Папка = ВыбранныеФайлыДерево.ПолучитьЭлементы().Добавить();
			Папка.ИмяФайла = Стр.ИмяДокумента;
			Папка.ИндексКартинки = 0;
			НомерСтрокиГруппы = Стр.НомерСтрокиГруппы;
		КонецЕсли;
		НовСтрФайл = Папка.ПолучитьЭлементы().Добавить();
		НовСтрФайл.ИмяФайла = Стр.ИмяФайла;
		НовСтрФайл.НомерСтроки = Стр.НомерСтроки;
		НовСтрФайл.ИндексКартинки = 1;
		НовСтрФайл.Ссылка = Стр.Ссылка;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВыбранныеФайлыДеревоВыборАсинх(Элемент, ВыбраннаяСтрока, Поле)
	ТекущиеДанные = Элементы.ВыбранныеФайлыДерево.ТекущиеДанные;
	
	Если ЗначениеЗаполнено(ТекущиеДанные.Ссылка) Тогда
#Если ВебКлиент Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПоказатьПрисоединенныйФайлВВебКлиенте(ТекущиеДанные.Ссылка);
#Иначе
		ДанныеФайла = РегистрационныеФормыВызовСервера.ДанныеФайлаДляОткрытия(
			ТекущиеДанные.Ссылка, УникальныйИдентификатор);
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла);
#КонецЕсли
	ИначеЕсли ЗначениеЗаполнено(ТекущиеДанные.ПутьКФайлу) Тогда
		ФайловаяСистемаКлиент.ОткрытьФайл(ТекущиеДанные.ПутьКФайлу);
	ИначеЕсли ТекущиеДанные.ПолучитьРодителя() = Неопределено И Не ТолькоПросмотр Тогда 
		НовСтр = Ждать ВвестиСтрокуАсинх(ТекущиеДанные.ИмяФайла);
		Если ЗначениеЗаполнено(НовСтр) Тогда 
			ТекущиеДанные.ИмяФайла = НовСтр;
			Модифицированность = Истина
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ВыбранныеФайлыДеревоПередНачаломДобавленияАсинх(Элемент, Копирование, Родитель, Группа, Параметр)
	Если Элемент.ТекущиеДанные = Неопределено Тогда 
		ОписаниеДокумента = Ждать ВвестиСтрокуАсинх("", "Введите описание набора файлов");
		Если ЗначениеЗаполнено(ОписаниеДокумента) Тогда 
			НовСтр = ВыбранныеФайлыДерево.ПолучитьЭлементы().Добавить();
			НовСтр.ИмяФайла = ОписаниеДокумента;
			ОбновитьНумерациюСтрок();
			Модифицированность = Истина;
		КонецЕсли;
	Иначе
		КнопкиВопроса = Новый СписокЗначений;
		КнопкиВопроса.Добавить("ПапкаФайлов", НСтр("ru = 'Папка документов';
													|en = 'Папка документов'"));
		КнопкиВопроса.Добавить("Файл", НСтр("ru = 'Файл';
											|en = 'Файл'"));
		КнопкиВопроса.Добавить("Отмена", НСтр("ru = 'Отмена';
												|en = 'Отмена'"));
		
		ТипОбъекта = Ждать ВопросАсинх("Выберете объект для добавления", КнопкиВопроса);
		Если ТипОбъекта = "ПапкаФайлов" Тогда 
			ОписаниеДокумента = Ждать ВвестиСтрокуАсинх("", "Введите описание набора файлов");
			Если ЗначениеЗаполнено(ОписаниеДокумента) Тогда 
				НовСтр = ВыбранныеФайлыДерево.ПолучитьЭлементы().Добавить();
				НовСтр.ИмяФайла = ОписаниеДокумента;
				ОбновитьНумерациюСтрок();
				Модифицированность = Истина;
			КонецЕсли;
		ИначеЕсли ТипОбъекта = "Файл" Тогда 
			Родитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
			ПапкаДляДобавления = ?(Родитель = Неопределено, Элемент.ТекущиеДанные, Родитель);
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("ПапкаДляДобавления", ПапкаДляДобавления);
			ДополнительныеПараметры.Вставить("Элемент", Элемент);
			ОписаниеОповещения = Новый ОписаниеОповещения("ВыбранныеФайлыДобавлениеЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ДопустимыеРасширения = СтрСоединить(ДопустимыеРасширенияФайлов(), ";*.");
			Фильтр = СтрШаблон(НСтр("ru = 'Картинка (*.%1)|*%1';
									|en = 'Картинка (*.%1)|*%1'"), ДопустимыеРасширения);
			ПараметрыЗагрузки = ФайловаяСистемаКлиент.ПараметрыЗагрузкиФайла();
			ПараметрыЗагрузки.ИдентификаторФормы = УникальныйИдентификатор;
			ПараметрыЗагрузки.Диалог.Фильтр = Фильтр;
			ПараметрыЗагрузки.Диалог.МножественныйВыбор = Истина;
			ФайловаяСистемаКлиент.ЗагрузитьФайлы(ОписаниеОповещения, ПараметрыЗагрузки);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти