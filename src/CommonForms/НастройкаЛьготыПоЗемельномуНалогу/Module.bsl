
#Область ОписаниеПеременных

&НаКлиенте
Перем СтруктураСохраняемыхРеквизитов;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ЗначенияЗаполнения") Тогда
		
		ЗаполнитьЗначенияСвойств(ЭтотОбъект, Параметры.ЗначенияЗаполнения);

	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СтруктураСохраняемыхРеквизитов = Новый Структура;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Сохранить изменения?';
							|en = 'The data has changed. Do you want to save the changes?'");
		
		ОповещениеОЗакрытии = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект, Отказ);
		
		ПоказатьВопрос(ОповещениеОЗакрытии, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
		
		Отказ = Истина;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	ВидЛьготыПоБазе = ПолучитьВидЛьготы(ОснованиеЛьготыПоНалоговойБазе);
	Если Не ЗначениеЗаполнено(ОснованиеЛьготыПоНалоговойБазе)
		 Или ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоляНеОблагаемойНалогомПлощадиЧислитель");
		МассивНепроверяемыхРеквизитов.Добавить("ДоляНеОблагаемойНалогомПлощадиЗнаменатель");
		МассивНепроверяемыхРеквизитов.Добавить("НеОблагаемаяНалогомСумма");
	КонецЕсли;
	
	Если ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("НеОблагаемаяНалогомСумма");
	ИначеЕсли ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму") Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ДоляНеОблагаемойНалогомПлощадиЧислитель");
		МассивНепроверяемыхРеквизитов.Добавить("ДоляНеОблагаемойНалогомПлощадиЗнаменатель");
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОснованиеЛьготыСнижениеСуммыНалога) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СуммаУменьшенияСуммыНалога");
		МассивНепроверяемыхРеквизитов.Добавить("ПроцентУменьшенияСуммыНалога");
	Иначе
		ВидЛьготыПоСумме = ПолучитьВидЛьготы(ОснованиеЛьготыСнижениеСуммыНалога);
		Если ВидЛьготыПоСумме = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент") Тогда
				МассивНепроверяемыхРеквизитов.Добавить("СуммаУменьшенияСуммыНалога");
		ИначеЕсли ВидЛьготыПоСумме = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму") Тогда
				МассивНепроверяемыхРеквизитов.Добавить("ПроцентУменьшенияСуммыНалога");
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ОснованиеЛьготыСнижениеСтавки) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("СниженнаяНалоговаяСтавка");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОснованиеЛьготыПоНалоговойБазеПриИзменении(Элемент)
	
	ВидЛьготыПоБазе = ПолучитьВидЛьготы(ОснованиеЛьготыПоНалоговойБазе);
	Если ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
		НеОблагаемаяНалогомСумма = 0;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеЛьготыСнижениеСуммыНалогаПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОснованиеЛьготыСнижениеСтавкиПриИзменении(Элемент)
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗавершитьРедактирование(Команда)
	
	ЗаписатьДанные();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	
	Элементы = Форма.Элементы;
	
	Элементы.ПараметрыЛьготыПоНалоговойБазе.Видимость = ЗначениеЗаполнено(Форма.ОснованиеЛьготыПоНалоговойБазе);
	Элементы.ПараметрыЛьготыУменьшениеСуммы.Видимость = ЗначениеЗаполнено(Форма.ОснованиеЛьготыСнижениеСуммыНалога);
	Элементы.ПараметрыЛьготыСниженнаяСтавка.Видимость = ЗначениеЗаполнено(Форма.ОснованиеЛьготыСнижениеСтавки);
	
	ВидЛьготыПоСумме = ПолучитьВидЛьготы(Форма.ОснованиеЛьготыСнижениеСуммыНалога);
	Если ЗначениеЗаполнено(Форма.ОснованиеЛьготыСнижениеСуммыНалога) 
			И ВидЛьготыПоСумме = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент") Тогда
				Элементы.СуммаУменьшенияСуммыНалога.Видимость   = Ложь;
				Элементы.ПроцентУменьшенияСуммыНалога.Видимость = Истина;
				Элементы.НадписьПроцентУменьшенияСуммы.Видимость = Истина;
				
	ИначеЕсли ЗначениеЗаполнено(Форма.ОснованиеЛьготыСнижениеСуммыНалога) 
				И ВидЛьготыПоСумме = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму") Тогда
					Элементы.СуммаУменьшенияСуммыНалога.Видимость   = Истина;
					Элементы.ПроцентУменьшенияСуммыНалога.Видимость = Ложь;
					Элементы.НадписьПроцентУменьшенияСуммы.Видимость = Ложь;
	Иначе
		Элементы.СуммаУменьшенияСуммыНалога.Видимость   = Ложь;
		Элементы.ПроцентУменьшенияСуммыНалога.Видимость = Ложь;
		Элементы.НадписьПроцентУменьшенияСуммы.Видимость = Ложь;
	КонецЕсли;
	
	Элементы.ПодтверждающиеДокументыЛьготаПоНалоговойБазе.Заголовок = ПолучитьЗаголовокСсылки(Форма.ОснованиеЛьготыПоНалоговойБазе);
	Элементы.ПодтверждающиеДокументыЛьготаУменьшениеСуммы.Заголовок = ПолучитьЗаголовокСсылки(Форма.ОснованиеЛьготыСнижениеСуммыНалога);
	Элементы.ПодтверждающиеДокументыЛьготаСнижениеСтавки.Заголовок  = ПолучитьЗаголовокСсылки(Форма.ОснованиеЛьготыСнижениеСтавки);
	
	ВидЛьготыПоБазе = ПолучитьВидЛьготы(Форма.ОснованиеЛьготыПоНалоговойБазе);
	Если ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
		Элементы.ГруппаДоляНеоблагаемойПлощади.Видимость = Ложь;
		Элементы.НеОблагаемаяНалогомСумма.Видимость      = Ложь;
	ИначеЕсли ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму") Тогда
		Элементы.ГруппаДоляНеоблагаемойПлощади.Видимость = Ложь;
		Элементы.НеОблагаемаяНалогомСумма.Видимость      = Истина;
	ИначеЕсли ВидЛьготыПоБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади") Тогда
		Элементы.ГруппаДоляНеоблагаемойПлощади.Видимость = Истина;
		Элементы.НеОблагаемаяНалогомСумма.Видимость      = Ложь;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СуммаУменьшенияСуммыНалогаПриИзменении(Элемент)
	Если СуммаУменьшенияСуммыНалога <> 0 Тогда
		ПроцентУменьшенияСуммыНалога = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроцентУменьшенияСуммыНалогаПриИзменении(Элемент)
	Если ПроцентУменьшенияСуммыНалога <> 0 Тогда
		СуммаУменьшенияСуммыНалога = 0;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающиеДокументыЛьготаПоНалоговойБазеНажатие(Элемент)
	ОткрытьПодтверждающиеДокументы(ОснованиеЛьготыПоНалоговойБазе);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьВидЛьготы(Льгота)
	Если Не ЗначениеЗаполнено(Льгота) Тогда
		Возврат Перечисления.ВидыЛьготПоИмущественнымНалогам.ПустаяСсылка();
	КонецЕсли;
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Льгота, "ВидЛьготы");
КонецФункции

&НаКлиенте
Процедура ПодтверждающиеДокументыЛьготаУменьшениеСуммыНажатие(Элемент)
	ОткрытьПодтверждающиеДокументы(ОснованиеЛьготыСнижениеСуммыНалога);
КонецПроцедуры

&НаКлиенте
Процедура ПодтверждающиеДокументыЛьготаСнижениеСтавкиНажатие(Элемент)
	ОткрытьПодтверждающиеДокументы(ОснованиеЛьготыСнижениеСтавки);
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьПодтверждающиеДокументы(Льгота)
	ОповещениеПослеЗакрытия = Новый ОписаниеОповещения("ОбновитьСсылкиПодтверждающихДокументов", ЭтотОбъект);
	
	ЗначениеОтбора = Новый Структура();
	ЗначениеОтбора.Вставить("Владелец", Льгота);
	ЗначениеОтбора.Вставить("Организация", ЭтотОбъект.ВладелецФормы.Объект.Организация);
	
	ПараметрыФормы = Новый Структура("Отбор", ЗначениеОтбора);
	ОткрытьФорму("Справочник.ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам.Форма.ФормаСписка", ПараметрыФормы,,,,, ОповещениеПослеЗакрытия);
КонецПроцедуры   

&НаКлиенте
Процедура ОбновитьСсылкиПодтверждающихДокументов(РезультатЗакрытия, ДополнительныеПараметры) Экспорт
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПолучитьЗаголовокСсылки(ОснованиеЛьготы)
	
	Если Не ЗначениеЗаполнено(ОснованиеЛьготы) Тогда
		Возврат "";
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам.Ссылка) КАК КоличествоДокументов
	|ИЗ
	|	Справочник.ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам КАК
	|		ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам
	|ГДЕ
	|	ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам.Владелец = &Владелец
	|	И ДокументыПодтверждающиеЛьготыПоИмущественнымНалогам.ПометкаУдаления = ЛОЖЬ";
	
	Запрос.УстановитьПараметр("Владелец", ОснованиеЛьготы);
	Запрос.УстановитьПараметр("Организация", );
	
	Результат = Запрос.Выполнить();
	
	ТекстЗаголовка = НСтр("ru = 'Подтверждающие документы отсутствуют';
							|en = 'Justification documents are missing'");
	
	Если Не Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		Выборка.Следующий();
		
		ШаблонЗаголовка = НСтр("ru = 'Подтверждающих документов: %1';
								|en = 'Justification documents: %1'");
		
		ТекстЗаголовка = СтрШаблон(ШаблонЗаголовка, Выборка.КоличествоДокументов);
		
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
	
КонецФункции

&НаКлиенте
Процедура ЗаписатьДанные(Отказ = Ложь)
	
	ОчиститьСообщения();
	
	Если ПроцентУменьшенияСуммыНалога > 100 Тогда
		
		ТекстСообщения = НСтр("ru = 'Льгота в виде уменьшения суммы налога не может превышать 100%!';
								|en = 'Tax relief as a tax amount reduction cannot exceed 100%.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "ПроцентУменьшенияСуммыНалога", , Отказ);
		
	КонецЕсли;
	
	Если СниженнаяНалоговаяСтавка > НалоговаяСтавка Тогда
		
		ШаблонСообщения = НСтр("ru = 'Сниженная налоговая ставка не может превышать основную налоговую ставку %1%!';
								|en = 'Reduced tax rate cannot exceed general tax rate %1%.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Формат(НалоговаяСтавка, "ЧЦ=5; ЧДЦ=4; ЧН=0;"));
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , "СниженнаяНалоговаяСтавка", , Отказ);
		
	КонецЕсли;
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ПроверитьЗаполнение() Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЛьготы = Новый Структура(
	"ВариантУменьшенияСуммыНалога,
	|ЛьготнаяСтавка,
	|ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
	|ДоляНеОблагаемойНалогомПлощадиЧислитель,
	|КодНалоговойЛьготыОсвобождениеОтНалогообложенияПоСтатье395,
	|КодНалоговойЛьготыУменьшениеНалоговойБазыПоСтатье391,
	|НалоговаяЛьготаПоНалоговойБазе,
	|НеОблагаемаяНалогомСумма,
	|ПроцентУменьшенияСуммыНалога,
	|СниженнаяНалоговаяСтавка,
	|СуммаУменьшенияСуммыНалога,
	|УменьшениеНалоговойБазыНаСумму,
	|УменьшениеНалоговойБазыПоСтатье391,
	|ОснованиеЛьготыПоНалоговойБазе,
	|НачалоДействияЛьготыПоНалоговойБазе,
	|ОкончаниеДействияЛьготыПоНалоговойБазе,
	|ОснованиеЛьготыСнижениеСтавки,
	|НачалоДействияЛьготыСнижениеСтавки,
	|ОкончаниеДействияЛьготыСнижениеСтавки,
	|ОснованиеЛьготыСнижениеСуммыНалога,
	|НачалоДействияЛьготыСнижениеСуммыНалога,
	|ОкончаниеДействияЛьготыСнижениеСуммыНалога");
	
	ЗаполнитьЗначенияСвойств(ПараметрыЛьготы, ЭтотОбъект);
	
	Модифицированность = Ложь;
	
	ОповеститьОВыборе(ПараметрыЛьготы);
	
КонецПроцедуры // ЗаписатьДанные()

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Результат, Отказ) Экспорт
	
	Если Результат = КодВозвратаДиалога.Да Тогда
		
		ЗаписатьДанные(Отказ);
		
	ИначеЕсли Результат = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть();
		
	КонецЕсли;

КонецПроцедуры	

#КонецОбласти
