
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Организация) Тогда
		Организация = Параметры.Организация;
	КонецЕсли;
	
	ТестовыйКонтур = ПолучитьФункциональнуюОпцию("РежимРаботыСТестовымКонтуромИСМП");
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура Пункт1ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПерейтиВЛичныйКабинетГИСМТ" Тогда
			
		Если ТестовыйКонтур Тогда
			
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://markirovka.sandbox.crptech.ru/");
			
		Иначе
			
			ФайловаяСистемаКлиент.ОткрытьНавигационнуюСсылку("https://markirovka.crpt.ru/");
			
		КонецЕсли;
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПерейтиВСписокТокенов" Тогда
		
		ИмяОткрываемойФормы = "РегистрСведений.ДанныеКлючаСессииИСМП.Форма.ФормаПросмотраИАктуализацииТокеновАвторизации";
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Актуализация", Ложь);
		
		ОткрытьФорму(ИмяОткрываемойФормы, ПараметрыФормы, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.Независимый);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Пункт2ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "ПерейтиВСписокСертификатов" Тогда
		
		ИмяОткрываемойФормы = "ОбщаяФорма.НастройкиЭлектроннойПодписиИШифрования";
		
		ОткрытьФорму(ИмяОткрываемойФормы,, ЭтотОбъект,,,,, РежимОткрытияОкнаФормы.Независимый);
		
	ИначеЕсли НавигационнаяСсылкаФорматированнойСтроки = "ПодписатьТокен" Тогда
		
		ПараметрыАвторизации = ИнтерфейсИСМПОбщегоНазначенияКлиент.ПараметрыЗапросаДанных();
		ПараметрыАвторизации.ОповещениеОЗавершении = Новый ОписаниеОповещения("ПослеПодписанияТокенаАвторизации", ЭтотОбъект);
		
		ПараметрыАвторизации.Параметры = ИнтерфейсАвторизацииИСМПКлиент.ДополнительныеПараметрыЗапросаКлючаСессии();
		ПараметрыАвторизации.Параметры.ПоказыватьОшибкиНапрямую = Истина;
		
		Если ЗначениеЗаполнено(Организация) Тогда
			ПараметрыАвторизации.Организация = Организация;
		КонецЕсли;
		
		ИнтерфейсИСМПОбщегоНазначенияКлиент.АвторизацияГИСМТРозничныйТокен(ПараметрыАвторизации);
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Пункт3ОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "АктуализацияСпискаCDNПлощадок" Тогда
		
		ЗапуститьАктуализациюСпискаCDNПлощадок();
		
	Иначе
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ЗапуститьАктуализациюСпискаCDNПлощадок()
	
	ПослеВыполненияОбновления = Новый ОписаниеОповещения("ПослеАктуализацииСпискаПлощадок", ЭтотОбъект);
	
	ПараметрыЗапроса                         = ИнтерфейсИСМПОбщегоНазначенияКлиент.ПараметрыЗапросаДанных();
	ПараметрыЗапроса.ОповещениеОЗавершении   = ПослеВыполненияОбновления;
	ПараметрыЗапроса.УникальныйИдентификатор = УникальныйИдентификатор;
	
	ПараметрыЗапроса.Параметры                          = ИнтерфейсАвторизацииИСМПКлиент.ДополнительныеПараметрыЗапросаКлючаСессии();
	ПараметрыЗапроса.Параметры.ПоказыватьОшибкиНапрямую = Истина;
	
	ПараметрыЗапроса.Параметры.Вставить("ОбновлятьБезПроверкиДатыОбновления", Истина);
	
	Если ЗначениеЗаполнено(Организация) Тогда
		ПараметрыЗапроса.Организация = Организация;
	КонецЕсли;
	
	ИнтерфейсИСМПОбщегоНазначенияКлиент.АктуализацияСпискаCDNПлощадок(ПараметрыЗапроса);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеАктуализацииСпискаПлощадок(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ЕстьОшибки И ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстОшибки);
		
	ИначеЕсли Результат.ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	Оповестить("ОбновитьСписокCDNПлощадокПослеЗагрузки",, ЭтотОбъект);
	Закрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеПодписанияТокенаАвторизации(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат.ЕстьОшибки И ЗначениеЗаполнено(Результат.ТекстОшибки) Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ТекстОшибки);
		
	ИначеЕсли Результат.ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьАктуализациюСпискаCDNПлощадок();
	
КонецПроцедуры

#КонецОбласти
