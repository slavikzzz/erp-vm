#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Обработка параметров.
	МассивОшибок = Параметры.Ошибки;
	
	Параметры.Свойство("ПараметрыРежима",			ПараметрыРежима);
	Параметры.Свойство("ЭтоАвтозапрос", 			ЭтоАвтозапрос);
	
	ИспользуетсяОднаОрганизация = УниверсальныйОбменСБанками.ИспользуетсяОднаОрганизация();
	
	ЗаполнитьДеревоОшибок(МассивОшибок);
	
	УстановитьЗаголовок(Параметры);
	
	ВывестиНадписьПроОшибки(МассивОшибок);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы

&НаКлиенте
Процедура ОшибкиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОшибки = Элемент.ТекущиеДанные.ОписаниеОшибки;
	ПоказатьЗначение(,ОписаниеОшибки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура УстановитьЗаголовок(Параметры)
	
	Если ЭтоРасшифровка(ПараметрыРежима) Тогда
		Заголовок = НСтр("ru = 'Ошибки расшифровки сообщений';
						|en = 'Message decryption errors'");
	ИначеЕсли ЭтоОбмен(ПараметрыРежима) Тогда
		Заголовок = НСтр("ru = 'Ошибки обмена';
						|en = 'Exchange errors'");
	ИначеЕсли ЭтоАвтозапрос Тогда
		Заголовок = НСтр("ru = 'Протокол не получен';
						|en = 'Protocol is not received'");
	Иначе
		Заголовок = Параметры.Заголовок;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДеревоОшибок(МассивОшибок)

	Ошибки = Новый ТаблицаЗначений;
	Ошибки.Колонки.Добавить("ОписаниеОшибки");
	Ошибки.Колонки.Добавить("Организация");
	
	// Раскладывание ошибок по таблице.
	Организации = Новый Массив;
	Для каждого Ошибка Из МассивОшибок Цикл
		НоваяОшибка = Ошибки.Добавить();
		НоваяОшибка.ОписаниеОшибки 	= Ошибка.ОписаниеОшибки;
		НоваяОшибка.Организация 	= Ошибка.Организация;
		
		Если Ошибка.Организация <> Неопределено
			И Организации.Найти(Ошибка.Организация) = Неопределено Тогда
				Организации.Добавить(Ошибка.Организация);
		КонецЕсли;
	КонецЦикла;
	
	ДеревоОшибок  = РеквизитФормыВЗначение("ОшибкиПоОрганизациям");
	
	ЭтоОбменИзОтчета = Ложь;
	ЭтоОбменИзЭтаповОтправки = Ложь;
	ЭтоОтправка = Ложь;
	ЭтоОтправкаЗаявления = Ложь;
	
	Если Организации.Количество() = 0
		ИЛИ ИспользуетсяОднаОрганизация
		ИЛИ (ЭтоОбмен(ПараметрыРежима)
			И (ПараметрыРежима.ЭтоОбменИзФормыПредмета
			ИЛИ ПараметрыРежима.ЭтоОбменИзЭтаповОтправки))
		ИЛИ ЭтоОтправка(ПараметрыРежима) Тогда
		СформироватьДеревоОшибокПлоско(ДеревоОшибок, Ошибки);
	Иначе
		СформироватьДеревоОшибокПоОрганизациям(ДеревоОшибок, Организации, Ошибки);
	КонецЕсли;
	
	ЗначениеВРеквизитФормы(ДеревоОшибок, "ОшибкиПоОрганизациям");

КонецПроцедуры 

&НаСервере
Процедура СформироватьДеревоОшибокПоОрганизациям(ДеревоОшибок, Организации, Ошибки)

	Корень = ДеревоОшибок.Строки;
	Для каждого Организация Из Организации Цикл
		
		УровеньОрганизации = Корень.Добавить();
		Если ЗначениеЗаполнено(Организация) Тогда
			УровеньОрганизации.ОписаниеОшибки = Организация;
		Иначе
			УровеньОрганизации.ОписаниеОшибки = НСтр("ru = '<Без указания организации>';
													|en = '<Without company specification>'");
		КонецЕсли;
		
		УровеньОрганизации.ЭтоЗаголовок   = Истина;
		
		Отбор = Новый Структура();
		Отбор.Вставить("Организация", Организация);
		
		ОшибкиПоОрганизации = Ошибки.НайтиСтроки(Отбор);
		Для каждого ОшибкаПоОрганизации Из ОшибкиПоОрганизации Цикл
			УровеньОшибки = УровеньОрганизации.Строки.Добавить();
			УровеньОшибки.ОписаниеОшибки = ОшибкаПоОрганизации.ОписаниеОшибки;
		КонецЦикла; 
		
	КонецЦикла;

	Элементы.ОшибкиПоОрганизациям.Отображение = ОтображениеТаблицы.Список;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоОшибокПлоско(ДеревоОшибок, Ошибки)

	Корень = ДеревоОшибок.Строки;
	Для каждого Ошибка Из Ошибки Цикл
		УровеньОшибки = Корень.Добавить();
		УровеньОшибки.ОписаниеОшибки = Ошибка.ОписаниеОшибки;
	КонецЦикла; 

	Элементы.ОшибкиПоОрганизациям.Отображение = ОтображениеТаблицы.Список;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНадписьПроОшибки(МассивОшибок)

	Если ЭтоРасшифровка(ПараметрыРежима) Тогда
		Надпись = НСтр("ru = 'Обратите внимание, при расшифровке сообщений возникли следующие ошибки:';
						|en = 'Note that the following errors occurred while decrypting messages:'");
	ИначеЕсли ЭтоОбмен(ПараметрыРежима) Тогда
		Надпись = НСтр("ru = 'Обратите внимание, при обмене данными возникли следующие ошибки:';
						|en = 'Note that the following errors occurred while exchanging data:'");
	ИначеЕсли ЭтоОтправка(ПараметрыРежима) Тогда
		Надпись = НСтр("ru = 'При отправке сообщений возникли следующие ошибки:';
						|en = 'The following errors occurred while sending messages:'");
	Иначе
		Надпись = НСтр("ru = 'Обратите внимание, при обмене данными возникли следующие ошибки:';
						|en = 'Note that the following errors occurred while exchanging data:'");
	КонецЕсли;
	
	Элементы.НадписьПроКоличествоОшибок.Заголовок = Надпись;

КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоОбмен(ПараметрыРежима)
	
	Возврат ПараметрыРежима.Режим = ДлительныеОперацииОбменаСБанкамиКлиентСервер.РежимОбмен();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоОтправка(ПараметрыРежима)
	
	Возврат ПараметрыРежима.Режим = ДлительныеОперацииОбменаСБанкамиКлиентСервер.РежимОтправка();
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ЭтоРасшифровка(ПараметрыРежима)
	
	Возврат ПараметрыРежима.Режим = ДлительныеОперацииОбменаСБанкамиКлиентСервер.РежимРасшифровка();
	
КонецФункции

#КонецОбласти