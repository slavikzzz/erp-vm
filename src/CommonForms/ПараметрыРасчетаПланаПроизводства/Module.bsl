
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;
	
	ПараметрыРасчета = РасчетПланаПроизводства.ОбщиеНастройки();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыРасчета);
	
	УстановленыСтандартныеНастройки = ОбщегоНазначения.КоллекцииИдентичны(ПараметрыРасчета,
																			РасчетПланаПроизводства.СтандартныеНастройкиРасчетаПланаПроизводства());
	
	НастроитьЭлементыФормы();
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Оповещение = Новый ОписаниеОповещения("СохранитьИЗакрыть", ЭтотОбъект);
	ОбщегоНазначенияКлиент.ПоказатьПодтверждениеЗакрытияФормы(Оповещение, Отказ, ЗавершениеРаботы);
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Не ОграничитьКоличествоСтрокВНабореЗаписей Тогда
		МассивНепроверяемыхРеквизитов.Добавить("КоличествоСтрокВНабореЗаписей");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КомандаПрименить(Команда)
	
	СохранитьИЗакрыть();
	
КонецПроцедуры

&НаКлиенте
Процедура КомандаПоУмолчанию(Команда)
	
	УстановитьНастройкиПоУмолчанию();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РаспараллеливатьРасчетПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "РаспараллеливатьРасчет");
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоПотоковПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "КоличествоПотоков");
	
КонецПроцедуры

&НаКлиенте
Процедура ПорцияЧтенияОтПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "ПорцияЧтенияОт");
	
КонецПроцедуры

&НаКлиенте
Процедура ПорцияЧтенияДоПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "ПорцияЧтенияДо");
	
КонецПроцедуры

&НаКлиенте
Процедура ПорцияЗаписиПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "ПорцияЗаписи");
	
КонецПроцедуры

&НаКлиенте
Процедура ОграничитьКоличествоСтрокВНабореЗаписейПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	Если Не ОграничитьКоличествоСтрокВНабореЗаписей Тогда
		КоличествоСтрокВНабореЗаписей = 0;
	КонецЕсли;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "ОграничитьКоличествоСтрокВНабореЗаписей");
	
КонецПроцедуры

&НаКлиенте
Процедура КоличествоСтрокВНабореЗаписейПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "КоличествоСтрокВНабореЗаписей");
	
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьПовтИспРассчитанныхДанныхПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "РазрешитьПовтИспРассчитанныхДанных");
	
КонецПроцедуры

&НаКлиенте
Процедура МаксГлубинаРасчетаПриИзменении(Элемент)
	
	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "МаксГлубинаРасчета");
	
КонецПроцедуры

&НаКлиенте
Процедура ИскатьЦиклыПослеПриИзменении(Элемент)

	УстановленыСтандартныеНастройки = Ложь;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма, "ИскатьЦиклыПосле");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура НастроитьЭлементыФормы()
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура НастроитьЗависимыеРеквизитыФормы(Форма, СписокРеквизитов = "")
	
	Объект = Форма;
	Элементы = Форма.Элементы;
	
	Инициализация = ПустаяСтрока(СписокРеквизитов);
	СтруктураРеквизитов = Новый Структура(СписокРеквизитов);
	
	Если Инициализация Тогда
		
		Форма.ОграничитьКоличествоСтрокВНабореЗаписей = Форма.КоличествоСтрокВНабореЗаписей > 0;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("РаспараллеливатьРасчет")
		ИЛИ Инициализация Тогда
		
		Форма.Элементы.КоличествоПотоков.Доступность = Форма.РаспараллеливатьРасчет;
		
	КонецЕсли;
	
	Если СтруктураРеквизитов.Свойство("ОграничитьКоличествоСтрокВНабореЗаписей")
		ИЛИ Инициализация Тогда
		
		Форма.Элементы.КоличествоСтрокВНабореЗаписей.Доступность = Форма.ОграничитьКоличествоСтрокВНабореЗаписей;
		Форма.Элементы.КоличествоСтрокВНабореЗаписей.АвтоОтметкаНезаполненного = Форма.ОграничитьКоличествоСтрокВНабореЗаписей;
		
	КонецЕсли;

	
	Если СтруктураРеквизитов.Свойство("РаспараллеливатьРасчет")
			ИЛИ СтруктураРеквизитов.Свойство("КоличествоПотоков")
			ИЛИ СтруктураРеквизитов.Свойство("ПорцияЧтенияОт")
			ИЛИ СтруктураРеквизитов.Свойство("ПорцияЧтенияДо")
			ИЛИ СтруктураРеквизитов.Свойство("ПорцияЗаписи")
			ИЛИ СтруктураРеквизитов.Свойство("ОграничитьКоличествоСтрокВНабореЗаписей")
			ИЛИ СтруктураРеквизитов.Свойство("КоличествоСтрокВНабореЗаписей")
			ИЛИ СтруктураРеквизитов.Свойство("МаксГлубинаРасчета")
			ИЛИ СтруктураРеквизитов.Свойство("ИскатьЦиклыПосле")
			ИЛИ СтруктураРеквизитов.Свойство("РазрешитьПовтИспРассчитанныхДанных")
			ИЛИ Инициализация Тогда
		
		Форма.Элементы.ФормаКомандаПоУмолчанию.Доступность = Не Форма.УстановленыСтандартныеНастройки;
		
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура УстановитьНастройкиПоУмолчанию()
	
	ПараметрыРасчета = РасчетПланаПроизводства.СтандартныеНастройкиРасчетаПланаПроизводства();
	
	ЗаполнитьЗначенияСвойств(ЭтаФорма, ПараметрыРасчета);
	
	УстановленыСтандартныеНастройки = Истина;
	
	НастроитьЗависимыеРеквизитыФормы(ЭтаФорма);
	
КонецПроцедуры

&НаСервере
Процедура СохранитьНастройкиПараметровРасчета()
	
	Модифицированность = Ложь;
	РасчетПланаПроизводства.ЗаписатьНастройкиРасчетаПланаПроизводства(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьИЗакрыть(Результат = Неопределено, ДополнительныеПараметры = Неопределено) Экспорт
	
	Если ПроверитьЗаполнение() Тогда
		СохранитьНастройкиПараметровРасчета();
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
