
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.НастройкиБухучета) Тогда
		Для каждого СтрокаНастроек Из Параметры.НастройкиБухучета Цикл
			ЗаполнитьЗначенияСвойств(ТаблицаРаспределения.Добавить(), СтрокаНастроек);
		КонецЦикла;
	КонецЕсли;
	
	Организация = Параметры.Организация;

	ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
		Элементы,
		"ТаблицаРаспределенияПодразделениеУчетаЗатрат",
		"Видимость",
		Параметры.ЕстьПодразделение);
	
	ИтогРаспределения = ТаблицаРаспределения.Итог("ДоляРаспределения");
	
	УстановитьУсловноеОформление();
	
КонецПроцедуры

&НаСервере
Процедура ОбработкаПроверкиЗаполненияНаСервере(Отказ, ПроверяемыеРеквизиты)
	
	НомерСтроки = 0;
	Для каждого СтрокаТЗ Из ТаблицаРаспределения Цикл
		
		Если СтрокаТЗ.ДоляРаспределения = 0 Тогда
			
			ТекстСообщения = НСтр("ru = 'Не указана доля распределения';
									|en = 'Allocation share is not specified'");
			
			ОбщегоНазначения.СообщитьПользователю(
				ТекстСообщения,
				,
				"ТаблицаРаспределения[" + НомерСтроки + "].ДоляРаспределения",
				,
				Отказ);
			
		КонецЕсли;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийТаблицыРаспределения

&НаКлиенте
Процедура ТаблицаРаспределенияПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	ИтогРаспределения = ТаблицаРаспределения.Итог("ДоляРаспределения");
КонецПроцедуры

&НаКлиенте
Процедура ТаблицаРаспределенияПослеУдаления(Элемент)
	ИтогРаспределения = ТаблицаРаспределения.Итог("ДоляРаспределения");
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ЗаписатьЗакрыть(Команда)
	
	ОчиститьСообщения();
	
	Отказ = Ложь;
	Если Не ПроверитьЗаполнение() Тогда
		Отказ = Истина;
	Иначе
		Результат = РезультатРедактирования();
	КонецЕсли;
	
	Если Не Отказ Тогда
		Закрыть(Результат);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция РезультатРедактирования()

	НовыеНастройки = ТаблицаРаспределения.Выгрузить();
	ОтражениеЗарплатыВБухучетеРасширенный.ДополнитьТаблицуРаспределенияКодомСтатьиФинансирования(НовыеНастройки);
	НастройкиБухучета = ЗарплатаКадрыРасширенный.ТаблицаЗначенийВСтруктуру(НовыеНастройки);
	Результат = Новый Структура("НастройкиБухучета", НастройкиБухучета);
	Результат.Вставить("ИспользоватьСтатьиФинансирования", ПолучитьФункциональнуюОпцию("ИспользоватьСтатьиФинансированияЗарплатаРасширенный"));
	Результат.Вставить("РаботаВБюджетномУчреждении", ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении"));
	
	Возврат Новый ФиксированнаяСтруктура(Результат);

КонецФункции

&НаСервере
Процедура УстановитьУсловноеОформление()

	ТекстПустогоЗначения = НСтр("ru = '<подбирается автоматически>';
								|en = '<picked automatically>'");
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаРаспределения.СтатьяФинансирования");
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРаспределенияСтатьяФинансирования");
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаРаспределения.СтатьяРасходов");
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРаспределенияСтатьяРасходов");
	
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", ТекстПустогоЗначения);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ПоясняющийТекст);
	ЭлементОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ЭлементОтбора.ВидСравнения = ВидСравненияКомпоновкиДанных.НеЗаполнено;
	ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ТаблицаРаспределения.СпособОтраженияЗарплатыВБухучете");
	ОформляемоеПоле = ЭлементУсловногоОформления.Поля.Элементы.Добавить(); 
	ОформляемоеПоле.Поле = Новый ПолеКомпоновкиДанных("ТаблицаРаспределенияСпособОтраженияЗарплатыВБухучете");

КонецПроцедуры

#КонецОбласти





