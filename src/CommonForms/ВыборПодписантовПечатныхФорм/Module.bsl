#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если ЗначениеЗаполнено(Параметры.Организации) Тогда
		
		Если ТипЗнч(Параметры.Организации) = Тип("СправочникСсылка.Организации") Тогда
			Организации.Добавить(Параметры.Организации);
		Иначе
			Организации.ЗагрузитьЗначения(Параметры.Организации);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Параметры.ВыборЕдинственногоПодписанта Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьСвойствоЭлементаФормы(
			Элементы,
			"Подписанты",
			"РежимВыделения",
			РежимВыделенияТаблицы.Одиночный);
		ЗарплатаКадрыКлиентСервер.УстановитьРасширеннуюПодсказкуЭлементуФормы(
			ЭтотОбъект,
			"Подписанты",
			"");
	КонецЕсли;
	
	ПользователиДляВыбора = АктивныеПользователи();
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		Подписанты, "ПользователиДляВыбора", ПользователиДляВыбора, Истина);
	
	Элементы.Подписанты.ВыделенныеСтроки.Очистить();
	Если ТипЗнч(Параметры.ПодписантыПечатныхФорм) = Тип("ФиксированныйМассив") Тогда
		
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(Элементы.Подписанты.ВыделенныеСтроки , Параметры.ПодписантыПечатныхФорм);
		ТолькоПодписантыССертификатами = Ложь;
		
	Иначе
		ТолькоПодписантыССертификатами = Истина;
	КонецЕсли;
	
	ПодписантыССертификатами = Новый ФиксированныйМассив(ПользователиССертификатамиПодписания(ПользователиДляВыбора, Ложь));
	ПодписантыГоловнойОрганизации = Новый ФиксированныйМассив(ПользователиССертификатамиПодписания(ПользователиДляВыбора, Истина));
	ПодписантыСМЧД = Новый ФиксированныйМассив(ПользователиСМЧД(ПользователиДляВыбора));
	
	УстановитьОтборПоПодписантамСЭЦП(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПодписантыОпределеныПриИзменении(Элемент)
	
	УстановитьОтборПоПодписантамСЭЦП(ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаСервере
Функция АктивныеПользователи()
	
	ПользователиДляВыбора = Новый Массив;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ТекущийПользователь", Пользователи.ТекущийПользователь());
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	Пользователи.Ссылка КАК Пользователь
		|ИЗ
		|	Справочник.Пользователи КАК Пользователи
		|ГДЕ
		|	НЕ Пользователи.ПометкаУдаления
		|	И НЕ Пользователи.Недействителен
		|	И НЕ Пользователи.Служебный
		|	И Пользователи.Ссылка <> &ТекущийПользователь";
	
	УстановитьПривилегированныйРежим(Истина);
	Выборка = Запрос.Выполнить().Выбрать();
	УстановитьПривилегированныйРежим(Ложь);
	
	Пока Выборка.Следующий() Цикл
		Если Пользователи.ВходВПрограммуРазрешен(Выборка.Пользователь) Тогда
			ПользователиДляВыбора.Добавить(Выборка.Пользователь);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПользователиДляВыбора;
	
КонецФункции

&НаСервере
Функция ПользователиССертификатамиПодписания(СписокПользователей, ПоГоловнойОрганизации)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПользователей", СписокПользователей);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь КАК Пользователь
		|ИЗ
		|	Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования КАК СертификатыКлючейЭлектроннойПодписиИШифрования
		|ГДЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь В(&СписокПользователей)
		|	И НЕ СертификатыКлючейЭлектроннойПодписиИШифрования.ПометкаУдаления
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Подписание
		|	И &ОтборПоОрганизации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь
		|ИЗ
		|	Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователи КАК СертификатыКлючейЭлектроннойПодписиИШифрования
		|ГДЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь В(&СписокПользователей)
		|	И НЕ СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.ПометкаУдаления
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.Подписание
		|	И &ОтборПоОрганизации";
	
	Если ЗначениеЗаполнено(Организации) Тогда
		
		Если ПоГоловнойОрганизации Тогда
			УстановитьПривилегированныйРежим(Истина);
			ОтборОрганизаций = ОбщегоНазначения.ЗначениеРеквизитаОбъектов(Организации.ВыгрузитьЗначения(), "ГоловнаяОрганизация");
			УстановитьПривилегированныйРежим(Ложь);
		Иначе
			ОтборОрганизаций = Организации;
		КонецЕсли;
		Запрос.УстановитьПараметр("Организации", ОбщегоНазначения.ВыгрузитьКолонку(ОтборОрганизаций, "Значение"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОрганизации",
			"(СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.Организация В (&Организации)
				|			ИЛИ СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка))");
		
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ОтборПоОрганизации", "(ИСТИНА)");
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Пользователь");
	
КонецФункции

&НаСервере
Функция ПользователиСМЧД(СписокПользователей)
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("СписокПользователей", СписокПользователей);
	Запрос.УстановитьПараметр("Организации", Организации);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь КАК Пользователь
		|ИЗ
		|	Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования КАК СертификатыКлючейЭлектроннойПодписиИШифрования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МашиночитаемыеДоверенностиПредставителиИДоверители КАК МашиночитаемыеДоверенностиПредставители
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МашиночитаемыеДоверенностиПредставителиИДоверители КАК МашиночитаемыеДоверенностиДоверители
		|			ПО (МашиночитаемыеДоверенностиДоверители.ТипУчастника = ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковМЧД.Доверитель))
		|				И (МашиночитаемыеДоверенностиДоверители.ОГРН В
		|					(ВЫБРАТЬ
		|						Организации.ОГРН
		|					ИЗ
		|						Справочник.Организации КАК Организации
		|					ГДЕ
		|						Организации.Ссылка В (&Организации)))
		|		ПО СертификатыКлючейЭлектроннойПодписиИШифрования.ФизическоеЛицо.ИНН = МашиночитаемыеДоверенностиПредставители.ИННФЛ
		|			И (МашиночитаемыеДоверенностиПредставители.ТипУчастника = ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковМЧД.Представитель))
		|ГДЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь В(&СписокПользователей)
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И НЕ СертификатыКлючейЭлектроннойПодписиИШифрования.ПометкаУдаления
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Подписание
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь
		|ИЗ
		|	Справочник.СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователи КАК СертификатыКлючейЭлектроннойПодписиИШифрования
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МашиночитаемыеДоверенностиПредставителиИДоверители КАК МашиночитаемыеДоверенностиПредставители
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МашиночитаемыеДоверенностиПредставителиИДоверители КАК МашиночитаемыеДоверенностиДоверители
		|			ПО (МашиночитаемыеДоверенностиДоверители.ТипУчастника = ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковМЧД.Доверитель))
		|				И (МашиночитаемыеДоверенностиДоверители.ОГРН В
		|					(ВЫБРАТЬ
		|						Организации.ОГРН
		|					ИЗ
		|						Справочник.Организации КАК Организации
		|					ГДЕ
		|						Организации.Ссылка В (&Организации)))
		|		ПО СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.ФизическоеЛицо.ИНН = МашиночитаемыеДоверенностиПредставители.ИННФЛ
		|			И (МашиночитаемыеДоверенностиПредставители.ТипУчастника = ЗНАЧЕНИЕ(Перечисление.ТипыУчастниковМЧД.Представитель))
		|ГДЕ
		|	СертификатыКлючейЭлектроннойПодписиИШифрования.Пользователь В(&СписокПользователей)
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|	И НЕ СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.ПометкаУдаления
		|	И СертификатыКлючейЭлектроннойПодписиИШифрования.Ссылка.Подписание";
	
	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат РезультатЗапроса.Выгрузить().ВыгрузитьКолонку("Пользователь");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборПоПодписантамСЭЦП(УправляемаяФорма)
	
	ВсеПодписанты = Новый Массив(УправляемаяФорма.ПодписантыССертификатами);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеПодписанты, УправляемаяФорма.ПодписантыГоловнойОрганизации, Истина);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ВсеПодписанты, УправляемаяФорма.ПодписантыСМЧД, Истина);
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
		УправляемаяФорма.Подписанты, "Ссылка", ВсеПодписанты, ВидСравненияКомпоновкиДанных.ВСписке, ,
		УправляемаяФорма.ТолькоПодписантыССертификатами, РежимОтображенияЭлементаНастройкиКомпоновкиДанных.Недоступный);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		УправляемаяФорма.Подписанты, "ПодписантыОрганизации", УправляемаяФорма.ПодписантыССертификатами, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		УправляемаяФорма.Подписанты, "ПодписантыГоловнойОрганизации", УправляемаяФорма.ПодписантыГоловнойОрганизации, Истина);
	
	ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(
		УправляемаяФорма.Подписанты, "ПодписантыСМЧД", УправляемаяФорма.ПодписантыСМЧД, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ПодписантыПриПолученииДанныхНаСервере(ИмяЭлемента, Настройки, Строки)
	
	Для Каждого КлючСтроки Из Строки.ПолучитьКлючи() Цикл
		СтрокаСписка = Строки.Получить(КлючСтроки);
		Если СтрокаСписка.Данные.СМЧД = Истина Или СтрокаСписка.Данные.ПоГоловнойОрганизации = Истина Тогда
			Если СтрокаСписка.Данные.СМЧД Тогда
				ТекстНаименования = СтрШаблон("%1 (%2)", СтрокаСписка.Данные.Наименование, НСтр("ru = 'по МЧД';
																								|en = 'by machine-readable authorization letter'"));
			ИначеЕсли СтрокаСписка.Данные.ПоГоловнойОрганизации Тогда
				ТекстНаименования = СтрШаблон("%1 (%2)", СтрокаСписка.Данные.Наименование, НСтр("ru = 'по головной организации';
																								|en = 'by parent company'"));
			КонецЕсли;
			ОформлениеПоля = СтрокаСписка.Оформление.Получить("Наименование");
			ОформлениеПоля.УстановитьЗначениеПараметра("Текст", ТекстНаименования);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти
