
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ЗаполнитьПодписываемыеФайлы(Параметры.СписокФайлов);
	ЗаполнитьПолучателей();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	НачатьОтправкуПисем();
	ЗакрытьФорму(Отказ);
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиСобытийЭлементовТаблицыФормыПолучатели

&НаКлиенте
Процедура ПолучателиВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	Если Поле = Элементы.ПолучателиФизическоеЛицо Тогда
		
		ТекущиеДанные = Элементы.Получатели.ТекущиеДанные;
		Если ТекущиеДанные <> Неопределено Тогда
			ПоказатьЗначение(, ТекущиеДанные.ФизическоеЛицо);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	ТекущиеДанные = Элементы.Получатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		ЭлектронныйАдресПриНачалеРедактирования = ТекущиеДанные.ЭлектронныйАдрес;
	Иначе
		ЭлектронныйАдресПриНачалеРедактирования = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПолучателиПриОкончанииРедактирования(Элемент, НоваяСтрока, ОтменаРедактирования)
	
	ТекущиеДанные = Элементы.Получатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если ЗначениеЗаполнено(ТекущиеДанные.ФизическоеЛицо) Тогда
			
			Если ЭлектронныйАдресПриНачалеРедактирования <> ТекущиеДанные.ЭлектронныйАдрес Тогда
				
				Если ПустаяСтрока(ТекущиеДанные.ЭлектронныйАдрес) Тогда
					
					ТекстВопроса = НСтр("ru = 'Очистить адрес электронной почты?';
										|en = 'Clear the email?'");
					
					Оповещение = Новый ОписаниеОповещения("ОбновитьЭлектронныйАдрес", ЭтотОбъект);
					ПоказатьВопрос(Оповещение, ТекстВопроса, РежимДиалогаВопрос.ДаНетОтмена);
					
				Иначе
					ОбновитьЭлектронныйАдрес(КодВозвратаДиалога.Да);
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			ЗаполнитьТекстОшибки(ТекущиеДанные);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Отправить(Команда)
	
	НачатьОтправкуПисем();
	ЗакрытьФорму();
	
КонецПроцедуры

&НаКлиенте
Процедура УчетнаяЗаписьЭлектроннойПочты(Команда)
	
	ЗаписьЭлектроннойПочты = УчетнаяЗапись();
	Если ЗаписьЭлектроннойПочты <> Неопределено Тогда
		ОткрытьФорму("Справочник.УчетныеЗаписиЭлектроннойПочты.ФормаОбъекта",
			Новый Структура("Ключ", ЗаписьЭлектроннойПочты), ЭтотОбъект, Истина,
			, , , РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти


#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ОбновитьЭлектронныйАдрес(Результат, ДополнительныеПараметры = Неопределено) Экспорт
	
	ТекущиеДанные = Элементы.Получатели.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено Тогда
		
		Если Результат = КодВозвратаДиалога.Да Тогда
			ОбновитьЭлектронныйАдресНаСервере(ТекущиеДанные.ФизическоеЛицо, ТекущиеДанные.ЭлектронныйАдрес);
			ЗаполнитьТекстОшибки(ТекущиеДанные);
		Иначе
			ТекущиеДанные.ЭлектронныйАдрес = ЭлектронныйАдресПриНачалеРедактирования;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Процедура ОбновитьЭлектронныйАдресНаСервере(ФизическоеЛицо, ЭлектронныйАдрес)
	
	ТаблицаКонтактнойИнформации = УправлениеКонтактнойИнформацией.НоваяКонтактнаяИнформация(Ложь);
	СтрокаКонтактнойИнформации = ТаблицаКонтактнойИнформации.Добавить();
	
	СтрокаКонтактнойИнформации.Вид = СПравочники.ВидыКонтактнойИнформации.EMailФизическиеЛица;
	СтрокаКонтактнойИнформации.Тип = Перечисления.ТипыКонтактнойИнформации.АдресЭлектроннойПочты;
	СтрокаКонтактнойИнформации.Представление = ЭлектронныйАдрес;
	
	УправлениеКонтактнойИнформацией.УстановитьКонтактнуюИнформациюОбъекта(
		ФизическоеЛицо, ТаблицаКонтактнойИнформации, Ложь);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПодписываемыеФайлы(СписокФайлов)
	
	ПодписываемыеФайлы.Загрузить(КадровыйЭДО.ДанныеФайловПечатныхФормКОтправкеПоЭлектроннойПочте(СписокФайлов));
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПолучателей()
	
	Получатели.Загрузить(КадровыйЭДО.ПолучателиЭлектронныхПисем(ПодписываемыеФайлы));
	Если Получатели.Количество() > 0 Тогда
		Для Каждого ДанныеПолучателя Из Получатели Цикл
			ЗаполнитьТекстОшибки(ДанныеПолучателя);
		КонецЦикла;
	Иначе
		ДанныеПолучателя = Получатели.Добавить();
		ЗаполнитьТекстОшибки(ДанныеПолучателя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьТекстОшибки(Получатель)
	
	ТекстОшибки = "";
	
	ЭлектронныйАдрес = СокрЛП(Получатель.ЭлектронныйАдрес);
	ПозицияАмперсанта = СтрНайти(ЭлектронныйАдрес, "@");
	
	Если Не ЗначениеЗаполнено(ЭлектронныйАдрес) Тогда
		ТекстОшибки = НСтр("ru = 'Не задан адрес электронной почты';
							|en = 'The email address is blank'");
	ИначеЕсли ПозицияАмперсанта = 0
		Или СтрНайти(Сред(ЭлектронныйАдрес, ПозицияАмперсанта + 1), ".") = 0 Тогда
		
		ТекстОшибки = НСтр("ru = 'Не верный формат адреса электронной почты';
							|en = 'The email address format is incorrect'");
	Иначе
		
		Для НомерСимвола = 1 По СтрДлина(ЭлектронныйАдрес) Цикл
			
			СимволАдреса = Сред(ЭлектронныйАдрес, НомерСимвола, 1);
			Если СимволАдреса = "@"
				Или СимволАдреса = "."
				Или СимволАдреса = "-"
				Или СимволАдреса = "_" Тогда
				Продолжить;
			КонецЕсли;
			
			Если СтроковыеФункцииКлиентСервер.ТолькоЛатиницаВСтроке(СимволАдреса)
				Или СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СимволАдреса) Тогда
				
				Продолжить;
			КонецЕсли;
			
			ТекстОшибки = НСтр("ru = 'Адрес электронной почты содержит недопустимые символы';
								|en = 'The email address contains invalid characters'");
			Прервать;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Получатель.ТекстОшибки = ТекстОшибки;
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОтправкуПисем()
	
	ОчиститьСообщения();
	
	ОпределенныеПолучатели = Новый Массив;
	Для Каждого ДанныеПолучателя Из Получатели Цикл
		
		Если Не ЗначениеЗаполнено(ДанныеПолучателя.ТекстОшибки) Тогда
			
			ОписаниеПолучателя = Новый Структура("ФизическоеЛицо,ЭлектронныйАдрес");
			ЗаполнитьЗначенияСвойств(ОписаниеПолучателя, ДанныеПолучателя);
			ОпределенныеПолучатели.Добавить(ОписаниеПолучателя);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ОтправитьПисьмаПолучателям(ОпределенныеПолучатели);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция УчетнаяЗапись()
	
	Возврат КадровыйЭДО.УчетнаяЗаписьЭлектроннойПочты();
	
КонецФункции

&НаСервере
Процедура ОтправитьПисьмаПолучателям(ДанныеПолучателей)
	
	ОтправленныеПолучатели = КадровыйЭДО.ОтправитьПисьмаПолучателям(
		ДанныеПолучателей, ПодписываемыеФайлы, УникальныйИдентификатор);
	
	Для Каждого ДанныеПолучателя Из ОтправленныеПолучатели Цикл
		УдалитьПолучателя(ДанныеПолучателя);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьПолучателя(ДанныеПолучателя)
	
	НайденныеПолучатели = Получатели.НайтиСтроки(ДанныеПолучателя);
	Для Каждого НайденныйПолучатель Из НайденныеПолучатели Цикл
		Получатели.Удалить(НайденныйПолучатель);
	КонецЦикла;
	
	ОтправленныеФайлы = ПодписываемыеФайлы.Выгрузить(
		Новый Структура("ФизическоеЛицо", ДанныеПолучателя.ФизическоеЛицо)).ВыгрузитьКолонку("ФайлОбъекта");
	
	УстановитьПривилегированныйРежим(Истина);
	РегистрыСведений.ЗапланированныеДействияСФайламиДокументовКЭДО.УдалитьФайлыИзОбработки(
		ОтправленныеФайлы, Перечисления.ДействияСФайламиДокументовКЭДО.ОтправитьПоПочте);
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьФорму(Отказ = Ложь)
	
	Если Получатели.Количество() = 0 Тогда
		
		Если Открыта() Тогда
			Закрыть();
		Иначе
			Отказ = Истина;
		КонецЕсли;
		
		Если ОписаниеОповещенияОЗакрытии <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ОписаниеОповещенияОЗакрытии, Истина);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

