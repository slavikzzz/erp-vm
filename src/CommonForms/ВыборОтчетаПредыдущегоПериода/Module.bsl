#Область ОписаниеПеременных

&НаСервере
Перем КонтекстЭДОСервер;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Параметры.Свойство("ВидОтправляемогоДокумента", ВидОтправляемогоДокумента);
	Параметры.Свойство("Источник", Источник);
	Параметры.Свойство("ИсточникОтчета", ИсточникОтчета);
	Параметры.Свойство("КонецПериода", КонецПериода);
	Параметры.Свойство("НачалоПериода", НачалоПериода);
	Параметры.Свойство("Организация", Организация);
	Параметры.Свойство("ТекстВыгрузки", ТекстВыгрузки);
	
	Список.Параметры.УстановитьЗначениеПараметра("ВидОтчета", ВидОтправляемогоДокумента);
	Список.Параметры.УстановитьЗначениеПараметра("ИсточникОтчета", ИсточникОтчета);
	Список.Параметры.УстановитьЗначениеПараметра("Конец", КонецПериода);
	Список.Параметры.УстановитьЗначениеПараметра("Начало", НачалоПериода);
	Список.Параметры.УстановитьЗначениеПараметра("Организация", Организация);
	
	Попытка
		Запрос = Новый Запрос(Список.ТекстЗапроса);
		Запрос.УстановитьПараметр("ВидОтчета", ВидОтправляемогоДокумента);
		Запрос.УстановитьПараметр("ИсточникОтчета", ИсточникОтчета);
		Запрос.УстановитьПараметр("Конец", КонецПериода);
		Запрос.УстановитьПараметр("Начало", НачалоПериода);
		Запрос.УстановитьПараметр("Организация", Организация);
		
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 Тогда 
			Выборка.Следующий();
			Источник = Выборка.Ссылка;
			Если ТипЗнч(Источник) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда 
				СписокВыборНаСервере_ЭлектронноеПредставление(Источник);
			ИначеЕсли ТипЗнч(Источник) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда 
				ЗаполнятьПриОткрытии = Истина;
			КонецЕсли;
		КонецЕсли;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить электронное представление отчета';
													|en = 'Не удалось получить электронное представление отчета'"));
		ЗаполнятьПриОткрытии = Ложь;
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ЗаполнятьПриОткрытии Тогда 
		СписокВыборНаКлиенте_РегОтчет(Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСписок

&НаКлиенте
Процедура СписокВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если ТипЗнч(Элемент.ТекущиеДанные.Ссылка) = Тип("ДокументСсылка.РегламентированныйОтчет") Тогда
		СписокВыборНаКлиенте_РегОтчет(Элемент.ТекущиеДанные.Ссылка);
	ИначеЕсли ТипЗнч(Элемент.ТекущиеДанные.Ссылка) = Тип("СправочникСсылка.ЭлектронныеПредставленияРегламентированныхОтчетов") Тогда 
		СписокВыборНаСервере_ЭлектронноеПредставление(Элемент.ТекущиеДанные.Ссылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Выбрать(Команда)
	ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Вставить("ТекстВыгрузки", ТекстВыгрузки);
	ОписаниеОповещенияОЗакрытии.ДополнительныеПараметры.Вставить("Источник", Источник);
	Закрыть();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ЗагрузитьИзФайла(Команда)
	Если Не Ждать РегламентированнаяОтчетностьКлиент.РезультатПодключенияРасширенияРаботыСФайламиАсинх() Тогда 
		Возврат;
	КонецЕсли;
	
	ДВФ = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДВФ.Заголовок = НСтр("ru = 'Выберите файл выгрузки';
						|en = 'Выберите файл выгрузки'");
	ДВФ.Фильтр = НСтр("ru = 'Файл приложения (*.xml)|*.xml';
						|en = 'Файл приложения (*.xml)|*.xml'");
	ДВФ.МножественныйВыбор = Ложь;
	ВыбранныеФайлы = Ждать ДВФ.ВыбратьАсинх();
	
	Если ТипЗнч(ВыбранныеФайлы) = Тип("Массив") И ВыбранныеФайлы.Количество() = 1 Тогда 
		ПотокДанных = Ждать ФайловыеПотоки.ОткрытьДляЧтенияАсинх(ВыбранныеФайлы[0]);
		Если ТипЗнч(ПотокДанных) = Тип("ФайловыйПоток") Тогда 
			ЧтениеДанных = Новый ЧтениеДанных(ПотокДанных);
			ТекстВыгрузки.Очистить();
			#Если ВебКлиент Тогда
			// в вебклиенте ЧтениеДанных.ЧтениеЗавершено работает некорректно в 8.3.21
			Пока Истина Цикл 
				ТекСтр = Ждать ЧтениеДанных.ПрочитатьСтрокуАсинх();
				Если ЗначениеЗаполнено(ТекСтр) Тогда 
					ТекстВыгрузки.ДобавитьСтроку(ТекСтр);
				Иначе 
					Прервать;
				КонецЕсли;
			КонецЦикла;
			#Иначе
			Пока Не ЧтениеДанных.ЧтениеЗавершено Цикл 
				ТекстВыгрузки.ДобавитьСтроку(Ждать ЧтениеДанных.ПрочитатьСтрокуАсинх());
			КонецЦикла;
			#КонецЕсли
			Ждать ЧтениеДанных.ЗакрытьАсинх();
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СписокВыборНаСервере_ЭлектронноеПредставление(Ссылка)
	Попытка
		КонтекстЭДОСервер = КонтекстЭДОСервер(); 
		ИзвлеченныеФайлы = КонтекстЭДОСервер.ИзвлечьЭлектронныеПредставленияВХранилище(Ссылка, УникальныйИдентификатор);
		
		ОбъектовВАрхиве = 0;
		Если ИзвлеченныеФайлы <> Неопределено Тогда
			Для Каждого СвойстваФайла Из ИзвлеченныеФайлы Цикл
				Если СвойстваФайла.ВАрхиве Тогда 
					ОбъектовВАрхиве = ОбъектовВАрхиве + 1;
				КонецЕсли;
				ОпределитьНовыйФайлВТаблицеСвойствФайлов(СвойстваФайла.ИмяФайла, СвойстваФайла.ТипФайлаОтчетности, СвойстваФайла.Данные, СвойстваФайла.ВАрхиве);
			КонецЦикла;
		КонецЕсли;
		
		Если СвойстваФайлов.Количество() = 1 Тогда
			ОсновнойФайл = СвойстваФайлов[0];
		Иначе
			ОсновнойФайл = ПолучитьОсновнойФайл();
		КонецЕсли;
		
		ДанныеФайла = ПолучитьИзВременногоХранилища(ОсновнойФайл.АдресДанных);
		ФайлОсновногоПредставления = ПолучитьИмяВременногоФайла("xml");
		ДанныеФайла.Записать(ФайлОсновногоПредставления);
		АдресДанныхФайлаОсновногоПредставления = ОсновнойФайл.АдресДанных;
		ПредставлениеТекст = КонтекстЭДОСервер.ПрочитатьТекстИзФайла(ФайлОсновногоПредставления, ,Истина);
		УдалитьФайлы(ФайлОсновногоПредставления);
		
		ТекстВыгрузки.УстановитьТекст(ПредставлениеТекст);
		Источник = Ссылка;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить электронное представление отчета';
													|en = 'Не удалось получить электронное представление отчета'"));
		ТекстВыгрузки.УстановитьТекст("");
		Источник = Справочники.ЭлектронныеПредставленияРегламентированныхОтчетов.ПустаяСсылка();
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура СписокВыборНаКлиенте_РегОтчет(Ссылка)
	Попытка
		ФормаВыгрузкиРеглОтчета = ПолучитьФорму("Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента");
		СпДокОсн = Новый СписокЗначений;
		СпДокОсн.Добавить(Ссылка);
		ПредставлениеТекст = "";
		ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн, ПредставлениеТекст);
		ТекстВыгрузки.УстановитьТекст(ПредставлениеТекст);
		Источник = Ссылка;
	Исключение
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось получить электронное представление отчета';
														|en = 'Не удалось получить электронное представление отчета'"));
		ТекстВыгрузки.УстановитьТекст("");
		Источник = ПредопределенноеЗначение("Документ.РегламентированныйОтчет.ПустаяСсылка");
	КонецПопытки;
КонецПроцедуры

&НаСервере
Функция КонтекстЭДОСервер()
	Если КонтекстЭДОСервер = Неопределено Тогда
		КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
	КонецЕсли;
	
	Возврат КонтекстЭДОСервер;
КонецФункции

&НаСервере
Процедура ОпределитьНовыйФайлВТаблицеСвойствФайлов(ИмяФайла, ТипФайла, АдресДанных, Знач ВАрхиве = Ложь)
	НовСтр = СвойстваФайлов.Добавить();
	НовСтр.ИмяФайла = ИмяФайла;
	НовСтр.ТипФайлаОтчетности = ТипФайла;
	НовСтр.АдресДанных = АдресДанных;
	НовСтр.ВАрхиве = ВАрхиве;
КонецПроцедуры

&НаСервере
Функция ПолучитьОсновнойФайл()
	ОсновнойФайл = Неопределено;
	Для Каждого Стр Из СвойстваФайлов Цикл
		нрегРасширениеФайла = нрег(РасширениеФайла(стр.ИмяФайла));
		Если нрегРасширениеФайла = "xml" Тогда
			ОсновнойФайл = Стр;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОсновнойФайл;
КонецФункции

&НаСервере
Функция РасширениеФайла(стрИмяФайла)
	СтрДлинаИмяФайла = СтрДлина(стрИмяФайла);
	Для Инд = 1 По СтрДлинаИмяФайла Цикл
		ТекущийИндекс = СтрДлинаИмяФайла - Инд + 1;
		Если Сред(стрИмяФайла, ТекущийИндекс, 1) = "." Тогда
			Возврат Сред(стрИмяФайла, ТекущийИндекс + 1);
		КонецЕсли;
	КонецЦикла;
	Возврат "";
КонецФункции

#КонецОбласти
