#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Сертификат = Параметры.Сертификат;
	МестоХраненияКлюча = КриптографияЭДКОКлиентСервер.КонтекстМоделиХраненияКлюча(Ложь);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Заголовок = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Просмотр сертификата: %1';
			|en = 'Просмотр сертификата: %1'"), Сертификат.Наименование);
		
	ЗаполнитьЗначенияСвойств(ЭтаФорма, Сертификат,, ?(Сертификат.Свойство("Сертификат"), "Сертификат", Неопределено));
	
	МодульДокументооборотСМинобороныКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДокументооборотСМинобороныКлиент");
	
	Отпечаток = МодульДокументооборотСМинобороныКлиент.ДвоичныеДанныеВСтроку(Сертификат.Отпечаток);
	СерийныйНомер = Строка(Сертификат.СерийныйНомер);
	
	СвойстваВладельца = Сертификат.Субъект;
	СвойстваВладельца.Свойство("CN", ВладелецОбщееИмя);
	СвойстваВладельца.Свойство("O", ВладелецОрганизация);
	СвойстваВладельца.Свойство("OU", ВладелецПодразделение);
	
	СвойстваПоставщика = Сертификат.Издатель;
	СвойстваПоставщика.Свойство("CN", ПоставщикОбщееИмя);
	СвойстваПоставщика.Свойство("O", ПоставщикОрганизация);
	СвойстваПоставщика.Свойство("OU", ПоставщикПодразделение);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Проверить(Команда)
	
	Оповещение = Новый ОписаниеОповещения("ПроверитьЗавершение", ЭтотОбъект);
	
	МодульДокументооборотСМинобороныКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДокументооборотСМинобороныКлиент");
	ОтпечатокСтрока = МодульДокументооборотСМинобороныКлиент.ДвоичныеДанныеВСтроку(Сертификат.Отпечаток);
	МодульДокументооборотСМинобороныКлиент.ПроверитьСертификат(Оповещение, ОтпечатокСтрока);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьЗавершение(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат.Выполнено И Результат.Валиден Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сертификат действителен';
										|en = 'Сертификат действителен'"));
	ИначеЕсли Результат.Выполнено И Не Результат.Валиден Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Сертификат не действителен.';
										|en = 'Сертификат не действителен.'"));
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификат(Команда)
	
	МодульДокументооборотСМинобороныКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ДокументооборотСМинобороныКлиент");
	
	Если НЕ КриптографияЭДКОКлиентСервер.ЭтоЛокальнаяПодпись(МестоХраненияКлюча) Тогда
		АдресФайла = ПолучитьСертификатНаСервере(Отпечаток, УникальныйИдентификатор);
		Если ЗначениеЗаполнено(АдресФайла) Тогда
			ПолучитьФайл(АдресФайла, Отпечаток + ".cer", Истина);
		КонецЕсли;
	Иначе
		Оповещение = Новый ОписаниеОповещения(
			"ОткрытьСертификатПослеЭкспортаСертификата", ЭтотОбъект);
		ОтпечатокСтрока = МодульДокументооборотСМинобороныКлиент.ДвоичныеДанныеВСтроку(Сертификат.Отпечаток);
		МодульДокументооборотСМинобороныКлиент.ЭкспортироватьСертификатВФайл(
			Оповещение, ОтпечатокСтрока, ОтпечатокСтрока + ".cer");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьСертификатПослеЭкспортаСертификата(Результат, ВходящийКонтекст) Экспорт
	
	Если Результат.Выполнено Тогда
		ОперацииСФайламиЭДКОКлиент.ОткрытьФайл(Результат.ИмяФайлаСертификата);
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось открыть сертификат.';
														|en = 'Не удалось открыть сертификат.'"));
	КонецЕсли;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервереБезКонтекста
Функция ПолучитьСертификатНаСервере(Отпечаток, Идентификатор)
	
	Сертификат = КриптографияЭДКО.НайтиСертификат(Новый Структура("Отпечаток", Отпечаток));
	Если Сертификат = Неопределено Тогда
		Сертификат = КриптографияЭДКО.НайтиОблачныйСертификат(Новый Структура("Отпечаток", Отпечаток));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Сертификат) Тогда
		АдресФайла = ПоместитьВоВременноеХранилище(Сертификат.Сертификат, Идентификатор);
		Возврат АдресФайла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

#КонецОбласти