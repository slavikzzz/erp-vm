#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает специализированную форму задачи
//
// Параметры:
//  ЗадачаСсылка         - ЗадачаСсылка - задача, для которой получается форма
//  ТочкаМаршрутаСсылка  - ТочкаМаршрутаБизнесПроцессаСсылка - точка маршрута, для которой получается форма.
//
// Возвращаемое значение:
//   ФормаКлиентскогоПриложения   - специализированная форма выполнения задачи.
//
Функция ФормаВыполненияЗадачи(ЗадачаСсылка, ТочкаМаршрутаСсылка) Экспорт

	Если ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПервичныйКонтакт
	   Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Презентация
	   Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Торг Тогда
		ИмяФормы = "БизнесПроцесс.ТиповаяПродажа.Форма.Взаимодействия";
	ИначеЕсли ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодготовкаПредложения Тогда
		 ИмяФормы = "БизнесПроцесс.ТиповаяПродажа.Форма.КоммерческоеПредложение";
	ИначеЕсли ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КвалификацияКлиента Тогда
			ИмяФормы = "БизнесПроцесс.ТиповаяПродажа.Форма.Клиент";
	ИначеЕсли ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФормированиеЗаказа Тогда
		ИмяФормы = "БизнесПроцесс.ТиповаяПродажа.Форма.ЗаказКлиента";
	ИначеЕсли ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Торг
		  Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодтверждениеОбязательств
		  Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КонтрольВыполненияОбязательств
		  Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовВыиграннойСделки
		  Или ТочкаМаршрутаСсылка = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовПроиграннойСделки Тогда
		ИмяФормы = "БизнесПроцесс.ТиповаяПродажа.Форма.Документы";
	КонецЕсли;

	ПараметрыФормы = Новый Структура("Ключ", ЗадачаСсылка);
	
	Возврат Новый Структура(
		"ПараметрыФормы, ИмяФормы", ПараметрыФормы, ИмяФормы);

КонецФункции

// Вызывается при выполнении задачи из формы списка.
//
// Параметры:
//   ЗадачаСсылка                 - ЗадачаСсылка.ЗадачаИсполнителя - задача, для которой выполняется обработка
//   БизнесПроцессСсылка          - БизнесПроцессСсылка.ТиповаяПродажа - задача, для которой выполняется обработка 
//   ТочкаМаршрутаБизнесПроцесса  - ТочкаМаршрутаБизнесПроцессаСсылка - точка маршрута
//
Процедура ОбработкаВыполненияПоУмолчанию(ЗадачаСсылка, БизнесПроцессСсылка, ТочкаМаршрутаБизнесПроцесса) Экспорт

КонецПроцедуры

// Вызывается при перенаправлении задачи.
//
// Параметры:
//   ЗадачаСсылка       - ЗадачаСсылка.ЗадачаИсполнителя - перенаправляемая задача.
//   НоваяЗадачаСсылка  - ЗадачаСсылка.ЗадачаИсполнителя - задача для нового исполнителя.
//
Процедура ПриПеренаправленииЗадачи(ЗадачаСсылка, НоваяЗадачаСсылка) Экспорт
	
	БизнесПроцессСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗадачаСсылка, "БизнесПроцесс");
	БизнесПроцессОбъект = БизнесПроцессСсылка.ПолучитьОбъект();
	ЗаблокироватьДанныеДляРедактирования(БизнесПроцессОбъект.Ссылка);
	БизнесПроцессОбъект.РезультатВыполнения = РезультатВыполненияПриПеренаправлении(ЗадачаСсылка) + БизнесПроцессОбъект.РезультатВыполнения;
	УстановитьПривилегированныйРежим(Истина);
	БизнесПроцессОбъект.Записать();
	
КонецПроцедуры

// Получить описание задачи процесса.
//
// Параметры:
//  ТочкаМаршрутаБизнесПроцесса  - ТочкаМаршрутаБизнесПроцессаСсылка - точка маршрута для которой 
//                                 возвращается описание.
//
// Возвращаемое значение:
//   Строка   - описание для точки маршрута.
//
Функция ОписаниеТочки(ТочкаМаршрутаБизнесПроцесса) Экспорт

	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПервичныйКонтакт Тогда
		Возврат ?(ПолучитьФункциональнуюОпцию("ИспользоватьПочтовыйКлиент"), "- " + НСтр("ru = 'запланируйте и проведите первичный контакт (обязательный);';
																						|en = 'schedule and establish initial contact (required);'") + Символы.ПС
			,"") +  "- " +  НСтр("ru = 'выясните товарные категории и номенклатуру, которые могут заинтересовать клиента;
			|- выясните данные о контактных лицах, потенциально заинтересованных в покупке предлагаемой номенклатуры.';
			|en = 'determine the product categories and products that may be of interest to the customer;
			|- find out the details of contact persons who are potentially interested in buying the offered products.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КвалификацияКлиента Тогда
		Возврат "- " +  НСтр(
			"ru = 'соберите и проанализируйте информацию о клиенте;
			|- заполните набор дополнительных свойств клиента;
			|- определите рамки работы по сделке - выберите соглашение (обязательный);
			|- выясните и зафиксируйте связи клиента с другими партнерами.';
			|en = 'Collect and analyze information about the customer;
			|- Fill in the set of additional customer properties;
			|- Specify the scope of work for the transaction - select an agreement (required);
			|- Find out and register the customer contacts with other partners.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодготовкаПредложения Тогда
		Возврат "- " + НСтр(
			 "ru = 'подготовьте и отошлите коммерческое предложение (обязательный);
			|- узнайте реакцию покупателя;
			|- выясните контактное лицо, имеющее полномочия принять решение о закупке;
			|- договоритесь о сроках и месте проведения демонстрации, запланируйте встречу.';
			|en = 'Prepare and send a sales quotation (required);
			|- Find out about reaction of the customer;
			|- Find out who is the contact person entitled to make a decision on the purchase;
			|- Agree upon the time and place to hold the demonstration, schedule the meeting.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Презентация Тогда
		Возврат "- " + НСтр(
			"ru = 'подготовьте демонстрационные материалы и оборудование;
			|- подготовьте участие технических специалистов;
			|- проведите демонстрацию;
			|- выясните реакцию покупателя и решателя;
			|- выясните возможные взаимосвязи клиента, его контактных лиц;
			|- выясните и зарегистрируйте потенциальных конкурентов в списке участников сделки.';
			|en = 'Prepare illustrative material and equipment;
			|- Arrange for the technical specialists to participate;
			|- Hold a demonstration;
			|- Find out about reaction of the customer and the decision-maker;
			|- Find out about possible interrelations of the customer and their contact persons;
			|- Find out and register potential competitors in the transaction party list.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Торг Тогда
		Возврат "- " + НСтр(
			"ru = 'проанализируйте окружение сделки, дополните список ее участников влиятелями и решателем;
			|- проведите необходимую работу с влиятелями и решателем, предложите доступные скидки;
			|- согласуйте предложение с клиентом.';
			|en = 'Analyze the sales opportunity parties, add the influencer and the decision-maker to the list of its participants;
			|- Engage with the influencer and the decision-maker, offer available discounts;
			|- Agree upon the offer with the customer.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФормированиеЗаказа Тогда
		Возврат "- " + НСтр(
			"ru = 'уточните юридическое лицо партнера (обязательный);
			|- сформируйте заказ клиента (обязательный).';
			|en = 'Specify the partner legal entity (required);
			|- Generate the sales order (required).'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодтверждениеОбязательств Тогда
		Возврат "- " +  НСтр("ru = 'при необходимости выставите счет на оплату и дождитесь поступления авансового платежа или
			| произведите отгрузку (обязательный).';
			|en = 'If necessary, issue a commercial invoice and wait for the advance payment or
			| carry out shipment (required).'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КонтрольВыполненияОбязательств Тогда
		Возврат "- " + НСтр(
			"ru = 'проконтролируйте поступление платежей (обязательный);
			|- проконтролируйте отгрузки и доставки (обязательный).';
			|en = 'Make sure the payment is received (required);
			|- Make sure shipments and deliveries are performed (required).'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовВыиграннойСделки Тогда
		Возврат "- " + НСтр(
			"ru = 'проконтролируйте комплектность первичных документов;
			|- проконтролируйте полноту и корректность внесенной по сделке информации;
			|- проконтролируйте завершение платежей и поставок;
			|- проконтролируйте комплектность первичных документов.';
			|en = 'Make sure the source documents are complete;
			|- Make sure the transaction information is complete and correct;
			|- Make sure the payments and supplies are completed;
			|- Make sure the source documents are complete.'");
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовПроиграннойСделки Тогда
		Возврат "- " + НСтр(
			"ru = 'проконтролируйте отсутствие обязательств по сделке;
			|- укажите причину проигрыша сделки (обязательный);
			|- проконтролируйте полноту и корректность внесенной по сделке информации.';
			|en = 'Make sure there are no transaction obligations;
			|- Specify the reason for losing the transaction (required); 
			|- Make sure the transaction information is complete and correct.'");
	КонецЕсли;

КонецФункции

// Получить типовой срок исполнения задачи в днях.
//
// Параметры:
//  ТочкаМаршрутаБизнесПроцесса  - ТочкаМаршрутаБизнесПроцессаСсылка - точка маршрута для которой 
//                                 возвращается типовой срок исполнения.
//
// Возвращаемое значение:
//   Число   - типовой срок исполнения для точки маршрута.
//
Функция СрокИсполнения(ТочкаМаршрутаБизнесПроцесса) Экспорт

	Если ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПервичныйКонтакт Тогда
		Возврат 2;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КвалификацияКлиента Тогда
		Возврат 2;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодготовкаПредложения Тогда
		Возврат 3;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Презентация Тогда
		Возврат 5;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.Торг Тогда
		Возврат 7;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФормированиеЗаказа Тогда
		Возврат 1;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ПодтверждениеОбязательств Тогда
		Возврат 2;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.КонтрольВыполненияОбязательств Тогда
		Возврат 14;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовВыиграннойСделки Тогда
		Возврат 1;
	ИначеЕсли ТочкаМаршрутаБизнесПроцесса = БизнесПроцессы.ТиповаяПродажа.ТочкиМаршрута.ФиксацияРезультатовПроиграннойСделки Тогда
		Возврат 1;
	КонецЕсли;

КонецФункции

// Возвращает список этапов процесса при его плановом выполнении
//
// Возвращаемое значение:
//   Массив   - содержит список этапов бизнес-процесса.
//
Функция СписокЭтапов() Экспорт

	мЭтапы = Новый Массив;
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.ПервичныйКонтакт);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.КвалификацияКлиента);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.ФормированиеПредложения);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.Презентация);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.СогласованиеУсловий);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.ПодготовкаКВыполнениюОбязательств);
	мЭтапы.Добавить(Справочники.СостоянияПроцессов.ВыполнениеОбязательств);

	Возврат мЭтапы;

КонецФункции

#Область ДляВызоваИзДругихПодсистем

// СтандартныеПодсистемы.УправлениеДоступом

// Параметры:
//   Ограничение - см. УправлениеДоступомПереопределяемый.ПриЗаполненииОграниченияДоступа.Ограничение.
//
Процедура ПриЗаполненииОграниченияДоступа(Ограничение) Экспорт

	Ограничение.Текст =
	"РазрешитьЧтениеИзменение
	|ГДЕ
	|	ЗначениеРазрешено(Предмет.Партнер)
	|	ИЛИ ЗначениеРазрешено(Автор)";

КонецПроцедуры

// Конец СтандартныеПодсистемы.УправлениеДоступом

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РезультатВыполненияПриПеренаправлении(Знач ЗадачаСсылка)
	
	СтрокаФормат = НСтр("ru = '%1, %2 перенаправил(а) задачу:
	                    |%3';
	                    |en = '%1, %2 forwarded the task:
	                    |%3'");
	                    
	РеквизитыЗадачи = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗадачаСсылка, "ДатаИсполнения, Исполнитель, РезультатВыполнения");
	
	Комментарий = СокрЛП(РеквизитыЗадачи.РезультатВыполнения);
	Комментарий = ?(ПустаяСтрока(Комментарий), "", Комментарий + Символы.ПС);
	Результат = СтрШаблон(СтрокаФормат,
	              РеквизитыЗадачи.ДатаИсполнения,
	              РеквизитыЗадачи.Исполнитель,
	              Комментарий);
	
	Результат = Результат + Символы.ПС;
	
	Возврат Результат;

КонецФункции

#КонецОбласти

#КонецЕсли
