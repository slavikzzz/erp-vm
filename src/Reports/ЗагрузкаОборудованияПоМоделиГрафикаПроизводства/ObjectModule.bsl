
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Настройка отчета.
	ВнешниеНаборы = Новый Структура;
	ЗаполнитьВнешниеНаборы(НастройкиОтчета, ВнешниеНаборы);
	
	// Компоновка и вывод.
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, ВнешниеНаборы, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьВнешниеНаборы(НастройкиОтчета, ВнешниеНаборы)
	
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("Распоряжение");
	ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки);
	Если ЗначениеПараметра = Неопределено Тогда
		ВызватьИсключение НСтр("ru = 'Отсутствует обязательный параметр ""Распоряжение""';
								|en = 'Missing required parameter: ""Reference""'");
	КонецЕсли;
	Распоряжение = ЗначениеПараметра.Значение;
	Данные = Отчеты.ЗагрузкаОборудованияПоМоделиГрафикаПроизводства.ЗагрузкаПоМоделиИФорматИнтервалов(Распоряжение);
	
	ВнешниеНаборы.Вставить("ЗагрузкаОборудования", Данные.ЗагрузкаОборудования);
	
	НастроитьОформлениеПоляИнтервал(НастройкиОтчета, Данные.ФорматИнтервалов);
	
КонецПроцедуры

Процедура НастроитьОформлениеПоляИнтервал(НастройкиОтчета, Формат)
	
	Элемент = НастройкиОтчета.УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = Элемент.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных("Интервал");
	
	Элемент.Оформление.УстановитьЗначениеПараметра("Формат", Формат);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли