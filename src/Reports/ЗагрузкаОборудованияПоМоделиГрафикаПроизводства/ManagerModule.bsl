#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ПрограммныйИнтерфейс

// Формирует таблицу с наиболее загруженным оборудованием по данным модели графика производства.
//
// Параметры:
//  Параметры  - Структура - параметры формирования отчета:
//		* Распоряжение - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ, график которого необходимо проанализировать.
//		* КоличествоЕдиниц - Число - максимальное количество видов РЦ, данные по которым необходимо вернуть.
//			Выборка и обход данных выполняются в порядке убывания объема загрузки.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПолучитьНаиболееЗагруженноеОборудование(Параметры, АдресХранилища) Экспорт
	
	Распоряжение = Параметры.Распоряжение;
	ОсталосьЕдиниц = Параметры.КоличествоЕдиниц;
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ВидРабочегоЦентра", Новый ОписаниеТипов("СправочникСсылка.ВидыРабочихЦентров"));
	Результат.Колонки.Добавить("ЗагрузкаПроценты", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5)));
	Результат.Индексы.Добавить("ВидРабочегоЦентра");
	
	Загрузка = ЗагрузкаОборудованияВПроцентах(Распоряжение);
	Загрузка.Сортировать("ЗагрузкаПроценты Убыв");
	
	Для Индекс = 0 По Загрузка.Количество()-1 Цикл
		
		Строка = Загрузка[Индекс];
		
		Если НЕ ЗначениеЗаполнено(Строка.ЗагрузкаПроценты) Тогда
			Прервать;
		КонецЕсли;
		
		Если Результат.Найти(Строка.ВидРабочегоЦентра, "ВидРабочегоЦентра") = Неопределено Тогда
			
			НоваяСтрока = Результат.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Строка);
			
			ОсталосьЕдиниц = ОсталосьЕдиниц - 1;
			Если ОсталосьЕдиниц = 0 Тогда
				Прервать;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗагрузкаПоМоделиИФорматИнтервалов(Распоряжение) Экспорт
	
	Возврат ПолучитьЗагрузкуПоМоделиИФорматИнтервалов(Распоряжение);
	
КонецФункции

Функция ПолучитьЗагрузкуПоМоделиИФорматИнтервалов(Распоряжение)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПланированиеЗагрузкиВидовРабочихЦентров.ВидРабочегоЦентра,
	|	ПланированиеЗагрузкиВидовРабочихЦентров.ДатаИнтервала,
	|	СУММА(ПланированиеЗагрузкиВидовРабочихЦентров.Занято) КАК Загрузка
	|ПОМЕСТИТЬ ВТЗагрузка
	|ИЗ
	|	РегистрСведений.ПланированиеЗагрузкиВидовРабочихЦентров КАК ПланированиеЗагрузкиВидовРабочихЦентров
	|ГДЕ
	|	ПланированиеЗагрузкиВидовРабочихЦентров.Распоряжение = &Распоряжение
	|	И ПланированиеЗагрузкиВидовРабочихЦентров.СтатусГрафика = &СтатусГрафика
	|
	|СГРУППИРОВАТЬ ПО
	|	ПланированиеЗагрузкиВидовРабочихЦентров.ВидРабочегоЦентра,
	|	ПланированиеЗагрузкиВидовРабочихЦентров.ДатаИнтервала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доступность.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	Доступность.ДатаИнтервала КАК ДатаИнтервала,
	|	СУММА(ВЫБОР
	|			КОГДА Доступность.ВидРабочегоЦентра.ВводитьДоступностьДляВидаРЦ
	|				ТОГДА Доступность.ДоступностьПоВидуРЦ
	|			ИНАЧЕ Доступность.ДоступностьПоРЦ
	|		КОНЕЦ) КАК Доступно
	|ПОМЕСТИТЬ ВТДоступность
	|ИЗ
	|	РегистрНакопления.ДоступностьВидовРабочихЦентров КАК Доступность
	|ГДЕ
	|	Доступность.ЭтоДвижениеВводаДоступности
	|	И Доступность.Активность
	|	И (Доступность.ВидРабочегоЦентра, Доступность.ДатаИнтервала) В
	|			(ВЫБРАТЬ
	|				ВТЗагрузка.ВидРабочегоЦентра,
	|				ВТЗагрузка.ДатаИнтервала
	|			ИЗ
	|				ВТЗагрузка)
	|
	|СГРУППИРОВАТЬ ПО
	|	Доступность.ВидРабочегоЦентра,
	|	Доступность.ДатаИнтервала
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВЫБОР
	|			КОГДА Доступность.ВидРабочегоЦентра.ВводитьДоступностьДляВидаРЦ
	|				ТОГДА Доступность.ДоступностьПоВидуРЦ
	|			ИНАЧЕ Доступность.ДоступностьПоРЦ
	|		КОНЕЦ) > 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТЗагрузка.ВидРабочегоЦентра КАК ВидРабочегоЦентра,
	|	ВТЗагрузка.ВидРабочегоЦентра.РезервДоступности КАК РезервДоступностиПроценты,
	|	ВТЗагрузка.ДатаИнтервала КАК ДатаИнтервала,
	|	НАЧАЛОПЕРИОДА(ВТЗагрузка.ДатаИнтервала, ДЕКАДА) КАК Интервал,
	|	ЕСТЬNULL(ВТДоступность.Доступно, 0) КАК Доступно,
	|	ВТЗагрузка.Загрузка КАК Загрузка,
	|	ВЫБОР
	|		КОГДА ВТЗагрузка.Загрузка > ЕСТЬNULL(ВТДоступность.Доступно, 0)
	|			ТОГДА ВТЗагрузка.Загрузка - ЕСТЬNULL(ВТДоступность.Доступно, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Перегрузка
	|ИЗ
	|	ВТЗагрузка КАК ВТЗагрузка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоступность КАК ВТДоступность
	|		ПО ВТЗагрузка.ВидРабочегоЦентра = ВТДоступность.ВидРабочегоЦентра
	|			И ВТЗагрузка.ДатаИнтервала = ВТДоступность.ДатаИнтервала";
	
	Периодичность = ПериодичностьИнтервалов(Распоряжение);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДЕКАДА", Периодичность.Единица);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.УстановитьПараметр("СтатусГрафика", СтатусМодельГрафика());
	
	Результат = Новый Структура;
	Результат.Вставить("ЗагрузкаОборудования", Запрос.Выполнить().Выгрузить());
	Результат.Вставить("ФорматИнтервалов", Периодичность.Формат);
		
	Возврат Результат;
	
КонецФункции

Функция ПериодичностьИнтервалов(Распоряжение)
	
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	МИНИМУМ(ГрафикЭтаповПроизводства2_2.НачалоЭтапа) КАК Начало,
	|	МАКСИМУМ(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа) КАК Окончание
	|ИЗ
	|	РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
	|ГДЕ
	|	ГрафикЭтаповПроизводства2_2.Распоряжение = &Распоряжение
	|	И ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Час)
	|			ТОГДА 1
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.День)
	|			ТОГДА 2
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Неделя)
	|			ТОГДА 3
	|		ИНАЧЕ 4
	|	КОНЕЦ КАК КодИнтервала,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Час)
	|			ТОГДА ""ЧАС""
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.День)
	|			ТОГДА ""ДЕНЬ""
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Неделя)
	|			ТОГДА ""НЕДЕЛЯ""
	|		ИНАЧЕ ""МЕСЯЦ""
	|	КОНЕЦ КАК Интервал,
	|	ВЫБОР
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Час)
	|			ТОГДА &ФорматЧас
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.День)
	|			ТОГДА &ФорматДень
	|		КОГДА ВложенныйЗапрос.ИнтервалПланирования = ЗНАЧЕНИЕ(Перечисление.ТочностьГрафикаПроизводства.Неделя)
	|			ТОГДА &ФорматНеделя
	|		ИНАЧЕ &ФорматМесяц
	|	КОНЕЦ КАК Формат
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ПланированиеЗагрузкиВидовРабочихЦентров.ВидРабочегоЦентра.Подразделение.ИнтервалПланирования КАК ИнтервалПланирования
	|	ИЗ
	|		РегистрСведений.ПланированиеЗагрузкиВидовРабочихЦентров КАК ПланированиеЗагрузкиВидовРабочихЦентров
	|	ГДЕ
	|		ПланированиеЗагрузкиВидовРабочихЦентров.Распоряжение = &Распоряжение
	|		И ПланированиеЗагрузкиВидовРабочихЦентров.СтатусГрафика = &СтатусГрафика) КАК ВложенныйЗапрос");
	Запрос.УстановитьПараметр("Распоряжение", Распоряжение);
	Запрос.УстановитьПараметр("СтатусГрафика", СтатусМодельГрафика());
	Запрос.УстановитьПараметр("ФорматЧас", "ДФ='dd.MM HH:mm'");
	Запрос.УстановитьПараметр("ФорматДень", "ДЛФ=D");
	Запрос.УстановитьПараметр("ФорматНеделя", "ДЛФ=D");
	
	ФорматМесяц = "ДФ='MMMM yyyy'";
	Запрос.УстановитьПараметр("ФорматМесяц", ФорматМесяц);
	
	УстановитьПривилегированныйРежим(Истина);
	МассивРезультатов = Запрос.ВыполнитьПакет();
	УстановитьПривилегированныйРежим(Ложь);
	
	Границы = МассивРезультатов[0].Выбрать();
	ИнтервалыПодразделений = МассивРезультатов[1].Выбрать();
	
	Если Границы.Следующий() И ЗначениеЗаполнено(Границы.Начало) Тогда
		
		НастройкиШкалы = УправлениеПроизводствомКлиентСервер.НастройкиШкалыДиаграммыГантаВРежимеВсеДанные(
			Границы.Начало, Границы.Окончание, 9);
			
		Формат = НастройкиШкалы.Формат;
		Если НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.Час Тогда
			КодИнтервала = 1;
			Интервал = "ЧАС";
		ИначеЕсли НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.День Тогда
			КодИнтервала = 2;
			Интервал = "ДЕНЬ";
		ИначеЕсли НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.Неделя Тогда
			КодИнтервала = 3;
			Интервал = "НЕДЕЛЯ";
		ИначеЕсли НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.Месяц Тогда
			КодИнтервала = 4;
			Интервал = "МЕСЯЦ";
		Иначе
			КодИнтервала = 5;
			Если НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.Квартал Тогда
				Интервал = "КВАРТАЛ";
			ИначеЕсли НастройкиШкалы.Единица = ТипЕдиницыШкалыВремени.Год Тогда
				Интервал = "ГОД";
			Иначе
				Интервал = "МЕСЯЦ";
			КонецЕсли;
		КонецЕсли;
		
		Пока ИнтервалыПодразделений.Следующий() Цикл
			Если ИнтервалыПодразделений.КодИнтервала > КодИнтервала Тогда
				КодИнтервала = ИнтервалыПодразделений.КодИнтервала;
				Интервал = ИнтервалыПодразделений.Интервал;
				Формат = ИнтервалыПодразделений.Формат;
			КонецЕсли;
		КонецЦикла;
		
		Единица = Интервал;
		
	Иначе
		
		Единица = "МЕСЯЦ";
		Формат = ФорматМесяц;
		
	КонецЕсли;
	
	Результат = Новый Структура("Единица, Формат", Единица, Формат);
	Возврат Результат;
	
КонецФункции

Функция СтатусМодельГрафика()
	
	Возврат РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусМодельГрафика();
	
КонецФункции

Функция ЗагрузкаОборудованияВПроцентах(Распоряжение)
	
	Данные = ПолучитьЗагрузкуПоМоделиИФорматИнтервалов(Распоряжение);
	
	Результат = Данные.ЗагрузкаОборудования;
	Результат.Колонки.Добавить("ЗагрузкаПроценты", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(5)));
	
	Для каждого Строка Из Результат Цикл
		Если ЗначениеЗаполнено(Строка.Доступно) Тогда
			Строка.ЗагрузкаПроценты = Строка.Загрузка/Строка.Доступно*100;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли