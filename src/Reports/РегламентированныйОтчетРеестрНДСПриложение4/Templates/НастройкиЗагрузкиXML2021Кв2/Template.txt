// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Многостраничность", Истина), Истина);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			СтрокаДерева.МнУр = Истина;
			СтрокаДерева.Многостраничность = Ложь;
			Если СтрокаДерева.Код = "СвВидТрДок" ИЛИ СтрокаДерева.Код = "МаршПоруч" Тогда
				СтрокаДерева.Обязательность = СтрокаДерева.Обязательность + "П";
			КонецЕсли;
		КонецЦикла;
		НайденныеСтроки[0].Многостраничность = Истина;
	КонецЕсли;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Тип", "П"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Тип = "С";
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	УзлыРеестр = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/РеестрТрНефт_4"); // многоуровневый раздел приложение 2
	
	НомСтраницы = Новый Массив(1);
	
	Для НомСтраницыУровень1 = 1 По УзлыРеестр.Количество() Цикл
		
		УзелРеестрУровень1 = УзлыРеестр[НомСтраницыУровень1 - 1];
		
		НомСтраницы[0] = НомСтраницыУровень1;
		
		НомСтроки = Новый Массив(2);
		
		УзлыРеестрСведДок = УзлыПоXPath(УзелРеестрУровень1, "СведДкПдтвУслуг");
		Для НомСтрокиУровень1 = 1 По УзлыРеестрСведДок.Количество() Цикл
			
			НомСтроки[0] = НомСтрокиУровень1;
			УзелРеестрСведДок = УзлыРеестрСведДок[НомСтрокиУровень1 - 1];
			
			// Группа 1
			УзлыРеестрГруппа1 = УзлыПоXPath(УзелРеестрСведДок, "СвВидТрДок");
			Для НомСтрокиУровень2 = 1 По УзлыРеестрГруппа1.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелРеестрГруппа1 = УзлыРеестрГруппа1[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРеестрГруппа1, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
			// Группа 2
			УзлыРеестрГруппа2 = УзлыПоXPath(УзелРеестрСведДок, "МаршПоруч");
			Для НомСтрокиУровень2 = 1 По УзлыРеестрГруппа2.Количество() Цикл
				НомСтроки[1] = НомСтрокиУровень2;
				УзелРеестрГруппа2 = УзлыРеестрГруппа2[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРеестрГруппа2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Реестр = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Реестр", Реестр);
	Если Реестр <> Неопределено Тогда
		ТаблДокПрототип = Новый ТабличныйДокумент;
		
		Рег = РегистрыСведений.ДополнительныеФайлыРегламентированныхОтчетов;
		
		Если П.ПараметрыОтчета.Свойство("СтруктураМногострочныхЧастей") Тогда
			СтруктураМногострочныхЧастей = П.ПараметрыОтчета.СтруктураМногострочныхЧастей;
		Иначе
			СтруктураМногострочныхЧастей = Новый Структура;
		КонецЕсли;
		
		ИтоговыеСуммыПоКодамОпераций = Неопределено;
		П.ДанныеОтчета.СтруктураДанныхОтчета.Свойство("ИтоговыеСуммыПоКодамОпераций", ИтоговыеСуммыПоКодамОпераций);
		Если ТипЗнч(ИтоговыеСуммыПоКодамОпераций) <> Тип("Массив") Тогда
			ИтоговыеСуммыПоКодамОпераций = Новый Массив;
		КонецЕсли;
		
		ПроцентПред = 0;
		КоличествоСтрок = Реестр.Строки.Количество();
		Для НомерСтраницы = 1 По КоличествоСтрок Цикл
			Страница = Реестр.Строки[НомерСтраницы - 1];
			
			НаборДопФайлы = Рег.СоздатьМенеджерЗаписи();
			НаборДопФайлы.РегламентированныйОтчет = П.ДанныеОтчета.ДокументОтчета;
			НаборДопФайлы.ВидДополнительногоФайла = "РеестрСтраница" + Формат(НомерСтраницы, "ЧГ=");
			Если НомерСтраницы = 1 Тогда
				НаборДопФайлы.Прочитать();
				ТаблДокПрототип.Вывести(НаборДопФайлы.СодержимоеФайла.Получить());
			КонецЕсли;
			ТаблДокСтраницы = Новый ТабличныйДокумент;
			ТаблДокСтраницы.Вывести(ТаблДокПрототип);
			
			Если ИтоговыеСуммыПоКодамОпераций.Количество() < НомерСтраницы Тогда
				ИтоговыеСуммыПоКодамОпераций.Вставить(НомерСтраницы - 1, Новый Структура("КодОперации,НалБазаИтого", "", 0));
			КонецЕсли;
			
			// Вывод немногострочных данных.
			Для Каждого ЭлСтруктуры Из Страница.Данные Цикл
				ОбластьЗнач = ТаблДокСтраницы.Области.Найти(ЭлСтруктуры.Ключ);
				Если ОбластьЗнач <> Неопределено Тогда
					ОбластьЗнач.Значение = ЭлСтруктуры.Значение;
					Если ЭлСтруктуры.Ключ = "КодОперации" Тогда
						ИтоговыеСуммыПоКодамОпераций[НомерСтраницы - 1].КодОперации  = ЭлСтруктуры.Значение;
					ИначеЕсли ЭлСтруктуры.Ключ = "НалБазаИтого" Тогда
						ИтоговыеСуммыПоКодамОпераций[НомерСтраницы - 1].НалБазаИтого = ЭлСтруктуры.Значение;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			ВывестиМногострочныеДанныеВТабличныйДокумент(ТаблДокСтраницы, СтруктураМногострочныхЧастей, Страница);
			
			НаборДопФайлы.СодержимоеФайла = Новый ХранилищеЗначения(ТаблДокСтраницы);
			НаборДопФайлы.Записать();
			
			Процент = Мин(Окр(100 * НомерСтраницы / КоличествоСтрок), 100);
			Если ПроцентПред < Процент Тогда
				ТекстСообщения = СтрШаблон(НСтр("ru='заполнено страниц отчета %1'"), Формат(НомерСтраницы, "ЧГ="));
				ДлительныеОперации.СообщитьПрогресс(Процент, ТекстСообщения);
				ПроцентПред = Процент;
			КонецЕсли;
			
		КонецЦикла;
		
		П.ДанныеОтчета.СтруктураДанныхОтчета.Вставить("ИтоговыеСуммыПоКодамОпераций", ИтоговыеСуммыПоКодамОпераций);
	КонецЕсли;
	
#КонецОбласти