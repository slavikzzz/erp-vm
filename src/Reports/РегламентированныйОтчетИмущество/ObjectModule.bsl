
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область Переменные

#Область ПеременныеКонтрольныхСоотношений

Перем ДанныеКС;

Перем НастройкиКС;

Перем ТаблицаРезультата;

Перем ТаблицаРасшифровки;

Перем Документирование;

Перем ТаблицаОписаний;

Перем ПараметрыКС;

// устаревшие переменные

Перем СчетчикФормулДляРасшифровок;

Перем СписокРасшифровкиПоказателей;

Перем СписокРасшифровкиформулы;

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеРегламентированногоОтчета

Процедура СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СтруктураРеквизитовФормы = Новый Структура;
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "01/01/2024");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы4");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2021Кв4") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "01/01/2022");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы4");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4_1") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "14/01/2021");
		СтруктураРеквизитовФормы.Вставить("мИдГруппы4");
		
	ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		СтруктураРеквизитовФормы.Вставить("мВерсияФормы", "04/11/2020");
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	СтруктураРеквизитовФормы.Вставить("ОписаниеТиповЧислоЕ",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("мПечатныеФормы", Новый СписокЗначений);
	СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", "");
	СтруктураРеквизитовФормы.Вставить("мСохранятьРасшифровку", Истина);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуЗаполнить", Ложь);
	СтруктураРеквизитовФормы.Вставить("ОтображатьКнопкуРасшифровать", Ложь);
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("ФлажокРучнойВводАдреса", Ложь);
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения", 0);
	СтруктураРеквизитовФормы.Вставить("мИдГруппы1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппы21");
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГруппы");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГрафы");
	СтруктураРеквизитовФормы.Вставить("СправочникиВидыКонтактнойИнформацииФактАдресОрганизации");
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НомераСтрокМногоуровнегоРаздела");
	СтруктураРеквизитовФормы.Вставить("СтруктураМногострочныхЧастей");
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели");
	СтруктураРеквизитовФормы.Вставить("РезультатЗапускаАвтозаполненияПриСоздании");
	СтруктураРеквизитовФормы.Вставить("АдресВоВременномХранилище");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("СформироватьФормуОтчетаАвтоматически");
	СтруктураРеквизитовФормы.Вставить("АдресВременногоХранилищаРасшифровки");
	СтруктураРеквизитовФормы.Вставить("РегистрацияВНалОргане");
	СтруктураРеквизитовФормы.Вставить("КППДляАвтозаполнения");
	СтруктураРеквизитовФормы.Вставить("КППДляАвтозаполненияПоМестуОН");
	СтруктураРеквизитовФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки");
	СтруктураРеквизитовФормы.Вставить("КС_АдресРезультата");
	СтруктураРеквизитовФормы.Вставить("КС_АдресРасшифровки");
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2021Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4_1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4") Тогда
		
		СтруктураРеквизитовФормы.Вставить("ТекстДляЗаголовочнойЧасти");
		СтруктураРеквизитовФормы.Вставить("КС_АдресФормул");
		СтруктураРеквизитовФормы.Вставить("КС_АдресПоказателей");
		
	КонецЕсли;
	
	// ПроцессыОбработкиДокументов
	//
	СтруктураРеквизитовФормы.Вставить("ПустаяСсылкаНаРегламентированныйОтчет",
		Документы.РегламентированныйОтчет.ПустаяСсылка());
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	// Идентификаторы многострочных групп.
	СтруктураРеквизитовФормы.мИдГруппы1  = "П0000100";
	СтруктураРеквизитовФормы.мИдГруппы21 = "П00021М1";
	
	// Свойства, общие для всех многострочных групп.
	СтруктураРеквизитовФормы.ДлинаИмениГруппы = 8;
	СтруктураРеквизитовФормы.ДлинаИмениГрафы  = 13;
	
	// Структура с описанием свойств каждой группы в отдельности.
	СтруктураМногострочныхЧастей = Новый Структура;
	
	// Группа П0000100.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П000010000703");
	ИменаГраф.Добавить("П000010001003");
	ИменаГраф.Добавить("П000010002003");
	ИменаГраф.Добавить("П000010002103");
	ИменаГраф.Добавить("П000010002303");
	ИменаГраф.Добавить("П000010002503");
	ИменаГраф.Добавить("П000010002703");
	ИменаГраф.Добавить("П000010003003");
	ИменаГраф.Добавить("П000010004003");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы1, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00021М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00021М103013");
	ИменаГраф.Добавить("П00021М103014");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(
		СтруктураРеквизитовФормы.мИдГруппы21, Новый Структура(
		"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
		ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2021Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4_1") Тогда
		
		СтруктураРеквизитовФормы.мИдГруппы4 = "П00004М1";
		
		// Группа П00004М1.
		ИменаГраф = Новый Массив;
		ИменаГраф.Добавить("П00004М100001");
		ИменаГраф.Добавить("П00004М100002");
		ИменаПодчиненныхГрупп = Новый Массив;
		СтруктураМногострочныхЧастей.Вставить(
			СтруктураРеквизитовФормы.мИдГруппы4, Новый Структура(
			"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп",
			ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей = СтруктураМногострочныхЧастей;
	
КонецПроцедуры

Процедура ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
												СтруктураРеквизитовФормы,
												СтруктураМногоуровневыхРазделов) Экспорт
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = Новый Массив;
	
	// Формирование структуры свойств многоуровневых разделов.
	//
	СтруктураМногоуровневыхРазделов = Новый Структура;
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы21);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураМногоуровневыхРазделов.Вставить("Раздел21", СтруктураРаздела);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4") Тогда
		
		СтруктураРаздела = Новый Структура;
		СтруктураРаздела.Вставить("Многостраничность");
		СтруктураМногоуровневыхРазделов.Вставить("Раздел22", СтруктураРаздела);
		
	КонецЕсли;
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	СтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2021Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4_1") Тогда
		
		СтруктураРаздела = Новый Структура;
		ИменаГруппМнЧ = Новый Массив;
		ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппы4);
		СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
		СтруктураМногоуровневыхРазделов.Вставить("Раздел4", СтруктураРаздела);
		
	КонецЕсли;
	
	// Формирование начальной структуры дерева разделов
	// с заполнением каждого уровня пустыми данными.
	//
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Данные");
	ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Элем Из СтруктураМногоуровневыхРазделов Цикл
		Если Элем.Значение.Свойство("Подчиненность") Тогда
			Продолжить;
		КонецЕсли;
		
		ДеревоДанныхРаздела = ДеревоДанных.Скопировать();
		ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + Элем.Ключ));
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
														Элем.Ключ,
														СтруктураМногоуровневыхРазделов,
														ТабличныйДокумент,
														СтруктураРеквизитовФормы);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		ИнициализироватьПодчиненныеРазделы(ИмяФормы,
										   Элем.Ключ,
										   ТекВетка,
										   СтруктураМногоуровневыхРазделов,
										   ТабличныйДокумент,
										   СтруктураРеквизитовФормы);
		
		Если НЕ СтруктураРеквизитовФормы.Свойство("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ) Тогда
			СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ, Неопределено);
		КонецЕсли;
		
		РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоДанныхРаздела, Новый УникальныйИдентификатор,
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]);
		
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеТабличногоДокумента(ИмяФормы,
								  НаимРаздела,
								  СтруктураМногоуровневыхРазделов,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы) Экспорт
	
	ДанныеТаблДокумента = Новый Структура;
	
	// Многоуровневые разделы.
	//
	Если СтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		СтруктураРаздела = СтруктураМногоуровневыхРазделов[НаимРаздела];
		
		ИменаГруппМнЧ = Неопределено;
		СтруктураРаздела.Свойство("ИменаГруппМнЧ", ИменаГруппМнЧ);
		РазделСодержитМнЧ = (ИменаГруппМнЧ <> Неопределено);
		
		СтруктураДанных = Новый Структура();
		Для Каждого ТекущаяОбласть Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(ТекущаяОбласть), "Рисунок") = 0
				И ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекущаяОбласть.СодержитЗначение = Истина Тогда
				Если РазделСодержитМнЧ Тогда
					Если РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(
						СтруктураРеквизитовФормы, ТекущаяОбласть.Имя) = Неопределено Тогда
						СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
					КонецЕсли;
				Иначе
					СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеТаблДокумента.Вставить("Данные", СтруктураДанных);
		
		СтруктураДанныхМногострочныхЧастей = Новый Структура;
		Если РазделСодержитМнЧ Тогда
			Для Каждого ИмяГруппыМнЧ Из СтруктураРаздела["ИменаГруппМнЧ"] Цикл
				ЭлемСтруктуры = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
				Если ЭлемСтруктуры["УровеньПодчинения"] = 0 Тогда
					ДеревоДанных = Новый ДеревоЗначений;
					ДеревоДанных.Колонки.Добавить("Данные");
					ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
					СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
						ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяГруппыМнЧ, ДеревоДанных);
					СтруктураДанныхМногострочныхЧастей.Вставить(ИмяГруппыМнЧ, ДеревоДанных);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ДанныеТаблДокумента.Вставить("ДанныеМногострочныхЧастей", СтруктураДанныхМногострочныхЧастей);
		
	// Обычные разделы.
	//
	Иначе
		
		Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			
			ТекОбласть = ТабличныйДокумент.Области[Инд];
			
			Если СтрЧислоВхождений(Тип(ТекОбласть), "Рисунок") = 0
				И ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекОбласть.СодержитЗначение = Истина Тогда
				
				ДанныеТаблДокумента.Вставить(ТекОбласть.Имя, ТекОбласть.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеТаблДокумента;
	
КонецФункции

Процедура ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											 Знач ИмяРаздела,
											 Ветка,
											 СтруктураМногоуровневыхРазделов,
											 ТабличныйДокумент,
											 СтруктураРеквизитовФормы) Экспорт
	
	Если СтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		
		ИменаПодчРазделов = СтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для Каждого ИмяПодчРаздела Из ИменаПодчРазделов Цикл
			ПодчВетка = Ветка.Строки.Добавить().Строки.Добавить();
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ИмяПодчРаздела));
			
			ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяФормы,
															ИмяПодчРаздела,
															СтруктураМногоуровневыхРазделов,
															ТабличныйДокумент,
															СтруктураРеквизитовФормы);
									
			ПодчВетка.Данные = ДанныеТаблДокумента.Данные;
			ПодчВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
			
			ИнициализироватьПодчиненныеРазделы(ИмяФормы,
											   ИмяПодчРаздела,
											   ПодчВетка,
											   СтруктураМногоуровневыхРазделов,
											   ТабличныйДокумент,
											   СтруктураРеквизитовФормы);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяФормы,
																		  СтруктураРеквизитовФормы,
																		  ТабличныйДокумент,
																		  ИмяГруппы,
																		  ДеревоДанных,
																		  Координаты = "")
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + Координаты
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		
		НовВетка = ДеревоДанных.Строки.Добавить();
		
		// Заполнение данными из текущей строки многострочной части.
		Данные = Новый Структура;
		Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число);
		Для Каждого ИмяГрафы Из МассивИменГраф Цикл
			Обл = ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + Инд);
			Если Обл <> Неопределено Тогда
				Данные.Вставить(ИмяГрафы, Обл.Значение);
			КонецЕсли;
		КонецЦикла;
		НовВетка.Данные = Данные;
		
		// Заполнение данными из строк многострочных частей, подчиненных текущей строке многострочной части.
		ДанныеМногострочныхЧастей = Новый Структура;
		ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для Каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ПодчКоординаты = Координаты + Инд;
			СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
			 ИмяФормы, СтруктураРеквизитовФормы, ТабличныйДокумент, ИмяПодчГруппы, ДеревоПодчСтрок, ПодчКоординаты);
			ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		КонецЦикла;
		НовВетка.ДанныеМногострочныхЧастей = ДанныеМногострочныхЧастей;
		
		Инд_Число = Инд_Число + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СохраненныеДанныеОтчета(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	СохраненныеДанныеОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
	
	Если СохраненныеДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
		ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы, СохраненныеДанныеОтчета, СтруктураРеквизитовФормы);
	КонецЕсли;
	
	Возврат СохраненныеДанныеОтчета;
	
КонецФункции

Процедура ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(ИмяФормы, СписокСохранения, СтруктураРеквизитовФормы)
	
	Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4")
		ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")Тогда
		
		ПрефиксТД = "ПолеТабличногоДокумента";
		ДанныеМногоуровневыхРазделов = Новый Структура;
		
		// Данные вариантов автозаполнения.
		Если СписокСохранения.Свойство("ДанныеВариантовАвтоЗаполнения") Тогда
			СписокСохранения.Удалить("ДанныеВариантовАвтоЗаполнения");
		КонецЕсли;
		
		// Титульный лист.
		ДанныеТит = СписокСохранения.ПоказателиОтчета[ПрефиксТД + "Титульный"];
		Для Каждого Показатель Из ДанныеТит Цикл
			ИмяПоказателя = Показатель.Ключ;
			Если ИмяПоказателя = "ИНН1_1" Тогда
				ДанныеТит.Вставить("ИНН", "");
				Для Ном = 1 По 10 Цикл
					ДанныеТит.ИНН = ДанныеТит.ИНН + СокрЛП(ДанныеТит["ИНН1_" + Ном]);
					ДанныеТит.Удалить("ИНН1_" + Ном);
				КонецЦикла;
				Если Лев(ДанныеТит.ИНН, 2) = "00" Тогда
					ДанныеТит.ИНН = Сред(ДанныеТит.ИНН, 3);
				КонецЕсли;
				ДанныеТит.ИНН = СтрЗаменить(ДанныеТит.ИНН, "-", "");
			ИначеЕсли ИмяПоказателя = "КПП1_1" Тогда
				ДанныеТит.Вставить("КПП", "");
				Для Ном = 1 По 9 Цикл
					ДанныеТит.КПП = ДанныеТит.КПП + СокрЛП(ДанныеТит["КПП1_" + Ном]);
					ДанныеТит.Удалить("КПП1_" + Ном);
				КонецЦикла;
				ДанныеТит.КПП = СтрЗаменить(ДанныеТит.КПП, "-", "");
			ИначеЕсли ИмяПоказателя = "НалоговыйОрган1" Тогда
				ДанныеТит.Вставить("НалоговыйОрган", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрган" + Ном]);
					ДанныеТит.Удалить("НалоговыйОрган" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "НалоговыйОрганПоМестуОН1" Тогда
				ДанныеТит.Вставить("НалоговыйОрганПоМестуОН", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.НалоговыйОрган = ДанныеТит.НалоговыйОрган + СокрЛП(ДанныеТит["НалоговыйОрганПоМестуОН" + Ном]);
					ДанныеТит.Удалить("НалоговыйОрганПоМестуОН" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "НомерКорректировки1" Тогда
				ДанныеТит.Вставить("НомерКорректировки", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.НомерКорректировки = ДанныеТит.НомерКорректировки
					+ СтрЗаменить(СокрЛП(ДанныеТит["НомерКорректировки" + Ном]), "-", "");
					ДанныеТит.Удалить("НомерКорректировки" + Ном);
					Если НЕ ЗначениеЗаполнено(ДанныеТит.НомерКорректировки) Тогда
						ДанныеТит.НомерКорректировки = "0";
					КонецЕсли;
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Период1" Тогда
				ДанныеТит.Вставить("Период", "");
				Для Ном = 1 По 2 Цикл
					ДанныеТит.Период = ДанныеТит.Период + СокрЛП(ДанныеТит["Период" + Ном]);
					ДанныеТит.Удалить("Период" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ОтчетГод1" Тогда
				ДанныеТит.Вставить("ОтчетГод", "");
				Для Ном = 1 По 4 Цикл
					ДанныеТит.ОтчетГод = ДанныеТит.ОтчетГод + СокрЛП(ДанныеТит["ОтчетГод" + Ном]);
					ДанныеТит.Удалить("ОтчетГод" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "ПоМесту1" Тогда
				ДанныеТит.Вставить("ПоМесту", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.ПоМесту = ДанныеТит.ПоМесту + СокрЛП(ДанныеТит["ПоМесту" + Ном]);
					ДанныеТит.Удалить("ПоМесту" + Ном);
				КонецЦикла;
			ИначеЕсли ИмяПоказателя = "Прил1" Тогда
				ДанныеТит.Вставить("Прил", "");
				Для Ном = 1 По 3 Цикл
					ДанныеТит.Прил = ДанныеТит.Прил + СокрЛП(ДанныеТит["Прил" + Ном]);
					ДанныеТит.Удалить("Прил" + Ном);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		ДанныеТит.Вставить("ДатаПодписи", СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи);
		
		// Сохранение с последующим восстановлением номеров строк многоуровнего раздела.
		// (На случай выгрузки отчета, сохраненного в 2.0, без сохранения в 3.0.)
		СохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
		
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы,
											  СтруктураРеквизитовФормы,
											  Неопределено);
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = СохрНомераСтрокМногоуровнегоРаздела;
		
		// Раздел 1.
		ИмяРаздела = "Раздел1";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы1;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Многострочные данные 007-040.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		// Раздел 2.
		ИмяРаздела = "Раздел2";
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
			КонецЕсли;
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, "П0") Тогда
					ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Раздел 2.1.
		ИмяРаздела = "Раздел21";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21;
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		СтарТаблица  = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоДопСтрок = Новый ДеревоЗначений;
				ДеревоДопСтрок.Колонки.Добавить("Данные");
				ДеревоДопСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы, ДеревоДопСтрок);
			КонецЕсли;
			// Немногострочные данные.
			Для каждого Пок Из СтарДанные Цикл
				ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
			КонецЦикла;
			// Многострочные данные "Здание / сооружение / объект незавершенного строительства".
			НомСтр = 1;
			_НомСтр = "_1";
			Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
				Если Инд = 0 И НомСтр = 1 Тогда
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
				Иначе
					СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
				КонецЕсли;
				СтрокаМнЧ.Данные = Новый Структура;
				СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
				Для каждого ИмяГрафы Из ИменаГраф Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
				КонецЦикла;
				НомСтр = НомСтр + 1;
				_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2024Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв4") Тогда
			
			// Раздел 2.2.
			ИмяРаздела = "Раздел22";
			СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
			ДеревоРаздела = ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
			Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
				СтарСтраница = СтарТаблица[Инд];
				СтарДанные = СтарСтраница.Данные;
				Если Инд > 0 Тогда
					ДеревоРаздела.Строки.Добавить();
					ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
					ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
				КонецЕсли;
				Для каждого Пок Из СтарДанные Цикл
					Если СтрНачинаетсяС(Пок.Ключ, "П0") Тогда
						ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
			
		КонецЕсли;
		
		// Раздел 3.
		ИмяРаздела = "Раздел3";
		СтарТаблица = СписокСохранения.ДанныеМногостраничныхРазделов[ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
			СтарСтраница = СтарТаблица[Инд];
			СтарДанные = СтарСтраница.Данные;
			Если Инд > 0 Тогда
				ДеревоРаздела.Строки.Добавить();
				ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
				ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
			КонецЕсли;
			Для каждого Пок Из СтарДанные Цикл
				Если СтрНачинаетсяС(Пок.Ключ, "П0") Тогда
					ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		
		// Раздел 4.
		ИмяРаздела = "Раздел4";
		ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы4;
		СтарДанные = СписокСохранения.ПоказателиОтчета[ПрефиксТД + ИмяРаздела];
		ДеревоРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
		// Многострочные данные.
		СтруктураМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы];
		ИменаГраф = СтруктураМнЧ.ИменаГраф;
		НомСтр = 1;
		_НомСтр = "_1";
		Пока СтарДанные.Свойство(ИменаГраф[0] + _НомСтр) Цикл
			Если НомСтр = 1 Тогда
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки[0];
			Иначе
				СтрокаМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппы].Строки.Добавить();
			КонецЕсли;
			СтрокаМнЧ.Данные = Новый Структура;
			СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			Для каждого ИмяГрафы Из ИменаГраф Цикл
				СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
			КонецЦикла;
			НомСтр = НомСтр + 1;
			_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
		КонецЦикла;
		ДанныеМногоуровневыхРазделов.Вставить(ИмяРаздела, ДеревоРаздела);
		СписокСохранения.ПоказателиОтчета.Удалить(ПрефиксТД + ИмяРаздела);
		
		СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
		СписокСохранения.Удалить("ДанныеМногострочныхРазделов");
		СписокСохранения.Удалить("ДанныеМногостраничныхРазделов");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПечатногоБланка

Функция ПечатныйБланк(ПараметрыПечати) Экспорт
	
	Перем СтруктураРеквизитовФормы;
	Перем СтруктураМногоуровневыхРазделов;
	Перем ДанныеРазделов;
	Перем ВидПечати;
	Перем ДеревоВыбранныхСтраниц;
	Перем ДанныеМногоуровневыхРазделов;
	
	ИмяФормы = ПараметрыПечати.ВыбраннаяФорма;
	
	ПечатныйБланкФормируетсяВФорматеPDF = Ложь;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы) Тогда
		СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
		ИнициализироватьМногострочныеЧасти(ИмяФормы, СтруктураРеквизитовФормы);
		ПараметрыПечати.Свойство("СохраненныйОтчет", СтруктураРеквизитовФормы.мСохраненныйДок);
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("СтруктураМногоуровневыхРазделов", СтруктураМногоуровневыхРазделов) Тогда
		ИнициализироватьМногоуровневыеРазделы(ИмяФормы, СтруктураРеквизитовФормы, СтруктураМногоуровневыхРазделов);
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ДеревоВыбранныхСтраниц", ДеревоВыбранныхСтраниц) Тогда
		ДеревоВыбранныхСтраниц = ПараметрыПечати.СохраненныйОтчет.ДеревоНастройкиСтраниц.Получить();
		ПечатныйБланкФормируетсяВФорматеPDF = Истина;
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ВидПечати", ВидПечати) Тогда
		ВидПечати = "";
	КонецЕсли;
	
	Если НЕ ПараметрыПечати.Свойство("ДанныеРазделов", ДанныеРазделов) Тогда
		
		ДанныеРазделов = Новый Структура;
		
		СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы, СтруктураРеквизитовФормы);
		
		ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
		
		Для Каждого Раздел Из ПоказателиОтчета Цикл
			
			ДанныеРазделов.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
			РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
			
		КонецЦикла;
		
		Если СохрСтруктура.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
			
			Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
				
				РегламентированнаяОтчетность.ПоместитьВКэш(ЭлементСтруктуры.Значение, Новый УникальныйИдентификатор,
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, ДанныеРазделов.Титульный);
	
	Для Каждого СтраницаОтчета Из ДеревоВыбранныхСтраниц.Строки Цикл
		
		Если СтраницаОтчета.ВыводНаПечать = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  СтраницаОтчета.Представление);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    СтраницаОтчета.ОриентацияСтраницы);
		СтруктураПараметров.Вставить("ИмяСтраницы",        СтраницаОтчета.ИмяСтраницы);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтраницаОтчета.ИмяОбластиТабличногоПоля);
		Структурапараметров.Вставить("ВидПечати",          ВидПечати);
		
		Если СтруктураМногоуровневыхРазделов.Свойство(СтраницаОтчета.ИмяСтраницы) Тогда
			
			ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
														СтруктураПараметров,
														ОбщиеРеквизитыРазделов,
														СтруктураРеквизитовФормы,
														ДанныеРазделов);
			
		Иначе
			
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметров,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(
	СтруктураРеквизитовФормы, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	Если НЕ ПечатныйБланкФормируетсяВФорматеPDF Тогда
		Возврат "";
	КонецЕсли;
	
	ПакетОтображаемыхДокументов = Новый ПакетОтображаемыхДокументов;
	
	Для Каждого Лист Из СтруктураРеквизитовФормы.СписокПечатаемыхЛистов Цикл
		ПакетОтображаемыхДокументов.Состав.Добавить(Лист.Значение[0]);
	КонецЦикла;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
	
	ПакетОтображаемыхДокументов.ЗаписатьФайлДляПечати(ИмяВременногоФайла);
	
	ФайлПечатногоБланка = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлПечатногоБланка, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	ИмяФайлаПечатногоБланка = НСтр("ru = 'Декларация по налогу на имущество';
									|en = 'Декларация по налогу на имущество'") + НСтр("ru = ' за ';
																					|en = ' за '")
		+ ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала),
		КонецДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания), "ФП = Истина")
		+ " (" + СтруктураРеквизитовФормы.мСохраненныйДок.Организация + ").pdf";
	
	ПечатныйБланк = Новый Структура;
	ПечатныйБланк.Вставить("АдресПечатногоБланка", АдресВоВременномХранилище);
	ПечатныйБланк.Вставить("ИмяФайлаПечатногоБланка",
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайлаПечатногоБланка));
	
	Возврат ПечатныйБланк;
	
КонецФункции

Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, СтруктураДанныхТитульный)
	
	МассивИНН         = Новый Массив(10);
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	
	СтрИНН = "";
	
	Если СтруктураДанныхТитульный.Свойство("ИНН", СтрИНН) Тогда
		
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
			
		КонецЦикла;
	
	КонецЕсли;
	
	СтрКПП = "";
	
	Если СтруктураДанныхТитульный.Свойство("КПП", СтрКПП) Тогда
		
		Для Ном = 1 По СтрДлина(СтрКПП) Цикл
			
			МассивКПП[Ном - 1] = Сред(СтрКПП, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДатаПодписи = "";
	
	Если СтруктураДанныхТитульный.Свойство("ДатаПодписи", ДатаПодписи) Тогда
	
		Если ТипЗнч(ДатаПодписи) = Тип("Строка") Тогда 
			
			СтрДатаПодписи = Лев(СтрЗаменить(ДатаПодписи, ".", ""), 8);
			
		ИначеЕсли ТипЗнч(ДатаПодписи) = Тип("Дата") Тогда 
			
			Если ЗначениеЗаполнено(ДатаПодписи) Тогда 
				
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(ДатаПодписи, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
				
			Иначе
				
				СтрДатаПодписи = "        ";
				
			КонецЕсли;
			
		КонецЕсли;
		
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

Процедура ВывестиНаПечатьДанныеМногоуровневогоРаздела(ИмяФормы,
													  СтруктураПараметров,
													  ОбщиеРеквизитыРазделов,
													  СтруктураРеквизитовФормы,
													  ДанныеРазделов)
													
	ФорматОкругленияЧисла = Новый Структура;
	ФорматОкругленияЧисла.Вставить("Разрядность", СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения);
	ФорматОкругленияЧисла.Вставить("Класс", 1);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	ИмяТекРаздела = СтруктураПараметров.ИмяСтраницы;
	
	Если СтруктураРеквизитовФормы.мБезОткрытияФормы = Истина Тогда// возможны более двух значений
		СохрСтруктура = СохраненныеДанныеОтчета(ИмяФормы, СтруктураРеквизитовФормы);
		ДеревоДанныхРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов[ИмяТекРаздела];
		СохрСтруктура = Неопределено;
	Иначе
		ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяТекРаздела]);
	КонецЕсли;
	
	Если ИмяТекРаздела = "Раздел1" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		Данные     = ДеревоДанныхРаздела.Строки[0].Данные;
		ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1];
		
		СтрокМнЧ1НаЛисте = 2;
		
		// Определение количества листов.
		КолСтрокМнЧ1 = ДанныеМнЧ1.Строки.Количество();
		ДробКол1 = КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте;
		ЦелКол1  = Цел(КолСтрокМнЧ1 / СтрокМнЧ1НаЛисте);
		КолЛистовРаздела1 = ?(ДробКол1 = ЦелКол1, ЦелКол1, ЦелКол1 + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧ1ДляПечати = Новый Массив;
		ИмяП000010000703 = "П000010000703";
		ИмяП000010001003 = "П000010001003";
		ИмяП000010002003 = "П000010002003";
		ИмяП000010002103 = "П000010002103";
		ИмяП000010002303 = "П000010002303";
		ИмяП000010002503 = "П000010002503";
		ИмяП000010002703 = "П000010002703";
		ИмяП000010003003 = "П000010003003";
		ИмяП000010004003 = "П000010004003";
		
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			Приращение1КНомеру = (НомЛиста - 1) * СтрокМнЧ1НаЛисте;
			ДанныеМнЧ1ДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧ1НаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + Приращение1КНомеру;
				
				НовИмяП000010000703 = ИмяП000010000703 + _ИндСтрокиМнЧ;
				НовИмяП000010001003 = ИмяП000010001003 + _ИндСтрокиМнЧ;
				НовИмяП000010002003 = ИмяП000010002003 + _ИндСтрокиМнЧ;
				НовИмяП000010002103 = ИмяП000010002103 + _ИндСтрокиМнЧ;
				НовИмяП000010002303 = ИмяП000010002303 + _ИндСтрокиМнЧ;
				НовИмяП000010002503 = ИмяП000010002503 + _ИндСтрокиМнЧ;
				НовИмяП000010002703 = ИмяП000010002703 + _ИндСтрокиМнЧ;
				НовИмяП000010003003 = ИмяП000010003003 + _ИндСтрокиМнЧ;
				НовИмяП000010004003 = ИмяП000010004003 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010000703, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010001003, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002003, "");
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002103, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002303, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002503, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002703, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010003003, 0);
				ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010004003, 0);
				
				Если КолСтрокМнЧ1 >= ИндСПриращением Тогда
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010000703,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010000703]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010001003,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010001003]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002003,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010002003]);
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002103,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010002103]));
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002303,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010002303]));
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002503,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010002503]));
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010002703,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010002703]));
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010003003,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010003003]));
					ДанныеМнЧ1ДляПечати.Вставить(НовИмяП000010004003,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ1.Строки[ИндСПриращением - 1].Данные[ИмяП000010004003]));
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧ1ДляПечати.Добавить(ДанныеМнЧ1ДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела1 Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Каждого Пок Из Данные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			Для Ном = 1 По СтрокМнЧ1НаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки"
				+ СтруктураРеквизитовФормы.мИдГруппы1 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				
				ВставитьДопСтроку(ИмяФормы,
						  		  СтруктураРеквизитовФормы,
						  		  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы1,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			ДанныеМнЧ1ДляПечати = МассивДанныхМнЧ1ДляПечати[НомЛиста - 1];
			Для Каждого Пок Из ДанныеМнЧ1ДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
						
			ВывестиНаПечатьЛист(ИмяФормы,
							    СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел2" ИЛИ ИмяТекРаздела = "Раздел22" ИЛИ ИмяТекРаздела = "Раздел3" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		Для Каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Каждого Пок Из Ветка.Данные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			// Особая обработка Кжд.
			Если ИмяТекРаздела = "Раздел2" ИЛИ ИмяТекРаздела = "Раздел22" Тогда
				ИмяОбл = ?(ИмяТекРаздела = "Раздел2", "П000020021503", "П000220021503");
				Обл = ТабличныйДокумент.Области.Найти(ИмяОбл);
				Если Обл <> Неопределено Тогда
					Обл.Значение = СокрЛП(Обл.Значение);
					Обл.Значение = СтрЗаменить(Обл.Значение, ",", ".");
					Обл.Значение = ?(НЕ ЗначениеЗаполнено(Обл.Значение), "-.-" , Обл.Значение);
					Обл.Значение = ?(Обл.Значение = "0", "0.0" , Обл.Значение);
				КонецЕсли;
			КонецЕсли;
			
			УстановитьФорматВывода(ИмяФормы, ИмяТекРаздела, ТабличныйДокумент, СтруктураРеквизитовФормы);
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			
			ВывестиНаПечатьЛист(ИмяФормы,
							    СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел21" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		СтрокМнЧНаЛисте = 3;
		
		Для Каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы21];
			
			// Определение количества листов.
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			МассивДанныхМнЧДляПечати = Новый Массив;
			ИмяП00021М103013 = "П00021М103013";
			ИмяП00021М103014 = "П00021М103014";
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
					ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
					
					НовИмяП00021М103013 = ИмяП00021М103013 + _ИндСтрокиМнЧ;
					НовИмяП00021М103014 = ИмяП00021М103014 + _ИндСтрокиМнЧ;
					
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103013, "");
					ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103014, "");
					
					Если КолСтрокМнЧ >= ИндСПриращением Тогда
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103013,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103013]);
						ДанныеМнЧДляПечати.Вставить(НовИмяП00021М103014,
						ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00021М103014]);
					КонецЕсли;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки"
					+ СтруктураРеквизитовФормы.мИдГруппы21 + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяФормы,
						  		  	  СтруктураРеквизитовФормы,
						  		  	  ТабличныйДокумент,
								  	  СтруктураРеквизитовФормы.мИдГруппы21,
								  	  ИмяОбластиПреемника);
				КонецЦикла;
				
				Если НомЛиста = 1 Тогда
					Для каждого Пок Из Ветка.Данные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Если Обл.Имя = "П000210004003" Тогда
								// Особая обработка кода ОКОФ.
								ОКОФ = СокрЛП(Ветка.Данные["П000210004003"]);
								ОКОФ = СтрЗаменить(ОКОФ, ".", "");
								ОКОФ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ОКОФ, 12, "-", 1);
								Обл.Значение = ОКОФ;
							Иначе
								Обл.Значение = Пок.Значение;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для Каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				УстановитьФорматВывода(ИмяФормы, ИмяТекРаздела, ТабличныйДокумент, СтруктураРеквизитовФормы);
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
	
				ВывестиНаПечатьЛист(ИмяФормы,
							 	    СтруктураПараметровРаздела,
									ОбщиеРеквизитыРазделов,
									СтруктураРеквизитовФормы,
									ДанныеРазделов,
									ТабличныйДокумент);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел4" Тогда
		
		МакетРаздела = ЭтотОбъект.ПолучитьМакет(Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ДанныеМнЧ = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы4];
		
		СтрокМнЧНаЛисте = 25;
		
		// Определение количества листов.
		КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
		ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
		ЦелКол  = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
		КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
		
		// Подготовка многострочных данных для заполнения листов.
		МассивДанныхМнЧДляПечати = Новый Массив;
		ИмяП00004М100001 = "П00004М100001";
		ИмяП00004М100002 = "П00004М100002";
		
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
			ДанныеМнЧДляПечати = Новый Структура;
			Для ИндСтрокиМнЧ = 1 По СтрокМнЧНаЛисте Цикл
				_ИндСтрокиМнЧ = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИндСтрокиМнЧ);
				ИндСПриращением = ИндСтрокиМнЧ + ПриращениеКНомеру;
				
				НовИмяП00004М100001 = ИмяП00004М100001 + _ИндСтрокиМнЧ;
				НовИмяП00004М100002 = ИмяП00004М100002 + _ИндСтрокиМнЧ;
				
				ДанныеМнЧДляПечати.Вставить(НовИмяП00004М100001, "");
				ДанныеМнЧДляПечати.Вставить(НовИмяП00004М100002, 0);
				
				Если КолСтрокМнЧ >= ИндСПриращением Тогда
					ДанныеМнЧДляПечати.Вставить(НовИмяП00004М100001,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00004М100001]);
					ДанныеМнЧДляПечати.Вставить(НовИмяП00004М100002,
					РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ФорматОкругленияЧисла,
					ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяП00004М100002]));
				КонецЕсли;
			КонецЦикла;
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
		КонецЦикла;
		
		// Вывод листов.
		Для НомЛиста = 1 По КолЛистовРаздела Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки" + СтруктураРеквизитовФормы.мИдГруппы4
				+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Ном);
				ВставитьДопСтроку(ИмяФормы,
								  СтруктураРеквизитовФормы,
								  ТабличныйДокумент,
								  СтруктураРеквизитовФормы.мИдГруппы4,
								  ИмяОбластиПреемника);
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			
			ВывестиНаПечатьЛист(ИмяФормы,
								СтруктураПараметровРаздела,
								ОбщиеРеквизитыРазделов,
								СтруктураРеквизитовФормы,
								ДанныеРазделов,
								ТабличныйДокумент);
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДеревоДанныхРаздела = Неопределено;
	
КонецПроцедуры

Процедура ВывестиНаПечатьЛист(ИмяФормы,
							  СтруктураПараметров,
							  ОбщиеРеквизитыРазделов,
							  СтруктураРеквизитовФормы,
							  ДанныеРазделов,
							  ТабличныйДокумент = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк" + СтрЗаменить(ИмяФормы, "ФормаОтчета", "") + "_";
	
	ИмяМЧБ = ПрефиксИменМакетов + СтруктураПараметров.ИмяСтраницы;
	
	МакетПечатнойФормы = ЭтотОбъект.ПолучитьМакет(ИмяМЧБ);
	МакетПечатнойФормы.ПолеСверху = 5;
	МакетПечатнойФормы.ПолеСправа = 5;
	МакетПечатнойФормы.ПолеСнизу  = 5;
	МакетПечатнойФормы.ПолеСлева  = 5;
	
	ЗаполнитьПечатнуюФорму(ИмяФормы,
						   СтруктураПараметров,
						   МакетПечатнойФормы,
						   ОбщиеРеквизитыРазделов,
						   ДанныеРазделов,
						   ТабличныйДокумент,
						   СтруктураРеквизитовФормы);

	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(МакетПечатнойФормы);
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетПечатнойФормы, СтрПоля, "Макет");
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая("",
														  СтруктураПараметров,
														  ТабличныйДокумент,
														  СтруктураРеквизитовФормы.мПечатныеФормы);

КонецПроцедуры

Процедура ЗаполнитьПечатнуюФорму(ИмяФормы,
								 ПараметрыПечати,
								 МакетПечатнойФормы,
								 ОбщиеРеквизитыРазделов,
								 ДанныеРазделов,
								 ТабличныйДокумент,
								 СтруктураРеквизитовФормы)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	МакетФормыОтчета = ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ПараметрыПечати.ИмяСтраницы);
	
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		
		Для Каждого Показатель Из ДанныеРазделов[ПараметрыПечати.ИмяСтраницы] Цикл
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя         = Показатель.Ключ;
			НовСтр.Значение    = Показатель.Значение;
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета, СтруктураРеквизитовФормы);
			
		КонецЦикла;
		
	Иначе
		
		ИсходныйМакет = ТабличныйДокумент;
		
		Для Каждого Область Из ИсходныйМакет.Области Цикл
			
			Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Область.СодержитЗначение = Истина Тогда
				НовСтр = Показатели.Добавить();
				НовСтр.Имя         = Область.Имя;
				НовСтр.Значение    = Область.Значение;
				НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, Область, МакетФормыОтчета, СтруктураРеквизитовФормы);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	НайденноеЗначение = Показатели.Найти("ИНН", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	ИНН = "";
	Для Ном = 0 По 9 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН1";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);

	НайденноеЗначение = Показатели.Найти("КПП", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП1";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);

	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписиПолная";
	Если СокрЛП(ДатаПодписиСтр) <> "" Тогда
		НовСтр.Значение = Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2)
			+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг""");
		НовСтр.ЗначениеМЧБ = СокрЛП(Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2)
			+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг"""));
	КонецЕсли;

	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		
		Если ПокПодписант <> Неопределено Тогда
			
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
			
		КонецЕсли;
		
	КонецЕсли;
	
	ИНН = Новый Массив(12);
	Для Инд = 1 По 9 Цикл
		Для Знакоместо = 0 По 11 Цикл
			ИНН[Знакоместо] = Показатели.Найти("ИНН" + Инд + "_" + (Знакоместо + 1), "Имя");
		КонецЦикла;
		Если ИНН[0] = Неопределено ИЛИ ИНН[1] = Неопределено ИЛИ ИНН[10] = Неопределено Тогда
			Продолжить;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Показатель Из Показатели Цикл
		
		Если СтрНачинаетсяС(Показатель.Имя, "П000010001003") ИЛИ Показатель.Имя = "П000020001001"
			ИЛИ Показатель.Имя = "П000210001000" ИЛИ Показатель.Имя = "П000220001001" ИЛИ Показатель.Имя = "П000030001001" Тогда
			
			Показатель.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
			СокрЛП(Показатель.Значение), 11, "-", 1);
			
		КонецЕсли;
		
	КонецЦикла;

	ИндексТочкиПоКорню = Новый Структура;
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							// Разделение числа на 2 части.
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = СтрЗаменить(Строка(Формат(Цел(РезультатПоиска.Значение), "ЧРГ=';'")), ";", "");
							Если РезультатПоиска.Значение < 0 И СтрНайти(РезультатПоиска.ЗначениеМЧБ, ".") > 0 Тогда
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),4);
							Иначе
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							КонецЕсли;
							Если СтрЦелаяЧасть <> "" ИЛИ СтрДробнаяЧасть <> "" Тогда
								СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "", "0", СтрЦелаяЧасть);
								Если РезультатПоиска.Значение < 0 Тогда
									СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "0", "-0", СтрЦелаяЧасть);
								КонецЕсли;
								СтрДробнаяЧасть = ?(СтрДробнаяЧасть = "", "0", СтрДробнаяЧасть);
							КонецЕсли;
							// Разделение областей показателя на 2 части.
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								// На МЧБ нет разделения на целую и дробную части.
								ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
									ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								// Определяем какая часть выводится (Целая, дробная или точка).
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа<ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится целая часть.
									ПрисвоитьЗначениеОбласти(ИмяФормы, Область, ?(РезультатПоиска.ЗначениеМЧБ = "-","-",СтрЦелаяЧасть),
										ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									// Выводится дробная часть.
									ПрисвоитьЗначениеОбласти(ИмяФормы, Область, СтрДробнаяЧасть,
										ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									// Выводится точка.
									// Присваивать ничего не будем, но считаем, что область заполненяется корректно.
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
								ТекАдресЗначенияОбласти.ИндексЗнакоместа, ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка")
									ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда
					
					ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не удалось заполнить область ""%1""';
							|en = 'Не удалось заполнить область ""%1""'"), ИмяОбласти));
					
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета, СтруктураРеквизитовФормы)
	
	ФорматОбласти = "";
	
	Область
	= МакетФормыОтчета.Области.Найти(?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя));
	
	Если НЕ Область = Неопределено Тогда
		
		ФорматОбласти = Область.Формат;
		
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Показатель.Значение);
	
	Если ТипЗначения = Тип("Число") Тогда
		
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ИмяФормы, ФорматОбласти);
		
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		
		Если НЕ Область = Неопределено
		   И Область.ТипЗначения.КвалификаторыЧисла.Разрядность
		   = СтруктураРеквизитовФормы.ОписаниеТиповЧислоЕ.КвалификаторыЧисла.Разрядность
		   И Область.ТипЗначения.КвалификаторыЧисла.РазрядностьДробнойЧасти
		   = СтруктураРеквизитовФормы.ОписаниеТиповЧислоЕ.КвалификаторыЧисла.РазрядностьДробнойЧасти Тогда
			
			СоотвСтрокаФормата.Вставить("ЧДЦ", "0");
			СоотвСтрокаФормата.Вставить("ЧРД", ",");
			СоотвСтрокаФормата.Вставить("ЧС", "0");
			
		КонецЕсли;
		
		Результат = Формат(Показатель.Значение, СобратьСтрокуФормата(ИмяФормы, СоотвСтрокаФормата));
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		
		Результат = СокрЛП(Показатель.Значение);
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		
		Результат = Формат(Показатель.Значение, ?(ПустаяСтрока(ФорматОбласти), "ДФ=ddMMyyyy", ФорматОбласти));
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		
		Результат = Формат(Показатель.Значение, ФорматОбласти);
		
	КонецЕсли;
	
	Возврат СокрЛП(Результат);
	
КонецФункции

Функция АдресЗначенияОбласти(ИмяФормы, Область)
	
	Имя = Область.Имя;
	
	КореньИмениОбласти = Неопределено;
	
	СтрИндексЗнакоместа = "";
	
	ИндексЗнакоместа = 0;
	
	ДлинаИмени = СтрДлина(Имя);
	
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
			
		Иначе
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
		
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

Процедура ПрисвоитьЗначениеОбласти(ИмяФормы,
								   Область,
								   Знач Значение,
								   ИндексЗнакоместа = 0,
								   Дополнять_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(Дополнять_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

Функция РазобратьСтрокуФормата(ИмяФормы, Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
		КонецЕсли;
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
	КонецЦикла;
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
	КонецЕсли;
	Возврат ЗначенияПараметров;
	
КонецФункции

Функция СобратьСтрокуФормата(ИмяФормы, ПараметрыФормата)
	
	СтрокаФормата = "";
	Для Каждого Параметр Из ПараметрыФормата Цикл
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		СтрокаФормата = Сред(СтрокаФормата, 3);
	КонецЕсли;
	Возврат СтрокаФормата;
	
КонецФункции

Процедура ВставитьДопСтроку(ИмяФормы,
							СтруктураРеквизитовФормы,
							ТабличныйДокумент,
							Знач ИмяГруппы,
							Знач ИмяОбластиПреемника,
							ЭтоАвтоВставкаПодчиненнойМнЧ = Ложь,
							Элементы = Неопределено) Экспорт
	
	НачИндекс = "_1";
	
	Если СтрНайти(ИмяОбластиПреемника, "ДобавлениеСтроки" + ИмяГруппы) > 0 Тогда
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти("МногострочнаяЧасть" + ИмяГруппы);
		
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТаблДок.Область(ИскомаяОбласть.Имя);
		ВставляемаяОбласть.Имя = "";
		
		НовКоординаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординаты, "_");
		НачКоординаты = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординаты = НачКоординаты + НачИндекс;
		КонецЦикла;
		
		ПреИндекс_Число = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяОбластиПреемника);
		НовИндекс_Число = ?(ЭтоАвтоВставкаПодчиненнойМнЧ, 1, ПреИндекс_Число + 1);
		
		ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ПреИндекс_Число);
		НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		НачПостфикс = ИмяГруппы + НачКоординаты + НачИндекс;
		ПреПостфикс = ИмяГруппы + НовКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + НовКоординаты + НовИндекс;
		
		МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
		
		Для Каждого ИмяГрафы Из МассивИменГраф Цикл
			
			НачИмяОбл = ИмяГрафы + НачКоординаты + НачИндекс;
			НовИмяОбл = ИмяГрафы + НовКоординаты + НовИндекс;
			
			ОбластьЯчейки = ВремТаблДок.Области[НачИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НачПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		КонецЕсли;
		
		Если ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			КонецЕсли;
		Иначе
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Если НовИндекс_Число = 2 Тогда
					Если Обл <> Неопределено Тогда
						Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
						Обл.Гиперссылка = Истина;
						Обл.Текст = "х";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		КонецЕсли;
		
		ОблПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемника);
		ОблПреемник.Имя = "ДобавлениеСтроки" + НовПостфикс;
		
		// Изменения в оформлении ячеек: установка значения "НетЛинии"/"Сплошная" для
		// свойства "ГраницаСнизу" (в случае задания номеров специальных колонок):
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для Каждого НомКолонки Из НомераСпецКолонок Цикл
				// Удаление линии в определенных колонках последней (до добавления) строки.
				Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
					Обл = ТабличныйДокумент.Область(
						ОблПреемник.Верх - 1, НомКолонки, ОблПреемник.Верх - 1, НомКолонки);
					Если Обл <> Неопределено Тогда
						Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					КонецЕсли;
				КонецЕсли;
				// Установка линии в определенных колонках добавляемой строки.
				Обл = ВремТаблДок.Область(
					ВставляемаяОбласть.Низ, НомКолонки, ВставляемаяОбласть.Низ, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОблПреемник_ = ТабличныйДокумент.Область(
			ОблПреемник.Верх, , ОблПреемник.Верх + ИскомаяОбласть.Низ - ИскомаяОбласть.Верх, );
		ТабличныйДокумент.ВставитьОбласть(
			ВставляемаяОбласть, ОблПреемник_, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			// Установка текущей области после добавления строки.
			НовИмяТекОбл = МассивИменГраф[0] + НовКоординаты + НовИндекс;
			НовТекОбл = ТабличныйДокумент.Области[НовИмяТекОбл];
			Если Элементы = Неопределено Тогда
				ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
			Иначе
				Элементы.ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		ИмяГруппы]["ИменаПодчиненныхГрупп"];
	Для Каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
		НовКоординатыДляПодчОбласти = НовКоординаты + НовИндекс;
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординатыДляПодчОбласти, "_");
		НачКоординатыДляПодчОбласти = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординатыДляПодчОбласти = НачКоординатыДляПодчОбласти + НачИндекс;
		КонецЦикла;
		
		НачИндВставляемойОбласти = НачИндекс;
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
			"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		
		Если ИскомаяОбласть = Неопределено Тогда
			НачИндВставляемойОбласти = 1;
			Пока ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ИмяПодчГруппы
				+ НачКоординатыДляПодчОбласти + "_" + Формат(НачИндВставляемойОбласти, "ЧГ=")) = Неопределено Цикл
				НачИндВставляемойОбласти = НачИндВставляемойОбласти + 1;
			КонецЦикла;
			НачИндВставляемойОбласти = "_" + Формат(НачИндВставляемойОбласти, "ЧГ=");
			ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
				"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		КонецЕсли;
		
		ВремТабличныйДокумент = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТабличныйДокумент.Область(ИскомаяОбласть.Имя);
		Для Каждого ОбластьЯчейки Из ВремТабличныйДокумент.Области Цикл
			ОбластьЯчейки.Имя = СтрЗаменить(ОбластьЯчейки.Имя,
				ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти,
				ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс);
		КонецЦикла;
		ИмяОбластиПреемникаДляПодчОбласти = СтрЗаменить(ИмяОбластиПреемника, ПреПостфикс, НовПостфикс);
		ОбластьПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемникаДляПодчОбласти);
		
		ТабличныйДокумент.ВставитьОбласть(ВставляемаяОбласть, ОбластьПреемник, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		ИмяОбластиПреемникаДляПодчОбласти = "ДобавлениеСтроки" + ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс;
		
		ВставитьДопСтроку(ИмяФормы,
						  СтруктураРеквизитовФормы,
						  ТабличныйДокумент,
						  ИмяПодчГруппы,
						  ИмяОбластиПреемникаДляПодчОбласти,
						  Истина,
						  Элементы);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьФорматВывода(ИмяФормы, ИмяРаздела, ТабличныйДокумент, СтруктураРеквизитовФормы) Экспорт
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1 Тогда
		СтруктураРеквизитовФормы.мСтрокаФормата = "; ЧДЦ = "
			+ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 0";
	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000 Тогда
		СтруктураРеквизитовФормы.мСтрокаФормата = "; ЧДЦ = "
			+ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 3";
	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1000000 Тогда
		СтруктураРеквизитовФормы.мСтрокаФормата = "; ЧДЦ = "
			+ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения + "; ЧРД=,; ЧН=-; ЧС = 6";
	КонецЕсли;
	
	ИменаМногострочныхПоказателей   = Новый Массив;
	ИменаНемногострочныхПоказателей = Новый Массив;
	
	Если ИмяРаздела = "Раздел1" Тогда
		ИменаМногострочныхПоказателей.Добавить("П000010002103");
		ИменаМногострочныхПоказателей.Добавить("П000010002303");
		ИменаМногострочныхПоказателей.Добавить("П000010002503");
		ИменаМногострочныхПоказателей.Добавить("П000010002703");
		ИменаМногострочныхПоказателей.Добавить("П000010003003");
		ИменаМногострочныхПоказателей.Добавить("П000010004003");
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		ИменаНемногострочныхПоказателей.Добавить("П000020002003");
		ИменаНемногострочныхПоказателей.Добавить("П000020003003");
		ИменаНемногострочныхПоказателей.Добавить("П000020004003");
		ИменаНемногострочныхПоказателей.Добавить("П000020005003");
		ИменаНемногострочныхПоказателей.Добавить("П000020006003");
		ИменаНемногострочныхПоказателей.Добавить("П000020007003");
		ИменаНемногострочныхПоказателей.Добавить("П000020008003");
		ИменаНемногострочныхПоказателей.Добавить("П000020009003");
		ИменаНемногострочныхПоказателей.Добавить("П000020010003");
		ИменаНемногострочныхПоказателей.Добавить("П000020011003");
		ИменаНемногострочныхПоказателей.Добавить("П000020012003");
		ИменаНемногострочныхПоказателей.Добавить("П000020013003");
		ИменаНемногострочныхПоказателей.Добавить("П000020014003");
		
		ИменаНемногострочныхПоказателей.Добавить("П000020002004");
		ИменаНемногострочныхПоказателей.Добавить("П000020003004");
		ИменаНемногострочныхПоказателей.Добавить("П000020004004");
		ИменаНемногострочныхПоказателей.Добавить("П000020005004");
		ИменаНемногострочныхПоказателей.Добавить("П000020006004");
		ИменаНемногострочныхПоказателей.Добавить("П000020007004");
		ИменаНемногострочныхПоказателей.Добавить("П000020008004");
		ИменаНемногострочныхПоказателей.Добавить("П000020009004");
		ИменаНемногострочныхПоказателей.Добавить("П000020010004");
		ИменаНемногострочныхПоказателей.Добавить("П000020011004");
		ИменаНемногострочныхПоказателей.Добавить("П000020012004");
		ИменаНемногострочныхПоказателей.Добавить("П000020013004");
		ИменаНемногострочныхПоказателей.Добавить("П000020014004");
		
		ИменаНемногострочныхПоказателей.Добавить("П000020015003");
		ИменаНемногострочныхПоказателей.Добавить("П000020017003");
		ИменаНемногострочныхПоказателей.Добавить("П000020019003");
		ИменаНемногострочныхПоказателей.Добавить("П000020022003");
		ИменаНемногострочныхПоказателей.Добавить("П000020024003");
		ИменаНемногострочныхПоказателей.Добавить("П000020025003");
		ИменаНемногострочныхПоказателей.Добавить("П000020026003");
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда
		ИменаНемногострочныхПоказателей.Добавить("П000210005003");
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда
		ИменаНемногострочныхПоказателей.Добавить("П000220002003");
		ИменаНемногострочныхПоказателей.Добавить("П000220003003");
		ИменаНемногострочныхПоказателей.Добавить("П000220004003");
		ИменаНемногострочныхПоказателей.Добавить("П000220005003");
		ИменаНемногострочныхПоказателей.Добавить("П000220006003");
		ИменаНемногострочныхПоказателей.Добавить("П000220007003");
		ИменаНемногострочныхПоказателей.Добавить("П000220008003");
		ИменаНемногострочныхПоказателей.Добавить("П000220009003");
		ИменаНемногострочныхПоказателей.Добавить("П000220010003");
		ИменаНемногострочныхПоказателей.Добавить("П000220011003");
		ИменаНемногострочныхПоказателей.Добавить("П000220012003");
		ИменаНемногострочныхПоказателей.Добавить("П000220013003");
		ИменаНемногострочныхПоказателей.Добавить("П000220014003");
		
		ИменаНемногострочныхПоказателей.Добавить("П000220002004");
		ИменаНемногострочныхПоказателей.Добавить("П000220003004");
		ИменаНемногострочныхПоказателей.Добавить("П000220004004");
		ИменаНемногострочныхПоказателей.Добавить("П000220005004");
		ИменаНемногострочныхПоказателей.Добавить("П000220006004");
		ИменаНемногострочныхПоказателей.Добавить("П000220007004");
		ИменаНемногострочныхПоказателей.Добавить("П000220008004");
		ИменаНемногострочныхПоказателей.Добавить("П000220009004");
		ИменаНемногострочныхПоказателей.Добавить("П000220010004");
		ИменаНемногострочныхПоказателей.Добавить("П000220011004");
		ИменаНемногострочныхПоказателей.Добавить("П000220012004");
		ИменаНемногострочныхПоказателей.Добавить("П000220013004");
		ИменаНемногострочныхПоказателей.Добавить("П000220014004");
		
		ИменаНемногострочныхПоказателей.Добавить("П000220015003");
		ИменаНемногострочныхПоказателей.Добавить("П000220017003");
		ИменаНемногострочныхПоказателей.Добавить("П000220019003");
		ИменаНемногострочныхПоказателей.Добавить("П000220022003");
		ИменаНемногострочныхПоказателей.Добавить("П000220024003");
		ИменаНемногострочныхПоказателей.Добавить("П000220025003");
		ИменаНемногострочныхПоказателей.Добавить("П000220026003");
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		ИменаНемногострочныхПоказателей.Добавить("П000030002003");
		ИменаНемногострочныхПоказателей.Добавить("П000030002503");
		ИменаНемногострочныхПоказателей.Добавить("П000030006003");
		ИменаНемногострочныхПоказателей.Добавить("П000030010003");
		ИменаНемногострочныхПоказателей.Добавить("П000030012003");
		ИменаНемногострочныхПоказателей.Добавить("П000030013003");
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда
		ИменаМногострочныхПоказателей.Добавить("П00004М100002");
	КонецЕсли;
	
	Для Каждого ИмяПоказателя Из ИменаНемногострочныхПоказателей Цикл
		ЧислоЕЗнак = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2));
		ФорматируемаяОбласть = ТабличныйДокумент.Области[ИмяПоказателя];
		ДопустимыйЗнакПоказателя = ФорматируемаяОбласть.ТипЗначения.КвалификаторыЧисла.ДопустимыйЗнак;
		Если ДопустимыйЗнакПоказателя = ДопустимыйЗнак.Неотрицательный Тогда
			ЧислоЕЗнак = Новый ОписаниеТипов("Число",
				Новый КвалификаторыЧисла(ЧислоЕЗнак.КвалификаторыЧисла.Разрядность,
				ЧислоЕЗнак.КвалификаторыЧисла.РазрядностьДробнойЧасти, ДопустимыйЗнакПоказателя));
		КонецЕсли;
		ФорматируемаяОбласть.ТипЗначения = ЧислоЕЗнак;
		ФорматируемаяОбласть.Формат = "ЧЦ = "
			+ ЧислоЕЗнак.КвалификаторыЧисла.Разрядность + СтруктураРеквизитовФормы.мСтрокаФормата;
	КонецЦикла;
	
	Для Каждого ИмяПоказателя Из ИменаМногострочныхПоказателей Цикл
		НСтр = 1;
		Пока ТабличныйДокумент.Области.Найти(ИмяПоказателя + "_" + Формат(НСтр, "ЧГ=")) <> Неопределено Цикл
			ЧислоЕЗнак = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2));
			ФорматируемаяОбласть = ТабличныйДокумент.Области[ИмяПоказателя + "_" + Формат(НСтр, "ЧГ=")];
			ДопустимыйЗнакПоказателя = ФорматируемаяОбласть.ТипЗначения.КвалификаторыЧисла.ДопустимыйЗнак;
			Если ДопустимыйЗнакПоказателя = ДопустимыйЗнак.Неотрицательный Тогда
				ЧислоЕЗнак = Новый ОписаниеТипов("Число",
					Новый КвалификаторыЧисла(ЧислоЕЗнак.КвалификаторыЧисла.Разрядность,
					ЧислоЕЗнак.КвалификаторыЧисла.РазрядностьДробнойЧасти, ДопустимыйЗнакПоказателя));
			КонецЕсли;
			ФорматируемаяОбласть.ТипЗначения = ЧислоЕЗнак;
			ФорматируемаяОбласть.Формат = "ЧЦ = "
				+ ЧислоЕЗнак.КвалификаторыЧисла.Разрядность + СтруктураРеквизитовФормы.мСтрокаФормата;
			НСтр = НСтр + 1;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КонтрольныеСоотношения

Функция ПроверитьКонтрольныеСоотношенияДлительнаяОперация(СтруктураПараметров) Экспорт
	
	Если НЕ СтрНайти(СтруктураПараметров.мВыбраннаяФорма, "2024Кв4") = 0 Тогда
		
		Возврат ПроверитьКонтрольныеСоотношения2024(СтруктураПараметров);
	
	ИначеЕсли НЕ СтрНайти(СтруктураПараметров.мВыбраннаяФорма, "2022Кв4") = 0 Тогда
		
		Возврат ПроверитьКонтрольныеСоотношения2023(СтруктураПараметров);
	
	ИначеЕсли НЕ СтрНайти(СтруктураПараметров.мВыбраннаяФорма, "2022Кв1") = 0 Тогда
		
		Возврат ПроверитьКонтрольныеСоотношения2022(СтруктураПараметров);
	
	Иначе
		
		Возврат Неопределено;
			
	КонецЕсли; 
	
КонецФункции

#Область КонтрольныеСоотношения2022

#Область КС_Управление

Функция ПроверитьКонтрольныеСоотношения2022(СтруктураПараметров)
	
	Документирование				= Ложь;
	СписокРасшифровкиПоказателей	= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	СписокРасшифровкиформулы		= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	СчетчикФормулДляРасшифровок		= 0;
	ПараметрыКС						= СтруктураПараметров;
	
	ДанныеКС = Новый Структура;
	ДанныеКС.Вставить("КолОшибок"				, 0);
	ДанныеКС.Вставить("КолНеОшибок"				, 0);
	ДанныеКС.Вставить("Результат"				, Новый Структура);
	ДанныеКС.Вставить("ДопИнфо"					, Истина);;
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", ПараметрыКС.СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("Отчет"					, ДанныеКС.СтруктураРеквизитовФормы.мСохраненныйДок);
	ДанныеКС.Вставить("ГодОтчета"				, Год(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("МесОтчета"				, Месяц(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("ДатаОтчета"				, ДанныеКС.Отчет.ДатаОкончания);
	
	ДанныеКС.Вставить("Турборежим"				, Ложь);
	
	СформироватьСтруктуруДанныхКС();
	СформироватьСлужебныеДанные();
	
#Область Проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01();
	ПроверкаКС_1_02();
	ПроверкаКС_1_03();
	ПроверкаКС_1_04();
	ПроверкаКС_1_05();
	
	// Проверки Раздела 2
	ПроверкаКС_1_06();
	ПроверкаКС_1_07();
	ПроверкаКС_1_08();
	ПроверкаКС_1_09();
	ПроверкаКС_1_10();
	ПроверкаКС_1_11();
	ПроверкаКС_1_12();
	ПроверкаКС_1_13();
	ПроверкаКС_1_14();
	ПроверкаКС_1_15();
	ПроверкаКС_1_16();
	ПроверкаКС_1_17();
	ПроверкаКС_1_18();
	ПроверкаКС_1_19();
	ПроверкаКС_1_20();
	ПроверкаКС_1_21();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_22();
	ПроверкаКС_1_23();
	
	// Проверки Раздела 3
	ПроверкаКС_1_24();
	ПроверкаКС_1_25();
	ПроверкаКС_1_26();
	ПроверкаКС_1_27();
	ПроверкаКС_1_28();
	ПроверкаКС_1_29();
	ПроверкаКС_1_30();
	ПроверкаКС_1_31();
	ПроверкаКС_1_32();
	ПроверкаКС_1_33();
	ПроверкаКС_1_34();
	ПроверкаКС_1_35();
	ПроверкаКС_1_36();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_доп();
	ПроверкаКС_2_02_доп();
	ПроверкаКС_2_03_доп();
	ПроверкаКС_2_04_доп();
	ПроверкаКС_2_05_доп();
	ПроверкаКС_2_06_доп();
	ПроверкаКС_2_07_доп();
	ПроверкаКС_2_08_доп();
	ПроверкаКС_2_09_доп();
	ПроверкаКС_2_10_доп();
	ПроверкаКС_2_11_доп();
	ПроверкаКС_2_12_доп();
	ПроверкаКС_2_13_доп();
	ПроверкаКС_2_14_доп();
	ПроверкаКС_2_15_доп();
	ПроверкаКС_2_16_доп();
	ПроверкаКС_2_17_доп();
	ПроверкаКС_2_18_доп();
	ПроверкаКС_2_19_доп();
	
#КонецОбласти

	ПоместитьВоВременноеХранилище(СписокРасшифровкиформулы		, СтруктураПараметров.АдресФормул);
	ПоместитьВоВременноеХранилище(СписокРасшифровкиПоказателей	, СтруктураПараметров.АдресПоказателей);
	
	Возврат ОбработатьРезультат2022(СтруктураПараметров);
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

Функция ВыполнитьДокументированиеОбъект2022() Экспорт
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Декларация по налогу на имущество организаций");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2022Кв1");
	
	ТаблицаОписаний		= СформироватьТаблицуОписаний2022();
	
#Область Проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01();
	ПроверкаКС_1_02();
	ПроверкаКС_1_03();
	ПроверкаКС_1_04();
	ПроверкаКС_1_05();
	
	// Проверки Раздела 2
	ПроверкаКС_1_06();
	ПроверкаКС_1_07();
	ПроверкаКС_1_08();
	ПроверкаКС_1_09();
	ПроверкаКС_1_10();
	ПроверкаКС_1_11();
	ПроверкаКС_1_12();
	ПроверкаКС_1_13();
	ПроверкаКС_1_14();
	ПроверкаКС_1_15();
	ПроверкаКС_1_16();
	ПроверкаКС_1_17();
	ПроверкаКС_1_18();
	ПроверкаКС_1_19();
	ПроверкаКС_1_20();
	ПроверкаКС_1_21();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_22();
	ПроверкаКС_1_23();
	
	// Проверки Раздела 3
	ПроверкаКС_1_24();
	ПроверкаКС_1_25();
	ПроверкаКС_1_26();
	ПроверкаКС_1_27();
	ПроверкаКС_1_28();
	ПроверкаКС_1_29();
	ПроверкаКС_1_30();
	ПроверкаКС_1_31();
	ПроверкаКС_1_32();
	ПроверкаКС_1_33();
	ПроверкаКС_1_34();
	ПроверкаКС_1_35();
	ПроверкаКС_1_36();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_доп();
	ПроверкаКС_2_02_доп();
	ПроверкаКС_2_03_доп();
	ПроверкаКС_2_04_доп();
	ПроверкаКС_2_05_доп();
	ПроверкаКС_2_06_доп();
	ПроверкаКС_2_07_доп();
	ПроверкаКС_2_08_доп();
	ПроверкаКС_2_09_доп();
	ПроверкаКС_2_10_доп();
	ПроверкаКС_2_11_доп();
	ПроверкаКС_2_12_доп();
	ПроверкаКС_2_13_доп();
	ПроверкаКС_2_14_доп();
	ПроверкаКС_2_15_доп();
	ПроверкаКС_2_16_доп();
	ПроверкаКС_2_17_доп();
	ПроверкаКС_2_18_доп();
	ПроверкаКС_2_19_доп();
	
#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция СформироватьТаблицуОписаний2022()
	
	ТипСтрока20		= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
	ТипСтрока100	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	ТипСтрока900	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(900));
	ТипБулево		= Новый ОписаниеТипов("Булево");
	
	ТаблицаОписаний = Новый ТаблицаЗначений;
	ТаблицаОписаний.Колонки.Добавить("НомерКС"			, ТипСтрока20);
	ТаблицаОписаний.Колонки.Добавить("Раздел"			, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеКС"		, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Нарушение"		, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеОшибки"	, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Условие"			, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Комментарий"		, ТипСтрока900);
	
	Возврат ТаблицаОписаний;
	
КонецФункции // СформироватьТаблицуОписаний;()

#КонецОбласти

#Область КС_Данные

Процедура СформироватьСтруктуруДанныхКС()
	
	К01		= Новый КвалификаторыСтроки(1);
	К20		= Новый КвалификаторыСтроки(20);
	
	Т01 = Новый ТаблицаЗначений;
	Т01.Колонки.Добавить("ОКТМО"	, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("КБК"		, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("СЗПК"		, Новый ОписаниеТипов("Строка",,К01));
	Т01.Колонки.Добавить("Р01С021"	, Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("Страница"	, Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
	
	Т02 = Новый ТаблицаЗначений;
	Т02.Колонки.Добавить("ОКТМО"	, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("КБК"		, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("СЗПК"		, Новый ОписаниеТипов("Строка",,К01));
	Т02.Колонки.Добавить("Р02С140"	, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("Р02С260"	, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("Страница"	, Новый ОписаниеТипов("Число"));
	
	Т21 = Новый ТаблицаЗначений;
	Т21.Колонки.Добавить("Р21С050"	, Новый ОписаниеТипов("Число"));
	Т21.Колонки.Добавить("Страница"	, Новый ОписаниеТипов("Число"));
	
	Т03 = Новый ТаблицаЗначений;
	Т03.Колонки.Добавить("ОКТМО"	, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("КБК"		, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("СЗПК"		, Новый ОписаниеТипов("Строка",,К01));
	Т03.Колонки.Добавить("Р03С130"	, Новый ОписаниеТипов("Число"));
	Т03.Колонки.Добавить("Страница"	, Новый ОписаниеТипов("Число"));
	
	СохраненныеДанныеОтчета = СохраненныеДанныеОтчета(ПараметрыКС.ИмяФормы, ПараметрыКС.СтруктураРеквизитовФормы);
	Раздел1 = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0];
	ДанныеКС.Вставить("Р01", ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Раздел1.Данные));
	ДанныеКС.Вставить("Т01", Т01);
	Раздел1 = Раздел1.ДанныеМногострочныхЧастей.П0000100.Строки;
	ДанныеКС.Вставить("КолСтрокР01", Раздел1.Количество());
	ДанныеКС.Р01.Вставить("Страница", 1);
		
	Для каждого СтрокаМнЧ Из Раздел1 Цикл
		
		НомерСтроки = Раздел1.Индекс(СтрокаМнЧ) + 1;
		Для каждого Элемент Из СтрокаМнЧ.Данные Цикл
			ДанныеКС.Р01.Вставить(Элемент.Ключ + "_" + НомерСтроки, Элемент.Значение);
		КонецЦикла;
			
		НоваяСтрока = ДанныеКС.Т01.Добавить();
		НоваяСтрока.СЗПК		= СокрЛП(СтрокаМнЧ.Данные.П000010000703);
		НоваяСтрока.ОКТМО		= СокрЛП(СтрокаМнЧ.Данные.П000010001003);
		НоваяСтрока.КБК			= СокрЛП(СтрокаМнЧ.Данные.П000010002003);
		НоваяСтрока.Р01С021		= Окр(СтрокаМнЧ.Данные.П000010002103);
		НоваяСтрока.Страница	= 1;
		НоваяСтрока.НомерСтроки= НомерСтроки;
		
	КонецЦикла;
	
	ДанныеКС.Вставить("Р02", Новый Массив);
	ДанныеКС.Вставить("Т02", Т02);
	
	Раздел2 = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел2.Строки;
	
	Для каждого Элемент Из Раздел2 Цикл
		НомерСтраницы = Раздел2.Индекс(Элемент) + 1;
		СтраницаР02 = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Элемент.Данные);
		СтраницаР02.Вставить("Страница", НомерСтраницы);
		ДанныеКС.Р02.Добавить(СтраницаР02);
			
		НоваяСтрока = ДанныеКС.Т02.Добавить();
		НоваяСтрока.СЗПК		= СокрЛП(Элемент.Данные.П000020000201);
		НоваяСтрока.ОКТМО		= СокрЛП(Элемент.Данные.П000020001001);
		НоваяСтрока.КБК			= СокрЛП(Элемент.Данные.П000020001100);
		НоваяСтрока.Р02С140		= Окр(Элемент.Данные.П000020014003);
		НоваяСтрока.Р02С260		= Окр(Элемент.Данные.П000020026003);
		НоваяСтрока.Страница	= НомерСтраницы;
		
	КонецЦикла;
	
	ДанныеКС.Вставить("Р21", Новый Массив);
	ДанныеКС.Вставить("Т21", Т21);
	
	Раздел21 = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел21.Строки;
	ДанныеКС.Вставить("Турборежим", Раздел21.Количество() > 500); 
	
	Для каждого Элемент Из Раздел21 Цикл
		НомерСтраницы = Раздел21.Индекс(Элемент) + 1;
		СтраницаР21 = Новый Структура;
		СтраницаР21.Вставить("П000210001100", Элемент.Данные.П000210001100);
		СтраницаР21.Вставить("П000210001001", Элемент.Данные.П000210001001);
		СтраницаР21.Вставить("П000210003001", Элемент.Данные.П000210003001);
		СтраницаР21.Вставить("П000210003002", Элемент.Данные.П000210003002);
		СтраницаР21.Вставить("П000210003004", Элемент.Данные.П000210003004);
		СтраницаР21.Вставить("Страница", НомерСтраницы);
		ДанныеКС.Р21.Добавить(СтраницаР21);
			
		НоваяСтрока = ДанныеКС.Т21.Добавить();
		НоваяСтрока.Р21С050		= Окр(Элемент.Данные.П000210005003);
		НоваяСтрока.Страница	= НомерСтраницы;
		
	КонецЦикла;
	
	ДанныеКС.Вставить("Р03", Новый Массив);
	ДанныеКС.Вставить("Т03", Т03);
	
	Раздел3 = СохраненныеДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	
	Для каждого Элемент Из Раздел3 Цикл
		НомерСтраницы = Раздел3.Индекс(Элемент) + 1;
		СтраницаР03 = ОбщегоНазначенияКлиентСервер.СкопироватьРекурсивно(Элемент.Данные);
		СтраницаР03.Вставить("Страница", НомерСтраницы);
		ДанныеКС.Р03.Добавить(СтраницаР03);
			
		НоваяСтрока = ДанныеКС.Т03.Добавить();
		НоваяСтрока.СЗПК		= СокрЛП(Элемент.Данные.П000030000201);
		НоваяСтрока.ОКТМО		= СокрЛП(Элемент.Данные.П000030001001);
		НоваяСтрока.КБК			= СокрЛП(Элемент.Данные.П000030001100);
		НоваяСтрока.Р03С130		= Окр(Элемент.Данные.П000030013003);
		НоваяСтрока.Страница	= НомерСтраницы;
		
	КонецЦикла;
	
	ВременныеТаблицы	= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса		= Новый СхемаЗапроса;
	
	ИменаТаблиц			= Новый Структура;
	ИменаТаблиц.Вставить("Т01"	, "Т01");
	ИменаТаблиц.Вставить("Т02"	, "Т02");
	ИменаТаблиц.Вставить("Т21"	, "Т21");
	ИменаТаблиц.Вставить("Т03"	, "Т03");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
		
	КонецЦикла;
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.УстановитьПараметр("Т01"		, ДанныеКС.Т01);
	Запрос.УстановитьПараметр("Т02"		, ДанныеКС.Т02);
	Запрос.УстановитьПараметр("Т21"		, ДанныеКС.Т21);
	Запрос.УстановитьПараметр("Т03"		, ДанныеКС.Т03);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВТ"	, ВременныеТаблицы);
	
КонецПроцедуры

Процедура СформироватьСлужебныеДанные()
	
	ПредставлениеРазделов = Новый Структура();
	ПредставлениеРазделов.Вставить("Р01", "Раздела 1");
	ПредставлениеРазделов.Вставить("Р02", "Раздела 2");
	ПредставлениеРазделов.Вставить("Р21", "Раздела 2.1");
	ПредставлениеРазделов.Вставить("Р03", "Раздела 3");
	
	ДанныеКС.Вставить("ПредставлениеРазделов", ПредставлениеРазделов);
	
	РазделыПоказателей = Новый Структура();
	РазделыПоказателей.Вставить("Р01", "Раздел1");
	РазделыПоказателей.Вставить("Р02", "Раздел2");
	РазделыПоказателей.Вставить("Р21", "Раздел21");
	РазделыПоказателей.Вставить("Р03", "Раздел3");
	
	ДанныеКС.Вставить("РазделыПоказателей", РазделыПоказателей);
	
	ЦелочисленныеРазделы = Новый Массив;
	ЦелочисленныеРазделы.Добавить("Р01");
	ЦелочисленныеРазделы.Добавить("Р02");
	ЦелочисленныеРазделы.Добавить("Р03");
	
	ДанныеКС.Вставить("ЦелочисленныеРазделы", ЦелочисленныеРазделы);
	
	ПоказателиТЛ = Новый Структура;
	ДанныеКС.Вставить("ПоказателиТЛ", ПоказателиТЛ);
	
КонецПроцедуры

#КонецОбласти

#Область КС_Сервис

Процедура СформироватьПоказатели(Показатели, ИменаПоказателей)
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		МассивПредставления		= Новый Массив;
		ПодстрокаРаздела		= "";
		ПодстрокаСтраницы		= "";
		
		ИндексРаздела			= Сред(Элемент.Ключ, 1, 3);
		ИндексДополнения		= Сред(Элемент.Ключ, 4, 1);
		ПодстрокаДополнения		= Сред(Элемент.Ключ, 8, 1);
		ПодстрокаСтроки			= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы			= Сред(Элемент.Значение, 13,1);
		
		ДанныеКС.ПредставлениеРазделов.Свойство(ИндексРаздела	, ПодстрокаРаздела);
		ДанныеКС.РазделыПоказателей.Свойство(ИндексРаздела		, ПодстрокаСтраницы);
		
		Если ИндексДополнения	= "С" Тогда
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		ИначеЕсли ИндексДополнения = "Г" Тогда
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
		ИначеЕсли ИндексДополнения = "Т" Тогда
			МассивПредставления.Добавить(ДанныеКС.ПоказателиТЛ[Сред(Элемент.Ключ, 4, 4)]);
		Иначе
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		КонецЕсли;
		МассивПредставления.Добавить(ПодстрокаРаздела);
		
		Если ПодстрокаДополнения = "П" Тогда
			МассивПредставления.Добавить("предыдущего отчетного периода");
		КонецЕсли;
		
		Представление			= СтрСоединить(МассивПредставления, " ");
		Многострочный			= СтрДлина(Элемент.Значение) = 14;
		Округление				= НЕ ДанныеКС.ЦелочисленныеРазделы.Найти(ИндексРаздела) = Неопределено;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("Раздел"			, ИндексРаздела);
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, ПодстрокаСтраницы);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		Показатели[Элемент.Ключ].Вставить("ЗначениеСтр"		, "");
		Показатели[Элемент.Ключ].Вставить("Итог"			, 0);
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("Округление"		, Округление);
		Показатели[Элемент.Ключ].Вставить("Синоним"			, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
		Показатели[Элемент.Ключ].Вставить("Заполнять"		, Истина);
		Показатели[Элемент.Ключ].Вставить("Расшифровывать"	, Истина);
		Показатели[Элемент.Ключ].Вставить("Инверсия"		, Ложь);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РасшифроватьПоказатель(Показатель)
		
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	
	НоваяСтрока.ИмяПоказателя			= Показатель.ИмяПоказателя;
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
	Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	НоваяСтрока.ИмяСтраницы				= Показатель.ИмяСтраницы;
	
	НоваяСтрока.СсылкаНаДокументРО		= ?(ЗначениеЗаполнено(Показатель.Отчет), 
		Показатель.Отчет, ПараметрыКС.СтруктураРеквизитовФормы.мСохраненныйДок);
	НоваяСтрока.Страница				= Показатель.Страница;
	
	Если ТипЗнч(Показатель.Значение) = Тип("Число") Тогда
		НоваяСтрока.ЗначениеПоказателя		= Показатель.Значение;
	Иначе
		НоваяСтрока.ЗначениеПоказателя		= Показатель.ЗначениеСтр;
	КонецЕсли;
	
	Показатель.Дополнение = "";
	
КонецПроцедуры

Процедура ЗаполнитьПоказатель(Показатель, Источник, 
								НомерСтроки = Неопределено,
								НомерСтроки2 = Неопределено)
	
	Перем ЗначениеВИсточнике;
	
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) И ЗначениеЗаполнено(НомерСтроки2) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки) + "_" + 
				XMLСтрока(НомерСтроки2);
		ИначеЕсли ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки);
		КонецЕсли;
		
		Если Источник.Свойство(Показатель.ИмяПоказателя, ЗначениеВИсточнике) Тогда
			Показатель.Страница = ?(Источник.Свойство("Страница"), Источник.Страница, 1);
			
			ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике);
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Если Показатель.Многострочный Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14);
		КонецЕсли;
	
		ЗначениеВИсточнике = Источник[Показатель.ИмяПоказателя];
		
		Показатель.Отчет	= ДанныеКС.Отчет;
		Показатель.Страница = Источник.НомСтраницы;
			
		ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике);
			
		Если Показатель.Многострочный Тогда
			Показатель.ИмяПоказателя = Показатель.ИмяПоказателя + XMLСтрока(Источник.НомСтроки);
		КонецЕсли;
	
	КонецЕсли;
	
	
КонецПроцедуры

Процедура ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике)

	Если ТипЗнч(ЗначениеВИсточнике) = Тип("Число") И Показатель.Округление Тогда
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = Окр(ЗначениеВИсточнике);
		Показатель.Итог = Показатель.Итог + Показатель.Значение;
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Число") Тогда
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.Итог = Показатель.Итог + ЗначениеВИсточнике;
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Строка") Тогда
		Показатель.Значение = СокрЛП(ЗначениеВИсточнике);
		Показатель.ЗначениеСтр = ?(ЗначениеЗаполнено(ЗначениеВИсточнике), Показатель.Значение, "(...)");
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Дата") Тогда
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.ЗначениеСтр = Формат(ЗначениеВИсточнике, "ДФ=dd.MM.yy; ДП=(...)");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатель(Показатель, Источник, 
											НомерСтроки = Неопределено,
											НомерСтроки2 = Неопределено)
											
	Если Показатель.Заполнять Тогда
		ЗаполнитьПоказатель(Показатель, Источник, НомерСтроки, НомерСтроки2);
			
		Если Показатель.Расшифровывать Тогда
			РасшифроватьПоказатель(Показатель);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатели(Показатели, Источник, 
											НомерСтроки = Неопределено,
											НомерСтроки2 = Неопределено)
	
	Для каждого Элемент Из Показатели Цикл
			
		ЗаполнитьИРасшифроватьПоказатель(Элемент.Значение, Источник, НомерСтроки, НомерСтроки2);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьФормулу(Знач Настройки);

	СчетчикФормулДляРасшифровок				= СчетчикФормулДляРасшифровок + 1;
	НовСтр									= СписокРасшифровкиФормулы.Добавить();
	НовСтр.ТекстовоеПредставлениеФормулы	= Настройки.ОписаниеКС;
	НовСтр.Номер							= СчетчикФормулДляРасшифровок;
	
КонецПроцедуры

Процедура ДополнитьСтруктуруОшибок(Настройки)
	
	Если Настройки.ЭтоОшибка Тогда
		ДанныеКС.КолОшибок = ДанныеКС.КолОшибок + 1;
	Иначе
		ДанныеКС.КолНеОшибок = ДанныеКС.КолНеОшибок + 1;
	КонецЕсли;
	
	Счетчик		= XMLСтрока(ДанныеКС.КолОшибок + ДанныеКС.КолНеОшибок);
	ОписаниеКС	= СформироватьОписаниеКС(Настройки, "ДопИнфо");
	
	ДанныеКС.Результат.Вставить("ТекстовоеПредставлениеФормулы" + Счетчик, ОписаниеКС);
	ДанныеКС.Результат.Вставить("Расшифровка"	+ Счетчик, Настройки.Расшифровка);
	ДанныеКС.Результат.Вставить("ЭтоОшибка"		+ Счетчик, Настройки.ЭтоОшибка);
	ДанныеКС.Результат.Вставить("Нарушение"		+ Счетчик, Настройки.Нарушение);
	ДанныеКС.Результат.Вставить("Описание"		+ Счетчик, Настройки.ОписаниеОшибки);
	ДанныеКС.Результат.Вставить("Комментарий"	+ Счетчик, Настройки.Комментарий);
	
КонецПроцедуры

Функция ПодставитьПараметрыВСтроку(Шаблон, Параметр1, Параметр2 = Неопределено, Параметр3 = Неопределено, 
	Параметр4 = Неопределено)
	
	Если Параметр2 = Неопределено Тогда
		Возврат СтрШаблон(Шаблон, Параметр1);
	
	ИначеЕсли Параметр3 = Неопределено Тогда
		Возврат СтрШаблон(Шаблон, Параметр1, Параметр2);
	
	ИначеЕсли Параметр4 = Неопределено Тогда
		Возврат СтрШаблон(Шаблон, Параметр1, Параметр2, Параметр3);
		
	Иначе
		Возврат СтрШаблон(Шаблон, Параметр1, Параметр2, Параметр3, Параметр4);
	
	КонецЕсли;

КонецФункции

Функция СформироватьОписаниеКС(Знач Настройки, ЗначениеСвойства)
	
	Если ДанныеКС[ЗначениеСвойства] Тогда
		Если ЗначениеЗаполнено(Настройки.ДопСведения) Тогда
				
			Возврат Настройки.ОписаниеКС + " (" + Настройки.ДопСведения + ")"; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Настройки.ОписаниеКС;
	
КонецФункции

Функция ОбработатьНастройки(Знач ИзменяемыеСвойства, Знач Настройки = Неопределено)
	
	Если Настройки = Неопределено Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("Нарушение"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеКС"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибки"			, (НСтр("ru=''")));
		Настройки.Вставить("Расшифровка"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонРасшифровки"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведения"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонДопСведений"		, (НСтр("ru=''")));
		Настройки.Вставить("ЭтоОшибка"				, Ложь);
		Настройки.Вставить("Комментарий"			, (НСтр("ru=''")));
		Настройки.Вставить("НомерКС"				, (НСтр("ru=''")));
		Настройки.Вставить("Раздел"					, (НСтр("ru=''")));
		Настройки.Вставить("Условие"				, (НСтр("ru=''")));
	
	КонецЕсли;
	
	Если Не ИзменяемыеСвойства = Неопределено Тогда
		Для каждого ЭлементКоллекции Из ИзменяемыеСвойства Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ОписаниеКС = Настройки.Раздел + ". Проверка КС " + Настройки.НомерКС + Символы.ПС + Настройки.ОписаниеКС;
	
	Если Документирование Тогда
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, Настройки);
		Возврат Настройки;
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

Функция ОбработатьРезультат2022(СтруктураПараметров)
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("СтруктураОшибок", ОбщегоНазначения.СкопироватьРекурсивно(ДанныеКС.Результат));
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок"	, ДанныеКС.КолОшибок);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок"	, ДанныеКС.КолНеОшибок);
	СтруктураРезультата.Вставить("СписокРасшифровкиформулы"		, СтруктураПараметров.АдресФормул);
	СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей" , СтруктураПараметров.АдресПоказателей);
	
	Возврат СтруктураРезультата;
	
КонецФункции

Функция СуммаПоказателей(Показатели, КодПоказателя = "")
	
	Результат = 0;
	
	Для каждого Показатель Из Показатели Цикл
		Если НЕ ЗначениеЗаполнено(КодПоказателя) Тогда
			Результат = Результат + Показатель.Значение.Значение;
		ИначеЕсли СтрНайти(Показатель.Ключ, КодПоказателя) = 0 Тогда
			Продолжить;
		Иначе
			Результат = Результат + Показатель.Значение.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НольИлиЕдиница(ИсходноеЧисло)
	
	Если ИсходноеЧисло = 0 ИЛИ ИсходноеЧисло = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

#КонецОбласти

#Область КС_Проверки

#Область КС_Проверки_Раздела_1

Процедура ПроверкаКС_1_01()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.1';
													|en = '1.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО ';
			|en = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение ОКТМО';
														|en = 'Ошибочное значение ОКТМО'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 1';
													|en = 'Страница %1 Раздела 1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.2';
													|en = '1.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение КБК в стр.020 Раздела 1 ';
														|en = 'Значение КБК в стр.020 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение КБК';
														|en = 'Ошибочное значение КБК'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель"		, "П000010002003_");
	ПроверкаКС_1_02_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_02_код(Настройки)
	
	Перем Показатели;
	Перем Список;
	
	Настройки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Настройки.Вставить("ШаблонРасшифровки"	
		, НСтр("ru = 'Указанное значение %1 %2соответствует списку допустимых значений';
				|en = 'Указанное значение %1 %2соответствует списку допустимых значений'"));
		
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"		, Настройки.Показатель);
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Р01, Счетчик);
		
		Если ПараметрыКС.СписочныеЗначения.Свойство(Лев(Показатели.Р01С001.ИмяПоказателя, 13), Список) Тогда
			Настройки.ЭтоОшибка = Список.Найти(Показатели.Р01С001.Значение) = Неопределено;
		Иначе
			Настройки.ЭтоОшибка = Ложь;
		КонецЕсли; 
		
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р01С001.ЗначениеСтр, 
			?(Настройки.ЭтоОшибка, "не ", ""));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_03()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.3';
													|en = '1.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.1 ст.382 НК РФ';
													|en = 'п.1 ст.382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение суммы исчисленного налога в стр.021 Раздела 1 = сумме стр.260 всех листов Раздела 2 ';
			|en = 'Значение суммы исчисленного налога в стр.021 Раздела 1 = сумме стр.260 всех листов Раздела 2 '") +
		НСтр("ru = 'и стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, СЗПК';
			|en = 'и стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, СЗПК'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма исчисленного налога';
														|en = 'Ошибочная сумма исчисленного налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Настройки = ОбработатьНастройки(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С007"		, "П000010000703_");
	ИменаПоказателей.Вставить("Р01С010"		, "П000010001003_");
	ИменаПоказателей.Вставить("Р01С020"		, "П000010002003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р01.ОКТМО + ВТ_Р01.КБК + ВТ_Р01.СЗПК КАК Ключ,
	|	ВТ_Р01.СЗПК		КАК П000010000703_,
	|	ВТ_Р01.ОКТМО	КАК П000010001003_,
	|	ВТ_Р01.КБК		КАК П000010002003_,
	|	ВТ_Р01.Р01С021	КАК П000010002103_,
	|	ВТ_Р01.Страница	КАК НомСтраницы,
	|	ВТ_Р01.НомерСтроки КАК НомСтроки
	|ИЗ
	|	ВТ01 КАК ВТ_Р01
	|УПОРЯДОЧИТЬ ПО
	|	НомСтроки
	|ИТОГИ
	|	МИНИМУМ(П000010000703_),
	|	МИНИМУМ(П000010001003_),
	|	МИНИМУМ(П000010002003_),
	|	МИНИМУМ(НомСтраницы),
	|	МИНИМУМ(НомСтроки),
	|	СУММА(П000010002103_)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р02.ОКТМО + ВТ_Р02.КБК + ВТ_Р02.СЗПК КАК Ключ,
	|	ВТ_Р02.Р02С260	КАК П000020026003,
	|	ВТ_Р02.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомСтраницы),
	|	СУММА(П000020026003)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.ОКТМО + ВТ_Р03.КБК + ВТ_Р03.СЗПК КАК Ключ,
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомСтраницы),
	|	СУММА(П000030013003)
	|ПО
	|	Ключ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", ВыборкаР1.НомСтроки);
		ЗарегистрироватьФормулу(Настройки);
		СуммаР2 = 0;
		СуммаР3 = 0;
		
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С007, ВыборкаР1, ВыборкаР1.НомСтроки);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С010, ВыборкаР1, ВыборкаР1.НомСтроки);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С020, ВыборкаР1, ВыборкаР1.НомСтроки);
			
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С021, Выборка, Выборка.НомСтроки);
		КонецЦикла;
		
		Если ВыборкаР2.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР2 = ВыборкаР2.П000020026003;
			Выборка = ВыборкаР2.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С260, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		Если ВыборкаР3.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР3 = ВыборкаР3.П000030013003;
			Выборка = ВыборкаР3.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р03С130, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		РасчетнаяСумма = СуммаР2 + СуммаР3;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.П000010002103_ = РасчетнаяСумма;
		Настройки.Расшифровка	= ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, ВыборкаР1.П000010002103_, 
			СуммаР2, СуммаР3, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		ВыборкаР2.Сбросить();
		ВыборкаР3.Сбросить();
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_04()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.4';
													|en = '1.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + ';
			|en = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) Раздела 2, если результат вычисления >= 0, иначе 0';
			|en = 'стр.025 + стр.027) Раздела 2, если результат вычисления >= 0, иначе 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога, подлежащая уплате';
														|en = 'Ошибочная сумма налога, подлежащая уплате'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Настройки = ОбработатьНастройки(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С030"		, "П000010003003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р01С023.Инверсия = Истина;
	Показатели.Р01С025.Инверсия = Истина;
	Показатели.Р01С027.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Р01, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей(Показатели) - Показатели.Р01С030.Значение, 0);
		Настройки.ЭтоОшибка = НЕ Показатели.Р01С030.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р01С030.Значение, 
			РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_05()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.5';
													|en = '1.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + ';
			|en = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) - стр.021 Раздела 2, если результат вычисления > 0, иначе 0';
			|en = 'стр.025 + стр.027) - стр.021 Раздела 2, если результат вычисления > 0, иначе 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога, исчисленная к уменьшению';
														|en = 'Ошибочная сумма налога, исчисленная к уменьшению'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Настройки = ОбработатьНастройки(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П000010004003_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р01С021.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Р01, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей(Показатели) - Показатели.Р01С040.Значение, 0);
		Настройки.ЭтоОшибка = НЕ Показатели.Р01С040.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р01С040.Значение, 
			РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_2

Процедура ПроверкаКС_1_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.6';
													|en = '1.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Среднегодовая стоимость недвижимого имущества за налоговый период (стр.150 Раздела 2) = (гр.3 стр.020 ';
			|en = 'Среднегодовая стоимость недвижимого имущества за налоговый период (стр.150 Раздела 2) = (гр.3 стр.020 '") +
		НСтр("ru = '+ гр.3 стр.030 + гр.3 стр.040 + гр.3 стр.050 + гр.3 стр.060 + гр.3 стр.070 + гр.3 стр.080 + гр.3 стр.0';
			|en = '+ гр.3 стр.030 + гр.3 стр.040 + гр.3 стр.050 + гр.3 стр.060 + гр.3 стр.070 + гр.3 стр.080 + гр.3 стр.0'") +
		НСтр("ru = '90 + гр.3 стр.100 + гр.3 стр.110 + гр.3 стр.120 + гр.3 стр.130 + гр.3 стр.140 Раздела 2) / 13';
			|en = '90 + гр.3 стр.100 + гр.3 стр.110 + гр.3 стр.120 + гр.3 стр.130 + гр.3 стр.140 Раздела 2) / 13'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / 13 Итог [%3]';
													|en = '%1 = %2 / 13 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость имущества за налоговый период'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель", "П000020015003");
	Настройки.Вставить("Графа", "3");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_07_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.7';
													|en = '1.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период (стр.170 Разде';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период (стр.170 Разде'") +
		НСтр("ru = 'ла 2) = (гр.4 стр.020 + гр.4 стр.030 + гр.4 стр.040 + гр.4 стр.050 + гр.4 стр.060 + гр.4 стр.070 + гр.';
			|en = 'ла 2) = (гр.4 стр.020 + гр.4 стр.030 + гр.4 стр.040 + гр.4 стр.050 + гр.4 стр.060 + гр.4 стр.070 + гр.'") +
		НСтр("ru = '4 стр.080 + гр.4 стр.090 + гр.4 стр.100 + гр.4 стр.110 + гр.4 стр.120 + гр.4 стр.130 + гр.4 стр.140 Ра';
			|en = '4 стр.080 + гр.4 стр.090 + гр.4 стр.100 + гр.4 стр.110 + гр.4 стр.120 + гр.4 стр.130 + гр.4 стр.140 Ра'") +
		НСтр("ru = 'здела 2) / 13';
			|en = 'здела 2) / 13'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / 13 Итог [%3]';
													|en = '%1 = %2 / 13 Итог [%3]'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель", "П000020017003");
	Настройки.Вставить("Графа", "4");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_07_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_07_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, Настройки.Показатель);
	ИменаПоказателей.Вставить("Р02П020"		, "П00002000200" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П030"		, "П00002000300" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П040"		, "П00002000400" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П050"		, "П00002000500" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П060"		, "П00002000600" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П070"		, "П00002000700" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П080"		, "П00002000800" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П090"		, "П00002000900" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П100"		, "П00002001000" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П110"		, "П00002001100" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П120"		, "П00002001200" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П130"		, "П00002001300" + Настройки.Графа);
	ИменаПоказателей.Вставить("Р02П140"		, "П00002001400" + Настройки.Графа);
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		СуммаПоказателей = СуммаПоказателей(Показатели) - Показатели.Р02С001.Значение;
		РасчетнаяСумма = Окр(СуммаПоказателей / 13);
		Настройки.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р02С001.Значение, 
			СуммаПоказателей, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.8а';
													|en = '1.8а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0';
			|en = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0, когда значение %2 не заполнено';
													|en = '%1 = 0, когда значение %2 не заполнено'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("УсловиеРавноНулю"	, Истина);
	
	Если НЕ Документирование Тогда
		ПроверкаКС_1_08_код(Настройки);
	КонецЕсли;
	
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.8б';
													|en = '1.8б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0';
			|en = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 ≠ 0, когда значение %2 заполнено';
													|en = '%1 ≠ 0, когда значение %2 заполнено'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("УсловиеРавноНулю"	, Ложь);
	
	Если НЕ Документирование Тогда
		ПроверкаКС_1_08_код(Настройки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверкаКС_1_08_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С160"		, "П000020016003_КодЛьготы");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Если Настройки.УсловиеРавноНулю Тогда
			Настройки.ЭтоОшибка	= НЕ ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		Иначе
			Настройки.ЭтоОшибка	= ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И НЕ ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		КонецЕсли;
		
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р02С170.Значение, 
			Показатели.Р02С160.ЗначениеСтр);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9';
													|en = '1.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170 Раздела 2) х стр.180 Раздела 2, если код вида ';
			|en = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170 Раздела 2) х стр.180 Раздела 2, если код вида '") +
		НСтр("ru = 'имущества в стр.001 Раздела 2 равен 02';
			|en = 'имущества в стр.001 Раздела 2 равен 02'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная налоговая база';
														|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2 - %3) х %4/%5 Итог [%6]';
													|en = '%1 = (%2 - %3) х %4/%5 Итог [%6]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества2"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_10_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.10';
													|en = '1.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = стр.150 Раздела 2 - стр.170 Раздела 2, если код вида имущества в ';
			|en = 'Налоговая база в стр.190 Раздела 2 = стр.150 Раздела 2 - стр.170 Раздела 2, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 не равен 02';
			|en = 'стр.001 Раздела 2 не равен 02'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная налоговая база';
														|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%6]';
													|en = '%1 = %2 - %3 Итог [%6]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества2"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_10_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_10_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С150"		, "П000020015003");
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С181"		, "П000020018003_Числ");
	ИменаПоказателей.Вставить("Р02С182"		, "П000020018003_Знам");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р02С181.Расшифровывать	= Настройки.КодИмущества2;
	Показатели.Р02С182.Расшифровывать	= Настройки.КодИмущества2;
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Разность = Макс(Показатели.Р02С150.Значение - Показатели.Р02С170.Значение, 0);
		Множитель = ?(Показатели.Р02С182.Значение = 0, 0, Показатели.Р02С181.Значение / Показатели.Р02С182.Значение);
		Множитель = ?(Настройки.КодИмущества2, Множитель, 1);
		РасчетнаяСумма = Окр(Разность * Множитель);
		
		Настройки.ЭтоОшибка = (Настройки.КодИмущества2 И Показатели.Р02С001.Значение = "02" 
			ИЛИ НЕ Настройки.КодИмущества2 И НЕ Показатели.Р02С001.Значение = "02")
			И НЕ Показатели.Р02С190.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р02С190.Значение, Показатели.Р02С150.Значение, Показатели.Р02С170.Значение, 
			Показатели.Р02С181.Значение, Показатели.Р02С182.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.11';
													|en = '1.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = стр.190 Раздела 2 х стр.210 Раздела 2 х стр.215';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = стр.190 Раздела 2 х стр.210 Раздела 2 х стр.215'") +
		НСтр("ru = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 равен 09';
			|en = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 равен 09'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 х %4 / 100 Итог [%5]';
													|en = '%1 = %2 х %3 х %4 / 100 Итог [%5]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества9"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_12_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.12';
													|en = '1.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = стр.190 Раздела 2 х стр.210 Раздела 2 / 100, ес';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = стр.190 Раздела 2 х стр.210 Раздела 2 / 100, ес'") +
		НСтр("ru = 'ли код вида имущества в стр.001 Раздела 2 не равен 09';
			|en = 'ли код вида имущества в стр.001 Раздела 2 не равен 09'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 / 100 Итог [%5]';
													|en = '%1 = %2 х %3 / 100 Итог [%5]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества9"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_12_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_12_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С210"		, "П000020021003");
	ИменаПоказателей.Вставить("Р02С215"		, "П000020021503");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р02С210.Округление = Ложь;
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С220, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С190, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С210, СтраницаР02);
		
		ЗаполнитьПоказатель(Показатели.Р02С215, СтраницаР02);
		Показатели.Р02С215.Значение = ?(Показатели.Р02С215.Значение = "", 1, Число(Показатели.Р02С215.Значение));
		Показатели.Р02С215.Значение = ?(Настройки.КодИмущества9, Показатели.Р02С215.Значение, 1);
		
		Если Настройки.КодИмущества9 Тогда
			РасшифроватьПоказатель(Показатели.Р02С215);
		КонецЕсли;
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С001, СтраницаР02);
		
		РасчетнаяСумма = Окр(Показатели.Р02С190.Значение * Показатели.Р02С210.Значение * Показатели.Р02С215.Значение / 100);
		
		Настройки.ЭтоОшибка = (Настройки.КодИмущества9 И Показатели.Р02С001.Значение = "09"
			ИЛИ НЕ Настройки.КодИмущества9 И НЕ Показатели.Р02С001.Значение = "09")
			И НЕ Показатели.Р02С220.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р02С220.Значение, Показатели.Р02С190.Значение, Показатели.Р02С210.Значение, 
			Показатели.Р02С215.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_13()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.13';
													|en = '1.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 равно';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 равно'") +
		НСтр("ru = ' 2012500';
			|en = ' 2012500'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма льготы';
														|en = 'Ошибочная сумма льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 ≠ 0 когда %2 = %3';
													|en = '%1 ≠ 0 когда %2 = %3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, "П000020023003_КодЛьготы");
	ИменаПоказателей.Вставить("Р02С002"		, "П000020024003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Настройки.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р02С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р02С002.Значение);
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р02С002.Значение, 
			Показатели.Р02С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.14';
													|en = '1.14'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено';
			|en = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Код льготы в стр.160 Раздела 2 = 0';
														|en = 'Код льготы в стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное применение льготы';
														|en = 'Ошибочное применение льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель"			, "П000020016003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.15';
													|en = '1.15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено';
			|en = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма льготы в стр.170 Раздела 2 = 0';
														|en = 'Сумма льготы в стр.170 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное применение льготы';
														|en = 'Ошибочное применение льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель"			, "П000020017003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.16';
													|en = '1.16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено';
			|en = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Код льготы в стр.200 Раздела 2 = 0';
														|en = 'Код льготы в стр.200 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное применение льготы';
														|en = 'Ошибочное применение льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель"			, "П000020020003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.17';
													|en = '1.17'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено';
			|en = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Код льготы в стр.230 Раздела 2 = 0';
														|en = 'Код льготы в стр.230 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное применение льготы';
														|en = 'Ошибочное применение льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель"			, "П000020023003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.18';
													|en = '1.18'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено';
			|en = 'Проверка носит справочный характер, сообщение об ошибке не предусмотрено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма льготы в стр.240 Раздела 2 = 0';
														|en = 'Сумма льготы в стр.240 Раздела 2 = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное применение льготы';
														|en = 'Ошибочное применение льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1';
													|en = 'Страница %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Показатель"			, "П000020024003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_18_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_18_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, Настройки.Показатель);
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Настройки.ЭтоОшибка = Ложь;
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", ?(ТипЗнч(Показатели.Р02С001.Значение) 
			= Тип("Число"), Показатели.Р02С001.Значение, Показатели.Р02С001.ЗначениеСтр));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_19()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.19';
													|en = '1.19'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если'") +
		НСтр("ru = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2';
			|en = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества4"		, Истина);
	Настройки.Вставить("Стр250Больше"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_21_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.20';
													|en = '1.20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220'") +
		НСтр("ru = ' - стр.240 - стр.250 Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела';
			|en = ' - стр.240 - стр.250 Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела'") +
		НСтр("ru = ' 2 < (стр. 220 - стр.240) Раздела 2';
			|en = ' 2 < (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5]';
													|en = '%1 = %2 - %3 - %4 Итог [%5]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества4"		, Истина);
	Настройки.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_21_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.21';
													|en = '1.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.1 ст.375 НК РФ';
													|en = 'п.1 ст.375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220'") +
		НСтр("ru = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04';
			|en = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%5]';
													|en = '%1 = %2 - %3 Итог [%5]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("КодИмущества4"		, Ложь);
	Настройки.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_21_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_21_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С240"		, "П000020024003");
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р02С250.Расшифровывать = Настройки.КодИмущества4;
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Показатели.Р02С250.Значение = ?(Настройки.КодИмущества4, Показатели.Р02С250.Значение, 0);
		РасчетнаяСумма = Макс(Показатели.Р02С220.Значение - Показатели.Р02С240.Значение - Показатели.Р02С250.Значение, 0);
		
		Если Настройки.КодИмущества4 И Настройки.Стр250Больше Тогда
			Настройки.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение >= (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли Настройки.КодИмущества4 И НЕ Настройки.Стр250Больше Тогда
			Настройки.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение < (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли НЕ Настройки.КодИмущества4 Тогда
			Настройки.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" 
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		Иначе
			Настройки.ЭтоОшибка = Ложь;
		КонецЕсли;
		
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р02С260.Значение, Показатели.Р02С220.Значение, Показатели.Р02С240.Значение, 
			Показатели.Р02С250.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_21

Процедура ПроверкаКС_1_22()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.22';
													|en = '1.22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 374 НК РФ';
													|en = 'п. 1 ст. 374 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум';
			|en = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум'") +
		НСтр("ru = 'ноженной на количество листов Раздела 2.1';
			|en = 'ноженной на количество листов Раздела 2.1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма остаточной стоимости основных средств';
														|en = 'Ошибочная сумма остаточной стоимости основных средств'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '[%1 - %2] Итог [%3] <= 0,49 х %4 Итог [%5]';
													|en = '[%1 - %2] Итог [%3] <= 0,49 х %4 Итог [%5]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С140"		, "П000020014003");
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу(Настройки);
	СуммаР02 = 0;
	СуммаР21 = 0;
	КоличествоР21 = 0;
	
	Если ВыборкаР1.Следующий() Тогда
		СуммаР02 = ВыборкаР1.П000020014003;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р02С140, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР21 = ВыборкаР2.П000210005003;
		Выборка = ВыборкаР2.Выбрать();
		КоличествоР21 = Выборка.Количество();
		Если НЕ ДанныеКС.Турборежим Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	РасчетнаяСумма1			= СуммаР21 - СуммаР02;
	РасчетнаяСумма1			= ?(РасчетнаяСумма1 < 0, - РасчетнаяСумма1, РасчетнаяСумма1);
	РасчетнаяСумма2			= Окр(0.49 * КоличествоР21);
	Настройки.ЭтоОшибка		= НЕ РасчетнаяСумма1 <= РасчетнаяСумма2;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
		СуммаР21, СуммаР02, РасчетнаяСумма1, КоличествоР21, РасчетнаяСумма2);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_23()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.23';
													|en = '1.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен';
			|en = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма остаточной стоимости основных средств';
														|en = 'Ошибочная сумма остаточной стоимости основных средств'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 ≠ 0, когда Раздел 3 не заполнен';
													|en = '%1 ≠ 0, когда Раздел 3 не заполнен'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	СУММА(П000030013003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.Страница	КАК НомСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР2 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР21 = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу(Настройки);
	СуммаР02 = 0;
	СуммаР03 = 0;
	СуммаР21 = 0;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР02 = ВыборкаР2.П000020014003;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		СуммаР03 = ВыборкаР3.П000030013003;
	КонецЕсли;
	
	Если ВыборкаР21.Следующий() Тогда
		СуммаР21 = ВыборкаР21.П000210005003;
		Выборка = ВыборкаР21.Выбрать();
		
		Если НЕ ДанныеКС.Турборежим Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	Настройки.ЭтоОшибка		= НЕ ЗначениеЗаполнено(СуммаР03) И ЗначениеЗаполнено(СуммаР02) И НЕ ЗначениеЗаполнено(СуммаР21);
	Настройки.Расшифровка	= ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, СуммаР21);
	ДополнитьСтруктуруОшибок(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_3

Процедура ПроверкаКС_1_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.24';
													|en = '1.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = (стр.020 - стр.025 Раздела 3) х стр.030 Раздела 3 х стр.050 Разде';
			|en = 'Налоговая база в стр.060 Раздела 3 = (стр.020 - стр.025 Раздела 3) х стр.030 Раздела 3 х стр.050 Разде'") +
		НСтр("ru = 'ла 3, если стр.030 Раздела 3 заполнена';
			|en = 'ла 3, если стр.030 Раздела 3 заполнена'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налоговой базы';
														|en = 'Ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2 - %3) х %4/%5 х %6/%7 Итог [%8]';
													|en = '%1 = (%2 - %3) х %4/%5 х %6/%7 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("УчитыватьСтр030"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_25_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.25';
													|en = '1.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = (стр.020 - стр.025 Раздела 3) х стр.050 Раздела 3, если ';
			|en = 'Налоговая база в стр.060 Раздела 3 = (стр.020 - стр.025 Раздела 3) х стр.050 Раздела 3, если '") +
		НСтр("ru = 'стр.030 Раздела 3 не заполнена';
			|en = 'стр.030 Раздела 3 не заполнена'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налоговой базы';
														|en = 'Ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2 - %3) х %6/%7 Итог [%8]';
													|en = '%1 = (%2 - %3) х %6/%7 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("УчитыватьСтр030"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_25_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_25_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С020"		, "П000030002003");
	ИменаПоказателей.Вставить("Р03С025"		, "П000030002503");
	ИменаПоказателей.Вставить("Р03С031"		, "П000030003003_Числ");
	ИменаПоказателей.Вставить("Р03С032"		, "П000030003003_Знам");
	ИменаПоказателей.Вставить("Р03С051"		, "П000030005003_Числ");
	ИменаПоказателей.Вставить("Р03С052"		, "П000030005003_Знам");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р03С031.Округление = Ложь;
	Показатели.Р03С032.Округление = Ложь;
	Показатели.Р03С051.Округление = Ложь;
	Показатели.Р03С052.Округление = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Показатели.Р03С031.Расшифровывать = Настройки.УчитыватьСтр030;
		Показатели.Р03С032.Расшифровывать = Настройки.УчитыватьСтр030;
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Стр030Заполнена = ЗначениеЗаполнено(Показатели.Р03С032.Значение);
		Разность = Макс(Показатели.Р03С020.Значение - Показатели.Р03С025.Значение, 0);
		Стр030 = ?(Показатели.Р03С032.Значение = 0, 1, Показатели.Р03С031.Значение / Показатели.Р03С032.Значение);
		Стр050 = ?(Показатели.Р03С052.Значение = 0, 1, Показатели.Р03С051.Значение / Показатели.Р03С052.Значение);
		РасчетнаяСумма = Окр(Разность * Стр030 * Стр050);
			
		Настройки.ЭтоОшибка = (Настройки.УчитыватьСтр030 И Стр030Заполнена
			ИЛИ НЕ Настройки.УчитыватьСтр030 И НЕ Стр030Заполнена) И НЕ Показатели.Р03С060.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р03С060.Значение, Показатели.Р03С020.Значение, Показатели.Р03С025.Значение, Показатели.Р03С031.Значение,
			Показатели.Р03С032.Значение, Показатели.Р03С051.Значение, Показатели.Р03С052.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_26()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.26';
													|en = '1.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Коэффициент Ки (стр.095 Раздела 3) должен быть меньше 1, если коэффициент Кв (стр.090 Раздела 3) больш';
			|en = 'Коэффициент Ки (стр.095 Раздела 3) должен быть меньше 1, если коэффициент Кв (стр.090 Раздела 3) больш'") +
		НСтр("ru = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0';
			|en = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение коэффициента Ки';
														|en = 'Ошибочное значение коэффициента Ки'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1/%2 < 1';
													|en = '%1/%2 < 1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р03С090.Расшифровывать = Ложь;
	Показатели.Р03С091.Расшифровывать = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 0, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 0, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		УсловиеВыполнено = НЕ НольИлиЕдиница(Р03С090_Значение) И Р03С095_Значение > 0;
		Настройки.ЭтоОшибка = УсловиеВыполнено И НЕ Р03С095_Значение < 1;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р03С095.Значение,
			Показатели.Р03С096.Значение);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27';
													|en = '1.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.090 Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.090 Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 х %4/%5 / 100 Итог [%8]';
													|en = '%1 = %2 х %3 х %4/%5 / 100 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Учитывать090");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.28';
													|en = '1.28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.090 Раздела 3 х стр.095';
			|en = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.090 Раздела 3 х стр.095'") +
		НСтр("ru = ' Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = ' Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 х %4/%5 х %6/%7 / 100 Итог [%8]';
													|en = '%1 = %2 х %3 х %4/%5 х %6/%7 / 100 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Учитывать090и095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.29';
													|en = '1.29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.095 Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 х стр.095 Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 х %6/%7 / 100 Итог [%8]';
													|en = '%1 = %2 х %3 х %6/%7 / 100 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("Учитывать095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_30()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.30';
													|en = '1.30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 / 100, если  стр.090 Раздела ';
			|en = 'Сумма налога в стр.100 Раздела 3 = стр.060 Раздела 3 х стр.080 Раздела 3 / 100, если  стр.090 Раздела '") +
		НСтр("ru = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 / 100 Итог [%8]';
													|en = '%1 = %2 х %3 / 100 Итог [%8]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("БезМножителей");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_30_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С080"		, "П000030008003");
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р03С080.Округление = Ложь;
	Показатели.Р03С090.Расшифровывать = Настройки.Свойство("Учитывать090") ИЛИ Настройки.Свойство("Учитывать090и095");
	Показатели.Р03С091.Расшифровывать = Настройки.Свойство("Учитывать090") ИЛИ Настройки.Свойство("Учитывать090и095");
	Показатели.Р03С095.Расшифровывать = Настройки.Свойство("Учитывать095") ИЛИ Настройки.Свойство("Учитывать090и095");
	Показатели.Р03С096.Расшифровывать = Настройки.Свойство("Учитывать095") ИЛИ Настройки.Свойство("Учитывать090и095");
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 1, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 1, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		РасчетнаяСумма = Окр(Показатели.Р03С060.Значение * Показатели.Р03С080.Значение * Р03С090_Значение * 
			Р03С095_Значение / 100);
			
		Настройки.ЭтоОшибка = (НЕ НольИлиЕдиница(Р03С090_Значение) И НольИлиЕдиница(Р03С095_Значение) 
			И Настройки.Свойство("Учитывать090") 
			ИЛИ НЕ НольИлиЕдиница(Р03С090_Значение) И НЕ НольИлиЕдиница(Р03С095_Значение)
			И Настройки.Свойство("Учитывать090и095") 
			ИЛИ НольИлиЕдиница(Р03С090_Значение) И НЕ НольИлиЕдиница(Р03С095_Значение)
			И Настройки.Свойство("Учитывать095") 
			ИЛИ НольИлиЕдиница(Р03С090_Значение) И НольИлиЕдиница(Р03С095_Значение)
			И Настройки.Свойство("БезМножителей")) 
			И НЕ Показатели.Р03С100.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р03С100.Значение, Показатели.Р03С060.Значение, Показатели.Р03С080.Значение, 
			Показатели.Р03С090.Значение, Показатели.Р03С091.Значение, Показатели.Р03С095.Значение, 
			Показатели.Р03С096.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_31()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.31';
													|en = '1.31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога (стр.120 Раздела 3), ≠ 0, если значение стр.110 Раздела 3 равно';
			|en = 'Сумма льготы, уменьшающая сумму налога (стр.120 Раздела 3), ≠ 0, если значение стр.110 Раздела 3 равно'") +
		НСтр("ru = ' 2012500';
			|en = ' 2012500'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма льготы';
														|en = 'Ошибочная сумма льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 ≠ 0 когда %2 = %3';
													|en = '%1 ≠ 0 когда %2 = %3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("ПоказательКода"		, "П000030011003_КодЛьготы");
	Настройки.Вставить("ПоказательСуммы"	, "П000030012003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	ИменаПоказателей.Вставить("Р03С002"		, "П000030012003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Настройки.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р03С002.Значение);
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р03С002.Значение, 
			Показатели.Р03С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_32()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.32';
													|en = '1.32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение кадастрового номера (стр.015 Раздела 3) не должно содержать символы %1 и буквы %2, если значе';
			|en = 'Значение кадастрового номера (стр.015 Раздела 3) не должно содержать символы %1 и буквы %2, если значе'") +
		НСтр("ru = 'ние заполнено';
			|en = 'ние заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кадастрового номера';
														|en = 'Ошибочное значение кадастрового номера'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Указанное значение: %1';
													|en = 'Указанное значение: %1'"));
	
	СтрокаСимволов			= ". , ; "" / ! @ # $ % ^ & * () _ + | \ - ' ] [ } { ` ~ N ? < >";
	СтрокаБукв				= "О, З";
	Заголовки.ОписаниеКС	= ПодставитьПараметрыВСтроку(Заголовки.ОписаниеКС, СтрокаСимволов, СтрокаБукв);
	СтрокаСимволов			= СтрЗаменить(СтрокаСимволов + СтрокаБукв, " ", "");
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С015"		, "П000030001501");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		НедопустимыйСимвол = Ложь;
		
		Если ЗначениеЗаполнено(Показатели.Р03С015.Значение) Тогда
			ДлинаСтрСимволов = СтрДлина(СтрокаСимволов);
			Для Счетчик = 1 По ДлинаСтрСимволов Цикл
				Если НЕ Найти(Показатели.Р03С015.Значение, Сред(СтрокаСимволов, Счетчик, 1)) = 0 Тогда
					НедопустимыйСимвол = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли; 
		
		Настройки.ЭтоОшибка = НедопустимыйСимвол;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р03С015.ЗначениеСтр);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_33()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.33';
													|en = '1.33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000';
			|en = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000'"));
	Заголовки.Вставить("ОписаниеОшибки"	, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Указанное значение: %1';
													|en = 'Указанное значение: %1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("ЦелевойПоказатель"	, "П000030004003_КодЛьготы");
	Настройки.Вставить("БазовыйПоказатель"	, "П000030004003_Основание");
	Настройки.Вставить("ЦелевоеЗначение"	, "2012000");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_34()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.34';
													|en = '1.34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400';
			|en = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400'"));
	Заголовки.Вставить("ОписаниеОшибки"	, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Указанное значение: %1';
													|en = 'Указанное значение: %1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	Настройки.Вставить("ЦелевойПоказатель"	, "П000030007003_КодЛьготы");
	Настройки.Вставить("БазовыйПоказатель"	, "П000030007003_КодЛьготы");
	Настройки.Вставить("ЦелевоеЗначение"	, "2012400");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_34_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, Настройки.ЦелевойПоказатель);
	ИменаПоказателей.Вставить("Р03С002"		, Настройки.БазовыйПоказатель);
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	Показатели.Р03С002.Расшифровывать = НЕ Настройки.ЦелевойПоказатель = Настройки.БазовыйПоказатель;
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Настройки.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С002.Значение) 
			И НЕ Показатели.Р03С001.Значение = Настройки.ЦелевоеЗначение;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_35()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.35';
													|en = '1.35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500';
			|en = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500'"));
	Заголовки.Вставить("ОписаниеОшибки"	, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Указанное значение: %1';
													|en = 'Указанное значение: %1'"));
	Настройки = ОбработатьНастройки(Заголовки);
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		Настройки.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С001.Значение) 
			И МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_36()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.36';
													|en = '1.36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 '") +
		НСтр("ru = 'Раздела 3 = стр.100 - стр.120 Раздела 3, если стр.100 - стр.120 Раздела 3 >= 0, иначе 0';
			|en = 'Раздела 3 = стр.100 - стр.120 Раздела 3, если стр.100 - стр.120 Раздела 3 >= 0, иначе 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога';
														|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4]';
													|en = '%1 = %2 - %3 Итог [%4]'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С120"		, "П000030012003");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Р03 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР03.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР03);
		
		РасчетнаяСумма = Макс(Показатели.Р03С100.Значение - Показатели.Р03С120.Значение, 0);
		Настройки.ЭтоОшибка = НЕ Показатели.Р03С130.Значение = РасчетнаяСумма;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели.Р03С130.Значение, Показатели.Р03С100.Значение, Показатели.Р03С120.Значение, РасчетнаяСумма);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_дополнительные

Процедура ПроверкаКС_2_01_доп()
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.1.доп';
													|en = '2.1.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в стр.001 Ра';
			|en = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в стр.001 Ра'") +
		НСтр("ru = 'здела 2 не равен 04';
			|en = 'здела 2 не равен 04'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма налога, уплаченная за пределами РФ';
														|en = 'Ошибочная сумма налога, уплаченная за пределами РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = 0, когда %2 ≠ 04';
													|en = '%1 = 0, когда %2 ≠ 04'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Р02 Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаР02.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаР02);
		
		Настройки.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" И НЕ Показатели.Р02С250.Значение = 0;
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, Показатели.Р02С250.Значение, 
			Показатели.Р02С001.ЗначениеСтр);
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_2_02_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.2.доп';
													|en = '2.2.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение признака СЗПК в стр.007 Раздела 1 ';
														|en = 'Значение признака СЗПК в стр.007 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение признака СЗПК';
														|en = 'Ошибочное значение признака СЗПК'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель"		, "П000010000703_");
	ПроверкаКС_1_02_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_03_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.3.доп';
													|en = '2.3.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 2 ';
														|en = 'Значение кода вида имущества в стр.001 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода вида имущества';
														|en = 'Ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С001");
	Настройки.Вставить("ИмяПоказателя"		, "П000020000101");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_04_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.4.доп';
													|en = '2.4.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2 ';
														|en = 'Значение КБК в стр.011 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное начение КБК';
														|en = 'Ошибочное начение КБК'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С011");
	Настройки.Вставить("ИмяПоказателя"		, "П000020001100");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_05_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.5.доп';
													|en = '2.5.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода налоговой льготы в стр.160 Раздела 2 ';
														|en = 'Значение кода налоговой льготы в стр.160 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода налоговой льготы';
														|en = 'Ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С160");
	Настройки.Вставить("ИмяПоказателя"		, "П000020016003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_06_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.6.доп';
													|en = '2.6.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С200");
	Настройки.Вставить("ИмяПоказателя"		, "П000020020003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_07_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.7.доп';
													|en = '2.7.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение Кжд в стр.215 Раздела 2 ';
														|en = 'Значение Кжд в стр.215 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение Кжд';
														|en = 'Ошибочное значение Кжд'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С215");
	Настройки.Вставить("ИмяПоказателя"		, "П000020021503");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_08_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.8.доп';
													|en = '2.8.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р02С230");
	Настройки.Вставить("ИмяПоказателя"		, "П000020023003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р02);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_09_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.9.доп';
													|en = '2.9.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2.1 ';
														|en = 'Значение КБК в стр.011 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение КБК';
														|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р21С011");
	Настройки.Вставить("ИмяПоказателя"		, "П000210001100");
	
	ПроверкаКС_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_10_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.10.доп';
													|en = '2.10.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода номера объекта в стр.010 Раздела 2.1 ';
														|en = 'Значение кода номера объекта в стр.010 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода номера объекта';
														|en = 'Ошибочное значение кода номера объекта'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р21С010");
	Настройки.Вставить("ИмяПоказателя"		, "П000210001001");
	
	ПроверкаКС_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_11_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.11.доп';
													|en = '2.11.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 ';
														|en = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода субъекта РФ';
														|en = 'Ошибочное значение кода субъекта РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р21С030");
	Настройки.Вставить("ИмяПоказателя"		, "П000210003001");
	
	ПроверкаКС_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_12_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.12.доп';
													|en = '2.12.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода муниципального образования в стр.030 Раздела 2.1 ';
														|en = 'Значение кода муниципального образования в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода муниципального образования';
														|en = 'Ошибочное значение кода муниципального образования'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р21С030");
	Настройки.Вставить("ИмяПоказателя"		, "П000210003002");
	
	ПроверкаКС_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_13_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.13.доп';
													|en = '2.13.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода поселения, территории в стр.030 Раздела 2.1 ';
														|en = 'Значение кода поселения, территории в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода поселения, территории';
														|en = 'Ошибочное значение кода поселения, территории'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р21С030");
	Настройки.Вставить("ИмяПоказателя"		, "П000210003004");
	
	ПроверкаКС_2_13_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_13_код(Настройки)
	
	Перем Показатели;
	Перем Список;
	
	Настройки.Вставить("ШаблонРасшифровки"	
		, НСтр("ru = 'Указанное значение %1 %2соответствует списку допустимых значений';
				|en = 'Указанное значение %1 %2соответствует списку допустимых значений'"));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(Настройки.КлючПоказателя, Настройки.ИмяПоказателя);
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(Настройки.ИмяПоказателя, Список) Тогда
	
		Для каждого СтраницаРаздела Из ДанныеКС.Р21 Цикл
			
			ЗаполнитьПоказатель(Показатели[Настройки.КлючПоказателя], СтраницаРаздела);
			ЭтоОшибка = Список.Найти(Показатели[Настройки.КлючПоказателя].Значение) = Неопределено;
			
			Если ДанныеКС.Турборежим И НЕ ЭтоОшибка Тогда
				Продолжить;
			КонецЕсли;
			
			Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаРаздела.Страница);
			ЗарегистрироватьФормулу(Настройки);
			РасшифроватьПоказатель(Показатели[Настройки.КлючПоказателя]);
			
			Настройки.ЭтоОшибка = Список.Найти(Показатели[Настройки.КлючПоказателя].Значение) = Неопределено;
			Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
				Показатели[Настройки.КлючПоказателя].ЗначениеСтр, ?(Настройки.ЭтоОшибка, "не ", ""));
			ДополнитьСтруктуруОшибок(Настройки);
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверкаКС_2_14_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.14.доп';
													|en = '2.14.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 3 ';
														|en = 'Значение кода вида имущества в стр.001 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода вида имущества';
														|en = 'Ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С001");
	Настройки.Вставить("ИмяПоказателя"		, "П000030000101");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_15_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.15.доп';
													|en = '2.15.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 3 ';
														|en = 'Значение КБК в стр.011 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение КБК';
														|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С011");
	Настройки.Вставить("ИмяПоказателя"		, "П000030001100");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_16_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.16.доп';
													|en = '2.16.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода вида сведений в стр.014 Раздела 3 ';
														|en = 'Значение кода вида сведений в стр.014 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода вида сведений';
														|en = 'Ошибочное значение кода вида сведений'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С014");
	Настройки.Вставить("ИмяПоказателя"		, "П000030001401");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_17_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.17.доп';
													|en = '2.17.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Значение кода налоговой льготы в стр.040 Раздела 3 ';
														|en = 'Значение кода налоговой льготы в стр.040 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода налоговой льготы';
														|en = 'Ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С040");
	Настройки.Вставить("ИмяПоказателя"		, "П000030004003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_17_код(Настройки)
	
	Перем Показатели;
	Перем Список;
	
	Настройки.Вставить("ШаблонРасшифровки"	
		, НСтр("ru = 'Указанное значение %1 %2соответствует списку допустимых значений';
				|en = 'Указанное значение %1 %2соответствует списку допустимых значений'"));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(Настройки.КлючПоказателя, Настройки.ИмяПоказателя);
	СформироватьПоказатели(Показатели, ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из Настройки.Источник Цикл
		
		Настройки.ДопСведения = СтрЗаменить(Настройки.ШаблонДопСведений, "%1", СтраницаРаздела.Страница);
		ЗарегистрироватьФормулу(Настройки);
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		Если ПараметрыКС.СписочныеЗначения.Свойство(Настройки.ИмяПоказателя, Список) Тогда
			Настройки.ЭтоОшибка = Список.Найти(Показатели[Настройки.КлючПоказателя].Значение) = Неопределено;
		Иначе
			Настройки.ЭтоОшибка = Ложь;
		КонецЕсли; 
		
		Настройки.Расшифровка = ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			Показатели[Настройки.КлючПоказателя].ЗначениеСтр, ?(Настройки.ЭтоОшибка, "не ", ""));
		ДополнитьСтруктуруОшибок(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_2_18_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.18.доп';
													|en = '2.18.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С070");
	Настройки.Вставить("ИмяПоказателя"		, "П000030007003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

Процедура ПроверкаКС_2_19_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.19.доп';
													|en = '2.19.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Настройки = ОбработатьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КлючПоказателя"		, "Р03С110");
	Настройки.Вставить("ИмяПоказателя"		, "П000030011003_КодЛьготы");
	Настройки.Вставить("Источник"			, ДанныеКС.Р03);
	
	ПроверкаКС_2_17_код(Настройки);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область КонтрольныеСоотношения2023

#Область КС_Управление

Функция ПроверитьКонтрольныеСоотношения2023(СтруктураПараметров)
	
	Документирование 	= Ложь;
	
	ТаблицаРезультата	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРезультата();
	ТаблицаРасшифровки	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРасшифровки();
	ПараметрыКС			= СтруктураПараметров;
	
	ДанныеКС = Новый Структура;
	ДанныеКС.Вставить("Счетчик"		, 0);
	ДанныеКС.Вставить("ЧислоОшибок"	, 0);
	ДанныеКС.Вставить("Отчет"		, ПараметрыКС.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", ПараметрыКС.СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("ГодОтчета"	, Год(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("МесОтчета"	, Месяц(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("ТолькоОшибки", Истина);
	ДанныеКС.Вставить("МакетСКП"	, "Базовая_1");
	ДанныеКС.Вставить("ВариантСКП"	, "ПоРазделам_1_1");
	
	ДанныеКС.Вставить("Турборежим"	, Ложь);
	
	СформироватьСлужебныеДанные2023();
	СформироватьДанныеОтчета2023();
	
#Область Проверки

	// критические проверки НК РФ
	
	ПроверкаКС_6_1_1_к_2023();
	ПроверкаКС_6_1_2_к_2023();
	ПроверкаКС_6_2_к_2023();
	ПроверкаКС_6_3_к_2023();

	// основные проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01_2023();
	ПроверкаКС_1_02_2023();
	ПроверкаКС_1_03_2023();
	ПроверкаКС_1_05_2023();
	ПроверкаКС_1_06_2023();
	
	// Проверки Раздела 2
	ПроверкаКС_1_07_2023();
	ПроверкаКС_1_08_2023();
	ПроверкаКС_1_09_2023_1();
	ПроверкаКС_1_09_2023_2();
	ПроверкаКС_1_10_2023();
	ПроверкаКС_1_11_2023();
	ПроверкаКС_1_12_2023();
	ПроверкаКС_1_13_2023();
	ПроверкаКС_1_14_2023();
	ПроверкаКС_1_15_2023();
	ПроверкаКС_1_16_2023();
	ПроверкаКС_1_17_2023();
	ПроверкаКС_1_18_2023();
	ПроверкаКС_1_19_2023();
	ПроверкаКС_1_20_2023();
	ПроверкаКС_1_21_2023();
	ПроверкаКС_1_22_2023();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_23_2023();
	ПроверкаКС_1_24_2023();
	
	// Проверки Раздела 2.2
	ПроверкаКС_1_25_2023();
	ПроверкаКС_1_26_2023();
	ПроверкаКС_1_27_2023_1();
	ПроверкаКС_1_27_2023_2();
	ПроверкаКС_1_28_2023();
	ПроверкаКС_1_29_2023();
	ПроверкаКС_1_30_2023();
	ПроверкаКС_1_31_2023();
	ПроверкаКС_1_32_2023();
	ПроверкаКС_1_33_2023();
	ПроверкаКС_1_34_2023();
	ПроверкаКС_1_35_2023();
	ПроверкаКС_1_36_2023();
	ПроверкаКС_1_37_2023();
	ПроверкаКС_1_38_2023();
	ПроверкаКС_1_39_2023();
	ПроверкаКС_1_40_2023();
	ПроверкаКС_1_41_2023();
	
	// Проверки Раздела 3
	ПроверкаКС_1_42_2023();
	ПроверкаКС_1_43_2023();
	ПроверкаКС_1_44_2023();
	ПроверкаКС_1_45_2023();
	ПроверкаКС_1_46_2023();
	ПроверкаКС_1_47_2023();
	ПроверкаКС_1_48_2023();
	ПроверкаКС_1_49_2023();
	ПроверкаКС_1_50_2023();
	ПроверкаКС_1_51_2023();
	ПроверкаКС_1_52_2023();
	ПроверкаКС_1_53_2023();
	ПроверкаКС_1_54_2023();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_2023_доп();
	ПроверкаКС_2_02_2023_доп();
	ПроверкаКС_2_03_2023_доп();
	ПроверкаКС_2_04_2023_доп();
	ПроверкаКС_2_05_2023_доп();
	ПроверкаКС_2_06_2023_доп();
	ПроверкаКС_2_07_2023_доп();
	ПроверкаКС_2_08_2023_доп();
	ПроверкаКС_2_09_2023_доп();
	ПроверкаКС_2_10_2023_доп();
	ПроверкаКС_2_11_2023_доп();
	ПроверкаКС_2_12_2023_доп();
	ПроверкаКС_2_13_2023_доп();
	ПроверкаКС_2_14_2023_доп();
	ПроверкаКС_2_15_2023_доп();
	ПроверкаКС_2_16_2023_доп();
	ПроверкаКС_2_17_2023_доп();
	ПроверкаКС_2_18_2023_доп();
	ПроверкаКС_2_19_2023_доп();
	ПроверкаКС_2_20_2023_доп();
	ПроверкаКС_2_21_2023_доп();
	ПроверкаКС_2_22_2023_доп();
	ПроверкаКС_2_23_2023_доп();
	ПроверкаКС_2_24_2023_доп();
	ПроверкаКС_2_25_2023_доп();
	ПроверкаКС_2_26_2023_доп();
	ПроверкаКС_2_27_2023_доп();
	ПроверкаКС_2_28_2023_доп();
	ПроверкаКС_2_29_2023_доп();
	
#КонецОбласти

	ПоместитьВоВременноеХранилище(ТаблицаРезультата		, СтруктураПараметров.АдресРезультата);
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки	, СтруктураПараметров.АдресРасшифровки);
	
	Возврат ПодготовитьРезультат2023();
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

Функция ВыполнитьДокументированиеОбъект2023() Экспорт
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Декларация по налогу на имущество организаций");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2022Кв4");
	
	ТаблицаОписаний		= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуОписаний();
	ДанныеКС 			= Новый Структура;
	ДанныеКС.Вставить("Счетчик"		, 0);
	СформироватьПриоритетыРазделов();
	
#Область Проверки

	// критические проверки НК РФ
	
	ПроверкаКС_6_1_1_к_2023();
	ПроверкаКС_6_1_2_к_2023();
	ПроверкаКС_6_2_к_2023();
	ПроверкаКС_6_3_к_2023();

	// основные проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01_2023();
	ПроверкаКС_1_02_2023();
	ПроверкаКС_1_03_2023();
	ПроверкаКС_1_05_2023();
	ПроверкаКС_1_06_2023();
	
	// Проверки Раздела 2
	ПроверкаКС_1_07_2023();
	ПроверкаКС_1_08_2023();
	ПроверкаКС_1_09_2023_1();
	ПроверкаКС_1_09_2023_2();
	ПроверкаКС_1_10_2023();
	ПроверкаКС_1_11_2023();
	ПроверкаКС_1_12_2023();
	ПроверкаКС_1_13_2023();
	ПроверкаКС_1_14_2023();
	ПроверкаКС_1_15_2023();
	ПроверкаКС_1_16_2023();
	ПроверкаКС_1_17_2023();
	ПроверкаКС_1_18_2023();
	ПроверкаКС_1_19_2023();
	ПроверкаКС_1_20_2023();
	ПроверкаКС_1_21_2023();
	ПроверкаКС_1_22_2023();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_23_2023();
	ПроверкаКС_1_24_2023();
	
	// Проверки Раздела 2.2
	ПроверкаКС_1_25_2023();
	ПроверкаКС_1_26_2023();
	ПроверкаКС_1_27_2023_1();
	ПроверкаКС_1_27_2023_2();
	ПроверкаКС_1_28_2023();
	ПроверкаКС_1_29_2023();
	ПроверкаКС_1_30_2023();
	ПроверкаКС_1_31_2023();
	ПроверкаКС_1_32_2023();
	ПроверкаКС_1_33_2023();
	ПроверкаКС_1_34_2023();
	ПроверкаКС_1_35_2023();
	ПроверкаКС_1_36_2023();
	ПроверкаКС_1_37_2023();
	ПроверкаКС_1_38_2023();
	ПроверкаКС_1_39_2023();
	ПроверкаКС_1_40_2023();
	ПроверкаКС_1_41_2023();
	
	// Проверки Раздела 3
	ПроверкаКС_1_42_2023();
	ПроверкаКС_1_43_2023();
	ПроверкаКС_1_44_2023();
	ПроверкаКС_1_45_2023();
	ПроверкаКС_1_46_2023();
	ПроверкаКС_1_47_2023();
	ПроверкаКС_1_48_2023();
	ПроверкаКС_1_49_2023();
	ПроверкаКС_1_50_2023();
	ПроверкаКС_1_51_2023();
	ПроверкаКС_1_52_2023();
	ПроверкаКС_1_53_2023();
	ПроверкаКС_1_54_2023();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_2023_доп();
	ПроверкаКС_2_02_2023_доп();
	ПроверкаКС_2_03_2023_доп();
	ПроверкаКС_2_04_2023_доп();
	ПроверкаКС_2_05_2023_доп();
	ПроверкаКС_2_06_2023_доп();
	ПроверкаКС_2_07_2023_доп();
	ПроверкаКС_2_08_2023_доп();
	ПроверкаКС_2_09_2023_доп();
	ПроверкаКС_2_10_2023_доп();
	ПроверкаКС_2_11_2023_доп();
	ПроверкаКС_2_12_2023_доп();
	ПроверкаКС_2_13_2023_доп();
	ПроверкаКС_2_14_2023_доп();
	ПроверкаКС_2_15_2023_доп();
	ПроверкаКС_2_16_2023_доп();
	ПроверкаКС_2_17_2023_доп();
	ПроверкаКС_2_18_2023_доп();
	ПроверкаКС_2_19_2023_доп();
	ПроверкаКС_2_20_2023_доп();
	ПроверкаКС_2_21_2023_доп();
	ПроверкаКС_2_22_2023_доп();
	ПроверкаКС_2_23_2023_доп();
	ПроверкаКС_2_24_2023_доп();
	ПроверкаКС_2_25_2023_доп();
	ПроверкаКС_2_26_2023_доп();
	ПроверкаКС_2_27_2023_доп();
	ПроверкаКС_2_28_2023_доп();
	ПроверкаКС_2_29_2023_доп();
	
#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#Область КС_Данные

Процедура СформироватьСлужебныеДанные2023()
	
	ИменаРазделов = Новый Структура();
	
	ИменаРазделов.Вставить("Р00", "Титульный");
	ИменаРазделов.Вставить("Р01", "Раздел1");
	ИменаРазделов.Вставить("Р02", "Раздел2");
	ИменаРазделов.Вставить("Р21", "Раздел21");
	ИменаРазделов.Вставить("Р22", "Раздел22");
	ИменаРазделов.Вставить("Р03", "Раздел3");
	ИменаРазделов.Вставить("Р04", "Раздел4");
	
	ДанныеКС.Вставить("ИменаРазделов", ИменаРазделов);
	
	ПредставленияРазделов = Новый Структура();
	
	ПредставленияРазделов.Вставить("Р00", "Титульный лист");
	ПредставленияРазделов.Вставить("Р01", "Раздела 1");
	ПредставленияРазделов.Вставить("Р02", "Раздела 2");
	ПредставленияРазделов.Вставить("Р21", "Раздела 2.1");
	ПредставленияРазделов.Вставить("Р22", "Раздела 2.2");
	ПредставленияРазделов.Вставить("Р03", "Раздела 3");
	ПредставленияРазделов.Вставить("Р04", "Раздела 4");
	
	ДанныеКС.Вставить("ПредставленияРазделов", ПредставленияРазделов);
	
	ЦелочисленныеРазделы = Новый Массив;
	ЦелочисленныеРазделы.Добавить("Р01");
	ЦелочисленныеРазделы.Добавить("Р02");
	ЦелочисленныеРазделы.Добавить("Р22");
	ЦелочисленныеРазделы.Добавить("Р03");
	
	ДанныеКС.Вставить("ЦелочисленныеРазделы", ЦелочисленныеРазделы);
	
	СформироватьПриоритетыРазделов();
	
КонецПроцедуры

Процедура СформироватьДанныеОтчета2023()
	
	ИсходнаяСтруктура = СохраненныеДанныеОтчета(ПараметрыКС.ИмяФормы, ПараметрыКС.СтруктураРеквизитовФормы);
	
	ДанныеКС.Вставить("Раздел0", ОбщегоНазначения.СкопироватьРекурсивно(
		ИсходнаяСтруктура.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	
	Для каждого Раздел Из ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов Цикл
		
		ДанныеКС.Вставить("КолвоСтраниц" + Раздел.Ключ, Раздел.Значение.Строки.Количество());
		МассивСтраниц = Новый Массив;
		
		Для каждого СтраницаРаздела Из Раздел.Значение.Строки Цикл
			
			ДанныеСтраницы = Новый Структура;
			ДанныеСтраницы.Вставить("НомерСтраницы", XMLСтрока(Раздел.Значение.Строки.Индекс(СтраницаРаздела) + 1));
			ПолучитьДанныеСтраницы2023(ДанныеСтраницы, СтраницаРаздела, 
				Новый Структура("КорневойРаздел, Раздел, Уровень", Раздел.Ключ, Раздел.Ключ, 1),
				Новый Структура("Уровень", ""));
			//ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
			МассивСтраниц.Добавить(ДанныеСтраницы);
			
		КонецЦикла;
		
		ДанныеКС.Вставить(Раздел.Ключ, МассивСтраниц);
		
	КонецЦикла;
	
	ДанныеКС.Вставить("Раздел1", ДанныеКС.Раздел1[0]);
	ДанныеКС.Вставить("Раздел4", ДанныеКС.Раздел4[0]);
	
	СформироватьВременныеТаблицы2023(ИсходнаяСтруктура);
	
КонецПроцедуры

Процедура ПолучитьДанныеСтраницы2023(СтруктураПриемник, 
									Знач СтруктураИсточник, 
									Знач ВходящийРаздел, 
									Знач ВходящаяМнЧасть)
									
	Если НЕ СтруктураИсточник.Данные = Неопределено И НЕ ЗначениеЗаполнено(ВходящаяМнЧасть.Уровень) Тогда
		Для каждого Элемент Из СтруктураИсточник.Данные Цикл
			СтруктураПриемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из СтруктураИсточник.ДанныеМногострочныхЧастей Цикл
			Для каждого СтрокаМнЧасти Из МнЧасть.Значение.Строки Цикл
				
				НомерСтроки = МнЧасть.Значение.Строки.Индекс(СтрокаМнЧасти) + 1;
				СтруктураПриемник.Вставить("КолвоСтрок" + МнЧасть.Ключ + ВходящаяМнЧасть.Уровень, 
					МнЧасть.Значение.Строки.Количество());
				Для каждого ПоказательСтроки Из СтрокаМнЧасти.Данные Цикл
					СтруктураПриемник.Вставить(ПоказательСтроки.Ключ + ВходящаяМнЧасть.Уровень + "_" + XMLСтрока(НомерСтроки), 
						ПоказательСтроки.Значение);
				КонецЦикла;
				
				Если НЕ СтрокаМнЧасти.ДанныеМногострочныхЧастей.Количество() = 0 Тогда
					ПолучитьДанныеСтраницы2023(СтруктураПриемник, СтрокаМнЧасти, ВходящийРаздел,
						Новый Структура("Уровень", "_" +  XMLСтрока(НомерСтроки)));
				КонецЕсли;
					
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.Строки.Количество() = 0 Тогда
		Для каждого Приложение Из СтруктураИсточник.Строки Цикл
			
			КлючПриложения = ВходящийРаздел.Раздел;
			МассивСтраниц = Новый Массив;
			
			Для каждого СтраницаПриложения Из СтруктураИсточник.Строки Цикл
				
				ДанныеСтраницы = Новый Структура;
				
				Если КлючПриложения = "Раздел21" Тогда
					ДанныеСтраницы.Вставить("НомерСтраницы", XMLСтрока(СтруктураИсточник.Строки.Индекс(СтраницаПриложения) + 1));
				Иначе
					ДанныеСтраницы.Вставить("НомерСтраницы", СтруктураПриемник.НомерСтраницы + "," +
						XMLСтрока(СтруктураИсточник.Строки.Индекс(СтраницаПриложения) + 1));
				КонецЕсли;
				
				ПолучитьДанныеСтраницы2023(ДанныеСтраницы, СтраницаПриложения, 
					Новый Структура("КорневойРаздел, Раздел, Уровень", ВходящийРаздел.КорневойРаздел, КлючПриложения, 
					ВходящийРаздел.Уровень + 1), Новый Структура("Уровень", ""));
				//ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
				МассивСтраниц.Добавить(ДанныеСтраницы);
				
			КонецЦикла;
			СтруктураПриемник.Вставить("КолвоСтраниц" + КлючПриложения, МассивСтраниц.Количество());
			СтруктураПриемник.Вставить(КлючПриложения, МассивСтраниц);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьВременныеТаблицы2023(ИсходнаяСтруктура)
	
	К01		= Новый КвалификаторыСтроки(1);
	К20		= Новый КвалификаторыСтроки(20);
	
	Т01 = Новый ТаблицаЗначений;
	Т01.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т01.Колонки.Добавить("Р01С021"		, Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("НомерСтроки"	, Новый ОписаниеТипов("Число"));
	
	Т02 = Новый ТаблицаЗначений;
	Т02.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т02.Колонки.Добавить("Р02С140"		, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("Р02С260"		, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т21 = Новый ТаблицаЗначений;
	Т21.Колонки.Добавить("Р21С050"		, Новый ОписаниеТипов("Число"));
	Т21.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т22 = Новый ТаблицаЗначений;
	Т22.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т22.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т22.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т22.Колонки.Добавить("Р22С260"		, Новый ОписаниеТипов("Число"));
	Т22.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т03 = Новый ТаблицаЗначений;
	Т03.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т03.Колонки.Добавить("Р03С130"		, Новый ОписаниеТипов("Число"));
	Т03.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Раздел1 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки;
	ДанныеКС.Вставить("Т01", Т01);
	ДанныеКС.Вставить("КолСтрокР01", Раздел1.Количество());
		
	Для каждого СтрокаМнЧ Из Раздел1 Цикл
		
		НомерСтроки = Раздел1.Индекс(СтрокаМнЧ) + 1;
			
		НоваяСтрока = ДанныеКС.Т01.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(СтрокаМнЧ.Данные.П000010000703);
		НоваяСтрока.ОКТМО			= СокрЛП(СтрокаМнЧ.Данные.П000010001003);
		НоваяСтрока.КБК				= СокрЛП(СтрокаМнЧ.Данные.П000010002003);
		НоваяСтрока.Р01С021			= Окр(СтрокаМнЧ.Данные.П000010002103);
		НоваяСтрока.НомерСтраницы	= 1;
		НоваяСтрока.НомерСтроки		= НомерСтроки;
		
	КонецЦикла;
	
	Раздел2 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел2.Строки;
	ДанныеКС.Вставить("Т02", Т02);
	
	Для каждого Элемент Из Раздел2 Цикл
		
		НомерСтраницы = Раздел2.Индекс(Элемент) + 1;
		
		НоваяСтрока = ДанныеКС.Т02.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(Элемент.Данные.П000020000201);
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000020001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000020001100);
		НоваяСтрока.Р02С140			= Окр(Элемент.Данные.П000020014003);
		НоваяСтрока.Р02С260			= Окр(Элемент.Данные.П000020026003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел21 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел21.Строки;
	ДанныеКС.Вставить("Т21", Т21);
	ДанныеКС.Вставить("Турборежим21", Раздел21.Количество() > 100); 
	
	Для каждого Элемент Из Раздел21 Цикл
		
		НомерСтраницы = Раздел21.Индекс(Элемент) + 1;

		НоваяСтрока = ДанныеКС.Т21.Добавить();
		НоваяСтрока.Р21С050			= Окр(Элемент.Данные.П000210005003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел22 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел22.Строки;
	ДанныеКС.Вставить("Т22", Т22);
	ДанныеКС.Вставить("Турборежим22", Раздел22.Количество() > 100); 
	
	Для каждого Элемент Из Раздел22 Цикл
		
		НомерСтраницы = Раздел22.Индекс(Элемент) + 1;
		
		НоваяСтрока = ДанныеКС.Т22.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(Элемент.Данные.П000220000201);
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000220001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000220001100);
		НоваяСтрока.Р22С260			= Окр(Элемент.Данные.П000220026003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел3 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	ДанныеКС.Вставить("Т03", Т03);
	
	Для каждого Элемент Из Раздел3 Цикл
		
		НомерСтраницы = Раздел3.Индекс(Элемент) + 1;
			
		НоваяСтрока = ДанныеКС.Т03.Добавить();
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000030001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000030001100);
		НоваяСтрока.Р03С130			= Окр(Элемент.Данные.П000030013003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	ВременныеТаблицы	= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса		= Новый СхемаЗапроса;
	
	ИменаТаблиц			= Новый Структура;
	ИменаТаблиц.Вставить("Т01"	, "Т01");
	ИменаТаблиц.Вставить("Т02"	, "Т02");
	ИменаТаблиц.Вставить("Т21"	, "Т21");
	ИменаТаблиц.Вставить("Т22"	, "Т22");
	ИменаТаблиц.Вставить("Т03"	, "Т03");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
		
	КонецЦикла;
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.УстановитьПараметр("Т01"		, ДанныеКС.Т01);
	Запрос.УстановитьПараметр("Т02"		, ДанныеКС.Т02);
	Запрос.УстановитьПараметр("Т21"		, ДанныеКС.Т21);
	Запрос.УстановитьПараметр("Т22"		, ДанныеКС.Т22);
	Запрос.УстановитьПараметр("Т03"		, ДанныеКС.Т03);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВТ"	, ВременныеТаблицы);
	
КонецПроцедуры

Процедура СформироватьПриоритетыРазделов()
	
	ПриоритетыРазделов = Новый Массив;
	ПриоритетыРазделов.Добавить("Титульный лист");
	ПриоритетыРазделов.Добавить("Раздел 1");
	ПриоритетыРазделов.Добавить("Раздел 2");
	ПриоритетыРазделов.Добавить("Раздел 2.1");
	ПриоритетыРазделов.Добавить("Раздел 2.2");
	ПриоритетыРазделов.Добавить("Раздел 3");
	ПриоритетыРазделов.Добавить("Раздел 4");
	
	ДанныеКС.Вставить("ПриоритетыРазделов", ПриоритетыРазделов);
	
КонецПроцедуры

#КонецОбласти

#Область КС_Сервис

Функция СформироватьПоказатели2023(ИменаПоказателей)
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		МассивПредставления	= Новый Массив;
		ИмяРаздела	= "";
		ПредставлениеРаздела	= "";
		
		ПрефиксРаздела			= Сред(Элемент.Ключ, 1, 3);
		ПодстрокаСтроки			= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы			= Сред(Элемент.Значение, 13,1);
		ПодстрокаДополнения		= Сред(Элемент.Ключ, 8, 1);
		ПрефиксДополнения		= Сред(Элемент.Ключ, 4, 1);
		
		ДанныеКС.ИменаРазделов.Свойство(ПрефиксРаздела			, ИмяРаздела);
		ДанныеКС.ПредставленияРазделов.Свойство(ПрефиксРаздела	, ПредставлениеРаздела);
		
		Если ПрефиксДополнения	= "С" Тогда
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		ИначеЕсли ПрефиксДополнения = "Г" Тогда
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
		Иначе
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		КонецЕсли;
		МассивПредставления.Добавить(ПредставлениеРаздела);
		
		Если ПодстрокаДополнения = "П" Тогда
			МассивПредставления.Добавить("предыдущего отчетного периода");
		КонецЕсли;
		
		Представление		= СтрСоединить(МассивПредставления, " ");
		Многострочный		= СтрДлина(Элемент.Значение) = 14;
		Округление			= НЕ ДанныеКС.ЦелочисленныеРазделы.Найти(ПрефиксРаздела) = Неопределено;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ПрефиксРаздела"	, ПрефиксРаздела);
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяРаздела"		, ИмяРаздела);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("НомерСтраницы"	, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		Показатели[Элемент.Ключ].Вставить("ЗначениеСтр"		, "");
		Показатели[Элемент.Ключ].Вставить("Итог"			, 0);
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("Округление"		, Округление);
		Показатели[Элемент.Ключ].Вставить("Синоним"			, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
		Показатели[Элемент.Ключ].Вставить("Заполнять"		, Истина);
		Показатели[Элемент.Ключ].Вставить("Расшифровывать"	, Истина);
		Показатели[Элемент.Ключ].Вставить("Инверсия"		, Ложь);
		
	КонецЦикла;
	
	Возврат Показатели;
	
КонецФункции

Процедура РасшифроватьПоказатель2023(Показатель)
		
	НоваяСтрока							= ТаблицаРасшифровки.Добавить();
	НоваяСтрока.НомерЭлемента			= ДанныеКС.Счетчик;
	
	НоваяСтрока.СсылкаНаОтчет			= ?(ЗначениеЗаполнено(Показатель.Отчет), 
		Показатель.Отчет, ДанныеКС.Отчет);
	НоваяСтрока.ИмяРаздела				= Показатель.ИмяРаздела;
	НоваяСтрока.ИмяПоказателя			= Показатель.ИмяПоказателя;
	НоваяСтрока.НомерСтраницы			= Показатель.НомерСтраницы;
	
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	
	Если ТипЗнч(Показатель.Значение) = Тип("Число") Тогда
		НоваяСтрока.ЗначениеПоказателя		= Показатель.Значение;
	Иначе
		НоваяСтрока.ЗначениеПоказателя		= Показатель.ЗначениеСтр;
	КонецЕсли;
	
	Показатель.Дополнение = "";
	
КонецПроцедуры

Процедура РасшифроватьПоказатели2023(Показатели)
	
	Для Каждого Элемент Из Показатели Цикл
		Если Элемент.Значение.Расшифровывать Тогда
			РасшифроватьПоказатель2023(Элемент.Значение);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоказатель2023(Показатель, Источник, НомерСтроки = Неопределено)
	
	Перем ЗначениеВИсточнике;
	
	Если ТипЗнч(НомерСтроки) = Тип("Массив") Тогда
		НомерСтроки = СтрСоединить(НомерСтроки, "_");
	КонецЕсли; 
	
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + НомерСтроки;
		КонецЕсли;
		
		Если Источник.Свойство(Показатель.ИмяПоказателя, ЗначениеВИсточнике) Тогда
		
			Показатель.НомерСтраницы = ?(Источник.Свойство("НомерСтраницы"), Источник.НомерСтраницы, 1);
			
			ЗаполнитьПоказательЗначениями2023(Показатель, ЗначениеВИсточнике);
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14);
		КонецЕсли; 
	
		ЗначениеВИсточнике = Источник[Показатель.ИмяПоказателя];
		
		Показатель.Отчет			= ДанныеКС.Отчет;
		Показатель.НомерСтраницы 	= Источник.НомерСтраницы;
			
		ЗаполнитьПоказательЗначениями2023(Показатель, ЗначениеВИсточнике);
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + НомерСтроки;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоказатели2023(Показатели, Источник, НомерСтроки = Неопределено);
	
	Для Каждого Элемент Из Показатели Цикл
		ЗаполнитьПоказатель2023(Элемент.Значение, Источник, НомерСтроки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоказательЗначениями2023(Показатель, ЗначениеВИсточнике)

	Если ТипЗнч(ЗначениеВИсточнике) = Тип("Число") И Показатель.Округление Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = Окр(ЗначениеВИсточнике);
		Показатель.Итог = Показатель.Итог + Показатель.Значение;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Число") Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.Итог = Показатель.Итог + ЗначениеВИсточнике;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Строка") Тогда
		
		Показатель.Значение = СокрЛП(ЗначениеВИсточнике);
		Показатель.ЗначениеСтр = ?(ЗначениеЗаполнено(ЗначениеВИсточнике), Показатель.Значение, "(...)");
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Дата") Тогда
		
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.ЗначениеСтр = Формат(ЗначениеВИсточнике, "ДФ=dd.MM.yy; ДП=(...)");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатель2023(Показатель, Источник, НомерСтроки = Неопределено)
											
	Если Показатель.Заполнять Тогда
		ЗаполнитьПоказатель2023(Показатель, Источник, НомерСтроки);
			
		Если Показатель.Расшифровывать Тогда
			РасшифроватьПоказатель2023(Показатель);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатели2023(Показатели, Источник, НомерСтроки = Неопределено)
	
	Для каждого Элемент Из Показатели Цикл
			
		ЗаполнитьИРасшифроватьПоказатель2023(Элемент.Значение, Источник, НомерСтроки);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьПроверку2023();

	ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
	
КонецПроцедуры

Процедура ДополнитьТаблицуРезультата2023()
	
	Если ДанныеКС.ТолькоОшибки И НЕ НастройкиКС.ЭтоОшибка Тогда
		УдалитьСтрокиТаблицыРасшифровки2023(ДанныеКС.Счетчик);
		Возврат;
	КонецЕсли;
	
	Если НастройкиКС.ЭтоОшибка Тогда
		ДанныеКС.ЧислоОшибок = ДанныеКС.ЧислоОшибок + 1;
	КонецЕсли;
	
	НоваяСтрока = ТаблицаРезультата.Добавить();
	
	НоваяСтрока.Раздел 			= НастройкиКС.Раздел;
	НоваяСтрока.Приоритет		= НастройкиКС.Приоритет;
	
	НоваяСтрока.НомерЭлемента 	= ДанныеКС.Счетчик;
	НоваяСтрока.НомерКС 		= НастройкиКС.НомерКС;
	
	НоваяСтрока.Описание 		= НастройкиКС.Описание;
	НоваяСтрока.Детализация 	= НастройкиКС.Детализация;
	НоваяСтрока.Нарушение 		= НастройкиКС.Нарушение;
	НоваяСтрока.Основание 		= НастройкиКС.Основание;
	НоваяСтрока.Рекомендации 	= НастройкиКС.Рекомендации;
	
	НоваяСтрока.ДопСведения 	= НастройкиКС.ДопСведения;
	НоваяСтрока.Комментарий 	= НастройкиКС.Комментарий;
	
	НоваяСтрока.ЭтоОшибка 		= НастройкиКС.ЭтоОшибка;
		
КонецПроцедуры

Процедура УдалитьСтрокиТаблицыРасшифровки2023(НомерЭлемента)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерЭлемента", НомерЭлемента);
	
	УдаляемыеСтроки = ТаблицаРасшифровки.НайтиСтроки(ПараметрыОтбора);
	
	Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		ТаблицаРасшифровки.Удалить(УдаляемаяСтрока);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПодготовитьНастройки2023(Заголовки)
		
	НастройкиКС = Новый Структура;
	
	НастройкиКС.Вставить("Раздел"				, "");
	НастройкиКС.Вставить("НомерКС"				, "");
	
	НастройкиКС.Вставить("Описание"				, "");
	НастройкиКС.Вставить("Детализация"			, "");
	НастройкиКС.Вставить("Нарушение"			, "");
	НастройкиКС.Вставить("Основание"			, "");
	НастройкиКС.Вставить("Рекомендации"			, "");
	
	НастройкиКС.Вставить("ДопСведения"			, "");
	НастройкиКС.Вставить("Комментарий"			, "");
	
	НастройкиКС.Вставить("ЭтоОшибка"			, Ложь);
	
	НастройкиКС.Вставить("Условие"				, "");
	НастройкиКС.Вставить("ДляДокументации"		, "");
	
	НастройкиКС.Вставить("ШаблонДетализации"	, "");
	НастройкиКС.Вставить("ШаблонДопСведений"	, "");
	
	Для каждого ЭлементКоллекции Из Заголовки Цикл
		Если НастройкиКС.Свойство(ЭлементКоллекции.Ключ) Тогда
			НастройкиКС.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
		КонецЕсли; 
	КонецЦикла;
	
	Приоритет = ДанныеКС.ПриоритетыРазделов.Найти(НастройкиКС.Раздел);
	Приоритет = ?(Приоритет = Неопределено, 0, Приоритет + 1);
	
	НастройкиКС.Вставить("Приоритет"			, Приоритет);
	
	Если Документирование Тогда
		ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, НастройкиКС);
		СтрокаОписания.НомерЭлемента = ДанныеКС.Счетчик;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьРезультат2023();
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("АдресТаблицыРезультата"		, ПараметрыКС.АдресРезультата);
	СтруктураРезультата.Вставить("АдресТаблицыРасшифровки"		, ПараметрыКС.АдресРасшифровки);
	СтруктураРезультата.Вставить("ЧислоОшибок"					, ДанныеКС.ЧислоОшибок);
	СтруктураРезультата.Вставить("ТекстЗаголовка"				, 
		РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ДанныеКС.Отчет));
	СтруктураРезультата.Вставить("МакетСКП"						, ДанныеКС.МакетСКП);
	СтруктураРезультата.Вставить("ВариантСКП"					, ДанныеКС.ВариантСКП);
	
	Возврат СтруктураРезультата;
		
КонецФункции

Функция СуммаПоказателей2023(Показатели, КодПоказателя = "")
	
	Результат = 0;
	
	Для каждого Показатель Из Показатели Цикл
		Если НЕ ЗначениеЗаполнено(КодПоказателя) Тогда
			Результат = Результат + Показатель.Значение.Значение;
		ИначеЕсли СтрНайти(Показатель.Ключ, КодПоказателя) = 0 Тогда
			Продолжить;
		Иначе
			Результат = Результат + Показатель.Значение.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НольИлиЕдиница2023(ИсходноеЧисло)
	
	Если ИсходноеЧисло = 0 ИЛИ ИсходноеЧисло = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЗначСтроки(ЗначениеСтроки)
	
	Возврат ?(ЗначениеЗаполнено(ЗначениеСтроки), ЗначениеСтроки, "(...)");
	
КонецФункции

#КонецОбласти

#Область КС_Проверки

#Область КС_Проверки_Критические_НК_РФ

#Область Проверки_Раздела_1

Процедура ПроверкаКС_6_1_1_к_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.1.1.к';
													|en = '6.1.1.к'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.030 Раздела 1 >= 0';
													|en = 'Сумма налога в стр.030 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.030 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010003003_");
	
	ПроверкаКС_6_1_1_к_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_6_1_1_к_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001", НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		НастройкиКС.ЭтоОшибка = Показатели.Р01С001.Значение < 0;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р01С001.Значение);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_6_1_2_к_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.1.2.к';
													|en = '6.1.2.к'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.040 Раздела 1 >= 0';
													|en = 'Сумма налога в стр.040 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010004003_");
	
	ПроверкаКС_6_1_1_к_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_6_2_к_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.2.к';
													|en = '6.2.к'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.040 Раздела 1 <= стр.(023 + 025 + 027) Раздела 1';
													|en = 'Сумма налога в стр.040 Раздела 1 <= стр.(023 + 025 + 027) Раздела 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2 (%3 + %4 + %5)';
													|en = '%1 <= %2 (%3 + %4 + %5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П000010004003_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Показатели.Р01С023.Значение + Показатели.Р01С025.Значение + Показатели.Р01С027.Значение;
		НастройкиКС.ЭтоОшибка = Показатели.Р01С040.Значение > РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р01С040.Значение, РасчетнаяСумма, Показатели.Р01С023.Значение, Показатели.Р01С025.Значение, 
			Показатели.Р01С027.Значение);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_6_3_к_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.3.к';
													|en = '6.3.к'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов ';
			|en = 'Сумма налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов '") +
		НСтр("ru = 'Раздела 2.2 + стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, если признак СЗПК ';
			|en = 'Раздела 2.2 + стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, если признак СЗПК '") + 
		НСтр("ru = 'в стр.007 Раздела 1 не заполнен';
			|en = 'в стр.007 Раздела 1 не заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5), если значение %6 не заполнено';
													|en = '%1 = %2 (%3 + %4 + %5), если значение %6 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.021 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.10.2022 N БС-4-21/14195@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.10.2022 N БС-4-21/14195@'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Значение СЗПК в стр.007 Раздела 1 не заполнено';
													|en = 'Значение СЗПК в стр.007 Раздела 1 не заполнено'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_04_2023_код();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КС_Проверки_Основные

#Область КС_Проверки_Раздела_1

Процедура ПроверкаКС_1_01_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.1';
													|en = '1.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО ';
			|en = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода ОКТМО';
													|en = 'Ошибочное значение кода ОКТМО'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение ОКТМО из классификатора ОКТМО");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("ДляДокументации"	, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	ПодготовитьНастройки2023(Заголовки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_02_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.2';
													|en = '1.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.020 Раздела 1 ';
													|en = 'Значение КБК в стр.020 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение КБК';
													|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите КБК в стр.020 Раздела 1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010002003_");
	ПроверкаКС_1_02_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_02_2023_код()
	
	Перем Список;
		
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"		, НастройкиКС.Показатель);
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		Если ПараметрыКС.СписочныеЗначения.Свойство(Лев(Показатели.Р01С001.ИмяПоказателя, 13), Список) Тогда
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели.Р01С001.Значение) = Неопределено;
		Иначе
			НастройкиКС.ЭтоОшибка = Ложь;
		КонецЕсли; 
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_03_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.3';
													|en = '1.3'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма исчисленного налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов ';
			|en = 'Сумма исчисленного налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов '") +
		НСтр("ru = 'Раздела 2.2 по соответствующим ОКТМО, КБК, СЗПК, если признак СЗПК в стр.007 Раздела 1 заполнен';
			|en = 'Раздела 2.2 по соответствующим ОКТМО, КБК, СЗПК, если признак СЗПК в стр.007 Раздела 1 заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4) если значение %6 заполнено';
													|en = '%1 = %2 (%3 + %4) если значение %6 заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма исчисленного налога';
													|en = 'Ошибочная сумма исчисленного налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.021 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.382 НК РФ';
													|en = 'п.1 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Значение СЗПК в стр.007 Раздела 1 заполнено';
													|en = 'Значение СЗПК в стр.007 Раздела 1 заполнено'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_04_2023_код();
	
КонецПроцедуры

//Процедура ПроверкаКС_1_04_2023() -> КС 6.3.к

Процедура ПроверкаКС_1_04_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С007"		, "П000010000703_");
	ИменаПоказателей.Вставить("Р01С010"		, "П000010001003_");
	ИменаПоказателей.Вставить("Р01С020"		, "П000010002003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р22С260"		, "П000220026003");
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р01.ОКТМО + ВТ_Р01.КБК + ВТ_Р01.СЗПК КАК Ключ,
	|	ВТ_Р01.СЗПК		КАК П000010000703_,
	|	ВТ_Р01.ОКТМО	КАК П000010001003_,
	|	ВТ_Р01.КБК		КАК П000010002003_,
	|	ВТ_Р01.Р01С021	КАК П000010002103_,
	|	ВТ_Р01.НомерСтраницы	КАК НомерСтраницы,
	|	ВТ_Р01.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ01 КАК ВТ_Р01
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(П000010000703_),
	|	МИНИМУМ(П000010001003_),
	|	МИНИМУМ(П000010002003_),
	|	МИНИМУМ(НомерСтраницы),
	|	МИНИМУМ(НомерСтроки),
	|	СУММА(П000010002103_)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р02.ОКТМО + ВТ_Р02.КБК + ВТ_Р02.СЗПК КАК Ключ,
	|	ВТ_Р02.Р02С260	КАК П000020026003,
	|	ВТ_Р02.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000020026003)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р22.ОКТМО + ВТ_Р22.КБК + ВТ_Р22.СЗПК КАК Ключ,
	|	ВТ_Р22.Р22С260	КАК П000220026003,
	|	ВТ_Р22.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ22 КАК ВТ_Р22
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000220026003)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.ОКТМО + ВТ_Р03.КБК КАК Ключ,
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000030013003)
	|ПО
	|	Ключ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР22= Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		
		Если НастройкиКС.НомерКС = "1.3" И НЕ ЗначениеЗаполнено(ВыборкаР1.П000010000703_) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если НастройкиКС.НомерКС = "6.3.к" И ЗначениеЗаполнено(ВыборкаР1.П000010000703_) Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", ВыборкаР1.НомерСтроки);
		ЗарегистрироватьПроверку2023();
		СуммаР2 	= 0;
		СуммаР22 	= 0;
		СуммаР3 	= 0;
		
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р01С007, ВыборкаР1, ВыборкаР1.НомерСтроки);
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р01С010, ВыборкаР1, ВыборкаР1.НомерСтроки);
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р01С020, ВыборкаР1, ВыборкаР1.НомерСтроки);
			
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р01С021, Выборка, Выборка.НомерСтроки);
		КонецЦикла;
		
		Если ВыборкаР2.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР2 = ВыборкаР2.П000020026003;
			Выборка = ВыборкаР2.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С260, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		Если ВыборкаР22.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР22 = ВыборкаР22.П000220026003;
			Выборка = ВыборкаР22.Выбрать();
			Если НЕ ДанныеКС.Турборежим22 Тогда
				Пока Выборка.Следующий() Цикл
					ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р22С260, Выборка);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли; 
		
		Если ВыборкаР3.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР3 = ВыборкаР3.П000030013003;
			Выборка = ВыборкаР3.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р03С130, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		РасчетнаяСумма = СуммаР2 + СуммаР22 + СуммаР3;
		НастройкиКС.ЭтоОшибка = НЕ ВыборкаР1.П000010002103_ = РасчетнаяСумма;
		НастройкиКС.Детализация	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			ВыборкаР1.П000010002103_, РасчетнаяСумма, СуммаР2, СуммаР22, СуммаР3, ЗначСтроки(ВыборкаР1.П000010000703_));
		ДополнитьТаблицуРезультата2023();
		ВыборкаР2.Сбросить();
		ВыборкаР22.Сбросить();
		ВыборкаР3.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_05_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.5';
													|en = '1.5'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + ';
			|en = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) Раздела 1, если результат >= 0, иначе 0';
			|en = 'стр.025 + стр.027) Раздела 1, если результат >= 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4 - %5 - %6)';
													|en = '%1 = %2 (%3 - %4 - %5 - %6)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога, подлежащая уплате';
													|en = 'Ошибочная сумма налога, подлежащая уплате'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.030 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С030"		, "П000010003003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р01С023.Инверсия = Истина;
	Показатели.Р01С025.Инверсия = Истина;
	Показатели.Р01С027.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей2023(Показатели) - Показатели.Р01С030.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С030.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С030.Значение, 
			РасчетнаяСумма, Показатели.Р01С021.Значение, -Показатели.Р01С023.Значение, -Показатели.Р01С025.Значение, 
			-Показатели.Р01С027.Значение);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_06_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.6';
													|en = '1.6'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + ';
			|en = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) - стр.021 Раздела 1, если результат > 0, иначе 0';
			|en = 'стр.025 + стр.027) - стр.021 Раздела 1, если результат > 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5 - %6)';
													|en = '%1 = %2 (%3 + %4 + %5 - %6)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога, исчисленная к уменьшению';
													|en = 'Ошибочная сумма налога, исчисленная к уменьшению'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П000010004003_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р01С021.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей2023(Показатели) - Показатели.Р01С040.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С040.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С040.Значение, 
			РасчетнаяСумма, Показатели.Р01С023.Значение, Показатели.Р01С025.Значение, Показатели.Р01С027.Значение,
			-Показатели.Р01С021.Значение);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_2

Процедура ПроверкаКС_1_07_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.7';
													|en = '1.7'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость недвижимого имущества в стр.150 Раздела 2 = гр.3 (стр.020 ';
			|en = 'Среднегодовая стоимость недвижимого имущества в стр.150 Раздела 2 = гр.3 (стр.020 '") +
		НСтр("ru = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 ';
			|en = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 '") +
		НСтр("ru = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2 / 13';
			|en = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2 / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость имущества в стр.150 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020015003");
	НастройкиКС.Вставить("Графа"			, "3");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_08_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_08_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.8';
													|en = '1.8'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества в стр.170 Раздела 2 = гр.4 (';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества в стр.170 Раздела 2 = гр.4 ('") +
		НСтр("ru = 'стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + ';
			|en = 'стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + '") +
		НСтр("ru = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2) / 13';
			|en = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2) / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020017003");
	НастройкиКС.Вставить("Графа"			, "4");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_08_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_08_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.Показатель);
	ИменаПоказателей.Вставить("Р02П020"		, "П00002000200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П030"		, "П00002000300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П040"		, "П00002000400" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П050"		, "П00002000500" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П060"		, "П00002000600" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П070"		, "П00002000700" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П080"		, "П00002000800" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П090"		, "П00002000900" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П100"		, "П00002001000" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П110"		, "П00002001100" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П120"		, "П00002001200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П130"		, "П00002001300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П140"		, "П00002001400" + НастройкиКС.Графа);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		СуммаПоказателей = СуммаПоказателей2023(Показатели) - Показатели.Р02С001.Значение;
		РасчетнаяСумма = Окр(СуммаПоказателей / 13);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С001.Значение, 
			РасчетнаяСумма, СуммаПоказателей);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2023_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9.1';
													|en = '1.9.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0';
			|en = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, если значение %2 не заполнено';
													|en = '%1 = 0, если значение %2 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Укажите среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_09_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2023_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9.2';
													|en = '1.9.2'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0';
			|en = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если значение %2 заполнено';
													|en = '%1 ≠ 0, если значение %2 заполнено'"));
	Заголовки.Вставить("Нарушение"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_09_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С160"		, "П000020016003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		Если НастройкиКС.УсловиеРавноНулю Тогда
			НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		Иначе
			НастройкиКС.ЭтоОшибка	= ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И НЕ ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		КонецЕсли;
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р02С170.Значение, 
			Показатели.Р02С160.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_10_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.10';
													|en = '1.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2 х стр.180 Раздела 2, если код вида ';
			|en = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2 х стр.180 Раздела 2, если код вида '") +
		НСтр("ru = 'имущества в стр.001 Раздела 2 = 02';
			|en = 'имущества в стр.001 Раздела 2 = 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 ((%2 - %3) х %4/%5)';
													|en = '%1 = %6 ((%2 - %3) х %4/%5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная налоговая база';
													|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_11_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_11_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.11';
													|en = '1.11'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2, если код вида имущества в ';
			|en = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 02';
			|en = 'стр.001 Раздела 2 ≠ 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 (%2 - %3)';
													|en = '%1 = %6 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная налоговая база';
													|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_11_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_11_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С150"		, "П000020015003");
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С181"		, "П000020018003_Числ");
	ИменаПоказателей.Вставить("Р02С182"		, "П000020018003_Знам");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р02С181.Расшифровывать	= НастройкиКС.КодИмущества2;
	Показатели.Р02С182.Расшифровывать	= НастройкиКС.КодИмущества2;
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		Разность = Макс(Показатели.Р02С150.Значение - Показатели.Р02С170.Значение, 0);
		Множитель = ?(Показатели.Р02С182.Значение = 0, 0, Показатели.Р02С181.Значение / Показатели.Р02С182.Значение);
		Множитель = ?(НастройкиКС.КодИмущества2, Множитель, 1);
		РасчетнаяСумма = Окр(Разность * Множитель);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества2 И Показатели.Р02С001.Значение = "02" 
			ИЛИ НЕ НастройкиКС.КодИмущества2 И НЕ Показатели.Р02С001.Значение = "02")
			И НЕ Показатели.Р02С190.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С190.Значение, Показатели.Р02С150.Значение, Показатели.Р02С170.Значение, 
			Показатели.Р02С181.Значение, Показатели.Р02С182.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_12_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.12';
													|en = '1.12'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210 х стр.215)';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210 х стр.215)'") +
		НСтр("ru = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 = 04, 09, 15';
			|en = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 = 04, 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 х %4 / 100)';
													|en = '%1 = %5 (%2 х %3 х %4 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_13_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_13_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.13';
													|en = '1.13'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2 / 100, ес';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2 / 100, ес'") +
		НСтр("ru = 'ли код вида имущества в стр.001 Раздела 2 ≠ 04, 09, 15';
			|en = 'ли код вида имущества в стр.001 Раздела 2 ≠ 04, 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 / 100)';
													|en = '%1 = %5 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_13_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_13_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С210"		, "П000020021003");
	ИменаПоказателей.Вставить("Р02С215"		, "П000020021503");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р02С210.Округление = Ложь;
	
	ОтдельныеКодыИмущества = "04,09,15";
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С220, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С190, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С210, СтраницаР02);
		
		ЗаполнитьПоказатель2023(Показатели.Р02С215, СтраницаР02);
		Показатели.Р02С215.Значение = ?(Показатели.Р02С215.Значение = "", 1, Число(Показатели.Р02С215.Значение));
		Показатели.Р02С215.Значение = ?(НастройкиКС.КодИмущества9, Показатели.Р02С215.Значение, 1);
		
		Если НастройкиКС.КодИмущества9 Тогда
			РасшифроватьПоказатель2023(Показатели.Р02С215);
		КонецЕсли;
		ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С001, СтраницаР02);
		
		КодНайден = НЕ СтрНайти(ОтдельныеКодыИмущества, Показатели.Р02С001.Значение) = 0;
		РасчетнаяСумма = Окр(Показатели.Р02С190.Значение * Показатели.Р02С210.Значение * Показатели.Р02С215.Значение / 100);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р02С001.Значение)
			И (НастройкиКС.КодИмущества9 И КодНайден ИЛИ НЕ НастройкиКС.КодИмущества9 И НЕ КодНайден)
			И НЕ Показатели.Р02С220.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С220.Значение, Показатели.Р02С190.Значение, Показатели.Р02С210.Значение, 
			Показатели.Р02С215.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_14_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.14';
													|en = '1.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 '") +
		НСтр("ru = '= 2012500';
			|en = '= 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма льготы';
													|en = 'Ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы в стр.240 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, "П000020023003_КодЛьготы");
	ИменаПоказателей.Вставить("Р02С002"		, "П000020024003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р02С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р02С002.Значение);
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С002.Значение, 
			Показатели.Р02С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_15_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.15';
													|en = '1.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.160 Раздела 2 = 0';
													|en = 'Код льготы в стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020016003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_16_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.16';
													|en = '1.16'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.170 Раздела 2 = 0';
													|en = 'Сумма льготы в стр.170 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020017003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_17_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.17';
													|en = '1.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.200 Раздела 2 = 0';
													|en = 'Код льготы в стр.200 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020020003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_18_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.18';
													|en = '1.18'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.230 Раздела 2 = 0';
													|en = 'Код льготы в стр.230 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020023003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_19_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.19';
													|en = '1.19'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.240 Раздела 2 = 0';
													|en = 'Сумма льготы в стр.240 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020024003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_19_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р02С001.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, ?(ТипЗнч(Показатели.Р02С001.Значение) 
			= Тип("Число"), Показатели.Р02С001.Значение, Показатели.Р02С001.ЗначениеСтр));
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_20_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.20';
													|en = '1.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если'") +
		НСтр("ru = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2';
			|en = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите сумму налога в стр.260 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Истина);
	НастройкиКС.Вставить("Стр250Больше"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_21_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.21';
													|en = '1.21'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = (стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = (стр.220'") +
		НСтр("ru = ' - стр.240 - стр.250) Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела';
			|en = ' - стр.240 - стр.250) Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела'") +
		НСтр("ru = ' 2 < (стр. 220 - стр.240) Раздела 2';
			|en = ' 2 < (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3 - %4)';
													|en = '%1 = %5 (%2 - %3 - %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Истина);
	НастройкиКС.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_22_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.22';
													|en = '1.22'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220'") +
		НСтр("ru = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04 и результат > 0, иначе 0';
			|en = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04 и результат > 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3)';
													|en = '%1 = %5 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.375 НК РФ';
													|en = 'п.1 ст.375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Ложь);
	НастройкиКС.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_22_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С240"		, "П000020024003");
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р02С250.Расшифровывать = НастройкиКС.КодИмущества4;
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		Показатели.Р02С250.Значение = ?(НастройкиКС.КодИмущества4, Показатели.Р02С250.Значение, 0);
		РасчетнаяСумма = Макс(Показатели.Р02С220.Значение - Показатели.Р02С240.Значение - Показатели.Р02С250.Значение, 0);
		
		Если НастройкиКС.КодИмущества4 И НастройкиКС.Стр250Больше Тогда
			НастройкиКС.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение >= (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли НастройкиКС.КодИмущества4 И НЕ НастройкиКС.Стр250Больше Тогда
			НастройкиКС.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение < (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли НЕ НастройкиКС.КодИмущества4 Тогда
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" 
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		Иначе
			НастройкиКС.ЭтоОшибка = Ложь;
		КонецЕсли;
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С260.Значение, Показатели.Р02С220.Значение, Показатели.Р02С240.Значение, 
			Показатели.Р02С250.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_21

Процедура ПроверкаКС_1_23_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.23';
													|en = '1.23'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум';
			|en = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум'") +
		НСтр("ru = 'ноженной на количество листов Раздела 2.1';
			|en = 'ноженной на количество листов Раздела 2.1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%3 (%1 - %2) <= %5 (0,49 х %4)';
													|en = '%3 (%1 - %2) <= %5 (0,49 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма остаточной стоимости недвижимого имущества';
													|en = 'Ошибочная сумма остаточной стоимости недвижимого имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните стоимость имущества в стр.140 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 374 НК РФ';
													|en = 'п. 1 ст. 374 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С140"		, "П000020014003");
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьПроверку2023();
	СуммаР02 = 0;
	СуммаР21 = 0;
	КоличествоР21 = 0;
	
	Если ВыборкаР1.Следующий() Тогда
		СуммаР02 = ВыборкаР1.П000020014003;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р02С140, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР21 = ВыборкаР2.П000210005003;
		Выборка = ВыборкаР2.Выбрать();
		КоличествоР21 = Выборка.Количество();
		Если НЕ ДанныеКС.Турборежим21 Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	РасчетнаяСумма1			= СуммаР21 - СуммаР02;
	РасчетнаяСумма1			= ?(РасчетнаяСумма1 < 0, - РасчетнаяСумма1, РасчетнаяСумма1);
	РасчетнаяСумма2			= Окр(0.49 * КоличествоР21);
	НастройкиКС.ЭтоОшибка	= НЕ РасчетнаяСумма1 <= РасчетнаяСумма2;
	НастройкиКС.Детализация	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
		СуммаР21, СуммаР02, РасчетнаяСумма1, КоличествоР21, РасчетнаяСумма2);
	ДополнитьТаблицуРезультата2023();
	
КонецПроцедуры

Процедура ПроверкаКС_1_24_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.24';
													|en = '1.24'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен';
			|en = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, когда Раздел 3 не заполнен';
													|en = '%1 ≠ 0, когда Раздел 3 не заполнен'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма остаточной стоимости основных средств';
													|en = 'Ошибочная сумма остаточной стоимости основных средств'"));
	Заголовки.Вставить("Рекомендации"		, "Заполните стр.050 Раздела 2.1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000030013003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР2 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР21 = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьПроверку2023();
	СуммаР02 = 0;
	СуммаР03 = 0;
	СуммаР21 = 0;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР02 = ВыборкаР2.П000020014003;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		СуммаР03 = ВыборкаР3.П000030013003;
	КонецЕсли;
	
	Если ВыборкаР21.Следующий() Тогда
		СуммаР21 = ВыборкаР21.П000210005003;
		Выборка = ВыборкаР21.Выбрать();
		
		Если НЕ ДанныеКС.Турборежим21 Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2023(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(СуммаР03) И ЗначениеЗаполнено(СуммаР02) И НЕ ЗначениеЗаполнено(СуммаР21);
	НастройкиКС.Детализация	= СтрШаблон(НастройкиКС.ШаблонДетализации, СуммаР21);
	ДополнитьТаблицуРезультата2023();
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_22

Процедура ПроверкаКС_1_25_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.25';
													|en = '1.25'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта недвижимого имущества в стр.150 Раздела 2.2 = гр.3 (стр.020 ';
			|en = 'Среднегодовая стоимость объекта недвижимого имущества в стр.150 Раздела 2.2 = гр.3 (стр.020 '") +
		НСтр("ru = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 ';
			|en = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 '") +
		НСтр("ru = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2.2 / 13';
			|en = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2.2 / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость объекта имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость объекта имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость объекта имущества в стр.150 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220015003");
	НастройкиКС.Вставить("Графа"			, "3");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_26_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_26_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.26';
													|en = '1.26'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 '") +
		НСтр("ru = '= гр.4 (стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + ';
			|en = '= гр.4 (стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + '") +
		НСтр("ru = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2.2) / 13';
			|en = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2.2) / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Уточните среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220017003");
	НастройкиКС.Вставить("Графа"			, "4");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_26_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_26_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель);
	ИменаПоказателей.Вставить("Р22П020"		, "П00022000200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П030"		, "П00022000300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П040"		, "П00022000400" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П050"		, "П00022000500" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П060"		, "П00022000600" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П070"		, "П00022000700" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П080"		, "П00022000800" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П090"		, "П00022000900" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П100"		, "П00022001000" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П110"		, "П00022001100" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П120"		, "П00022001200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П130"		, "П00022001300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П140"		, "П00022001400" + НастройкиКС.Графа);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		
		СуммаПоказателей = СуммаПоказателей2023(Показатели) - Показатели.Р22С001.Значение;
		РасчетнаяСумма = Окр(СуммаПоказателей / 13);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р22С001.Значение = РасчетнаяСумма;
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С001.Значение, 
			РасчетнаяСумма, СуммаПоказателей);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2023_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27.1';
													|en = '1.27.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в '") +
		НСтр("ru = 'стр.170 Раздела 2.2 = 0, если значение стр.160 Раздела 2.2 = 0';
			|en = 'стр.170 Раздела 2.2 = 0, если значение стр.160 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, если значение %2 не заполнено';
													|en = '%1 = 0, если значение %2 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Укажите среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_27_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2023_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27.2';
													|en = '1.27.2'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в '") +
		НСтр("ru = 'стр.170 Раздела 2.2 ≠ 0, если значение стр.160 Раздела 2.2 ≠ 0';
			|en = 'стр.170 Раздела 2.2 ≠ 0, если значение стр.160 Раздела 2.2 ≠ 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если значение %2 заполнено';
													|en = '%1 ≠ 0, если значение %2 заполнено'"));
	Заголовки.Вставить("Нарушение"		, 
		НСтр("ru = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Уточните среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_27_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С170"		, "П000220017003");
	ИменаПоказателей.Вставить("Р22С160"		, "П000220016003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		
		Если НастройкиКС.УсловиеРавноНулю Тогда
			НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(Показатели.Р22С160.Значение) 
				И ЗначениеЗаполнено(Показатели.Р22С170.Значение);
		Иначе
			НастройкиКС.ЭтоОшибка	= ЗначениеЗаполнено(Показатели.Р22С160.Значение) 
				И НЕ ЗначениеЗаполнено(Показатели.Р22С170.Значение);
		КонецЕсли;
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С170.Значение, 
			Показатели.Р22С160.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_28_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.28';
													|en = '1.28'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 = 0';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220017003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_29_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.29';
													|en = '1.29'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2 х стр.180 Раздела 2.2, ';
			|en = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2 х стр.180 Раздела 2.2, '") +
		НСтр("ru = 'если код вида имущества в стр.001 Раздела 2.2 = 02';
			|en = 'если код вида имущества в стр.001 Раздела 2.2 = 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 ((%2 - %3) х %4/%5)';
													|en = '%1 = %6 ((%2 - %3) х %4/%5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная налоговая база';
													|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_30_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.30';
													|en = '1.30'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2, если код вида имущества в ';
			|en = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 02, 04';
			|en = 'стр.001 Раздела 2 ≠ 02, 04'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 (%2 - %3)';
													|en = '%1 = %6 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная налоговая база';
													|en = 'Ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_30_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С190"		, "П000220019003");
	ИменаПоказателей.Вставить("Р22С150"		, "П000220015003");
	ИменаПоказателей.Вставить("Р22С170"		, "П000220017003");
	ИменаПоказателей.Вставить("Р22С181"		, "П000220018003_Числ");
	ИменаПоказателей.Вставить("Р22С182"		, "П000220018003_Знам");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р22С181.Расшифровывать	= НастройкиКС.КодИмущества2;
	Показатели.Р22С182.Расшифровывать	= НастройкиКС.КодИмущества2;
	
	СтрокаКодов = ("02,04");
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		
		Разность = Макс(Показатели.Р22С150.Значение - Показатели.Р22С170.Значение, 0);
		Множитель = ?(Показатели.Р22С182.Значение = 0, 0, Показатели.Р22С181.Значение / Показатели.Р22С182.Значение);
		Множитель = ?(НастройкиКС.КодИмущества2, Множитель, 1);
		РасчетнаяСумма = Окр(Разность * Множитель);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества2 И Показатели.Р22С001.Значение = "02" 
			ИЛИ НЕ НастройкиКС.КодИмущества2 И СтрНайти(СтрокаКодов, Показатели.Р22С001.Значение) = 0)
			И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С190.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С190.Значение, Показатели.Р22С150.Значение, Показатели.Р22С170.Значение, 
			Показатели.Р22С181.Значение, Показатели.Р22С182.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_31_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.31';
													|en = '1.31'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2.2 = (стр.190 х стр.210 х стр.215) Раздела 2.2 ';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2.2 = (стр.190 х стр.210 х стр.215) Раздела 2.2 '") +
		НСтр("ru = '/ 100, если код вида имущества в стр.001 Раздела 2.2 = 09, 15';
			|en = '/ 100, если код вида имущества в стр.001 Раздела 2.2 = 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 х %4 / 100)';
													|en = '%1 = %5 (%2 х %3 х %4 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_33_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_32_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.32';
													|en = '1.32'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.200 Раздела 2.2 = 0';
													|en = 'Код льготы в стр.200 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220020003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_33_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.33';
													|en = '1.33'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2.2 / 100, ес';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2.2 / 100, ес'") +
		НСтр("ru = 'ли код вида имущества в стр.001 Раздела 2.2 ≠ 09, 15';
			|en = 'ли код вида имущества в стр.001 Раздела 2.2 ≠ 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 / 100)';
													|en = '%1 = %5 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_33_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_33_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С190"		, "П000220019003");
	ИменаПоказателей.Вставить("Р22С210"		, "П000220021003");
	ИменаПоказателей.Вставить("Р22С215"		, "П000220021503");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р22С210.Округление = Ложь;
	
	ОтдельныеКодыИмущества = "09,15";
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		Показатели.Р22С215.Значение = ?(Показатели.Р22С215.Значение = "", 1, Число(Показатели.Р22С215.Значение));
		Показатели.Р22С215.Значение = ?(НастройкиКС.КодИмущества9, Показатели.Р22С215.Значение, 1);
		
		КодНайден = НЕ СтрНайти(ОтдельныеКодыИмущества, Показатели.Р22С001.Значение) = 0;
		РасчетнаяСумма = Окр(Показатели.Р22С190.Значение * Показатели.Р22С210.Значение * Показатели.Р22С215.Значение / 100);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества9 И КодНайден ИЛИ НЕ НастройкиКС.КодИмущества9 И НЕ КодНайден)
		   	И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С220.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатель2023(Показатели.Р22С220);
		РасшифроватьПоказатель2023(Показатели.Р22С190);
		РасшифроватьПоказатель2023(Показатели.Р22С210);
		
		Если НастройкиКС.КодИмущества9 Тогда
			РасшифроватьПоказатель2023(Показатели.Р22С215);
		КонецЕсли;
		РасшифроватьПоказатель2023(Показатели.Р22С001);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С220.Значение, Показатели.Р22С190.Значение, Показатели.Р22С210.Значение, 
			Показатели.Р22С215.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_34_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.34';
													|en = '1.34'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.230 Раздела 2.2 = 0';
													|en = 'Код льготы в стр.230 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220023003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_34_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатель2023(Показатели.Р22С001, СтраницаР22);
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р22С001.Значение);
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатель2023(Показатели.Р22С001);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, ?(ТипЗнч(Показатели.Р22С001.Значение) 
			= Тип("Число"), Показатели.Р22С001.Значение, Показатели.Р22С001.ЗначениеСтр));
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_35_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.35';
													|en = '1.35'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2.2 ≠ 0, если значение стр.230 ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2.2 ≠ 0, если значение стр.230 '") +
		НСтр("ru = 'Раздела 2.2 = 2012500';
			|en = 'Раздела 2.2 = 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма льготы';
													|en = 'Ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы в стр.240 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель1"		, "П000220023003_КодЛьготы");
	НастройкиКС.Вставить("Показатель2"		, "П000220024003");
	НастройкиКС.Вставить("КодЛьготы"		, "2012500");
	
	ПроверкаКС_1_36_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_36_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.36';
													|en = '1.36'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налогового вычета в стр.250 Раздела 2.2 ≠ 0, если значение стр.245 ';
			|en = 'Сумма налогового вычета в стр.250 Раздела 2.2 ≠ 0, если значение стр.245 '") +
		НСтр("ru = 'Раздела 2.2 = 2010601';
			|en = 'Раздела 2.2 = 2010601'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налогового вычета';
													|en = 'Ошибочная сумма налогового вычета'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налогового вычета в стр.250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель1"		, "П000220024503");
	НастройкиКС.Вставить("Показатель2"		, "П000220025003");
	НастройкиКС.Вставить("КодЛьготы"		, "2010601");
	
	ПроверкаКС_1_36_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_36_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель1);
	ИменаПоказателей.Вставить("Р22С002"		, НастройкиКС.Показатель2);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	МассивЗначений = СтрРазделить(НастройкиКС.КодЛьготы, ",", Ложь);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р22С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р22С002.Значение);
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р22С002.Значение, 
			Показатели.Р22С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_37_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.37';
													|en = '1.37'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налогового вычета в стр.250 Раздела 2.2 <= (стр.220 - стр.240) Раздела 2.2, если значение ';
			|en = 'Сумма налогового вычета в стр.250 Раздела 2.2 <= (стр.220 - стр.240) Раздела 2.2, если значение '") +
		НСтр("ru = 'стр.245 Раздела 2.2 = 2010601';
			|en = 'стр.245 Раздела 2.2 = 2010601'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2 (%3 - %4), если %5 = 2010601';
													|en = '%1 <= %2 (%3 - %4), если %5 = 2010601'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налогового вычета';
													|en = 'Ошибочная сумма налогового вычета'"));
	Заголовки.Вставить("Рекомендации"		, "Уменьшите сумму налогового вычета в стр.250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С240"		, "П000220024003");
	ИменаПоказателей.Вставить("Р22С245"		, "П000220024503");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		РасчетнаяСумма = Макс(Показатели.Р22С220.Значение - Показатели.Р22С240.Значение, 0);
		НастройкиКС.ЭтоОшибка = Показатели.Р22С245.Значение = "2010601" И Показатели.Р22С250.Значение > РасчетнаяСумма; 
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С250.Значение, РасчетнаяСумма, 
			Показатели.Р22С220.Значение, Показатели.Р22С240.Значение, Показатели.Р22С245.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_38_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.38';
													|en = '1.38'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.240 Раздела 2.2 = 0';
													|en = 'Сумма льготы в стр.240 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220024003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_39_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.39';
													|en = '1.39'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код налоговой льготы в стр.245 Раздела 2.2 и сумма налогового вычета в стр.250 Раздела 2.2 ';
			|en = 'Код налоговой льготы в стр.245 Раздела 2.2 и сумма налогового вычета в стр.250 Раздела 2.2 '") +
		НСтр("ru = 'не заполняются, если код вида имущества в стр.001 Раздела 2.2 = 15';
			|en = 'не заполняются, если код вида имущества в стр.001 Раздела 2.2 = 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = (..) и %2 = 0, если %3 = 15';
													|en = '%1 = (..) и %2 = 0, если %3 = 15'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Удалите значения в стр.245, 250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С245"		, "П000220024503");
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		НастройкиКС.ЭтоОшибка = Показатели.Р22С001.Значение = "15" И (ЗначениеЗаполнено(Показатели.Р22С245.Значение) 
			ИЛИ ЗначениеЗаполнено(Показатели.Р22С250.Значение));
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С245.ЗначениеСтр, Показатели.Р22С250.Значение, Показатели.Р22С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_40_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.40';
													|en = '1.40'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = '") +
		НСтр("ru = '(стр.220 - стр.240) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 = 15';
			|en = '(стр.220 - стр.240) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 = 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3)';
													|en = '%1 = %5 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодИмущества15"	, Истина);
	ПроверкаКС_1_41_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_41_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.41';
													|en = '1.41'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = '") +
		НСтр("ru = '(стр.220 - стр.240 - стр.250) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 ≠ 04, 15';
			|en = '(стр.220 - стр.240 - стр.250) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 ≠ 04, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3 - %4)';
													|en = '%1 = %5 (%2 - %3 - %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.375 НК РФ';
													|en = 'п.1 ст.375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодИмущества15"	, Ложь);
	ПроверкаКС_1_41_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_41_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С260"		, "П000220026003");
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С240"		, "П000220024003");
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р22С250.Расшифровывать = НастройкиКС.КодИмущества15;
	
	СтрокаКодов = ("04,15");
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2023(Показатели, СтраницаР22);
		Показатели.Р22С250.Значение = ?(НастройкиКС.КодИмущества15, 0, Показатели.Р22С250.Значение);
		
		РасчетнаяСумма = Макс(Показатели.Р22С220.Значение - Показатели.Р22С240.Значение - Показатели.Р22С250.Значение, 0);
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества15 И Показатели.Р22С001.Значение = "15" 
			ИЛИ НЕ НастройкиКС.КодИмущества15 И СтрНайти(СтрокаКодов, Показатели.Р22С001.Значение) = 0)
			И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С260.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		РасшифроватьПоказатели2023(Показатели);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С260.Значение, Показатели.Р22С220.Значение, Показатели.Р22С240.Значение, 
			Показатели.Р22С250.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_3

Процедура ПроверкаКС_1_42_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.42';
													|en = '1.42'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.030 х стр.050) Раздела 3, ';
			|en = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.030 х стр.050) Раздела 3, '") +
		НСтр("ru = 'если стр.030 Раздела 3 заполнена';
			|en = 'если стр.030 Раздела 3 заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 ((%2 - %3) х %4/%5 х %6/%7)';
													|en = '%1 = %8 ((%2 - %3) х %4/%5 х %6/%7)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налоговой базы';
													|en = 'Ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налоговой базы в стр.060 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УчитыватьСтр030"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_43_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_43_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.43';
													|en = '1.43'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.050) Раздела 3, если ';
			|en = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.050) Раздела 3, если '") +
		НСтр("ru = 'стр.030 Раздела 3 не заполнена';
			|en = 'стр.030 Раздела 3 не заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 ((%2 - %3) х %6/%7)';
													|en = '%1 = %8 ((%2 - %3) х %6/%7)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налоговой базы';
													|en = 'Ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налоговой базы в стр.060 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("УчитыватьСтр030"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_43_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_43_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С020"		, "П000030002003");
	ИменаПоказателей.Вставить("Р03С025"		, "П000030002503");
	ИменаПоказателей.Вставить("Р03С031"		, "П000030003003_Числ");
	ИменаПоказателей.Вставить("Р03С032"		, "П000030003003_Знам");
	ИменаПоказателей.Вставить("Р03С051"		, "П000030005003_Числ");
	ИменаПоказателей.Вставить("Р03С052"		, "П000030005003_Знам");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р03С031.Округление = Ложь;
	Показатели.Р03С032.Округление = Ложь;
	Показатели.Р03С051.Округление = Ложь;
	Показатели.Р03С052.Округление = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		Показатели.Р03С031.Расшифровывать = НастройкиКС.УчитыватьСтр030;
		Показатели.Р03С032.Расшифровывать = НастройкиКС.УчитыватьСтр030;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		Стр030Заполнена = ЗначениеЗаполнено(Показатели.Р03С032.Значение);
		Разность = Макс(Показатели.Р03С020.Значение - Показатели.Р03С025.Значение, 0);
		Стр030 = ?(Показатели.Р03С032.Значение = 0, 1, Показатели.Р03С031.Значение / Показатели.Р03С032.Значение);
		Стр050 = ?(Показатели.Р03С052.Значение = 0, 1, Показатели.Р03С051.Значение / Показатели.Р03С052.Значение);
		РасчетнаяСумма = Окр(Разность * Стр030 * Стр050);
			
		НастройкиКС.ЭтоОшибка = (НастройкиКС.УчитыватьСтр030 И Стр030Заполнена
			ИЛИ НЕ НастройкиКС.УчитыватьСтр030 И НЕ Стр030Заполнена) И НЕ Показатели.Р03С060.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С060.Значение, Показатели.Р03С020.Значение, Показатели.Р03С025.Значение, Показатели.Р03С031.Значение,
			Показатели.Р03С032.Значение, Показатели.Р03С051.Значение, Показатели.Р03С052.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_44_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.44';
													|en = '1.44'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Коэффициент Ки в стр.095 Раздела 3 должен быть меньше 1, если коэффициент Кв в стр.090 Раздела 3 больш';
			|en = 'Коэффициент Ки в стр.095 Раздела 3 должен быть меньше 1, если коэффициент Кв в стр.090 Раздела 3 больш'") +
		НСтр("ru = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0';
			|en = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1/%2 < 1';
													|en = '%1/%2 < 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение коэффициента Ки';
													|en = 'Ошибочное значение коэффициента Ки'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите значение коэффициента Ки в стр.095 Раздела 3 < 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р03С090.Расшифровывать = Ложь;
	Показатели.Р03С091.Расшифровывать = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 0, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 0, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		УсловиеВыполнено = НЕ НольИлиЕдиница2023(Р03С090_Значение) И Р03С095_Значение > 0;
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Р03С095_Значение < 1;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р03С095.Значение,
			Показатели.Р03С096.Значение);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_45_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.45';
													|en = '1.45'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090) Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090) Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %4/%5 / 100)';
													|en = '%1 = %8 (%2 х %3 х %4/%5 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Учитывать090");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_46_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.46';
													|en = '1.46'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090 х стр.095) ';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090 х стр.095) '") +
		НСтр("ru = 'Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = 'Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %4/%5 х %6/%7 / 100)';
													|en = '%1 = %8 (%2 х %3 х %4/%5 х %6/%7 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Учитывать090и095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_47_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.47';
													|en = '1.47'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.095) Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.095) Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %6/%7 / 100)';
													|en = '%1 = %8 (%2 х %3 х %6/%7 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("Учитывать095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_48_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.48';
													|en = '1.48'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080) Раздела 3 / 100, если  стр.090 Раздела ';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080) Раздела 3 / 100, если  стр.090 Раздела '") +
		НСтр("ru = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 / 100)';
													|en = '%1 = %8 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("БезМножителей");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_48_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С080"		, "П000030008003");
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р03С080.Округление = Ложь;
	Показатели.Р03С090.Расшифровывать = НастройкиКС.Свойство("Учитывать090") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С091.Расшифровывать = НастройкиКС.Свойство("Учитывать090") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С095.Расшифровывать = НастройкиКС.Свойство("Учитывать095") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С096.Расшифровывать = НастройкиКС.Свойство("Учитывать095") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 1, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 1, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		РасчетнаяСумма = Окр(Показатели.Р03С060.Значение * Показатели.Р03С080.Значение * Р03С090_Значение * 
			Р03С095_Значение / 100);
			
		НастройкиКС.ЭтоОшибка = (НЕ НольИлиЕдиница2023(Р03С090_Значение) И НольИлиЕдиница2023(Р03С095_Значение) 
			И НастройкиКС.Свойство("Учитывать090") 
			ИЛИ НЕ НольИлиЕдиница2023(Р03С090_Значение) И НЕ НольИлиЕдиница2023(Р03С095_Значение)
			И НастройкиКС.Свойство("Учитывать090и095") 
			ИЛИ НольИлиЕдиница2023(Р03С090_Значение) И НЕ НольИлиЕдиница2023(Р03С095_Значение)
			И НастройкиКС.Свойство("Учитывать095") 
			ИЛИ НольИлиЕдиница2023(Р03С090_Значение) И НольИлиЕдиница2023(Р03С095_Значение)
			И НастройкиКС.Свойство("БезМножителей")) 
			И НЕ Показатели.Р03С100.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С100.Значение, Показатели.Р03С060.Значение, Показатели.Р03С080.Значение, 
			Показатели.Р03С090.Значение, Показатели.Р03С091.Значение, Показатели.Р03С095.Значение, 
			Показатели.Р03С096.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_49_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.49';
													|en = '1.49'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.120 Раздела 3 ≠ 0, если значение стр.110 Раздела 3 = ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.120 Раздела 3 ≠ 0, если значение стр.110 Раздела 3 = '") +
		НСтр("ru = '2012500';
			|en = '2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0 если %2 = %3';
													|en = '%1 ≠ 0 если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма льготы';
													|en = 'Ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы, уменьшающую сумму налога в стр.120 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("ПоказательКода"	, "П000030011003_КодЛьготы");
	НастройкиКС.Вставить("ПоказательСуммы"	, "П000030012003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	ИменаПоказателей.Вставить("Р03С002"		, "П000030012003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р03С002.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С002.Значение, 
			Показатели.Р03С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_50_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.50';
													|en = '1.50'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кадастрового номера в стр.015 Раздела 3 не должно содержать символы %1 и буквы %2, если значе';
			|en = 'Значение кадастрового номера в стр.015 Раздела 3 не должно содержать символы %1 и буквы %2, если значе'") +
		НСтр("ru = 'ние кадастрового номера заполнено';
			|en = 'ние кадастрового номера заполнено'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кадастрового номера';
													|en = 'Ошибочное значение кадастрового номера'"));
	Заголовки.Вставить("Рекомендации"		, "Удалите из кадастрового номера в стр.015 Раздела 3 не рекомендованные символы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	
	СтрокаСимволов			= ". , ; "" / ! @ # $ % ^ & * () _ + | \ - ' ] [ } { ` ~ N ? < >";
	СтрокаБукв				= "О, З";
	Заголовки.Описание		= ПодставитьПараметрыВСтроку(Заголовки.Описание, СтрокаСимволов, СтрокаБукв);
	СтрокаСимволов			= СтрЗаменить(СтрокаСимволов + СтрокаБукв, " ", "");
	
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С015"		, "П000030001501");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		НедопустимыйСимвол = Ложь;
		
		Если ЗначениеЗаполнено(Показатели.Р03С015.Значение) Тогда
			ДлинаСтрСимволов = СтрДлина(СтрокаСимволов);
			Для Счетчик = 1 По ДлинаСтрСимволов Цикл
				Если НЕ Найти(Показатели.Р03С015.Значение, Сред(СтрокаСимволов, Счетчик, 1)) = 0 Тогда
					НедопустимыйСимвол = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли; 
		
		НастройкиКС.ЭтоОшибка = НедопустимыйСимвол;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С015.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_51_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.51';
													|en = '1.51'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000';
			|en = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.040 Раздела 3 = 2012000");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("ЦелевойПоказатель"	, "П000030004003_КодЛьготы");
	НастройкиКС.Вставить("БазовыйПоказатель"	, "П000030004003_Основание");
	НастройкиКС.Вставить("ЦелевоеЗначение"		, "2012000");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_52_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_52_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.52';
													|en = '1.52'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400';
			|en = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.070 Раздела 3 = 2012400");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	НастройкиКС.Вставить("ЦелевойПоказатель"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("БазовыйПоказатель"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("ЦелевоеЗначение"		, "2012400");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_52_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_52_2023_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, НастройкиКС.ЦелевойПоказатель);
	ИменаПоказателей.Вставить("Р03С002"		, НастройкиКС.БазовыйПоказатель);
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	Показатели.Р03С002.Расшифровывать = НЕ НастройкиКС.ЦелевойПоказатель = НастройкиКС.БазовыйПоказатель;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С002.Значение) 
			И НЕ Показатели.Р03С001.Значение = НастройкиКС.ЦелевоеЗначение;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_53_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.53';
													|en = '1.53'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500';
			|en = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочный код налоговой льготы';
													|en = 'Ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.110 Раздела 3 = 2012500");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С001.Значение) 
			И МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_54_2023()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.54';
													|en = '1.54'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 '") +
		НСтр("ru = 'Раздела 3 = (стр.100 - стр.120) Раздела 3, если результат >= 0, иначе 0';
			|en = 'Раздела 3 = (стр.100 - стр.120) Раздела 3, если результат >= 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %4 (%2 - %3)';
													|en = '%1 = %4 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога';
													|en = 'Ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.130 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С120"		, "П000030012003");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР03);
		
		РасчетнаяСумма = Макс(Показатели.Р03С100.Значение - Показатели.Р03С120.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р03С130.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С130.Значение, Показатели.Р03С100.Значение, Показатели.Р03С120.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КС_Проверки_дополнительные

Процедура ПроверкаКС_2_01_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.1.доп';
													|en = '2.1.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в ';
			|en = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 04';
			|en = 'стр.001 Раздела 2 ≠ 04'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, когда %2 ≠ 04';
													|en = '%1 = 0, когда %2 ≠ 04'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочная сумма налога, уплаченная за пределами РФ';
													|en = 'Ошибочная сумма налога, уплаченная за пределами РФ'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите сумму налога в стр.250 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2023();
		ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" И НЕ Показатели.Р02С250.Значение = 0;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С250.Значение, 
			Показатели.Р02С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2023();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_2_02_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.2.доп';
													|en = '2.2.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.007 Раздела 1 ';
													|en = 'Значение признака СЗПК в стр.007 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение признака СЗПК';
													|en = 'Ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.007 Раздела 1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010000703_");
	ПроверкаКС_1_02_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_03_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.3.доп';
													|en = '2.3.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 2 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода вида имущества';
													|en = 'Ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида имущества в стр.001 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020000101");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_04_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.4.доп';
													|en = '2.4.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.002 Раздела 2 ';
													|en = 'Значение признака СЗПК в стр.002 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение признака СЗПК';
													|en = 'Ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.002 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020000201");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_05_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.5.доп';
													|en = '2.5.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2 ';
													|en = 'Значение КБК в стр.011 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение КБК';
													|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020001100");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_06_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.6.доп';
													|en = '2.6.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.160 Раздела 2 ';
													|en = 'Значение кода налоговой льготы в стр.160 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода налоговой льготы';
													|en = 'Ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.160 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С160");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020016003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_07_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.7.доп';
													|en = '2.7.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.200 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С200");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020020003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_08_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.8.доп';
													|en = '2.8.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение Кжд в стр.215 Раздела 2 ';
													|en = 'Значение Кжд в стр.215 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение Кжд';
													|en = 'Ошибочное значение Кжд'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение Кжд в стр.215 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С215");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020021503");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_09_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.9.доп';
													|en = '2.9.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.230 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С230");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020023003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_10_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.10.доп';
													|en = '2.10.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2.1 ';
													|en = 'Значение КБК в стр.011 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение КБК';
													|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210001100");
	
	ПроверкаКС_2_14_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_11_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.11.доп';
													|en = '2.11.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода номера объекта в стр.010 Раздела 2.1 ';
													|en = 'Значение кода номера объекта в стр.010 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода номера объекта';
													|en = 'Ошибочное значение кода номера объекта'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода номера объекта в стр.010 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С010");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210001001");
	
	ПроверкаКС_2_14_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_12_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.12.доп';
													|en = '2.12.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 ';
													|en = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода субъекта РФ';
													|en = 'Ошибочное значение кода субъекта РФ'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода субъекта РФ в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003001");
	
	ПроверкаКС_2_14_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_13_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.13.доп';
													|en = '2.13.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода муниципального образования в стр.030 Раздела 2.1 ';
													|en = 'Значение кода муниципального образования в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода муниципального образования';
													|en = 'Ошибочное значение кода муниципального образования'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода муниципального образования в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003002");
	
	ПроверкаКС_2_14_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_14_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.14.доп';
													|en = '2.14.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода поселения, территории в стр.030 Раздела 2.1 ';
													|en = 'Значение кода поселения, территории в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода поселения, территории';
													|en = 'Ошибочное значение кода поселения, территории'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода поселения, территории в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003004");
	
	ПроверкаКС_2_14_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_14_2023_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
	
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел21 Цикл
			
			ЗаполнитьПоказатель2023(Показатели[НастройкиКС.КлючПоказателя], СтраницаРаздела);
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			
			Если ДанныеКС.Турборежим21 И НЕ НастройкиКС.ЭтоОшибка Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2023();
			РасшифроватьПоказатель2023(Показатели[НастройкиКС.КлючПоказателя]);
			
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2023();
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверкаКС_2_15_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.15.доп';
													|en = '2.15.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 2.2 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 2.2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода вида имущества';
													|en = 'Ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода вида имущества в стр.001 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220000101");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_16_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.16.доп';
													|en = '2.16.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.002 Раздела 2.2 ';
													|en = 'Значение признака СЗПК в стр.002 Раздела 2.2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение признака СЗПК';
													|en = 'Ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.002 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220000201");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_17_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.17.доп';
													|en = '2.17.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2.2 ';
													|en = 'Значение КБК в стр.011 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение КБК';
													|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220001100");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_18_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.18.доп';
													|en = '2.18.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода номера объекта в стр.011 Раздела 2.2 ';
													|en = 'Значение кода номера объекта в стр.011 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода номера объекта';
													|en = 'Ошибочное значение кода номера объекта'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода номера объекта в стр.011 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220001101");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_19_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.19.доп';
													|en = '2.19.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.160 Раздела 2.2 ';
													|en = 'Значение кода налоговой льготы в стр.160 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода налоговой льготы';
													|en = 'Ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.160 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С160");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220016003_КодЛьготы");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_20_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.20.доп';
													|en = '2.20.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.200 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С200");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220020003_КодЛьготы");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_21_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.21.доп';
													|en = '2.21.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение Кжд в стр.215 Раздела 2.2 ';
													|en = 'Значение Кжд в стр.215 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение Кжд';
													|en = 'Ошибочное значение Кжд'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение Кжд в стр.215 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С215");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220021503");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_22_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.22.доп';
													|en = '2.22.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.230 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С230");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220023003_КодЛьготы");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_23_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.23.доп';
													|en = '2.23.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы для СЗПК в стр.245 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы для СЗПК в стр.245 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода налоговой льготы для СЗПК';
													|en = 'Ошибочное значение кода налоговой льготы для СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.245 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С245");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220024503");
	
	ПроверкаКС_2_23_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_23_2023_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
	
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел22 Цикл
			
			ЗаполнитьПоказатель2023(Показатели[НастройкиКС.КлючПоказателя], СтраницаРаздела);
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			
			Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2023();
			РасшифроватьПоказатель2023(Показатели[НастройкиКС.КлючПоказателя]);
			
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2023();
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверкаКС_2_24_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.24.доп';
													|en = '2.24.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 3 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода вида имущества';
													|en = 'Ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида имущества в стр.001 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030000101");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_25_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.25.доп';
													|en = '2.25.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 3 ';
													|en = 'Значение КБК в стр.011 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение КБК';
													|en = 'Ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030001100");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_26_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.26.доп';
													|en = '2.26.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида сведений в стр.014 Раздела 3 ';
													|en = 'Значение кода вида сведений в стр.014 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода вида сведений';
													|en = 'Ошибочное значение кода вида сведений'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида сведений в стр.014 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С014");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030001401");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_27_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.27.доп';
													|en = '2.27.доп'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.040 Раздела 3 ';
													|en = 'Значение кода налоговой льготы в стр.040 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибочное значение кода налоговой льготы';
													|en = 'Ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.040 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С040");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030004003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_28_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.28.доп';
													|en = '2.28.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.070 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С070");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_29_2023_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.29.доп';
													|en = '2.29.доп'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.110 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2023(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С110");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030011003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2023_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_29_2023_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2023(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
		
		Для каждого СтраницаРаздела Из НастройкиКС.Источник Цикл
		
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2023();
			ЗаполнитьИРасшифроватьПоказатели2023(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2023();
		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область КонтрольныеСоотношения2024

#Область КС_Управление

Функция ПроверитьКонтрольныеСоотношения2024(СтруктураПараметров)
	
	Документирование 	= Ложь;
	
	ТаблицаРезультата	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРезультата();
	ТаблицаРасшифровки	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРасшифровки();
	ПараметрыКС			= СтруктураПараметров;
	
	ДанныеКС = Новый Структура;
	ДанныеКС.Вставить("Счетчик"		, 0);
	ДанныеКС.Вставить("ЧислоОшибок"	, 0);
	ДанныеКС.Вставить("Отчет"		, ПараметрыКС.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", ПараметрыКС.СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("ГодОтчета"	, Год(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("МесОтчета"	, Месяц(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("ТолькоОшибки", Истина);
	ДанныеКС.Вставить("МакетСКП"	, "Базовая_1");
	ДанныеКС.Вставить("ВариантСКП"	, "ПоРазделам_1_1");
	
	ДанныеКС.Вставить("Турборежим"	, Ложь);
	
	СформироватьСлужебныеДанные2024();
	СформироватьДанныеОтчета2024();
	
#Область Проверки

	// критические проверки НК РФ
	
	ПроверкаКС_6_1_1_к_2024();
	ПроверкаКС_6_1_2_к_2024();
	ПроверкаКС_6_2_к_2024();
	ПроверкаКС_6_3_к_2024();

	// основные проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01_2024();
	ПроверкаКС_1_02_2024();
	ПроверкаКС_1_03_2024();
	ПроверкаКС_1_05_2024();
	ПроверкаКС_1_06_2024();
	
	// Проверки Раздела 2
	ПроверкаКС_1_07_2024();
	ПроверкаКС_1_08_2024();
	ПроверкаКС_1_09_2024_1();
	ПроверкаКС_1_09_2024_2();
	ПроверкаКС_1_10_2024();
	ПроверкаКС_1_11_2024();
	ПроверкаКС_1_12_2024();
	ПроверкаКС_1_13_2024();
	ПроверкаКС_1_14_2024();
	ПроверкаКС_1_15_2024();
	ПроверкаКС_1_16_2024();
	ПроверкаКС_1_17_2024();
	ПроверкаКС_1_18_2024();
	ПроверкаКС_1_19_2024();
	ПроверкаКС_1_20_2024();
	ПроверкаКС_1_21_2024();
	ПроверкаКС_1_22_2024();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_23_2024();
	ПроверкаКС_1_24_2024();
	
	// Проверки Раздела 2.2
	ПроверкаКС_1_25_2024();
	ПроверкаКС_1_26_2024();
	ПроверкаКС_1_27_2024_1();
	ПроверкаКС_1_27_2024_2();
	ПроверкаКС_1_28_2024();
	ПроверкаКС_1_29_2024();
	ПроверкаКС_1_30_2024();
	ПроверкаКС_1_31_2024();
	ПроверкаКС_1_32_2024();
	ПроверкаКС_1_33_2024();
	ПроверкаКС_1_34_2024();
	ПроверкаКС_1_35_2024();
	ПроверкаКС_1_36_2024();
	ПроверкаКС_1_37_2024();
	ПроверкаКС_1_38_2024();
	ПроверкаКС_1_39_2024();
	ПроверкаКС_1_40_2024();
	ПроверкаКС_1_41_2024();
	
	// Проверки Раздела 3
	ПроверкаКС_1_42_2024();
	ПроверкаКС_1_43_2024();
	ПроверкаКС_1_44_2024();
	ПроверкаКС_1_45_2024();
	ПроверкаКС_1_46_2024();
	ПроверкаКС_1_47_2024();
	ПроверкаКС_1_48_2024();
	ПроверкаКС_1_49_2024();
	ПроверкаКС_1_50_2024();
	ПроверкаКС_1_51_2024();
	ПроверкаКС_1_52_2024();
	ПроверкаКС_1_53_2024();
	ПроверкаКС_1_54_2024();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_2024_доп();
	ПроверкаКС_2_02_2024_доп();
	ПроверкаКС_2_03_2024_доп();
	ПроверкаКС_2_04_2024_доп();
	ПроверкаКС_2_05_2024_доп();
	ПроверкаКС_2_06_2024_доп();
	ПроверкаКС_2_07_2024_доп();
	ПроверкаКС_2_08_2024_доп();
	ПроверкаКС_2_09_2024_доп();
	ПроверкаКС_2_10_2024_доп();
	ПроверкаКС_2_11_2024_доп();
	ПроверкаКС_2_12_2024_доп();
	ПроверкаКС_2_13_2024_доп();
	ПроверкаКС_2_14_2024_доп();
	ПроверкаКС_2_15_2024_доп();
	ПроверкаКС_2_16_2024_доп();
	ПроверкаКС_2_17_2024_доп();
	ПроверкаКС_2_18_2024_доп();
	ПроверкаКС_2_19_2024_доп();
	ПроверкаКС_2_20_2024_доп();
	ПроверкаКС_2_21_2024_доп();
	ПроверкаКС_2_22_2024_доп();
	ПроверкаКС_2_23_2024_доп();
	ПроверкаКС_2_24_2024_доп();
	ПроверкаКС_2_25_2024_доп();
	ПроверкаКС_2_26_2024_доп();
	ПроверкаКС_2_27_2024_доп();
	ПроверкаКС_2_28_2024_доп();
	ПроверкаКС_2_29_2024_доп();
	
#КонецОбласти

	ПоместитьВоВременноеХранилище(ТаблицаРезультата		, СтруктураПараметров.АдресРезультата);
	ПоместитьВоВременноеХранилище(ТаблицаРасшифровки	, СтруктураПараметров.АдресРасшифровки);
	
	Возврат ПодготовитьРезультат2024();
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

Функция ВыполнитьДокументированиеОбъект2024() Экспорт
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Декларация по налогу на имущество организаций");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2024Кв4");
	
	ТаблицаОписаний		= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуОписаний();
	ДанныеКС 			= Новый Структура;
	ДанныеКС.Вставить("Счетчик"		, 0);
	СформироватьПриоритетыРазделов2024();
	
#Область Проверки

	// критические проверки НК РФ
	
	ПроверкаКС_6_1_1_к_2024();
	ПроверкаКС_6_1_2_к_2024();
	ПроверкаКС_6_2_к_2024();
	ПроверкаКС_6_3_к_2024();

	// основные проверки
	
	// Проверки Раздела 1
	ПроверкаКС_1_01_2024();
	ПроверкаКС_1_02_2024();
	ПроверкаКС_1_03_2024();
	ПроверкаКС_1_05_2024();
	ПроверкаКС_1_06_2024();
	
	// Проверки Раздела 2
	ПроверкаКС_1_07_2024();
	ПроверкаКС_1_08_2024();
	ПроверкаКС_1_09_2024_1();
	ПроверкаКС_1_09_2024_2();
	ПроверкаКС_1_10_2024();
	ПроверкаКС_1_11_2024();
	ПроверкаКС_1_12_2024();
	ПроверкаКС_1_13_2024();
	ПроверкаКС_1_14_2024();
	ПроверкаКС_1_15_2024();
	ПроверкаКС_1_16_2024();
	ПроверкаКС_1_17_2024();
	ПроверкаКС_1_18_2024();
	ПроверкаКС_1_19_2024();
	ПроверкаКС_1_20_2024();
	ПроверкаКС_1_21_2024();
	ПроверкаКС_1_22_2024();
	
	// Проверки Раздела 2.1
	ПроверкаКС_1_23_2024();
	ПроверкаКС_1_24_2024();
	
	// Проверки Раздела 2.2
	ПроверкаКС_1_25_2024();
	ПроверкаКС_1_26_2024();
	ПроверкаКС_1_27_2024_1();
	ПроверкаКС_1_27_2024_2();
	ПроверкаКС_1_28_2024();
	ПроверкаКС_1_29_2024();
	ПроверкаКС_1_30_2024();
	ПроверкаКС_1_31_2024();
	ПроверкаКС_1_32_2024();
	ПроверкаКС_1_33_2024();
	ПроверкаКС_1_34_2024();
	ПроверкаКС_1_35_2024();
	ПроверкаКС_1_36_2024();
	ПроверкаКС_1_37_2024();
	ПроверкаКС_1_38_2024();
	ПроверкаКС_1_39_2024();
	ПроверкаКС_1_40_2024();
	ПроверкаКС_1_41_2024();
	
	// Проверки Раздела 3
	ПроверкаКС_1_42_2024();
	ПроверкаКС_1_43_2024();
	ПроверкаКС_1_44_2024();
	ПроверкаКС_1_45_2024();
	ПроверкаКС_1_46_2024();
	ПроверкаКС_1_47_2024();
	ПроверкаКС_1_48_2024();
	ПроверкаКС_1_49_2024();
	ПроверкаКС_1_50_2024();
	ПроверкаКС_1_51_2024();
	ПроверкаКС_1_52_2024();
	ПроверкаКС_1_53_2024();
	ПроверкаКС_1_54_2024();
	
	// Дополнительные проверки
	ПроверкаКС_2_01_2024_доп();
	ПроверкаКС_2_02_2024_доп();
	ПроверкаКС_2_03_2024_доп();
	ПроверкаКС_2_04_2024_доп();
	ПроверкаКС_2_05_2024_доп();
	ПроверкаКС_2_06_2024_доп();
	ПроверкаКС_2_07_2024_доп();
	ПроверкаКС_2_08_2024_доп();
	ПроверкаКС_2_09_2024_доп();
	ПроверкаКС_2_10_2024_доп();
	ПроверкаКС_2_11_2024_доп();
	ПроверкаКС_2_12_2024_доп();
	ПроверкаКС_2_13_2024_доп();
	ПроверкаКС_2_14_2024_доп();
	ПроверкаКС_2_15_2024_доп();
	ПроверкаКС_2_16_2024_доп();
	ПроверкаКС_2_17_2024_доп();
	ПроверкаКС_2_18_2024_доп();
	ПроверкаКС_2_19_2024_доп();
	ПроверкаКС_2_20_2024_доп();
	ПроверкаКС_2_21_2024_доп();
	ПроверкаКС_2_22_2024_доп();
	ПроверкаКС_2_23_2024_доп();
	ПроверкаКС_2_24_2024_доп();
	ПроверкаКС_2_25_2024_доп();
	ПроверкаКС_2_26_2024_доп();
	ПроверкаКС_2_27_2024_доп();
	ПроверкаКС_2_28_2024_доп();
	ПроверкаКС_2_29_2024_доп();
	
#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#Область КС_Данные

Процедура СформироватьСлужебныеДанные2024()
	
	ИменаРазделов = Новый Структура();
	
	ИменаРазделов.Вставить("Р00", "Титульный");
	ИменаРазделов.Вставить("Р01", "Раздел1");
	ИменаРазделов.Вставить("Р02", "Раздел2");
	ИменаРазделов.Вставить("Р21", "Раздел21");
	ИменаРазделов.Вставить("Р22", "Раздел22");
	ИменаРазделов.Вставить("Р03", "Раздел3");
	ИменаРазделов.Вставить("Р04", "Раздел4");
	
	ДанныеКС.Вставить("ИменаРазделов", ИменаРазделов);
	
	ПредставленияРазделов = Новый Структура();
	
	ПредставленияРазделов.Вставить("Р00", "Титульный лист");
	ПредставленияРазделов.Вставить("Р01", "Раздела 1");
	ПредставленияРазделов.Вставить("Р02", "Раздела 2");
	ПредставленияРазделов.Вставить("Р21", "Раздела 2.1");
	ПредставленияРазделов.Вставить("Р22", "Раздела 2.2");
	ПредставленияРазделов.Вставить("Р03", "Раздела 3");
	ПредставленияРазделов.Вставить("Р04", "Раздела 4");
	
	ДанныеКС.Вставить("ПредставленияРазделов", ПредставленияРазделов);
	
	ЦелочисленныеРазделы = Новый Массив;
	ЦелочисленныеРазделы.Добавить("Р01");
	ЦелочисленныеРазделы.Добавить("Р02");
	ЦелочисленныеРазделы.Добавить("Р22");
	ЦелочисленныеРазделы.Добавить("Р03");
	
	ДанныеКС.Вставить("ЦелочисленныеРазделы", ЦелочисленныеРазделы);
	
	СформироватьПриоритетыРазделов2024();
	
КонецПроцедуры

Процедура СформироватьДанныеОтчета2024()
	
	ИсходнаяСтруктура = СохраненныеДанныеОтчета(ПараметрыКС.ИмяФормы, ПараметрыКС.СтруктураРеквизитовФормы);
	
	ДанныеКС.Вставить("Раздел0", ОбщегоНазначения.СкопироватьРекурсивно(
		ИсходнаяСтруктура.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	
	Для каждого Раздел Из ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов Цикл
		
		ДанныеКС.Вставить("КолвоСтраниц" + Раздел.Ключ, Раздел.Значение.Строки.Количество());
		МассивСтраниц = Новый Массив;
		
		Для каждого СтраницаРаздела Из Раздел.Значение.Строки Цикл
			
			ДанныеСтраницы = Новый Структура;
			ДанныеСтраницы.Вставить("НомерСтраницы", XMLСтрока(Раздел.Значение.Строки.Индекс(СтраницаРаздела) + 1));
			ПолучитьДанныеСтраницы2024(ДанныеСтраницы, СтраницаРаздела, 
				Новый Структура("КорневойРаздел, Раздел, Уровень", Раздел.Ключ, Раздел.Ключ, 1),
				Новый Структура("Уровень", ""));
			//ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
			МассивСтраниц.Добавить(ДанныеСтраницы);
			
		КонецЦикла;
		
		ДанныеКС.Вставить(Раздел.Ключ, МассивСтраниц);
		
	КонецЦикла;
	
	ДанныеКС.Вставить("Раздел1", ДанныеКС.Раздел1[0]);
	ДанныеКС.Вставить("Раздел4", ДанныеКС.Раздел4[0]);
	
	СформироватьВременныеТаблицы2024(ИсходнаяСтруктура);
	
КонецПроцедуры

Процедура ПолучитьДанныеСтраницы2024(СтруктураПриемник, 
									Знач СтруктураИсточник, 
									Знач ВходящийРаздел, 
									Знач ВходящаяМнЧасть)
									
	Если НЕ СтруктураИсточник.Данные = Неопределено И НЕ ЗначениеЗаполнено(ВходящаяМнЧасть.Уровень) Тогда
		Для каждого Элемент Из СтруктураИсточник.Данные Цикл
			СтруктураПриемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из СтруктураИсточник.ДанныеМногострочныхЧастей Цикл
			Для каждого СтрокаМнЧасти Из МнЧасть.Значение.Строки Цикл
				
				НомерСтроки = МнЧасть.Значение.Строки.Индекс(СтрокаМнЧасти) + 1;
				СтруктураПриемник.Вставить("КолвоСтрок" + МнЧасть.Ключ + ВходящаяМнЧасть.Уровень, 
					МнЧасть.Значение.Строки.Количество());
				Для каждого ПоказательСтроки Из СтрокаМнЧасти.Данные Цикл
					СтруктураПриемник.Вставить(ПоказательСтроки.Ключ + ВходящаяМнЧасть.Уровень + "_" + XMLСтрока(НомерСтроки), 
						ПоказательСтроки.Значение);
				КонецЦикла;
				
				Если НЕ СтрокаМнЧасти.ДанныеМногострочныхЧастей.Количество() = 0 Тогда
					ПолучитьДанныеСтраницы2024(СтруктураПриемник, СтрокаМнЧасти, ВходящийРаздел,
						Новый Структура("Уровень", "_" +  XMLСтрока(НомерСтроки)));
				КонецЕсли;
					
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.Строки.Количество() = 0 Тогда
		Для каждого Приложение Из СтруктураИсточник.Строки Цикл
			
			КлючПриложения = ВходящийРаздел.Раздел;
			МассивСтраниц = Новый Массив;
			
			Для каждого СтраницаПриложения Из СтруктураИсточник.Строки Цикл
				
				ДанныеСтраницы = Новый Структура;
				
				Если КлючПриложения = "Раздел21" Тогда
					ДанныеСтраницы.Вставить("НомерСтраницы", XMLСтрока(СтруктураИсточник.Строки.Индекс(СтраницаПриложения) + 1));
				Иначе
					ДанныеСтраницы.Вставить("НомерСтраницы", СтруктураПриемник.НомерСтраницы + "," +
						XMLСтрока(СтруктураИсточник.Строки.Индекс(СтраницаПриложения) + 1));
				КонецЕсли;
				
				ПолучитьДанныеСтраницы2024(ДанныеСтраницы, СтраницаПриложения, 
					Новый Структура("КорневойРаздел, Раздел, Уровень", ВходящийРаздел.КорневойРаздел, КлючПриложения, 
					ВходящийРаздел.Уровень + 1), Новый Структура("Уровень", ""));
				//ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
				МассивСтраниц.Добавить(ДанныеСтраницы);
				
			КонецЦикла;
			СтруктураПриемник.Вставить("КолвоСтраниц" + КлючПриложения, МассивСтраниц.Количество());
			СтруктураПриемник.Вставить(КлючПриложения, МассивСтраниц);
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура СформироватьВременныеТаблицы2024(ИсходнаяСтруктура)
	
	К01		= Новый КвалификаторыСтроки(1);
	К20		= Новый КвалификаторыСтроки(20);
	
	Т01 = Новый ТаблицаЗначений;
	Т01.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т01.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т01.Колонки.Добавить("Р01С021"		, Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	Т01.Колонки.Добавить("НомерСтроки"	, Новый ОписаниеТипов("Число"));
	
	Т02 = Новый ТаблицаЗначений;
	Т02.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т02.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т02.Колонки.Добавить("Р02С140"		, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("Р02С260"		, Новый ОписаниеТипов("Число"));
	Т02.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т21 = Новый ТаблицаЗначений;
	Т21.Колонки.Добавить("Р21С050"		, Новый ОписаниеТипов("Число"));
	Т21.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т22 = Новый ТаблицаЗначений;
	Т22.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т22.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т22.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т22.Колонки.Добавить("Р22С260"		, Новый ОписаниеТипов("Число"));
	Т22.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Т03 = Новый ТаблицаЗначений;
	Т03.Колонки.Добавить("ОКТМО"		, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("КБК"			, Новый ОписаниеТипов("Строка",,К20));
	Т03.Колонки.Добавить("СЗПК"			, Новый ОписаниеТипов("Строка",,К01));
	Т03.Колонки.Добавить("Р03С130"		, Новый ОписаниеТипов("Число"));
	Т03.Колонки.Добавить("НомерСтраницы", Новый ОписаниеТипов("Число"));
	
	Раздел1 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].ДанныеМногострочныхЧастей.П0000100.Строки;
	ДанныеКС.Вставить("Т01", Т01);
	ДанныеКС.Вставить("КолСтрокР01", Раздел1.Количество());
		
	Для каждого СтрокаМнЧ Из Раздел1 Цикл
		
		НомерСтроки = Раздел1.Индекс(СтрокаМнЧ) + 1;
			
		НоваяСтрока = ДанныеКС.Т01.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(СтрокаМнЧ.Данные.П000010000703);
		НоваяСтрока.ОКТМО			= СокрЛП(СтрокаМнЧ.Данные.П000010001003);
		НоваяСтрока.КБК				= СокрЛП(СтрокаМнЧ.Данные.П000010002003);
		НоваяСтрока.Р01С021			= Окр(СтрокаМнЧ.Данные.П000010002103);
		НоваяСтрока.НомерСтраницы	= 1;
		НоваяСтрока.НомерСтроки		= НомерСтроки;
		
	КонецЦикла;
	
	Раздел2 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел2.Строки;
	ДанныеКС.Вставить("Т02", Т02);
	
	Для каждого Элемент Из Раздел2 Цикл
		
		НомерСтраницы = Раздел2.Индекс(Элемент) + 1;
		
		НоваяСтрока = ДанныеКС.Т02.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(Элемент.Данные.П000020000201);
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000020001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000020001100);
		НоваяСтрока.Р02С140			= Окр(Элемент.Данные.П000020014003);
		НоваяСтрока.Р02С260			= Окр(Элемент.Данные.П000020026003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел21 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел21.Строки;
	ДанныеКС.Вставить("Т21", Т21);
	ДанныеКС.Вставить("Турборежим21", Раздел21.Количество() > 100); 
	
	Для каждого Элемент Из Раздел21 Цикл
		
		НомерСтраницы = Раздел21.Индекс(Элемент) + 1;

		НоваяСтрока = ДанныеКС.Т21.Добавить();
		НоваяСтрока.Р21С050			= Окр(Элемент.Данные.П000210005003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел22 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел22.Строки;
	ДанныеКС.Вставить("Т22", Т22);
	ДанныеКС.Вставить("Турборежим22", Раздел22.Количество() > 100); 
	
	Для каждого Элемент Из Раздел22 Цикл
		
		НомерСтраницы = Раздел22.Индекс(Элемент) + 1;
		
		НоваяСтрока = ДанныеКС.Т22.Добавить();
		НоваяСтрока.СЗПК			= СокрЛП(Элемент.Данные.П000220000201);
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000220001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000220001100);
		НоваяСтрока.Р22С260			= Окр(Элемент.Данные.П000220026003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	Раздел3 = ИсходнаяСтруктура.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	ДанныеКС.Вставить("Т03", Т03);
	
	Для каждого Элемент Из Раздел3 Цикл
		
		НомерСтраницы = Раздел3.Индекс(Элемент) + 1;
			
		НоваяСтрока = ДанныеКС.Т03.Добавить();
		НоваяСтрока.ОКТМО			= СокрЛП(Элемент.Данные.П000030001001);
		НоваяСтрока.КБК				= СокрЛП(Элемент.Данные.П000030001100);
		НоваяСтрока.Р03С130			= Окр(Элемент.Данные.П000030013003);
		НоваяСтрока.НомерСтраницы	= НомерСтраницы;
		
	КонецЦикла;
	
	ВременныеТаблицы	= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса		= Новый СхемаЗапроса;
	
	ИменаТаблиц			= Новый Структура;
	ИменаТаблиц.Вставить("Т01"	, "Т01");
	ИменаТаблиц.Вставить("Т02"	, "Т02");
	ИменаТаблиц.Вставить("Т21"	, "Т21");
	ИменаТаблиц.Вставить("Т22"	, "Т22");
	ИменаТаблиц.Вставить("Т03"	, "Т03");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
		
	КонецЦикла;
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	
	Запрос.УстановитьПараметр("Т01"		, ДанныеКС.Т01);
	Запрос.УстановитьПараметр("Т02"		, ДанныеКС.Т02);
	Запрос.УстановитьПараметр("Т21"		, ДанныеКС.Т21);
	Запрос.УстановитьПараметр("Т22"		, ДанныеКС.Т22);
	Запрос.УстановитьПараметр("Т03"		, ДанныеКС.Т03);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВТ"	, ВременныеТаблицы);
	
КонецПроцедуры

Процедура СформироватьПриоритетыРазделов2024()
	
	ДанныеКС.Вставить("КритичныйРаздел", Отчеты.ПроверкаКонтрольныхСоотношений.НаименованиеКритичногоРаздела()); 
	
	ПриоритетыРазделов = Новый Массив;
	ПриоритетыРазделов.Добавить(ДанныеКС.КритичныйРаздел);
	ПриоритетыРазделов.Добавить("Титульный лист");
	ПриоритетыРазделов.Добавить("Раздел 1");
	ПриоритетыРазделов.Добавить("Раздел 2");
	ПриоритетыРазделов.Добавить("Раздел 2.1");
	ПриоритетыРазделов.Добавить("Раздел 2.2");
	ПриоритетыРазделов.Добавить("Раздел 3");
	ПриоритетыРазделов.Добавить("Раздел 4");
	
	ДанныеКС.Вставить("ПриоритетыРазделов", ПриоритетыРазделов);
	
КонецПроцедуры

#КонецОбласти

#Область КС_Сервис

Функция СформироватьПоказатели2024(ИменаПоказателей)
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		МассивПредставления	= Новый Массив;
		ИмяРаздела	= "";
		ПредставлениеРаздела	= "";
		
		ПрефиксРаздела			= Сред(Элемент.Ключ, 1, 3);
		ПодстрокаСтроки			= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы			= Сред(Элемент.Значение, 13,1);
		ПодстрокаДополнения		= Сред(Элемент.Ключ, 8, 1);
		ПрефиксДополнения		= Сред(Элемент.Ключ, 4, 1);
		
		ДанныеКС.ИменаРазделов.Свойство(ПрефиксРаздела			, ИмяРаздела);
		ДанныеКС.ПредставленияРазделов.Свойство(ПрефиксРаздела	, ПредставлениеРаздела);
		
		Если ПрефиксДополнения	= "С" Тогда
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		ИначеЕсли ПрефиксДополнения = "Г" Тогда
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
		Иначе
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		КонецЕсли;
		МассивПредставления.Добавить(ПредставлениеРаздела);
		
		Если ПодстрокаДополнения = "П" Тогда
			МассивПредставления.Добавить("предыдущего отчетного периода");
		КонецЕсли;
		
		Представление		= СтрСоединить(МассивПредставления, " ");
		Многострочный		= СтрДлина(Элемент.Значение) = 14;
		Округление			= НЕ ДанныеКС.ЦелочисленныеРазделы.Найти(ПрефиксРаздела) = Неопределено;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ПрефиксРаздела"	, ПрефиксРаздела);
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяРаздела"		, ИмяРаздела);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("НомерСтраницы"	, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		Показатели[Элемент.Ключ].Вставить("ЗначениеСтр"		, "");
		Показатели[Элемент.Ключ].Вставить("Итог"			, 0);
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("Округление"		, Округление);
		Показатели[Элемент.Ключ].Вставить("Синоним"			, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
		Показатели[Элемент.Ключ].Вставить("Заполнять"		, Истина);
		Показатели[Элемент.Ключ].Вставить("Расшифровывать"	, Истина);
		Показатели[Элемент.Ключ].Вставить("Инверсия"		, Ложь);
		
	КонецЦикла;
	
	Возврат Показатели;
	
КонецФункции

Процедура РасшифроватьПоказатель2024(Показатель)
		
	НоваяСтрока							= ТаблицаРасшифровки.Добавить();
	НоваяСтрока.НомерЭлемента			= ДанныеКС.Счетчик;
	
	НоваяСтрока.СсылкаНаОтчет			= ?(ЗначениеЗаполнено(Показатель.Отчет), 
		Показатель.Отчет, ДанныеКС.Отчет);
	НоваяСтрока.ИмяРаздела				= Показатель.ИмяРаздела;
	НоваяСтрока.ИмяПоказателя			= Показатель.ИмяПоказателя;
	НоваяСтрока.НомерСтраницы			= Показатель.НомерСтраницы;
	
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	
	Если ТипЗнч(Показатель.Значение) = Тип("Число") Тогда
		НоваяСтрока.ЗначениеПоказателя		= Показатель.Значение;
	Иначе
		НоваяСтрока.ЗначениеПоказателя		= Показатель.ЗначениеСтр;
	КонецЕсли;
	
	Показатель.Дополнение = "";
	
КонецПроцедуры

Процедура РасшифроватьПоказатели2024(Показатели)
	
	Для Каждого Элемент Из Показатели Цикл
		Если Элемент.Значение.Расшифровывать Тогда
			РасшифроватьПоказатель2024(Элемент.Значение);
		КонецЕсли; 
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоказатель2024(Показатель, Источник, Знач НомерСтроки = Неопределено)
	
	Перем ЗначениеВИсточнике;
	
	Если ТипЗнч(НомерСтроки) = Тип("Массив") Тогда
		НомерСтроки = СтрСоединить(НомерСтроки, "_");
	КонецЕсли; 
	
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + НомерСтроки;
		КонецЕсли;
		
		Если Источник.Свойство(Показатель.ИмяПоказателя, ЗначениеВИсточнике) Тогда
		
			Показатель.НомерСтраницы = ?(Источник.Свойство("НомерСтраницы"), Источник.НомерСтраницы, 1);
			
			ЗаполнитьПоказательЗначениями2024(Показатель, ЗначениеВИсточнике);
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14);
		КонецЕсли; 
	
		ЗначениеВИсточнике = Источник[Показатель.ИмяПоказателя];
		
		Показатель.Отчет			= ДанныеКС.Отчет;
		Показатель.НомерСтраницы 	= Источник.НомерСтраницы;
			
		ЗаполнитьПоказательЗначениями2024(Показатель, ЗначениеВИсточнике);
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + НомерСтроки;
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПоказатели2024(Показатели, Источник, НомерСтроки = Неопределено);
	
	Для Каждого Элемент Из Показатели Цикл
		ЗаполнитьПоказатель2024(Элемент.Значение, Источник, НомерСтроки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПоказательЗначениями2024(Показатель, ЗначениеВИсточнике)

	Если ТипЗнч(ЗначениеВИсточнике) = Тип("Число") И Показатель.Округление Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = Окр(ЗначениеВИсточнике);
		Показатель.Итог = Показатель.Итог + Показатель.Значение;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Число") Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.Итог = Показатель.Итог + ЗначениеВИсточнике;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Строка") Тогда
		
		Показатель.Значение = СокрЛП(ЗначениеВИсточнике);
		Показатель.ЗначениеСтр = ?(ЗначениеЗаполнено(ЗначениеВИсточнике), Показатель.Значение, "(...)");
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Дата") Тогда
		
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.ЗначениеСтр = Формат(ЗначениеВИсточнике, "ДФ=dd.MM.yy; ДП=(...)");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатель2024(Показатель, Источник, НомерСтроки = Неопределено)
											
	Если Показатель.Заполнять Тогда
		ЗаполнитьПоказатель2024(Показатель, Источник, НомерСтроки);
			
		Если Показатель.Расшифровывать Тогда
			РасшифроватьПоказатель2024(Показатель);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьИРасшифроватьПоказатели2024(Показатели, Источник, НомерСтроки = Неопределено)
	
	Для каждого Элемент Из Показатели Цикл
			
		ЗаполнитьИРасшифроватьПоказатель2024(Элемент.Значение, Источник, НомерСтроки);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗарегистрироватьПроверку2024();

	ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
	
КонецПроцедуры

Процедура ДополнитьТаблицуРезультата2024()
	
	Если ДанныеКС.ТолькоОшибки И НЕ НастройкиКС.ЭтоОшибка Тогда
		УдалитьСтрокиТаблицыРасшифровки2024(ДанныеКС.Счетчик);
		Возврат;
	КонецЕсли;
	
	Если НастройкиКС.ЭтоОшибка Тогда
		ДанныеКС.ЧислоОшибок = ДанныеКС.ЧислоОшибок + 1;
	КонецЕсли;
	
	НоваяСтрока = ТаблицаРезультата.Добавить();
	
	НоваяСтрока.Раздел 			= НастройкиКС.Раздел;
	НоваяСтрока.Приоритет		= НастройкиКС.Приоритет;
	
	НоваяСтрока.НомерЭлемента 	= ДанныеКС.Счетчик;
	НоваяСтрока.НомерКС 		= НастройкиКС.НомерКС;
	НоваяСтрока.Критичность		= НастройкиКС.Критичность;
	
	НоваяСтрока.Описание 		= НастройкиКС.Описание;
	НоваяСтрока.Детализация 	= НастройкиКС.Детализация;
	НоваяСтрока.Нарушение 		= НастройкиКС.Нарушение;
	НоваяСтрока.Основание 		= НастройкиКС.Основание;
	НоваяСтрока.Рекомендации 	= НастройкиКС.Рекомендации;
	
	НоваяСтрока.ДопСведения 	= НастройкиКС.ДопСведения;
	НоваяСтрока.Комментарий 	= НастройкиКС.Комментарий;
	
	НоваяСтрока.ЭтоОшибка 		= НастройкиКС.ЭтоОшибка;
		
КонецПроцедуры

Процедура УдалитьСтрокиТаблицыРасшифровки2024(НомерЭлемента)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерЭлемента", НомерЭлемента);
	
	УдаляемыеСтроки = ТаблицаРасшифровки.НайтиСтроки(ПараметрыОтбора);
	
	Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		ТаблицаРасшифровки.Удалить(УдаляемаяСтрока);
	КонецЦикла; 
	
КонецПроцедуры

Процедура ПодготовитьНастройки2024(Заголовки)
		
	НастройкиКС = Новый Структура;
	
	НастройкиКС.Вставить("Раздел"				, "");
	НастройкиКС.Вставить("НомерКС"				, "");
	НастройкиКС.Вставить("Критичность"			, 0);
	
	НастройкиКС.Вставить("Описание"				, "");
	НастройкиКС.Вставить("Детализация"			, "");
	НастройкиКС.Вставить("Нарушение"			, "");
	НастройкиКС.Вставить("Основание"			, "");
	НастройкиКС.Вставить("Рекомендации"			, "");
	
	НастройкиКС.Вставить("ДопСведения"			, "");
	НастройкиКС.Вставить("Комментарий"			, "");
	
	НастройкиКС.Вставить("ЭтоОшибка"			, Ложь);
	
	НастройкиКС.Вставить("Условие"				, "");
	НастройкиКС.Вставить("ДляДокументации"		, "");
	
	НастройкиКС.Вставить("ШаблонДетализации"	, "");
	НастройкиКС.Вставить("ШаблонДопСведений"	, "");
	
	Для каждого ЭлементКоллекции Из Заголовки Цикл
		Если НастройкиКС.Свойство(ЭлементКоллекции.Ключ) Тогда
			НастройкиКС.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
		КонецЕсли; 
	КонецЦикла;
	
	Если НастройкиКС.Критичность = 3 Тогда 
		НастройкиКС.Вставить("Основание", "Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@");
	ИначеЕсли НастройкиКС.Критичность = -1 Тогда 
		НастройкиКС.Вставить("Основание", "Проверка носит справочный характер");
	Иначе
		НастройкиКС.Вставить("Основание", "Письмо ФНС России от 21.10.2022 № БС-4-21/14195@");
	КонецЕсли;
	
	Приоритет = ДанныеКС.ПриоритетыРазделов.Найти(НастройкиКС.Раздел);
	Приоритет = ?(Приоритет = Неопределено, 0, Приоритет + 1);
	
	НастройкиКС.Вставить("Приоритет"			, Приоритет);
	
	Если Документирование Тогда
		ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, НастройкиКС);
		СтрокаОписания.НомерЭлемента = ДанныеКС.Счетчик;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьРезультат2024();
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("АдресТаблицыРезультата"		, ПараметрыКС.АдресРезультата);
	СтруктураРезультата.Вставить("АдресТаблицыРасшифровки"		, ПараметрыКС.АдресРасшифровки);
	СтруктураРезультата.Вставить("ЧислоОшибок"					, ДанныеКС.ЧислоОшибок);
	СтруктураРезультата.Вставить("ТекстЗаголовка"				, 
		РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(ДанныеКС.Отчет));
	СтруктураРезультата.Вставить("МакетСКП"						, ДанныеКС.МакетСКП);
	СтруктураРезультата.Вставить("ВариантСКП"					, ДанныеКС.ВариантСКП);
	
	Возврат СтруктураРезультата;
		
КонецФункции

Функция СуммаПоказателей2024(Показатели, КодПоказателя = "")
	
	Результат = 0;
	
	Для каждого Показатель Из Показатели Цикл
		Если НЕ ЗначениеЗаполнено(КодПоказателя) Тогда
			Результат = Результат + Показатель.Значение.Значение;
		ИначеЕсли СтрНайти(Показатель.Ключ, КодПоказателя) = 0 Тогда
			Продолжить;
		Иначе
			Результат = Результат + Показатель.Значение.Значение;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция НольИлиЕдиница2024(ИсходноеЧисло)
	
	Если ИсходноеЧисло = 0 ИЛИ ИсходноеЧисло = 1 Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

Функция ЗначСтроки2024(ЗначениеСтроки)
	
	Возврат ?(ЗначениеЗаполнено(ЗначениеСтроки), ЗначениеСтроки, "(...)");
	
КонецФункции

#КонецОбласти

#Область КС_Проверки

#Область КС_Проверки_Критические_НК_РФ

#Область Проверки_Раздела_1

Процедура ПроверкаКС_6_1_1_к_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, ДанныеКС.КритичныйРаздел);
	Заголовки.Вставить("Критичность"		, 3);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.1.1';
													|en = '6.1.1'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.030 Раздела 1 >= 0';
													|en = 'Сумма налога в стр.030 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.030 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010003003_");
	
	ПроверкаКС_6_1_1_к_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_6_1_1_к_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001", НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		НастройкиКС.ЭтоОшибка = Показатели.Р01С001.Значение < 0;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р01С001.Значение);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_6_1_2_к_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, ДанныеКС.КритичныйРаздел);
	Заголовки.Вставить("Критичность"		, 3);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.1.2';
													|en = '6.1.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.040 Раздела 1 >= 0';
													|en = 'Сумма налога в стр.040 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010004003_");
	
	ПроверкаКС_6_1_1_к_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_6_2_к_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, ДанныеКС.КритичныйРаздел);
	Заголовки.Вставить("Критичность"		, 3);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.2';
													|en = '6.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма налога в стр.040 Раздела 1 <= стр.(023 + 025 + 027) Раздела 1';
													|en = 'Сумма налога в стр.040 Раздела 1 <= стр.(023 + 025 + 027) Раздела 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2 (%3 + %4 + %5)';
													|en = '%1 <= %2 (%3 + %4 + %5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.02.2023 № ЕА-4-15/2048@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П000010004003_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Показатели.Р01С023.Значение + Показатели.Р01С025.Значение + Показатели.Р01С027.Значение;
		НастройкиКС.ЭтоОшибка = Показатели.Р01С040.Значение > РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р01С040.Значение, РасчетнаяСумма, Показатели.Р01С023.Значение, Показатели.Р01С025.Значение, 
			Показатели.Р01С027.Значение);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_6_3_к_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, ДанныеКС.КритичныйРаздел);
	Заголовки.Вставить("Критичность"		, 3);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6.3';
													|en = '6.3'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов ';
			|en = 'Сумма налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов '") +
		НСтр("ru = 'Раздела 2.2 + стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, если признак СЗПК ';
			|en = 'Раздела 2.2 + стр.130 всех листов Раздела 3 по соответствующим ОКТМО, КБК, если признак СЗПК '") + 
		НСтр("ru = 'в стр.007 Раздела 1 не заполнен';
			|en = 'в стр.007 Раздела 1 не заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5), если значение %6 не заполнено';
													|en = '%1 = %2 (%3 + %4 + %5), если значение %6 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.021 Раздела 1");
	Заголовки.Вставить("Основание"			, 
		НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.10.2022 N БС-4-21/14195@';
			|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@, Письмо ФНС России от 21.10.2022 N БС-4-21/14195@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Значение СЗПК в стр.007 Раздела 1 не заполнено';
													|en = 'Значение СЗПК в стр.007 Раздела 1 не заполнено'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_04_2024_код();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КС_Проверки_Основные

#Область КС_Проверки_Раздела_1

Процедура ПроверкаКС_1_01_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.1';
													|en = '1.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО ';
			|en = 'Значение ОКТМО в стр.010 Раздела 1 и стр.010 Раздела 2 соответствуют классификатору ОКТМО '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода ОКТМО';
													|en = 'Возможно ошибочное значение кода ОКТМО'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение ОКТМО из классификатора ОКТМО");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("ДляДокументации"	, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	ПодготовитьНастройки2024(Заголовки);
	
КонецПроцедуры

Процедура ПроверкаКС_1_02_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.2';
													|en = '1.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.020 Раздела 1 ';
													|en = 'Значение КБК в стр.020 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК';
													|en = 'Возможно ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите КБК в стр.020 Раздела 1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст.80 НК РФ';
													|en = 'ст.80 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010002003_");
	ПроверкаКС_1_02_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_02_2024_код()
	
	Перем Список;
		
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"		, НастройкиКС.Показатель);
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		Если ПараметрыКС.СписочныеЗначения.Свойство(Лев(Показатели.Р01С001.ИмяПоказателя, 13), Список) Тогда
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели.Р01С001.Значение) = Неопределено;
		Иначе
			НастройкиКС.ЭтоОшибка = Ложь;
		КонецЕсли; 
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_03_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.3';
													|en = '1.3'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма исчисленного налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов ';
			|en = 'Сумма исчисленного налога в стр.021 Раздела 1 = стр.260 всех листов Раздела 2 + стр.260 всех листов '") +
		НСтр("ru = 'Раздела 2.2 по соответствующим ОКТМО, КБК, СЗПК, если признак СЗПК в стр.007 Раздела 1 заполнен';
			|en = 'Раздела 2.2 по соответствующим ОКТМО, КБК, СЗПК, если признак СЗПК в стр.007 Раздела 1 заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4) если значение %6 заполнено';
													|en = '%1 = %2 (%3 + %4) если значение %6 заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма исчисленного налога';
													|en = 'Возможно ошибочная сумма исчисленного налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.021 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.382 НК РФ';
													|en = 'п.1 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Значение СЗПК в стр.007 Раздела 1 заполнено';
													|en = 'Значение СЗПК в стр.007 Раздела 1 заполнено'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_04_2024_код();
	
КонецПроцедуры

//Процедура ПроверкаКС_1_04_2024() -> КС 6.3.к

Процедура ПроверкаКС_1_04_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С007"		, "П000010000703_");
	ИменаПоказателей.Вставить("Р01С010"		, "П000010001003_");
	ИменаПоказателей.Вставить("Р01С020"		, "П000010002003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р22С260"		, "П000220026003");
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р01.ОКТМО + ВТ_Р01.КБК + ВТ_Р01.СЗПК КАК Ключ,
	|	ВТ_Р01.СЗПК		КАК П000010000703_,
	|	ВТ_Р01.ОКТМО	КАК П000010001003_,
	|	ВТ_Р01.КБК		КАК П000010002003_,
	|	ВТ_Р01.Р01С021	КАК П000010002103_,
	|	ВТ_Р01.НомерСтраницы	КАК НомерСтраницы,
	|	ВТ_Р01.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ01 КАК ВТ_Р01
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	МИНИМУМ(П000010000703_),
	|	МИНИМУМ(П000010001003_),
	|	МИНИМУМ(П000010002003_),
	|	МИНИМУМ(НомерСтраницы),
	|	МИНИМУМ(НомерСтроки),
	|	СУММА(П000010002103_)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р02.ОКТМО + ВТ_Р02.КБК + ВТ_Р02.СЗПК КАК Ключ,
	|	ВТ_Р02.Р02С260	КАК П000020026003,
	|	ВТ_Р02.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000020026003)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р22.ОКТМО + ВТ_Р22.КБК + ВТ_Р22.СЗПК КАК Ключ,
	|	ВТ_Р22.Р22С260	КАК П000220026003,
	|	ВТ_Р22.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ22 КАК ВТ_Р22
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000220026003)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.ОКТМО + ВТ_Р03.КБК КАК Ключ,
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.НомерСтраницы	КАК НомерСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	МИНИМУМ(НомерСтраницы),
	|	СУММА(П000030013003)
	|ПО
	|	Ключ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР22= Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		
		Если НастройкиКС.НомерКС = "1.3" И НЕ ЗначениеЗаполнено(ВыборкаР1.П000010000703_) Тогда
			Продолжить;
		КонецЕсли; 
		
		Если НастройкиКС.НомерКС = "6.3.к" И ЗначениеЗаполнено(ВыборкаР1.П000010000703_) Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", ВыборкаР1.НомерСтроки);
		ЗарегистрироватьПроверку2024();
		СуммаР2 	= 0;
		СуммаР22 	= 0;
		СуммаР3 	= 0;
		
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р01С007, ВыборкаР1, ВыборкаР1.НомерСтроки);
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р01С010, ВыборкаР1, ВыборкаР1.НомерСтроки);
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р01С020, ВыборкаР1, ВыборкаР1.НомерСтроки);
			
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р01С021, Выборка, Выборка.НомерСтроки);
		КонецЦикла;
		
		Если ВыборкаР2.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР2 = ВыборкаР2.П000020026003;
			Выборка = ВыборкаР2.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С260, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		Если ВыборкаР22.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР22 = ВыборкаР22.П000220026003;
			Выборка = ВыборкаР22.Выбрать();
			Если НЕ ДанныеКС.Турборежим22 Тогда
				Пока Выборка.Следующий() Цикл
					ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р22С260, Выборка);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли; 
		
		Если ВыборкаР3.НайтиСледующий(ВыборкаР1.Ключ, "Ключ") Тогда
			СуммаР3 = ВыборкаР3.П000030013003;
			Выборка = ВыборкаР3.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р03С130, Выборка);
			КонецЦикла;
		КонецЕсли; 
		
		РасчетнаяСумма = СуммаР2 + СуммаР22 + СуммаР3;
		НастройкиКС.ЭтоОшибка = НЕ ВыборкаР1.П000010002103_ = РасчетнаяСумма;
		НастройкиКС.Детализация	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			ВыборкаР1.П000010002103_, РасчетнаяСумма, СуммаР2, СуммаР22, СуммаР3, ЗначСтроки2024(ВыборкаР1.П000010000703_));
		ДополнитьТаблицуРезультата2024();
		ВыборкаР2.Сбросить();
		ВыборкаР22.Сбросить();
		ВыборкаР3.Сбросить();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_05_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.5';
													|en = '1.5'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + ';
			|en = 'Значение суммы налога, подлежащей уплате в стр.030 Раздела 1 = стр.021 - (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) Раздела 1, если результат >= 0, иначе 0';
			|en = 'стр.025 + стр.027) Раздела 1, если результат >= 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4 - %5 - %6)';
													|en = '%1 = %2 (%3 - %4 - %5 - %6)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога, подлежащая уплате';
													|en = 'Возможно ошибочная сумма налога, подлежащая уплате'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.030 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С030"		, "П000010003003_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р01С023.Инверсия = Истина;
	Показатели.Р01С025.Инверсия = Истина;
	Показатели.Р01С027.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей2024(Показатели) - Показатели.Р01С030.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С030.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С030.Значение, 
			РасчетнаяСумма, Показатели.Р01С021.Значение, -Показатели.Р01С023.Значение, -Показатели.Р01С025.Значение, 
			-Показатели.Р01С027.Значение);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_06_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.6';
													|en = '1.6'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + ';
			|en = 'Значение суммы налога, исчисленной к уменьшению в стр.040 Раздела 1 = (стр.023 + '") +
		НСтр("ru = 'стр.025 + стр.027) - стр.021 Раздела 1, если результат > 0, иначе 0';
			|en = 'стр.025 + стр.027) - стр.021 Раздела 1, если результат > 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5 - %6)';
													|en = '%1 = %2 (%3 + %4 + %5 - %6)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога, исчисленная к уменьшению';
													|en = 'Возможно ошибочная сумма налога, исчисленная к уменьшению'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.040 Раздела 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.382 НК РФ';
													|en = 'п.2 ст.382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П000010004003_");
	ИменаПоказателей.Вставить("Р01С023"		, "П000010002303_");
	ИменаПоказателей.Вставить("Р01С025"		, "П000010002503_");
	ИменаПоказателей.Вставить("Р01С027"		, "П000010002703_");
	ИменаПоказателей.Вставить("Р01С021"		, "П000010002103_");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р01С021.Инверсия = Истина;
	
	Для Счетчик = 1 По ДанныеКС.КолСтрокР01 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, ДанныеКС.Раздел1, Счетчик);
		
		РасчетнаяСумма = Макс(СуммаПоказателей2024(Показатели) - Показатели.Р01С040.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С040.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р01С040.Значение, 
			РасчетнаяСумма, Показатели.Р01С023.Значение, Показатели.Р01С025.Значение, Показатели.Р01С027.Значение,
			-Показатели.Р01С021.Значение);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_2

Процедура ПроверкаКС_1_07_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.7';
													|en = '1.7'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость недвижимого имущества в стр.150 Раздела 2 = гр.3 (стр.020 ';
			|en = 'Среднегодовая стоимость недвижимого имущества в стр.150 Раздела 2 = гр.3 (стр.020 '") +
		НСтр("ru = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 ';
			|en = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 '") +
		НСтр("ru = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2 / 13';
			|en = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2 / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость имущества в стр.150 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020015003");
	НастройкиКС.Вставить("Графа"			, "3");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_08_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_08_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.8';
													|en = '1.8'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества в стр.170 Раздела 2 = гр.4 (';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества в стр.170 Раздела 2 = гр.4 ('") +
		НСтр("ru = 'стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + ';
			|en = 'стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + '") +
		НСтр("ru = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2) / 13';
			|en = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2) / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020017003");
	НастройкиКС.Вставить("Графа"			, "4");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_08_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_08_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.Показатель);
	ИменаПоказателей.Вставить("Р02П020"		, "П00002000200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П030"		, "П00002000300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П040"		, "П00002000400" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П050"		, "П00002000500" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П060"		, "П00002000600" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П070"		, "П00002000700" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П080"		, "П00002000800" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П090"		, "П00002000900" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П100"		, "П00002001000" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П110"		, "П00002001100" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П120"		, "П00002001200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П130"		, "П00002001300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р02П140"		, "П00002001400" + НастройкиКС.Графа);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		СуммаПоказателей = СуммаПоказателей2024(Показатели) - Показатели.Р02С001.Значение;
		РасчетнаяСумма = Окр(СуммаПоказателей / 13);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С001.Значение, 
			РасчетнаяСумма, СуммаПоказателей);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2024_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9.1';
													|en = '1.9.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0';
			|en = 'ела 2 = 0, если значение стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, если значение %2 не заполнено';
													|en = '%1 = 0, если значение %2 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Укажите среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_09_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2024_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9.2';
													|en = '1.9.2'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд';
			|en = 'Среднегодовая стоимость необлагаемого налогом недвижимого имущества за налоговый период в стр.170 Разд'") +
		НСтр("ru = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0';
			|en = 'ела 2 ≠ 0, если значение стр.160 Раздела 2 ≠ 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если значение %2 заполнено';
													|en = '%1 ≠ 0, если значение %2 заполнено'"));
	Заголовки.Вставить("Нарушение"		, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость необлагаемого имущества в стр.170 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_09_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_09_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С160"		, "П000020016003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		Если НастройкиКС.УсловиеРавноНулю Тогда
			НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		Иначе
			НастройкиКС.ЭтоОшибка	= ЗначениеЗаполнено(Показатели.Р02С160.Значение) 
				И НЕ ЗначениеЗаполнено(Показатели.Р02С170.Значение);
		КонецЕсли;
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р02С170.Значение, 
			Показатели.Р02С160.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_10_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.10';
													|en = '1.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2 х стр.180 Раздела 2, если код вида ';
			|en = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2 х стр.180 Раздела 2, если код вида '") +
		НСтр("ru = 'имущества в стр.001 Раздела 2 = 02';
			|en = 'имущества в стр.001 Раздела 2 = 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 ((%2 - %3) х %4/%5)';
													|en = '%1 = %6 ((%2 - %3) х %4/%5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база';
													|en = 'Возможно ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_11_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_11_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.11';
													|en = '1.11'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2, если код вида имущества в ';
			|en = 'Налоговая база в стр.190 Раздела 2 = (стр.150 - стр.170) Раздела 2, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 02';
			|en = 'стр.001 Раздела 2 ≠ 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 (%2 - %3)';
													|en = '%1 = %6 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база';
													|en = 'Возможно ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_11_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_11_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С150"		, "П000020015003");
	ИменаПоказателей.Вставить("Р02С170"		, "П000020017003");
	ИменаПоказателей.Вставить("Р02С181"		, "П000020018003_Числ");
	ИменаПоказателей.Вставить("Р02С182"		, "П000020018003_Знам");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р02С181.Расшифровывать	= НастройкиКС.КодИмущества2;
	Показатели.Р02С182.Расшифровывать	= НастройкиКС.КодИмущества2;
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		Разность = Макс(Показатели.Р02С150.Значение - Показатели.Р02С170.Значение, 0);
		Множитель = ?(Показатели.Р02С182.Значение = 0, 0, Показатели.Р02С181.Значение / Показатели.Р02С182.Значение);
		Множитель = ?(НастройкиКС.КодИмущества2, Множитель, 1);
		РасчетнаяСумма = Окр(Разность * Множитель);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества2 И Показатели.Р02С001.Значение = "02" 
			ИЛИ НЕ НастройкиКС.КодИмущества2 И НЕ Показатели.Р02С001.Значение = "02")
			И НЕ Показатели.Р02С190.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С190.Значение, Показатели.Р02С150.Значение, Показатели.Р02С170.Значение, 
			Показатели.Р02С181.Значение, Показатели.Р02С182.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_12_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.12';
													|en = '1.12'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210 х стр.215)';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210 х стр.215)'") +
		НСтр("ru = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 = 04, 09, 15';
			|en = ' Раздела 2 / 100, если код вида имущества в стр.001 Раздела 2 = 04, 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 х %4 / 100)';
													|en = '%1 = %5 (%2 х %3 х %4 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_13_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_13_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.13';
													|en = '1.13'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2 / 100, ес';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2 / 100, ес'") +
		НСтр("ru = 'ли код вида имущества в стр.001 Раздела 2 ≠ 04, 09, 15';
			|en = 'ли код вида имущества в стр.001 Раздела 2 ≠ 04, 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 / 100)';
													|en = '%1 = %5 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_13_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_13_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С190"		, "П000020019003");
	ИменаПоказателей.Вставить("Р02С210"		, "П000020021003");
	ИменаПоказателей.Вставить("Р02С215"		, "П000020021503");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р02С210.Округление = Ложь;
	
	ОтдельныеКодыИмущества = "04,09,15";
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С220, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С190, СтраницаР02);
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С210, СтраницаР02);
		
		ЗаполнитьПоказатель2024(Показатели.Р02С215, СтраницаР02);
		Показатели.Р02С215.Значение = ?(Показатели.Р02С215.Значение = "", 1, Число(Показатели.Р02С215.Значение));
		Показатели.Р02С215.Значение = ?(НастройкиКС.КодИмущества9, Показатели.Р02С215.Значение, 1);
		
		Если НастройкиКС.КодИмущества9 Тогда
			РасшифроватьПоказатель2024(Показатели.Р02С215);
		КонецЕсли;
		ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С001, СтраницаР02);
		
		КодНайден = НЕ СтрНайти(ОтдельныеКодыИмущества, Показатели.Р02С001.Значение) = 0;
		РасчетнаяСумма = Окр(Показатели.Р02С190.Значение * Показатели.Р02С210.Значение * Показатели.Р02С215.Значение / 100);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р02С001.Значение)
			И (НастройкиКС.КодИмущества9 И КодНайден ИЛИ НЕ НастройкиКС.КодИмущества9 И НЕ КодНайден)
			И НЕ Показатели.Р02С220.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С220.Значение, Показатели.Р02С190.Значение, Показатели.Р02С210.Значение, 
			Показатели.Р02С215.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_14_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.14';
													|en = '1.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2 ≠ 0, если значение стр.230 Раздела 2 '") +
		НСтр("ru = '= 2012500';
			|en = '= 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма льготы';
													|en = 'Возможно ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы в стр.240 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, "П000020023003_КодЛьготы");
	ИменаПоказателей.Вставить("Р02С002"		, "П000020024003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р02С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р02С002.Значение);
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С002.Значение, 
			Показатели.Р02С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_15_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.15';
													|en = '1.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.160 Раздела 2 = 0';
													|en = 'Код льготы в стр.160 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020016003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_16_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.16';
													|en = '1.16'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.170 Раздела 2 = 0';
													|en = 'Сумма льготы в стр.170 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020017003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_17_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.17';
													|en = '1.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.200 Раздела 2 = 0';
													|en = 'Код льготы в стр.200 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020020003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_18_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.18';
													|en = '1.18'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.230 Раздела 2 = 0';
													|en = 'Код льготы в стр.230 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020023003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_19_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.19';
													|en = '1.19'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.240 Раздела 2 = 0';
													|en = 'Сумма льготы в стр.240 Раздела 2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000020024003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_19_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_19_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р02С001.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, ?(ТипЗнч(Показатели.Р02С001.Значение) 
			= Тип("Число"), Показатели.Р02С001.Значение, Показатели.Р02С001.ЗначениеСтр));
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_20_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.20';
													|en = '1.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = 0, если'") +
		НСтр("ru = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2';
			|en = ' код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела 2 >= (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите сумму налога в стр.260 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Истина);
	НастройкиКС.Вставить("Стр250Больше"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_21_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.21';
													|en = '1.21'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = (стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = (стр.220'") +
		НСтр("ru = ' - стр.240 - стр.250) Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела';
			|en = ' - стр.240 - стр.250) Раздела 2, если код вида имущества в стр.001 Раздела 2 равен 04 и стр.250 Раздела'") +
		НСтр("ru = ' 2 < (стр. 220 - стр.240) Раздела 2';
			|en = ' 2 < (стр. 220 - стр.240) Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3 - %4)';
													|en = '%1 = %5 (%2 - %3 - %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Истина);
	НастройкиКС.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_22_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.22';
													|en = '1.22'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2 = стр.220'") +
		НСтр("ru = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04 и результат > 0, иначе 0';
			|en = ' - стр.240 Раздела 2, если код вида имущества в стр.001 Раздела 2 не равен 04 и результат > 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3)';
													|en = '%1 = %5 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.375 НК РФ';
													|en = 'п.1 ст.375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества4"	, Ложь);
	НастройкиКС.Вставить("Стр250Больше"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_22_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_22_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С260"		, "П000020026003");
	ИменаПоказателей.Вставить("Р02С220"		, "П000020022003");
	ИменаПоказателей.Вставить("Р02С240"		, "П000020024003");
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р02С250.Расшифровывать = НастройкиКС.КодИмущества4;
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		Показатели.Р02С250.Значение = ?(НастройкиКС.КодИмущества4, Показатели.Р02С250.Значение, 0);
		РасчетнаяСумма = Макс(Показатели.Р02С220.Значение - Показатели.Р02С240.Значение - Показатели.Р02С250.Значение, 0);
		
		Если НастройкиКС.КодИмущества4 И НастройкиКС.Стр250Больше Тогда
			НастройкиКС.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение >= (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли НастройкиКС.КодИмущества4 И НЕ НастройкиКС.Стр250Больше Тогда
			НастройкиКС.ЭтоОшибка = Показатели.Р02С001.Значение = "04" 
				И Показатели.Р02С250.Значение < (Показатели.Р02С220.Значение - Показатели.Р02С240.Значение)
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		ИначеЕсли НЕ НастройкиКС.КодИмущества4 Тогда
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" 
				И НЕ Показатели.Р02С260.Значение = РасчетнаяСумма;
		Иначе
			НастройкиКС.ЭтоОшибка = Ложь;
		КонецЕсли;
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р02С260.Значение, Показатели.Р02С220.Значение, Показатели.Р02С240.Значение, 
			Показатели.Р02С250.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_21

Процедура ПроверкаКС_1_23_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.23';
													|en = '1.23'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум';
			|en = 'Сумма стр. 050 Раздела 2.1 должна быть равна гр.3 стр.140 Раздела 2 с учетом погрешности 0,49 коп., ум'") +
		НСтр("ru = 'ноженной на количество листов Раздела 2.1';
			|en = 'ноженной на количество листов Раздела 2.1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%3 (%1 - %2) <= %5 (0,49 х %4)';
													|en = '%3 (%1 - %2) <= %5 (0,49 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма остаточной стоимости недвижимого имущества';
													|en = 'Возможно ошибочная сумма остаточной стоимости недвижимого имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните стоимость имущества в стр.140 Раздела 2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 374 НК РФ';
													|en = 'п. 1 ст. 374 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С140"		, "П000020014003");
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР1 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР2 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьПроверку2024();
	СуммаР02 = 0;
	СуммаР21 = 0;
	КоличествоР21 = 0;
	
	Если ВыборкаР1.Следующий() Тогда
		СуммаР02 = ВыборкаР1.П000020014003;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р02С140, Выборка);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР21 = ВыборкаР2.П000210005003;
		Выборка = ВыборкаР2.Выбрать();
		КоличествоР21 = Выборка.Количество();
		Если НЕ ДанныеКС.Турборежим21 Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	РасчетнаяСумма1			= СуммаР21 - СуммаР02;
	РасчетнаяСумма1			= ?(РасчетнаяСумма1 < 0, - РасчетнаяСумма1, РасчетнаяСумма1);
	РасчетнаяСумма2			= Окр(0.49 * КоличествоР21);
	НастройкиКС.ЭтоОшибка	= НЕ РасчетнаяСумма1 <= РасчетнаяСумма2;
	НастройкиКС.Детализация	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
		СуммаР21, СуммаР02, РасчетнаяСумма1, КоличествоР21, РасчетнаяСумма2);
	ДополнитьТаблицуРезультата2024();
	
КонецПроцедуры

Процедура ПроверкаКС_1_24_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.24';
													|en = '1.24'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен';
			|en = 'Минимум один показатель по стр.050 Раздела 2.1 должен быть больше 0, если Раздел 3 не заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, когда Раздел 3 не заполнен';
													|en = '%1 ≠ 0, когда Раздел 3 не заполнен'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма остаточной стоимости основных средств';
													|en = 'Возможно ошибочная сумма остаточной стоимости основных средств'"));
	Заголовки.Вставить("Рекомендации"		, "Заполните стр.050 Раздела 2.1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21С050"		, "П000210005003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВТ;
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	ВТ_Р02.Р02С140	КАК П000020014003,
	|	ВТ_Р02.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ02 КАК ВТ_Р02
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000020014003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р03.Р03С130	КАК П000030013003,
	|	ВТ_Р03.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ03 КАК ВТ_Р03
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000030013003)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Р21.Р21С050	КАК П000210005003,
	|	ВТ_Р21.НомерСтраницы КАК НомерСтраницы
	|ИЗ
	|	ВТ21 КАК ВТ_Р21
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтраницы
	|ИТОГИ
	|	СУММА(П000210005003)
	|ПО
	|	ОБЩИЕ";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ВыборкаР2 = Результат[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = Результат[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР21 = Результат[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьПроверку2024();
	СуммаР02 = 0;
	СуммаР03 = 0;
	СуммаР21 = 0;
	
	Если ВыборкаР2.Следующий() Тогда
		СуммаР02 = ВыборкаР2.П000020014003;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		СуммаР03 = ВыборкаР3.П000030013003;
	КонецЕсли;
	
	Если ВыборкаР21.Следующий() Тогда
		СуммаР21 = ВыборкаР21.П000210005003;
		Выборка = ВыборкаР21.Выбрать();
		
		Если НЕ ДанныеКС.Турборежим21 Тогда
			Пока Выборка.Следующий() Цикл
				ЗаполнитьИРасшифроватьПоказатель2024(Показатели.Р21С050, Выборка);
			КонецЦикла;
		КонецЕсли; 
	КонецЕсли; 
		
	НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(СуммаР03) И ЗначениеЗаполнено(СуммаР02) И НЕ ЗначениеЗаполнено(СуммаР21);
	НастройкиКС.Детализация	= СтрШаблон(НастройкиКС.ШаблонДетализации, СуммаР21);
	ДополнитьТаблицуРезультата2024();
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_22

Процедура ПроверкаКС_1_25_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.25';
													|en = '1.25'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта недвижимого имущества в стр.150 Раздела 2.2 = гр.3 (стр.020 ';
			|en = 'Среднегодовая стоимость объекта недвижимого имущества в стр.150 Раздела 2.2 = гр.3 (стр.020 '") +
		НСтр("ru = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 ';
			|en = '+ стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 '") +
		НСтр("ru = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2.2 / 13';
			|en = '+ стр.100 + стр.110 + стр.120 + стр.130 + стр.140) Раздела 2.2 / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость объекта имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость объекта имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните среднегодовую стоимость объекта имущества в стр.150 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220015003");
	НастройкиКС.Вставить("Графа"			, "3");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_26_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_26_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.26';
													|en = '1.26'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 '") +
		НСтр("ru = '= гр.4 (стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + ';
			|en = '= гр.4 (стр.020 + стр.030 + стр.040 + стр.050 + стр.060 + стр.070 + стр.080 + стр.090 + стр.100 + '") +
		НСтр("ru = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2.2) / 13';
			|en = 'стр.110 + стр.120 + стр.130 + стр.140 Раздела 2.2) / 13'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / 13)';
													|en = '%1 = %2 (%3 / 13)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Уточните среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.4 ст.376 НК РФ';
													|en = 'п.4 ст.376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220017003");
	НастройкиКС.Вставить("Графа"			, "4");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_26_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_26_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель);
	ИменаПоказателей.Вставить("Р22П020"		, "П00022000200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П030"		, "П00022000300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П040"		, "П00022000400" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П050"		, "П00022000500" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П060"		, "П00022000600" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П070"		, "П00022000700" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П080"		, "П00022000800" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П090"		, "П00022000900" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П100"		, "П00022001000" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П110"		, "П00022001100" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П120"		, "П00022001200" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П130"		, "П00022001300" + НастройкиКС.Графа);
	ИменаПоказателей.Вставить("Р22П140"		, "П00022001400" + НастройкиКС.Графа);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		
		СуммаПоказателей = СуммаПоказателей2024(Показатели) - Показатели.Р22С001.Значение;
		РасчетнаяСумма = Окр(СуммаПоказателей / 13);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р22С001.Значение = РасчетнаяСумма;
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С001.Значение, 
			РасчетнаяСумма, СуммаПоказателей);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2024_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27.1';
													|en = '1.27.1'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в '") +
		НСтр("ru = 'стр.170 Раздела 2.2 = 0, если значение стр.160 Раздела 2.2 = 0';
			|en = 'стр.170 Раздела 2.2 = 0, если значение стр.160 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, если значение %2 не заполнено';
													|en = '%1 = 0, если значение %2 не заполнено'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Укажите среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_27_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2024_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27.2';
													|en = '1.27.2'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в ';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества за налоговый период в '") +
		НСтр("ru = 'стр.170 Раздела 2.2 ≠ 0, если значение стр.160 Раздела 2.2 ≠ 0';
			|en = 'стр.170 Раздела 2.2 ≠ 0, если значение стр.160 Раздела 2.2 ≠ 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если значение %2 заполнено';
													|en = '%1 ≠ 0, если значение %2 заполнено'"));
	Заголовки.Вставить("Нарушение"		, 
		НСтр("ru = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период';
			|en = 'Возможно ошибочная среднегодовая стоимость объекта необлагаемого имущества за налоговый период'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Уточните среднегодовую стоимость объекта необлагаемого имущества в стр.170 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 4 ст. 376 НК РФ';
													|en = 'п. 4 ст. 376 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УсловиеРавноНулю"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_27_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_27_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С170"		, "П000220017003");
	ИменаПоказателей.Вставить("Р22С160"		, "П000220016003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		
		Если НастройкиКС.УсловиеРавноНулю Тогда
			НастройкиКС.ЭтоОшибка	= НЕ ЗначениеЗаполнено(Показатели.Р22С160.Значение) 
				И ЗначениеЗаполнено(Показатели.Р22С170.Значение);
		Иначе
			НастройкиКС.ЭтоОшибка	= ЗначениеЗаполнено(Показатели.Р22С160.Значение) 
				И НЕ ЗначениеЗаполнено(Показатели.Р22С170.Значение);
		КонецЕсли;
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С170.Значение, 
			Показатели.Р22С160.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_28_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.28';
													|en = '1.28'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 = 0';
			|en = 'Среднегодовая стоимость объекта необлагаемого налогом недвижимого имущества в стр.170 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220017003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_29_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.29';
													|en = '1.29'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2 х стр.180 Раздела 2.2, ';
			|en = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2 х стр.180 Раздела 2.2, '") +
		НСтр("ru = 'если код вида имущества в стр.001 Раздела 2.2 = 02';
			|en = 'если код вида имущества в стр.001 Раздела 2.2 = 02'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 ((%2 - %3) х %4/%5)';
													|en = '%1 = %6 ((%2 - %3) х %4/%5)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база';
													|en = 'Возможно ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_30_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.30';
													|en = '1.30'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2, если код вида имущества в ';
			|en = 'Налоговая база в стр.190 Раздела 2.2 = (стр.150 - стр.170) Раздела 2.2, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 02, 04';
			|en = 'стр.001 Раздела 2 ≠ 02, 04'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %6 (%2 - %3)';
													|en = '%1 = %6 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база';
													|en = 'Возможно ошибочная налоговая база'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните налоговую базу в стр.190 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 375 НК РФ';
													|en = 'п. 1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества2"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_30_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_30_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С190"		, "П000220019003");
	ИменаПоказателей.Вставить("Р22С150"		, "П000220015003");
	ИменаПоказателей.Вставить("Р22С170"		, "П000220017003");
	ИменаПоказателей.Вставить("Р22С181"		, "П000220018003_Числ");
	ИменаПоказателей.Вставить("Р22С182"		, "П000220018003_Знам");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р22С181.Расшифровывать	= НастройкиКС.КодИмущества2;
	Показатели.Р22С182.Расшифровывать	= НастройкиКС.КодИмущества2;
	
	СтрокаКодов = ("02,04");
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		
		Разность = Макс(Показатели.Р22С150.Значение - Показатели.Р22С170.Значение, 0);
		Множитель = ?(Показатели.Р22С182.Значение = 0, 0, Показатели.Р22С181.Значение / Показатели.Р22С182.Значение);
		Множитель = ?(НастройкиКС.КодИмущества2, Множитель, 1);
		РасчетнаяСумма = Окр(Разность * Множитель);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества2 И Показатели.Р22С001.Значение = "02" 
			ИЛИ НЕ НастройкиКС.КодИмущества2 И СтрНайти(СтрокаКодов, Показатели.Р22С001.Значение) = 0)
			И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С190.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С190.Значение, Показатели.Р22С150.Значение, Показатели.Р22С170.Значение, 
			Показатели.Р22С181.Значение, Показатели.Р22С182.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_31_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.31';
													|en = '1.31'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2.2 = (стр.190 х стр.210 х стр.215) Раздела 2.2 ';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2.2 = (стр.190 х стр.210 х стр.215) Раздела 2.2 '") +
		НСтр("ru = '/ 100, если код вида имущества в стр.001 Раздела 2.2 = 09, 15';
			|en = '/ 100, если код вида имущества в стр.001 Раздела 2.2 = 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 х %4 / 100)';
													|en = '%1 = %5 (%2 х %3 х %4 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_33_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_32_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.32';
													|en = '1.32'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.200 Раздела 2.2 = 0';
													|en = 'Код льготы в стр.200 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220020003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_33_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.33';
													|en = '1.33'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2.2 / 100, ес';
			|en = 'Сумма налога за налоговый период в стр.220 Раздела 2 = (стр.190 х стр.210) Раздела 2.2 / 100, ес'") +
		НСтр("ru = 'ли код вида имущества в стр.001 Раздела 2.2 ≠ 09, 15';
			|en = 'ли код вида имущества в стр.001 Раздела 2.2 ≠ 09, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 х %3 / 100)';
													|en = '%1 = %5 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.220 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("КодИмущества9"		, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_33_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_33_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С190"		, "П000220019003");
	ИменаПоказателей.Вставить("Р22С210"		, "П000220021003");
	ИменаПоказателей.Вставить("Р22С215"		, "П000220021503");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р22С210.Округление = Ложь;
	
	ОтдельныеКодыИмущества = "09,15";
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		Показатели.Р22С215.Значение = ?(Показатели.Р22С215.Значение = "", 1, Число(Показатели.Р22С215.Значение));
		Показатели.Р22С215.Значение = ?(НастройкиКС.КодИмущества9, Показатели.Р22С215.Значение, 1);
		
		КодНайден = НЕ СтрНайти(ОтдельныеКодыИмущества, Показатели.Р22С001.Значение) = 0;
		РасчетнаяСумма = Окр(Показатели.Р22С190.Значение * Показатели.Р22С210.Значение * Показатели.Р22С215.Значение / 100);
		
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества9 И КодНайден ИЛИ НЕ НастройкиКС.КодИмущества9 И НЕ КодНайден)
		   	И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С220.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатель2024(Показатели.Р22С220);
		РасшифроватьПоказатель2024(Показатели.Р22С190);
		РасшифроватьПоказатель2024(Показатели.Р22С210);
		
		Если НастройкиКС.КодИмущества9 Тогда
			РасшифроватьПоказатель2024(Показатели.Р22С215);
		КонецЕсли;
		РасшифроватьПоказатель2024(Показатели.Р22С001);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С220.Значение, Показатели.Р22С190.Значение, Показатели.Р22С210.Значение, 
			Показатели.Р22С215.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_34_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.34';
													|en = '1.34'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код льготы в стр.230 Раздела 2.2 = 0';
													|en = 'Код льготы в стр.230 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220023003_КодЛьготы");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_34_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатель2024(Показатели.Р22С001, СтраницаР22);
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р22С001.Значение);
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатель2024(Показатели.Р22С001);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, ?(ТипЗнч(Показатели.Р22С001.Значение) 
			= Тип("Число"), Показатели.Р22С001.Значение, Показатели.Р22С001.ЗначениеСтр));
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_35_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.35';
													|en = '1.35'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2.2 ≠ 0, если значение стр.230 ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.240 Раздела 2.2 ≠ 0, если значение стр.230 '") +
		НСтр("ru = 'Раздела 2.2 = 2012500';
			|en = 'Раздела 2.2 = 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма льготы';
													|en = 'Возможно ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы в стр.240 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель1"		, "П000220023003_КодЛьготы");
	НастройкиКС.Вставить("Показатель2"		, "П000220024003");
	НастройкиКС.Вставить("КодЛьготы"		, "2012500");
	
	ПроверкаКС_1_36_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_36_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.36';
													|en = '1.36'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налогового вычета в стр.250 Раздела 2.2 ≠ 0, если значение стр.245 ';
			|en = 'Сумма налогового вычета в стр.250 Раздела 2.2 ≠ 0, если значение стр.245 '") +
		НСтр("ru = 'Раздела 2.2 = 2010601';
			|en = 'Раздела 2.2 = 2010601'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0, если %2 = %3';
													|en = '%1 ≠ 0, если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налогового вычета';
													|en = 'Возможно ошибочная сумма налогового вычета'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налогового вычета в стр.250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель1"		, "П000220024503");
	НастройкиКС.Вставить("Показатель2"		, "П000220025003");
	НастройкиКС.Вставить("КодЛьготы"		, "2010601");
	
	ПроверкаКС_1_36_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_36_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С001"		, НастройкиКС.Показатель1);
	ИменаПоказателей.Вставить("Р22С002"		, НастройкиКС.Показатель2);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	МассивЗначений = СтрРазделить(НастройкиКС.КодЛьготы, ",", Ложь);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р22С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р22С002.Значение);
		
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р22С002.Значение, 
			Показатели.Р22С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_37_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.37';
													|en = '1.37'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налогового вычета в стр.250 Раздела 2.2 <= (стр.220 - стр.240) Раздела 2.2, если значение ';
			|en = 'Сумма налогового вычета в стр.250 Раздела 2.2 <= (стр.220 - стр.240) Раздела 2.2, если значение '") +
		НСтр("ru = 'стр.245 Раздела 2.2 = 2010601';
			|en = 'стр.245 Раздела 2.2 = 2010601'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2 (%3 - %4), если %5 = 2010601';
													|en = '%1 <= %2 (%3 - %4), если %5 = 2010601'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налогового вычета';
													|en = 'Возможно ошибочная сумма налогового вычета'"));
	Заголовки.Вставить("Рекомендации"		, "Уменьшите сумму налогового вычета в стр.250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С240"		, "П000220024003");
	ИменаПоказателей.Вставить("Р22С245"		, "П000220024503");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		РасчетнаяСумма = Макс(Показатели.Р22С220.Значение - Показатели.Р22С240.Значение, 0);
		НастройкиКС.ЭтоОшибка = Показатели.Р22С245.Значение = "2010601" И Показатели.Р22С250.Значение > РасчетнаяСумма; 
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р22С250.Значение, РасчетнаяСумма, 
			Показатели.Р22С220.Значение, Показатели.Р22С240.Значение, Показатели.Р22С245.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_38_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.38';
													|en = '1.38'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма льготы в стр.240 Раздела 2.2 = 0';
													|en = 'Сумма льготы в стр.240 Раздела 2.2 = 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0';
													|en = '%1 = 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Убедитесь в наличии оснований для применения льготы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Проверка носит справочный характер';
													|en = 'Проверка носит справочный характер'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Показатель"		, "П000220024003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_34_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_39_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.39';
													|en = '1.39'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код налоговой льготы в стр.245 Раздела 2.2 и сумма налогового вычета в стр.250 Раздела 2.2 ';
			|en = 'Код налоговой льготы в стр.245 Раздела 2.2 и сумма налогового вычета в стр.250 Раздела 2.2 '") +
		НСтр("ru = 'не заполняются, если код вида имущества в стр.001 Раздела 2.2 = 15';
			|en = 'не заполняются, если код вида имущества в стр.001 Раздела 2.2 = 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = (..) и %2 = 0, если %3 = 15';
													|en = '%1 = (..) и %2 = 0, если %3 = 15'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно необоснованное применение льготы';
													|en = 'Возможно необоснованное применение льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Удалите значения в стр.245, 250 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С245"		, "П000220024503");
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		НастройкиКС.ЭтоОшибка = Показатели.Р22С001.Значение = "15" И (ЗначениеЗаполнено(Показатели.Р22С245.Значение) 
			ИЛИ ЗначениеЗаполнено(Показатели.Р22С250.Значение));
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С245.ЗначениеСтр, Показатели.Р22С250.Значение, Показатели.Р22С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_40_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.40';
													|en = '1.40'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = '") +
		НСтр("ru = '(стр.220 - стр.240) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 = 15';
			|en = '(стр.220 - стр.240) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 = 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3)';
													|en = '%1 = %5 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст. 375 НК РФ';
													|en = 'п.1 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодИмущества15"	, Истина);
	ПроверкаКС_1_41_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_41_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.41';
													|en = '1.41'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.260 Раздела 2.2 = '") +
		НСтр("ru = '(стр.220 - стр.240 - стр.250) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 ≠ 04, 15';
			|en = '(стр.220 - стр.240 - стр.250) Раздела 2.2, если код вида имущества в стр.001 Раздела 2.2 ≠ 04, 15'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %5 (%2 - %3 - %4)';
													|en = '%1 = %5 (%2 - %3 - %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.260 Раздела 2.2");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.1 ст.375 НК РФ';
													|en = 'п.1 ст.375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодИмущества15"	, Ложь);
	ПроверкаКС_1_41_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_41_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22С260"		, "П000220026003");
	ИменаПоказателей.Вставить("Р22С220"		, "П000220022003");
	ИменаПоказателей.Вставить("Р22С240"		, "П000220024003");
	ИменаПоказателей.Вставить("Р22С250"		, "П000220025003");
	ИменаПоказателей.Вставить("Р22С001"		, "П000220000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р22С250.Расшифровывать = НастройкиКС.КодИмущества15;
	
	СтрокаКодов = ("04,15");
	
	Для каждого СтраницаР22 Из ДанныеКС.Раздел22 Цикл
		
		ЗаполнитьПоказатели2024(Показатели, СтраницаР22);
		Показатели.Р22С250.Значение = ?(НастройкиКС.КодИмущества15, 0, Показатели.Р22С250.Значение);
		
		РасчетнаяСумма = Макс(Показатели.Р22С220.Значение - Показатели.Р22С240.Значение - Показатели.Р22С250.Значение, 0);
		НастройкиКС.ЭтоОшибка = (НастройкиКС.КодИмущества15 И Показатели.Р22С001.Значение = "15" 
			ИЛИ НЕ НастройкиКС.КодИмущества15 И СтрНайти(СтрокаКодов, Показатели.Р22С001.Значение) = 0)
			И ЗначениеЗаполнено(Показатели.Р22С001.Значение)
			И НЕ Показатели.Р22С260.Значение = РасчетнаяСумма;
			
		Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
			Продолжить;
		КонецЕсли; 
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР22.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		РасшифроватьПоказатели2024(Показатели);
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р22С260.Значение, Показатели.Р22С220.Значение, Показатели.Р22С240.Значение, 
			Показатели.Р22С250.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область КС_Проверки_Раздела_3

Процедура ПроверкаКС_1_42_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.42';
													|en = '1.42'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.030 х стр.050) Раздела 3, ';
			|en = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.030 х стр.050) Раздела 3, '") +
		НСтр("ru = 'если стр.030 Раздела 3 заполнена';
			|en = 'если стр.030 Раздела 3 заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 ((%2 - %3) х %4/%5 х %6/%7)';
													|en = '%1 = %8 ((%2 - %3) х %4/%5 х %6/%7)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налоговой базы';
													|en = 'Возможно ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налоговой базы в стр.060 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УчитыватьСтр030"	, Истина);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_43_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_43_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.43';
													|en = '1.43'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.050) Раздела 3, если ';
			|en = 'Налоговая база в стр.060 Раздела 3 = ((стр.020 - стр.025) х стр.050) Раздела 3, если '") +
		НСтр("ru = 'стр.030 Раздела 3 не заполнена';
			|en = 'стр.030 Раздела 3 не заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 ((%2 - %3) х %6/%7)';
													|en = '%1 = %8 ((%2 - %3) х %6/%7)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налоговой базы';
													|en = 'Возможно ошибочная сумма налоговой базы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налоговой базы в стр.060 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1';
			|en = 'При отсутствии значения в стр. 050 Раздела 3 оно принимается равным 1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("УчитыватьСтр030"	, Ложь);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_43_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_43_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С020"		, "П000030002003");
	ИменаПоказателей.Вставить("Р03С025"		, "П000030002503");
	ИменаПоказателей.Вставить("Р03С031"		, "П000030003003_Числ");
	ИменаПоказателей.Вставить("Р03С032"		, "П000030003003_Знам");
	ИменаПоказателей.Вставить("Р03С051"		, "П000030005003_Числ");
	ИменаПоказателей.Вставить("Р03С052"		, "П000030005003_Знам");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р03С031.Округление = Ложь;
	Показатели.Р03С032.Округление = Ложь;
	Показатели.Р03С051.Округление = Ложь;
	Показатели.Р03С052.Округление = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		Показатели.Р03С031.Расшифровывать = НастройкиКС.УчитыватьСтр030;
		Показатели.Р03С032.Расшифровывать = НастройкиКС.УчитыватьСтр030;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		Стр030Заполнена = ЗначениеЗаполнено(Показатели.Р03С032.Значение);
		Разность = Макс(Показатели.Р03С020.Значение - Показатели.Р03С025.Значение, 0);
		Стр030 = ?(Показатели.Р03С032.Значение = 0, 1, Показатели.Р03С031.Значение / Показатели.Р03С032.Значение);
		Стр050 = ?(Показатели.Р03С052.Значение = 0, 1, Показатели.Р03С051.Значение / Показатели.Р03С052.Значение);
		РасчетнаяСумма = Окр(Разность * Стр030 * Стр050);
			
		НастройкиКС.ЭтоОшибка = (НастройкиКС.УчитыватьСтр030 И Стр030Заполнена
			ИЛИ НЕ НастройкиКС.УчитыватьСтр030 И НЕ Стр030Заполнена) И НЕ Показатели.Р03С060.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С060.Значение, Показатели.Р03С020.Значение, Показатели.Р03С025.Значение, Показатели.Р03С031.Значение,
			Показатели.Р03С032.Значение, Показатели.Р03С051.Значение, Показатели.Р03С052.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_44_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.44';
													|en = '1.44'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Коэффициент Ки в стр.095 Раздела 3 должен быть меньше 1, если коэффициент Кв в стр.090 Раздела 3 больш';
			|en = 'Коэффициент Ки в стр.095 Раздела 3 должен быть меньше 1, если коэффициент Кв в стр.090 Раздела 3 больш'") +
		НСтр("ru = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0';
			|en = 'е 0 и меньше 1 и стр.095 Раздела 3 больше 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1/%2 < 1';
													|en = '%1/%2 < 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение коэффициента Ки';
													|en = 'Возможно ошибочное значение коэффициента Ки'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите значение коэффициента Ки в стр.095 Раздела 3 < 1");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р03С090.Расшифровывать = Ложь;
	Показатели.Р03С091.Расшифровывать = Ложь;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 0, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 0, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		УсловиеВыполнено = НЕ НольИлиЕдиница2024(Р03С090_Значение) И Р03С095_Значение > 0;
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Р03С095_Значение < 1;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р03С095.Значение,
			Показатели.Р03С096.Значение);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_45_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.45';
													|en = '1.45'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090) Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090) Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %4/%5 / 100)';
													|en = '%1 = %8 (%2 х %3 х %4/%5 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Учитывать090");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_46_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.46';
													|en = '1.46'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090 х стр.095) ';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.090 х стр.095) '") +
		НСтр("ru = 'Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = 'Раздела 3 / 100, если стр.090 Раздела 3 не равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %4/%5 х %6/%7 / 100)';
													|en = '%1 = %8 (%2 х %3 х %4/%5 х %6/%7 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Учитывать090и095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_47_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.47';
													|en = '1.47'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.095) Раздела 3 / 100, ес';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080 х стр.095) Раздела 3 / 100, ес'") +
		НСтр("ru = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1';
			|en = 'ли стр.090 Раздела 3 равна 0 или 1, и стр.095 Раздела 3 не равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 х %6/%7 / 100)';
													|en = '%1 = %8 (%2 х %3 х %6/%7 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("Учитывать095");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_48_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.48';
													|en = '1.48'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080) Раздела 3 / 100, если  стр.090 Раздела ';
			|en = 'Сумма налога в стр.100 Раздела 3 = (стр.060 х стр.080) Раздела 3 / 100, если  стр.090 Раздела '") +
		НСтр("ru = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1';
			|en = '3 равна 0 или 1, и стр.095 Раздела 3 равна 0 или 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %8 (%2 х %3 / 100)';
													|en = '%1 = %8 (%2 х %3 / 100)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.100 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("БезМножителей");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_48_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_48_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С060"		, "П000030006003");
	ИменаПоказателей.Вставить("Р03С080"		, "П000030008003");
	ИменаПоказателей.Вставить("Р03С090"		, "П000030009003_Числ");
	ИменаПоказателей.Вставить("Р03С091"		, "П000030009003_Знам");
	ИменаПоказателей.Вставить("Р03С095"		, "П000030009503_Числ");
	ИменаПоказателей.Вставить("Р03С096"		, "П000030009503_Знам");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р03С080.Округление = Ложь;
	Показатели.Р03С090.Расшифровывать = НастройкиКС.Свойство("Учитывать090") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С091.Расшифровывать = НастройкиКС.Свойство("Учитывать090") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С095.Расшифровывать = НастройкиКС.Свойство("Учитывать095") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	Показатели.Р03С096.Расшифровывать = НастройкиКС.Свойство("Учитывать095") ИЛИ НастройкиКС.Свойство("Учитывать090и095");
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		Р03С090_Значение = ?(Показатели.Р03С091.Значение = 0, 1, Показатели.Р03С090.Значение/Показатели.Р03С091.Значение);
		Р03С095_Значение = ?(Показатели.Р03С096.Значение = 0, 1, Показатели.Р03С095.Значение/Показатели.Р03С096.Значение);
		
		РасчетнаяСумма = Окр(Показатели.Р03С060.Значение * Показатели.Р03С080.Значение * Р03С090_Значение * 
			Р03С095_Значение / 100);
			
		НастройкиКС.ЭтоОшибка = (НЕ НольИлиЕдиница2024(Р03С090_Значение) И НольИлиЕдиница2024(Р03С095_Значение) 
			И НастройкиКС.Свойство("Учитывать090") 
			ИЛИ НЕ НольИлиЕдиница2024(Р03С090_Значение) И НЕ НольИлиЕдиница2024(Р03С095_Значение)
			И НастройкиКС.Свойство("Учитывать090и095") 
			ИЛИ НольИлиЕдиница2024(Р03С090_Значение) И НЕ НольИлиЕдиница2024(Р03С095_Значение)
			И НастройкиКС.Свойство("Учитывать095") 
			ИЛИ НольИлиЕдиница2024(Р03С090_Значение) И НольИлиЕдиница2024(Р03С095_Значение)
			И НастройкиКС.Свойство("БезМножителей")) 
			И НЕ Показатели.Р03С100.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С100.Значение, Показатели.Р03С060.Значение, Показатели.Р03С080.Значение, 
			Показатели.Р03С090.Значение, Показатели.Р03С091.Значение, Показатели.Р03С095.Значение, 
			Показатели.Р03С096.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_49_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.49';
													|en = '1.49'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма льготы, уменьшающая сумму налога в стр.120 Раздела 3 ≠ 0, если значение стр.110 Раздела 3 = ';
			|en = 'Сумма льготы, уменьшающая сумму налога в стр.120 Раздела 3 ≠ 0, если значение стр.110 Раздела 3 = '") +
		НСтр("ru = '2012500';
			|en = '2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 ≠ 0 если %2 = %3';
													|en = '%1 ≠ 0 если %2 = %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма льготы';
													|en = 'Возможно ошибочная сумма льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму льготы, уменьшающую сумму налога в стр.120 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п.2 ст.372 НК РФ';
													|en = 'п.2 ст.372 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("ПоказательКода"	, "П000030011003_КодЛьготы");
	НастройкиКС.Вставить("ПоказательСуммы"	, "П000030012003");
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	ИменаПоказателей.Вставить("Р03С002"		, "П000030012003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = НЕ МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено 
			И НЕ ЗначениеЗаполнено(Показатели.Р03С002.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С002.Значение, 
			Показатели.Р03С001.ЗначениеСтр, СтрСоединить(МассивЗначений, ", "));
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_50_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.50';
													|en = '1.50'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кадастрового номера в стр.015 Раздела 3 не должно содержать символы %1 и буквы %2, если значе';
			|en = 'Значение кадастрового номера в стр.015 Раздела 3 не должно содержать символы %1 и буквы %2, если значе'") +
		НСтр("ru = 'ние кадастрового номера заполнено';
			|en = 'ние кадастрового номера заполнено'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кадастрового номера';
													|en = 'Возможно ошибочное значение кадастрового номера'"));
	Заголовки.Вставить("Рекомендации"		, "Удалите из кадастрового номера в стр.015 Раздела 3 не рекомендованные символы");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	
	СтрокаСимволов			= ". , ; "" / ! @ # $ % ^ & * () _ + | \ - ' ] [ } { ` ~ N ? < >";
	СтрокаБукв				= "О, З";
	Заголовки.Описание		= ПодставитьПараметрыВСтроку(Заголовки.Описание, СтрокаСимволов, СтрокаБукв);
	СтрокаСимволов			= СтрЗаменить(СтрокаСимволов + СтрокаБукв, " ", "");
	
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С015"		, "П000030001501");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		НедопустимыйСимвол = Ложь;
		
		Если ЗначениеЗаполнено(Показатели.Р03С015.Значение) Тогда
			ДлинаСтрСимволов = СтрДлина(СтрокаСимволов);
			Для Счетчик = 1 По ДлинаСтрСимволов Цикл
				Если НЕ Найти(Показатели.Р03С015.Значение, Сред(СтрокаСимволов, Счетчик, 1)) = 0 Тогда
					НедопустимыйСимвол = Истина;
					Прервать;
				КонецЕсли;
			КонецЦикла; 
		КонецЕсли; 
		
		НастройкиКС.ЭтоОшибка = НедопустимыйСимвол;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С015.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_51_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.51';
													|en = '1.51'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000';
			|en = 'Если заполнена вторая часть стр.040 Раздела 3, то первые 7 знаков стр.040 Раздела 3 = 2012000'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код налоговой льготы';
													|en = 'Возможно ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.040 Раздела 3 = 2012000");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("ЦелевойПоказатель"	, "П000030004003_КодЛьготы");
	НастройкиКС.Вставить("БазовыйПоказатель"	, "П000030004003_Основание");
	НастройкиКС.Вставить("ЦелевоеЗначение"		, "2012000");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_52_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_52_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.52';
													|en = '1.52'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400';
			|en = 'Если заполнена стр.070 Раздела 3, то первые 7 знаков стр.070 Раздела 3 = 2012400'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код налоговой льготы';
													|en = 'Возможно ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.070 Раздела 3 = 2012400");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	НастройкиКС.Вставить("ЦелевойПоказатель"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("БазовыйПоказатель"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("ЦелевоеЗначение"		, "2012400");
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверкаКС_1_52_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_1_52_2024_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, НастройкиКС.ЦелевойПоказатель);
	ИменаПоказателей.Вставить("Р03С002"		, НастройкиКС.БазовыйПоказатель);
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	Показатели.Р03С002.Расшифровывать = НЕ НастройкиКС.ЦелевойПоказатель = НастройкиКС.БазовыйПоказатель;
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С002.Значение) 
			И НЕ Показатели.Р03С001.Значение = НастройкиКС.ЦелевоеЗначение;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_53_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.53';
													|en = '1.53'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500';
			|en = 'Если заполнена стр.110 Раздела 3, то первые 7 знаков стр.110 Раздела 3 = 2012500'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код налоговой льготы';
													|en = 'Возможно ошибочный код налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите первые 7 знаков стр.110 Раздела 3 = 2012500");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'ст. 381 НК РФ';
													|en = 'ст. 381 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
		
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С001"		, "П000030011003_КодЛьготы");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	МассивЗначений = СтрРазделить("2012500", ",", Ложь);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.Р03С001.Значение) 
			И МассивЗначений.Найти(Показатели.Р03С001.Значение) = Неопределено;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, Показатели.Р03С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_1_54_2024()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.54';
													|en = '1.54'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 ';
			|en = 'Исчисленная сумма налога, подлежащая уплате в бюджет за налоговый период в стр.130 '") +
		НСтр("ru = 'Раздела 3 = (стр.100 - стр.120) Раздела 3, если результат >= 0, иначе 0';
			|en = 'Раздела 3 = (стр.100 - стр.120) Раздела 3, если результат >= 0, иначе 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %4 (%2 - %3)';
													|en = '%1 = %4 (%2 - %3)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога';
													|en = 'Возможно ошибочная сумма налога'"));
	Заголовки.Вставить("Рекомендации"		, "Уточните сумму налога в стр.130 Раздела 3");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 2 ст. 375 НК РФ';
													|en = 'п. 2 ст. 375 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С130"		, "П000030013003");
	ИменаПоказателей.Вставить("Р03С100"		, "П000030010003");
	ИменаПоказателей.Вставить("Р03С120"		, "П000030012003");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР03 Из ДанныеКС.Раздел3 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР03.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР03);
		
		РасчетнаяСумма = Макс(Показатели.Р03С100.Значение - Показатели.Р03С120.Значение, 0);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р03С130.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С130.Значение, Показатели.Р03С100.Значение, Показатели.Р03С120.Значение, РасчетнаяСумма);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область КС_Проверки_дополнительные

Процедура ПроверкаКС_2_01_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.01';
													|en = '2.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в ';
			|en = 'Сумма налога, уплаченная за пределами РФ в стр.250 Раздела 2 = 0, если код вида имущества в '") +
		НСтр("ru = 'стр.001 Раздела 2 ≠ 04';
			|en = 'стр.001 Раздела 2 ≠ 04'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, когда %2 ≠ 04';
													|en = '%1 = 0, когда %2 ≠ 04'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма налога, уплаченная за пределами РФ';
													|en = 'Возможно ошибочная сумма налога, уплаченная за пределами РФ'"));
	Заголовки.Вставить("Рекомендации"		, "Укажите сумму налога в стр.250 Раздела 2 = 0");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'п. 1 ст. 382 НК РФ';
													|en = 'п. 1 ст. 382 НК РФ'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С250"		, "П000020025003");
	ИменаПоказателей.Вставить("Р02С001"		, "П000020000101");
	
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Для каждого СтраницаР02 Из ДанныеКС.Раздел2 Цикл
		
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаР02.НомерСтраницы);
		ЗарегистрироватьПроверку2024();
		ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаР02);
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р02С001.Значение = "04" И НЕ Показатели.Р02С250.Значение = 0;
		НастройкиКС.Детализация = ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, Показатели.Р02С250.Значение, 
			Показатели.Р02С001.ЗначениеСтр);
		ДополнитьТаблицуРезультата2024();
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаКС_2_02_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.02';
													|en = '2.02'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.007 Раздела 1 ';
													|en = 'Значение признака СЗПК в стр.007 Раздела 1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака СЗПК';
													|en = 'Возможно ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.007 Раздела 1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Группа строк %1 Раздела 1';
													|en = 'Группа строк %1 Раздела 1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П000010000703_");
	ПроверкаКС_1_02_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_03_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.03';
													|en = '2.03'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 2 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода вида имущества';
													|en = 'Возможно ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида имущества в стр.001 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020000101");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_04_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.04';
													|en = '2.04'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.002 Раздела 2 ';
													|en = 'Значение признака СЗПК в стр.002 Раздела 2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака СЗПК';
													|en = 'Возможно ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.002 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020000201");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_05_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.05';
													|en = '2.05'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2 ';
													|en = 'Значение КБК в стр.011 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК';
													|en = 'Возможно ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020001100");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_06_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.06';
													|en = '2.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.160 Раздела 2 ';
													|en = 'Значение кода налоговой льготы в стр.160 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы';
													|en = 'Возможно ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.160 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С160");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020016003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_07_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.07';
													|en = '2.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.200 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С200");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020020003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_08_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.08';
													|en = '2.08'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение Кжд в стр.215 Раздела 2 ';
													|en = 'Значение Кжд в стр.215 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение Кжд';
													|en = 'Возможно ошибочное значение Кжд'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение Кжд в стр.215 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С215");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020021503");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_09_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.09';
													|en = '2.09'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.230 Раздела 2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р02С230");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020023003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел2);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_10_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.10';
													|en = '2.10'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2.1 ';
													|en = 'Значение КБК в стр.011 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК';
													|en = 'Возможно ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210001100");
	
	ПроверкаКС_2_14_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_11_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.11';
													|en = '2.11'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода номера объекта в стр.010 Раздела 2.1 ';
													|en = 'Значение кода номера объекта в стр.010 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода номера объекта';
													|en = 'Возможно ошибочное значение кода номера объекта'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода номера объекта в стр.010 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С010");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210001001");
	
	ПроверкаКС_2_14_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_12_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.12';
													|en = '2.12'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 ';
													|en = 'Значение кода субъекта РФ в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода субъекта РФ';
													|en = 'Возможно ошибочное значение кода субъекта РФ'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода субъекта РФ в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003001");
	
	ПроверкаКС_2_14_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_13_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.13';
													|en = '2.13'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода муниципального образования в стр.030 Раздела 2.1 ';
													|en = 'Значение кода муниципального образования в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода муниципального образования';
													|en = 'Возможно ошибочное значение кода муниципального образования'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода муниципального образования в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003002");
	
	ПроверкаКС_2_14_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_14_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.1';
														|en = 'Раздел 2.1'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.14';
													|en = '2.14'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода поселения, территории в стр.030 Раздела 2.1 ';
													|en = 'Значение кода поселения, территории в стр.030 Раздела 2.1 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода поселения, территории';
													|en = 'Возможно ошибочное значение кода поселения, территории'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода поселения, территории в стр.030 Раздела 2.1 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.1';
													|en = 'Страница %1 Раздела 2.1'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р21С030");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000210003004");
	
	ПроверкаКС_2_14_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_14_2024_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
	
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел21 Цикл
			
			ЗаполнитьПоказатель2024(Показатели[НастройкиКС.КлючПоказателя], СтраницаРаздела);
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			
			Если ДанныеКС.Турборежим21 И НЕ НастройкиКС.ЭтоОшибка Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2024();
			РасшифроватьПоказатель2024(Показатели[НастройкиКС.КлючПоказателя]);
			
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2024();
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверкаКС_2_15_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.15';
													|en = '2.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 2.2 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 2.2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода вида имущества';
													|en = 'Возможно ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода вида имущества в стр.001 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220000101");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_16_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.16';
													|en = '2.16'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение признака СЗПК в стр.002 Раздела 2.2 ';
													|en = 'Значение признака СЗПК в стр.002 Раздела 2.2 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака СЗПК';
													|en = 'Возможно ошибочное значение признака СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите признак СЗПК в стр.002 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220000201");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_17_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.17';
													|en = '2.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 2.2 ';
													|en = 'Значение КБК в стр.011 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК';
													|en = 'Возможно ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220001100");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_18_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.18';
													|en = '2.18'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода номера объекта в стр.011 Раздела 2.2 ';
													|en = 'Значение кода номера объекта в стр.011 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода номера объекта';
													|en = 'Возможно ошибочное значение кода номера объекта'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода номера объекта в стр.011 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220001101");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_19_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.19';
													|en = '2.19'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.160 Раздела 2.2 ';
													|en = 'Значение кода налоговой льготы в стр.160 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы';
													|en = 'Возможно ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.160 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С160");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220016003_КодЛьготы");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_20_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.20';
													|en = '2.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.200 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.200 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С200");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220020003_КодЛьготы");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_21_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.21';
													|en = '2.21'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение Кжд в стр.215 Раздела 2.2 ';
													|en = 'Значение Кжд в стр.215 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение Кжд';
													|en = 'Возможно ошибочное значение Кжд'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение Кжд в стр.215 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С215");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220021503");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_22_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.22';
													|en = '2.22'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.230 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.230 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С230");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220023003_КодЛьготы");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_23_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2.2';
														|en = 'Раздел 2.2'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.23';
													|en = '2.23'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы для СЗПК в стр.245 Раздела 2.2 ';
			|en = 'Значение кода налоговой льготы для СЗПК в стр.245 Раздела 2.2 '") + 
		НСтр("ru = 'должно соответствовать списку допустимых значений';
			|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы для СЗПК';
													|en = 'Возможно ошибочное значение кода налоговой льготы для СЗПК'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.245 Раздела 2.2 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2.2';
													|en = 'Страница %1 Раздела 2.2'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р22С245");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000220024503");
	
	ПроверкаКС_2_23_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_23_2024_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
	
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел22 Цикл
			
			ЗаполнитьПоказатель2024(Показатели[НастройкиКС.КлючПоказателя], СтраницаРаздела);
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			
			Если ДанныеКС.Турборежим22 И НЕ НастройкиКС.ЭтоОшибка Тогда
				Продолжить;
			КонецЕсли;
			
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2024();
			РасшифроватьПоказатель2024(Показатели[НастройкиКС.КлючПоказателя]);
			
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2024();
			
		КонецЦикла;
	КонецЕсли; 
	
КонецПроцедуры

Процедура ПроверкаКС_2_24_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.24';
													|en = '2.24'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида имущества в стр.001 Раздела 3 ';
													|en = 'Значение кода вида имущества в стр.001 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода вида имущества';
													|en = 'Возможно ошибочное значение кода вида имущества'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида имущества в стр.001 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С001");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030000101");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_25_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.25';
													|en = '2.25'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение КБК в стр.011 Раздела 3 ';
													|en = 'Значение КБК в стр.011 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК';
													|en = 'Возможно ошибочное значение КБК'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение КБК в стр.011 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С011");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030001100");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_26_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.26';
													|en = '2.26'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода вида сведений в стр.014 Раздела 3 ';
													|en = 'Значение кода вида сведений в стр.014 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода вида сведений';
													|en = 'Возможно ошибочное значение кода вида сведений'"));
	Заголовки.Вставить("Рекомендации"		, "Выберите значение кода вида сведений в стр.014 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С014");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030001401");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_27_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.27';
													|en = '2.27'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Значение кода налоговой льготы в стр.040 Раздела 3 ';
													|en = 'Значение кода налоговой льготы в стр.040 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы';
													|en = 'Возможно ошибочное значение кода налоговой льготы'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.040 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С040");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030004003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_28_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.28';
													|en = '2.28'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде понижения налоговой ставки в стр.070 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде понижения налоговой ставки'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.070 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С070");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030007003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_29_2024_доп()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("Критичность"		, -1);
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.29';
													|en = '2.29'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 ';
			|en = 'Значение кода налоговой льготы в виде уменьшения суммы налога в стр.110 Раздела 3 '") 
		+ НСтр("ru = 'должно соответствовать списку допустимых значений';
				|en = 'должно соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Недопустимое значение %1';
													|en = 'Недопустимое значение %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога';
			|en = 'Возможно ошибочное значение кода налоговой льготы в виде уменьшения суммы налога'"));
	Заголовки.Вставить("Рекомендации"		, 
		"Выберите значение кода налоговой льготы в стр.110 Раздела 3 из списка значений");
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 3';
													|en = 'Страница %1 Раздела 3'"));
	ПодготовитьНастройки2024(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КлючПоказателя"	, "Р03С110");
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000030011003_КодЛьготы");
	НастройкиКС.Вставить("Источник"			, ДанныеКС.Раздел3);
	
	ПроверкаКС_2_29_2024_код();
	
КонецПроцедуры

Процедура ПроверкаКС_2_29_2024_код()
	
	Перем Список;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить(НастройкиКС.КлючПоказателя, НастройкиКС.ИмяПоказателя);
	Показатели = СформироватьПоказатели2024(ИменаПоказателей);
	
	Если ПараметрыКС.СписочныеЗначения.Свойство(НастройкиКС.ИмяПоказателя, Список) Тогда
		
		Для каждого СтраницаРаздела Из НастройкиКС.Источник Цикл
		
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ЗарегистрироватьПроверку2024();
			ЗаполнитьИРасшифроватьПоказатели2024(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Найти(Показатели[НастройкиКС.КлючПоказателя].Значение) = Неопределено;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели[НастройкиКС.КлючПоказателя].ЗначениеСтр);
			ДополнитьТаблицуРезультата2024();
		
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли