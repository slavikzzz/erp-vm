#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	УстановитьВыводДокументовОснований(НастройкиОтчета);
	
	МакетКомпоновкиДанных = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанных(СхемаКомпоновкиДанных,
		НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновкиДанных, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
	ДопСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	ДопСвойства.Вставить("ОтчетПустой", ОтчетыСервер.ОтчетПустой(ЭтотОбъект, ПроцессорКомпоновкиДанных));
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет() Экспорт
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект);
	ЗарплатаКадрыОбщиеНаборыДанных.ВывестиДополнительныеПоляПредставленийВОтчет(
		ЭтотОбъект, ДополнительныеПоляПредставлений());
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если КлючСхемы <> КлючВарианта Тогда
		ИнициализироватьОтчет();
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
		КлючСхемы = КлючВарианта;
		
	КонецЕсли;
	
КонецПроцедуры

Функция ДополнительныеПоляПредставлений()
	
	ДополнительныеПоля = Новый Структура;
	
	Если ОбщегоНазначения.ДоступноИспользованиеРазделенныхДанных() Тогда
		Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений") Тогда
			МодульУчетБюджетныхУчреждений = ОбщегоНазначения.ОбщийМодуль("УчетБюджетныхУчреждений");
			МодульУчетБюджетныхУчреждений.ЗаполнитьДополнительныеПоляОтчетаАнализЗадолженностиПоЗарплате(ЭтотОбъект, ДополнительныеПоля);
		КонецЕсли;
	КонецЕсли;
	
	Возврат ДополнительныеПоля;
	
КонецФункции

Процедура УстановитьВыводДокументовОснований(НастройкиОтчета)
	
	РасшифровыватьПоДокументамОснованиям = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(
		Новый ПараметрКомпоновкиДанных("РасшифровыватьПоДокументамОснованиям"));
	
	ВывестиДокументыОснования(НастройкиОтчета.Структура, РасшифровыватьПоДокументамОснованиям.Значение)
	
КонецПроцедуры

Процедура ВывестиДокументыОснования(Структура, РасшифровыватьПоДокументамОснованиям)
	
	Для Каждого ЭлементСтруктуры Из Структура Цикл
		
		Если ТипЗнч(ЭлементСтруктуры) = Тип("ГруппировкаКомпоновкиДанных") Тогда
			
			Если ЭлементСтруктуры.Имя = "ДокументыОснования" Тогда
				ЭлементСтруктуры.Использование = РасшифровыватьПоДокументамОснованиям;
				Прервать;
			КонецЕсли;
			
			ВывестиДокументыОснования(ЭлементСтруктуры.Структура, РасшифровыватьПоДокументамОснованиям)
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли