#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.КНД = "1110121";
	Стр.ВерсияФормата = "5.02";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 02.09.2024 № ЕД-7-9/693@ в формате 5.02";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы;
	Стр.ДатаНачала = Дата('20250101');
	Стр.ДатаКонца = Дата('20991231');
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2024_1" Тогда 
		Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда 
			Возврат СформироватьСписокЛистовФорма2024_Жалоба(Объект);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда 
			Возврат СформироватьСписокЛистовФорма2024_ДопДок(Объект);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда 
			Возврат СформироватьСписокЛистовФорма2024_Отзыв(Объект);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда 
			Возврат СформироватьСписокЛистовФорма2024_ПриостРеш(Объект);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда 
			Возврат СформироватьСписокЛистовФорма2024_ХодПриостРассм(Объект);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда 
			Возврат СформироватьСписокЛистовФорма2024_ХодВосстСрок(Объект);
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2024_1" Тогда 
		Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ОтзывЖалобы(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ВосстановлениеСрокаЖалобы(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ДополнительнаяИнформацияКЖалобе(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеРассмотренияЖалобы(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеИсполненияЖалобы(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда 
			Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_ЖалобаФНС(
				УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2019_1(Объект)
	ОТД = Новый ОписаниеТипов("Дата");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить().СтруктураРеквизитов;
	
	ПараметрыПечати = Новый Структура;
	Для Каждого КЗ Из СтруктураПараметров Цикл 
		ПараметрыПечати.Вставить(КЗ.Ключ, КЗ.Значение);
	КонецЦикла;
	
	Для Инд = 1 По 12 Цикл 
		ПараметрыПечати.Вставить("_ИНН_"+Инд, Сред(СтруктураПараметров._ИНН, Инд, 1));
	КонецЦикла;
	Для Инд = 1 По 9 Цикл 
		ПараметрыПечати.Вставить("_КПП_"+Инд, Сред(СтруктураПараметров._КПП, Инд, 1));
	КонецЦикла;
	Для Инд = 1 По 4 Цикл 
		ПараметрыПечати.Вставить("_НомЖалоб_"+Инд, Сред(СтруктураПараметров._НомЖалоб, Инд, 1));
	КонецЦикла;
	Для Инд = 1 По 4 Цикл 
		ПараметрыПечати.Вставить("_КодНОВыш_"+Инд, Сред(СтруктураПараметров._КодНОВыш, Инд, 1));
	КонецЦикла;
	Для Инд = 1 По 4 Цикл 
		ПараметрыПечати.Вставить("_КодНО_"+Инд, Сред(СтруктураПараметров._КодНО, Инд, 1));
	КонецЦикла;
	
	_ДатаДокОбжал = Формат(СтруктураПараметров._ДатаДокОбжал, "ДФ=ddMMyyyy");
	Для Инд = 1 По 8 Цикл 
		ПараметрыПечати.Вставить("_ДатаДокОбжал_"+Инд, Сред(_ДатаДокОбжал, Инд, 1));
	КонецЦикла;
	ПараметрыПечати.Вставить("ДатаПодписи", Формат(Объект.ДатаПодписи, "ДЛФ=DD"));
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		ОписаниеОрганизации = СтруктураПараметров._НаимОрг + ", ИНН:" + СтруктураПараметров._ИНН + ", КПП:" + СтруктураПараметров._КПП;
	Иначе 
		ОписаниеОрганизации = СтруктураПараметров._ФамилияОрг + " " + СтруктураПараметров._ИмяОрг
			+ " " + СтруктураПараметров._ОтчествоОрг + ", ИНН:" + СтруктураПараметров._ИНН;
	КонецЕсли;
	ПараметрыПечати.Вставить("ОписаниеОрганизации", СокрЛП(ОписаниеОрганизации));
	ПодписантОписание = СтруктураПараметров._ФамилияПодп + " " + СтруктураПараметров._ИмяПодп
		+ " " + СтруктураПараметров._ОтчествоПодп;
	ПараметрыПечати.Вставить("ПодписантОписание", СокрЛП(ПодписантОписание));
	
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2019_1");
	Для Инд = 1 По 2 Цикл 
		Стр = МакетПФ.ПолучитьОбласть("Страница" + Инд);
		ЗаполнитьЗначенияСвойств(Стр.Параметры, ПараметрыПечати);
		ПечатнаяФорма.Вывести(Стр);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 0 + Инд, Ложь);
	КонецЦикла;
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_Отзыв(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_Отзыв");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	Отзыв = ДанныеУведомления.ДанныеУведомления.Отзыв;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("Флаг" + Отзыв.ОтзывЖалоб, "V");
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Отзыв);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_ДопДок(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_ДопДок");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ДопДок = ДанныеУведомления.ДанныеУведомления.ДопДок;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДопДок);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ДопДок.НомерДопИнфо, "НомерДопИнфо", МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_ХодВосстСрок(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_ХодВосстСрок");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ХодВосстСрок = ДанныеУведомления.ДанныеУведомления.ХодВосстСрок;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ХодВосстСрок);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ХодВосстСрок.НомерДопИнфо, "НомерДопИнфо", МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_ХодПриостРассм(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_ХодПриостРассм");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ХодПриостРассм = ДанныеУведомления.ДанныеУведомления.ХодПриостРассм;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("Флаг" + ХодПриостРассм.ПриостЖалоб, "V");
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ХодПриостРассм);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ХодПриостРассм.НомерДопИнфо, "НомерДопИнфо", МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_ПриостРеш(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_ПриостРеш");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ПриостРеш = ДанныеУведомления.ДанныеУведомления.ПриостРеш;
	Пока ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1.Количество() < 3 Цикл 
		ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1.Добавить();
	КонецЦикла;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("НаимНОРеш", "ИФНС " + ПриостРеш.КодНОРеш);
	ДополнительныеПараметры.Вставить("Флаг" + ПриостРеш.ПриостОбжРеш, "V");
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
		
	Для Инд = 1 По 3 Цикл 
		Стр = ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1[Инд - 1];
		Если Не УведомлениеОСпецрежимахНалогообложенияСлужебный.СтрокаТаблицыЗначенийЗаполнена(Стр) Тогда 
			Продолжить;
		КонецЕсли;
		
		ДополнительныеПараметры.Вставить("НомБанкГар" + Инд, Стр["НомБанкГар"]);
		ДополнительныеПараметры.Вставить("СумБанкГар" + Инд, Стр["СумБанкГар"]);
		ДополнительныеПараметры.Вставить("СрокДо" + Инд, Стр["СрокДо"]);
		ДополнительныеПараметры.Вставить("Гарант" + Инд, СокрЛП(Стр["НаимГарант"] + " " + Стр["ИННЮЛ"] + "/" + Стр["КПП"] + "/" + Стр["БИК"]));
	КонецЦикла;
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ПриостРеш);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ПриостРеш.КодНОРеш, "КодНОРеш", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ПриостРеш.НомерДопИнфо, "НомерДопИнфо", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ПриостРеш.ДатаРешОбжал, "ДатаРешОбжал", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1[0].СрокДо, "СрокДо1", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1[1].СрокДо, "СрокДо2", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1[2].СрокДо, "СрокДо3", МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_Жалоба(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2024_Жалоба");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	Жалоба = ДанныеУведомления.ДанныеУведомления.Жалоба;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("НаимНО", "ИФНС " + Титульная.КодНО);
	ДополнительныеПараметры.Вставить("ОписаниеОрганизации", СокрЛП(Титульная.Фамилия + " " + Титульная.Имя + " " + Титульная.Отчество 
		+ Титульная.НаимОрг + " " + Титульная.ИНН + " " + Титульная.КПП));
		
	ДополнительныеПараметры.Вставить("Флаг" + Жалоба.ПредмОбжал, "V");
	ДополнительныеПараметры.Вставить("ВидДок" + Жалоба.ВидДок, "V");
	ДополнительныеПараметры.Вставить("НомДок" + Жалоба.ВидДок, Жалоба.НомДок);
	ДополнительныеПараметры.Вставить("ПорядРассм" + Жалоба.ПорядРассм, "V");
	
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, ДополнительныеПараметры);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, Жалоба);
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоСтраниц, "ВсегоСтраниц", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ВсегоЛистов, "ВсегоЛистов", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Жалоба.КодНООбж, "КодНООбж", МакетПФ.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Жалоба.ДатаДок, "ДатаДок" + Жалоба.ВидДок, МакетПФ.Области, "-");
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок)
	Титульная = Данные.ДанныеУведомления.Титульная;
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан подписант", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимДок) И Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или ЭтоЮЛ);
	
	Если ЭтоЮЛ Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Истина, Титульная, ТаблицаОшибок);
		Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование организации", "Титульная", "НаимОрг"));
		КонецЕсли;
	Иначе
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Ложь, Ложь);
		Если Не ЗначениеЗаполнено(Титульная.Имя) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя", "Титульная", "Имя"));
		КонецЕсли;
		
		ЗаполненИНН = ЗначениеЗаполнено(Титульная.ИНН);
		ЗаполненНомЕРН = ЗначениеЗаполнено(Титульная.НомЕРН);
		ЗаполненСведФЛ = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(
			Титульная, "ДатаРожд,СНИЛС,Гражданство,КодВидДок,СерНомДок,ДатаДок,ВыдДок,КодВыдДок");
			
		Если (Не ЗаполненИНН) И (Не ЗаполненНомЕРН) И (Не ЗаполненСведФЛ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Необходимо указать ИНН, номер записи единого регистра населения или сведения о физлице", "Титульная", "ИНН"));
		Иначе
			Если ЗаполненНомЕРН И Не СтрПодобнаПоРегулярномуВыражению(Титульная.НомЕРН, "[0-9]{3}-[0-9]{3}-[0-9]{3}-[0-9]{3}") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан номер ЕРН", "Титульная", "НомЕРН"));
			КонецЕсли;
			Если ЗаполненСведФЛ Тогда
				Если Не ЗначениеЗаполнено(Титульная.ДатаРожд) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата рождения", "Титульная", "ДатаРожд"));
				КонецЕсли;
				Если Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаСНИЛСНаКорректность(Титульная.СНИЛС) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан / неправильно указан СНИЛС", "Титульная", "СНИЛС"));
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(Титульная, ТаблицаОшибок, "Титульная", "Гражданство", Ложь);
				Если Не ЗначениеЗаполнено(Титульная.КодВидДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан код вида документа", "Титульная", "КодВидДок"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Титульная.СерНомДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана серия/номер документа", "Титульная", "СерНомДок"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Титульная.ДатаДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата выдачи документа", "Титульная", "ДатаДок"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Титульная.ВыдДок) И "21" = Титульная.КодВидДок Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана орган, выдавший документ", "Титульная", "ВыдДок"));
				КонецЕсли;
				Если ЗначениеЗаполнено(Титульная.КодВыдДок) И Не СтрПодобнаПоРегулярномуВыражению(Титульная.КодВыдДок, "\d{3}\-\d{3}") Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Неправильно указан код органа", "Титульная", "КодВыдДок"));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИдОснЖалоб)
		И (Данные.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе
			Или Данные.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы
			Или Данные.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы
			Или Данные.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы
			Или Данные.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан идентификатор файла основания", "Титульная", "ИдОснЖалоб"));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодВосстСрок(Данные, ТаблицаОшибок)
	ХодВосстСрок = Данные.ДанныеУведомления.ХодВосстСрок;
	
	Если ЗначениеЗаполнено(ХодВосстСрок.НомЖалоб) И Не ЗначениеЗаполнено(ХодВосстСрок.ДатаЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата жалобы", "ХодВосстСрок", "ДатаЖалоб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ХодВосстСрок.ПричПропуск) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана причина пропуска срока подачи жалобы", "ХодВосстСрок", "ПричПропуск"));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодПриостРассм(Данные, ТаблицаОшибок)
	ХодПриостРассм = Данные.ДанныеУведомления.ХодПриостРассм;
	
	Если ЗначениеЗаполнено(ХодПриостРассм.НомЖалоб) И Не ЗначениеЗаполнено(ХодПриостРассм.ДатаЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата жалобы", "ХодПриостРассм", "ДатаЖалоб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ХодПриостРассм.ПриостЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "ХодПриостРассм", "ПриостЖалоб"));
	КонецЕсли;
	Если ХодПриостРассм.ПриостЖалоб = "2" И Не ЗначениеЗаполнено(ХодПриостРассм.ДоводПриостЧаст) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны доводы", "ХодПриостРассм", "ДоводПриостЧаст"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ХодПриостРассм.ОбосПриост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано обоснование", "ХодПриостРассм", "ОбосПриост"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ХодПриостРассм.СрокПриост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан срок приостановления", "ХодПриостРассм", "СрокПриост"));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостРеш(Данные, ТаблицаОшибок)
	ПриостРеш = Данные.ДанныеУведомления.ПриостРеш;
	
	Если Не ЗначениеЗаполнено(ПриостРеш.ПриостОбжРеш) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "ПриостРеш", "ПриостОбжРеш"));
	ИначеЕсли ПриостРеш.ПриостОбжРеш = "1" И ЗначениеЗаполнено(ПриостРеш.СумПриост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"При признаке 1 сумма не заполняется", "ПриостРеш", "СумПриост"));
	ИначеЕсли ПриостРеш.ПриостОбжРеш = "2" И Не ЗначениеЗаполнено(ПриостРеш.СумПриост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана сумма", "ПриостРеш", "СумПриост"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(ПриостРеш.КодНОРеш, ТаблицаОшибок, "ПриостРеш", "КодНОРеш");
	Если Не ЗначениеЗаполнено(ПриостРеш.ВидОбжРеш) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид обжалуемого решения", "ПриостРеш", "ВидОбжРеш"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПриостРеш.НомРешОбжал) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер обжалуемого решения", "ПриостРеш", "НомРешОбжал"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ПриостРеш.ДатаРешОбжал) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата обжалуемого решения", "ПриостРеш", "ДатаРешОбжал"));
	КонецЕсли;
	
	Инд = 0;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл 
		Инд = Инд + 1;

		Если Не ЗначениеЗаполнено(Стр["НомБанкГар"]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер банковской гарантии", "ПриостРеш", "НомБанкГар___" + Инд));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Стр["ДатаБанкГар"]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата банковской гарантии", "ПриостРеш", "ДатаБанкГар___" + Инд));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Стр["СрокДо"]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан срок банковской гарантии", "ПриостРеш", "___" + Инд));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Стр["НаимГарант"]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование гаранта", "ПриостРеш", "НаимГарант___" + Инд));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Стр, ТаблицаОшибок, "ПриостРеш", "ИННЮЛ", Истина, Истина, Инд);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Стр, ТаблицаОшибок, "ПриостРеш", "КПП", Истина, Инд);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(Стр, ТаблицаОшибок, "ПриостРеш", "БИК", Ложь, Инд);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2024_Жалоба(Данные, ТаблицаОшибок)
	Жалоба = Данные.ДанныеУведомления.Жалоба;
	
	Если Не ЗначениеЗаполнено(Жалоба.ПорядРассм) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан порядок рассмотрения", "Жалоба", "ПорядРассм"));
	ИначеЕсли Жалоба.ПорядРассм = "0" 
		И (Жалоба.ПредмОбжал = "15" Или Жалоба.ПредмОбжал = "16" Или Жалоба.ПредмОбжал = "17" Или Жалоба.ПредмОбжал = "18") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Порядок рассмотрения не может принимать значение ""0"" при коде предмета обжалования 15,16,17,18", "Жалоба", "ПорядРассм"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.ПредмОбжал) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан предмет обжалования", "Жалоба", "ПредмОбжал"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Жалоба.КодНООбж, ТаблицаОшибок, "Жалоба", "КодНООбж");
	Если Не ЗначениеЗаполнено(Жалоба.ВидДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид документа", "Жалоба", "ВидДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.НомДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер документа", "Жалоба", "НомДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.ДатаДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата документа", "Жалоба", "ДатаДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.ОснПод) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны основания", "Жалоба", "ОснПод"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.Требования) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны требования", "Жалоба", "Требования"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Жалоба.СпосПолРеш) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способ получения решения", "Жалоба", "СпосПолРеш"));
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ОтзывЖалобы(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	Отзыв = Данные.ДанныеУведомления.Отзыв;
	
	Если ЗначениеЗаполнено(Отзыв.НомЖалоб) И Не ЗначениеЗаполнено(Отзыв.ДатаЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата жалобы", "Отзыв", "ДатаЖалоб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Отзыв.ОтзывЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "Отзыв", "ОтзывЖалоб"));
	КонецЕсли;
	Если Отзыв.ОтзывЖалоб = "2" И Не ЗначениеЗаполнено(Отзыв.ДоводыНП) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны доводы", "Отзыв", "ДоводыНП"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ДополнительнаяИнформацияКЖалобе(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	ДопДок = Данные.ДанныеУведомления.ДопДок;
	
	Если ЗначениеЗаполнено(ДопДок.НомЖалоб) И Не ЗначениеЗаполнено(ДопДок.ДатаЖалоб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата жалобы", "ДопДок", "ДатаЖалоб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ДопДок.ОбоснПодДоп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано обоснование подачи дополнительных документов к жалобе", "ДопДок", "ОбоснПодДоп"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ВосстановлениеСрокаЖалобы(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодВосстСрок(Данные, ТаблицаОшибок);
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеРассмотренияЖалобы(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодПриостРассм(Данные, ТаблицаОшибок);
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеИсполненияЖалобы(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостРеш(Данные, ТаблицаОшибок);
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_ЖалобаФНС(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Титульная(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2024_Жалоба(Данные, ТаблицаОшибок);
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Данные.ДанныеУведомления.ХодВосстСрок) Тогда 
		ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодВосстСрок(Данные, ТаблицаОшибок);
	КонецЕсли;
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Данные.ДанныеУведомления.ХодПриостРассм) Тогда 
		ПроверитьДокументСВыводомВТаблицу_Форма2024_ХодПриостРассм(Данные, ТаблицаОшибок);
	КонецЕсли;
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Данные.ДанныеУведомления.ПриостРеш) Тогда 
		ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостРеш(Данные, ТаблицаОшибок);
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110121");
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110407");
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110408");
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110409");
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110411");
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда 
		ОсновныеСведения.Вставить("ТипДокумента", "1110412");
	КонецЕсли;
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "NP_GALB";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ОтзывЖалобы(ДанныеУведомления, УникальныйИдентификатор);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ДополнительнаяИнформацияКЖалобе(ДанныеУведомления, УникальныйИдентификатор);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ВосстановлениеСрокаЖалобы(ДанныеУведомления, УникальныйИдентификатор);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеРассмотренияЖалобы(ДанныеУведомления, УникальныйИдентификатор);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ПриостановлениеИсполненияЖалобы(ДанныеУведомления, УникальныйИдентификатор);
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда 
		Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_ЖалобаФНС(ДанныеУведомления, УникальныйИдентификатор);
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	
	ДатаИмФайла = Формат(ТекущаяДатаСеанса(), "ДФ=_yyyyMMdd_");
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда 
		ПрефиксИмениФайла = "0250_" + Лев(ОсновныеСведения.ИНН + "000000000000", 12)
			+ "_" + Лев(ОсновныеСведения.КодНО + "0000", 4) + "_";
	Иначе
		ПрефиксИмениФайла = "0250_" + Лев(ОсновныеСведения.ИНН + "0000000000", 10)
			+ Лев(ОсновныеСведения.КПП + "000000000", 9) + "_" + Лев(ОсновныеСведения.КодНО + "0000", 4) + "_";
	КонецЕсли;
		
	ДанныеУведомления.ДанныеМногостраничныхРазделов.Вставить("Прилож", Новый СписокЗначений);
	Прилож = ДанныеУведомления.ДанныеМногостраничныхРазделов.Прилож;
	Для Каждого Стр1 Из ДанныеУведомления.ПриложенныеФайлы.Строки Цикл 
		Для Каждого Стр2 Из Стр1.Строки Цикл 
			СтруктураФайла = Новый Структура("УИД, НаимПрилДок, Файл", Новый УникальныйИдентификатор, Стр1.Документ, Стр2.ПрисоединенныйФайл);
			СтруктураФайла.Вставить("ИмяФайлПрил", ПрефиксИмениФайла + Стр1.УИДДокумент + ДатаИмФайла + Стр2.УИДФайл);
			СтруктураФайла.Вставить("ПолноеИмяФайла", ПрефиксИмениФайла + Стр1.УИДДокумент + ДатаИмФайла + Стр2.УИДФайл 
				+ "." + ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Стр2.ПрисоединенныйФайл, "Расширение"));
			Прилож.Добавить(СтруктураФайла);
		КонецЦикла;
	КонецЦикла;
	
	Если ДанныеУведомления.ДанныеДопСтрокБД.Свойство("МнгСтр1") Тогда 
		Для Каждого Стр Из ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр1 Цикл 
			Стр["БИК"] = "" + Стр["БИК"] + ?(УведомлениеОСпецрежимахНалогообложенияСлужебный.СтрокаТаблицыЗначенийЗаполнена(Стр), "000000000", "");
		КонецЦикла;
	КонецЕсли;
	
	ДеревоВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(ОсновныеСведения, ДеревоВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(ДеревоВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Каждого Элт Из Прилож Цикл 
			СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
			СтрокаСведенийЭлектронногоПредставления.ИмяФайла = Элт.Значение.ПолноеИмяФайла;
			СтрокаСведенийЭлектронногоПредставления.ДвоичныеДанныеФайла = МодульРаботаСФайлами.ДвоичныеДанныеФайла(Элт.Значение.Файл);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

#КонецОбласти
#КонецЕсли