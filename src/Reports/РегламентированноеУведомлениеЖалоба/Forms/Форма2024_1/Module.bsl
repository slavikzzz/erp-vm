#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	Параметры.Свойство("ВидУведомления", Объект.ВидУведомления);
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2024_1");
	Заголовок = Объект.ВидУведомления;
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Элементы.ПриложенныеФайлы.КонтекстноеМеню.Доступность = Ложь;
	Элементы.ПриложенныеФайлы.КонтекстноеМеню.Видимость = Ложь;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда
		Если Параметр.ИмяСтраницы = "ПриложенныеФайлы" Тогда 
			Элементы.Страницы.ТекущаяСтраница = Элементы.ГруппаПриложенныеФайлы;
		Иначе
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОсновныеСведения;
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка И Область.Защита = Ложь Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	ИначеЕсли ЭтотОбъект["Подключена1СОтчетность"] И Область.Имя = "ИдОснЖалоб" Тогда 
		ВыборЗапроса(СтандартнаяОбработка, Область);
	ИначеЕсли СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизацииОбласти(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыДеревоСтраниц

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриложенныеФайлы

&НаКлиенте
Процедура ПриложенныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПередНачаломИзменения(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПриАктивизацииСтроки(Элемент)
	Элементы.ПриложенныеФайлыДобавитьФайл.Доступность = (Элементы.ПриложенныеФайлы.ТекущиеДанные <> Неопределено);
	Элементы.ПриложенныеФайлыУдалить.Доступность = (Элементы.ПриложенныеФайлы.ВыделенныеСтроки.Количество() > 0);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПриложенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ТекущиеДанные = ПриложенныеФайлы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.УровеньГруппировкиВДереве(ТекущиеДанные) = 0 Тогда
		ДобавитьДокументЗавершение(
			Ждать ВвестиЗначениеАсинх(ТекущиеДанные.Документ, "Введите наименование, реквизиты и прочие признаки документа", Новый ОписаниеТипов("Строка")),
			Новый Структура("Изменение", ТекущиеДанные));
	ИначеЕсли Ждать РегламентированнаяОтчетностьКлиент.РезультатПодключенияРасширенияРаботыСФайламиАсинх() Тогда 
		РаботаСФайламиКлиент.ОткрытьФайл(УведомлениеОСпецрежимахНалогообложенияВызовСервера.ДанныеФайла(ТекущиеДанные.ПрисоединенныйФайл), Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		Родитель = ПриложенныеФайлы.НайтиПоИдентификатору(Элт).ПолучитьРодителя();
		Если Родитель = Неопределено Тогда 
			Выполнение = Ложь;
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПроверкаПеретаскивания(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если Строка = Неопределено Или ПриложенныеФайлы.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено Тогда 
		ПараметрыПеретаскивания.Действие = ДействиеПеретаскивания.Отмена;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	СтандартнаяОбработка = Ложь;
	Если Строка = Неопределено Или (ПриложенныеФайлы.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено) Тогда 
		Возврат;
	КонецЕсли;
	Папка = ПриложенныеФайлы.НайтиПоИдентификатору(Строка);
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		ПеретаскиваемыйЭлемент = ПриложенныеФайлы.НайтиПоИдентификатору(Элт);
		ЗаполнитьЗначенияСвойств(Папка.ПолучитьЭлементы().Добавить(), ПеретаскиваемыйЭлемент);
	КонецЦикла;
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		ПеретаскиваемыйЭлемент = ПриложенныеФайлы.НайтиПоИдентификатору(Элт);
		ПеретаскиваемыйЭлемент.ПолучитьРодителя().ПолучитьЭлементы().Удалить(ПеретаскиваемыйЭлемент);
	КонецЦикла;
	Элементы.ПриложенныеФайлы.Развернуть(Папка.ПолучитьИдентификатор());
	Модифицированность = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда) Экспорт 
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда = Неопределено) Экспорт
	ЭтотОбъект["УдалениеСтраницы"] = Истина;
	УдалитьСтраницуНаСервере();
	ЭтотОбъект["УдалениеСтраницы"] = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьДокументПДФ(Команда)
	ДобавитьДокументЗавершение(
		Ждать ВвестиЗначениеАсинх("", "Введите наименование прилагаемого документа", Новый ОписаниеТипов("Строка")),
		Новый Структура("Добавление", Истина));
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьФайл(Команда)
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда 
		ПоказатьПредупреждение(, "Необходимо выбрать документ для добавления файла");
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда 
		ТекущиеДанные = ТекущиеДанные.ПолучитьРодителя();
	КонецЕсли;
	
	Если Не Ждать РегламентированнаяОтчетностьКлиент.РезультатПодключенияРасширенияРаботыСФайламиАсинх() Тогда 
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект["ЭтоНовоеУведомление"] Тогда 
		ТекстВопроса = "Для добавления файла необходимо сохранить уведомление. Сохранить?";
		Если КодВозвратаДиалога.Да = 
			Ждать ВопросАсинх("Для добавления файла необходимо сохранить уведомление. Сохранить?", РежимДиалогаВопрос.ДаНет) Тогда 
			СохранитьДанные();
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.Фильтр = НСтр("ru = 'Документ pdf,jpg,tif,png';
										|en = 'Документ pdf,jpg,tif,png'") + "(*.pdf;*.jpg;*.tif)|*.pdf;*.jpg;*.tif;*.png";
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	ВыбранныеФайлы = Ждать ДиалогОткрытияФайла.ВыбратьАсинх();
	Если ТипЗнч(ВыбранныеФайлы) <> Тип("Массив") Или ВыбранныеФайлы.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	ФайлДляТеста = Новый Файл(ВыбранныеФайлы[0]);
	Если Не Ждать ФайлДляТеста.СуществуетАсинх() Тогда 
		Возврат;
	КонецЕсли;
	
	Файл = ВыбранныеФайлы[0];
	Если СтрЗаканчиваетсяНа(НРег(Файл), ".jpg") Или СтрЗаканчиваетсяНа(НРег(Файл), ".tif") Или СтрЗаканчиваетсяНа(НРег(Файл), ".png") Тогда 
		Преобразовать = Ждать ВопросАсинх("Файл, содержащий отсканированные изображения, должен иметь черно-белое изображение с разрешением отсканированного документа не менее
			|150 и не более 300 точек на дюйм с использованием 256 градаций серого цвета. Выполнить преобразование?", РежимДиалогаВопрос.ДаНетОтмена);
		Если Преобразовать = КодВозвратаДиалога.Отмена Тогда 
			Возврат;
		КонецЕсли;
		Преобразовать = (Преобразовать = КодВозвратаДиалога.Да);
	Иначе
		Преобразовать = Ложь;
	КонецЕсли;
	
	Каталог = Лев(Файл, СтрНайти(Файл, ПолучитьРазделительПути(), НаправлениеПоиска.СКонца));
	ПодчЭлт = ТекущиеДанные.ПолучитьЭлементы().Добавить();
	
	Попытка
		Результат = Ждать ПоместитьФайлНаСерверАсинх(,,
			ПоместитьВоВременноеХранилище(Неопределено, УникальныйИдентификатор), Файл, УникальныйИдентификатор);
		ЗаполнитьСтруктуруДанныхФайла(
			Преобразовать, Результат.Адрес, Файл, Каталог, ПодчЭлт.ПолучитьИдентификатор());
	Исключение
		ПоказатьПредупреждение(, "При загрузке файла возникла ошибка. Вероятно, файл открыт в другом приложении");
		ПодчЭлт.ПолучитьРодителя().ПолучитьЭлементы().Удалить(ПодчЭлт);
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Удалить(Команда)
	Для Каждого Стр Из ОбщегоНазначенияКлиент.СкопироватьРекурсивно(Элементы.ПриложенныеФайлы.ВыделенныеСтроки) Цикл 
		ТекСтр = ПриложенныеФайлы.НайтиПоИдентификатору(Стр);
		Если ТекСтр <> Неопределено Тогда 
			Строки = ?(ТекСтр.ПолучитьРодителя() = Неопределено, ПриложенныеФайлы.ПолучитьЭлементы(), ТекСтр.ПолучитьРодителя().ПолучитьЭлементы());
			Строки.Удалить(ТекСтр);
			Модифицированность = Истина;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
	ПриложенныеФайлы.ПолучитьЭлементы().Очистить();
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
		ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	Иначе
		СтрокаСведений = "ИННФЛ,ФамилияИП,ИмяИП,ОтчествоИП,КодУдЛичн,ДатаРожд
			|,СерияУдЛичн,НомерУдЛичн,ДатаУдЛичн,ОрганВыданУдЛичн,СНИЛС";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННФЛ);
		ДанныеУведомленияТитульный.Вставить("Фамилия", СведенияОбОрганизации.ФамилияИП);
		ДанныеУведомленияТитульный.Вставить("Имя", СведенияОбОрганизации.ИмяИП);
		ДанныеУведомленияТитульный.Вставить("Отчество", СведенияОбОрганизации.ОтчествоИП);
		ДанныеУведомленияТитульный.Вставить("КодВидДок", СведенияОбОрганизации.КодУдЛичн);
		ДанныеУведомленияТитульный.Вставить("СерНомДок", СведенияОбОрганизации.СерияУдЛичн + " " + СведенияОбОрганизации.НомерУдЛичн);
		ДанныеУведомленияТитульный.Вставить("ВыдДок", СведенияОбОрганизации.ОрганВыданУдЛичн);
		ДанныеУведомленияТитульный.Вставить("ДатаДок", СведенияОбОрганизации.ДатаУдЛичн);
		ДанныеУведомленияТитульный.Вставить("СНИЛС", СведенияОбОрганизации.СНИЛС);
		ДанныеУведомленияТитульный.Вставить("ДатаРожд", СведенияОбОрганизации.ДатаРожд);
	КонецЕсли;
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция МакетТитульнойСтраницы()
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда 
		Возврат "Титульная_2024_Жалоба";
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда 
		Возврат "Титульная_2024_ДопДок";
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда 
		Возврат "Титульная_2024_Отзыв";
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда 
		Возврат "Титульная_2024_ПриостРеш";
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда 
		Возврат "Титульная_2024_ХодПриостРассм";
	ИначеЕсли Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда 
		Возврат "Титульная_2024_ХодВосстСрок";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = МакетТитульнойСтраницы();
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Жалоба";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "Жалоба_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "Жалоба";
	КонецЕсли;
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Заявление об отзыве";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "Отзыв_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "Отзыв";
	КонецЕсли;
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Дополнительная информация";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "ДопДок_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "ДопДок";
	КонецЕсли;
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС
		Или Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Ходатайство о приостановлении" + Символы.ПС + "исполнения решения";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "ПриостРеш_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Истина;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "ПриостРеш";
		Стр001.МногострочныеЧасти.Добавить("МнгСтр1");
	КонецЕсли;
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС
		Или Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Ходатайство о приостановлении" + Символы.ПС + "рассмотрения жалобы";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "ХодПриостРассм_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "ХодПриостРассм";
	КонецЕсли;
	
	Если Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС
		Или Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы Тогда
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Ходатайство о восстановлении" + Символы.ПС + "пропущенного срока";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "ХодВосстСрок_2024";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "ХодВосстСрок";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, ПредУИД);
	Если ЭтотОбъект["ТекущееИДНаименования"] = "Титульная" Тогда
		Если ЭтотОбъект["ЭтоЮЛ"] Тогда 
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "Фамилия");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "Имя");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "Отчество");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "НомЕРН");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ДатаРожд");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "СНИЛС");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "Гражданство");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "КодВидДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "СерНомДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ДатаДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ВыдДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "КодВыдДок");
			ПредставлениеУведомления.Области["ИНН"].ТипЗначения = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10));
			ПредставлениеУведомления.Области["ИНН"].Маска = "9999999999";
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "НаимОрг");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "КПП");
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, 
		УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета),
		МногострочныеЧасти);
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);

	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
	
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	СтруктураПараметров.Вставить("ПриложенныеФайлы", РеквизитФормыВЗначение("ПриложенныеФайлы"));
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанныеСУдалениемФайлов(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
	Если Не ЭтотОбъект["ЭтоНовоеУведомление"] Тогда 
		ЗначениеВРеквизитФормы(СтруктураПараметров["ПриложенныеФайлы"], "ПриложенныеФайлы");
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СкопироватьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.КопироватьСтраницуУведомления(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтраницуНаКлиенте() Экспорт 
	СкопироватьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьДокументЗавершение(РезультатВопроса, ДополнительныеПараметры)
	Если ТипЗнч(РезультатВопроса) = Тип("Строка") 
		И ЗначениеЗаполнено(РезультатВопроса) Тогда
		
		Если ДополнительныеПараметры.Свойство("Добавление") Тогда
			НовДок = ПриложенныеФайлы.ПолучитьЭлементы().Добавить();
			НовДок.Документ = РезультатВопроса;
			НовДок.УИДДокумент = Новый УникальныйИдентификатор;
			Модифицированность = Истина;
			Элементы.ПриложенныеФайлыДобавитьФайл.Доступность = Истина;
		Иначе
			НовДок = ДополнительныеПараметры.Изменение;
			НовДок.Документ = РезультатВопроса;
			НовДок.УИДДокумент = Новый УникальныйИдентификатор;
			Модифицированность = Истина;
			Элементы.ПриложенныеФайлыДобавитьФайл.Доступность = Истина;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруДанныхФайла(Преобразовать, АдресФайла, ПолноеИмяФайла, Каталог, ИДВДереве) Экспорт 
	Если Преобразовать И Не СтрЗаканчиваетсяНа(НРег(ПолноеИмяФайла), ".pdf") Тогда 
		ОбрабатываемаяКартинка = новый ОбрабатываемаяКартинка(Новый Картинка(ПолучитьИзВременногоХранилища(АдресФайла)));
		ОбрабатываемаяКартинка.УстановитьГлубинуЦвета(ГлубинаЦвета.БитНаПиксел1);
		ОбрабатываемаяКартинка.УстановитьПлотность(300, 300);
		АдресФайла = ПоместитьВоВременноеХранилище(ОбрабатываемаяКартинка.ПолучитьКартинку().ПолучитьДвоичныеДанные(), УникальныйИдентификатор);
	КонецЕсли;
	
	МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
	ИмяФайла = СтрЗаменить(ПолноеИмяФайла, Каталог, "");
	ИмяБезРасширения = Лев(ИмяФайла, СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) - 1);
	РасширениеБезТочки = Сред(ИмяФайла, СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) + 1);
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("ВладелецФайлов", Объект.Ссылка);
	ПараметрыФайла.Вставить("Автор", Неопределено);
	ПараметрыФайла.Вставить("ИмяБезРасширения", СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", ""));
	ПараметрыФайла.Вставить("РасширениеБезТочки", РасширениеБезТочки);
	ПараметрыФайла.Вставить("ВремяИзменения", Неопределено);
	ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
	ПараметрыФайла.Вставить("Служебный", Истина);
	НоваяСсылкаНаФайл = МодульРаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресФайла,
		, "Файл создан автоматически из формы уведомления, редактирование запрещено.");
	Файл = ПриложенныеФайлы.НайтиПоИдентификатору(ИДВДереве);
	Файл.ПрисоединенныйФайл = НоваяСсылкаНаФайл;
	Файл.Документ = ИмяФайла;
	Файл.УИДФайл = Новый УникальныйИдентификатор;
	Файл.УИДДокумент = Файл.ПолучитьРодителя().УИДДокумент;
	Файл.ИндексКартинки = 2;
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Функция ТаблицаЗаменИменМногострочныхЧастей()
	Возврат УведомлениеОСпецрежимахНалогообложения.СформироватьСоответствиеМногострочныхЧастей(
		ДанныеФормыВЗначение(ДеревоСтраниц, Тип("ДеревоЗначений")));
КонецФункции

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	Если ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/Жалоба", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС;
	ИначеЕсли ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/Отзыв", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывЖалобы;
	ИначеЕсли ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/ДопДок", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ДополнительнаяИнформацияКЖалобе;
	ИначеЕсли ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/ХодВосстСрок1", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВосстановлениеСрокаЖалобы;
	ИначеЕсли ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/ХодПриостРассм1", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеРассмотренияЖалобы;
	ИначеЕсли ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/ПриостРеш1", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ПриостановлениеИсполненияЖалобы;
	Иначе
		ВызватьИсключение "Не удалось распознать документ";
	КонецЕсли;
	
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	ПриложенныеФайлы.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ЗаменыИменМногострочныхЧастей", ТаблицаЗаменИменМногострочныхЧастей());
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗапроса(СтандартнаяОбработка, Область)
	СтандартнаяОбработка = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ЭтоРежимВыбора", Истина);
	ДополнительныеПараметры.Вставить("Организация", Объект.Организация);
	ДополнительныеПараметры.Вставить("ОтборОрган", 
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ДополнительныеПараметры.Вставить("Раздел", 
		ПредопределенноеЗначение("Перечисление.СтраницыЖурналаОтчетность.Уведомления"));
	ДополнительныеПараметры.Вставить("ВидУведомления", 
		ПредопределенноеЗначение("Перечисление.ВидыУведомленийОСпецрежимахНалогообложения.ЖалобаФНС"));
	
	ОО = Новый ОписаниеОповещения("ВыборЗапросаЗавершение", ЭтотОбъект, Область);
	ОткрытьФорму("ОбщаяФорма.РегламентированнаяОтчетность", 
		ДополнительныеПараметры, , Новый УникальныйИдентификатор, , , ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыборЗапросаЗавершение(ВыбранныйОбъект, Область) Экспорт
	Если ТипЗнч(ВыбранныйОбъект) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
		ИмяФайла = РегламентированнаяОтчетностьВызовСервера.ИмяФайлаСданногоОбъекта1СОтчетности(ВыбранныйОбъект);
		Если ЗначениеЗаполнено(ИмяФайла) Тогда 
			Область.Значение = ИмяФайла;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область);
		Иначе
			ОбщегоНазначенияКлиент.СообщитьПользователю("Данное уведомление не было сдано в ФНС через 1С-Отчетность");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Возврат (Область.Имя = "Гражданство" И ЭтотОбъект["ТекущееИДНаименования"] = "Титульная");
КонецФункции

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	ДобавитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	УдалитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтроку(ЭтотОбъект, ИмяОбласти, 2);
КонецПроцедуры

#КонецОбласти
