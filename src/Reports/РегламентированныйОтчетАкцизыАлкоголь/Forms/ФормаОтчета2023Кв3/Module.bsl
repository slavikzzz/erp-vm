
#Область Переменные

&НаСервере
Перем мОбъектОтчета;

&НаСервере
Перем СохраненныеДанныеОтчета;

#Область ПеременныеКС

&НаКлиенте
Перем ФормаОтчетаПроверкиКС Экспорт;

&НаСервере
Перем ДанныеКС;

&НаСервере
Перем НастройкиКС;

&НаСервере
Перем ТаблицаРезультата;

&НаСервере
Перем ТаблицаРасшифровки;

&НаСервере
Перем Документирование;

&НаСервере
Перем ТаблицаОписаний;

#КонецОбласти

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обход ошибки платформы Параметр сеанса отсутствует или удален.
	ТабличныйДокумент.Очистить();
	
	СформироватьСтруктуруРеквизитовФормы();
	
	СтруктураРеквизитовФормы.мСохраненныйДок = Параметры.мСохраненныйДок;
	
	СтруктураРеквизитовФормы.мВерсияФормы = "01/09/2023";
	
	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мПериодичность           = Параметры.мПериодичность;
	СтруктураРеквизитовФормы.мСкопированаФорма        = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417
	= Параметры.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417;
	
	РегламентированнаяОтчетность.СформироватьСтруктуруЦветовРаскраски(ЭтотОбъект);
	
	ПорядкиОкругленияОтчетности = Новый Структура;
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000000",
		Перечисления.ПорядкиОкругленияОтчетности.Окр1000000);
	
	СоответствиеЕдиницыИзмеренияДелителю = Новый Структура;
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1", 1);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000", 1000);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000000", 1000000);
	
	ДатаПодписи = ТекущаяДатаСеанса();
	
	Инициализация(Параметры.БезОткрытияФормы);
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСтруктуруРеквизитовФормы()
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("ВыводитьСтраницуВТаблДокНаСервере");
	СтруктураРеквизитовФормы.Вставить("НаимТекущегоРаздела");
	СтруктураРеквизитовФормы.Вставить("мАвтоВыборКодов");
	СтруктураРеквизитовФормы.Вставить("мБезОткрытияФормы");
	СтруктураРеквизитовФормы.Вставить("мВерсияФормы");
	СтруктураРеквизитовФормы.Вставить("мЗаписываетсяНовыйДокумент");
	СтруктураРеквизитовФормы.Вставить("СписокПечатаемыхЛистов");
	СтруктураРеквизитовФормы.Вставить("мПечатныеформы");
	СтруктураРеквизитовФормы.Вставить("мРежимПечати");
	СтруктураРеквизитовФормы.Вставить("мСчетчикСтраниц");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР1М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР1М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР21М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР22М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР23М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР24М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР241М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР25М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР3М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыР3М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП1М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП2М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП2М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП2М3");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП2М4");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП3М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП4М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП4М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП512М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП612М1");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП613М2");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП614М3");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП3М1_");
	СтруктураРеквизитовФормы.Вставить("мИдГруппыП3М2_");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГруппы");
	СтруктураРеквизитовФормы.Вставить("ДлинаИмениГрафы");
	СтруктураРеквизитовФормы.Вставить("ТочностьЕдиницыИзмерения");
	СтруктураРеквизитовФормы.Вставить("ФлажокОтклАвтоРасчет", Ложь);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента");
	СтруктураРеквизитовФормы.Вставить("ЕдиницаИзмерения");
	СтруктураРеквизитовФормы.Вставить("мВариант");
	СтруктураРеквизитовФормы.Вставить("мСтрокаФормата");
	СтруктураРеквизитовФормы.Вставить("мВыбраннаяФорма");
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мДатаНачалаПериодаОтчета");
	СтруктураРеквизитовФормы.Вставить("мПериодичность");
	СтруктураРеквизитовФормы.Вставить("мСкопированаФорма");
	СтруктураРеквизитовФормы.Вставить("мСохраненныйДок");
	СтруктураРеквизитовФормы.Вставить("мПечатьБезШтрихкодаРазрешена");
	СтруктураРеквизитовФормы.Вставить("Организация");
	СтруктураРеквизитовФормы.Вставить("ИП");
	СтруктураРеквизитовФормы.Вставить("НаимОрганизации");
	СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", "");
	СтруктураРеквизитовФормы.Вставить("СтрПериодОтчета");
	СтруктураРеквизитовФормы.Вставить("ТекущаяСтрокаРазделовОтчета");
	СтруктураРеквизитовФормы.Вставить("НомераСтрокМногоуровнегоРаздела");
	СтруктураРеквизитовФормы.Вставить("СтруктураМногострочныхЧастей");
	СтруктураРеквизитовФормы.Вставить("ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417");
	СтруктураРеквизитовФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки");
	РегламентированнаяОтчетностьЗагрузка.ДополнитьСтруктуруРеквизитовПараметрамиКопирования(СтруктураРеквизитовФормы);
	
	// ПроцессыОбработкиДокументов
	//
	СтруктураРеквизитовФормы.Вставить("ПустаяСсылкаНаРегламентированныйОтчет",
		Документы.РегламентированныйОтчет.ПустаяСсылка());
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

#Область Инициализация

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	Перем ИсходноеКоличествоСтрокГруппы;
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный";
	ТабличныйДокумент.Очистить();
	
	ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(ИмяФормы,
	СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + СтруктураРеквизитовФормы.НаимТекущегоРаздела));
	
	ИнициализироватьМногострочныеЧасти();
	
	ИнициализироватьМногоуровневыеРазделы();
	
	ИнициализироватьОбычныеРазделы();
	
	ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета();
	
	ФормироватьСтруктуруСтраницОтчета();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мПечатныеформы = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
	СтруктураРеквизитовФормы.ВидДокумента = 0;
	НомерКорректировки = 1;
	
	ЗаполнитьЗначенияПоУмолчанию = Ложь;
	ОтчетСкопированОрганизацияНеИзменилась = Ложь;
	ОтчетСкопированСЮЛНаИПИлиСИПНаЮЛ = Ложь;
	
	РегламентированнаяОтчетностьЗагрузка.ЗаполнитьПарметрыКопирования(ЭтотОбъект);
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			ВосстановитьСохраненныеДанные();
		Иначе
			СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Ложь;
			ЗаполнитьЗначенияПоУмолчанию = Истина;
			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
		КонецЕсли;
		Модифицированность = Истина;
	Иначе
		Если СтруктураРеквизитовФормы.мВыбраннаяФорма = СтруктураРеквизитовФормы.мСкопированаФорма 
			Или СтруктураРеквизитовФормы.мСкопированаФорма = Неопределено Тогда
			
			ВосстановитьСохраненныеДанные();
		Иначе
			СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Ложь;
			ЗаполнитьЗначенияПоУмолчанию = Истина;
			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			Если СтруктураРеквизитовФормы.мСохраненныйДок.Организация
				= СтруктураРеквизитовФормы.Организация Тогда
				ОтчетСкопированОрганизацияНеИзменилась = Истина;
			КонецЕсли;
			Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.мСохраненныйДок.Организация)
				<> РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
				ОтчетСкопированСЮЛНаИПИлиСИПНаЮЛ = Истина;
			КонецЕсли;
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
			Модифицированность = Истина;
		КонецЕсли;
		Если НЕ БезОткрытияФормы И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
			РегламентированнаяОтчетность.БлокировкаИлиЗапретРедактированияОтчета(ЭтотОбъект);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ИП
	= НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация);
	
	Если ЗаполнитьЗначенияПоУмолчанию ИЛИ ОтчетСкопированСЮЛНаИПИлиСИПНаЮЛ Тогда
		
		УстановитьКодПоМестуПоУмолчанию();
		
		// Установка в разделе 1 значения кода по ОКТМО.
		//
		ОргОКТМО = "";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ОКТМО");
		
		Если СведенияОбОрганизации.Свойство("ОКТМО") Тогда
			
			СтруктураПараметров = Новый Структура("Организация, ДатаЗначения, СведенияОбОрганизации",
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, СведенияОбОрганизации);
			РегламентированнаяОтчетность.ЗаменитьСведенияОбОрганизацииСведениямиОКрупнейшемНалогоплательщике(
			СтруктураПараметров);
			
			ОргОКТМО = СокрЛП(СведенияОбОрганизации.ОКТМО);
			
		КонецЕсли;
		
		ДеревоРаздела1 = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
		
		ДеревоРаздела1.Строки[0].Данные.Вставить("П000010001003", ОргОКТМО);
		
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]
		= ПоместитьВоВременноеХранилище(ДеревоРаздела1, УникальныйИдентификатор);
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации = НачальноеЗначениеНаименованияОрганизации();
	
	ПоказатьПериод();
	
	ЗаполнитьПериодОтчета(ЭтотОбъект);
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено
		ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
		
		Если ОтчетСкопированОрганизацияНеИзменилась Тогда
			
			Если ЗначениеЗаполнено(ТабличныйДокумент.Области.КодФормыРеорганизации.Значение) Тогда
				НаимОргВосстановленное = ТабличныйДокумент.Области.НаимОрг.Значение;
				ЗаполнитьСведенияОбОрганизацииНаСервере();
				ТабличныйДокумент.Области.НаимОрг.Значение = НаимОргВосстановленное;
			КонецЕсли;
			
		Иначе
			
			ЗаполнитьСведенияОбОрганизацииНаСервере();
			
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
			РасчетНаСервере();
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.НаимОрганизации = СтруктураРеквизитовФормы.Организация.Наименование;
	
	СформироватьСпискиВыбора();
	
	Если НЕ БезОткрытияФормы Тогда
		РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтотОбъект);
	КонецЕсли;
	
	ОтобразитьНомерКорректировки(ЭтотОбъект);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	НомерКорректировки = ?(СтруктураРеквизитовФормы.ВидДокумента = 0, 0, НомерКорректировки);
	ТабличныйДокумент.Области.НомерКорректировки.Значение = Строка(НомерКорректировки);
	ЗаполнитьДатуВЯчейках(ЭтотОбъект);
	
	УстановитьФорматВыводаНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтотОбъект);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПриИнициализации(ЭтотОбъект,
		?(ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок),
			СтруктураРеквизитовФормы.мСохраненныйДок,
			СтруктураРеквизитовФормы.ПустаяСсылкаНаРегламентированныйОтчет));
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодПоМестуПоУмолчанию()
	
	Если СтруктураРеквизитовФормы.ИП Тогда
		
		ТабличныйДокумент.Области.ПоМесту.Значение = "120";
		
	Иначе
		
		ТабличныйДокумент.Области.ПоМесту.Значение = "214";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, "КППЮЛ");
		
		СтруктураПараметров = Новый Структура("Организация, ДатаЗначения, СведенияОбОрганизации",
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, СведенияОбОрганизации);
		РегламентированнаяОтчетность.ЗаменитьСведенияОбОрганизацииСведениямиОКрупнейшемНалогоплательщике(
		СтруктураПараметров);
		
		КПП = СокрЛП(СведенияОбОрганизации.КППЮЛ);
		Если ЗначениеЗаполнено(КПП) Тогда
			Если Сред(КПП, 5, 2) = "50"
				И РегламентированнаяОтчетность.ОрганизацияЯвляетсяКрупнейшимНалогоплательщиком(СтруктураПараметров) Тогда
				
				ТабличныйДокумент.Области.ПоМесту.Значение = "213";
				
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногострочныеЧасти()
	
	// Идентификаторы многострочных групп.
	СтруктураРеквизитовФормы.мИдГруппыР1М1   = "П00001М1";
	СтруктураРеквизитовФормы.мИдГруппыР1М2   = "П00001М2";
	СтруктураРеквизитовФормы.мИдГруппыР21М1  = "П00021М1";
	СтруктураРеквизитовФормы.мИдГруппыР22М1  = "П00022М1";
	СтруктураРеквизитовФормы.мИдГруппыР23М1  = "П00023М1";
	СтруктураРеквизитовФормы.мИдГруппыР24М1  = "П00024М1";
	СтруктураРеквизитовФормы.мИдГруппыР241М1 = "П00241М1";
	СтруктураРеквизитовФормы.мИдГруппыР25М1  = "П00025М1";
	СтруктураРеквизитовФормы.мИдГруппыР3М1   = "П00003М1";
	СтруктураРеквизитовФормы.мИдГруппыР3М2   = "П00003М2";
	СтруктураРеквизитовФормы.мИдГруппыП1М1   = "П00101М1";
	СтруктураРеквизитовФормы.мИдГруппыП2М1   = "П00102М1";
	СтруктураРеквизитовФормы.мИдГруппыП2М2   = "П00102М2";
	СтруктураРеквизитовФормы.мИдГруппыП2М3   = "П00102М3";
	СтруктураРеквизитовФормы.мИдГруппыП2М4   = "П00102М4";
	СтруктураРеквизитовФормы.мИдГруппыП3М1   = "П00103М1";
	СтруктураРеквизитовФормы.мИдГруппыП4М1   = "П00104М1";
	СтруктураРеквизитовФормы.мИдГруппыП4М2   = "П00104М2";
	СтруктураРеквизитовФормы.мИдГруппыП512М1 = "П00105М1";
	СтруктураРеквизитовФормы.мИдГруппыП612М1 = "П00106М1";
	СтруктураРеквизитовФормы.мИдГруппыП613М2 = "П00106М2";
	СтруктураРеквизитовФормы.мИдГруппыП614М3 = "П00106М3";
	
	// Идентификаторы служебных многострочных групп для печати Приложения 3.
	СтруктураРеквизитовФормы.мИдГруппыП3М1_ = "П10103М1";
	СтруктураРеквизитовФормы.мИдГруппыП3М2_ = "П10103М2";
	
	// Свойства, общие для всех многострочных групп.
	СтруктураРеквизитовФормы.ДлинаИмениГруппы = 8;
	СтруктураРеквизитовФормы.ДлинаИмениГрафы  = 13;
	
	// Структура с описанием свойств каждой группы в отдельности.
	СтруктураМногострочныхЧастей = Новый Структура;
	
	// Группа П00001М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М102000");
	ИменаГраф.Добавить("П00001М105000");
	ИменаГраф.Добавить("П00001М105500");
	ИменаГраф.Добавить("П00001М106000");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыР1М2);
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР1М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00001М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00001М203000");
	ИменаГраф.Добавить("П00001М204000");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР1М2, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00021М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00021М100001");
	ИменаГраф.Добавить("П00021М100002");
	ИменаГраф.Добавить("П00021М100003");
	ИменаГраф.Добавить("П00021М100004");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР21М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00022М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00022М100001");
	ИменаГраф.Добавить("П00022М100002");
	ИменаГраф.Добавить("П00022М100003");
	ИменаГраф.Добавить("П00022М100004");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР22М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00023М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00023М100001");
	ИменаГраф.Добавить("П00023М100002");
	ИменаГраф.Добавить("П00023М100003");
	ИменаГраф.Добавить("П00023М100004");
	ИменаГраф.Добавить("П00023М100005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР23М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00024М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00024М100001");
	ИменаГраф.Добавить("П00024М100002");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР24М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00241М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00241М100001");
	ИменаГраф.Добавить("П00241М100002");
	ИменаГраф.Добавить("П00241М100003");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР241М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00025М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00025М100001");
	ИменаГраф.Добавить("П00025М100002");
	ИменаГраф.Добавить("П00025М100003");
	ИменаГраф.Добавить("П00025М100004");
	ИменаГраф.Добавить("П00025М100005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР25М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00003М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00003М102003");
	ИменаГраф.Добавить("П00003М103003");
	ИменаГраф.Добавить("П00003М104003");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыР3М2);
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР3М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00003М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00003М205003");
	ИменаГраф.Добавить("П00003М206003");
	ИменаГраф.Добавить("П00003М207003");
	ИменаГраф.Добавить("П00003М208003");
	ИменаГраф.Добавить("П00003М209003");
	ИменаГраф.Добавить("П00003М210003");
	ИменаГраф.Добавить("П00003М211003");
	ИменаГраф.Добавить("П00003М212003");
	ИменаГраф.Добавить("П00003М213003");
	ИменаГраф.Добавить("П00003М214003");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР3М2, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00101М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00101М100001");
	ИменаГраф.Добавить("П00101М100002");
	ИменаГраф.Добавить("П00101М100003");
	ИменаГраф.Добавить("П00101М100004");
	ИменаГраф.Добавить("П00101М100005");
	ИменаГраф.Добавить("П00101М100006");
	ИменаГраф.Добавить("П00101М100007");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП1М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00102М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00102М106000");
	ИменаГраф.Добавить("П00102М110000");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыП2М2);
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыП2М3);
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыП2М4);
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП2М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00102М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00102М207003");
	ИменаГраф.Добавить("П00102М207004");
	ИменаГраф.Добавить("П00102М207005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП2М2, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00102М3.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00102М308003");
	ИменаГраф.Добавить("П00102М308004");
	ИменаГраф.Добавить("П00102М308005");
	ИменаГраф.Добавить("П00102М308006");
	ИменаГраф.Добавить("П00102М308007");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП2М3, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00102М4.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00102М409003");
	ИменаГраф.Добавить("П00102М409004");
	ИменаГраф.Добавить("П00102М409005");
	ИменаГраф.Добавить("П00102М409006");
	ИменаГраф.Добавить("П00102М409007");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП2М4, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00103М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00103М100001");
	ИменаГраф.Добавить("П00103М100002");
	ИменаГраф.Добавить("П00103М100003");
	ИменаГраф.Добавить("П00103М100004");
	ИменаГраф.Добавить("П00103М100005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП3М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00104М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00104М104000");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыП4М2);
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП4М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00104М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00104М205000");
	ИменаГраф.Добавить("П00104М206000");
	ИменаГраф.Добавить("П00104М207000");
	ИменаГраф.Добавить("П00104М208000");
	ИменаГраф.Добавить("П00104М209000");
	ИменаГраф.Добавить("П00104М210000");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП4М2, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	// Группа П00105М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00105М119003");
	ИменаГраф.Добавить("П00105М120003");
	ИменаГраф.Добавить("П00105М121003");
	ИменаГраф.Добавить("П00105М122003");
	ИменаГраф.Добавить("П00105М123003");
	ИменаГраф.Добавить("П00105М124003");
	ИменаГраф.Добавить("П00105М125003");
	ИменаГраф.Добавить("П00105М126003");
	ИменаГраф.Добавить("П00105М127003");
	ИменаГраф.Добавить("П00105М128003");
	ИменаГраф.Добавить("П00105М129003");
	ИменаГраф.Добавить("П00105М130003");
	ИменаГраф.Добавить("П00105М130103");
	ИменаГраф.Добавить("П00105М130203");
	ИменаГраф.Добавить("П00105М130303");
	ИменаГраф.Добавить("П00105М131003");
	ИменаГраф.Добавить("П00105М131103");
	ИменаГраф.Добавить("П00105М131203");
	ИменаГраф.Добавить("П00105М131303");
	ИменаГраф.Добавить("П00105М132003");
	ИменаГраф.Добавить("П00105М133003");
	ИменаГраф.Добавить("П00105М134003");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП512М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00106М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00106М121003");
	ИменаГраф.Добавить("П00106М122003");
	ИменаГраф.Добавить("П00106М123003");
	ИменаГраф.Добавить("П00106М124003");
	ИменаГраф.Добавить("П00106М125003");
	ИменаГраф.Добавить("П00106М125503");
	ИменаГраф.Добавить("П00106М126003");
	ИменаГраф.Добавить("П00106М126503");
	ИменаГраф.Добавить("П00106М126603");
	ИменаГраф.Добавить("П00106М126703");
	ИменаГраф.Добавить("П00106М127003");
	ИменаГраф.Добавить("П00106М127503");
	ИменаГраф.Добавить("П00106М127603");
	ИменаГраф.Добавить("П00106М127703");
	ИменаГраф.Добавить("П00106М128003");
	ИменаГраф.Добавить("П00106М128503");
	ИменаГраф.Добавить("П00106М129003");
	ИменаГраф.Добавить("П00106М129503");
	ИменаГраф.Добавить("П00106М130003");
	ИменаГраф.Добавить("П00106М130503");
	ИменаГраф.Добавить("П00106М131003");
	ИменаГраф.Добавить("П00106М131503");
	ИменаГраф.Добавить("П00106М132003");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП612М1, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00106М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00106М232503");
	ИменаГраф.Добавить("П00106М233003");
	ИменаГраф.Добавить("П00106М234003");
	ИменаГраф.Добавить("П00106М235003");
	ИменаГраф.Добавить("П00106М236003");
	ИменаГраф.Добавить("П00106М237003");
	ИменаГраф.Добавить("П00106М238003");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП613М2, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П00106М3.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П00106М338503");
	ИменаГраф.Добавить("П00106М339003");
	ИменаГраф.Добавить("П00106М340003");
	ИменаГраф.Добавить("П00106М340503");
	ИменаГраф.Добавить("П00106М341003");
	ИменаГраф.Добавить("П00106М341503");
	ИменаГраф.Добавить("П00106М342003");
	ИменаГраф.Добавить("П00106М342503");
	ИменаГраф.Добавить("П00106М343003");
	ИменаГраф.Добавить("П00106М343503");
	ИменаГраф.Добавить("П00106М344003");
	ИменаГраф.Добавить("П00106М344503");
	ИменаГраф.Добавить("П00106М345003");
	ИменаГраф.Добавить("П00106М345503");
	ИменаГраф.Добавить("П00106М346003");
	ИменаГраф.Добавить("П00106М347003");
	ИменаГраф.Добавить("П00106М348003");
	ИменаГраф.Добавить("П00106М349003");
	
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП614М3, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П10103М1.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П10103М101003");
	ИменаГраф.Добавить("П10103М102003");
	ИменаГраф.Добавить("П10103М103003");
	ИменаГраф.Добавить("П10103М104003");
	ИменаПодчиненныхГрупп = Новый Массив;
	ИменаПодчиненныхГрупп.Добавить(СтруктураРеквизитовФормы.мИдГруппыП3М2_);
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП3М1_, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	// Группа П10103М2.
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("П10103М200001");
	ИменаГраф.Добавить("П10103М200002");
	ИменаГраф.Добавить("П10103М200003");
	ИменаГраф.Добавить("П10103М200004");
	ИменаГраф.Добавить("П10103М200005");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыП3М2_, Новый Структура(
	"ИменаГраф,ИсхКолСтрок,УровеньПодчинения,ИменаПодчиненныхГрупп", ИменаГраф, 1, 1, ИменаПодчиненныхГрупп));
	
	СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей = СтруктураМногострочныхЧастей;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногоуровневыеРазделы()
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = Новый Массив;
	
	// Формирование структуры свойств многоуровневых разделов.
	//
	мСтруктураМногоуровневыхРазделов = Новый Структура;
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР1М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР21М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР22М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР23М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР24М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР241М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР25М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыР3М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Раздел3", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП1М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение1", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП2М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение2", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП3М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение3", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП4М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение4", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП512М1);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение5", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	СтруктураРаздела.Вставить("Многостраничность");
	ИменаПодчиненныхРазделов = Новый Массив;
	ИменаПодчиненныхРазделов.Добавить("Приложение612_613");
	ИменаПодчиненныхРазделов.Добавить("Приложение614");
	СтруктураРаздела.Вставить("ИменаПодчиненныхРазделов", ИменаПодчиненныхРазделов);
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение6", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП612М1);
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП613М2);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Приложение6");
	СтруктураРаздела.Вставить("НаимСтраницы", "Разделы 1.2, 1.3");
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение612_613", СтруктураРаздела);
	
	СтруктураРаздела = Новый Структура;
	ИменаГруппМнЧ = Новый Массив;
	ИменаГруппМнЧ.Добавить(СтруктураРеквизитовФормы.мИдГруппыП614М3);
	СтруктураРаздела.Вставить("ИменаГруппМнЧ", ИменаГруппМнЧ);
	СтруктураРаздела.Вставить("Подчиненность");
	СтруктураРаздела.Вставить("ИмяГлавногоРаздела", "Приложение6");
	СтруктураРаздела.Вставить("НаимСтраницы", "Раздел 1.4");
	мСтруктураМногоуровневыхРазделов.Вставить("Приложение614", СтруктураРаздела);
	
	// Формирование начальной структуры дерева разделов
	// с заполнением каждого уровня пустыми данными.
	//
	ДеревоДанных = Новый ДеревоЗначений;
	ДеревоДанных.Колонки.Добавить("Данные");
	ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	СохрТаблДокумент = Новый ТабличныйДокумент;
	СохрТаблДокумент.Вывести(ТабличныйДокумент);
	
	Для каждого Элем Из мСтруктураМногоуровневыхРазделов Цикл
		Если Элем.Значение.Свойство("Подчиненность") Тогда
			Продолжить;
		КонецЕсли;
		
		ДеревоДанныхРаздела = ДеревоДанных.Скопировать();
		ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + Элем.Ключ));
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(Элем.Ключ);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		ИнициализироватьПодчиненныеРазделы(Элем.Ключ, ТекВетка);
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + Элем.Ключ,
		ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТаблДокумент);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьМногоуровневыйРаздел(ИмяРаздела)
	
	УдалитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоДанныхРаздела = Новый ДеревоЗначений;
	ДеревоДанныхРаздела.Колонки.Добавить("Данные");
	ДеревоДанныхРаздела.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	СохрТаблДокумент = Новый ТабличныйДокумент;
	СохрТаблДокумент.Вывести(ТабличныйДокумент);
	
	ТекВетка = ДеревоДанныхРаздела.Строки.Добавить();
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
	ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	ИнициализироватьПодчиненныеРазделы(ИмяРаздела, ТекВетка);
	
	СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяРаздела,
	ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТаблДокумент);
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьПодчиненныеРазделы(Знач ИмяРаздела, Ветка)
	
	Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		
		ИменаПодчРазделов = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для каждого ИмяПодчРаздела Из ИменаПодчРазделов Цикл
			ПодчВетка = Ветка.Строки.Добавить().Строки.Добавить();
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
			ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяПодчРаздела));
			
			ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяПодчРаздела);
			
			ПодчВетка.Данные = ДанныеТаблДокумента.Данные;
			ПодчВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
			
			ИнициализироватьПодчиненныеРазделы(ИмяПодчРаздела, ПодчВетка);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьОбычныеРазделы(МассивИменРазделов = Неопределено)
	
	Если МассивИменРазделов = Неопределено Тогда
		
		МассивИменРазделов = Новый Массив;
		МассивИменРазделов.Добавить("Титульный");
		
	КонецЕсли;
	
	СохрТабличныйДокумент = Новый ТабличныйДокумент;
	СохрТабличныйДокумент.Вывести(ТабличныйДокумент);
	
	Для каждого ИмяРаздела Из МассивИменРазделов Цикл
		
		ЭтотОбъект["СтруктураДанных" + ИмяРаздела] = Новый Структура;
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
		
		СохранитьДанныеРаздела(ИмяРаздела);
		
	КонецЦикла;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(СохрТабличныйДокумент);
	
КонецПроцедуры

&НаСервере
Функция НачальноеЗначениеНаименованияОрганизации()
	
	СтрокаСведений = "НаимЮЛПол";
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
	
	НаимОрганизации = "";
	СведенияОбОрганизации.Свойство("НаимЮлПол", НаимОрганизации);
	
	Возврат СокрЛП(НаимОрганизации);
	
КонецФункции

&НаСервере
Процедура ФормироватьСтруктуруСтраницОтчета() Экспорт
	
	мДеревоСтраницОтчета.ПолучитьЭлементы().Очистить();
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение1";
	СтрокаУровня1.Представление      = "Приложение 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение2";
	СтрокаУровня1.Представление      = "Приложение 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение3";
	СтрокаУровня1.Представление      = "Приложение 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение4";
	СтрокаУровня1.Представление      = "Приложение 4";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение5";
	СтрокаУровня1.Представление      = "Приложение 5";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = мДеревоСтраницОтчета.ПолучитьЭлементы().Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Приложение6";
	СтрокаУровня1.Представление      = "Приложение 6";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСпискиВыбора()
	
	МакетСоставаПоказателей = ОбъектОтчета(ИмяФормы).ПолучитьМакет("СпискиВыбора2023Кв3");
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = КодПоказателя;
					НовСтрока.Название = СокрП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПоказателей.Очистить();
	
	//Титульный.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПоМесту", 3, ,
	"Выбор места представления", КоллекцияСписковВыбора[?(СтруктураРеквизитовФормы.ИП,
	"МестаПредставленияИП", "МестаПредставленияЮЛ")]);
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "КодФормыРеорганизации", 1, ,
	"Выбор кода формы реорганизации (ликвидации)", КоллекцияСписковВыбора["ФормыРеорганизации"]);
	
	Если КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецДня('20240531') Тогда
		
		КодыВидаПодакцизныхТоваров = "КодыВидаПодакцизныхТоваров_20240501";
		
	Иначе
		
		КодыВидаПодакцизныхТоваров = "КодыВидаПодакцизныхТоваров";
		
	КонецЕсли;
	
	//Раздел 1.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М102000", 0, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М203000", 2, ,
	"Выбор кода срока уплаты", КоллекцияСписковВыбора["КодыСрокаУплаты"]);
	
	//Раздел 2.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020001003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020002003", 0, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК"]);
	//Подраздел 2.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00021М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р21"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00021М100002", 1, ,
	"Выбор признака применения ставки акциза", КоллекцияСписковВыбора["ПризнакиПримененияСтавкиАкциза"]);
	//Подраздел 2.2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00022М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р22"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00022М100002", 1, ,
	"Выбор признака применения ставки акциза", КоллекцияСписковВыбора["ПризнакиПримененияСтавкиАкциза"]);
	
	Если КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецДня('20240531') Тогда
		
		КодыПоказателей_Р23 = "КодыПоказателей_Р23_20240501";
		
	Иначе
		
		КодыПоказателей_Р23 = "КодыПоказателей_Р23";
		
	КонецЕсли;
	
	//Подраздел 2.3.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00023М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора[КодыПоказателей_Р23]);
	//Подраздел 2.4.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00024М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р24"]);
	//Подраздел 2.4.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00241М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р241"]);
	//Подраздел 2.5.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00025М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р25"]);
	
	//Раздел 3.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000030001003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора["КодыВидаПодакцизныхТоваров_Р3"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00003М102003", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р3"]);
	
	Если КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецДня('20240531') Тогда
		
		КодыВидаПодакцизныхТоваров_Р31 = "КодыВидаПодакцизныхТоваров_Р31_20240501";
		
	Иначе
		
		КодыВидаПодакцизныхТоваров_Р31 = "КодыВидаПодакцизныхТоваров_Р31";
		
	КонецЕсли;
	
	//Подраздел 3.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00003М205003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров_Р31]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00003М206003", 0, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00003М207003", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_Р31"]);
	
	Если КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецДня('20240531') Тогда
		
		КоэффициентыКв_Р31 = "КоэффициентыКв_Р31_20240501";
		
	ИначеЕсли Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2024 Тогда
		
		КоэффициентыКв_Р31 = "КоэффициентыКв_Р31_20240101";
		
	Иначе
		
		КоэффициентыКв_Р31 = "КоэффициентыКв_Р31";
		
	КонецЕсли;
	
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00003М212003", 0, ,
	"Выбор коэффициента Кв", КоллекцияСписковВыбора[КоэффициентыКв_Р31]);
	
	Если КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецДня('20240531') Тогда
		
		КодыВидаПодакцизныхТоваров_П1 = "КодыВидаПодакцизныхТоваров_П1_20240501";
		
	Иначе
		
		КодыВидаПодакцизныхТоваров_П1 = "КодыВидаПодакцизныхТоваров_П1";
		
	КонецЕсли;
	
	//Приложение 1.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001010001003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров_П1]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00101М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_П1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00101М100002", 1, ,
	"Выбор признака применения ставки акциза", КоллекцияСписковВыбора["ПризнакиПримененияСтавкиАкциза"]);
	
	//Приложение 2.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001020000103", 1, ,
	"Выбор признака документа", КоллекцияСписковВыбора["ПризнакиДокумента"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00102М106000", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00102М207003", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_П2_Стр070"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00102М308003", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_П2_Стр080_Стр090"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00102М409003", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_П2_Стр080_Стр090"]);
	
	//Приложение 3.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00103М100001", 5, ,
	"Выбор кода показателя", КоллекцияСписковВыбора["КодыПоказателей_П3"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00103М100002", 3, ,
	"Выбор кода вида этилового спирта", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00103М100004", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	
	//Приложение 4.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001040000103", 1, ,
	"Выбор признака организации", КоллекцияСписковВыбора["ПризнакиОрганизации"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00104М104000", 3, ,
	"Выбор кода вида этилового спирта", КоллекцияСписковВыбора["КодыВидаСпирта_П4"]);
	
	//Приложение 5.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001050005003", 3, ,
	"Выбор кода вида закупаемого спирта", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00105М119003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	
	//Приложение 6.
	//
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001060000103", 1, ,
	"Выбор признака банковской гарантии", КоллекцияСписковВыбора["ПризнакиБанковскойГарантии"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001060009003", 3, ,
	"Выбор кода вида закупаемого этилового спирта", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	//Раздел 1.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П001060018003", 3, ,
	"Выбор кода вида закупаемого этилового спирта", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	//Раздел 1.2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00106М121003", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	//Раздел 1.3.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00106М232503", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	//Раздел 1.4.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00106М338503", 3, ,
	"Выбор кода вида подакцизного товара", КоллекцияСписковВыбора[КодыВидаПодакцизныхТоваров]);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПериод()
	
	СтруктураРеквизитовФормы.СтрПериодОтчета = ПредставлениеПериода(
	НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
	КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПериодОтчета(Форма)
	
	КодФормыРеорганизации = СокрЛП(Форма.ТабличныйДокумент.Области.КодФормыРеорганизации.Значение);
	
	КодПериода = Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Если ЗначениеЗаполнено(КодФормыРеорганизации) И КодФормыРеорганизации <> "9" Тогда
		КодПериода = КодПериода + 70;
	КонецЕсли;
	
	Форма.ТабличныйДокумент.Области.Период.Значение = Формат(КодПериода, "ЧЦ=2;ЧВН=");
	
	Форма.ТабличныйДокумент.Области.ОтчетГод.Значение
	= Формат(Год(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ЧГ=");
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеДанныхОтчета

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение = Неопределено) Экспорт
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * НомерКорректировки;
	
	Если СтруктураДанныхТитульный.Количество() = 0 ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		СтруктураДанныхТитульный.Вставить("НалоговыйОрган", ТабличныйДокумент.Области.НалоговыйОрган.Значение);
		СтруктураДанныхТитульный.Вставить("КПП", ТабличныйДокумент.Области.КПП.Значение);
		
	КонецЕсли;
	
	КодИФНС = СтруктураДанныхТитульный.НалоговыйОрган;
	КПП = СтруктураДанныхТитульный.КПП;
	
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтотОбъект, КодИФНС, Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		НаименованиеТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		НаименованиеТекущегоРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	КонецЕсли;
	
	РезультатСохранения = ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаименованиеТекущегоРаздела);
	
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП);
		
	Иначе
		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?';
			|en = 'Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение,КодИФНС, КПП );
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.Открыть();
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сохраняется %1...';
																				|en = 'Сохраняется %1...'"), Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, Неопределено, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
	Иначе
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сохраняется %1...';
																			|en = 'Сохраняется %1...'"), Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтотОбъект);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаимТекРаздела)
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтотОбъект, КодИФНС, КПП)
		И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтотОбъект, КодИФНС, КПП) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент = (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено) ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
		ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Сохранить(Автосохранение, КодИФНС, КПП, Вариант, , НаимТекРаздела);
	
КонецФункции

&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен = Неопределено, НаимТекРаздела) Экспорт
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(СтруктураРеквизитовФормы, "ЗаблокированоВДругомСеансе", Ложь) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
			СтруктураРеквизитовФормы.мСохраненныйДок, УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(
		ЭтотОбъект, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен,
		СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета = Метаданные.Отчеты[ИмяОтчета(ИмяФормы)].Имя;
	СтруктураРеквизитовФормы.мСохраненныйДок.НаименованиеОтчета = Метаданные.Отчеты[ИмяОтчета(ИмяФормы)].ОсновнаяФорма.Синоним;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала               = СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания            = СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мСохраненныйДок.Периодичность            = СтруктураРеквизитовФормы.мПериодичность;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма           = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мСохраненныйДок.Организация              = СтруктураРеквизитовФормы.Организация;
	СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи              = ДатаПодписи;
	СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	СтруктураРеквизитовФормы.мСохраненныйДок.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий              = Комментарий;
	СтруктураРеквизитовФормы.мСохраненныйДок.КодНалоговогоОргана      = КодИФНС;
	СтруктураРеквизитовФормы.мСохраненныйДок.КПП                      = КПП;
	СтруктураРеквизитовФормы.мСохраненныйДок.Вид                      = Вариант;
	СтруктураРеквизитовФормы.мСохраненныйДок.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(
	                                                                    СтруктураРеквизитовФормы.мСохраненныйДок.Вид);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц   = Новый ХранилищеЗначения(
	                                                                    РеквизитФормыВЗначение("мДеревоСтраницОтчета"));
	СтруктураРеквизитовФормы.мВариант                                 = Вариант;

	
	СтруктураРеквизитовФормы.мСохраненныйДок.ФорматВыгрузки = "Автоматически";
	
	СохранитьДанныеРаздела(НаимТекРаздела);
	
	ПоказателиОтчета = Новый Структура();
	ПоказателиОтчета.Вставить("ПолеТабличногоДокументаТитульный", СтруктураДанныхТитульный);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	// Вставляем данные многоуровневых разделов.
	ДанныеМногоуровневыхРазделов = Новый Структура;
	Для каждого Элем Из мСтруктураМногоуровневыхРазделов Цикл
		СтруктураРаздела = Элем.Значение;
		Если НЕ СтруктураРаздела.Свойство("Подчиненность") Тогда
			ДанныеМногоуровневыхРазделов.Вставить(Элем.Ключ, ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Элем.Ключ]));
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
	СписокСохранения.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);
	СписокСохранения.Вставить("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	СписокСохранения.Вставить("Автозаполнение", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	СписокСохранения.Вставить("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ХранилищеДанных = Новый ХранилищеЗначения(СписокСохранения);
	СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета = ХранилищеДанных;
	
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПередЗаписьюНаСервере(ЭтотОбъект,
		СтруктураРеквизитовФормы.мСохраненныйДок, Новый Структура);
	//
	// ПроцессыОбработкиДокументов
	
	Попытка
		СтруктураРеквизитовФормы.мСохраненныйДок.Записать();
		РегламентированнаяОтчетность.СохранитьСтатусОтправкиРеглОтчета(ЭтотОбъект);
	Исключение
		Если НЕ Автосохранение Тогда
			ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1';
					|en = '%1'"), РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецПопытки;
	
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПослеЗаписиНаСервере(ЭтотОбъект,
		СтруктураРеквизитовФормы.мСохраненныйДок, Новый Структура);
	//
	// ПроцессыОбработкиДокументов
	
	Модифицированность = Ложь;
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
		И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , УникальныйИдентификатор);
	КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ВосстановлениеСохраненныхДанныхОтчета

&НаСервере
Функция СохраненныеДанныеОтчета()
	
	Если СохраненныеДанныеОтчета = Неопределено Тогда
		
		СохраненныеДанныеОтчета = СтруктураРеквизитовФормы.мСохраненныйДок.ДанныеОтчета.Получить();
		
		Если СохраненныеДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
			ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(СохраненныеДанныеОтчета);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СохраненныеДанныеОтчета;
	
КонецФункции

&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногоуровневыхРазделов;
	Перем ПоказателиОтчета;
	Перем Автозаполнение;
	Перем ТаблицаРасшифровки;
	Перем ТаблицаМногостраничногоДокумента;
	
	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ЕдиницаИзмерения         = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	ДатаПодписи = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	Комментарий = СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;
	
	СписокСохранения = СохраненныеДанныеОтчета();
	
	ДеревоНастройкиСтраниц = СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц.Получить();
	ЗначениеВРеквизитФормы(ДеревоНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");
	
	СписокСохранения.Свойство("ПоказателиОтчета", ПоказателиОтчета);
	
	Если СписокСохранения.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
		Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]
				= ПоместитьВоВременноеХранилище(ЭлементСтруктуры.Значение, УникальныйИдентификатор);
		КонецЦикла;
	КонецЕсли;
	
	СписокСохранения.Свойство("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	Если СтруктураРеквизитовФормы.мАвтоВыборКодов = Неопределено Тогда
		СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	КонецЕсли;
	
	СписокСохранения.Свойство("ФлПроверятьСоотношенияПриПечатиИВыгрузки", 
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = 
		?(СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Неопределено, Ложь, 
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	
	СписокСохранения.Свойство("Автозаполнение", Автозаполнение);
	СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Автозаполнение;
	
	Если НЕ СписокСохранения.Свойство("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена) Тогда
		СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена = Ложь;
	КонецЕсли;
	Если НЕ СписокСохранения.Свойство("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц) Тогда
		СтруктураРеквизитовФормы.мСчетчикСтраниц = Ложь;
	КонецЕсли;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураДанныхТитульный = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	ИмяТекРаздела = "Титульный";
	Для Каждого ЭлСтруктуры Из ЭтотОбъект["СтруктураДанных" + ИмяТекРаздела] Цикл
		Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
		Если Обл <> Неопределено Тогда
			Обл.Значение = ЭлСтруктуры.Значение;
		КонецЕсли;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтотОбъект);
	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(СписокСохранения)
	
	ДанныеМногоуровневыхРазделов = Неопределено;
	ДеревоРаздела = Неопределено;
	
	Если СписокСохранения.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов)
		И ДанныеМногоуровневыхРазделов.Свойство("Приложение6", ДеревоРаздела) Тогда
		
		Для Каждого Ветка Из ДеревоРаздела.Строки Цикл
			
			// Подразделы 1.2, 1.3 Приложения 6.
			//
			ПодчВетка612_613 = Ветка.Строки.Добавить().Строки.Добавить();
			ПодчВетка612_613.Данные = Новый Структура;
			ПодчВетка612_613.ДанныеМногострочныхЧастей = Новый Структура;
			
			ДеревоСтарМнЧ = Ветка.ДанныеМногострочныхЧастей["П00106М1"];
			
			ДеревоНовМнЧ = Новый ДеревоЗначений;
			ДеревоНовМнЧ.Колонки.Добавить("Данные");
			ДеревоНовМнЧ.Колонки.Добавить("ДанныеМногострочныхЧастей");
			
			Для каждого СтрокаСтарМнЧ Из ДеревоСтарМнЧ.Строки Цикл
				СтрокаНовМнЧ = ДеревоНовМнЧ.Строки.Добавить();
				СтрокаНовМнЧ.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтрокаСтарМнЧ.Данные);
				СтрокаНовМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			КонецЦикла;
			
			ПодчВетка612_613.ДанныеМногострочныхЧастей.Вставить("П00106М1", ДеревоНовМнЧ);
			Ветка.ДанныеМногострочныхЧастей.Удалить("П00106М1");
			
			ДеревоСтарМнЧ = Ветка.ДанныеМногострочныхЧастей["П00106М2"];
			
			ДеревоНовМнЧ = Новый ДеревоЗначений;
			ДеревоНовМнЧ.Колонки.Добавить("Данные");
			ДеревоНовМнЧ.Колонки.Добавить("ДанныеМногострочныхЧастей");
			
			Для каждого СтрокаСтарМнЧ Из ДеревоСтарМнЧ.Строки Цикл
				СтрокаНовМнЧ = ДеревоНовМнЧ.Строки.Добавить();
				СтрокаНовМнЧ.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтрокаСтарМнЧ.Данные);
				СтрокаНовМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			КонецЦикла;
			
			ПодчВетка612_613.ДанныеМногострочныхЧастей.Вставить("П00106М2", ДеревоНовМнЧ);
			Ветка.ДанныеМногострочныхЧастей.Удалить("П00106М2");
			
			// Подраздел 1.4 Приложения 6.
			//
			ПодчВетка614 = Ветка.Строки.Добавить().Строки.Добавить();
			ПодчВетка614.Данные = Новый Структура;
			ПодчВетка614.ДанныеМногострочныхЧастей = Новый Структура;
			
			ДеревоСтарМнЧ = Ветка.ДанныеМногострочныхЧастей["П00106М3"];
			
			ДеревоНовМнЧ = Новый ДеревоЗначений;
			ДеревоНовМнЧ.Колонки.Добавить("Данные");
			ДеревоНовМнЧ.Колонки.Добавить("ДанныеМногострочныхЧастей");
			
			Для каждого СтрокаСтарМнЧ Из ДеревоСтарМнЧ.Строки Цикл
				СтрокаНовМнЧ = ДеревоНовМнЧ.Строки.Добавить();
				СтрокаНовМнЧ.Данные = ОбщегоНазначения.СкопироватьРекурсивно(СтрокаСтарМнЧ.Данные);
				СтрокаНовМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			КонецЦикла;
			
			ПодчВетка614.ДанныеМногострочныхЧастей.Вставить("П00106М3", ДеревоНовМнЧ);
			Ветка.ДанныеМногострочныхЧастей.Удалить("П00106М3");
			
		КонецЦикла;
		
		ДанныеМногоуровневыхРазделов.Вставить("Приложение6", ДеревоРаздела);
		СписокСохранения.Вставить("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСобытийВТабличномДокументе

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	Если СтрЧислоВхождений(Область.Имя, "ДобавитьСтроку") = 1 И Область.Текст <> "" Тогда
		ДобавитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтроку") = 1 И Область.Текст <> "" Тогда
		УдалитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 И Область.Текст <> "" Тогда
		ДобавитьСтраницу("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 И Область.Текст <> "" Тогда
		УдалитьСтраницу("");
	ИначеЕсли Область.Имя = "СобратьДанные" Тогда
		СобратьДанные();
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьКлиент.ВыбраннаяОбластьРегламентированногоОтчетаНеВерна(
		ЭтотОбъект, Область, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "НалоговыйОрган" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбработкаВыбораИФНС();
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00023М100005")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00025М100005")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00101М100007")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00102М308007")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00102М409007") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокГодов = Новый СписокЗначений;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПервоеЧисло", Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
		СтруктураПараметров.Вставить("ПоследнееЧисло", 1900);
		СтруктураПараметров.Вставить("ТипСтрока", Истина);
		
		СписокГодов.ЗагрузитьЗначения(МассивЧиселЗаданныйИнтервалом(СтруктураПараметров));
		
		СписокГодов.Вставить(0, "", "Пустое значение");
		
		Оп = Новый ОписаниеОповещения("ВыбратьЧислоИзСпискаЗавершение", ЭтотОбъект, Область);
		
		Элементы.ТабличныйДокумент.Доступность = Ложь;
		
		ПоказатьВыборИзСписка(Оп, СписокГодов, Элементы.ТабличныйДокумент.ТекущаяОбласть,
		СписокГодов.НайтиПоЗначению(СокрЛП(Область.Значение)));
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00023М100004")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00025М100004")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00101М100006")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00102М308006")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00102М409006") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		СписокМесяцев = Новый СписокЗначений;
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("ПервоеЧисло", 1);
		СтруктураПараметров.Вставить("ПоследнееЧисло", 12);
		СтруктураПараметров.Вставить("ДлинаСЛидирующимиНулями", 2);
		
		СписокМесяцев.ЗагрузитьЗначения(МассивЧиселЗаданныйИнтервалом(СтруктураПараметров));
		
		Для каждого Эл Из СписокМесяцев Цикл
			Если Эл.Значение = "01" Тогда
				Эл.Представление = НСтр("ru = '01 - январь';
										|en = '01 - январь'");
			ИначеЕсли Эл.Значение = "02" Тогда
				Эл.Представление = НСтр("ru = '02 - февраль';
										|en = '02 - февраль'");
			ИначеЕсли Эл.Значение = "03" Тогда
				Эл.Представление = НСтр("ru = '03 - март';
										|en = '03 - март'");
			ИначеЕсли Эл.Значение = "04" Тогда
				Эл.Представление = НСтр("ru = '04 - апрель';
										|en = '04 - апрель'");
			ИначеЕсли Эл.Значение = "05" Тогда
				Эл.Представление = НСтр("ru = '05 - май';
										|en = '05 - май'");
			ИначеЕсли Эл.Значение = "06" Тогда
				Эл.Представление = НСтр("ru = '06 - июнь';
										|en = '06 - июнь'");
			ИначеЕсли Эл.Значение = "07" Тогда
				Эл.Представление = НСтр("ru = '07 - июль';
										|en = '07 - июль'");
			ИначеЕсли Эл.Значение = "08" Тогда
				Эл.Представление = НСтр("ru = '08 - август';
										|en = '08 - август'");
			ИначеЕсли Эл.Значение = "09" Тогда
				Эл.Представление = НСтр("ru = '09 - сентябрь';
										|en = '09 - сентябрь'");
			ИначеЕсли Эл.Значение = "10" Тогда
				Эл.Представление = НСтр("ru = '10 - октябрь';
										|en = '10 - октябрь'");
			ИначеЕсли Эл.Значение = "11" Тогда
				Эл.Представление = НСтр("ru = '11 - ноябрь';
										|en = '11 - ноябрь'");
			ИначеЕсли Эл.Значение = "12" Тогда
				Эл.Представление = НСтр("ru = '12 - декабрь';
										|en = '12 - декабрь'");
			КонецЕсли;
		КонецЦикла;
		
		СписокМесяцев.Вставить(0, "", "Пустое значение");
		
		Оп = Новый ОписаниеОповещения("ВыбратьЧислоИзСпискаЗавершение", ЭтотОбъект, Область);
		
		Элементы.ТабличныйДокумент.Доступность = Ложь;
		
		ПоказатьВыборИзСписка(Оп, СписокМесяцев, Элементы.ТабличныйДокумент.ТекущаяОбласть,
		СписокМесяцев.НайтиПоЗначению(СокрЛП(Область.Значение)));
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П001060013503") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ДопПараметры = Новый Структура;
		ДопПараметры.Вставить("ОтображатьВыборГода", Истина);
		ДопПараметры.Вставить("ОтображатьМесяцы", Истина);
		
		ПараметрыВыбора = Новый Структура;
		ПараметрыВыбора.Вставить("ДополнительныеПараметры", ДопПараметры);
		
		МесяцИГод_Дата = СтроковыеФункцииКлиентСервер.СтрокаВДату("01." + СокрЛП(Область.Значение));
		Если ЗначениеЗаполнено(МесяцИГод_Дата) Тогда
			ПараметрыВыбора.Вставить("НачалоПериода", МесяцИГод_Дата);
			ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(МесяцИГод_Дата));
		Иначе
			ПараметрыВыбора.Вставить("НачалоПериода", НачалоМесяца(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
			ПараметрыВыбора.Вставить("КонецПериода",  КонецМесяца(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
		КонецЕсли;
		
		Оп = Новый ОписаниеОповещения("ВыбратьМесяцИГодЗавершение", ЭтотОбъект, Область);
		
		ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ВыборОтчетногоПериода",
		ПараметрыВыбора, ЭтотОбъект, , , , Оп, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		
	Иначе
		
		ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтотОбъект, Область.Имя);
		Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
			КодПоказателя = ПараметрВводаПоля.Показатель;
			КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
			ВвестиПоказатель(Элемент, Область, КодПоказателя, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ТЗВыбора, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	ИмяПоказателя = Область.Имя;
	ЗначПоказателя = Область.Значение;
	
	Если ИмяПоказателя = "ДатаПодписи" Тогда
		ДатаПодписи = Область.Значение;
		ЗаполнитьСведенияОбОрганизацииНаСервере(Истина);
		Модифицированность = Истина;
	ИначеЕсли ИмяПоказателя = "НомерКорректировки" Тогда
		ОписаниеТипа = Новый ОписаниеТипов("Число");
		НомерКорректировки = ОписаниеТипа.ПривестиЗначение(Область.Значение);
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Область.Значение = Строка(НомерКорректировки);
		СформироватьЗаголовокОтчета();
		Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000010001003" Тогда
		
		ОКТМО = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаОКТМО = СтрДлина(ОКТМО);
		Если ДлинаОКТМО = 11 ИЛИ ДлинаОКТМО = 8 ИЛИ ДлинаОКТМО = 0 Тогда
			Область.Значение = ОКТМО;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Код по ОКТМО должен состоять из 8 или 11 цифр. Значение очищено';
				|en = 'Код по ОКТМО должен состоять из 8 или 11 цифр. Значение очищено'"));
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяПоказателя, "П00001М102000") ИЛИ ИмяПоказателя = "П000020002003" Тогда
		
		КБК = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКБК = СтрДлина(КБК);
		Если ДлинаКБК = 20 ИЛИ ДлинаКБК = 0 Тогда
			Область.Значение = КБК;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Код бюджетной классификации должен состоять из 20 цифр. Значение очищено';
				|en = 'Код бюджетной классификации должен состоять из 20 цифр. Значение очищено'"));
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(ИмяПоказателя, "П00101М100003") И ЗначПоказателя > 100 Тогда
		
		Область.Значение = 0;
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Содержание спирта не должно превышать 100 процентов. Значение очищено';
			|en = 'Содержание спирта не должно превышать 100 процентов. Значение очищено'"));
		
	КонецЕсли;
	
	ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтотОбъект, ИмяПоказателя);
	
	Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
		
		КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
		ЭлТЗВыбора = ТЗВыбора.НайтиСтроки(Новый Структура("Код", ЗначПоказателя));
		
	КонецЕсли;
	
	ИмяОбласти = Область.Имя;
	Если ИмяРаздела <> "Титульный" Тогда
		ПозицияПодстроки = СтрНайти(ИмяОбласти, "_");
		Если ПозицияПодстроки > 0 Тогда
			ИмяОбласти = Лев(ИмяОбласти, ПозицияПодстроки - 1);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВводаПоля = СвойстваПоказателей.НайтиСтроки(Новый Структура("Показатель", ИмяОбласти));
	Если ПараметрыВводаПоля.Количество() > 0 Тогда
		ПараметрВводаПоля = ПараметрыВводаПоля[0];
		Если СтрДлина(СокрЛП(ЗначПоказателя)) <> 0 И ПараметрВводаПоля.Длина <> 0
			И СтрДлина(СокрЛП(ЗначПоказателя)) <> ПараметрВводаПоля.Длина Тогда
			Область.Очистить();
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru='Длина значения показателя должна быть равна "
				+ ПараметрВводаПоля.Длина + ". Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Если ИмяРаздела = "Титульный" Тогда
		ЗаполнитьПериодОтчета(ЭтотОбъект);
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ИмяРаздела);
	
	Если СтруктураЗависимыхЯчеекДляАвторасчета.Свойство(ИмяРаздела) Тогда
		РасчетНаКлиенте(ИмяРаздела, Область.Имя);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизации(Элемент)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Ложь;
	Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Ложь;
	
	ИмяГруппы = МногострочнаяЧастьТекущейОбласти(ЭтотОбъект, Элемент.ТекущаяОбласть.Имя);
	
	Если ЗначениеЗаполнено(ИмяГруппы) Тогда
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Истина;
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"][0];
		ИсхКолСтрок = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИсхКолСтрок"];
		Координаты = СтрокаСКоординатамиПоказателя(Элемент.ТекущаяОбласть.Имя);
		
		ТестИмя = ИмяПервойГрафы + Координаты + СтрокаСИндексомПоказателя(ИсхКолСтрок + 1);
		Если СтрЧислоВхождений(Элемент.ТекущаяОбласть.Имя, "ДобавитьСтроку") = 0
			И ТабличныйДокумент.Области.Найти(ТестИмя) <> Неопределено Тогда
			Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Заголовок
		= ДопТекст.ЗаголовокКонтекстногоМенюДобавитьСтроку;
		Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Заголовок
		= ДопТекст.ЗаголовокКонтекстногоМенюУдалитьСтроку;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНС()
	
	КодИМНС = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП     = СокрЛП(ТабличныйДокумент.Области.КПП.Значение); 
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить(Новый Структура("КодНО, КПП", КодИМНС, КПП));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыФормы.Вставить("ЗначенияДляОтбора", ЗначенияДляОтбора);
	
	ФормаВыбораНалоговогоОргана = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
	"ФормаВыбораНалоговогоОргана", ПараметрыФормы, ЭтотОбъект);
	
	Если ФормаВыбораНалоговогоОргана.ТаблицаНО.Количество() <> 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораИФНСЗавершение", ЭтотОбъект);
		ФормаВыбораНалоговогоОргана.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораНалоговогоОргана.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораНалоговогоОргана.Открыть();
	ИначеЕсли НЕ ЗначениеЗаполнено(КодИМНС) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Код налогового органа необходимо задать в справочнике ""Организации""';
			|en = 'Код налогового органа необходимо задать в справочнике ""Организации""'"));
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе""';
			|en = 'Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе""'"));
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНСЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ВыбранныйКодНО = РезультатВыбора.КодНО;
		ДлинаКодаНО = СтрДлина(ВыбранныйКодНО);
		
		Для Инд = ДлинаКодаНО + 1 По 4 Цикл
			ВыбранныйКодНО = "0" + ВыбранныйКодНО;
		КонецЦикла;
		
		ТабличныйДокумент.Области["НалоговыйОрган"].Значение = ВыбранныйКодНО;
		ТабличныйДокумент.Области["КПП"].Значение = РезультатВыбора.КПП;
		
		ЗаполнитьСведенияОПодписантах();
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьМесяцИГодЗавершение(РезультатВыбора, ДополнительныйПараметр) Экспорт
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	МесяцИГод = Формат(РезультатВыбора.КонецПериода, "ДФ=""ММ.гггг""");
	
	Если МесяцИГод <> ДополнительныйПараметр.Значение Тогда
		ДополнительныйПараметр.Значение = МесяцИГод;
	Иначе
		ДополнительныйПараметр.Значение = "";
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыбратьЧислоИзСпискаЗавершение(ВыбЭлемент, ДополнительныйПараметр) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		Если ВыбЭлемент.Значение <> ДополнительныйПараметр.Значение Тогда
			ДополнительныйПараметр.Значение = ВыбЭлемент.Значение;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ТабличныйДокумент.Доступность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция МассивЧиселЗаданныйИнтервалом(СтруктураПараметров)
	
	МассивЧисел = Новый Массив;
	
	Если ТипЗнч(СтруктураПараметров) = Тип("Структура") Тогда
		
		ПервоеЧисло    = Неопределено;
		ПоследнееЧисло = Неопределено;
		
		Если СтруктураПараметров.Свойство("ПервоеЧисло", ПервоеЧисло)
			И СтруктураПараметров.Свойство("ПоследнееЧисло", ПоследнееЧисло) Тогда
			
			Если ПервоеЧисло <= ПоследнееЧисло Тогда
				ПоУбыванию = Ложь;
			Иначе
				ПоУбыванию = Истина;
				ПромежуточноеЗначение = ПервоеЧисло;
				ПервоеЧисло = ПоследнееЧисло;
				ПоследнееЧисло = ПромежуточноеЗначение;
			КонецЕсли;
			
			ТипСтрока = Ложь;
			СтруктураПараметров.Свойство("ТипСтрока", ТипСтрока);
			ТипСтрока = ТипСтрока = Истина;
			
			ДлинаСЛидирующимиНулями = Неопределено;
			СтруктураПараметров.Свойство("ДлинаСЛидирующимиНулями", ДлинаСЛидирующимиНулями);
			Если ТипЗнч(ДлинаСЛидирующимиНулями) <> Тип("Число")
				ИЛИ ДлинаСЛидирующимиНулями = 0 Тогда
				ДлинаСЛидирующимиНулями = Неопределено;
			КонецЕсли;
			
			Для ТекущееЧисло = ПервоеЧисло По ПоследнееЧисло Цикл
				
				Если ДлинаСЛидирующимиНулями <> Неопределено Тогда
					СтрокаФормата = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						"ЧЦ=%1;ЧГ=;ЧВН=", ДлинаСЛидирующимиНулями);
					ТекущееЗначение = Формат(ТекущееЧисло, СтрокаФормата);
				ИначеЕсли ТипСтрока Тогда
					ТекущееЗначение = Формат(ТекущееЧисло, "ЧГ=");
				Иначе
					ТекущееЗначение = ТекущееЧисло;
				КонецЕсли;
				
				Если ПоУбыванию Тогда
					МассивЧисел.Вставить(0, ТекущееЗначение);
				Иначе
					МассивЧисел.Добавить(ТекущееЗначение);
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивЧисел;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция МногострочнаяЧастьТекущейОбласти(Форма, Знач ИмяОбласти)
	
	Если НЕ ЗначениеЗаполнено(ИмяОбласти) Тогда
		Возврат Неопределено;
	Иначе
		НомПозПодчеркивания = Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1;
		Если НЕ (СтрДлина(ИмяОбласти) > НомПозПодчеркивания
			И Сред(ИмяОбласти, НомПозПодчеркивания, 1) = "_") Тогда
			Возврат Неопределено;
		КонецЕсли;
	КонецЕсли;
	
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтрокуЗначок", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "УдалитьСтроку", "");
	
	ИмяГруппы = Лев(ИмяОбласти, Форма.СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	Для каждого ЭлемСтруктуры Из Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей Цикл
		Если ЭлемСтруктуры.Ключ = ИмяГруппы Тогда
			Возврат ИмяГруппы;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции

&НаКлиенте
Функция ДополнительныйТекстПриДобавленииУдаленииСтрок(Знач ИмяГруппы)
	
	Если НЕ ЗначениеЗаполнено(ИмяГруппы) Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Подстрока = "строку";
	ТекстВопроса = НСтр("ru = 'Удалить выбранную строку?';
						|en = 'Удалить выбранную строку?'");
	
	ДопТекст = Новый Структура;
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюДобавитьСтроку", "Добавить " + Подстрока);
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюУдалитьСтроку", "Удалить " + Подстрока);
	ДопТекст.Вставить("ТекстВопросаПередУдалениемСтроки", ТекстВопроса);
	
	Возврат ДопТекст;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОбластей(Форма, ИмяРаздела)
	
	Перем Индекс, ИндексСтр, ИндексПодч, ИндексПодчСтр;
	
	ТДО = Форма.ТабличныйДокумент.Области;
	
	АвтоРасчПоказатели = Новый Массив;
	
	Если ИмяРаздела = "Титульный" Тогда
		
		ОблНаимОрг       = ТДО.НаимОрг;
		ОблКодФормыРеорг = ТДО.КодФормыРеорганизации;
		ОблКодИННРеорг   = ТДО.ИННРеорганизованнойОрганизации;
		ОблКодКППРеорг   = ТДО.КППРеорганизованнойОрганизации;
		
		ЗначПоМесту = СокрЛП(ТДО.ПоМесту.Значение);
		
		Если НЕ Форма.СтруктураРеквизитовФормы.ИП Тогда
			
			РазрешитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			
			ЗначКодФормыРеорг = СокрЛП(ОблКодФормыРеорг.Значение);
			
			Если ЗначениеЗаполнено(ЗначКодФормыРеорг)
				И ЗначКодФормыРеорг <> "0" Тогда
				
				Если ЗначПоМесту = "215" ИЛИ ЗначПоМесту = "216" Тогда
					РазрешитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				Иначе
					ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
					ТДО.НаимОрг.Значение = Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				КонецЕсли;
				
				РазрешитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				РазрешитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			Иначе
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				ТДО.НаимОрг.Значение = Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			КонецЕсли;
			
		Иначе
			
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
			
		КонецЕсли;
		
		ТДО["СекцияПояснение"].Видимость = ТДО["НомерКорректировки"].Значение > 0;
		
	ИначеЕсли ИмяРаздела = "Раздел2"
		ИЛИ ИмяРаздела = "Приложение1"
		ИЛИ ИмяРаздела = "Приложение2"
		ИЛИ ИмяРаздела = "Приложение5"
		ИЛИ ИмяРаздела = "Приложение612_613"
		ИЛИ ИмяРаздела = "Приложение614" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			АвтоРасчПоказатели.Добавить(Пок.Ключ);
		КонецЦикла;
		
		Если ИмяРаздела = "Раздел2" Тогда
			КодВидаПТ = СокрЛП(ТДО["П000020001003"].Значение);
			Если КодВидаПТ <> "298" Тогда
				// Ручное редактирование графы 2 подраздела 2.1.
				Инд = АвтоРасчПоказатели.Найти("П00021М100002");
				Если Инд <> Неопределено Тогда
					АвтоРасчПоказатели.Удалить(Инд);
				КонецЕсли;
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти("П00021М100002_" + ИндексСтр);
				Пока Обл <> Неопределено Цикл
					РазрешитьВводДанныхВОбласть(Форма, Обл);
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00021М100002_" + ИндексСтр);
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
		ОблСтр020 = ТДО.Найти("П00003М102003_" + ИндексСтр);
		
		Пока ОблСтр020 <> Неопределено Цикл
			
			РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(ИндексПодч, ИндексПодчСтр);
			ОблСтр050 = ТДО.Найти("П00003М205003_" + ИндексСтр + "_" + ИндексПодчСтр);
			
			Пока ОблСтр050 <> Неопределено Цикл
				
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					АвтоРасчПоказатели.Добавить(Пок.Ключ + "_" + ИндексСтр + "_" + ИндексПодчСтр);
				КонецЦикла;
				
				РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(ИндексПодч, ИндексПодчСтр);
				ОблСтр050 = ТДО.Найти("П00003М205003_" + ИндексСтр + "_" + ИндексПодчСтр);
				
			КонецЦикла;
			
			РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
			ОблСтр020 = ТДО.Найти("П00003М102003_" + ИндексСтр);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Для каждого ИмяПок Из АвтоРасчПоказатели Цикл
		Если ИмяРаздела <> "Раздел3" // особая обработка в разделе 3
			И СтрДлина(ИмяПок) = Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы И Сред(ИмяПок, 7, 1) = "М" Тогда
			РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
			Обл = ТДО.Найти(ИмяПок + "_" + ИндексСтр);
			Пока Обл <> Неопределено Цикл
				Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
					Обл.Защита = Ложь;
					Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_0"];
				Иначе
					Обл.Защита = Истина;
					Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"];
				КонецЕсли;
				РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти(ИмяПок + "_" + ИндексСтр);
			КонецЦикла;
		Иначе
			Обл = Форма.ТабличныйДокумент.Область(ИмяПок);
			Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
				Обл.Защита = Ложь;
				Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_0"];
			Иначе
				Обл.Защита = Истина;
				Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"];
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапретитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть, ОчищатьЗначение = Истина)
	
	ЦветНедоступнойОбласти = Форма.мСтруктураЦветовРаскраски["_5"];
	
	ОбрабатываемаяОбласть.Защита   = Истина;
	ОбрабатываемаяОбласть.ЦветФона = ЦветНедоступнойОбласти;
	
	Если ОчищатьЗначение Тогда
		ОбрабатываемаяОбласть.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РазрешитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть)
	
	ЦветОбластиРучногоВвода = Форма.мСтруктураЦветовРаскраски["_0"];
	
	ОбрабатываемаяОбласть.Защита   = Ложь;
	ОбрабатываемаяОбласть.ЦветФона = ЦветОбластиРучногоВвода;
	
КонецПроцедуры

#КонецОбласти

#Область ПомещениеДанныхИзТабличногоДокументаВМестаХранения

&НаСервере
Процедура СохранитьДанныеРаздела(НаимРаздела, ВеткаРаздела = Неопределено)
	
	// Многоуровневые разделы.
	Если мСтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		Если ВеткаРаздела = Неопределено Тогда
			
			СтруктураРаздела = мСтруктураМногоуровневыхРазделов[НаимРаздела];
			
			ИмяГлРаздела = Неопределено;
			СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
			ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, НаимРаздела, ИмяГлРаздела);
			
			ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
			
			ТекВетка = ДеревоДанныхРаздела;
			
			Для каждого НомерСтроки Из СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела Цикл
				ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
			КонецЦикла;
			
		Иначе
			
			ТекВетка = ВеткаРаздела;
			
		КонецЕсли;
		
		ДанныеТаблДокумента = ДанныеТабличногоДокумента(НаимРаздела);
		
		ТекВетка.Данные = ДанныеТаблДокумента.Данные;
		ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
		
		СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела,
			ПоместитьВоВременноеХранилище(ДеревоДанныхРаздела, УникальныйИдентификатор));
		
		ДеревоДанныхРаздела = Неопределено;
		
	// Обычные разделы.
	Иначе
		
		ЭтотОбъект["СтруктураДанных" + НаимРаздела] = ДанныеТабличногоДокумента(НаимРаздела);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ДанныеТабличногоДокумента(НаимРаздела)
	
	ДанныеТаблДокумента = Новый Структура;
	
	// Многоуровневые разделы.
	//
	Если мСтруктураМногоуровневыхРазделов.Свойство(НаимРаздела) Тогда
		
		СтруктураРаздела = мСтруктураМногоуровневыхРазделов[НаимРаздела];
		
		ИменаГруппМнЧ = Неопределено;
		СтруктураРаздела.Свойство("ИменаГруппМнЧ", ИменаГруппМнЧ);
		РазделСодержитМнЧ = (ИменаГруппМнЧ <> Неопределено);
		
		СтруктураДанных = Новый Структура();
		Для Каждого ТекущаяОбласть Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(ТекущаяОбласть), "Рисунок") = 0
				И ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекущаяОбласть.СодержитЗначение = Истина Тогда
				Если РазделСодержитМнЧ Тогда
					Если МногострочнаяЧастьТекущейОбласти(ЭтотОбъект, ТекущаяОбласть.Имя) = Неопределено Тогда
						СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
					КонецЕсли;
				Иначе
					СтруктураДанных.Вставить(ТекущаяОбласть.Имя, ТекущаяОбласть.Значение);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		ДанныеТаблДокумента.Вставить("Данные", СтруктураДанных);
		
		СтруктураДанныхМногострочныхЧастей = Новый Структура;
		Если РазделСодержитМнЧ Тогда
			Для каждого ИмяГруппыМнЧ Из СтруктураРаздела["ИменаГруппМнЧ"] Цикл
				ЭлемСтруктуры = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
				Если ЭлемСтруктуры["УровеньПодчинения"] = 0 Тогда
					ДеревоДанных = Новый ДеревоЗначений;
					ДеревоДанных.Колонки.Добавить("Данные");
					ДеревоДанных.Колонки.Добавить("ДанныеМногострочныхЧастей");
					СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяГруппыМнЧ, ДеревоДанных);
					СтруктураДанныхМногострочныхЧастей.Вставить(ИмяГруппыМнЧ, ДеревоДанных);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		ДанныеТаблДокумента.Вставить("ДанныеМногострочныхЧастей", СтруктураДанныхМногострочныхЧастей);
		
	// Обычные разделы.
	//
	Иначе
		
		Для Инд = 0 По ТабличныйДокумент.Области.Количество() - 1 Цикл
			
			ТекОбласть = ТабличныйДокумент.Области[Инд];
			
			Если СтрЧислоВхождений(Тип(ТекОбласть), "Рисунок") = 0
				И ТекОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ТекОбласть.СодержитЗначение = Истина Тогда
				
				ДанныеТаблДокумента.Вставить(ТекОбласть.Имя, ТекОбласть.Значение);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ДанныеТаблДокумента;
	
КонецФункции

&НаСервере
Процедура СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(ИмяГруппы, ДеревоДанных, Координаты = "")
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат;
	КонецЕсли;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + Координаты
		+ СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		НовВетка = ДеревоДанных.Строки.Добавить();
		
		// Заполнение данными из текущей строки многострочной части.
		Данные = Новый Структура;
		Инд = СтрокаСИндексомПоказателя(Инд_Число);
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			Обл = ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты + Инд);
			Если Обл <> Неопределено Тогда
				Данные.Вставить(ИмяГрафы, Обл.Значение);
			КонецЕсли;
		КонецЦикла;
		НовВетка.Данные = Данные;
		
		// Заполнение данными из строк многострочных частей, подчиненных текущей строке многострочной части.
		ДанныеМногострочныхЧастей = Новый Структура;
		ИменаПодчГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчГрупп Цикл
			ДеревоПодчСтрок = Новый ДеревоЗначений;
			ДеревоПодчСтрок.Колонки.Добавить("Данные");
			ДеревоПодчСтрок.Колонки.Добавить("ДанныеМногострочныхЧастей");
			ПодчКоординаты = Координаты + Инд;
			СформироватьДеревоМногострочнойЧастиПоДаннымТабличногоДокумента(
				ИмяПодчГруппы, ДеревоПодчСтрок, ПодчКоординаты);
			ДанныеМногострочныхЧастей.Вставить(ИмяПодчГруппы, ДеревоПодчСтрок);
		КонецЦикла;
		НовВетка.ДанныеМногострочныхЧастей = ДанныеМногострочныхЧастей;
		
		Инд_Число = Инд_Число + 1;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПомещениеДанныхИзМестХраненияВТабличныйДокумент

&НаСервере
Процедура ВывестиДанныеВТабличныйДокументНаСервере(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела);
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяТекРаздела;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Отчеты[
		ИмяОтчета(ИмяФормы)].ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела));
	
	// Многоуровневые разделы.
	//
	Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяТекРаздела) Тогда
		
		СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяТекРаздела];
		
		ИмяГлРаздела = Неопределено;
		СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
		ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, ИмяТекРаздела, ИмяГлРаздела);
		
		ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		ТекВетка = ДеревоДанныхРаздела;
		
		Для каждого НомерСтроки Из НовыеНомераСтрокМногоуровнегоРаздела Цикл
			ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
		КонецЦикла;
		
		// Вывод немногострочных данных.
		Для Каждого ЭлСтруктуры Из ТекВетка.Данные Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
		// Добавление в многострочную часть необходимого количества
		// дополнительных строк, вывод многострочных данных.
		ВывестиМногострочныеДанныеВТабличныйДокумент(ТекВетка);
		
		ДеревоДанныхРаздела = Неопределено;
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = НовыеНомераСтрокМногоуровнегоРаздела;
		
	// Обычные разделы.
	//
	Иначе
		
		Для Каждого ЭлСтруктуры Из ЭтотОбъект["СтруктураДанных" + ИмяТекРаздела] Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьФорматВыводаНаСервере(ИмяТекРаздела);
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ИмяТекРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМногострочныеДанныеВТабличныйДокумент(Ветка, Координаты = "")
	
	ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей;
	
	Для каждого ЭлемСтруктуры Из ДанныеМнЧ Цикл
		
		ДеревоМнЧ = ЭлемСтруктуры.Значение;
		
		Для Инд_Число = 0 По ДеревоМнЧ.Строки.Количество() - 1 Цикл
			
			// Добавление необходимого количества доп. строк.
			Если Инд_Число > 0 Тогда
				Инд = СтрокаСИндексомПоказателя(Инд_Число);
				ИмяОбластиПреемника = "ДобавлениеСтроки" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				ВставитьДопСтроку(ЭлемСтруктуры.Ключ, ИмяОбластиПреемника);
			КонецЕсли;
			
			// Обработка гиперссылок удаления строки, если эта строка единственная.
			Если ДеревоМнЧ.Строки.Количество() = 1 Тогда
				Инд = СтрокаСИндексомПоказателя(1);
				ИмяИскомойОбласти = "УдалитьСтроку" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Гиперссылка = Ложь;
					Обл.Текст = "";
				КонецЕсли;
			КонецЕсли;
			
			// Вывод многострочных данных.
			Данные = ДеревоМнЧ.Строки[Инд_Число].Данные;
			Инд = СтрокаСИндексомПоказателя(Инд_Число + 1);
			Для Каждого ЭлСтруктуры Из Данные Цикл
				ИмяИскомойОбласти = ЭлСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Значение = ЭлСтруктуры.Значение;
				КонецЕсли;
			КонецЦикла;
			
			// Добавление необходимого количества подчиненных доп. строк.
			ПодчВетка = ДеревоМнЧ.Строки[Инд_Число];
			ПодчКоординаты = Координаты + Инд;
			ВывестиМногострочныеДанныеВТабличныйДокумент(ПодчВетка, ПодчКоординаты);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеСтраницМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел2"
		ИЛИ ИмяРаздела = "Приложение1"
		ИЛИ ИмяРаздела = "Приложение2"
		ИЛИ ИмяРаздела = "Приложение3"
		ИЛИ ИмяРаздела = "Приложение4"
		ИЛИ ИмяРаздела = "Приложение5"
		ИЛИ ИмяРаздела = "Приложение6" Тогда
		ДобавитьСтраницуУровня0(ИмяРаздела);
	Иначе
		Возврат;
	КонецЕсли;
	
	Обл = ТабличныйДокумент.Области["УдалитьСтраницуЗначок"];
	Обл.Гиперссылка = Истина;
	Обл.Текст = "х";
	Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
	Обл.Гиперссылка = Истина;
	Обл.Текст = "Удалить страницу";
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуУровня0(ИмяРаздела)
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	// Нахождение строки в дереве значений, соответствующей текущей странице.
	ТекВетка = ДеревоРаздела.Строки[СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
	// Помещение данных текущей страницы в структуры найденной строки.
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Добавление новой страницы.
	// (Добавляется строка в конец коллекции строк дерева значений.)
	НовВетка = ДеревоРаздела.Строки.Добавить();
	// Добавление разделов, подчиненных новой странице.
	ИнициализироватьПодчиненныеРазделы(ИмяРаздела, НовВетка);
	
	НомерНовВетки = ДеревоРаздела.Строки.Количество();
	
	// Вывод и помещение начальных данных новой страницы
	// в структуры вновь добавленной строки дерева значений.
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(Отчеты[Сред(
	Лев(ИмяФормы, СтрНайти(ИмяФормы, ".Форма.") - 1), 7)].ПолучитьМакет(Сред(
	ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	
	ДанныеТаблДокумента = ДанныеТабличногоДокумента(ИмяРаздела);
	НовВетка.Данные = ДанныеТаблДокумента.Данные;
	НовВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Сохранение изменений в дереве значений.
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]
	= ПоместитьВоВременноеХранилище(ДеревоРаздела, УникальныйИдентификатор);
	
	ДеревоРаздела = Неопределено;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомерНовВетки;
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета
					= СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект);
	ТекстВопроса = НСтр("ru = 'Удалить текущую страницу?';
						|en = 'Удалить текущую страницу?'");
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел2"
		ИЛИ ИмяРаздела = "Приложение1"
		ИЛИ ИмяРаздела = "Приложение2"
		ИЛИ ИмяРаздела = "Приложение3"
		ИЛИ ИмяРаздела = "Приложение4"
		ИЛИ ИмяРаздела = "Приложение5"
		ИЛИ ИмяРаздела = "Приложение6" Тогда
		УдалитьСтраницуУровня0(ИмяРаздела);
	Иначе
		Возврат;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуУровня0(ИмяРаздела)
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	НомПоследнейСтраницы = ДеревоДанных.Строки.Количество();
	
	// Номер строки дерева значений, соответствующий номеру удаляемой страницы.
	НомУдаляемойСтраницы = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0];
	
	// Номер строки дерева значений, соответствующий номеру выводимой после удаления страницы.
	НомСтраницыПослеУдаления = ?(НомУдаляемойСтраницы = НомПоследнейСтраницы,
	НомУдаляемойСтраницы - 1, НомУдаляемойСтраницы);
	
	// Удаление страницы.
	ДеревоДанных.Строки.Удалить(НомУдаляемойСтраницы - 1);
	
	// Сохранение изменений в дереве значений.
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]
	= ПоместитьВоВременноеХранилище(ДеревоДанных, УникальныйИдентификатор);
	
	ДеревоДанных = Неопределено;
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомСтраницыПослеУдаления;
	
	// Вывод данных строки дерева значений после удаления страницы.
	ВывестиДанныеВТабличныйДокумент(ИмяРаздела, СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = НомСтраницыПослеУдаления Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура СпрятатьСсылкуУдалитьСтраницу()
	
	Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
		ЭлементыРодителя = Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
		Если (ЭлементыРодителя.Количество() > 1)
			И (ЭлементыРодителя[0].КолонкаРазделыОтчетаСокрНаим = ЭлементыРодителя[1].КолонкаРазделыОтчетаСокрНаим) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницуЗначок");
	Если ОблУдалитьСтраницу <> Неопределено Тогда
		ОблУдалитьСтраницу.Текст = "";
		ОблУдалитьСтраницу.Гиперссылка = Ложь;
	КонецЕсли;
	ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницу");
	Если ОблУдалитьСтраницу <> Неопределено Тогда
		ОблУдалитьСтраницу.Текст = "";
		ОблУдалитьСтраницу.Гиперссылка = Ложь;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеДополнительныхСтрокМногострочныхЧастейМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	ТекстПредупреждения = "";
	
	ИмяОбласти = ТабличныйДокумент.ТекущаяОбласть.Имя;
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтрокуЗначок", "");
	ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел2" Тогда
		
		Если СтрНачинаетсяС(ИмяОбласти, СтруктураРеквизитовФормы.мИдГруппыР24М1) Тогда
			ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппыР24М1]["ИменаГраф"][0];
			Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
				ТекстПредупреждения = НСтр(
				"ru = 'Возможно не более двух строк в подразделе 2.4 раздела 2';
				|en = 'Возможно не более двух строк в подразделе 2.4 раздела 2'");
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ВставитьДополнительнуюСтроку();
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтроку()
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	Если СтрНайти(ИмяТекОбласти, "ДобавитьСтроку") Тогда
		ИмяОбластиПреемника = СтрЗаменить(ИмяТекОбласти, "ДобавитьСтроку", "");
		ИмяОбластиПреемника = СтрЗаменить(ИмяОбластиПреемника, "Значок", "");
		ИмяГруппы = Лев(ИмяОбластиПреемника, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяОбластиПреемника;
	Иначе
		ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяГрафы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГрафы);
		МаксИнд = ИндексПоказателя(ИмяТекОбласти);
		Координаты = СтрокаСКоординатамиПоказателя(ИмяТекОбласти);
		Пока ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты
			+ СтрокаСИндексомПоказателя(МаксИнд + 1)) <> Неопределено Цикл
			МаксИнд = МаксИнд + 1;
		КонецЦикла;
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппы + Координаты + СтрокаСИндексомПоказателя(МаксИнд);
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		ВставитьДопСтроку(ИмяГруппы, ИмяОбластиПреемника);
		СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДопСтроку(Знач ИмяГруппы, Знач ИмяОбластиПреемника, ЭтоАвтоВставкаПодчиненнойМнЧ = Ложь)
	
	НачИндекс = "_1";
	
	Если СтрНайти(ИмяОбластиПреемника, "ДобавлениеСтроки" + ИмяГруппы) > 0 Тогда
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти("МногострочнаяЧасть" + ИмяГруппы);
		
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТаблДок.Область(ИскомаяОбласть.Имя);
		ВставляемаяОбласть.Имя = "";
		
		НовКоординаты = СтрокаСКоординатамиПоказателя(ИмяОбластиПреемника);
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординаты, "_");
		НачКоординаты = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординаты = НачКоординаты + НачИндекс;
		КонецЦикла;
		
		ПреИндекс_Число = ИндексПоказателя(ИмяОбластиПреемника);
		НовИндекс_Число = ?(ЭтоАвтоВставкаПодчиненнойМнЧ, 1, ПреИндекс_Число + 1);
		
		ПреИндекс = СтрокаСИндексомПоказателя(ПреИндекс_Число);
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		НачПостфикс = ИмяГруппы + НачКоординаты + НачИндекс;
		ПреПостфикс = ИмяГруппы + НовКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + НовКоординаты + НовИндекс;
		
		МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			
			НачИмяОбл = ИмяГрафы + НачКоординаты + НачИндекс;
			НовИмяОбл = ИмяГрафы + НовКоординаты + НовИндекс;
			
			ОбластьЯчейки = ВремТаблДок.Области[НачИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
			
			Если ОбластьЯчейки.СодержитЗначение = Истина Тогда
				ОбластьЯчейки.Очистить();
			КонецЕсли;
			
		КонецЦикла;
		
		Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НачПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		КонецЕсли;
		
		Если ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Ложь;
				Обл.Текст = "";
			КонецЕсли;
		Иначе
			Обл = ВремТаблДок.Области.Найти("УдалитьСтроку" + НовПостфикс);
			Если Обл <> Неопределено Тогда
				Обл.Гиперссылка = Истина;
				Обл.Текст = "х";
				Если НовИндекс_Число = 2 Тогда
					Если Обл <> Неопределено Тогда
						Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
						Обл.Гиперссылка = Истина;
						Обл.Текст = "х";
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		КонецЕсли;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Если Обл <> Неопределено Тогда
			Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		КонецЕсли;
		
		ОблПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемника);
		ОблПреемник.Имя = "ДобавлениеСтроки" + НовПостфикс;
		
		// Изменения в оформлении ячеек: установка значения "НетЛинии"/"Сплошная" для
		// свойства "ГраницаСнизу" (в случае задания номеров специальных колонок):
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Удаление линии в определенных колонках последней (до добавления) строки.
				Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
					Обл = ТабличныйДокумент.Область(
						ОблПреемник.Верх - 1, НомКолонки, ОблПреемник.Верх - 1, НомКолонки);
					Если Обл <> Неопределено Тогда
						Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.НетЛинии);
					КонецЕсли;
				КонецЕсли;
				// Установка линии в определенных колонках добавляемой строки.
				Обл = ВремТаблДок.Область(
					ВставляемаяОбласть.Низ, НомКолонки, ВставляемаяОбласть.Низ, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		ОблПреемник_ = ТабличныйДокумент.Область(
			ОблПреемник.Верх, , ОблПреемник.Верх + ИскомаяОбласть.Низ - ИскомаяОбласть.Верх, );
		ТабличныйДокумент.ВставитьОбласть(
			ВставляемаяОбласть, ОблПреемник_, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Если НЕ ЭтоАвтоВставкаПодчиненнойМнЧ Тогда
			// Установка текущей области после добавления строки.
			НовИмяТекОбл = МассивИменГраф[0] + НовКоординаты + НовИндекс;
			НовТекОбл = ТабличныйДокумент.Области[НовИмяТекОбл];
			Элементы.ТабличныйДокумент.ТекущаяОбласть = НовТекОбл;
		КонецЕсли;
		
	КонецЕсли;
	
	ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		ИмяГруппы]["ИменаПодчиненныхГрупп"];
	Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
		НовКоординатыДляПодчОбласти = НовКоординаты + НовИндекс;
		
		КолУровнейПодчиненности = СтрЧислоВхождений(НовКоординатыДляПодчОбласти, "_");
		НачКоординатыДляПодчОбласти = "";
		Для НомУр = 1 По КолУровнейПодчиненности Цикл
			НачКоординатыДляПодчОбласти = НачКоординатыДляПодчОбласти + НачИндекс;
		КонецЦикла;
		
		НачИндВставляемойОбласти = НачИндекс;
		
		ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
			"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		
		Если ИскомаяОбласть = Неопределено Тогда
			НачИндВставляемойОбласти = 1;
			Пока ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ИмяПодчГруппы
				+ НачКоординатыДляПодчОбласти + "_" + Формат(НачИндВставляемойОбласти, "ЧГ=")) = Неопределено Цикл
				НачИндВставляемойОбласти = НачИндВставляемойОбласти + 1;
			КонецЦикла;
			НачИндВставляемойОбласти = "_" + Формат(НачИндВставляемойОбласти, "ЧГ=");
			ИскомаяОбласть = ТабличныйДокумент.Области.Найти(
				"ДобавлениеСтроки" + ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти);
		КонецЕсли;
		
		ВремТабличныйДокумент = ТабличныйДокумент.ПолучитьОбласть(ИскомаяОбласть.Имя);
		ВставляемаяОбласть = ВремТабличныйДокумент.Область(ИскомаяОбласть.Имя);
		Для каждого ОбластьЯчейки Из ВремТабличныйДокумент.Области Цикл
			ОбластьЯчейки.Имя = СтрЗаменить(ОбластьЯчейки.Имя,
				ИмяПодчГруппы + НачКоординатыДляПодчОбласти + НачИндВставляемойОбласти,
				ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс);
		КонецЦикла;
		ИмяОбластиПреемникаДляПодчОбласти = СтрЗаменить(ИмяОбластиПреемника, ПреПостфикс, НовПостфикс);
		ОбластьПреемник = ТабличныйДокумент.Области.Найти(ИмяОбластиПреемникаДляПодчОбласти);
		
		ТабличныйДокумент.ВставитьОбласть(ВставляемаяОбласть, ОбластьПреемник, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		ИмяОбластиПреемникаДляПодчОбласти = "ДобавлениеСтроки" + ИмяПодчГруппы + НовКоординатыДляПодчОбласти + НачИндекс;
		
		ВставитьДопСтроку(ИмяПодчГруппы, ИмяОбластиПреемникаДляПодчОбласти, Истина);
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	ИмяТекОбласти = СтрЗаменить(ИмяТекОбласти, "УдалитьСтроку", "");
	
	ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана удаляемая строка многострочного раздела.';
														|en = 'Не выбрана удаляемая строка многострочного раздела.'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуЗавершение", ЭтотОбъект);
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		ТекстВопроса = ДопТекст.ТекстВопросаПередУдалениемСтроки;
	Иначе
		ТекстВопроса = НСтр("ru = 'Удалить выбранную строку?';
							|en = 'Удалить выбранную строку?'");
	КонецЕсли;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьДопСтрокуНаСервере();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтрокуНаСервере()
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	УдалитьДопСтроку(ИмяТекОбласти);
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	Расчет(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтроку(ИмяОбласти)
	
	ИмяГруппы = СтрЗаменить(ИмяОбласти, "УдалитьСтроку", "");
	ИмяГруппы = Лев(ИмяГруппы, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	ТекКоординаты = СтрокаСКоординатамиПоказателя(ИмяОбласти);
	
	ТекИндекс_Число = ИндексПоказателя(ИмяОбласти);
	ТекИндекс = СтрокаСИндексомПоказателя(ТекИндекс_Число);
	ТекПостфикс = ИмяГруппы + ТекКоординаты + ТекИндекс;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	ОблПервУдаляемогоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + ТекИндекс);
	ОблУдалитьСтроку = ТабличныйДокумент.Область("УдалитьСтроку" + ИмяГруппы + ТекКоординаты + ТекИндекс);
	СмещениеОтВерхаМнЧ = ОблПервУдаляемогоПоказателя.Верх - ОблУдалитьСтроку.Верх;
	
	ОблДобавлениеСтроки = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
	
	// Удаляется последняя строка.
	//
	Если ОблДобавлениеСтроки <> Неопределено Тогда
		
		ПреИндекс_Число = ТекИндекс_Число - 1;
		ПреИндекс = СтрокаСИндексомПоказателя(ПреИндекс_Число);
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблДобавлениеСтроки.Верх - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтроку" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + ПреПостфикс;
		
		Если ПреИндекс_Число = 1 Тогда
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + ПреПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		// Изменения в оформлении ячеек в случае задания номеров специальных колонок.
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
			"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Установка линии в определенных колонках последней (после удаления) строки.
				Обл = ТабличныйДокумент.Область(
					ВерхУдОбласти - 1, НомКолонки, ВерхУдОбласти - 1, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ПреИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	// Удаляемая строка не последняя.
	//
	Иначе
		
		НовИндекс_Число = ТекИндекс_Число + 1;
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		ОблСледующегоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + НовИндекс);
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблСледующегоПоказателя.Верх - СмещениеОтВерхаМнЧ - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		
		// Сохранение свойств "эталонных" областей для последующего восстановления.
		СпОбластейДляВосстановленияПослеУдаления = Новый СписокЗначений;
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(УдаляемаяОбласть.Имя);
		Для каждого ЭлемСтруктуры Из СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей Цикл
			ИмяИскомойобласти = "МногострочнаяЧасть" + ЭлемСтруктуры.Ключ;
			Искомаяобласть = ВремТаблДок.Области.Найти(ИмяИскомойобласти);
			Если Искомаяобласть <> Неопределено Тогда
				ВысотаОбл = Искомаяобласть.Низ - Искомаяобласть.Верх + 1;
				СпОбластейДляВосстановленияПослеУдаления.Добавить(ВысотаОбл, ЭлемСтруктуры.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		НовИндекс_Число = ТекИндекс_Число;
		
		// Реиндексация имен областей текущей многострочной части после удаления строки.
		Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + ТекКоординаты
			+ СтрокаСИндексомПоказателя(НовИндекс_Число + 1)) <> Неопределено Цикл
			
			ПреИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число + 1);
			НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
			
			Для каждого ИмяГрафы Из МассивИменГраф Цикл
				ПреИмяОбл = ИмяГрафы + ТекКоординаты + ПреИндекс;
				НовИмяОбл = ИмяГрафы + ТекКоординаты + НовИндекс;
				
				ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
				ОбластьЯчейки.Имя = НовИмяОбл;
			КонецЦикла;
			
			ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
			НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
			
			Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
			
			// Обновление координат в именах областей подчиненных многострочных частей.
			ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ИмяГруппы]["ИменаПодчиненныхГрупп"];
			Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
				ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
					ИмяПодчГруппы, ТекКоординаты + ПреИндекс, ТекКоординаты + НовИндекс);
				РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
			КонецЦикла;
			
			НовИндекс_Число = НовИндекс_Число + 1;
			
		КонецЦикла;
		
		ПреИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число);
		НовИндекс = СтрокаСИндексомПоказателя(НовИндекс_Число - 1);
		
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		
		// Восстановление удаленных "эталонных" областей по предварительно сохраненным свойствам.
		НачИндекс = "_1";
		Для каждого ЭлемСписка Из СпОбластейДляВосстановленияПослеУдаления Цикл
			НачКоординаты = "";
			УровеньПодчиненияГруппы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ЭлемСписка.Представление]["УровеньПодчинения"];
			
			Для НомУр = 1 По УровеньПодчиненияГруппы Цикл
				НачКоординаты = НачКоординаты + НачИндекс;
			КонецЦикла;
			
			ИмяГрафыДляПозиционирования = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
				ЭлемСписка.Представление]["ИменаГраф"][0];
			
			ИмяОбластиДляПозиционирования = ИмяГрафыДляПозиционирования + НачКоординаты + НачИндекс;
			ОбластьДляПозиционирования = ТабличныйДокумент.Область(ИмяОбластиДляПозиционирования);
			
			Если ЭлемСписка.Представление = ИмяГруппы Тогда
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх - СмещениеОтВерхаМнЧ;
			Иначе
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх;
			КонецЕсли;
			ВосстОбластьНиз  = ВосстОбластьВерх + ЭлемСписка.Значение - 1;
			
			ВосстОбласть = ТабличныйДокумент.Область(ВосстОбластьВерх, , ВосстОбластьНиз, );
			ВосстОбласть.Имя = "МногострочнаяЧасть" + ЭлемСписка.Представление;
		КонецЦикла;
		
		Если НовИндекс = НачИндекс Тогда // после удаления осталась единственная строка
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + НовПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ТекИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура РеиндексироватьПодчиненныеДопСтроки(ПараметрыРеиндексации)
	
	ИмяГруппы = ПараметрыРеиндексации["ИмяГруппы"];
	ПреКоординаты = ПараметрыРеиндексации["ПреКоординаты"];
	НовКоординаты = ПараметрыРеиндексации["НовКоординаты"];
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы
		+ ПреКоординаты + СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		
		Инд = СтрокаСИндексомПоказателя(Инд_Число);
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			ПреИмяОбл = ИмяГрафы + ПреКоординаты + Инд;
			НовИмяОбл = ИмяГрафы + НовКоординаты + Инд;
			
			ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
		КонецЦикла;
		
		ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
		НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
		
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
		Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		
		ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
			ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
				ИмяПодчГруппы, ПреКоординаты + Инд, НовКоординаты + Инд);
			РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
		КонецЦикла;
		
		Инд_Число = Инд_Число + 1;
		
	КонецЦикла;
	
	Инд = СтрокаСИндексомПоказателя(Инд_Число - 1);
	
	ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
	НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
	
	Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
	Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ИндексПоказателя(Знач ИмяОбласти)
	
	МассивСтрок = СтрРазделить(ИмяОбласти, "_");
	
	КолСтрок = МассивСтрок.Количество();
	
	Если КолСтрок = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ИндексСтрока = МассивСтрок[КолСтрок - 1];
	Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(ИндексСтрока) Тогда
		Возврат Число(ИндексСтрока);
	КонецЕсли;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСИндексомПоказателя(Знач Индекс)
	
	Если ТипЗнч(Индекс) <> Тип("Число") Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат "_" + Формат(Индекс, "ЧГ=");
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСКоординатамиПоказателя(Знач Координаты)
	
	СтрокаСКоординатами = "";
	
	Если ТипЗнч(Координаты) = Тип("Массив") Тогда
		Для каждого КоординатаЧисло Из Координаты Цикл
			Если ТипЗнч(КоординатаЧисло) <> Тип("Число") Тогда
				Возврат Неопределено;
			КонецЕсли;
			СтрокаСКоординатами = СтрокаСКоординатами + "_" + Формат(КоординатаЧисло, "ЧГ=");
		КонецЦикла;
	ИначеЕсли ТипЗнч(Координаты) = Тип("Строка") Тогда
		МассивСтрок = СтрРазделить(Координаты, "_");
		КолСтрок = МассивСтрок.Количество();
		Если КолСтрок = 0 Тогда
			Возврат Неопределено;
		КонецЕсли;
		МассивСтрок.Удалить(КолСтрок - 1);
		МассивСтрок.Удалить(0);
		Для каждого КоординатаСтрока Из МассивСтрок Цикл
			Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КоординатаСтрока) Тогда
				СтрокаСКоординатами = СтрокаСКоординатами + "_" + Формат(КоординатаСтрока, "ЧГ=");
			Иначе
				Возврат Неопределено;
			КонецЕсли;
		КонецЦикла;
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат СтрокаСКоординатами;
	
КонецФункции

#КонецОбласти

#Область Авторасчет

&НаКлиенте
Процедура РасчетНаКлиенте(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтотОбъект, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтотОбъект, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Расчет(Форма, ИмяРаздела = "", ОбластьИмя = "") Экспорт
	
	Перем ТаблицаБлока, Индекс, ИндексСтр, ИндексПодч, ИндексПодчСтр, Индекс24, Индекс24Стр;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Возврат;
	КонецЕсли;
	
	ТДО = Форма.ТабличныйДокумент.Области;
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				КодВидаПТ = СокрЛП(ТДО["П000020001003"].Значение);
				Если КодВидаПТ = "298" Тогда
					РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00021М100002_" + ИндексСтр);
					Пока Обл <> Неопределено Цикл
						Если ЗначениеЗаполнено(ТДО["П00021М100001_" + ИндексСтр].Значение)
							ИЛИ ЗначениеЗаполнено(ТДО["П00021М100003_" + ИндексСтр].Значение)
							ИЛИ ЗначениеЗаполнено(ТДО["П00021М100004_" + ИндексСтр].Значение) Тогда
							Обл.Значение = "4";
						Иначе
							Обл.Значение = "";
						КонецЕсли;
						РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
						Обл = ТДО.Найти("П00021М100002_" + ИндексСтр);
					КонецЦикла;
				Иначе
					// Ручное редактирование графы 2 подраздела 2.1.
				КонецЕсли;
				
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс24, Индекс24Стр);
				Обл = ТДО.Найти("П00024М100001_" + Индекс24Стр);
				Пока Обл <> Неопределено Цикл
					
					КодР24 = СокрЛП(Обл.Значение);
					
					СуммаР24 = 0;
					
					Если КодР24 = "40001" ИЛИ КодР24 = "40002" Тогда
						
						КодыР22ДляСуммирования = Новый Массив;
						КодыР22ДляСуммирования.Добавить("20003");
						КодыР22ДляСуммирования.Добавить("20004");
						КодыР22ДляСуммирования.Добавить("20005");
						КодыР22ДляСуммирования.Добавить("20007");
						КодыР22ДляСуммирования.Добавить("20009");
						КодыР22ДляСуммирования.Добавить("20011");
						КодыР22ДляСуммирования.Добавить("20013");
						КодыР22ДляСуммирования.Добавить("20015");
						
						РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
						Обл = ТДО.Найти("П00021М100004_" + ИндексСтр);
						Пока Обл <> Неопределено Цикл
							СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Обл.Значение);
							РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
							Обл = ТДО.Найти("П00021М100004_" + ИндексСтр);
						КонецЦикла;
						
						РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
						Обл = ТДО.Найти("П00022М100004_" + ИндексСтр);
						Пока Обл <> Неопределено Цикл
							КодР22 = СокрЛП(ТДО.Найти("П00022М100001_" + ИндексСтр).Значение);
							Если КодыР22ДляСуммирования.Найти(КодР22) <> Неопределено Тогда
								СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Обл.Значение);
							КонецЕсли;
							РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
							Обл = ТДО.Найти("П00022М100004_" + ИндексСтр);
						КонецЦикла;
						
						РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
						Обл = ТДО.Найти("П00023М100003_" + ИндексСтр);
						Пока Обл <> Неопределено Цикл
							СуммаР24 = СуммаР24 - РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Обл.Значение);
							РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
							Обл = ТДО.Найти("П00023М100003_" + ИндексСтр);
						КонецЦикла;
						
						Если КодР24 = "40001" Тогда
							ТДО["П00024М100002_" + Индекс24Стр].Значение = Макс(СуммаР24, 0);
						Иначе
							ТДО["П00024М100002_" + Индекс24Стр].Значение = - Мин(СуммаР24, 0);
						КонецЕсли;
						
					ИначеЕсли КодР24 = "40003" Тогда
						
						КодыР25ДляСуммирования = Новый Массив;
						КодыР25ДляСуммирования.Добавить("50001");
						КодыР25ДляСуммирования.Добавить("50002");
						КодыР25ДляСуммирования.Добавить("50006");
						КодыР25ДляСуммирования.Добавить("50007");
						
						РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
						Обл = ТДО.Найти("П00025М100003_" + ИндексСтр);
						Пока Обл <> Неопределено Цикл
							КодР25 = СокрЛП(ТДО["П00025М100001_" + ИндексСтр].Значение);
							Если КодыР25ДляСуммирования.Найти(КодР25) <> Неопределено Тогда
								СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Обл.Значение);
							КонецЕсли;
							РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
							Обл = ТДО.Найти("П00025М100003_" + ИндексСтр);
						КонецЦикла;
						
						ТДО["П00024М100002_" + Индекс24Стр].Значение = СуммаР24;
						
					Иначе
						
						ТДО["П00024М100002_" + Индекс24Стр].Значение = 0;
						
					КонецЕсли;
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс24, Индекс24Стр);
					Обл = ТДО.Найти("П00024М100001_" + Индекс24Стр);
				КонецЦикла;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				ОблСтр020 = ТДО.Найти("П00003М102003_" + ИндексСтр);
				
				Пока ОблСтр020 <> Неопределено Цикл
					
					РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(ИндексПодч, ИндексПодчСтр);
					ОблСтр050 = ТДО.Найти("П00003М205003_" + ИндексСтр + "_" + ИндексПодчСтр);
					
					Пока ОблСтр050 <> Неопределено Цикл
						
						Стр100 = ТДО["П00003М210003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение;
						Стр110 = ТДО["П00003М211003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение;
						Стр120 = ТДО["П00003М212003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение;
						Стр130 = ТДО["П00003М213003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение;
						
						// Расчет в строке 090.
						//
						Стр090 = ?(Стр110 = 0, 0, Окр(Стр100 / Стр110, 3));
						ТДО["П00003М209003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение = Стр090;
						
						Если Год(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2024 Тогда
							
							// Ручное редактирование строки 080.
							//
							Стр080 = ТДО["П00003М208003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение;
							
						Иначе
							
							// Расчет в строке 080.
							//
							Стр080 = ?(Стр120 = 0, 0, Окр((1 + Стр090) / Стр120));
							ТДО["П00003М208003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение = Стр080;
							
						КонецЕсли;
						
						// Расчет в строке 140.
						//
						Стр140 = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Стр130 * Стр080);
						ТДО["П00003М214003_" + ИндексСтр + "_" + ИндексПодчСтр].Значение = Стр140;
						
						РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(ИндексПодч, ИндексПодчСтр);
						ОблСтр050 = ТДО.Найти("П00003М205003_" + ИндексСтр + "_" + ИндексПодчСтр);
						
					КонецЦикла;
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					ОблСтр020 = ТДО.Найти("П00003М102003_" + ИндексСтр);
					
				КонецЦикла;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Приложение1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				// Расчет в графе 5.
				//
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				ОблГр5 = ТДО.Найти("П00101М100005_" + ИндексСтр);
				Пока ОблГр5 <> Неопределено Цикл
					Гр3 = ТДО.Найти("П00101М100003_" + ИндексСтр).Значение;
					Гр4 = ТДО.Найти("П00101М100004_" + ИндексСтр).Значение;
					ОблГр5.Значение = Окр(Гр3 * Гр4 / 100, 3);
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					ОблГр5 = ТДО.Найти("П00101М100005_" + ИндексСтр);
				КонецЦикла;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Приложение2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СуммаСтр055 = 0;
				
				// Расчет в строках 100.
				//
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				ОблСтр100 = ТДО.Найти("П00102М110000_" + ИндексСтр);
				
				Пока ОблСтр100 <> Неопределено Цикл
					
					СуммаСтр100 = 0;
					
					РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(ИндексПодч, ИндексПодчСтр);
					ОблСтр070 = ТДО.Найти("П00102М207005_" + ИндексСтр + "_" + ИндексПодчСтр);
					Пока ОблСтр070 <> Неопределено Цикл
						СуммаСтр100 = СуммаСтр100
						+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, ОблСтр070.Значение);
						РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(ИндексПодч, ИндексПодчСтр);
						ОблСтр070 = ТДО.Найти("П00102М207005_" + ИндексСтр + "_" + ИндексПодчСтр);
					КонецЦикла;
					
					РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(ИндексПодч, ИндексПодчСтр);
					ОблСтр080 = ТДО.Найти("П00102М308005_" + ИндексСтр + "_" + ИндексПодчСтр);
					Пока ОблСтр080 <> Неопределено Цикл
						СуммаСтр100 = СуммаСтр100
						- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, ОблСтр080.Значение);
						РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(ИндексПодч, ИндексПодчСтр);
						ОблСтр080 = ТДО.Найти("П00102М308005_" + ИндексСтр + "_" + ИндексПодчСтр);
					КонецЦикла;
					
					РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(ИндексПодч, ИндексПодчСтр);
					ОблСтр090 = ТДО.Найти("П00102М409005_" + ИндексСтр + "_" + ИндексПодчСтр);
					Пока ОблСтр090 <> Неопределено Цикл
						СуммаСтр100 = СуммаСтр100
						- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, ОблСтр090.Значение);
						РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(ИндексПодч, ИндексПодчСтр);
						ОблСтр090 = ТДО.Найти("П00102М409005_" + ИндексСтр + "_" + ИндексПодчСтр);
					КонецЦикла;
					
					ОблСтр100.Значение = СуммаСтр100;
					
					СуммаСтр055 = СуммаСтр055 + СуммаСтр100;
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					ОблСтр100 = ТДО.Найти("П00102М110000_" + ИндексСтр);
					
				КонецЦикла;
				
				// Расчет в строке 055.
				//
				ТДО["П001020005503"].Значение = СуммаСтр055;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Приложение5" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СуммаСтр060 = 0;
				СуммаСтр100 = 0;
				СуммаСтр110 = 0;
				
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти("П00105М130003_" + ИндексСтр);
				
				Пока Обл <> Неопределено Цикл
					
					// Расчет в строке 300.
					//
					ТДО["П00105М130003_" + ИндексСтр].Значение
					= ТДО["П00105М130103_" + ИндексСтр].Значение
					+ ТДО["П00105М130203_" + ИндексСтр].Значение
					+ ТДО["П00105М130303_" + ИндексСтр].Значение;
					
					// Расчет в строке 310.
					//
					ТДО["П00105М131003_" + ИндексСтр].Значение
					= РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00105М131103_" + ИндексСтр].Значение)
					+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00105М131203_" + ИндексСтр].Значение)
					+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00105М131303_" + ИндексСтр].Значение);
					
					// Расчет в строке 320.
					//
					ТДО["П00105М132003_" + ИндексСтр].Значение
					= ТДО["П00105М120003_" + ИндексСтр].Значение
					- ТДО["П00105М121003_" + ИндексСтр].Значение
					- ТДО["П00105М123003_" + ИндексСтр].Значение
					- ТДО["П00105М124003_" + ИндексСтр].Значение
					- ТДО["П00105М127003_" + ИндексСтр].Значение
					- ТДО["П00105М129003_" + ИндексСтр].Значение
					- ТДО["П00105М130003_" + ИндексСтр].Значение;
					
					СуммаСтр060 = СуммаСтр060 + ТДО["П00105М120003_" + ИндексСтр].Значение;
					
					СуммаСтр100 = СуммаСтр100 + ТДО["П00105М132003_" + ИндексСтр].Значение;
					
					СуммаСтр110 = СуммаСтр110 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00105М133003_" + ИндексСтр].Значение);
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00105М130003_" + ИндексСтр);
					
				КонецЦикла;
				
				// Расчет в строке 060.
				//
				ТДО["П001050006003"].Значение = СуммаСтр060;
				
				// Расчет в строке 100.
				//
				ТДО["П001050010003"].Значение = СуммаСтр100;
				
				// Расчет в строке 110.
				//
				ТДО["П001050011003"].Значение = СуммаСтр110;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Приложение612_613" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СуммыСтр230ПоКодамВидаПТ = Новый Структура;
				
				// Расчет в строке 320.
				//
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти("П00106М132003_" + ИндексСтр);
				
				Пока Обл <> Неопределено Цикл
					
					ТДО["П00106М132003_" + ИндексСтр].Значение
					= ТДО["П00106М122003_" + ИндексСтр].Значение
					- ТДО["П00106М125003_" + ИндексСтр].Значение
					- ТДО["П00106М126003_" + ИндексСтр].Значение
					- ТДО["П00106М127003_" + ИндексСтр].Значение
					- ТДО["П00106М128003_" + ИндексСтр].Значение
					- ТДО["П00106М129003_" + ИндексСтр].Значение
					- ТДО["П00106М130003_" + ИндексСтр].Значение
					- ТДО["П00106М131003_" + ИндексСтр].Значение;
					
					КодВидаПТСтр210 = СокрЛП(ТДО["П00106М121003_" + ИндексСтр].Значение);
					
					СуммаСтр230 = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М123003_" + ИндексСтр].Значение);
					
					Если ЗначениеЗаполнено(КодВидаПТСтр210) Тогда
						Если СуммыСтр230ПоКодамВидаПТ.Свойство("_" + КодВидаПТСтр210) Тогда
							СуммаСтр230 = СуммаСтр230 + СуммыСтр230ПоКодамВидаПТ["_" + КодВидаПТСтр210];
						КонецЕсли;
						СуммыСтр230ПоКодамВидаПТ.Вставить("_" + КодВидаПТСтр210, СуммаСтр230);
					КонецЕсли;
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00106М132003_" + ИндексСтр);
					
				КонецЦикла;
				
				// Расчет в строке 370.
				//
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти("П00106М237003_" + ИндексСтр);
				
				Пока Обл <> Неопределено Цикл
					
					КодВидаПТСтр325 = СокрЛП(ТДО["П00106М232503_" + ИндексСтр].Значение);
					
					СуммаСтр230ПоКодуВидаПТСтр325 = ?(СуммыСтр230ПоКодамВидаПТ.Свойство("_" + КодВидаПТСтр325),
					СуммыСтр230ПоКодамВидаПТ["_" + КодВидаПТСтр325], 0);
					
					ТДО["П00106М237003_" + ИндексСтр].Значение = СуммаСтр230ПоКодуВидаПТСтр325
					- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М233003_" + ИндексСтр].Значение)
					- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М234003_" + ИндексСтр].Значение)
					- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М236003_" + ИндексСтр].Значение);
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00106М237003_" + ИндексСтр);
					
				КонецЦикла;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Приложение614" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				РегламентированнаяОтчетностьКлиентСервер.УстановитьИндекс(Индекс, ИндексСтр);
				Обл = ТДО.Найти("П00106М346003_" + ИндексСтр);
				
				Пока Обл <> Неопределено Цикл
					
					// Расчет в строке 460.
					//
					ТДО["П00106М346003_" + ИндексСтр].Значение
					= РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М341503_" + ИндексСтр].Значение)
					+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М342503_" + ИндексСтр].Значение)
					+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М343503_" + ИндексСтр].Значение)
					+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М344503_" + ИндексСтр].Значение);
					
					// Расчет в строке 480.
					//
					ТДО["П00106М348003_" + ИндексСтр].Значение
					= РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М340003_" + ИндексСтр].Значение)
					- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
					ТДО["П00106М346003_" + ИндексСтр].Значение);
					
					// Расчет в строке 490.
					//
					ТДО["П00106М349003_" + ИндексСтр].Значение
					= ТДО["П00106М340503_" + ИндексСтр].Значение
					- ТДО["П00106М341003_" + ИндексСтр].Значение
					- ТДО["П00106М342003_" + ИндексСтр].Значение
					- ТДО["П00106М343003_" + ИндексСтр].Значение
					- ТДО["П00106М344003_" + ИндексСтр].Значение
					- ТДО["П00106М345003_" + ИндексСтр].Значение;
					
					РегламентированнаяОтчетностьКлиентСервер.УвеличитьИндекс(Индекс, ИндексСтр);
					Обл = ТДО.Найти("П00106М346003_" + ИндексСтр);
					
				КонецЦикла;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		Для каждого Раздел Из Форма.СтруктураЗависимыхЯчеекДляАвторасчета Цикл
			Расчет(Форма, Раздел.Ключ);
		КонецЦикла;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетВДеревеЗначений(Форма, ИмяРаздела)
	
	ИмяГлРаздела = ИмяРаздела;
	СтруктураРаздела = Форма.мСтруктураМногоуровневыхРазделов[ИмяРаздела];
	Если СтруктураРаздела.Свойство("ИмяГлавногоРаздела") Тогда
		ИмяГлРаздела = СтруктураРаздела["ИмяГлавногоРаздела"];
	КонецЕсли;
	
	ТДО = Форма.ТабличныйДокумент.Области;
	
	ДеревоДанных = Неопределено;
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КодыОперацийДляСуммирования = Новый Массив;
		КодыОперацийДляСуммирования.Добавить("20003");
		КодыОперацийДляСуммирования.Добавить("20004");
		КодыОперацийДляСуммирования.Добавить("20005");
		КодыОперацийДляСуммирования.Добавить("20007");
		КодыОперацийДляСуммирования.Добавить("20009");
		КодыОперацийДляСуммирования.Добавить("20011");
		КодыОперацийДляСуммирования.Добавить("20013");
		КодыОперацийДляСуммирования.Добавить("20015");
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧР21М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР21М1;
		СтруктураГруппыМнЧР21М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР21М1];
		ИменаГрафМнЧР21М1 = СтруктураГруппыМнЧР21М1["ИменаГраф"];
		
		ИмяГруппыМнЧР22М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР22М1;
		СтруктураГруппыМнЧР22М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР22М1];
		ИменаГрафМнЧР22М1 = СтруктураГруппыМнЧР22М1["ИменаГраф"];
		
		ИмяГруппыМнЧР23М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР23М1;
		СтруктураГруппыМнЧР23М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР23М1];
		ИменаГрафМнЧР23М1 = СтруктураГруппыМнЧР23М1["ИменаГраф"];
		
		ИмяГруппыМнЧР24М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР24М1;
		СтруктураГруппыМнЧР24М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР24М1];
		ИменаГрафМнЧР24М1 = СтруктураГруппыМнЧР24М1["ИменаГраф"];
		
		ИмяГруппыМнЧР25М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР25М1;
		СтруктураГруппыМнЧР25М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР25М1];
		ИменаГрафМнЧР25М1 = СтруктураГруппыМнЧР25М1["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧР21М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР21М1];
			ДеревоМнЧР22М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР22М1];
			ДеревоМнЧР23М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР23М1];
			ДеревоМнЧР24М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР24М1];
			ДеревоМнЧР25М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР25М1];
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого Пок Из Ветка.Данные Цикл
					Ветка.Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР21М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР21М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР21М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР22М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР22М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР22М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР23М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР23М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР23М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР24М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР24М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР24М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР25М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР25М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР25М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			КодВидаПТ = СокрЛП(Ветка.Данные["П000020001003"]);
			Если КодВидаПТ = "298" Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧР21М1.Строки Цикл
					Если ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00021М100001"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00021М100003"])
						ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные["П00021М100004"]) Тогда
						СтрокаМнЧ.Данные.Вставить("П00021М100002", "4");
					Иначе
						СтрокаМнЧ.Данные.Вставить("П00021М100002", "");
					КонецЕсли;
				КонецЦикла;
			Иначе
				// Ручное редактирование графы 2 подраздела 2.1.
			КонецЕсли;
			
			Для каждого СтрокаМнЧ24 Из ДеревоМнЧР24М1.Строки Цикл
				
				КодР24 = СокрЛП(СтрокаМнЧ24.Данные["П00024М100001"]);
				
				СуммаР24 = 0;
				
				Если КодР24 = "40001" ИЛИ КодР24 = "40002" Тогда
					
					Для каждого СтрокаМнЧ Из ДеревоМнЧР21М1.Строки Цикл
						СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
						Форма, СтрокаМнЧ.Данные["П00021М100004"]);
					КонецЦикла;
					
					КодыР22ДляСуммирования = Новый Массив;
					КодыР22ДляСуммирования.Добавить("20003");
					КодыР22ДляСуммирования.Добавить("20004");
					КодыР22ДляСуммирования.Добавить("20005");
					КодыР22ДляСуммирования.Добавить("20007");
					КодыР22ДляСуммирования.Добавить("20009");
					КодыР22ДляСуммирования.Добавить("20011");
					КодыР22ДляСуммирования.Добавить("20013");
					КодыР22ДляСуммирования.Добавить("20015");
					
					Для каждого СтрокаМнЧ Из ДеревоМнЧР22М1.Строки Цикл
						КодР22 = СокрЛП(СтрокаМнЧ.Данные["П00022М100001"]);
						Если КодыР22ДляСуммирования.Найти(КодР22) <> Неопределено Тогда
							СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
							Форма, СтрокаМнЧ.Данные["П00022М100004"]);
						КонецЕсли;
					КонецЦикла;
					
					Для каждого СтрокаМнЧ Из ДеревоМнЧР23М1.Строки Цикл
						СуммаР24 = СуммаР24 - РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
						Форма, СтрокаМнЧ.Данные["П00023М100003"]);
					КонецЦикла;
					
					Если КодР24 = "40001" Тогда
						СтрокаМнЧ24.Данные.Вставить("П00024М100002", Макс(СуммаР24, 0));
					Иначе
						СтрокаМнЧ24.Данные.Вставить("П00024М100002", - Мин(СуммаР24, 0));
					КонецЕсли;
					
				ИначеЕсли КодР24 = "40003" Тогда
					
					КодыР25ДляСуммирования = Новый Массив;
					КодыР25ДляСуммирования.Добавить("50001");
					КодыР25ДляСуммирования.Добавить("50002");
					КодыР25ДляСуммирования.Добавить("50006");
					КодыР25ДляСуммирования.Добавить("50007");
					
					Для каждого СтрокаМнЧ Из ДеревоМнЧР25М1.Строки Цикл
						КодР25 = СокрЛП(СтрокаМнЧ.Данные["П00025М100001"]);
						Если КодыР25ДляСуммирования.Найти(КодР25) <> Неопределено Тогда
							СуммаР24 = СуммаР24 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
							Форма, СтрокаМнЧ.Данные["П00025М100003"]);
						КонецЕсли;
					КонецЦикла;
					
					СтрокаМнЧ24.Данные.Вставить("П00024М100002", СуммаР24);
					
				Иначе
					
					СтрокаМнЧ24.Данные.Вставить("П00024М100002", 0);
					
				КонецЕсли;
				
			КонецЦикла;
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого Пок Из Ветка.Данные Цикл
					ТДО[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР21М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР21М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР21М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧР24М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧР24М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧР24М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧР3М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыР3М1;
		СтруктураГруппыМнЧР3М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР3М1];
		ИменаГрафМнЧР3М1 = СтруктураГруппыМнЧР3М1["ИменаГраф"];
		
		ИмяГруппыМнЧР3М2 = Форма.СтруктураРеквизитовФормы.мИдГруппыР3М2;
		СтруктураГруппыМнЧР3М2 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧР3М2];
		ИменаГрафМнЧР3М2 = СтруктураГруппыМнЧР3М2["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧР3М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР3М1];
			
			Если Ветка = АктивнаяВетка Тогда
				
				Для каждого СтрокаМнЧ Из ДеревоМнЧР3М1.Строки Цикл
					
					ИндСтроки = Формат(ДеревоМнЧР3М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					
					ДеревоМнЧР3М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР3М2];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧР3М2.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧР3М2.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧР3М2 Цикл
							СтрокаПодчМнЧ.Данные.Вставить(ИмяГрафы,
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧР3М1.Строки Цикл
				
				ДеревоМнЧР3М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР3М2];
				
				Для каждого СтрокаПодчМнЧ Из ДеревоМнЧР3М2.Строки Цикл
					
					Стр100 = СтрокаПодчМнЧ.Данные["П00003М210003"];
					Стр110 = СтрокаПодчМнЧ.Данные["П00003М211003"];
					Стр120 = СтрокаПодчМнЧ.Данные["П00003М212003"];
					Стр130 = СтрокаПодчМнЧ.Данные["П00003М213003"];
					
					// Расчет в строке 090.
					//
					Стр090 = ?(Стр110 = 0, 0, Окр(Стр100 / Стр110, 3));
					СтрокаПодчМнЧ.Данные.Вставить("П00003М209003", Стр090);
					
					Если Год(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2024 Тогда
						
						// Ручное редактирование строки 080.
						//
						Стр080 = СтрокаПодчМнЧ.Данные["П00003М208003"];
						
					Иначе
						
						// Расчет в строке 080.
						//
						Стр080 = ?(Стр120 = 0, 0, Окр((1 + Стр090) / Стр120));
						СтрокаПодчМнЧ.Данные.Вставить("П00003М208003", Стр080);
						
					КонецЕсли;
					
					// Расчет в строке 140.
					//
					Стр140 = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, Стр130 * Стр080);
					СтрокаПодчМнЧ.Данные.Вставить("П00003М214003", Стр140);
					
				КонецЦикла;
				
			КонецЦикла;
			
			Если Ветка = АктивнаяВетка Тогда
				
				Для каждого СтрокаМнЧ Из ДеревоМнЧР3М1.Строки Цикл
					
					ИндСтроки = Формат(ДеревоМнЧР3М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					
					ДеревоМнЧР3М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧР3М2];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧР3М2.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧР3М2.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧР3М2 Цикл
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение
							= СтрокаПодчМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Приложение1" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧП1М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыП1М1;
		СтруктураГруппыМнЧП1М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП1М1];
		ИменаГрафМнЧП1М1 = СтруктураГруппыМнЧП1М1["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧП1М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП1М1];
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП1М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП1М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП1М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			// Расчет в графе 5.
			//
			Для каждого СтрокаМнЧ Из ДеревоМнЧП1М1.Строки Цикл
				Гр3 = СтрокаМнЧ.Данные["П00101М100003"];
				Гр4 = СтрокаМнЧ.Данные["П00101М100004"];
				СтрокаМнЧ.Данные.Вставить("П00101М100005", Окр(Гр3 * Гр4 / 100, 3));
			КонецЦикла;
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП1М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП1М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП1М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Приложение2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧП2М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыП2М1;
		СтруктураГруппыМнЧП2М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП2М1];
		ИменаГрафМнЧП2М1 = СтруктураГруппыМнЧП2М1["ИменаГраф"];
		
		ИмяГруппыМнЧП2М2 = Форма.СтруктураРеквизитовФормы.мИдГруппыП2М2;
		СтруктураГруппыМнЧП2М2 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП2М2];
		ИменаГрафМнЧП2М2 = СтруктураГруппыМнЧП2М2["ИменаГраф"];
		
		ИмяГруппыМнЧП2М3 = Форма.СтруктураРеквизитовФормы.мИдГруппыП2М3;
		СтруктураГруппыМнЧП2М3 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП2М3];
		ИменаГрафМнЧП2М3 = СтруктураГруппыМнЧП2М3["ИменаГраф"];
		
		ИмяГруппыМнЧП2М4 = Форма.СтруктураРеквизитовФормы.мИдГруппыП2М4;
		СтруктураГруппыМнЧП2М4 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП2М4];
		ИменаГрафМнЧП2М4 = СтруктураГруппыМнЧП2М4["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧП2М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М1];
			
			Если Ветка = АктивнаяВетка Тогда
				
				Для каждого Пок Из Ветка.Данные Цикл
					Ветка.Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
				КонецЦикла;
				
				Для каждого СтрокаМнЧ Из ДеревоМнЧП2М1.Строки Цикл
					
					ИндСтроки = Формат(ДеревоМнЧП2М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП2М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
					
					ДеревоМнЧП2М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М2];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М2.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М2.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М2 Цикл
							СтрокаПодчМнЧ.Данные.Вставить(ИмяГрафы,
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
					ДеревоМнЧП2М3 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М3];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М3.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М3.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М3 Цикл
							СтрокаПодчМнЧ.Данные.Вставить(ИмяГрафы,
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
					ДеревоМнЧП2М4 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М4];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М4.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М4.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М4 Цикл
							СтрокаПодчМнЧ.Данные.Вставить(ИмяГрафы,
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение);
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
			СуммаСтр055 = 0;
			
			// Расчет в строках 100.
			//
			Для каждого СтрокаМнЧ Из ДеревоМнЧП2М1.Строки Цикл
				
				СуммаСтр100 = 0;
				
				ДеревоМнЧП2М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М2];
				Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М2.Строки Цикл
					СуммаСтр100 = СуммаСтр100 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
					Форма, СтрокаПодчМнЧ.Данные["П00102М207005"]);
				КонецЦикла;
				ДеревоМнЧП2М3 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М3];
				Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М3.Строки Цикл
					СуммаСтр100 = СуммаСтр100 - РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
					Форма, СтрокаПодчМнЧ.Данные["П00102М308005"]);
				КонецЦикла;
				ДеревоМнЧП2М4 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М4];
				Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М4.Строки Цикл
					СуммаСтр100 = СуммаСтр100 - РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
					Форма, СтрокаПодчМнЧ.Данные["П00102М409005"]);
				КонецЦикла;
				
				СтрокаМнЧ.Данные.Вставить("П00102М110000", СуммаСтр100);
				
				СуммаСтр055 = СуммаСтр055 + СуммаСтр100;
				
			КонецЦикла;
			
			// Расчет в строке 055.
			//
			Ветка.Данные.Вставить("П001020005503", СуммаСтр055);
			
			Если Ветка = АктивнаяВетка Тогда
				
				Для каждого Пок Из Ветка.Данные Цикл
					ТДО[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
				
				Для каждого СтрокаМнЧ Из ДеревоМнЧП2М1.Строки Цикл
					
					ИндСтроки = Формат(ДеревоМнЧП2М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП2М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
					
					ДеревоМнЧП2М2 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М2];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М2.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М2.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М2 Цикл
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение
							= СтрокаПодчМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
					ДеревоМнЧП2М3 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М3];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М3.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М3.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М3 Цикл
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение
							= СтрокаПодчМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
					ДеревоМнЧП2М4 = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП2М4];
					Для каждого СтрокаПодчМнЧ Из ДеревоМнЧП2М4.Строки Цикл
						ИндПодчСтроки = Формат(ДеревоМнЧП2М4.Строки.Индекс(СтрокаПодчМнЧ) + 1, "ЧГ=");
						Для каждого ИмяГрафы Из ИменаГрафМнЧП2М4 Цикл
							ТДО[ИмяГрафы + "_" + ИндСтроки + "_" + ИндПодчСтроки].Значение
							= СтрокаПодчМнЧ.Данные[ИмяГрафы];
						КонецЦикла;
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Приложение5" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧП512М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыП512М1;
		СтруктураГруппыМнЧП512М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП512М1];
		ИменаГрафМнЧП512М1 = СтруктураГруппыМнЧП512М1["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			ДеревоМнЧП512М1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП512М1];
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого Пок Из Ветка.Данные Цикл
					Ветка.Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧП512М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП512М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП512М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			СуммаСтр060 = 0;
			СуммаСтр100 = 0;
			СуммаСтр110 = 0;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧП512М1.Строки Цикл
				
				// Расчет в строке 300.
				//
				СтрокаМнЧ.Данные.Вставить("П00105М130003",
				СтрокаМнЧ.Данные["П00105М130103"] + СтрокаМнЧ.Данные["П00105М130203"] + СтрокаМнЧ.Данные["П00105М130303"]);
				
				// Расчет в строке 310.
				//
				СтрокаМнЧ.Данные.Вставить("П00105М131003",
				РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00105М131103"])
				+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00105М131203"])
				+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00105М131303"]));
				
				// Расчет в строке 320.
				//
				СтрокаМнЧ.Данные.Вставить("П00105М132003", СтрокаМнЧ.Данные["П00105М120003"]
				- СтрокаМнЧ.Данные["П00105М121003"] - СтрокаМнЧ.Данные["П00105М123003"] - СтрокаМнЧ.Данные["П00105М124003"]
				- СтрокаМнЧ.Данные["П00105М127003"] - СтрокаМнЧ.Данные["П00105М129003"] - СтрокаМнЧ.Данные["П00105М130003"]);
				
				СуммаСтр060 = СуммаСтр060 + СтрокаМнЧ.Данные["П00105М120003"];
				
				СуммаСтр100 = СуммаСтр100 + СтрокаМнЧ.Данные["П00105М132003"];
				
				СуммаСтр110 = СуммаСтр110 + РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
				СтрокаМнЧ.Данные["П00105М133003"]);
				
			КонецЦикла;
			
			// Расчет в строке 060.
			//
			Ветка.Данные.Вставить("П001050006003", СуммаСтр060);
			
			// Расчет в строке 100.
			//
			Ветка.Данные.Вставить("П001050010003", СуммаСтр100);
			
			// Расчет в строке 110.
			//
			Ветка.Данные.Вставить("П001050011003", СуммаСтр110);
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого Пок Из Ветка.Данные Цикл
					ТДО[Пок.Ключ].Значение = Пок.Значение;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧП512М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП512М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП512М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Приложение612_613" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка612_613 = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка612_613 = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧП612М1 = Форма.СтруктураРеквизитовФормы.мИдГруппыП612М1;
		СтруктураГруппыМнЧП612М1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП612М1];
		ИменаГрафМнЧП612М1 = СтруктураГруппыМнЧП612М1["ИменаГраф"];
		
		ИмяГруппыМнЧП613М2 = Форма.СтруктураРеквизитовФормы.мИдГруппыП613М2;
		СтруктураГруппыМнЧП613М2 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП613М2];
		ИменаГрафМнЧП613М2 = СтруктураГруппыМнЧП613М2["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			Ветка612_613 = Ветка.Строки[0].Строки[0];
			
			ДеревоМнЧП612М1 = Ветка612_613.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП612М1];
			ДеревоМнЧП613М2 = Ветка612_613.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП613М2];
			
			Если Ветка612_613 = АктивнаяВетка612_613 Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП612М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП612М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП612М1 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧП613М2.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП613М2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП613М2 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			СуммыСтр230ПоКодамВидаПТ = Новый Структура;
			
			// Расчет в строке 320.
			//
			Для каждого СтрокаМнЧ Из ДеревоМнЧП612М1.Строки Цикл
				
				СтрокаМнЧ.Данные.Вставить("П00106М132003", СтрокаМнЧ.Данные["П00106М122003"] - СтрокаМнЧ.Данные["П00106М125003"]
				- СтрокаМнЧ.Данные["П00106М126003"] - СтрокаМнЧ.Данные["П00106М127003"] - СтрокаМнЧ.Данные["П00106М128003"]
				- СтрокаМнЧ.Данные["П00106М129003"] - СтрокаМнЧ.Данные["П00106М130003"] - СтрокаМнЧ.Данные["П00106М131003"]);
				
				КодВидаПТСтр210 = СокрЛП(СтрокаМнЧ.Данные["П00106М121003"]);
				
				СуммаСтр230 = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма,
				СтрокаМнЧ.Данные["П00106М123003"]);
				
				Если ЗначениеЗаполнено(КодВидаПТСтр210) Тогда
					Если СуммыСтр230ПоКодамВидаПТ.Свойство("_" + КодВидаПТСтр210) Тогда
						СуммаСтр230 = СуммаСтр230 + СуммыСтр230ПоКодамВидаПТ["_" + КодВидаПТСтр210];
					КонецЕсли;
					СуммыСтр230ПоКодамВидаПТ.Вставить("_" + КодВидаПТСтр210, СуммаСтр230);
				КонецЕсли;
				
			КонецЦикла;
			
			// Расчет в строке 370.
			//
			Для каждого СтрокаМнЧ Из ДеревоМнЧП613М2.Строки Цикл
				
				КодВидаПТСтр325 = СокрЛП(СтрокаМнЧ.Данные["П00106М232503"]);
				
				СуммаСтр230ПоКодуВидаПТСтр325 = ?(СуммыСтр230ПоКодамВидаПТ.Свойство("_" + КодВидаПТСтр325),
				СуммыСтр230ПоКодамВидаПТ["_" + КодВидаПТСтр325], 0);
				
				СтрокаМнЧ.Данные.Вставить("П00106М237003", СуммаСтр230ПоКодуВидаПТСтр325
				- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М233003"])
				- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М234003"])
				- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М236003"]));
				
			КонецЦикла;
			
			Если Ветка612_613 = АктивнаяВетка612_613 Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП612М1.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП612М1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП612М1 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
				Для каждого СтрокаМнЧ Из ДеревоМнЧП613М2.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП613М2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП613М2 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Приложение614" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка614 = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка614 = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧП614М3 = Форма.СтруктураРеквизитовФормы.мИдГруппыП614М3;
		СтруктураГруппыМнЧП614М3 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧП614М3];
		ИменаГрафМнЧП614М3 = СтруктураГруппыМнЧП614М3["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанных.Строки Цикл
			
			Ветка614 = Ветка.Строки[1].Строки[0];
			
			ДеревоМнЧП614М3 = Ветка614.ДанныеМногострочныхЧастей[ИмяГруппыМнЧП614М3];
			
			Если Ветка614 = АктивнаяВетка614 Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП614М3.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП614М3.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП614М3 Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧП614М3.Строки Цикл
				
				// Расчет в строке 460.
				//
				СтрокаМнЧ.Данные.Вставить("П00106М346003",
				РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М341503"])
				+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М342503"])
				+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М343503"])
				+ РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М344503"]));
				
				// Расчет в строке 480.
				//
				СтрокаМнЧ.Данные.Вставить("П00106М348003",
				РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М340003"])
				- РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(Форма, СтрокаМнЧ.Данные["П00106М346003"]));
				
				// Расчет в строке 490.
				//
				СтрокаМнЧ.Данные.Вставить("П00106М349003",
				СтрокаМнЧ.Данные["П00106М340503"] - СтрокаМнЧ.Данные["П00106М341003"] - СтрокаМнЧ.Данные["П00106М342003"]
				- СтрокаМнЧ.Данные["П00106М343003"] - СтрокаМнЧ.Данные["П00106М344003"] - СтрокаМнЧ.Данные["П00106М345003"]);
				
			КонецЦикла;
			
			Если Ветка614 = АктивнаяВетка614 Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧП614М3.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧП614М3.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧП614М3 Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если ДеревоДанных <> Неопределено Тогда
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]
		= ПоместитьВоВременноеХранилище(ДеревоДанных, Форма.УникальныйИдентификатор);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СобратьДанные()
	
	СформироватьРаздел1();
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область("П000010001003");
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРаздел1()
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		СохрОКТМО = СокрЛП(ТабличныйДокумент.Области.Найти("П000010001003").Значение);
	Иначе
		СохрОКТМО = СокрЛП(ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы[
		"АдресВоВрХранилищеДеревоДанныхРаздел1"]).Строки[0].Данные.П000010001003);
	КонецЕсли;
	
	ИнициализироватьМногоуровневыйРаздел("Раздел1");
	
	КЧ = Новый КвалификаторыЧисла(11, 0);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , ,КЧ);
	
	КС_2 = Новый КвалификаторыСтроки(2);
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС_2 = Новый ОписаниеТипов(Массив, , КС_2);
	
	КС_20 = Новый КвалификаторыСтроки(20);
	Массив.Очистить();
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС_20 = Новый ОписаниеТипов(Массив, , КС_20);
	
	ТЗ = Новый ТаблицаЗначений;
	ТЗ.Колонки.Добавить("КБК",              ОписаниеТиповС_20);
	ТЗ.Колонки.Добавить("КодСрокаУплаты",   ОписаниеТиповС_2);
	ТЗ.Колонки.Добавить("СуммаКУплате",     ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("СуммаКУменьшению", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("СуммаКВозмещению", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("СуммаКЗачету",     ОписаниеТиповЧ);
	
	ДеревоР2 = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел2"]);
	
	Для каждого Ветка Из ДеревоР2.Строки Цикл
		
		КодВидаПТ = СокрЛП(Ветка.Данные["П000020001003"]);
		КБК       = СокрЛП(Ветка.Данные["П000020002003"]);
		
		Если ЗначениеЗаполнено(КБК) Тогда
			
			ДеревоМнЧР24М1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР24М1];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧР24М1.Строки Цикл
				
				КодПоказателя = СокрЛП(СтрокаМнЧ.Данные["П00024М100001"]);
				
				ТекСумма = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
				ЭтотОбъект, СтрокаМнЧ.Данные["П00024М100002"]);
				
				Если КодПоказателя = "40001" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.КодСрокаУплаты = ?(КодВидаПТ = "111" ИЛИ КодВидаПТ = "121", "04", "03");
					НоваяСтрокаТЗ.СуммаКУплате = ТекСумма;
					
				ИначеЕсли КодПоказателя = "40002" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.СуммаКУменьшению = ТекСумма;
					
				ИначеЕсли КодПоказателя = "40003" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.СуммаКВозмещению = ТекСумма;
					
				КонецЕсли;
				
			КонецЦикла;
			
			ДеревоМнЧР241М1 = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР241М1];
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧР241М1.Строки Цикл
				
				КодПоказателя = СокрЛП(СтрокаМнЧ.Данные["П00241М100001"]);
				
				ТекСумма = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(
				ЭтотОбъект, СтрокаМнЧ.Данные["П00241М100002"]);
				
				Если КодПоказателя = "60006" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.КодСрокаУплаты = "01";
					НоваяСтрокаТЗ.СуммаКУплате = ТекСумма;
					
				ИначеЕсли КодПоказателя = "60005" ИЛИ КодПоказателя = "60007" ИЛИ КодПоказателя = "60009" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.КодСрокаУплаты = "02";
					НоваяСтрокаТЗ.СуммаКУплате = ТекСумма;
					
				ИначеЕсли КодПоказателя = "60008" Тогда
					
					НоваяСтрокаТЗ = ТЗ.Добавить();
					НоваяСтрокаТЗ.КБК = КБК;
					НоваяСтрокаТЗ.СуммаКЗачету = ТекСумма;
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДеревоР1 = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	ДеревоМнЧР1М1 = ДеревоР1.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М1];
	
	ТЗ_Ур0 = ТЗ.Скопировать();
	ТЗ_Ур0.Свернуть("КБК", "СуммаКУменьшению,СуммаКВозмещению,СуммаКЗачету");
	ТЗ_Ур0.Сортировать("КБК");
	
	Для Инд_Ур0 = 0 По ТЗ_Ур0.Количество() - 1 Цикл
		
		СтрокаТЗ_Ур0 = ТЗ_Ур0[Инд_Ур0];
		
		Если Инд_Ур0 = 0 Тогда
			
			СтрокаМнЧР1М1 = ДеревоМнЧР1М1.Строки[0];
			
		Иначе
			
			СтрокаМнЧР1М1 = ДеревоМнЧР1М1.Строки.Добавить();
			СтрокаМнЧР1М1.Данные = Новый Структура;
			СтрокаМнЧР1М1.ДанныеМногострочныхЧастей = Новый Структура;
			
			ДеревоМнЧР1М2 = Новый ДеревоЗначений;
			ДеревоМнЧР1М2.Колонки.Добавить("Данные");
			ДеревоМнЧР1М2.Колонки.Добавить("ДанныеМногострочныхЧастей");
			НовСтрокаМнЧР1М2 = ДеревоМнЧР1М2.Строки.Добавить();
			НовСтрокаМнЧР1М2.Данные = Новый Структура;
			НовСтрокаМнЧР1М2.Данные.Вставить("П00001М203000", "");
			НовСтрокаМнЧР1М2.Данные.Вставить("П00001М204000", 0);
			НовСтрокаМнЧР1М2.ДанныеМногострочныхЧастей = Новый Структура;
			
			СтрокаМнЧР1М1.ДанныеМногострочныхЧастей.Вставить(СтруктураРеквизитовФормы.мИдГруппыР1М2, ДеревоМнЧР1М2);
			
		КонецЕсли;
		
		СтрокаМнЧР1М1.Данные.Вставить("П00001М102000", СтрокаТЗ_Ур0.КБК);
		СтрокаМнЧР1М1.Данные.Вставить("П00001М105000", СтрокаТЗ_Ур0.СуммаКУменьшению);
		СтрокаМнЧР1М1.Данные.Вставить("П00001М105500", СтрокаТЗ_Ур0.СуммаКВозмещению);
		СтрокаМнЧР1М1.Данные.Вставить("П00001М106000", СтрокаТЗ_Ур0.СуммаКЗачету);
		
		ДеревоМнЧР1М2 = СтрокаМнЧР1М1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М2];
		
		ТЗ_Ур1 = ТЗ.Скопировать();
		ТЗ_Ур1.Свернуть("КБК,КодСрокаУплаты", "СуммаКУплате");
		ТЗ_Ур1.Сортировать("КодСрокаУплаты");
		
		СтрокиТЗ_Ур1 = ТЗ_Ур1.НайтиСтроки(Новый Структура("КБК", СтрокаТЗ_Ур0.КБК));
		
		Если СтрокиТЗ_Ур1.Количество() > 0 Тогда
			СтрокаТЗ_Ур1 = СтрокиТЗ_Ур1[0];
			Пока НЕ ЗначениеЗаполнено(СтрокаТЗ_Ур1.КодСрокаУплаты) Цикл
				СтрокиТЗ_Ур1.Удалить(0);
				Если СтрокиТЗ_Ур1.Количество() = 0 Тогда
					Прервать;
				Иначе
					СтрокаТЗ_Ур1 = СтрокиТЗ_Ур1[0];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Для Инд_Ур1 = 0 По СтрокиТЗ_Ур1.Количество() - 1 Цикл
			
			СтрокаТЗ_Ур1 = СтрокиТЗ_Ур1[Инд_Ур1];
			
			Если Инд_Ур1 = 0 Тогда
				
				СтрокаМнЧР1М2 = ДеревоМнЧР1М2.Строки[0];
				
			Иначе
				
				СтрокаМнЧР1М2 = ДеревоМнЧР1М2.Строки.Добавить();
				СтрокаМнЧР1М2.Данные = Новый Структура;
				СтрокаМнЧР1М2.ДанныеМногострочныхЧастей = Новый Структура;
				
			КонецЕсли;
			
			СтрокаМнЧР1М2.Данные.Вставить("П00001М203000", СтрокаТЗ_Ур1.КодСрокаУплаты);
			СтрокаМнЧР1М2.Данные.Вставить("П00001М204000", СтрокаТЗ_Ур1.СуммаКУплате);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ДеревоР1.Строки[0].Данные.Вставить("П000010001003", СохрОКТМО);
	
	ПоместитьВоВременноеХранилище(ДеревоР1, СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
		НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
		ВывестиДанныеВТабличныйДокумент("Раздел1", НовыеНомераСтрокМногоуровнегоРаздела);
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
	Структ = Новый Структура;
	Структ.Вставить("П00106М346003");
	Структ.Вставить("П00106М348003");
	Структ.Вставить("П00106М349003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Приложение614", Структ);
	
	Структ = Новый Структура;
	Структ.Вставить("П00106М132003");
	Структ.Вставить("П00106М237003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Приложение612_613", Структ);
	
	Структ = Новый Структура;
	Структ.Вставить("П001050006003");
	Структ.Вставить("П001050010003");
	Структ.Вставить("П001050011003");
	Структ.Вставить("П00105М130003");
	Структ.Вставить("П00105М131003");
	Структ.Вставить("П00105М132003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Приложение5", Структ);
	
	Структ = Новый Структура;
	Структ.Вставить("П001020005503");
	Структ.Вставить("П00102М110000");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Приложение2", Структ);
	
	Структ = Новый Структура;
	Структ.Вставить("П00101М100005");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Приложение1", Структ);
	
	Структ = Новый Структура;
	
	Если Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= 2024 Тогда
		
		// Ручное редактирование строки 080.
		
	Иначе
		
		Структ.Вставить("П00003М208003");
		
	КонецЕсли;
	
	Структ.Вставить("П00003М209003");
	Структ.Вставить("П00003М214003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел3", Структ);
	
	Структ = Новый Структура;
	Структ.Вставить("П00021М100002");
	Структ.Вставить("П00024М100002");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел2", Структ);
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаИПроверкаВыгрузкиЭлектронногоПредставленияИЗагрузкаОтчетаИзФайла

&НаКлиенте
Процедура СравнитьОтчеты(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СравнитьОтчетыЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(, ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьОтчетыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьСравнениеКлиент.СравнитьОтчеты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция СравнениеОтчетов(ДанныеДляСравнения) Экспорт
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Отчет ""%1"" не сохранен.';
																	|en = 'Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат СравнениеОтчетовНаСервере(ДанныеДляСравнения);
	
КонецФункции

&НаСервере
Функция СравнениеОтчетовНаСервере(ДанныеДляСравнения)
	
	СформироватьСтруктуруПоказателей();
	
	ПараметрыОтчета = СформироватьСтруктуруПараметров();
	
	ДеревоДляСравнения = ИзвлечьСтруктуруXML("СхемаВыгрузки504");
	
	Результат = РегламентированнаяОтчетностьСравнение.СравнениеОтчетов(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляСравнения, ДеревоДляСравнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗагрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьЗагрузкаКлиент.ЗагрузитьИзФайлаОтчет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаОтчетаИзФайла(ДанныеДляЗагрузки) Экспорт
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Отчет ""%1"" не сохранен.';
																	|en = 'Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок));
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки)
	
	СформироватьСтруктуруПоказателей();
	
	ПараметрыОтчета = СформироватьСтруктуруПараметров();
	
	ДеревоДляЗагрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки504");
	
	Если НЕ РегламентированнаяОтчетностьЗагрузка.ЗагрузкаОтчетаИзФайла(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляЗагрузки, ДеревоДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = Неопределено;
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
	"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтотОбъект);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина, ПроверятьВозможностьВыгрузки = Истина) Экспорт
	
	Перем ПараметрыВыгрузки;
	
	Если Модифицированность Тогда
		ТекстЗаголовка = ЗаголовокРегламентированногоОтчета(
		СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		
		ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
		Если СтрНайти(ТекстЗаголовка, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Отчет """ + ТекстЗаголовка + """ не сохранен");
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если Открыта() Тогда
		Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
			<> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Перед выгрузкой необходимо установить единицу измерения ""в рублях""';
				|en = 'Перед выгрузкой необходимо установить единицу измерения ""в рублях""'"));
			
			Возврат Ложь;
			
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
			
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Перед выгрузкой необходимо установить точность ""0""';
															|en = 'Перед выгрузкой необходимо установить точность ""0""'"));
			
			Возврат Ложь;
			
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния
		РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения_СКП(ЭтотОбъект, Новый Структура);
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки, ПроверятьВозможностьВыгрузки) Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗаголовокРегламентированногоОтчета(ДатаНач, ДатаКон, Периодичность = Неопределено) Экспорт
	
	СтрПериодОтчета = ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
	КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
	Если СтрНайти(Заголовок, СтрПериодОтчета) = 0 Тогда
		Возврат Заголовок + " за " + СтрПериодОтчета;
	Иначе
		Возврат Заголовок;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки, ПараметрыВыгрузки, ПроверятьВозможностьВыгрузки)
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки504");
	
	Если ПроверятьВозможностьВыгрузки И НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	ТекстВыгрузки = Новый Массив;
	
	ТекстВыгр = ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки);
	ТекстВыгрузки.Добавить(ВыгрузкаОтчета(ТекстВыгр, ПараметрыВыгрузки));
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПоказателей()
	
	мДанныеОтчета = Новый Структура;
	
	СохрСтруктура = СохраненныеДанныеОтчета();
	ПоказателиОтчета = СохрСтруктура.ПоказателиОтчета;
	Для Каждого Раздел Из ПоказателиОтчета Цикл
		мДанныеОтчета.Вставить(СтрЗаменить(Раздел.Ключ, "ПолеТабличногоДокумента", ""),
		РегламентированнаяОтчетность.СвернутьДанныеТабличногоПоля(Раздел.Значение));
	КонецЦикла;
	
	Для Каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
		мДанныеОтчета.Вставить(Раздел.Ключ);
	КонецЦикла;
	
КонецФункции

&НаСервере
Функция СформироватьСтруктуруПараметров()
	
	Титульный = мДанныеОтчета.Титульный;
	
	ПараметрыВыгрузки = Новый Структура;
	
	ПараметрыВыгрузки.Вставить("ЭтоИП", СтруктураРеквизитовФормы.ИП);
	
	ПараметрыВыгрузки.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	ПараметрыВыгрузки.Вставить("ДатаДок",  Формат(ТекущаяДатаСеанса(), "ДФ=дд.ММ.гггг"));
	ПараметрыВыгрузки.Вставить("Период",   СокрЛП(Титульный.Период));
	ПараметрыВыгрузки.Вставить("ОтчетГод", Формат(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания, "ДФ=гггг"));
	ПараметрыВыгрузки.Вставить("КодНО",    СокрЛП(Титульный.НалоговыйОрган));
	ПараметрыВыгрузки.Вставить("НомКорр",  Строка(СтруктураРеквизитовФормы.мСохраненныйДок.Вид));
	ПараметрыВыгрузки.Вставить("ПоМесту",  СокрЛП(Титульный.ПоМесту));
	
	СтруктураПараметров = Новый Структура("Организация, ДатаЗначения",
	СтруктураРеквизитовФормы.Организация, СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания);
	ПараметрыВыгрузки.Вставить("КодИФНСПосредника",
	РегламентированнаяОтчетность.КодНалоговогоОрганаПолучателяОтчетности(СтруктураПараметров));
	
	ПараметрыВыгрузки.Вставить("Тлф", СокрЛП(Титульный.ТелОрганизации));
	
	ПараметрыВыгрузки.Вставить("НаимОрг", СокрЛП(Титульный.НаимОрг));
	ПараметрыВыгрузки.Вставить("ИННОрг",  СокрЛП(СтруктураРеквизитовФормы.Организация.ИНН));
	ПараметрыВыгрузки.Вставить("КПП",     СокрЛП(Титульный.КПП));
	
	ФИОИП = РегламентированнаяОтчетность.РазложитьФИО(Титульный.НаимОрг);
	ПараметрыВыгрузки.Вставить("Фамилия",  ФИОИП.Фамилия);
	ПараметрыВыгрузки.Вставить("Имя",      ФИОИП.Имя);
	ПараметрыВыгрузки.Вставить("Отчество", ФИОИП.Отчество);
	
	ПараметрыВыгрузки.Вставить("ФормРеорг", СокрЛП(Титульный.КодФормыРеорганизации));
	ПараметрыВыгрузки.Вставить("ИННРеорг",  СокрЛП(Титульный.ИННРеорганизованнойОрганизации));
	ПараметрыВыгрузки.Вставить("КППРеорг",  СокрЛП(Титульный.КППРеорганизованнойОрганизации));
	
	ПараметрыВыгрузки.Вставить("ПрПодп",      СокрЛП(Титульный.ПрПодп));
	ПараметрыВыгрузки.Вставить("НаимОргПред", СокрЛП(Титульный.ОргУп));
	ПараметрыВыгрузки.Вставить("НаимДокПред", СокрЛП(Титульный.ДокУпПред));
	ФИОПодписанта = РегламентированнаяОтчетность.РазложитьФИО(Титульный.ОргПодписант);
	ПараметрыВыгрузки.Вставить("ФамилияПодписанта",  ФИОПодписанта.Фамилия);
	ПараметрыВыгрузки.Вставить("ИмяПодписанта",      ФИОПодписанта.Имя);
	ПараметрыВыгрузки.Вставить("ОтчествоПодписанта", ФИОПодписанта.Отчество);
	
	ПараметрыВыгрузки.Вставить("ИмяКлючевогоУзлаСодержательнойЧасти", "АкцСпиртАлк");
	
	ПараметрыВыгрузки.Вставить("ИдФайл", ИдентификаторФайлаВыгрузки(ПараметрыВыгрузки, "NO_AKCALK"));
	
	Возврат ПараметрыВыгрузки;
	
КонецФункции

&НаСервере
Функция ИзвлечьСтруктуруXML(ИмяМакета)
	
	ДеревоСтруктуры = Новый ДеревоЗначений;
	ДеревоСтруктуры.Колонки.Добавить("Код");
	ДеревоСтруктуры.Колонки.Добавить("Тип");
	ДеревоСтруктуры.Колонки.Добавить("Формат");
	ДеревоСтруктуры.Колонки.Добавить("МинРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("МаксРазмерность");
	ДеревоСтруктуры.Колонки.Добавить("Обязательность");
	ДеревоСтруктуры.Колонки.Добавить("Многостраничность");
	ДеревоСтруктуры.Колонки.Добавить("Многострочность");
	ДеревоСтруктуры.Колонки.Добавить("Раздел");
	ДеревоСтруктуры.Колонки.Добавить("Ключ");
	ДеревоСтруктуры.Колонки.Добавить("Условие");
	ДеревоСтруктуры.Колонки.Добавить("ЗначениеПоУмолчанию");
	ДеревоСтруктуры.Колонки.Добавить("Значение");
	ДеревоСтруктуры.Колонки.Добавить("Представление");
	ДеревоСтруктуры.Колонки.Добавить("Показатели");
	
	Макет = ОбъектОтчета(ИмяФормы).ПолучитьМакет(ИмяМакета);
	
	ВысотаТаблицы = Макет.ВысотаТаблицы;
	
	УчтенныеГруппы = Новый Соответствие;
	
	Для Уровень = 0 По Макет.КоличествоУровнейГруппировокСтрок() - 1 Цикл
		Макет.ПоказатьУровеньГруппировокСтрок(Уровень);
		Для НомерСтроки = 2 По ВысотаТаблицы Цикл
			НомСтр = ВысотаТаблицы - НомерСтроки + 2;
			Если Макет.Область(НомСтр, 0, НомСтр, 0).Видимость И УчтенныеГруппы.Получить(НомСтр) = Неопределено Тогда
				
				РодительскийУзел = ДеревоСтруктуры;
				Если Уровень <> 0 Тогда
					Для Инд = 1 По НомСтр - 2 Цикл
						Узел = УчтенныеГруппы.Получить(НомСтр - Инд);
						Если Узел <> Неопределено Тогда
							РодительскийУзел = Узел;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				НовСтр = РодительскийУзел.Строки.Вставить(0);
				НовСтр.Код = СокрЛП(Макет.Область(НомСтр, 1, НомСтр, 1).Текст);
				НовСтр.Раздел = СокрЛП(Макет.Область(НомСтр, 2, НомСтр, 2).Текст);
				НовСтр.Ключ = СокрЛП(Макет.Область(НомСтр, 3, НомСтр, 3).Текст);
				НовСтр.Тип = СокрЛП(Макет.Область(НомСтр, 4, НомСтр, 4).Текст);
				НовСтр.Формат = СокрЛП(Макет.Область(НомСтр, 5, НомСтр, 5).Текст);
				МинРазмерность = СокрЛП(Макет.Область(НомСтр, 6, НомСтр, 6).Текст);
				НовСтр.МинРазмерность = ?(ПустаяСтрока(МинРазмерность), ?(НовСтр.Формат = "N", 99999, 0), Число(МинРазмерность));
				МаксРазмерность = СокрЛП(Макет.Область(НомСтр, 7, НомСтр, 7).Текст);
				НовСтр.МаксРазмерность = ?(ПустаяСтрока(МаксРазмерность), 99999, Число(МаксРазмерность));
				НовСтр.Обязательность = СокрЛП(Макет.Область(НомСтр, 8, НомСтр, 8).Текст);
				НовСтр.Многостраничность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 9, НомСтр, 9).Текст);
				НовСтр.Многострочность = НЕ ПустаяСтрока(Макет.Область(НомСтр, 10, НомСтр, 10).Текст);
				НовСтр.Условие = СокрЛП(Макет.Область(НомСтр, 11, НомСтр, 11).Текст);
				НовСтр.ЗначениеПоУмолчанию = СокрЛП(Макет.Область(НомСтр, 12, НомСтр, 12).Текст);
				НовСтр.Представление = СокрЛП(Макет.Область(НомСтр, 13, НомСтр, 13).Текст);
				
				УчтенныеГруппы.Вставить(НомСтр, НовСтр);
				
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ДеревоСтруктуры;
	
КонецФункции

&НаСервере
Функция ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	СтатусПроверки = Истина;
	
	СохрСтруктура = СохраненныеДанныеОтчета();
	
	ВозможныеКодыПоМесту = Новый Массив;
	ВозможныеКодыПоМесту.Добавить("120");
	ВозможныеКодыПоМесту.Добавить("213");
	ВозможныеКодыПоМесту.Добавить("214");
	ВозможныеКодыПоМесту.Добавить("215");
	ВозможныеКодыПоМесту.Добавить("216");
	ВозможныеКодыПоМесту.Добавить("220");
	ВозможныеКодыПоМесту.Добавить("331");
	
	ВозможныеКодыПериода = Новый Массив;
	Для Инд = 1 По 12 Цикл
		ВозможныеКодыПериода.Добавить(Формат(Инд, "ЧЦ=2;ЧВН="));
	КонецЦикла;
	
	ВозможныеКодыПериодаРеорг = Новый Массив;
	Для Инд = 71 По 82 Цикл
		ВозможныеКодыПериодаРеорг.Добавить(Формат(Инд, "ЧГ="));
	КонецЦикла;
	
	ВозможныеКодыФормыРеорганизции = Новый Массив;
	ВозможныеКодыФормыРеорганизции.Добавить("0");
	ВозможныеКодыФормыРеорганизции.Добавить("1");
	ВозможныеКодыФормыРеорганизции.Добавить("2");
	ВозможныеКодыФормыРеорганизции.Добавить("3");
	ВозможныеКодыФормыРеорганизции.Добавить("5");
	ВозможныеКодыФормыРеорганизции.Добавить("6");
	ВозможныеКодыФормыРеорганизции.Добавить("9");
	
	// Титульный лист.
	Если ПараметрыВыгрузки.ЭтоИП Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС("Не задан ИНН налогоплательщика", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
			СообщитьВТС("Задан ИНН налогоплательщика, не состоящий из 12 цифр", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Фамилия) Тогда
			СообщитьВТС("Не задана фамилия налогоплательщика", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		ИначеЕсли НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Имя) Тогда
			СообщитьВТС("Не задано имя налогоплательщика", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			СообщитьВТС("Не задан ИНН налогоплательщика", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			СообщитьВТС("Задан ИНН налогоплательщика, не состоящий из 10 цифр", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			СообщитьВТС("Не задан КПП налогоплательщика", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			СообщитьВТС("Задан КПП налогоплательщика, не состоящий из 9 символов", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимОрг) Тогда
			СообщитьВТС("Не задано наименование налогоплательщика", "Титульный", "НаимОрг");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.Период) Тогда
		СообщитьВТС("Не задан код налогового периода", "Титульный", "Период");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПериода.Найти(ПараметрыВыгрузки.Период) = Неопределено
		И ВозможныеКодыПериодаРеорг.Найти(ПараметрыВыгрузки.Период) = Неопределено Тогда
		СообщитьВТС("Задан некорректный код налогового периода", "Титульный", "Период");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		СообщитьВТС("Не задан код налогового органа", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		СообщитьВТС("Задан код налогового органа, не состоящий из 4 цифр", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ПоМесту) Тогда
		СообщитьВТС("Не задан код места представления налоговой декларации", "Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	ИначеЕсли ВозможныеКодыПоМесту.Найти(ПараметрыВыгрузки.ПоМесту) = Неопределено Тогда
		СообщитьВТС("Задан некорректный код места представления налоговой декларации", "Титульный", "ПоМесту");
		СтатусПроверки = Ложь;
	ИначеЕсли ПараметрыВыгрузки.ПоМесту = "213" Тогда
		Символы56КПП = Сред(ПараметрыВыгрузки.КПП, 5, 2);
		Если Символы56КПП <> "50" Тогда
			СообщитьВТС(
			"Если код места представления декларации равен 213, 5-й и 6-й символы КПП организации должны быть равны 50",
			"Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыВыгрузки.ПрПодп = "2" ИЛИ (НЕ ПараметрыВыгрузки.ЭтоИП И ПараметрыВыгрузки.ПрПодп = "1") Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФамилияПодписанта) Тогда
			СообщитьВТС("Не задана фамилия подписанта", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИмяПодписанта) Тогда
			СообщитьВТС("Не задано имя подписанта", "Титульный", "ОргПодписант");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если ПараметрыВыгрузки.ПрПодп = "2" И НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.НаимДокПред) Тогда
		СообщитьВТС("Не заданы наименование и реквизиты документа, подтверждающего полномочия представителя",
		"Титульный", "ДокУпПред");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыВыгрузки.ИННРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.КППРеорг)
	 ИЛИ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
			СообщитьВТС("Не задан код формы реорганизации",
			"Титульный", "КодФормыРеорганизации");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если ЗначениеЗаполнено(ПараметрыВыгрузки.ФормРеорг) Тогда
			Если ВозможныеКодыФормыРеорганизции.Найти(ПараметрыВыгрузки.ФормРеорг) = Неопределено Тогда
				СообщитьВТС(
				"Задано некорректное значение кода формы реорганизации (ликвидации) / кода закрытия обособленного подразделения",
				"Титульный", "КодФормыРеорганизации");
				СтатусПроверки = Ложь;
			ИначеЕсли ПараметрыВыгрузки.ФормРеорг <> "0" Тогда
				ЧастьСообщения = ?(ПараметрыВыгрузки.ФормРеорг = "9",
				" закрытого обособленного подразделения", " реорганизованной организации");
				ДлинаИННРеорг = СтрДлина(ПараметрыВыгрузки.ИННРеорг);
				Если ДлинаИННРеорг <> 10 Тогда
					СообщитьВТС("Не" + ?(ДлинаИННРеорг = 0, "", "верно") + " задан ИНН" + ЧастьСообщения,
					"Титульный", "ИННРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
				ДлинаКППРеорг = СтрДлина(ПараметрыВыгрузки.КППРеорг);
				Если ДлинаКППРеорг <> 9 Тогда
					СообщитьВТС("Не" + ?(ДлинаКППРеорг = 0, "", "верно") + " задан КПП" + ЧастьСообщения,
					"Титульный", "КППРеорганизованнойОрганизации");
					СтатусПроверки = Ложь;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	// Раздел 1.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел1"];
	НомСтраницы = "1";
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел1") Тогда
		
		ВозмКодыР1Стр030 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00001М203000");
		
		Ветка = ДеревоРаздела.Строки[0];
		
		ДлинаЗначПок = СтрДлина(СокрЛП(Ветка.Данные.П000010001003));
		Если ДлинаЗначПок <> 8 И ДлинаЗначПок <> 11 Тогда
			СообщитьВТС("В разделе 1 не" + ?(ДлинаЗначПок = 0, "", "верно") + " задан код по ОКТМО",
			"Раздел1", "П000010001003", НомСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М1];
		
		Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
			
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				
				ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
				НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
				
				ДлинаЗначПок = СтрДлина(СокрЛП(СтрокаМнЧ.Данные["П00001М102000"]));
				Если ДлинаЗначПок <> 20 Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 1: не" + ?(ДлинаЗначПок = 0, "", "верно")
					+ " задан код бюджетной классификации", "Раздел1", "П00001М102000_" + НомСтроки, НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М2];
				КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
				
				Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
					Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаПодчМнЧ) Тогда
						ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
						НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
						
						Текст_СтрокаГруппыСтрок
						= ?(КолСтрокПодчМнЧ = 1, "", "в строке " + НомСтрокиПодчМнЧ + " группы строк 030-040 ");
						
						ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00001М203000"]);
						Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
							СообщитьВТС("Строка " + НомСтроки + " раздела 1: " + Текст_СтрокаГруппыСтрок + "не задан код срока уплаты",
							"Раздел1", "П00001М203000_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли ВозмКодыР1Стр030.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
							СообщитьВТС("Строка " + НомСтроки + " раздела 1: " + Текст_СтрокаГруппыСтрок
							+ "код срока уплаты должен принимать одно из значений: " + ВозмКодыР1Стр030.СтрокаЗначений,
							"Раздел1", "П00001М203000_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
				
			КонецЦикла;
			
		Иначе
			СообщитьВТС("В разделе 1 не заполнены строки 020-060", "Раздел1", "П00001М102000_1", НомСтраницы);
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	Иначе
		СообщитьВТС("Не заполнен раздел 1", "Раздел1", "П000010001003", НомСтраницы);
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	// Раздел 2.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел2"];
	
	ВозмКодыР21Гр1  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00021М100001");
	ВозмКодыР21Гр2  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00021М100002");
	ВозмКодыР22Гр1  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00022М100001");
	ВозмКодыР22Гр2  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00022М100002");
	ВозмКодыР23Гр1  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00023М100001");
	ВозмКодыР24Гр1  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00024М100001");
	ВозмКодыР241Гр1 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00241М100001");
	ВозмКодыР25Гр1  = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00025М100001");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Раздел2") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П000020001003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы
				+ ": не задан код вида подакцизного товара", "Раздел2", "П000020001003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
				СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы
				+ ": задан код вида подакцизного товара, не состоящий из 3 цифр", "Раздел2", "П000020001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДлинаЗначПок = СтрДлина(СокрЛП(Ветка.Данные["П000020002003"]));
			Если ДлинаЗначПок <> 20 Тогда
				СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": не" + ?(ДлинаЗначПок = 0, "", "верно")
				+ " задан код бюджетной классификации", "Раздел2", "П000020002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Подраздел 2.1.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР21М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00021М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.1 не задан код показателя", "Раздел2", "П00021М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР21Гр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.1 код показателя должен принимать одно из значений: "
						+ ВозмКодыР21Гр1.СтрокаЗначений, "Раздел2", "П00021М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00021М100002"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.1 не задан признак применения ставки акциза",
						"Раздел2", "П00021М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР21Гр2.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.1 признак применения ставки акциза должен принимать одно из значений: "
						+ ВозмКодыР21Гр2.СтрокаЗначений, "Раздел2", "П00021М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 2.2.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР22М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00022М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.2 не задан код показателя", "Раздел2", "П00022М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР22Гр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.2 код показателя должен принимать одно из значений: "
						+ ВозмКодыР22Гр1.СтрокаЗначений, "Раздел2", "П00022М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00022М100002"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.2 не задан признак применения ставки акциза",
						"Раздел2", "П00022М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР22Гр2.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.2 признак применения ставки акциза должен принимать одно из значений: "
						+ ВозмКодыР22Гр2.СтрокаЗначений, "Раздел2", "П00022М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 2.3.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР23М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					КодПоказателя23 = СокрЛП(СтрокаМнЧ.Данные["П00023М100001"]);
					Если НЕ ЗначениеЗаполнено(КодПоказателя23) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.3 не задан код показателя", "Раздел2", "П00023М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР23Гр1.МассивЗначений.Найти(КодПоказателя23) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.3 код показателя должен принимать одно из значений: "
						+ ВозмКодыР23Гр1.СтрокаЗначений, "Раздел2", "П00023М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли КодПоказателя23 = "30014" ИЛИ КодПоказателя23 = "30015" ИЛИ КодПоказателя23 = "30016" Тогда
						
						ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00023М100004"]);
						Если ЗначениеЗаполнено(ЗначПок) Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 не должен быть задан код налогового периода, если код показателя равен "
							+ КодПоказателя23, "Раздел2", "П00023М100004_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00023М100005"]);
						Если ЗначениеЗаполнено(ЗначПок) Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 не должен быть задан год налогового периода, если код показателя равен "
							+ КодПоказателя23, "Раздел2", "П00023М100005_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
					Иначе// КодПоказателя23 не равен "30014", "30015" или "30016"
						
						ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00023М100004"]);
						Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 не задан код налогового периода", "Раздел2", "П00023М100004_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли ВозможныеКодыПериода.Найти(ЗначПок) = Неопределено Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 код налогового периода должен принимать одно из значений: "
							+ СтрСоединить(ВозможныеКодыПериода, ", "), "Раздел2", "П00023М100004_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
						ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00023М100005"]);
						Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 не задан год налогового периода", "Раздел2", "П00023М100005_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						ИначеЕсли СтрДлина(ЗначПок) <> 4 Тогда
							СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " подраздела 2.3 задан год налогового периода, не состоящий из 4 цифр",
							"Раздел2", "П00023М100005_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 2.4.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР24М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00024М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.4 не задан код показателя", "Раздел2", "П00024М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР24Гр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.4 код показателя должен принимать одно из значений: "
						+ ВозмКодыР24Гр1.СтрокаЗначений, "Раздел2", "П00024М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 2.4.1.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР241М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00241М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.4.1 не задан код показателя", "Раздел2", "П00241М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР241Гр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.4.1 код показателя должен принимать одно из значений: "
						+ ВозмКодыР241Гр1.СтрокаЗначений, "Раздел2", "П00241М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00241М100003"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.4.1 не задан регистрационный номер извещения",
						"Раздел2", "П00241М100003_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
			// Подраздел 2.5.
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР25М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00025М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 не задан код показателя", "Раздел2", "П00025М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыР25Гр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 код показателя должен принимать одно из значений: "
						+ ВозмКодыР25Гр1.СтрокаЗначений, "Раздел2", "П00025М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00025М100004"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 не задан код налогового периода", "Раздел2", "П00025М100004_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозможныеКодыПериода.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 код налогового периода должен принимать одно из значений: "
						+ СтрСоединить(ВозможныеКодыПериода, ", "), "Раздел2", "П00025М100004_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00025М100005"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 не задан год налогового периода", "Раздел2", "П00025М100005_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 4 Тогда
						СообщитьВТС("Раздел 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " подраздела 2.5 задан год налогового периода, не состоящий из 4 цифр",
						"Раздел2", "П00025М100005_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Раздел 3.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел3"];
	НомСтраницы = "1";
	Если ЗаполненРаздел(ДеревоРаздела, "Раздел3") Тогда
		
		ВозмКодыР3Стр010 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П000030001003");
		ВозмКодыР3Стр020 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00003М102003");
		ВозмКодыР3Стр050 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00003М205003");
		ВозмКодыР3Стр070 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00003М207003");
		
		Ветка = ДеревоРаздела.Строки[0];
		
		ЗначПок = СокрЛП(Ветка.Данные.П000030001003);
		Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
			СообщитьВТС("В разделе 3 не задан код вида подакцизного товара",
			"Раздел3", "П000030001003", НомСтраницы);
			СтатусПроверки = Ложь;
		ИначеЕсли ВозмКодыР3Стр010.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
			СообщитьВТС("В разделе 3 код вида подакцизного товара должен принимать значение: "
			+ ВозмКодыР3Стр010.СтрокаЗначений, "Раздел3", "П000030001003", НомСтраницы);
			СтатусПроверки = Ложь;
		КонецЕсли;
		
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР3М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			
			ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
			НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(СтрокаМнЧ.Данные.П00003М102003);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Строка " + НомСтроки + " раздела 3: не задан код показателя",
				"Раздел3", "П00003М102003_" + НомСтроки, НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ВозмКодыР3Стр020.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
				СообщитьВТС("Строка " + НомСтроки + " раздела 3: код показателя должен принимать одно из значений: "
				+ ВозмКодыР3Стр020.СтрокаЗначений, "Раздел3", "П00003М102003_" + НомСтроки, НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР3М2];
			КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
				НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
				
				Текст_СтрокаГруппыСтрок = ?(КолСтрокПодчМнЧ = 1, "", "в строке " + НомСтрокиПодчМнЧ + " группы строк 050-140 ");
				
				ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00003М205003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок
					+ "не задан код вида подакцизного товара",
					"Раздел3", "П00003М205003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли ВозмКодыР3Стр050.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок
					+ "код вида подакцизного товара должен принимать одно из значений: " + ВозмКодыР3Стр050.СтрокаЗначений,
					"Раздел3", "П00003М205003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00003М206003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок
					+ "не задан код бюджетной классификации",
					"Раздел3", "П00003М206003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(ЗначПок) <> 20 Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок
					+ "задан код бюджетной классификации, не состоящий из 20 цифр",
					"Раздел3", "П00003М206003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00003М207003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок + "не задан код показателя",
					"Раздел3", "П00003М207003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли ВозмКодыР3Стр070.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
					СообщитьВТС("Строка " + НомСтроки + " раздела 3: " + Текст_СтрокаГруппыСтрок
					+ "код показателя должен принимать одно из значений: " + ВозмКодыР3Стр070.СтрокаЗначений,
					"Раздел3", "П00003М207003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	// Приложение 1.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение1"];
	
	ВозмКодыГр1 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00101М100001");
	ВозмКодыГр2 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00101М100002");
	
	КодыГр1_ОбязательностьГр6и7
	= СтрРазделить("50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011,", ",", Ложь);
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Приложение1") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П001010001003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы
				+ ": не задан код вида подакцизного товара", "Приложение1", "П001010001003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
				СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы
				+ ": задан код вида подакцизного товара, не состоящий из 3 цифр", "Приложение1", "П001010001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП1М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					КодПоказателя_Гр1 = СокрЛП(СтрокаМнЧ.Данные["П00101М100001"]);
					
					ЗначПок = КодПоказателя_Гр1;
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код показателя", "Приложение1", "П00101М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыГр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " код показателя должен принимать одно из значений: "
						+ ВозмКодыГр1.СтрокаЗначений, "Приложение1", "П00101М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00101М100002"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан признак применения ставки акциза", "Приложение1", "П00101М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыГр2.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " признак применения ставки акциза должен принимать одно из значений: "
						+ ВозмКодыГр2.СтрокаЗначений, "Приложение1", "П00101М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00101М100006"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						Если КодыГр1_ОбязательностьГр6и7.Найти(КодПоказателя_Гр1) <> Неопределено Тогда
							СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " не задан код налогового периода", "Приложение1", "П00101М100006_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					ИначеЕсли ВозможныеКодыПериода.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " код налогового периода должен принимать одно из значений: "
						+ СтрСоединить(ВозможныеКодыПериода, ", "), "Приложение1", "П00101М100006_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00101М100007"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						Если КодыГр1_ОбязательностьГр6и7.Найти(КодПоказателя_Гр1) <> Неопределено Тогда
							СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
							+ " не задан год налогового периода", "Приложение1", "П00101М100007_" + НомСтроки, НомСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					ИначеЕсли СтрДлина(ЗначПок) <> 4 Тогда
						СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " задан год налогового периода, не состоящий из 4 цифр",
						"Приложение1", "П00101М100007_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				СообщитьВТС("Приложение 1 -> Страница " + НомСтраницы + ": не заполнены строки расчета налоговой базы",
				"Приложение1", "П00101М100001_1", НомСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Приложение 2.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение2"];
	
	ВозмКодыСтр001 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П001020000103");
	ВозмКодыСтр070 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00102М207003");
	ВозмКодыСтр080 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00102М308003");
	ВозмКодыСтр090 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00102М409003");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Приложение2") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П001020000103"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы + ": не задан признак документа",
				"Приложение2", "П001020000103", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ВозмКодыСтр001.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы + ": признак документа должен принимать одно из значений: "
				+ ВозмКодыСтр001.СтрокаЗначений, "Приложение2", "П001020000103", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001020001003"])) Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы
				+ ": не задан номер банковской гарантии (договора поручительства)", "Приложение2", "П001020001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001020002003"]) Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы
				+ ": не задана дата выдачи банковской гарантии (дата заключения договора поручительства)",
				"Приложение2", "П001020002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001020003003"]) Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы
				+ ": не задана дата начала срока действия банковской гарантии (договора поручительства)",
				"Приложение2", "П001020003003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001020004003"]) Тогда
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы
				+ ": не задана дата окончания срока действия банковской гарантии (договора поручительства)",
				"Приложение2", "П001020004003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00102М106000"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код вида подакцизного товара", "Приложение2", "П00102М106000_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение2", "П00102М106000_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М2];
					КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
					
					Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
						Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаПодчМнЧ) Тогда
							ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
							НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
							
							Текст_СтрокаГруппыСтрок = ?(КолСтрокПодчМнЧ = 1,
							"Приложение 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки,
							"Приложение 2 -> Страница " + НомСтраницы + " -> Строка " + НомСтроки + ": в " + НомСтрокиПодчМнЧ
							+ "-й строке группы ""Сумма акциза, освобожденная от уплаты в связи с представлением банковской гарантии "
							+ "(договора поручительства) при реализации подакцизного товара за пределы территории Российской Федерации (стр. 070)""");
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М207003"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан код показателя",
								"Приложение2", "П00102М207003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли ВозмКодыСтр070.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " код показателя должен принимать одно из значений: "
								+ ВозмКодыСтр070.СтрокаЗначений,
								"Приложение2", "П00102М207003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
					ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М3];
					КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
					
					Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
						Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаПодчМнЧ) Тогда
							ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
							НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
							
							Текст_СтрокаГруппыСтрок = ?(КолСтрокПодчМнЧ = 1,
							"Приложение 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки,
							"Приложение 2 -> Страница " + НомСтраницы + " -> Строка " + НомСтроки + ": в " + НомСтрокиПодчМнЧ
							+ "-й строке группы ""Реализация подакцизных товаров, факт экспорта (реэкспорта) которых документально "
							+ "подтвержден в налоговом периоде (стр. 080)""");
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М308003"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан код показателя",
								"Приложение2", "П00102М308003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли ВозмКодыСтр080.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " код показателя должен принимать одно из значений: "
								+ ВозмКодыСтр080.СтрокаЗначений,
								"Приложение2", "П00102М308003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М308006"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан код налогового периода",
								"Приложение2", "П00102М308006_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли ВозможныеКодыПериода.Найти(ЗначПок) = Неопределено Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " код налогового периода должен принимать одно из значений: "
								+ СтрСоединить(ВозможныеКодыПериода, ", "),
								"Приложение2", "П00102М308006_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М308007"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан год налогового периода",
								"Приложение2", "П00102М308007_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли СтрДлина(ЗначПок) <> 4 Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " задан год налогового периода, не состоящий из 4 цифр",
								"Приложение2", "П00102М308007_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
					ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М4];
					КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
					
					Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
						Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаПодчМнЧ) Тогда
							ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
							НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
							
							Текст_СтрокаГруппыСтрок = ?(КолСтрокПодчМнЧ = 1,
							"Приложение 2 -> Страница " + НомСтраницы + ": в строке " + НомСтроки,
							"Приложение 2 -> Страница " + НомСтраницы + " -> Строка " + НомСтроки + ": в " + НомСтрокиПодчМнЧ
							+ "-й строке группы ""Реализация подакцизных товаров, факт экспорта (реэкспорта) которых документально "
							+ "подтвержден в предыдущих налоговых периодах (стр. 090)""");
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М409003"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан код показателя",
								"Приложение2", "П00102М409003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли ВозмКодыСтр090.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " код показателя должен принимать одно из значений: "
								+ ВозмКодыСтр090.СтрокаЗначений,
								"Приложение2", "П00102М409003_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М409006"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан код налогового периода",
								"Приложение2", "П00102М409006_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли ВозможныеКодыПериода.Найти(ЗначПок) = Неопределено Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " код налогового периода должен принимать одно из значений: "
								+ СтрСоединить(ВозможныеКодыПериода, ", "),
								"Приложение2", "П00102М409006_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							ЗначПок = СокрЛП(СтрокаПодчМнЧ.Данные["П00102М409007"]);
							Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан год налогового периода",
								"Приложение2", "П00102М409007_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							ИначеЕсли СтрДлина(ЗначПок) <> 4 Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " задан год налогового периода, не состоящий из 4 цифр",
								"Приложение2", "П00102М409007_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
					
				КонецЦикла;
				
			Иначе
				СообщитьВТС("Приложение 2 -> Страница " + НомСтраницы
				+ ": не заполнены ""Сведения о реализации подакцизных товаров за пределы территории РФ "
				+ "и документальном подтверждении факта экспорта (реэкспорта) подакцизных товаров""",
				"Приложение2", "П00102М106000_1", НомСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Приложение 3.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение3"];
	
	Если ЗаполненРаздел(ДеревоРаздела, "Приложение3") Тогда
		
		ВозмКодыГр1 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00103М100001");
		
		Для каждого Ветка Из ДеревоРаздела.Строки Цикл
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П001030001003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": не задан ИНН организации",
				"Приложение3", "П001030001003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 10 Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": задан ИНН организации, не состоящий из 10 цифр",
				"Приложение3", "П001030001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001030002003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": не задан КПП организации",
				"Приложение3", "П001030002003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 9 Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": задан КПП организации, не состоящий из 9 символов",
				"Приложение3", "П001030002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001030003003"])) Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": не задан регистрационный номер извещения",
				"Приложение3", "П001030003003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001030004003"]) Тогда
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": не задана дата регистрации извещения",
				"Приложение3", "П001030004003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП3М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00103М100001"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код показателя", "Приложение3", "П00103М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыГр1.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " код показателя должен принимать одно из значений: "
						+ ВозмКодыГр1.СтрокаЗначений, "Приложение3", "П00103М100001_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00103М100002"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код вида этилового спирта", "Приложение3", "П00103М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " задан код вида этилового спирта, не состоящий из 3 цифр",
						"Приложение3", "П00103М100002_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00103М100004"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код вида подакцизного товара", "Приложение3", "П00103М100004_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение3", "П00103М100004_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				СообщитьВТС("Приложение 3 -> Страница " + НомСтраницы + ": не заполнены сведения об объемах этилового спирта",
				"Приложение3", "П00103М100001_1", НомСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
	// Приложение 4.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение4"];
	
	ВозмКодыСтр001 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П001040000103");
	ВозмКодыСтр040 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П00104М104000");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Приложение4") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П001040000103"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": не задан признак организации",
				"Приложение4", "П001040000103", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ВозмКодыСтр001.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": признак организации должен принимать одно из значений: "
				+ ВозмКодыСтр001.СтрокаЗначений, "Приложение4", "П001040000103", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001040001003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": не задан ИНН",
				"Приложение4", "П001040001003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 10 Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": задан ИНН, не состоящий из 10 цифр",
				"Приложение4", "П001040001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001040002003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": не задан КПП",
				"Приложение4", "П001040002003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 9 Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": задан КПП, не состоящий из 9 символов",
				"Приложение4", "П001040002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001040003003"])) Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы
				+ ": не задана серия свидетельства", "Приложение4", "П001040003003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001040003004"])) Тогда
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы
				+ ": не задан номер свидетельства", "Приложение4", "П001040003004", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП4М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00104М104000"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код вида этилового спирта", "Приложение4", "П00104М104000_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли ВозмКодыСтр040.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
						СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " код вида этилового спирта должен принимать одно из значений: " + ВозмКодыСтр040.СтрокаЗначений,
						"Приложение4", "П00104М104000_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
					ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП4М2];
					КолСтрокПодчМнЧ = ДанныеПодчМнЧ.Строки.Количество();
					
					Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
						Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
							ИндСтрокиПодчМнЧ = ДанныеПодчМнЧ.Строки.Индекс(СтрокаПодчМнЧ);
							НомСтрокиПодчМнЧ = Формат(ИндСтрокиПодчМнЧ + 1, "ЧГ=");
							
							Текст_СтрокаГруппыСтрок = ?(КолСтрокПодчМнЧ = 1,
							"Приложение 4 -> Страница " + НомСтраницы + ": в строке " + НомСтроки,
							"Приложение 4 -> Страница " + НомСтраницы + " -> Строка " + НомСтроки + ": в " + НомСтрокиПодчМнЧ
							+ "-й строке ""Сведений счета-фактуры""");
							
							Если НЕ ЗначениеЗаполнено(СокрЛП(СтрокаПодчМнЧ.Данные["П00104М205000"])) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задан номер счета-фактуры",
								"Приложение4", "П00104М205000_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
							Если НЕ ЗначениеЗаполнено(СтрокаПодчМнЧ.Данные["П00104М206000"]) Тогда
								СообщитьВТС(Текст_СтрокаГруппыСтрок + " не задана дата счета-фактуры",
								"Приложение4", "П00104М206000_" + НомСтроки + "_" + НомСтрокиПодчМнЧ, НомСтраницы);
								СтатусПроверки = Ложь;
							КонецЕсли;
							
						КонецЦикла;
						
					Иначе
						СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не заданы ""Сведения счета-фактуры""",
						"Приложение4", "П00104М205000_" + НомСтроки + "_1", НомСтраницы);
						СтатусПроверки = Ложь;
						
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				СообщитьВТС("Приложение 4 -> Страница " + НомСтраницы
				+ ": не заполнены ""Сведения о этиловом спирте""", "Приложение4", "П00104М104000_1", НомСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Приложение 5.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение5"];
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Приложение5") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001050001003"])) Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": не задан регистрационный номер извещения",
				"Приложение5", "П001050001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001050002003"]) Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": не задана дата регистрации извещения",
				"Приложение5", "П001050002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001050003003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": не задан ИНН организации",
				"Приложение5", "П001050003003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 10 Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": задан ИНН организации, не состоящий из 10 цифр",
				"Приложение5", "П001050003003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001050004003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": не задан КПП организации",
				"Приложение5", "П001050004003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 9 Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": задан КПП организации, не состоящий из 9 символов",
				"Приложение5", "П001050004003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001050005003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы
				+ ": не задан код вида закупаемого этилового спирта",
				"Приложение5", "П001050005003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы
				+ ": задан код вида закупаемого этилового спирта, не состоящий из 3 цифр",
				"Приложение5", "П001050005003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП512М1];
			Если ЗаполненаМногострочнаяЧасть(ДанныеМнЧ) Тогда
				Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00105М119003"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " не задан код вида подакцизного товара",
						"Приложение5", "П00105М119003_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": в строке " + НомСтроки
						+ " задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение5", "П00105М119003_" + НомСтроки, НомСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				СообщитьВТС("Приложение 5 -> Страница " + НомСтраницы + ": не заполнены ""Сведения об "
				+ "использовании этилового спирта по виду алкогольной или подакцизной спиртосодержащей продукции""",
				"Приложение5", "П00105М119003_1", НомСтраницы);
				СтатусПроверки = Ложь;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	// Приложение 6.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение6"];
	
	ВозмКодыСтр001 = ВозможныеЗначенияИзСпискаВыбораПоказателя("П001060000103");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		Если ЗаполненаСтраницаРаздела(Ветка, "Приложение6") Тогда
			
			НомСтраницы = Формат(ДеревоРаздела.Строки.Индекс(Ветка) + 1, "ЧГ=");
			
			ЗначПок = СокрЛП(Ветка.Данные["П001060000103"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан признак банковской гарантии",
				"Приложение6", "П001060000103", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли ВозмКодыСтр001.МассивЗначений.Найти(ЗначПок) = Неопределено Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
				+ ": признак банковской гарантии должен принимать одно из значений: "
				+ ВозмКодыСтр001.СтрокаЗначений, "Приложение6", "П001060000103", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001060001003"])) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан номер банковской гарантии",
				"Приложение6", "П001060001003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001060001503"]) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задана дата выдачи банковской гарантии",
				"Приложение6", "П001060001503", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001060002003"]) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
				+ ": не задана дата начала срока действия банковской гарантии",
				"Приложение6", "П001060002003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001060003003"]) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
				+ ": не задана дата окончания срока действия банковской гарантии",
				"Приложение6", "П001060003003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001060005003"])) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан регистрационный номер извещения",
				"Приложение6", "П001060005003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001060006003"]) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задана дата регистрации извещения",
				"Приложение6", "П001060006003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001060007003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан ИНН организации",
				"Приложение6", "П001060007003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 10 Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": задан ИНН организации, не состоящий из 10 цифр",
				"Приложение6", "П001060007003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001060008003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан КПП организации",
				"Приложение6", "П001060008003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 9 Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": задан КПП организации, не состоящий из 9 символов",
				"Приложение6", "П001060008003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001060009003"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": не задан код вида закупаемого этилового спирта",
				"Приложение6", "П001060009003", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
				+ ": задан код вида закупаемого этилового спирта, не состоящий из 3 цифр",
				"Приложение6", "П001060009003", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			ЗначПок = СокрЛП(Ветка.Данные["П001060013503"]);
			Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
				+ ": не заданы месяц и год, на которые приходится 100-й календарный  день (190-й или 250-й календарный день) "
				+ "с начала первого налогового периода расчетного срока", "Приложение6", "П001060013503", НомСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ЗначениеЗаполнено(СтроковыеФункцииКлиентСервер.СтрокаВДату("01." + ЗначПок)) Тогда
				СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": заданы месяц и год, на которые приходится 100-й "
				+ "календарный  день (190-й или 250-й календарный день) с начала первого налогового периода расчетного срока, "
				+ "не соответствующее шаблону ММ.ГГГГ", "Приложение6", "П001060013503", НомСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			// Раздел 1.1.
			//
			Заполнен_Р1_1_П6 = ЗначениеЗаполнено(Ветка.Данные["П001060014003"])
			ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060015003"]) ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060016003"])
			ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060017003"]) ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060018003"])
			ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060019003"]) ИЛИ ЗначениеЗаполнено(Ветка.Данные["П001060020003"]);
			
			Если Заполнен_Р1_1_П6 Тогда
				
				Если НЕ ЗначениеЗаполнено(СокрЛП(Ветка.Данные["П001060014003"])) Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 не задан регистрационный номер извещения",
					"Приложение6", "П001060014003", НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(Ветка.Данные["П001060015003"]) Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 не задана дата регистрации извещения",
					"Приложение6", "П001060015003", НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ЗначПок = СокрЛП(Ветка.Данные["П001060016003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 не задан ИНН организации",
					"Приложение6", "П001060016003", НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(ЗначПок) <> 10 Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 задан ИНН организации, не состоящий из 10 цифр",
					"Приложение6", "П001060016003", НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ЗначПок = СокрЛП(Ветка.Данные["П001060017003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 не задан КПП организации",
					"Приложение6", "П001060017003", НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(ЗначПок) <> 9 Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 задан КПП организации, не состоящий из 9 символов",
					"Приложение6", "П001060017003", НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
				ЗначПок = СокрЛП(Ветка.Данные["П001060018003"]);
				Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 не задан код вида закупаемого этилового спирта",
					"Приложение6", "П001060018003", НомСтраницы);
					СтатусПроверки = Ложь;
				ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
					СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы
					+ ": в разделе 1.1 задан код вида закупаемого этилового спирта, не состоящий из 3 цифр",
					"Приложение6", "П001060018003", НомСтраницы);
					СтатусПроверки = Ложь;
				КонецЕсли;
				
			КонецЕсли;
			
			Ветка612_613 = Ветка.Строки[0].Строки[0];
			
			НомСтраницы612_613 = "1";
			Координаты612_613 = НомСтраницы + "," + НомСтраницы612_613;
			
			ДанныеМнЧ = Ветка612_613.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП612М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаМнЧ) Тогда
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00106М121003"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.2 не задан код вида подакцизного товара",
						"Приложение612_613", "П00106М121003_" + НомСтроки, Координаты612_613);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.2 задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение612_613", "П00106М121003_" + НомСтроки, Координаты612_613);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			ДанныеМнЧ = Ветка612_613.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП613М2];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаМнЧ) Тогда
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00106М232503"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.3 не задан код вида подакцизного товара",
						"Приложение612_613", "П00106М232503_" + НомСтроки, Координаты612_613);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.3 задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение612_613", "П00106М232503_" + НомСтроки, Координаты612_613);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
			Ветка614 = Ветка.Строки[1].Строки[0];
			
			НомСтраницы614 = "2";
			Координаты614 = НомСтраницы + "," + НомСтраницы614;
			
			ДанныеМнЧ = Ветка614.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП614М3];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаМнЧ) Тогда
					ИндСтрокиМнЧ = ДанныеМнЧ.Строки.Индекс(СтрокаМнЧ);
					НомСтроки = Формат(ИндСтрокиМнЧ + 1, "ЧГ=");
					
					ЗначПок = СокрЛП(СтрокаМнЧ.Данные["П00106М338503"]);
					Если НЕ ЗначениеЗаполнено(ЗначПок) Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.4 не задан код вида подакцизного товара",
						"Приложение614", "П00106М338503_" + НомСтроки, Координаты614);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(ЗначПок) <> 3 Тогда
						СообщитьВТС("Приложение 6 -> Страница " + НомСтраницы + ": в строке "
						+ НомСтроки + " раздела 1.4 задан код вида подакцизного товара, не состоящий из 3 цифр",
						"Приложение614", "П00106М338503_" + НомСтроки, Координаты614);
						СтатусПроверки = Ложь;
					КонецЕсли;
					
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат СтатусПроверки;
	
КонецФункции

&НаСервере
Функция ПоказателиНеанализируемыеНаЗаполненность()
	
	ИменаПоказателей = Новый Массив;
	
	Возврат ИменаПоказателей;
	
КонецФункции

&НаСервере
Функция ЗаполненРаздел(Знач ДеревоРаздела, Знач ИмяРаздела)
	
	Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
		Если ЗаполненаСтраницаРаздела(СтраницаРаздела, ИмяРаздела) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЗаполненаСтраницаРаздела(Знач СтраницаРаздела, Знач ИмяРаздела)
	
	ПоказателиНеанализируемыеНаЗаполненность = ПоказателиНеанализируемыеНаЗаполненность();
	
	Данные = СтраницаРаздела.Данные;
	Для каждого Пок Из Данные Цикл
		Если ЗначениеЗаполнено(Пок.Значение) И ПоказателиНеанализируемыеНаЗаполненность.Найти(Пок.Ключ) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаГруппМнЧ") Тогда
		ИменаГруппМнЧ = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаГруппМнЧ"];
		Для каждого ИмяГруппы Из ИменаГруппМнЧ Цикл
			ДеревоМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
			Если ЗаполненаМногострочнаяЧасть(ДеревоМнЧ) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если мСтруктураМногоуровневыхРазделов[ИмяРаздела].Свойство("ИменаПодчиненныхРазделов") Тогда
		ИменаПодчРазделов = мСтруктураМногоуровневыхРазделов[ИмяРаздела]["ИменаПодчиненныхРазделов"];
		Для ИндПодчРаздела = 0 По ИменаПодчРазделов.Количество() - 1 Цикл
			ДеревоПодчРаздела = СтраницаРаздела.Строки[ИндПодчРаздела];
			ИмяПодчРаздела = ИменаПодчРазделов[ИндПодчРаздела];
			Если ЗаполненРаздел(ДеревоПодчРаздела, ИмяПодчРаздела) Тогда
				Возврат Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЗаполненаМногострочнаяЧасть(Знач ДеревоМнЧ)
	
	Для Каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
		Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаМнЧ) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЗаполненаСтрокаМногострочнойЧасти(Знач СтрокаМнЧ)
	
	ИмяГруппыМнЧ = Неопределено;
	
	ПоказателиНеанализируемыеНаЗаполненность = ПоказателиНеанализируемыеНаЗаполненность();
	
	Для каждого Пок Из СтрокаМнЧ.Данные Цикл
		Если НЕ ЗначениеЗаполнено(ИмяГруппыМнЧ) Тогда
			ИмяГруппыМнЧ = Лев(Пок.Ключ, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		КонецЕсли;
		Если ЗначениеЗаполнено(Пок.Значение) И ПоказателиНеанализируемыеНаЗаполненность.Найти(Пок.Ключ) = Неопределено Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеЗаполнено(ИмяГруппыМнЧ) Тогда
		ИменаПодчГруппМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппыМнЧ Из ИменаПодчГруппМнЧ Цикл
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[ИмяПодчГруппыМнЧ];
			Для Каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				Если ЗаполненаСтрокаМногострочнойЧасти(СтрокаПодчМнЧ) Тогда
					Возврат Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ВозможныеЗначенияИзСпискаВыбораПоказателя(ИмяПоказателя)
	
	МассивЗначений = ДанныеФормыВЗначение(РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(
	ЭтотОбъект, ИмяПоказателя).ТаблицаЗначений, Тип("ТаблицаЗначений")).ВыгрузитьКолонку("Код");
	КоличествоЗначений = МассивЗначений.Количество();
	Для Ном = 1 По КоличествоЗначений Цикл
		ОбрИнд = КоличествоЗначений - Ном;
		Если НЕ ЗначениеЗаполнено(МассивЗначений[ОбрИнд]) Тогда
			МассивЗначений.Удалить(ОбрИнд);
		КонецЕсли;
	КонецЦикла;
	СтрокаЗначений = СтрСоединить(МассивЗначений, ", ");
	
	Возврат Новый Структура("МассивЗначений, СтрокаЗначений", МассивЗначений, СтрокаЗначений);
	
КонецФункции

&НаСервере
Процедура СообщитьВТС(Описание, Раздел, ИмяЯчейки, ФИО = "")
	
	РегламентированнаяОтчетность.СообщитьВТаблицуСообщений(ЭтотОбъект, Описание, Раздел, ИмяЯчейки, ФИО);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки)
	
	ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ДеревоВыгрузки); // формируем точную структуру XML-макета
	ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, ДеревоВыгрузки);
	ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
	
КонецПроцедуры

&НаСервере
Процедура ОбработатьУсловныеЭлементы(Знач ПараметрыВыгрузки, Узел)
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если Узел.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
			Возврат;
		КонецЕсли;
		РегламентированнаяОтчетность.ДополнитьСтруктуруПараметров(мДанныеОтчета, ПараметрыВыгрузки, Узел);
	КонецЕсли;
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		ТекСтр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		Если НЕ ПустаяСтрока(ТекСтр.Условие) Тогда
			Если НЕ РегламентированнаяОтчетность.УсловиеВыполнено(ЭтотОбъект, ПараметрыВыгрузки, ТекСтр.Условие) Тогда
				Узел.Строки.Удалить(ТекСтр);
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		ОбработатьУсловныеЭлементы(ПараметрыВыгрузки, ТекСтр);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Узел, НомерСтроки = Неопределено)
	
	СтрокиУзла = Новый Массив;
	Для Каждого Стр Из Узел.Строки Цикл
		СтрокиУзла.Добавить(Стр);
	КонецЦикла;
	
	Для Каждого Стр из СтрокиУзла Цикл
		Если Стр.Тип = "С" ИЛИ Стр.Тип = "C" Тогда // учет обоих вариантов: кириллицы и латиницы
			Если РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(ПараметрыВыгрузки,
				"ИмяКлючевогоУзлаСодержательнойЧасти") И Стр.Код = ПараметрыВыгрузки.ИмяКлючевогоУзлаСодержательнойЧасти Тогда
				ЗаполнитьСодержательнуюЧасть(Стр, ПараметрыВыгрузки);
			ИначеЕсли Стр.Многострочность Тогда
				НомСтр = 1;
				ПодчиненныйЭлемент = ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(Стр);
				КлючПодчиненногоЭлемента = ПодчиненныйЭлемент.Ключ;
				Пока РегламентированнаяОтчетностьКлиентСервер.СвойствоОпределено(
					ПараметрыВыгрузки, КлючПодчиненногоЭлемента + "_" + Формат(НомСтр, "ЧГ=")) Цикл
					УзелСоответствующийСтроке = СкопироватьУзел(Узел, Стр);
					ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, УзелСоответствующийСтроке, НомСтр);
					НомСтр = НомСтр + 1;
				КонецЦикла;
			Иначе
				ЗаполнитьДаннымиУзел(ПараметрыВыгрузки, Стр, НомерСтроки);
			КонецЕсли;
		Иначе
			Если ПустаяСтрока(Стр.ЗначениеПоУмолчанию) Тогда
				Если НЕ ПустаяСтрока(Стр.Ключ) Тогда
					ПолныйКодПоказателя = Стр.Ключ + ?(ЗначениеЗаполнено(НомерСтроки), "_" + Формат(НомерСтроки, "ЧГ="), "");
					ЗначениеПоказателя = Неопределено;
					Если ПараметрыВыгрузки.Свойство(ПолныйКодПоказателя, ЗначениеПоказателя) Тогда
						ВывестиПоказательВXML(Стр, ЗначениеПоказателя);
					Иначе
						ВывестиПоказательВXML(Стр, "");
					КонецЕсли;
				Иначе
					Стр.Значение = "";
				КонецЕсли;
			ИначеЕсли Лев(Стр.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ВывестиПоказательВXML(Стр, ПараметрыВыгрузки[Сред(Стр.ЗначениеПоУмолчанию, 2)]);
			Иначе
				Стр.Значение = Стр.ЗначениеПоУмолчанию;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПервыйПодчиненныйУзелСЗаполненнымКлючом(Родитель)
	
	Для Каждого Стр из Родитель.Строки Цикл
		Если ЗначениеЗаполнено(Стр.Ключ) Тогда
			Возврат Стр;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
	
КонецФункции

&НаСервере
Функция СкопироватьУзел(Родитель, Узел, Знач МаксИндекс = Неопределено)
	
	// Нахождение узла с максимальным индексом и с тем же кодом,
	// что и у копируемого, и добавление нового сразу после найденного.
	Если МаксИндекс = Неопределено Тогда
		СтрокиСТемЖеКодом = Родитель.Строки.НайтиСтроки(Новый Структура("Код", Узел.Код), Ложь);
		МаксИндекс = - 1;
		КолСтрокСТемЖеКодом = СтрокиСТемЖеКодом.Количество();
		Если КолСтрокСТемЖеКодом > 0 Тогда
			МаксИндекс = Родитель.Строки.Индекс(СтрокиСТемЖеКодом[КолСтрокСТемЖеКодом - 1]);
		КонецЕсли;
	КонецЕсли;
	
	ИндексСоздаваемогоУзла = МаксИндекс + 1;
	Если ИндексСоздаваемогоУзла >= Родитель.Строки.Количество() ИЛИ ИндексСоздаваемогоУзла = 0 Тогда
		// Аналогичный узел не найден или найденный узел - последний.
		НовыйУзел = Родитель.Строки.Добавить();
	Иначе
		НовыйУзел = Родитель.Строки.Вставить(ИндексСоздаваемогоУзла);
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(НовыйУзел, Узел, , "Родитель, Строки");
	
	Для Каждого Стр из Узел.Строки Цикл
		СкопироватьУзел(НовыйУзел, Стр, Узел.Строки.Количество() - 1);
	КонецЦикла;
	
	Возврат НовыйУзел;
	
КонецФункции

&НаСервере
Функция ПолучитьПодчиненныйЭлемент(Узел, КодЭлемента)
	
	ЧислоВместоКодаЭлемента = (ТипЗнч(КодЭлемента) = Тип("Число"));
	Если ТипЗнч(КодЭлемента) = Тип("Число") Тогда
		Если Узел.Строки.Количество() > КодЭлемента Тогда
			Возврат Узел.Строки.Получить(КодЭлемента);
		Иначе
			Возврат Неопределено;
		КонецЕсли;
	Иначе
		Для Каждого Стр Из Узел.Строки Цикл
			Если Стр.Код = КодЭлемента Тогда
				Возврат Стр;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ЗаполнитьСодержательнуюЧасть(УзелРодитель, ПараметрыВыгрузки)
	
	СохрСтруктура = СохраненныеДанныеОтчета();
	
	// Раздел 1.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел1"];
	СумНалПУ = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СумНалПУ");
	
	Для каждого Эл Из СумНалПУ.Строки Цикл
		Если Эл.Строки.Количество() = 0 Тогда
			ВывестиПоказательВXML(Эл, ДеревоРаздела.Строки[0].Данные[Эл.Ключ]);
		КонецЕсли;
	КонецЦикла;
	
	СумНалПУ_МО = ПолучитьПодчиненныйЭлемент(СумНалПУ, "СумНалПУ_МО");
	ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М1];
	
	Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
		
		ЭкзСумНалПУ_МО = СкопироватьУзел(СумНалПУ, СумНалПУ_МО, СумНалПУ.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзСумНалПУ_МО.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		СумНалПУ_КБК = ПолучитьПодчиненныйЭлемент(ЭкзСумНалПУ_МО, "СумНалПУ_КБК");
		ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР1М2];
		
		Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные,
			СкопироватьУзел(ЭкзСумНалПУ_МО, СумНалПУ_КБК, ЭкзСумНалПУ_МО.Строки.Количество() - 1));
		КонецЦикла;
		
	КонецЦикла;
	
	// Раздел 2.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел2"];
	РасчАкц = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчАкц");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзРасчАкц = СкопироватьУзел(УзелРодитель, РасчАкц, УзелРодитель.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзРасчАкц.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, Ветка.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		// Подраздел 2.1.
		ОперПТРФ = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "ОперПТРФ");
		ОперПТРФКод = ПолучитьПодчиненныйЭлемент(ОперПТРФ, "ОперПТРФКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР21М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзОперПТРФКод = СкопироватьУзел(ОперПТРФ, ОперПТРФКод, ОперПТРФ.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзОперПТРФКод);
		КонецЦикла;
		
		// Подраздел 2.2.
		ОперПТнеРФ = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "ОперПТнеРФ");
		ОперПТнеРФКод = ПолучитьПодчиненныйЭлемент(ОперПТнеРФ, "ОперПТнеРФКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР22М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзОперПТнеРФКод = СкопироватьУзел(ОперПТнеРФ, ОперПТнеРФКод, ОперПТнеРФ.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзОперПТнеРФКод);
		КонецЦикла;
		
		// Подраздел 2.3.
		АкцизВыч = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "АкцизВыч");
		АкцизВычКод = ПолучитьПодчиненныйЭлемент(АкцизВыч, "АкцизВычКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР23М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзАкцизВычКод = СкопироватьУзел(АкцизВыч, АкцизВычКод, АкцизВыч.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзАкцизВычКод);
		КонецЦикла;
		
		// Подраздел 2.4.
		АкцизПУ = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "АкцизПУ");
		АкцизПУКод = ПолучитьПодчиненныйЭлемент(АкцизПУ, "АкцизПУКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР24М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзАкцизПУКод = СкопироватьУзел(АкцизПУ, АкцизПУКод, АкцизПУ.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзАкцизПУКод);
		КонецЦикла;
		
		// Подраздел 2.4.1.
		Акциз203_6 = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "Акциз203.6");
		Акциз203_6Код = ПолучитьПодчиненныйЭлемент(Акциз203_6, "Акциз203.6Код");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР241М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзАкциз203_6Код = СкопироватьУзел(Акциз203_6, Акциз203_6Код, Акциз203_6.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзАкциз203_6Код);
		КонецЦикла;
		
		// Подраздел 2.5.
		ДокЭкспПТ = ПолучитьПодчиненныйЭлемент(ЭкзРасчАкц, "ДокЭкспПТ");
		ДокЭкспПТКод = ПолучитьПодчиненныйЭлемент(ДокЭкспПТ, "ДокЭкспПТКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР25М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзДокЭкспПТКод = СкопироватьУзел(ДокЭкспПТ, ДокЭкспПТКод, ДокЭкспПТ.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзДокЭкспПТКод);
		КонецЦикла;
		
	КонецЦикла;
	
	// Раздел 3.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Раздел3"];
	
	// Особая обработка при выводе узла "РасчВино".
	РасчВиноОбраз = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчВино");
	РасчВино = СкопироватьУзел(УзелРодитель, РасчВиноОбраз, УзелРодитель.Строки.Количество() - 1);
	
	Для каждого Эл Из РасчВино.Строки Цикл
		Если Эл.Строки.Количество() = 0 Тогда
			ВывестиПоказательВXML(Эл, ДеревоРаздела.Строки[0].Данные[Эл.Ключ]);
		КонецЕсли;
	КонецЦикла;
	
	РасчВиноКод = ПолучитьПодчиненныйЭлемент(РасчВино, "РасчВиноКод");
	ДанныеМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР3М1];
	
	Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
		
		ЭкзРасчВиноКод = СкопироватьУзел(РасчВино, РасчВиноКод, РасчВино.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзРасчВиноКод.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		РасчСумВычПТ = ПолучитьПодчиненныйЭлемент(ЭкзРасчВиноКод, "РасчСумВычПТ");
		ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыР3М2];
		
		Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
			ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные,
			СкопироватьУзел(ЭкзРасчВиноКод, РасчСумВычПТ, ЭкзРасчВиноКод.Строки.Количество() - 1));
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 1.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение1"];
	РасчНБВидПТ = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РасчНБВидПТ");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзРасчНБВидПТ = СкопироватьУзел(УзелРодитель, РасчНБВидПТ, УзелРодитель.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзРасчНБВидПТ.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, Ветка.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		РасчНБКод = ПолучитьПодчиненныйЭлемент(ЭкзРасчНБВидПТ, "РасчНБКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП1М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзРасчНБКод = СкопироватьУзел(ЭкзРасчНБВидПТ, РасчНБКод, ЭкзРасчНБВидПТ.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзРасчНБКод);
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 2.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение2"];
	РеалПТЭкспБГ184 = ПолучитьПодчиненныйЭлемент(УзелРодитель, "РеалПТЭкспБГ184");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзРеалПТЭкспБГ184 = СкопироватьУзел(УзелРодитель, РеалПТЭкспБГ184, УзелРодитель.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзРеалПТЭкспБГ184.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, Ветка.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		СвРеалПТЭксп = ПолучитьПодчиненныйЭлемент(ЭкзРеалПТЭкспБГ184, "СвРеалПТЭксп");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М1];
		
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			
			// Строки 060.
			ЭкзСвРеалПТЭксп = СкопироватьУзел(ЭкзРеалПТЭкспБГ184, СвРеалПТЭксп, ЭкзРеалПТЭкспБГ184.Строки.Количество() - 1);
			Для каждого Эл Из ЭкзСвРеалПТЭксп.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			
			// Строки 070.
			АкОсвЭксп = ПолучитьПодчиненныйЭлемент(ЭкзСвРеалПТЭксп, "АкОсвЭксп");
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М2];
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ЭкзАкОсвЭксп = СкопироватьУзел(ЭкзСвРеалПТЭксп, АкОсвЭксп, ЭкзСвРеалПТЭксп.Строки.Количество() - 1);
				ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные, ЭкзАкОсвЭксп);
			КонецЦикла;
			
			// Строки 080.
			РеалПТЭкПдтвПер = ПолучитьПодчиненныйЭлемент(ЭкзСвРеалПТЭксп, "РеалПТЭкПдтвПер");
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М3];
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ЭкзРеалПТЭкПдтвПер = СкопироватьУзел(ЭкзСвРеалПТЭксп, РеалПТЭкПдтвПер, ЭкзСвРеалПТЭксп.Строки.Количество() - 1);
				ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные, ЭкзРеалПТЭкПдтвПер);
			КонецЦикла;
			
			// Строки 090.
			РеалПТЭкПдтвПред = ПолучитьПодчиненныйЭлемент(ЭкзСвРеалПТЭксп, "РеалПТЭкПдтвПред");
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП2М4];
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ЭкзРеалПТЭкПдтвПред = СкопироватьУзел(ЭкзСвРеалПТЭксп, РеалПТЭкПдтвПред, ЭкзСвРеалПТЭксп.Строки.Количество() - 1);
				ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные, ЭкзРеалПТЭкПдтвПред);
			КонецЦикла;
			
			// Строка 100. Особая обработка при выводе узла "ПревАкОсвПдтв".
			ПревАкОсвПдтв = ПолучитьПодчиненныйЭлемент(ЭкзСвРеалПТЭксп, "ПревАкОсвПдтв");
			ЭкзПревАкОсвПдтв = СкопироватьУзел(ЭкзСвРеалПТЭксп, ПревАкОсвПдтв, ЭкзСвРеалПТЭксп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзПревАкОсвПдтв);
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 3.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение3"];
	СпРеалПер = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СпРеалПер");
	
	// Особая обработка при выводе узла "СпРеалПер".
	ЭкзСпРеалПер = СкопироватьУзел(УзелРодитель, СпРеалПер, УзелРодитель.Строки.Количество() - 1);
	
	СпРеалПокуп = ПолучитьПодчиненныйЭлемент(ЭкзСпРеалПер, "СпРеалПокуп");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзСпРеалПокуп = СкопироватьУзел(ЭкзСпРеалПер, СпРеалПокуп, ЭкзСпРеалПер.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзСпРеалПокуп.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, Ветка.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		СпРеалПерКод = ПолучитьПодчиненныйЭлемент(ЭкзСпРеалПокуп, "СпРеалПерКод");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП3М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзСпРеалПерКод = СкопироватьУзел(ЭкзСпРеалПокуп, СпРеалПерКод, ЭкзСпРеалПокуп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзСпРеалПерКод);
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 4.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение4"];
	СпПолучОрг = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СпПолучОрг");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзСпПолучОрг = СкопироватьУзел(УзелРодитель, СпПолучОрг, УзелРодитель.Строки.Количество() - 1);
		Для каждого Эл Из ЭкзСпПолучОрг.Строки Цикл
			Если Эл.Строки.Количество() = 0 Тогда
				ВывестиПоказательВXML(Эл, Ветка.Данные[Эл.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		СвДенСпирт = ПолучитьПодчиненныйЭлемент(ЭкзСпПолучОрг, "СвДенСпирт");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП4М1];
		
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			
			// Строки 040.
			ЭкзСвДенСпирт = СкопироватьУзел(ЭкзСпПолучОрг, СвДенСпирт, ЭкзСпПолучОрг.Строки.Количество() - 1);
			Для каждого Эл Из ЭкзСвДенСпирт.Строки Цикл
				Если Эл.Строки.Количество() = 0 Тогда
					ВывестиПоказательВXML(Эл, СтрокаМнЧ.Данные[Эл.Ключ]);
				КонецЕсли;
			КонецЦикла;
			
			// Строки 050-100.
			СвОбСпСчФ = ПолучитьПодчиненныйЭлемент(ЭкзСвДенСпирт, "СвОбСпСчФ");
			ДанныеПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП4М2];
			Для каждого СтрокаПодчМнЧ Из ДанныеПодчМнЧ.Строки Цикл
				ЭкзСвОбСпСчФ = СкопироватьУзел(ЭкзСвДенСпирт, СвОбСпСчФ, ЭкзСвДенСпирт.Строки.Количество() - 1);
				ЗаполнитьДаннымиУзел(СтрокаПодчМнЧ.Данные, ЭкзСвОбСпСчФ);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 5.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение5"];
	СпПриобИзвУп = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СпПриобИзвУп");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		ЭкзСпПриобИзвУп = СкопироватьУзел(УзелРодитель, СпПриобИзвУп, УзелРодитель.Строки.Количество() - 1);
		ЗаполнитьДаннымиУзел(Ветка.Данные, ЭкзСпПриобИзвУп);
		
		СвИспСпВид = ПолучитьПодчиненныйЭлемент(ЭкзСпПриобИзвУп, "СвИспСпВид");
		ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП512М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзСвИспСпВид = СкопироватьУзел(ЭкзСпПриобИзвУп, СвИспСпВид, ЭкзСпПриобИзвУп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзСвИспСпВид);
		КонецЦикла;
		
	КонецЦикла;
	
	// Приложение 6.
	//
	ДеревоРаздела = СохрСтруктура.ДанныеМногоуровневыхРазделов["Приложение6"];
	СпПриобИзвОсвУп = ПолучитьПодчиненныйЭлемент(УзелРодитель, "СпПриобИзвОсвУп");
	
	Для каждого Ветка Из ДеревоРаздела.Строки Цикл
		
		// "Шапка" и Раздел 1.1.
		ЭкзСпПриобИзвОсвУп = СкопироватьУзел(УзелРодитель, СпПриобИзвОсвУп, УзелРодитель.Строки.Количество() - 1);
		ЗаполнитьДаннымиУзел(Ветка.Данные, ЭкзСпПриобИзвОсвУп);
		
		ПодчВетка = Ветка.Строки[0].Строки[0];
		// Раздел 1.2.
		СведИспСпВидПП = ПолучитьПодчиненныйЭлемент(ЭкзСпПриобИзвОсвУп, "СведИспСпВидПП");
		ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП612М1];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзСведИспСпВидПП = СкопироватьУзел(ЭкзСпПриобИзвОсвУп, СведИспСпВидПП, ЭкзСпПриобИзвОсвУп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзСведИспСпВидПП);
		КонецЦикла;
		// Раздел 1.3.
		СведФИспОбязБГ = ПолучитьПодчиненныйЭлемент(ЭкзСпПриобИзвОсвУп, "СведФИспОбязБГ");
		ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП613М2];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзСведФИспОбязБГ = СкопироватьУзел(ЭкзСпПриобИзвОсвУп, СведФИспОбязБГ, ЭкзСпПриобИзвОсвУп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзСведФИспОбязБГ);
		КонецЦикла;
		
		ПодчВетка = Ветка.Строки[1].Строки[0];
		// Раздел 1.4.
		СвАвКонРасчВыч = ПолучитьПодчиненныйЭлемент(ЭкзСпПриобИзвОсвУп, "СвАвКонРасчВыч");
		ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП614М3];
		Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
			ЭкзСвАвКонРасчВыч = СкопироватьУзел(ЭкзСпПриобИзвОсвУп, СвАвКонРасчВыч, ЭкзСпПриобИзвОсвУп.Строки.Количество() - 1);
			ЗаполнитьДаннымиУзел(СтрокаМнЧ.Данные, ЭкзСвАвКонРасчВыч);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ВывестиПоказательВXML(Узел, ЗначениеПоказателя)
	
	МинШирина = Узел.МинРазмерность;
	МаксШирина = Узел.МаксРазмерность;
	
	Если Узел.Формат = "T" ИЛИ Узел.Формат = "Т" Тогда // учтем оба варианта: кириллицу и латиницу
		Если ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
			ЗначениеПоказателяСтр = Формат(ЗначениеПоказателя, "ДФ=dd.MM.yyyy");
		Иначе
			ЗначениеПоказателяСтр = СокрЛП(ЗначениеПоказателя);
		КонецЕсли;
		Узел.Значение = ?(МаксШирина < СтрДлина(ЗначениеПоказателяСтр),
		СокрЛП(Лев(ЗначениеПоказателяСтр, МаксШирина)), ЗначениеПоказателяСтр);
	ИначеЕсли Узел.Формат = "N" Тогда
		СтрокаФормата = "ЧРД=.;ЧН=0;ЧГ=;";
		Если Узел.МаксРазмерность <> 0 И Узел.МаксРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧЦ=" + Формат(Узел.МаксРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Если Узел.МинРазмерность <> 99999 Тогда
			СтрокаФормата = СтрокаФормата + "ЧДЦ=" + Формат(Узел.МинРазмерность, "ЧГ=") + ";";
		КонецЕсли;
		Узел.Значение = СокрЛП(Формат(ЗначениеПоказателя, СтрокаФормата));
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ОтсечьНезаполненныеНеобязательныеУзлы(Узел)
	
	КоличествоСтрок = Узел.Строки.Количество();
	Для Инд = 1 По КоличествоСтрок Цикл
		Стр = Узел.Строки.Получить(КоличествоСтрок - Инд);
		ОтсечьНезаполненныеНеобязательныеУзлы(Стр);
	КонецЦикла;
	
	Если ТипЗнч(Узел) <> Тип("ДеревоЗначений") Тогда
		Если (СтрНайти(Узел.Обязательность, "Н") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "H") <> 0)
			И УзелПуст(Узел) Тогда // учтем оба варианта: кириллицу и латиницу
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		ИначеЕсли (СтрНайти(Узел.Обязательность, "М") <> 0
			ИЛИ СтрНайти(Узел.Обязательность, "M") <> 0) // учтем оба варианта: кириллицу и латиницу
			И УзелПуст(Узел)
			И ?(СтрНайти(Узел.Обязательность, "О") <> 0 ИЛИ СтрНайти(Узел.Обязательность, "O") <> 0,
			РегламентированнаяОтчетность.ИмеютсяАналогичныеСоседниеУзлыКлюч(Узел), Истина) Тогда
			РегламентированнаяОтчетность.УдалитьУзел(Узел);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция УзелПуст(Узел)
	
	Для Каждого Стр из Узел.Строки Цикл
		Если НЕ УзелПуст(Стр) Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Если Узел.Формат = "S" Тогда
		Возврат Истина;
	ИначеЕсли Узел.Формат = "N" Тогда
		Возврат Узел.Значение = "0" ИЛИ (НЕ ЗначениеЗаполнено(Узел.Значение));
	Иначе
		Возврат НЕ ЗначениеЗаполнено(Узел.Значение);
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ИдентификаторФайлаВыгрузки(ПараметрыВыгрузки, ПрефиксИмени)
	
	Если ПараметрыВыгрузки.ЭтоИП Тогда
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг);
	Иначе
		ИННКПП = СокрЛП(ПараметрыВыгрузки.ИННОрг) + СокрЛП(ПараметрыВыгрузки.КПП);
	КонецЕсли;
	
	ИдентификаторФайла = ПрефиксИмени
	+ "_" + ?(ЗначениеЗаполнено(ПараметрыВыгрузки.КодИФНСПосредника),
			ПараметрыВыгрузки.КодИФНСПосредника, ПараметрыВыгрузки.КодНО)
	+ "_" + ПараметрыВыгрузки.КодНО
	+ "_" + ИННКПП
	+ "_" + Формат(ТекущаяДатаСеанса(), "ДФ=ггггММдд")
	+ "_" + Строка(Новый УникальныйИдентификатор);
	
	Возврат ИдентификаторФайла;
	
КонецФункции

&НаСервере
Функция ВыгрузкаОтчета(ТекстВыгрузки, ПараметрыВыгрузки)
	
	КодировкаФайлаВыгрузки = "windows-1251";
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаФайлаВыгрузки);
	ЗаписьТекста.Записать(ТекстВыгрузки);
	ЗаписьТекста.Закрыть();
	ЗаписьТекста = Неопределено;
	
	ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВремХранилище = ПоместитьВоВременноеХранилище(ФайлВыгрузки, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	РезультатВыгрузки = Новый Структура;
	РезультатВыгрузки.Вставить("ИмяФайлаВыгрузки", ПараметрыВыгрузки.ИдФайл + ".xml");
	РезультатВыгрузки.Вставить("АдресФайлаВыгрузки", АдресВоВремХранилище);
	РезультатВыгрузки.Вставить("ТипФайлаВыгрузки", "ДекларацияПоАкцизамНаАлкоголь");
	РезультатВыгрузки.Вставить("КодировкаФайлаВыгрузки", КодировкаФайлаВыгрузки);
	
	Возврат РезультатВыгрузки;
	
КонецФункции

&НаСервере
Функция ВыгрузитьДеревоВXML(ДеревоВыгрузки, ПараметрыВыгрузки)
	
	ПотокXML = РегламентированнаяОтчетность.СоздатьНовыйПотокXML("windows-1251"); // создаем новый поток для записи
	ЗаписатьУзелДереваВXML(ДеревоВыгрузки, ПотокXML, ПараметрыВыгрузки); // пишем дерево в поток
	ТекстДляЗаписи = ПотокXML.Закрыть(); // получаем текст XML
	Возврат ТекстДляЗаписи;
	
КонецФункции

&НаСервере
Функция ЗаписатьУзелДереваВXML(СтрокаДерева, ПотокXML, ПараметрыВыгрузки) Экспорт
	
	Если ТипЗнч(СтрокаДерева) = Тип("ДеревоЗначений") Тогда
		ПотокXML.ЗаписатьНачалоЭлемента("Файл");
		ПотокXML.ЗаписатьАтрибут("xmlns:xsi", "http://www.w3.org/2001/XMLSchema-instance");
		Для каждого Стр Из СтрокаДерева.Строки Цикл
			ЗаписатьУзелДереваВXML(Стр, ПотокXML, ПараметрыВыгрузки);
		КонецЦикла;
		ПотокXML.ЗаписатьКонецЭлемента();
	Иначе
		Если СтрокаДерева.Тип = "А" ИЛИ СтрокаДерева.Тип = "A" Тогда
			ПотокXML.ЗаписатьАтрибут(СтрокаДерева.Код, Строка(СтрокаДерева.Значение));
		Иначе
			ПотокXML.ЗаписатьНачалоЭлемента(СтрокаДерева.Код);
			Для каждого Лист из СтрокаДерева.Строки Цикл
				ЗаписатьУзелДереваВXML(Лист, ПотокXML, ПараметрыВыгрузки);
			КонецЦикла;
			ПотокXML.ЗаписатьТекст(Строка(СтрокаДерева.Значение));
			ПотокXML.ЗаписатьКонецЭлемента();
		КонецЕсли;
	КонецЕсли;

КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
	"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтотОбъект);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	СформироватьСтруктуруПоказателей();
	ПараметрыВыгрузки = СформироватьСтруктуруПараметров();
	
	ДеревоВыгрузки = ИзвлечьСтруктуруXML("СхемаВыгрузки504");
	
	Если НЕ ПроверитьВозможностьВыгрузки(ПараметрыВыгрузки, ДеревоВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗаполнитьДанными(ПараметрыВыгрузки, ДеревоВыгрузки);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область УправлениеНастройкамиОтчета

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)
	Перем ТекущийРазделОтчетаСокрНаим;
	Перем НомерСтраницыРазделаОтчета;
	
	// Запоминаем текущий раздел, установленный в дереве разделов отчета.
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРазделОтчетаСокрНаим = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
		НомерСтраницыРазделаОтчета  = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
	КонецЕсли;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ПроверкаСоотношений", Истина);
	мПараметры.Вставить("Автосохранение", Ложь);
	мПараметры.Вставить("ИмеетсяРеквизитДеревоВыбранныхСтраниц", Истина);
	мПараметры.Вставить("ИмяОтчета", ИмяОтчета(ИмяФормы));
	
	Если СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417 Тогда
		мПараметры.Вставить("РазрешитьВстроеннуюПечать", Истина);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФлажокОтклАвтоРасчет", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыФормы.Вставить("мПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	ПараметрыФормы.Вставить("мАвтоВыборКодов", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыФормы.Вставить("мСчетчикСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки",
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	ПараметрыФормы.Вставить("мПараметры", мПараметры);
	
	ФормаНастройкиОтчета
	= РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("НастройкиОтчета", ПараметрыФормы, ЭтотОбъект);

	мДеревоВыбранныхСтраниц.ПолучитьЭлементы().Очистить();

	КопироватьДанныеФормы(мДеревоСтраницОтчета, ФормаНастройкиОтчета.Дерево);
	
	ЗначениеАвторасчета = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
	ЗначениеЕдИзм       = СтруктураРеквизитовФормы.ЕдиницаИзмерения;
	ЗначениеЗпт         = СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения;
	
	ДополнительныеПараметры = Новый Структура(
	"ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим",
	ЗначениеАвторасчета, ЗначениеЕдИзм, ЗначениеЗпт, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим);
	ОписаниеОповещения
	= Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраницЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаНастройкиОтчета.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
	ФормаНастройкиОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройкиОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраницЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ЗначениеАвторасчета = ДополнительныеПараметры.ЗначениеАвторасчета;
	ЗначениеЕдИзм = ДополнительныеПараметры.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры.ЗначениеЗпт;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	
	РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтотОбъект);
	
	Модифицированность = Истина;
	
	флЗначенияИдентичны = Истина;
	
	Для Индекс = 0 По мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() - 1 Цикл
		
		Если НЕ мДеревоСтраницОтчета.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу
			= мДеревоВыбранныхСтраниц.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу Тогда
			флЗначенияИдентичны = Ложь;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗначениеАвторасчета <> СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		
		Если СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Ложь Тогда
			
			ДополнительныеПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт);
			ОписаниеОповещения = Новый ОписаниеОповещения(
			"ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru = 'Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?';
								|en = 'Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?'");
			ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
			
		Иначе
			
			УстановитьДоступностьОбластей(ЭтотОбъект, ТекущийРазделОтчетаСокрНаим);
			
			ДопПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт);
			ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
			
		КонецЕсли;
		
	Иначе
		
		ДопПараметры = Новый Структура(
		"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт",
		НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт);
		ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	ЗначениеЕдИзм = ДополнительныеПараметры.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры.ЗначениеЗпт;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Истина;
		Возврат;
	КонецЕсли;
	
	РасчетНаСервере();
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ТекущийРазделОтчетаСокрНаим);
	
	ДопПараметры = Новый Структура(
	"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт",
	НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны, ЗначениеЕдИзм, ЗначениеЗпт);
	ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормыВыбораСтраниц(ДополнительныеПараметры)
	
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	ЗначениеЕдИзм = ДополнительныеПараметры.ЗначениеЕдИзм;
	ЗначениеЗпт = ДополнительныеПараметры.ЗначениеЗпт;
	
	Если ЗначениеЕдИзм <> СтруктураРеквизитовФормы.ЕдиницаИзмерения
		ИЛИ ЗначениеЗпт <> СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения Тогда
		ПослеСменыЕдИзмеренияИТочности();
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПоказатьСтраницыОтчетаНаКлиенте(ЭтотОбъект);
	
	Если НЕ флЗначенияИдентичны Тогда
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		Если НЕ ТекущийРазделОтчетаСокрНаим = Неопределено Тогда
			
			НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
			РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ТекущийРазделОтчетаСокрНаим);
			
			Если НЕ НайденнаяСтрока = Неопределено И НЕ НомерСтраницыРазделаОтчета = Неопределено
				И НайденнаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
				
				НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
				НайденнаяСтрока.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", НомерСтраницыРазделаОтчета);
				
			КонецЕсли;
			
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСменыЕдИзмеренияИТочности()
	
	ПроверитьТочность();
	
	УстановитьФорматВыводаИРассчитатьНаСервере(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьТочность()
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 2 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: при выводе сумм в рублях точность не может превышать 2 знака';
					|en = '%1: при выводе сумм в рублях точность не может превышать 2 знака'"), Заголовок));
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 2;
		КонецЕсли;
	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000 Тогда
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 3 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: при выводе сумм в тысячах рублей точность не может превышать 3 знака';
					|en = '%1: при выводе сумм в тысячах рублей точность не может превышать 3 знака'"), Заголовок));
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 3;
		КонецЕсли;
	ИначеЕсли СтруктураРеквизитовФормы.ЕдиницаИзмерения
		= ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1000000 Тогда
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения > 6 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1: при выводе сумм в миллионах рублей точность не может превышать 6 знаков';
					|en = '%1: при выводе сумм в миллионах рублей точность не может превышать 6 знаков'"), Заголовок));
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 6;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматВыводаИРассчитатьНаСервере(ИмяРаздела)
	
	УстановитьФорматВыводаНаСервере(ИмяРаздела);
	
	РасчетНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматВыводаНаСервере(ИмяРаздела)
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область Очистка

#Область ОчисткаОтчета

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
	
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(
	ЭтотОбъект, "ОчиститьВесьОтчет");
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(ВыполняемоеОповещение = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьКлиент.Очистить(ЭтотОбъект, ВыполняемоеОповещение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере() Экспорт
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела <> "Титульный" Тогда
		ТабличныйДокумент.Очистить();
	КонецЕсли;
	
	ИнициализироватьМногоуровневыеРазделы();
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	ОбновитьДеревоРазделовВФормеОтчета(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Приложение612_613"
		ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Приложение614" Тогда
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Приложение614" Тогда
			СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(2);
		Иначе
			СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		КонецЕсли;
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела <> "Титульный" Тогда
		ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоРазделовВФормеОтчета(ИмяРаздела)
	
	Если НЕ ИмяРаздела = Неопределено Тогда
		
		// Пытаемся найти ранее запомненный раздел.
		НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
		РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ИмяРаздела);
		
		// В случае успешного поиска, устанавливаем курсор на найденный раздел.
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОчисткаТекущейСтраницы

&НаКлиенте
Процедура ОчиститьТекущуюСтраницу(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРаздела", СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ДополнительныеПараметры.Вставить("ВыполняемоеОповещение",
	Новый ОписаниеОповещения("ОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект));
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
	НСтр("ru = 'Внимание! Будет очищена текущая страница.%1Продолжить?';
		|en = 'Внимание! Будет очищена текущая страница.%1Продолжить?'"), Символы.ПС);
	
	ОписаниеОповещения
	= Новый ОписаниеОповещения("ВопросОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТекущуюСтраницуЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ИмяРаздела = ДополнительныеПараметры.ИмяРаздела;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОчисткаРегламентированногоОтчетаНаСервере(ИмяРаздела);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчисткаРегламентированногоОтчетаНаСервере(ИмяСтраницы) Экспорт
	
	Если ИмяСтраницы = "Титульный" Тогда
		
		Для каждого Обл Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(Обл), "Рисунок") = 0
				И Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Обл.СодержитЗначение = Истина
				И НЕ Обл.Защита Тогда
				Обл.Очистить();
			КонецЕсли;
		КонецЦикла;
		
		Обл = ТабличныйДокумент.Области.Найти("ДатаПодписи");
		Если ЗначениеЗаполнено(Обл.Значение) Тогда
			ДатаПодписи = Лев(СтрЗаменить(Формат(Обл.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
		Иначе
			ДатаПодписи = "        ";
		КонецЕсли;
		
	Иначе
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(Отчеты[ИмяОтчета(ИмяФормы)].ПолучитьМакет(
		Сред(ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяСтраницы));
		
		ВывестиДанныеВТабличныйДокументНаСервере(ИмяСтраницы,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущуюСтраницуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		НомерКорректировки = 0;
		ТабличныйДокумент.Области.НомерКорректировки.Значение = "0";
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		СформироватьЗаголовокОтчета();
		
	Иначе
		
		СпрятатьСсылкуУдалитьСтраницу();
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Печать

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФорму(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
	"ru = '%1. Формируется печатная форма...';
	|en = '%1. Формируется печатная форма...'"), Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния
		РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения_СКП(ЭтотОбъект, Новый Структура);
	КонецЕсли;
	
	Если НЕ ПечатьНаСервере(ВидПечати) Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
	ЭтотОбъект, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию';
			|en = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию'"));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
		<> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1
		ИЛИ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
		
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Печать возможна только при установленной единице измерения ""в рублях"" и точности ""0""';
			|en = 'Печать возможна только при установленной единице измерения ""в рублях"" и точности ""0""'"));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДанныеФормыДерево") Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	СохранитьДанныеРаздела(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	сохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	ВывестиДанныеВТабличныйДокумент("Титульный");
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста();
	
	Для Каждого СтрокаУровня1 Из мДеревоВыбранныхСтраниц.ПолучитьЭлементы() Цикл
		
		Если СтрокаУровня1.ВыводНаПечать = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  СтрокаУровня1.Представление);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    СтрокаУровня1.ОриентацияСтраницы);
		СтруктураПараметров.Вставить("ИмяСтраницы",        СтрокаУровня1.ИмяСтраницы);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтрокаУровня1.ИмяОбластиТабличногоПоля);
		СтруктураПараметров.Вставить("ВидПечати",          ВидПечати);
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(СтрокаУровня1.ИмяСтраницы) Тогда
			
			ВывестиНаПечатьДанныеМногоуровневогоРаздела(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
			
		Иначе
			
			ВывестиДанныеВТабличныйДокумент(СтрокаУровня1.ИмяСтраницы);
			ВывестиНаПечатьЛист(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = сохрНомераСтрокМногоуровнегоРаздела;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(
	ЭтотОбъект, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Процедура ВывестиНаПечатьДанныеМногоуровневогоРаздела(СтруктураПараметров, ОбщиеРеквизитыРазделов, СтрПоля)
	
	ИмяТекРаздела = СтруктураПараметров.ИмяСтраницы;
	
	ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяТекРаздела]);
	
	Если ИмяТекРаздела = "Раздел1" ИЛИ ИмяТекРаздела = "Раздел3" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		Если ИмяТекРаздела = "Раздел1" Тогда
			
			ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппыР1М1;
			СтрокВБлокеМнЧ1 = 2;
			
			ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппыР1М2;
			СтрокВБлокеМнЧ2 = 4;
			
		Иначе // "Раздел3"
			
			ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппыР3М1;
			СтрокВБлокеМнЧ1 = 1;
			
			ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппыР3М2;
			СтрокВБлокеМнЧ2 = 1;
			
		КонецЕсли;
		
		ИменаГрафМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1]["ИменаГраф"];
		ИменаГрафМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2]["ИменаГраф"];
		
		МассивДанныхМнЧДляПечати = Новый Массив;
		ДанныеМнЧДляПечати = Новый Структура;
		
		НомерСтрокиВБлокеМнЧ1 = 0;
		
		ДанныеМнЧ1 = ДеревоДанныхРаздела.Строки[0].ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
		Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
			
			НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
			Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
				
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				ДанныеМнЧДляПечати = Новый Структура;
				
				НомерСтрокиВБлокеМнЧ1 = 1;
				
			КонецЕсли;
			
			Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
				ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1),
				СтрокаМнЧ1.Данные[ИмяГрафы]);
			КонецЦикла;
			
			НомерСтрокиВБлокеМнЧ2 = 0;
			
			ДанныеМнЧ2 = СтрокаМнЧ1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
			Для каждого СтрокаМнЧ2 Из ДанныеМнЧ2.Строки Цикл
				
				НомерСтрокиВБлокеМнЧ2 = НомерСтрокиВБлокеМнЧ2 + 1;
				Если НомерСтрокиВБлокеМнЧ2 > СтрокВБлокеМнЧ2 Тогда
					
					НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
					Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
						
						МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
						ДанныеМнЧДляПечати = Новый Структура;
						
						НомерСтрокиВБлокеМнЧ1 = 1;
						
					КонецЕсли;
					
					НомерСтрокиВБлокеМнЧ2 = 1;
					
				КонецЕсли;
				
				Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
					ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1)
					+ СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ2), СтрокаМнЧ2.Данные[ИмяГрафы]);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
		
		Для НомЛиста = 1 По МассивДанныхМнЧДляПечати.Количество() Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Если НомЛиста = 1 Тогда
				НемногострочныйДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныйДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
						// Особая обработка значения кода по ОКТМО в разделе 1.
						Если Пок.Ключ = "П000010001003" Тогда
							Обл.Значение = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СокрЛП(Пок.Значение), 11, "-", 1);
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			// Особая обработка значения кода вида подакцизного товара в разделе 3.
			Если ИмяТекРаздела = "Раздел3" Тогда
				Обл = ТабличныйДокумент.Области.Найти("П000030001003");
				Если Обл <> Неопределено Тогда
					Обл.Значение = "294";
				КонецЕсли;
			КонецЕсли;
			
			Для Ном1 = 1 По СтрокВБлокеМнЧ1 - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ1 + СтрокаСИндексомПоказателя(Ном1);
				ВставитьДопСтроку(ИмяГруппыМнЧ1, ИмяОбластиПреемника);
			КонецЦикла;
			Для Ном1 = 1 По СтрокВБлокеМнЧ1 Цикл
				Для Ном2 = 1 По СтрокВБлокеМнЧ2 - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ2 + СтрокаСИндексомПоказателя(Ном1)
					+ СтрокаСИндексомПоказателя(Ном2);
					ВставитьДопСтроку(ИмяГруппыМнЧ2, ИмяОбластиПреемника);
				КонецЦикла;
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Раздел2" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ИмяГруппыМнЧ21  = СтруктураРеквизитовФормы.мИдГруппыР21М1;
		ИмяГруппыМнЧ22  = СтруктураРеквизитовФормы.мИдГруппыР22М1;
		ИмяГруппыМнЧ23  = СтруктураРеквизитовФормы.мИдГруппыР23М1;
		ИмяГруппыМнЧ24  = СтруктураРеквизитовФормы.мИдГруппыР24М1;
		ИмяГруппыМнЧ241 = СтруктураРеквизитовФормы.мИдГруппыР241М1;
		ИмяГруппыМнЧ25  = СтруктураРеквизитовФормы.мИдГруппыР25М1;
		
		СтрокМнЧ21НаЛисте  = 3;
		СтрокМнЧ22НаЛисте  = 2;
		СтрокМнЧ23НаЛисте  = 2;
		СтрокМнЧ24НаЛисте  = 2;
		СтрокМнЧ241НаЛисте = 2;
		СтрокМнЧ25НаЛисте  = 1;
		
		ИменаГрафМнЧ21  = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ21]["ИменаГраф"];
		ИменаГрафМнЧ22  = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ22]["ИменаГраф"];
		ИменаГрафМнЧ23  = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ23]["ИменаГраф"];
		ИменаГрафМнЧ24  = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ24]["ИменаГраф"];
		ИменаГрафМнЧ241 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ241]["ИменаГраф"];
		ИменаГрафМнЧ25  = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ25]["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Определение количества листов.
			//
			ДанныеМнЧ21 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ21];
			КолСтрокМнЧ = ДанныеМнЧ21.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ21НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ21НаЛисте);
			КолЛистовМнЧ21 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			ДанныеМнЧ22 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ22];
			КолСтрокМнЧ = ДанныеМнЧ22.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ22НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ22НаЛисте);
			КолЛистовМнЧ22 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			ДанныеМнЧ23 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ23];
			КолСтрокМнЧ = ДанныеМнЧ23.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ23НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ23НаЛисте);
			КолЛистовМнЧ23 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			ДанныеМнЧ24 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ24];
			КолСтрокМнЧ = ДанныеМнЧ24.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ24НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ24НаЛисте);
			КолЛистовМнЧ24 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			ДанныеМнЧ241 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ241];
			КолСтрокМнЧ = ДанныеМнЧ241.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ241НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ241НаЛисте);
			КолЛистовМнЧ241 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			ДанныеМнЧ25 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ25];
			КолСтрокМнЧ = ДанныеМнЧ25.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧ25НаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧ25НаЛисте);
			КолЛистовМнЧ25 = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			КолЛистовРаздела = Макс(
			КолЛистовМнЧ21, КолЛистовМнЧ22, КолЛистовМнЧ23, КолЛистовМнЧ24, КолЛистовМнЧ241, КолЛистовМнЧ25);
			
			// Подготовка многострочных данных для заполнения листов.
			//
			МассивДанныхМнЧ21ДляПечати  = Новый Массив;
			МассивДанныхМнЧ22ДляПечати  = Новый Массив;
			МассивДанныхМнЧ23ДляПечати  = Новый Массив;
			МассивДанныхМнЧ24ДляПечати  = Новый Массив;
			МассивДанныхМнЧ241ДляПечати = Новый Массив;
			МассивДанныхМнЧ25ДляПечати  = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ21НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ21НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ21.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ21 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ21.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ21ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ22НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ22НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ22.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ22 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ22.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ22ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ23НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ23НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ23.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ23 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ23.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ23ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ24НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ24НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ24.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ24 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ24.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ24ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ241НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ241НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ241.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ241 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ241.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ241ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧ25НаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧ25НаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ25.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ25 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ25.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧ25ДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = Ветка.Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Для Ном = 1 По СтрокМнЧ21НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ21 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ21, ИмяОбластиПреемника);
				КонецЦикла;
				Для Ном = 1 По СтрокМнЧ22НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ22 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ22, ИмяОбластиПреемника);
				КонецЦикла;
				Для Ном = 1 По СтрокМнЧ23НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ23 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ23, ИмяОбластиПреемника);
				КонецЦикла;
				Для Ном = 1 По СтрокМнЧ24НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ24 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ24, ИмяОбластиПреемника);
				КонецЦикла;
				Для Ном = 1 По СтрокМнЧ241НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ241 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ241, ИмяОбластиПреемника);
				КонецЦикла;
				Для Ном = 1 По СтрокМнЧ25НаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ25 + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ25, ИмяОбластиПреемника);
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧ21ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				ДанныеМнЧДляПечати = МассивДанныхМнЧ22ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				ДанныеМнЧДляПечати = МассивДанныхМнЧ23ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				ДанныеМнЧДляПечати = МассивДанныхМнЧ24ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				ДанныеМнЧДляПечати = МассивДанныхМнЧ241ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				ДанныеМнЧДляПечати = МассивДанныхМнЧ25ДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение1" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппыП1М1;
		
		СтрокМнЧНаЛисте = 11;
		
		ИменаГрафМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Определение количества листов.
			//
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения листов.
			//
			МассивДанныхМнЧДляПечати = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Если НомЛиста = 1 Тогда
					НемногострочныеДанные = Ветка.Данные;
					Для каждого Пок Из НемногострочныеДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Для Ном = 1 По СтрокМнЧНаЛисте - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ + СтрокаСИндексомПоказателя(Ном);
					ВставитьДопСтроку(ИмяГруппыМнЧ, ИмяОбластиПреемника);
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение2" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппыП2М1;
		ИменаГрафМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1]["ИменаГраф"];
		СтрокВБлокеМнЧ1 = 1;
		
		ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппыП2М2;
		ИменаГрафМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2]["ИменаГраф"];
		СтрокВБлокеМнЧ2 = 1;
		
		ИмяГруппыМнЧ3 = СтруктураРеквизитовФормы.мИдГруппыП2М3;
		ИменаГрафМнЧ3 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ3]["ИменаГраф"];
		СтрокВБлокеМнЧ3 = 1;
		
		ИмяГруппыМнЧ4 = СтруктураРеквизитовФормы.мИдГруппыП2М4;
		ИменаГрафМнЧ4 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ4]["ИменаГраф"];
		СтрокВБлокеМнЧ4 = 1;
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			МассивДанныхМнЧДляПечати = Новый Массив;
			ДанныеМнЧДляПечати = Новый Структура;
			
			ДанныеМнЧ1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
			Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
				
				Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
					ДанныеМнЧДляПечати.Вставить(ИмяГрафы + "_1", СтрокаМнЧ1.Данные[ИмяГрафы]);
				КонецЦикла;
				
				ДанныеМнЧ2 = СтрокаМнЧ1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
				ДанныеМнЧ3 = СтрокаМнЧ1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ3];
				ДанныеМнЧ4 = СтрокаМнЧ1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ4];
				
				НаибольшееКоличествоПодчиненныхСтрок = Макс(
				ДанныеМнЧ2.Строки.Количество(), ДанныеМнЧ3.Строки.Количество(), ДанныеМнЧ4.Строки.Количество());
				
				Для НомПодчСтроки = 1 По НаибольшееКоличествоПодчиненныхСтрок Цикл
					
					Если НомПодчСтроки <= ДанныеМнЧ2.Строки.Количество() Тогда
						Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
							ДанныеМнЧДляПечати.Вставить(ИмяГрафы + "_1_1", ДанныеМнЧ2.Строки[НомПодчСтроки - 1].Данные[ИмяГрафы]);
						КонецЦикла;
					КонецЕсли;
					Если НомПодчСтроки <= ДанныеМнЧ3.Строки.Количество() Тогда
						Для каждого ИмяГрафы Из ИменаГрафМнЧ3 Цикл
							ДанныеМнЧДляПечати.Вставить(ИмяГрафы + "_1_1", ДанныеМнЧ3.Строки[НомПодчСтроки - 1].Данные[ИмяГрафы]);
						КонецЦикла;
					КонецЕсли;
					Если НомПодчСтроки <= ДанныеМнЧ4.Строки.Количество() Тогда
						Для каждого ИмяГрафы Из ИменаГрафМнЧ4 Цикл
							ДанныеМнЧДляПечати.Вставить(ИмяГрафы + "_1_1", ДанныеМнЧ4.Строки[НомПодчСтроки - 1].Данные[ИмяГрафы]);
						КонецЦикла;
					КонецЕсли;
					
					МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
					ДанныеМнЧДляПечати = Новый Структура;
					
				КонецЦикла;
				
			КонецЦикла;
			
			Для НомЛиста = 1 По МассивДанныхМнЧДляПечати.Количество() Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Если НомЛиста = 1 Тогда
					НемногострочныйДанные = Ветка.Данные;
					Для каждого Пок Из НемногострочныйДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение3" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Приложение3_Печать");
		
		ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппыП3М1_;
		ИменаГрафМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1]["ИменаГраф"];
		СтрокВБлокеМнЧ1 = 3;
		
		ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппыП3М2_;
		ИменаГрафМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2]["ИменаГраф"];
		СтрокВБлокеМнЧ2 = 3;
		
		МассивДанныхМнЧДляПечати = Новый Массив;
		ДанныеМнЧДляПечати = Новый Структура;
		
		НомерСтрокиВБлокеМнЧ1 = 0;
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
			Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
				
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				ДанныеМнЧДляПечати = Новый Структура;
				
				НомерСтрокиВБлокеМнЧ1 = 1;
				
			КонецЕсли;
			
			Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
				ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1),
				Ветка.Данные["П0010300" + Прав(ИмяГрафы, 5)]);
			КонецЦикла;
			
			НомерСтрокиВБлокеМнЧ2 = 0;
			
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппыП3М1];
			Для каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
				
				НомерСтрокиВБлокеМнЧ2 = НомерСтрокиВБлокеМнЧ2 + 1;
				Если НомерСтрокиВБлокеМнЧ2 > СтрокВБлокеМнЧ2 Тогда
					
					НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
					Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
						
						МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
						ДанныеМнЧДляПечати = Новый Структура;
						
						НомерСтрокиВБлокеМнЧ1 = 1;
						
					КонецЕсли;
					
					НомерСтрокиВБлокеМнЧ2 = 1;
					
				КонецЕсли;
				
				Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
					ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1)
					+ СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ2), СтрокаМнЧ.Данные["П00103М1" + Прав(ИмяГрафы, 5)]);
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЦикла;
		
		МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
		
		Для НомЛиста = 1 По МассивДанныхМнЧДляПечати.Количество() Цикл
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			Если НомЛиста = 1 Тогда
				НемногострочныйДанные = ДеревоДанныхРаздела.Строки[0].Данные;
				Для каждого Пок Из НемногострочныйДанные Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
			Для Ном1 = 1 По СтрокВБлокеМнЧ1 - 1 Цикл
				ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ1 + СтрокаСИндексомПоказателя(Ном1);
				ВставитьДопСтроку(ИмяГруппыМнЧ1, ИмяОбластиПреемника);
			КонецЦикла;
			Для Ном1 = 1 По СтрокВБлокеМнЧ1 Цикл
				Для Ном2 = 1 По СтрокВБлокеМнЧ2 - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ2 + СтрокаСИндексомПоказателя(Ном1)
					+ СтрокаСИндексомПоказателя(Ном2);
					ВставитьДопСтроку(ИмяГруппыМнЧ2, ИмяОбластиПреемника);
				КонецЦикла;
			КонецЦикла;
			
			ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
			Для каждого Пок Из ДанныеМнЧДляПечати Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение4" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ИмяГруппыМнЧ1 = СтруктураРеквизитовФормы.мИдГруппыП4М1;
		ИменаГрафМнЧ1 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1]["ИменаГраф"];
		СтрокВБлокеМнЧ1 = 1;
		
		ИмяГруппыМнЧ2 = СтруктураРеквизитовФормы.мИдГруппыП4М2;
		ИменаГрафМнЧ2 = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2]["ИменаГраф"];
		СтрокВБлокеМнЧ2 = 2;
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			МассивДанныхМнЧДляПечати = Новый Массив;
			ДанныеМнЧДляПечати = Новый Структура;
			
			НомерСтрокиВБлокеМнЧ1 = 0;
			
			ДанныеМнЧ1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
			Для каждого СтрокаМнЧ1 Из ДанныеМнЧ1.Строки Цикл
				
				НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
				Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
					
					МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
					ДанныеМнЧДляПечати = Новый Структура;
					
					НомерСтрокиВБлокеМнЧ1 = 1;
					
				КонецЕсли;
				
				Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
					ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1),
					СтрокаМнЧ1.Данные[ИмяГрафы]);
				КонецЦикла;
				
				НомерСтрокиВБлокеМнЧ2 = 0;
				
				ДанныеМнЧ2 = СтрокаМнЧ1.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
				Для каждого СтрокаМнЧ2 Из ДанныеМнЧ2.Строки Цикл
					
					НомерСтрокиВБлокеМнЧ2 = НомерСтрокиВБлокеМнЧ2 + 1;
					Если НомерСтрокиВБлокеМнЧ2 > СтрокВБлокеМнЧ2 Тогда
						
						НомерСтрокиВБлокеМнЧ1 = НомерСтрокиВБлокеМнЧ1 + 1;
						Если НомерСтрокиВБлокеМнЧ1 > СтрокВБлокеМнЧ1 Тогда
							
							МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
							ДанныеМнЧДляПечати = Новый Структура;
							
							НомерСтрокиВБлокеМнЧ1 = 1;
							
						КонецЕсли;
						
						НомерСтрокиВБлокеМнЧ2 = 1;
						
					КонецЕсли;
					
					Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ1)
						+ СтрокаСИндексомПоказателя(НомерСтрокиВБлокеМнЧ2), СтрокаМнЧ2.Данные[ИмяГрафы]);
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЦикла;
			
			МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
			
			Для НомЛиста = 1 По МассивДанныхМнЧДляПечати.Количество() Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				Если НомЛиста = 1 Тогда
					НемногострочныйДанные = Ветка.Данные;
					Для каждого Пок Из НемногострочныйДанные Цикл
						Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
						Если Обл <> Неопределено Тогда
							Обл.Значение = Пок.Значение;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
				Для Ном2 = 1 По СтрокВБлокеМнЧ2 - 1 Цикл
					ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппыМнЧ2 + "_1" + СтрокаСИндексомПоказателя(Ном2);
					ВставитьДопСтроку(ИмяГруппыМнЧ2, ИмяОбластиПреемника);
				КонецЦикла;
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела);
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение5" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппыП512М1;
		
		СтрокМнЧНаЛисте = 1;
		
		ИменаГрафМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаГраф"];
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Вывод первых листов.
			//
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			НемногострочныеДанные = Ветка.Данные;
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист1");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
			// Определение количества вторых листов.
			//
			ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения вторых листов.
			//
			МассивДанныхМнЧДляПечати = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод вторых листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела);
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист2");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	ИначеЕсли ИмяТекРаздела = "Приложение6" Тогда
		
		МакетРаздела = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела);
		
		МакетРаздела612_613 = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Приложение612_613");
		
		МакетРаздела614 = ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_Приложение614");
		
		СтрокМнЧНаЛисте = 1; // для подразделов 1.2 - 1.4 приложения 6
		
		Для каждого Ветка Из ДеревоДанныхРаздела.Строки Цикл
			
			// Вывод первых листов.
			//
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(МакетРаздела);
			
			НемногострочныеДанные = Ветка.Данные;
			Для каждого Пок Из НемногострочныеДанные Цикл
				Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Пок.Значение;
					// Переопределение значения строки 135 приложения 6 в случае, если оно не заполнено.
					Если Пок.Ключ = "П001060013503" И НЕ ЗначениеЗаполнено(Пок.Значение) Тогда
						Обл.Значение = "--.----";
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
			СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист1");
			ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
			
			// Подразделы 1.2, 1.3 приложения 6.
			//
			ПодчВетка = Ветка.Строки[0].Строки[0];
			
			// Определение количества вторых листов.
			//
			ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппыП612М1;
			ИменаГрафМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаГраф"];
			
			ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения вторых листов.
			//
			МассивДанныхМнЧДляПечати = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод вторых листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела612_613);
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист2");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
			// Определение количества третьих листов.
			//
			ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппыП613М2;
			ИменаГрафМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаГраф"];
			
			ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения третьих листов.
			//
			МассивДанныхМнЧДляПечати = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод третьих листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела612_613);
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист3");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
			// Подразделы 1.4 приложения 6.
			//
			ПодчВетка = Ветка.Строки[1].Строки[0];
			
			// Определение количества четвертых листов.
			//
			ИмяГруппыМнЧ = СтруктураРеквизитовФормы.мИдГруппыП614М3;
			ИменаГрафМнЧ = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ]["ИменаГраф"];
			
			ДанныеМнЧ = ПодчВетка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			КолСтрокМнЧ = ДанныеМнЧ.Строки.Количество();
			ДробКол = КолСтрокМнЧ / СтрокМнЧНаЛисте;
			ЦелКол = Цел(КолСтрокМнЧ / СтрокМнЧНаЛисте);
			КолЛистовРаздела = ?(ДробКол = ЦелКол, ЦелКол, ЦелКол + 1);
			
			// Подготовка многострочных данных для заполнения четвертых листов.
			//
			МассивДанныхМнЧДляПечати = Новый Массив;
			
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ПриращениеКНомеру = (НомЛиста - 1) * СтрокМнЧНаЛисте;
				ДанныеМнЧДляПечати = Новый Структура;
				Для ИндСтроки = 1 По СтрокМнЧНаЛисте Цикл
					_ИндСтроки = СтрокаСИндексомПоказателя(ИндСтроки);
					ИндСПриращением = ИндСтроки + ПриращениеКНомеру;
					Если ИндСПриращением > ДанныеМнЧ.Строки.Количество() Тогда
						Прервать;
					КонецЕсли;
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ДанныеМнЧДляПечати.Вставить(ИмяГрафы + _ИндСтроки, ДанныеМнЧ.Строки[ИндСПриращением - 1].Данные[ИмяГрафы]);
					КонецЦикла;
				КонецЦикла;
				МассивДанныхМнЧДляПечати.Добавить(ДанныеМнЧДляПечати);
				
			КонецЦикла;
			
			// Вывод четвертых листов.
			//
			Для НомЛиста = 1 По КолЛистовРаздела Цикл
				
				ТабличныйДокумент.Очистить();
				ТабличныйДокумент.Вывести(МакетРаздела614);
				
				ДанныеМнЧДляПечати = МассивДанныхМнЧДляПечати[НомЛиста - 1];
				Для каждого Пок Из ДанныеМнЧДляПечати Цикл
					Обл = ТабличныйДокумент.Области.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Пок.Значение;
					КонецЕсли;
				КонецЦикла;
				
				СтруктураПараметровРаздела = ОбщегоНазначения.СкопироватьРекурсивно(СтруктураПараметров);
				СтруктураПараметровРаздела.Вставить("ИмяСтраницы", ИмяТекРаздела + "_Лист4");
				ВывестиНаПечатьЛист(СтруктураПараметровРаздела, ОбщиеРеквизитыРазделов, СтрПоля);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	ДеревоДанныхРаздела = Неопределено;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиНаПечатьЛист(Парам1, ОбщиеРеквизитыРазделов, СтрПоля = Неопределено)
	
	ПрефиксИменМакетов = "ПечатныйБланк2023Кв3_";
	
	ИмяМЧБ = ПрефиксИменМакетов + Парам1.ИмяСтраницы;
	
	МакетМЧБ = ОбъектОтчета(ИмяФормы).ПолучитьМакет(ИмяМЧБ);
	МакетМЧБ.ПолеСверху = 5;
	МакетМЧБ.ПолеСправа = 5;
	МакетМЧБ.ПолеСнизу  = 5;
	МакетМЧБ.ПолеСлева  = 5;
	
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьМакетМЧБ(Парам1, МакетМЧБ, ОбщиеРеквизитыРазделов);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(МакетМЧБ);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетМЧБ, СтрПоля, "Макет");
	
	МакетМЧБ = Неопределено;
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
	Заголовок, Парам1, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьМакетМЧБ(ПараметрыПечати, МакетМЧБ, ОбщиеРеквизитыРазделов)
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	ИсходныйМакет = ТабличныйДокумент;
	Для Каждого Область Из ИсходныйМакет.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Область.СодержитЗначение = Истина Тогда
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = Область.Имя;
			НовСтр.Значение = Область.Значение;
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(Область);
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыПечати.ИмяСтраницы = "Раздел3" Тогда
		
		КоэфКв = ТабличныйДокумент.Область("П00003М212003_1_1").Значение;
		КоэфКв_Стр = Формат(ТабличныйДокумент.Область("П00003М212003_1_1").Значение, "ЧГ=;ЧРД=.");
		
		Если СтрДлина(КоэфКв_Стр) < 6 Тогда// 5 знакомест
			
			МакетМЧБ.УдалитьОбласть(МакетМЧБ.Область("КоэфКв_Длина6"), ТипСмещенияТабличногоДокумента.ПоВертикали);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "П00003М212003_1_1";
			НовСтр.Значение = КоэфКв;
			НовСтр.ЗначениеМЧБ = КоэфКв_Стр;
			
		Иначе// 6 знакомест
			
			МакетМЧБ.УдалитьОбласть(МакетМЧБ.Область("КоэфКв_Длина5"), ТипСмещенияТабличногоДокумента.ПоВертикали);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "П10003М212003_1_1";
			НовСтр.Значение = КоэфКв;
			НовСтр.ЗначениеМЧБ = КоэфКв_Стр;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НайденноеЗначение = Показатели.Найти("ИНН", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ИНН = "";
	Для Ном = 0 По 11 Цикл
		ИНН = ИНН + ОбщиеРеквизитыРазделов.ИНН[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ИНН";
	НовСтр.Значение = ИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ИНН);
	
	НайденноеЗначение = Показатели.Найти("КПП", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	КПП = "";
	Для Ном = 0 По 8 Цикл
		КПП = КПП + ОбщиеРеквизитыРазделов.КПП[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "КПП";
	НовСтр.Значение = КПП;
	НовСтр.ЗначениеМЧБ = СокрЛП(КПП);
	
	НайденноеЗначение = Показатели.Найти("ДатаПодписи", "Имя");
	Если НЕ НайденноеЗначение = Неопределено Тогда
		Показатели.Удалить(НайденноеЗначение);
	КонецЕсли;
	ДатаПодписиСтр = "";
	Для Ном = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Ном];
	КонецЦикла;
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписи";
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	НовСтр = Показатели.Добавить();
	НовСтр.Имя = "ДатаПодписиПолная";
	Если СокрЛП(ДатаПодписиСтр) <> "" Тогда
		НовСтр.Значение = Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2)
		+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг""");
		НовСтр.ЗначениеМЧБ = СокрЛП(Формат(Дата(Прав(ДатаПодписиСтр, 4) + Сред(ДатаПодписиСтр, 3, 2)
		+ Лев(ДатаПодписиСтр, 2) + "000000"), "ДФ = ""дд.ММ.гггг"""));
	КонецЕсли;
	
	// Особая обработка ФИО на титульном листе.
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
		КонецЕсли;
	КонецЕсли;
	
	ИндексТочкиПоКорню = Новый Структура;
	Для каждого Область Из МакетМЧБ.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень,ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Область Из МакетМЧБ.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			ИмяОбласти = Область.Имя;
			
			Если СтрЧислоВхождений(ИмяОбласти, "НомСтр") > 0
			 ИЛИ СтрЧислоВхождений(ИмяОбласти, "СоставленаНа") > 0 Тогда
				Продолжить;
			КонецЕсли;
			
			РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				ТекАдресЗначенияОбласти = АдресЗначенияОбласти(Область);
				ЗначениеВыведено = Ложь;
				Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
					РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
					Если РезультатПоиска <> Неопределено Тогда
						Если ТипЗнч(РезультатПоиска.Значение)=Тип("Число") Тогда
							//разделение числа на 2 части
							ЦелаяЧасть = Цел(РезультатПоиска.Значение);
							СтрЦелаяЧасть = СтрЗаменить(Строка(Формат(Цел(РезультатПоиска.Значение), "ЧРГ=';'")), ";", "");
							Если РезультатПоиска.Значение < 0 И СтрНайти(РезультатПоиска.ЗначениеМЧБ, ".") > 0 Тогда
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),4);
							Иначе
								СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
							КонецЕсли;
							Если СтрЦелаяЧасть <> "" ИЛИ СтрДробнаяЧасть <> "" Тогда
								СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "", "0", СтрЦелаяЧасть);
								Если РезультатПоиска.Значение < 0 Тогда
									СтрЦелаяЧасть = ?(СтрЦелаяЧасть = "0", "-0", СтрЦелаяЧасть);
								КонецЕсли;
								СтрДробнаяЧасть = ?(СтрДробнаяЧасть = "", "0", СтрДробнаяЧасть);
							КонецЕсли;
							//разделение областей показателя на 2 части
							ИндексТочкиЧислаНаМЧБ = Неопределено;
							Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень,ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
								//На МЧБ нет разделения на целую и дробную части
								ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа);
								ЗначениеВыведено = Истина;
							Иначе
								//определяем какая часть выводится (Целая, дробная или точка)
								Если ТекАдресЗначенияОбласти.ИндексЗнакоместа<ИндексТочкиЧислаНаМЧБ Тогда
									//выводится целая часть
									ПрисвоитьЗначениеОбласти(
									Область, ?(РезультатПоиска.ЗначениеМЧБ = "-","-",СтрЦелаяЧасть), ТекАдресЗначенияОбласти.ИндексЗнакоместа);
									ЗначениеВыведено = Истина;
								ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
									//выводится дробная часть
									ПрисвоитьЗначениеОбласти(
									Область, СтрДробнаяЧасть, ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
									ЗначениеВыведено = Истина;
								Иначе
									//выводится точка
									//присваивать ничего не будем, но считаем, что область заполненяется корректно
									ЗначениеВыведено = Истина;
								КонецЕсли;
							КонецЕсли;
						Иначе
							ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ, ТекАдресЗначенияОбласти.ИндексЗнакоместа,
							ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка") ИЛИ НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
							ЗначениеВыведено = Истина;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				Если НЕ ЗначениеВыведено И ИмяОбласти <> "ОпределениеВысотыСтрокиМногострочнойЧасти" Тогда //служебное поле
					ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
						НСтр("ru = 'Не удалось заполнить область ""%1""';
							|en = 'Не удалось заполнить область ""%1""'"), ИмяОбласти));
				КонецЕсли;
			Иначе
				ПрисвоитьЗначениеОбласти(Область, РезультатПоиска.ЗначениеМЧБ);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Функция ПолучитьЗначениеМЧБ(Область)
	
	ТипЗначения = ТипЗнч(Область.Значение);
	Если ТипЗначения = Тип("Число") Тогда
		ФорматОбласти = Область.Формат;
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ФорматОбласти);
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧГ", "");
		Результат = Формат(Область.Значение, СобратьСтрокуФормата(СоотвСтрокаФормата));
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		Результат = СокрЛП(Область.Значение);
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		Результат = Формат(Область.Значение, ?(ПустаяСтрока(Область.Формат), "ДФ=ddMMyyyy", Область.Формат));
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		Результат = Формат(Область.Значение, Область.Формат);
	КонецЕсли;
	Возврат СокрЛП(Результат);
	
КонецФункции

&НаСервере
Процедура ПрисвоитьЗначениеОбласти(Область, Знач Значение, ИндексЗнакоместа = 0, ДополнятьСправа_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(ДополнятьСправа_, "-", "");
		КонецЕсли;
	ИначеЕсли НЕ ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = ВРЕГ(Значение);
	Иначе
		Область.Текст = ВРЕГ(Значение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция АдресЗначенияОбласти(Область)
	
	Имя = Область.Имя;
	КореньИмениОбласти = Неопределено;
	СтрИндексЗнакоместа = "";
	ИндексЗнакоместа = 0;
	ДлинаИмени = СтрДлина(Имя);
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
		Иначе
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);
	
КонецФункции

&НаСервере
Функция РазобратьСтрокуФормата(Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
		КонецЕсли;
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
	КонецЦикла;
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
	КонецЕсли;
	Возврат ЗначенияПараметров;
	
КонецФункции

&НаСервере
Функция СобратьСтрокуФормата(ПараметрыФормата)
	
	СтрокаФормата = "";
	Для Каждого Параметр Из ПараметрыФормата Цикл
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		СтрокаФормата = Сред(СтрокаФормата, 3);
	КонецЕсли;
	Возврат СтрокаФормата;
	
КонецФункции

&НаСервере
Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста()
	
	МассивИНН         = Новый Массив(12);
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	
	Обл = ТабличныйДокумент.Области.Найти("ИНН");
	Если НЕ Обл = Неопределено Тогда
		СтрИНН = СокрЛП(Обл.Значение);
		СтрИНН = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(СтрИНН, 12, "-", 1);
		Для Ном = 1 По СтрДлина(СтрИНН) Цикл
			МассивИНН[Ном - 1] = Сред(СтрИНН, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	Обл = ТабличныйДокумент.Области.Найти("КПП");
	Если НЕ Обл = Неопределено Тогда
		Для Ном = 1 По СтрДлина(Обл.Значение) Цикл
			МассивКПП[Ном - 1] = Сред(Обл.Значение, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	Обл = ТабличныйДокумент.Области.Найти("ДатаПодписи");
	Если НЕ Обл = Неопределено Тогда
		Если ТипЗнч(Обл.Значение) = Тип("Строка") Тогда
			СтрДатаПодписи = Лев(СтрЗаменить(Обл.Значение, ".", ""), 8);
		ИначеЕсли ТипЗнч(Обл.Значение) = Тип("Дата") Тогда
			Если ЗначениеЗаполнено(Обл.Значение) Тогда
				СтрДатаПодписи = Лев(СтрЗаменить(Формат(Обл.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
			Иначе
				СтрДатаПодписи = "        ";
			КонецЕсли;
		КонецЕсли;
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
		КонецЦикла;
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

#КонецОбласти

#Область МеханизмПроверкиКонтрольныхСоотношений

#Область Управление

&НаКлиенте
Процедура Проверить(Команда)
		
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("СообщениеПриОтсутствииОшибок", Истина);
	
	ПараметрыПоискаКопий = Новый Структура();
	ПараметрыПоискаКопий.Вставить("Организация"			, СтруктураРеквизитовФормы.Организация);
	ПараметрыПоискаКопий.Вставить("КПП"					, СтруктураДанныхТитульный.КПП);
	ПараметрыПоискаКопий.Вставить("ДатаОкончания"		, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыПоискаКопий.Вставить("НомерКорректировки"	, НомерКорректировки);
	
	ДополнительныеПараметры.Вставить("ИскатьКопии"		, Истина);
	ДополнительныеПараметры.Вставить("ПараметрыПоискаКопий", ПараметрыПоискаКопий);
	
	РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения_СКП(ЭтаФорма, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКонтрольныеСоотношенияВОтчете() Экспорт
	
	Документирование = Ложь;
	
	ТаблицаРезультата	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРезультата();
	ТаблицаРасшифровки	= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуРасшифровки();
	
	ДанныеКС = Новый Структура;
	ДанныеКС.Вставить("Счетчик"		, 0);
	ДанныеКС.Вставить("ЧислоОшибок"	, 0);
	ДанныеКС.Вставить("Отчет"		, СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("ГодОтчета"	, Год(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("МесОтчета"	, Месяц(ДанныеКС.Отчет.ДатаОкончания));
	ДанныеКС.Вставить("ДатаОкончания", ДанныеКС.Отчет.ДатаОкончания);
	ДанныеКС.Вставить("ТолькоОшибки", Истина);
	ДанныеКС.Вставить("МакетСКП"	, "Базовая_1");
	ДанныеКС.Вставить("ВариантСКП"	, "ПоРазделам_1_1");
	ДанныеКС.Вставить("АдресРезультата");
	ДанныеКС.Вставить("АдресРасшифровки");
	
	СформироватьДанныеОтчета(ДанныеКС.Отчет, ДанныеКС);
	СформироватьДанныеОтчетаПНП();
	СформироватьСлужебныеДанные();
	СформироватьТаблицыОтчета();
	ЗаполнитьТаблицыОтчета();
	
#Область Проверки

#Область Критические_проверки_НК_РФ
	
	ПроверкаКС_8_1_1_к();
	ПроверкаКС_8_1_2_к();
	ПроверкаКС_8_2_к();
	ПроверкаКС_8_3_к();
	ПроверкаКС_8_4_к();

#КонецОбласти

#Область Основные_проверки

#Область Раздел_1

	ПроверкаКС_02_01();
	
	ПроверкаКС_02_03();
	ПроверкаКС_02_04();
	ПроверкаКС_02_05();
	
	ПроверкаКС_02_08();
	ПроверкаКС_02_09();
	ПроверкаКС_02_10();
	ПроверкаКС_02_11();
	ПроверкаКС_02_12();
	ПроверкаКС_02_13();
	ПроверкаКС_02_14();
	ПроверкаКС_02_15();
	ПроверкаКС_02_16();
	ПроверкаКС_02_17();

#КонецОбласти

#Область Раздел_2

	ПроверкаКС_03_01();
	ПроверкаКС_03_02();
	ПроверкаКС_03_03();
	ПроверкаКС_03_04();
	ПроверкаКС_03_05();
	ПроверкаКС_03_06();
	
	ПроверкаКС_03_10();
	ПроверкаКС_03_11();
	ПроверкаКС_03_12();
	ПроверкаКС_03_13();
	ПроверкаКС_03_14();
	
	ПроверкаКС_03_16();
	ПроверкаКС_03_17();
	ПроверкаКС_03_18();
	
	ПроверкаКС_03_20();
	
	ПроверкаКС_03_22();
	
	ПроверкаКС_03_24();
	ПроверкаКС_03_25();
	
	ПроверкаКС_03_29();
	ПроверкаКС_03_30();
	ПроверкаКС_03_31();
	ПроверкаКС_03_32();
	ПроверкаКС_03_33(); 
	ПроверкаКС_03_34(); 
	ПроверкаКС_03_35();

#КонецОбласти

#Область Раздел_3

	ПроверкаКС_04_01();
	ПроверкаКС_04_02();
	ПроверкаКС_04_03();
	ПроверкаКС_04_04();
	ПроверкаКС_04_05();
	ПроверкаКС_04_06();
	ПроверкаКС_04_07();
	ПроверкаКС_04_08();
	ПроверкаКС_04_09();
	ПроверкаКС_04_10();
	ПроверкаКС_04_11();
	ПроверкаКС_04_12();
	ПроверкаКС_04_13();
	ПроверкаКС_04_14();
	ПроверкаКС_04_15();
	ПроверкаКС_04_16();
	ПроверкаКС_04_17();

#КонецОбласти

#Область Приложение_1

	ПроверкаКС_05_01();
	ПроверкаКС_05_02();
	ПроверкаКС_05_03();
	ПроверкаКС_05_04();
	ПроверкаКС_05_05();
	ПроверкаКС_05_06();
	ПроверкаКС_05_07();
	ПроверкаКС_05_08();
	ПроверкаКС_05_09();

#КонецОбласти

#Область Приложение_2

	ПроверкаКС_06_01();
	ПроверкаКС_06_02();
	ПроверкаКС_06_03();
	ПроверкаКС_06_04();
	ПроверкаКС_06_05();
	ПроверкаКС_06_06();
	ПроверкаКС_06_07();
	ПроверкаКС_06_08();
	ПроверкаКС_06_09_1();
	ПроверкаКС_06_09_2();
	ПроверкаКС_06_10_1();
	ПроверкаКС_06_10_2();
	ПроверкаКС_06_11();
	ПроверкаКС_06_13();
	ПроверкаКС_06_14();
	ПроверкаКС_06_15();
	ПроверкаКС_06_16();
	ПроверкаКС_06_17();
	ПроверкаКС_06_18();

#КонецОбласти

#Область Приложение_3

	ПроверкаКС_07_01();
	ПроверкаКС_07_02();
	ПроверкаКС_07_03();
	ПроверкаКС_07_04();
	ПроверкаКС_07_05();
	ПроверкаКС_07_06();

#КонецОбласти

#Область Приложение_4

	ПроверкаКС_08_01();
	ПроверкаКС_08_02();
	ПроверкаКС_08_03();
	ПроверкаКС_08_04();
	ПроверкаКС_08_05();
	ПроверкаКС_08_06();
	ПроверкаКС_08_07();
	ПроверкаКС_08_08();
	ПроверкаКС_08_09();

#КонецОбласти

#Область Приложение_5

	ПроверкаКС_09_01();
	ПроверкаКС_09_02();
	ПроверкаКС_09_03();
	ПроверкаКС_09_04();
	ПроверкаКС_09_05();
	ПроверкаКС_09_06();
	ПроверкаКС_09_07();
	ПроверкаКС_09_08();
	ПроверкаКС_09_09();
	ПроверкаКС_09_10();
	ПроверкаКС_09_11();
	ПроверкаКС_09_12();
	ПроверкаКС_09_13();
	ПроверкаКС_09_14();
	ПроверкаКС_09_15();
	ПроверкаКС_09_16();
	ПроверкаКС_09_17();
	ПроверкаКС_09_18();
	ПроверкаКС_09_19();
	ПроверкаКС_09_20();
	ПроверкаКС_09_21();
	ПроверкаКС_09_22();
	ПроверкаКС_09_23();
	ПроверкаКС_09_24();
	ПроверкаКС_09_25();
	ПроверкаКС_09_26();
	ПроверкаКС_09_27();
	ПроверкаКС_09_28();
	ПроверкаКС_09_29();

#КонецОбласти

#Область Приложение_6
	
	ПроверкаКС_10_01();
	ПроверкаКС_10_02();
	ПроверкаКС_10_03();
	ПроверкаКС_10_04();
	ПроверкаКС_10_05();
	ПроверкаКС_10_06();
	ПроверкаКС_10_07();
	ПроверкаКС_10_08();
	ПроверкаКС_10_09();
	ПроверкаКС_10_10();
	ПроверкаКС_10_11();
	ПроверкаКС_10_12();
	ПроверкаКС_10_13(); 
	ПроверкаКС_10_14(); 
	ПроверкаКС_10_15();
	ПроверкаКС_10_16(); 
	ПроверкаКС_10_17(); 
	ПроверкаКС_10_18();
	ПроверкаКС_10_19(); 
	ПроверкаКС_10_20(); 
	ПроверкаКС_10_21(); 
	ПроверкаКС_10_22(); 
	ПроверкаКС_10_23(); 
	ПроверкаКС_10_24();
	ПроверкаКС_10_25(); 
	ПроверкаКС_10_26(); 
	ПроверкаКС_10_27();
	ПроверкаКС_10_28();
	ПроверкаКС_10_29();
	ПроверкаКС_10_30();
	ПроверкаКС_10_31();
	ПроверкаКС_10_32();
	ПроверкаКС_10_33();
	ПроверкаКС_10_34();
	ПроверкаКС_10_35();
	ПроверкаКС_10_36();
	ПроверкаКС_10_37();
	ПроверкаКС_10_38();
	ПроверкаКС_10_39();
	ПроверкаКС_10_40();
	ПроверкаКС_10_41();
	ПроверкаКС_10_42();
	ПроверкаКС_10_43();
	ПроверкаКС_10_44();
	ПроверкаКС_10_45();
	ПроверкаКС_10_46();
	ПроверкаКС_10_47();
	ПроверкаКС_10_48();
	ПроверкаКС_10_49();
	ПроверкаКС_10_50();
	ПроверкаКС_10_51();
	ПроверкаКС_10_52();
	ПроверкаКС_10_53();
	ПроверкаКС_10_54();
	ПроверкаКС_10_55();
	ПроверкаКС_10_56();
	ПроверкаКС_10_57();
	ПроверкаКС_10_58();
	ПроверкаКС_10_59();
	ПроверкаКС_10_60();
	ПроверкаКС_10_61();
	ПроверкаКС_10_62();
	ПроверкаКС_10_63();
	ПроверкаКС_10_64();
	ПроверкаКС_10_65();
	ПроверкаКС_10_66();
	ПроверкаКС_10_67();
	ПроверкаКС_10_68();
	ПроверкаКС_10_69();
	ПроверкаКС_10_70();
	ПроверкаКС_10_71();
	ПроверкаКС_10_72();
	ПроверкаКС_10_73();
	ПроверкаКС_10_74();
	ПроверкаКС_10_75();
	ПроверкаКС_10_76();
	ПроверкаКС_10_77();
	ПроверкаКС_10_78();
	ПроверкаКС_10_79();
	ПроверкаКС_10_80();
	ПроверкаКС_10_81();
	ПроверкаКС_10_82();
	ПроверкаКС_10_83();
	ПроверкаКС_10_84();
	ПроверкаКС_10_85();
	ПроверкаКС_10_86();
	ПроверкаКС_10_87();
	ПроверкаКС_10_88();
	ПроверкаКС_10_89();
	ПроверкаКС_10_90();
	ПроверкаКС_10_91();
	ПроверкаКС_10_92();
	ПроверкаКС_10_93();
	ПроверкаКС_10_94();
	ПроверкаКС_10_95();
	ПроверкаКС_10_96();
	ПроверкаКС_10_97();

#КонецОбласти

#КонецОбласти
	
#КонецОбласти

	РегламентированнаяОтчетность.ПоместитьВКэш(ТаблицаРезультата, УникальныйИдентификатор,
		ДанныеКС.АдресРезультата);
	РегламентированнаяОтчетность.ПоместитьВКэш(ТаблицаРасшифровки, УникальныйИдентификатор,
		ДанныеКС.АдресРасшифровки);
	
	Возврат ПодготовитьРезультат();
	
КонецФункции

#КонецОбласти

#Область Документирование

&НаКлиенте
Функция ВыполнитьДокументирование() Экспорт
	
	Возврат ВыполнитьДокументированиеНаСервере();
	
КонецФункции

&НаСервере
Функция ВыполнитьДокументированиеНаСервере()
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Декларация по акцизам на алкогольную продукцию");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2023Кв3");
	СтруктураРезультата.Вставить("ДатаФормирования"		, Формат(ТекущаяДата(), "ДФ=dd.MM.yyyy"));
	
	ТаблицаОписаний		= Отчеты.ПроверкаКонтрольныхСоотношений.СформироватьТаблицуОписаний();
	ДанныеКС 			= Новый Структура;
	ДанныеКС.Вставить("Счетчик"			, 0);
	ДанныеКС.Вставить("ДатаОкончания"	, ТекущаяДата());
	СформироватьПриоритетыРазделов();
	
#Область Проверки

#Область Критические_проверки_НК_РФ
	
	ПроверкаКС_8_1_1_к();
	ПроверкаКС_8_1_2_к();
	ПроверкаКС_8_2_к();
	ПроверкаКС_8_3_к();
	ПроверкаКС_8_4_к();

#КонецОбласти

#Область Основные_проверки

#Область Раздел_1

	ПроверкаКС_02_01();
	
	ПроверкаКС_02_03();
	ПроверкаКС_02_04();
	ПроверкаКС_02_05();
	
	ПроверкаКС_02_08();
	ПроверкаКС_02_09();
	ПроверкаКС_02_10();
	ПроверкаКС_02_11();
	ПроверкаКС_02_12();
	ПроверкаКС_02_13();
	ПроверкаКС_02_14();
	ПроверкаКС_02_15();
	ПроверкаКС_02_16();
	ПроверкаКС_02_17();

#КонецОбласти

#Область Раздел_2

	ПроверкаКС_03_01();
	ПроверкаКС_03_02();
	ПроверкаКС_03_03();
	ПроверкаКС_03_04();
	ПроверкаКС_03_05();
	ПроверкаКС_03_06();
	
	ПроверкаКС_03_10();
	ПроверкаКС_03_11();
	ПроверкаКС_03_12();
	ПроверкаКС_03_13();
	ПроверкаКС_03_14();
	
	ПроверкаКС_03_16();
	ПроверкаКС_03_17();
	ПроверкаКС_03_18();
	
	ПроверкаКС_03_20();
	
	ПроверкаКС_03_22();
	
	ПроверкаКС_03_24();
	ПроверкаКС_03_25();
	
	ПроверкаКС_03_29();
	ПроверкаКС_03_30();
	ПроверкаКС_03_31();
	ПроверкаКС_03_32();
	ПроверкаКС_03_33(); 
	ПроверкаКС_03_34(); 
	ПроверкаКС_03_35();

#КонецОбласти

#Область Раздел_3

	ПроверкаКС_04_01();
	ПроверкаКС_04_02();
	ПроверкаКС_04_03();
	ПроверкаКС_04_04();
	ПроверкаКС_04_05();
	ПроверкаКС_04_06();
	ПроверкаКС_04_07();
	ПроверкаКС_04_08();
	ПроверкаКС_04_09();
	ПроверкаКС_04_10();
	ПроверкаКС_04_11();
	ПроверкаКС_04_12();
	ПроверкаКС_04_13();
	ПроверкаКС_04_14();
	ПроверкаКС_04_15();
	ПроверкаКС_04_16();
	ПроверкаКС_04_17();

#КонецОбласти

#Область Приложение_1

	ПроверкаКС_05_01();
	ПроверкаКС_05_02();
	ПроверкаКС_05_03();
	ПроверкаКС_05_04();
	ПроверкаКС_05_05();
	ПроверкаКС_05_06();
	ПроверкаКС_05_07();
	ПроверкаКС_05_08();
	ПроверкаКС_05_09();

#КонецОбласти

#Область Приложение_2

	ПроверкаКС_06_01();
	ПроверкаКС_06_02();
	ПроверкаКС_06_03();
	ПроверкаКС_06_04();
	ПроверкаКС_06_05();
	ПроверкаКС_06_06();
	ПроверкаКС_06_07();
	ПроверкаКС_06_08();
	ПроверкаКС_06_09_1();
	ПроверкаКС_06_09_2();
	ПроверкаКС_06_10_1();
	ПроверкаКС_06_10_2();
	ПроверкаКС_06_11();
	ПроверкаКС_06_13();
	ПроверкаКС_06_14();
	ПроверкаКС_06_15();
	ПроверкаКС_06_16();
	ПроверкаКС_06_17();
	ПроверкаКС_06_18();

#КонецОбласти

#Область Приложение_3

	ПроверкаКС_07_01();
	ПроверкаКС_07_02();
	ПроверкаКС_07_03();
	ПроверкаКС_07_04();
	ПроверкаКС_07_05();
	ПроверкаКС_07_06();

#КонецОбласти

#Область Приложение_4

	ПроверкаКС_08_01();
	ПроверкаКС_08_02();
	ПроверкаКС_08_03();
	ПроверкаКС_08_04();
	ПроверкаКС_08_05();
	ПроверкаКС_08_06();
	ПроверкаКС_08_07();
	ПроверкаКС_08_08();
	ПроверкаКС_08_09();

#КонецОбласти

#Область Приложение_5

	ПроверкаКС_09_01();
	ПроверкаКС_09_02();
	ПроверкаКС_09_03();
	ПроверкаКС_09_04();
	ПроверкаКС_09_05();
	ПроверкаКС_09_06();
	ПроверкаКС_09_07();
	ПроверкаКС_09_08();
	ПроверкаКС_09_09();
	ПроверкаКС_09_10();
	ПроверкаКС_09_11();
	ПроверкаКС_09_12();
	ПроверкаКС_09_13();
	ПроверкаКС_09_14();
	ПроверкаКС_09_15();
	ПроверкаКС_09_16();
	ПроверкаКС_09_17();
	ПроверкаКС_09_18();
	ПроверкаКС_09_19();
	ПроверкаКС_09_20();
	ПроверкаКС_09_21();
	ПроверкаКС_09_22();
	ПроверкаКС_09_23();
	ПроверкаКС_09_24();
	ПроверкаКС_09_25();
	ПроверкаКС_09_26();
	ПроверкаКС_09_27();
	ПроверкаКС_09_28();
	ПроверкаКС_09_29();

#КонецОбласти

#Область Приложение_6
	
	ПроверкаКС_10_01();
	ПроверкаКС_10_02();
	ПроверкаКС_10_03();
	ПроверкаКС_10_04();
	ПроверкаКС_10_05();
	ПроверкаКС_10_06();
	ПроверкаКС_10_07();
	ПроверкаКС_10_08();
	ПроверкаКС_10_09();
	ПроверкаКС_10_10();
	ПроверкаКС_10_11();
	ПроверкаКС_10_12();
	ПроверкаКС_10_13(); 
	ПроверкаКС_10_14(); 
	ПроверкаКС_10_15();
	ПроверкаКС_10_16(); 
	ПроверкаКС_10_17(); 
	ПроверкаКС_10_18();
	ПроверкаКС_10_19(); 
	ПроверкаКС_10_20(); 
	ПроверкаКС_10_21(); 
	ПроверкаКС_10_22(); 
	ПроверкаКС_10_23(); 
	ПроверкаКС_10_24();
	ПроверкаКС_10_25(); 
	ПроверкаКС_10_26(); 
	ПроверкаКС_10_27();
	ПроверкаКС_10_28();
	ПроверкаКС_10_29();
	ПроверкаКС_10_30();
	ПроверкаКС_10_31();
	ПроверкаКС_10_32();
	ПроверкаКС_10_33();
	ПроверкаКС_10_34();
	ПроверкаКС_10_35();
	ПроверкаКС_10_36();
	ПроверкаКС_10_37();
	ПроверкаКС_10_38();
	ПроверкаКС_10_39();
	ПроверкаКС_10_40();
	ПроверкаКС_10_41();
	ПроверкаКС_10_42();
	ПроверкаКС_10_43();
	ПроверкаКС_10_44();
	ПроверкаКС_10_45();
	ПроверкаКС_10_46();
	ПроверкаКС_10_47();
	ПроверкаКС_10_48();
	ПроверкаКС_10_49();
	ПроверкаКС_10_50();
	ПроверкаКС_10_51();
	ПроверкаКС_10_52();
	ПроверкаКС_10_53();
	ПроверкаКС_10_54();
	ПроверкаКС_10_55();
	ПроверкаКС_10_56();
	ПроверкаКС_10_57();
	ПроверкаКС_10_58();
	ПроверкаКС_10_59();
	ПроверкаКС_10_60();
	ПроверкаКС_10_61();
	ПроверкаКС_10_62();
	ПроверкаКС_10_63();
	ПроверкаКС_10_64();
	ПроверкаКС_10_65();
	ПроверкаКС_10_66();
	ПроверкаКС_10_67();
	ПроверкаКС_10_68();
	ПроверкаКС_10_69();
	ПроверкаКС_10_70();
	ПроверкаКС_10_71();
	ПроверкаКС_10_72();
	ПроверкаКС_10_73();
	ПроверкаКС_10_74();
	ПроверкаКС_10_75();
	ПроверкаКС_10_76();
	ПроверкаКС_10_77();
	ПроверкаКС_10_78();
	ПроверкаКС_10_79();
	ПроверкаКС_10_80();
	ПроверкаКС_10_81();
	ПроверкаКС_10_82();
	ПроверкаКС_10_83();
	ПроверкаКС_10_84();
	ПроверкаКС_10_85();
	ПроверкаКС_10_86();
	ПроверкаКС_10_87();
	ПроверкаКС_10_88();
	ПроверкаКС_10_89();
	ПроверкаКС_10_90();
	ПроверкаКС_10_91();
	ПроверкаКС_10_92();
	ПроверкаКС_10_93();
	ПроверкаКС_10_94();
	ПроверкаКС_10_95();
	ПроверкаКС_10_96();
	ПроверкаКС_10_97();

#КонецОбласти

#КонецОбласти
	
#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#Область Данные

&НаКлиенте
Функция ВыполнитьПоискКопийРеглОтчетов(ДополнительныеПараметры) Экспорт

	Возврат ВыполнитьПоискКопийРеглОтчетовНаСервере(ДополнительныеПараметры);	

КонецФункции 

&НаСервере
Функция ВыполнитьПоискКопийРеглОтчетовНаСервере(ДополнительныеПараметры)
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Документ.Представление КАК Представление,
	|	ВЫБОР
	|		КОГДА Документ.ПометкаУдаления
	|			ТОГДА 0
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК УчетноеЧисло,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.КПП КАК КПП,
	|	МЕСЯЦ(Документ.ДатаОкончания) КАК МесяцОтчета,
	|	Документ.Вид КАК Вид,
	|	Документ.Дата КАК Дата,
	|	Документ.ДатаОкончания КАК ДатаОкончания,
	|	Документ.ДатаПодписи КАК ДатаПодписи,
	|	Документ.ПометкаУдаления КАК ПометкаУдаления,
	|	Документ.Комментарий КАК Комментарий,
	|	Документ.ВыбраннаяФорма КАК ВыбраннаяФорма,
	|	Документ.ИсточникОтчета КАК ИсточникОтчета,
	|	Документ.НаименованиеОтчета КАК НаименованиеОтчета,
	|	ЖурналОтчетовСтатусы.Скрыт КАК Скрыт,
	|	ЖурналОтчетовСтатусы.Статус КАК СтатусОтчета
	|ПОМЕСТИТЬ ВТ_1
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК Документ
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналОтчетовСтатусы КАК ЖурналОтчетовСтатусы
	|		ПО Документ.Ссылка = ЖурналОтчетовСтатусы.Ссылка
	|			И Документ.Организация = ЖурналОтчетовСтатусы.Организация
	|ГДЕ
	|	Документ.Организация = &Организация
	|	И Документ.КПП = &КПП
	|	И Документ.ИсточникОтчета = ""РегламентированныйОтчетАкцизыАлкоголь""
	|	И Документ.ВыбраннаяФорма = ""ФормаОтчета2023Кв3""
	|	И ГОД(Документ.ДатаОкончания) = &ГодКопии
	|	И МЕСЯЦ(Документ.ДатаОкончания) = &МесКопии
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_1.Представление КАК Представление,
	|	ВТ_1.КПП КАК КПП,
	|	СУММА(ВТ_1.УчетноеЧисло) КАК УчетноеЧисло
	|ПОМЕСТИТЬ ВТ_2
	|ИЗ
	|	ВТ_1 КАК ВТ_1
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_1.Представление,
	|	ВТ_1.КПП
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВТ_1.УчетноеЧисло) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_1.Представление КАК Ключ,
	|	ВТ_1.Ссылка КАК Ссылка,
	|	ВТ_1.МесяцОтчета КАК МесяцОтчета,
	|	ВТ_1.Вид КАК Вид,
	|	ВТ_1.ДатаПодписи КАК ДатаПодписи,
	|	ВТ_1.ПометкаУдаления КАК ПометкаУдаления,
	|	ВТ_1.УчетноеЧисло КАК УчетноеЧисло,
	|	ВТ_1.Комментарий КАК Комментарий,
	|	ВТ_1.СтатусОтчета КАК СтатусОтчета,
	|	ВТ_1.ВыбраннаяФорма КАК ВыбраннаяФорма,
	|	ВТ_1.НаименованиеОтчета КАК НаименованиеОтчета,
	|	ВТ_1.Скрыт КАК Скрыт
	|ИЗ
	|	ВТ_1 КАК ВТ_1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_2 КАК ВТ_2
	|		ПО ВТ_1.Представление = ВТ_2.Представление
	|			И ВТ_1.КПП = ВТ_2.КПП"; 
	
	
	ГодОтчета = Год(ДополнительныеПараметры.ДатаОкончания);
	МесОтчета = Месяц(ДополнительныеПараметры.ДатаОкончания);
	
	МесКопии = ?(МесОтчета = 1, 12, МесОтчета - 1);
	ГодКопии = ?(МесОтчета = 12, ГодОтчета - 1, ГодОтчета); 
	
	Запрос.УстановитьПараметр("Организация"			, ДополнительныеПараметры.Организация);
	Запрос.УстановитьПараметр("КПП"					, ДополнительныеПараметры.КПП);
	Запрос.УстановитьПараметр("ДатаОтчета"			, ДополнительныеПараметры.ДатаОкончания);
	Запрос.УстановитьПараметр("НомерКорректировки"	, ДополнительныеПараметры.НомерКорректировки);
    Запрос.УстановитьПараметр("ГодКопии"			, ГодКопии);
	Запрос.УстановитьПараметр("МесКопии"			, МесКопии);
	
	РезультатЗапроса = Запрос.Выполнить();
	ТаблицаДанных = РезультатЗапроса.Выгрузить();
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить("Строка");
	
	Строка11 	= Новый КвалификаторыСтроки(11); 
	Строка100 	= Новый КвалификаторыСтроки(100);
	
	ТаблицаДанных.Колонки.Добавить("ОКТМО"			, Новый ОписаниеТипов(МассивТипов,,Строка11));
	ТаблицаДанных.Колонки.Добавить("Дополнительно"	, Новый ОписаниеТипов(МассивТипов,,Строка100));
	ТаблицаДанных.Колонки.Добавить("Ключ2"			, Новый ОписаниеТипов(МассивТипов,,Строка100));
	
	ОКТМООтчета = СокрЛП(ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы[
		"АдресВоВрХранилищеДеревоДанныхРаздел1"]).Строки[0].Данные.П000010001003);
	
	КолвоСтрок = ТаблицаДанных.Количество();
	Для ОбратныйИндекс = 1 По КолвоСтрок Цикл
		
		Инд = КолвоСтрок - ОбратныйИндекс;
		СтрокаТаблицы = ТаблицаДанных[Инд];
		
		ДанныеОтчета 	= СтрокаТаблицы.Ссылка.ДанныеОтчета.Получить();
		//ПараметрыДанных = Новый Структура("ДанныеРегОтчетаСУчетомКонвертации", Истина);
		//ДанныеОтчета 	= РегламентированнаяОтчетность.ПолучитьДанныеСохрРегОтчета(СтрокаТаблицы.Ссылка, ПараметрыДанных);
		ОКТМО 			= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010001003;
		
		Если НЕ ОКТМО = ОКТМООтчета Тогда
			ТаблицаДанных.Удалить(СтрокаТаблицы);
			Продолжить;
		КонецЕсли;
		
		СтрокаТаблицы.ОКТМО = ОКТМООтчета;
		СтрокаТаблицы.Дополнительно = "КПП " + ДополнительныеПараметры.КПП + ", ОКТМО " + ОКТМООтчета;
		СтрокаТаблицы.Ключ2 = СтрокаТаблицы.Ключ + СтрокаТаблицы.Дополнительно;
		
		ДанныеОтчета = Неопределено;
		
	КонецЦикла;
	
	КопияТаблицы = ОбщегоНазначения.СкопироватьРекурсивно(ТаблицаДанных);
	КопияТаблицы.Свернуть("Ключ2", "УчетноеЧисло");
	
	МассивКлючей = Новый Массив;
	
	Для каждого СтрокаТаблицы Из КопияТаблицы Цикл
		Если СтрокаТаблицы.УчетноеЧисло > 1 Тогда
			МассивКлючей.Добавить(СтрокаТаблицы.Ключ2);
		КонецЕсли;
	КонецЦикла;
	
	КолвоСтрок = ТаблицаДанных.Количество();
	Для ОбратныйИндекс = 1 По КолвоСтрок Цикл
		
		Инд = КолвоСтрок - ОбратныйИндекс;
		СтрокаТаблицы = ТаблицаДанных[Инд];
		
		Если МассивКлючей.Найти(СтрокаТаблицы.Ключ2) = Неопределено Тогда
			ТаблицаДанных.Удалить(СтрокаТаблицы);
		КонецЕсли;
	КонецЦикла;
	
	Результат = Новый Структура;
	Результат.Вставить("ЕстьКопии", НЕ ТаблицаДанных.Количество() = 0);
	Результат.Вставить("АдресТаблицыКопий", ПоместитьВоВременноеХранилище(ТаблицаДанных, УникальныйИдентификатор));
	Результат.Вставить("МакетСКП");
	Результат.Вставить("ВариантСКП");
	
	Возврат Результат;
	
КонецФункции // ВыполнитьПоискКопийРеглОтчетов()
 
&НаСервере
Процедура СформироватьДанныеОтчета(ОтчетСсылка, СтруктураОтчета)
	
	МассивПолейИсключений = Новый Массив;
	МассивПолейИсключений.Добавить("П000010001003");
	МассивПолейИсключений.Добавить("П000240000001");
	МассивПолейИсключений.Добавить("Страница");
	
	СтруктураОтчета.Вставить("МассивПолейИсключений", МассивПолейИсключений);
	
	СтруктураДанных = ОтчетСсылка.ДанныеОтчета.Получить();
	
	Если СтруктураДанных.Свойство("ОкружениеСохранения") Тогда
		ВосстановитьСохраненныеДанныеОтчетаСтарогоОбразца(СтруктураДанных);
	КонецЕсли;

	СтруктураОтчета.Вставить("Раздел0", ОбщегоНазначения.СкопироватьРекурсивно(
		СтруктураДанных.ПоказателиОтчета.ПолеТабличногоДокументаТитульный));
	
	Для каждого Раздел Из СтруктураДанных.ДанныеМногоуровневыхРазделов Цикл
		
		СтруктураОтчета.Вставить("КолвоСтраниц" + Раздел.Ключ, Раздел.Значение.Строки.Количество());
		МассивСтраниц = Новый Массив;
		
		Для каждого СтраницаРаздела Из Раздел.Значение.Строки Цикл
			
			ДанныеСтраницы = Новый Структура;
			ДанныеСтраницы.Вставить("НомерСтраницы", XMLСтрока(Раздел.Значение.Строки.Индекс(СтраницаРаздела) + 1));
			ПолучитьДанныеСтраницы(ДанныеСтраницы, СтраницаРаздела, 
				Новый Структура("КорневойРаздел, Раздел, Уровень", Раздел.Ключ, Раздел.Ключ, 1),
				Новый Структура("Уровень", ""));
			ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
			МассивСтраниц.Добавить(ДанныеСтраницы);
			
		КонецЦикла;
		
		СтруктураОтчета.Вставить(Раздел.Ключ, МассивСтраниц);
		
	КонецЦикла;
	
	СтруктураОтчета.Вставить("Раздел1"	, СтруктураОтчета.Раздел1[0]);
	СтруктураОтчета.Вставить("Раздел3"	, СтруктураОтчета.Раздел3[0]);
	СтруктураОтчета.Вставить("ОКТМО"	, 
		СтруктураДанных.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010001003);

	
КонецПроцедуры

&НаСервере
Процедура СформироватьДанныеОтчетаПНП()
	
	ДанныеКС.Вставить("ОтчетПНПНайден"	, Ложь);
	ДанныеКС.Вставить("ОтчетПНПСсылка"	, Неопределено);
	ДанныеКС.Вставить("ОтчетПНП"		, Новый Структура);
	
	МесОтчета = ?(ДанныеКС.МесОтчета = 1, 12, ДанныеКС.МесОтчета - 1);
	ГодОтчета = ?(МесОтчета = 12, ДанныеКС.ГодОтчета - 1, ДанныеКС.ГодОтчета); 
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			, СтруктураРеквизитовФормы.Организация);
	Запрос.УстановитьПараметр("КПП"					, ДанныеКС.Раздел0.КПП);
	Запрос.УстановитьПараметр("ГодОтчета"			, ГодОтчета);
	Запрос.УстановитьПараметр("МесОтчета"			, МесОтчета);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ДокументРО.Ссылка КАК Ссылка,
	|	ДокументРО.Вид КАК Вид
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК ДокументРО
	|ГДЕ
	|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетАкцизыАлкоголь""
	|	И ДокументРО.ВыбраннаяФорма = ""ФормаОтчета2023Кв3""
	|	И ДокументРО.Организация = &Организация
	|	И ДокументРО.КПП = &КПП
	|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
	|	И МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесОтчета
	|	И НЕ ДокументРО.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вид УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		Возврат;
	КонецЕсли;
	
	Выборка	= РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		//ДополнительныеПараметры = Новый Структура("ДанныеРегОтчетаСУчетомКонвертации", Истина);
		//ДанныеОтчета 	= РегламентированнаяОтчетность.ПолучитьДанныеСохрРегОтчета(Выборка.Ссылка, ДополнительныеПараметры);
		
		ДанныеОтчета 	= Выборка.Ссылка.ДанныеОтчета.Получить();
		ОКТМО 			= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010001003;
		
		Если НЕ ОКТМО = ДанныеКС.ОКТМО Тогда
			Продолжить;
		КонецЕсли; 
		
		ДанныеКС.Вставить("ОтчетПНПНайден"	, Истина);
		ДанныеКС.Вставить("ОтчетПНПСсылка"	, Выборка.Ссылка); 
		СформироватьДанныеОтчета(ДанныеКС.ОтчетПНПСсылка, ДанныеКС.ОтчетПНП);
		
		ДанныеОтчета = Неопределено;
		
		Возврат;
	КонецЦикла;
	
КонецПроцедуры	

&НаСервере
Процедура ПолучитьДанныеСтраницы(СтруктураПриемник, 
									СтруктураИсточник, 
									Знач ВходящийРаздел, 
									Знач ВходящаяМнЧасть)
									
	Если НЕ СтруктураИсточник.Данные = Неопределено И НЕ ЗначениеЗаполнено(ВходящаяМнЧасть.Уровень) Тогда
		Для каждого Элемент Из СтруктураИсточник.Данные Цикл
			СтруктураПриемник.Вставить(Элемент.Ключ, Элемент.Значение);
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из СтруктураИсточник.ДанныеМногострочныхЧастей Цикл
			Для каждого СтрокаМнЧасти Из МнЧасть.Значение.Строки Цикл
				
				НомерСтроки = МнЧасть.Значение.Строки.Индекс(СтрокаМнЧасти) + 1;
				СтруктураПриемник.Вставить("КолвоСтрок" + МнЧасть.Ключ + ВходящаяМнЧасть.Уровень, 
					МнЧасть.Значение.Строки.Количество());
				СтруктураПриемник.Вставить("МнЧастьЗаполнена" + МнЧасть.Ключ + ВходящаяМнЧасть.Уровень + "_" +  
					XMLСтрока(НомерСтроки), РазделЗаполнен(СтрокаМнЧасти.Данные));
				Для каждого ПоказательСтроки Из СтрокаМнЧасти.Данные Цикл
					СтруктураПриемник.Вставить(ПоказательСтроки.Ключ + ВходящаяМнЧасть.Уровень + "_" + XMLСтрока(НомерСтроки), 
						ПоказательСтроки.Значение);
				КонецЦикла;
				
				Если НЕ СтрокаМнЧасти.ДанныеМногострочныхЧастей.Количество() = 0 Тогда
					ПолучитьДанныеСтраницы(СтруктураПриемник, СтрокаМнЧасти, ВходящийРаздел,
						Новый Структура("Уровень", "_" +  XMLСтрока(НомерСтроки)));
				КонецЕсли;
					
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	Если НЕ СтруктураИсточник.Строки.Количество() = 0 Тогда
		Для каждого Приложение Из СтруктураИсточник.Строки Цикл
			
			Если ВходящийРаздел.Уровень = 1 Тогда
				ВходящийРаздел.Уровень = 2;
				ВходящийРаздел.Раздел = ВходящийРаздел.КорневойРаздел + XMLСтрока(СтруктураИсточник.Строки.Индекс(Приложение) + 1);
				ПолучитьДанныеСтраницы(СтруктураПриемник, Приложение, ВходящийРаздел, ВходящаяМнЧасть);
			Иначе
				КлючПриложения = ВходящийРаздел.Раздел;
				МассивСтраниц = Новый Массив;
				
				Для каждого СтраницаПриложения Из СтруктураИсточник.Строки Цикл
					
					ДанныеСтраницы = Новый Структура;
					ДанныеСтраницы.Вставить("НомерСтраницы", СтруктураПриемник.НомерСтраницы + "," +
						XMLСтрока(СтруктураИсточник.Строки.Индекс(СтраницаПриложения) + 1));
					ПолучитьДанныеСтраницы(ДанныеСтраницы, СтраницаПриложения, 
						Новый Структура("КорневойРаздел, Раздел, Уровень", ВходящийРаздел.КорневойРаздел, КлючПриложения, 
						ВходящийРаздел.Уровень + 1), Новый Структура("Уровень", ""));
					ДанныеСтраницы.Вставить("РазделЗаполнен", РазделЗаполнен(ДанныеСтраницы));
					МассивСтраниц.Добавить(ДанныеСтраницы);
					
				КонецЦикла;
				СтруктураПриемник.Вставить("КолвоСтраниц" + КлючПриложения, МассивСтраниц.Количество());
				СтруктураПриемник.Вставить(КлючПриложения, МассивСтраниц);
				Если ВходящийРаздел.Уровень = 2 Тогда
					ВходящийРаздел.Уровень = 1;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьСлужебныеДанные()
	
	ИменаРазделов = Новый Структура();
	
	ИменаРазделов.Вставить("Р00", "Титульный");
	ИменаРазделов.Вставить("Р01", "Раздел1");
	ИменаРазделов.Вставить("Р02", "Раздел2");
	ИменаРазделов.Вставить("Р21", "Раздел2");
	ИменаРазделов.Вставить("Р22", "Раздел2");
	ИменаРазделов.Вставить("Р23", "Раздел2");
	ИменаРазделов.Вставить("Р24", "Раздел2");
	ИменаРазделов.Вставить("Р25", "Раздел2");
	ИменаРазделов.Вставить("Р26", "Раздел2");
	ИменаРазделов.Вставить("Р03", "Раздел3");
	ИменаРазделов.Вставить("Р31", "Раздел3");
	ИменаРазделов.Вставить("П01", "Приложение1");
	ИменаРазделов.Вставить("П02", "Приложение2");
	ИменаРазделов.Вставить("П03", "Приложение3");
	ИменаРазделов.Вставить("П04", "Приложение4");
	ИменаРазделов.Вставить("П05", "Приложение5");
	ИменаРазделов.Вставить("П52", "Приложение5");
	ИменаРазделов.Вставить("П06", "Приложение6");
	ИменаРазделов.Вставить("П61", "Приложение6");
	ИменаРазделов.Вставить("П62", "Приложение612_613");
	ИменаРазделов.Вставить("П63", "Приложение612_613");
	ИменаРазделов.Вставить("П64", "Приложение614");
	
	ДанныеКС.Вставить("ИменаРазделов", ИменаРазделов);

	ПредставленияРазделов = Новый Структура();
	
	ПредставленияРазделов.Вставить("Р00", "Титульный лист");
	ПредставленияРазделов.Вставить("Р01", "Раздела 1");
	ПредставленияРазделов.Вставить("Р02", "Раздела 2");
	ПредставленияРазделов.Вставить("Р21", "подраздела 2.1 Раздела 2");
	ПредставленияРазделов.Вставить("Р22", "подраздела 2.2 Раздела 2");
	ПредставленияРазделов.Вставить("Р23", "подраздела 2.3 Раздела 2");
	ПредставленияРазделов.Вставить("Р24", "подраздела 2.4 Раздела 2");
	ПредставленияРазделов.Вставить("Р25", "подраздела 2.5 Раздела 2");
	ПредставленияРазделов.Вставить("Р26", "подраздела 2.4.1 Раздела 2");
	ПредставленияРазделов.Вставить("Р03", "Раздела 3");
	ПредставленияРазделов.Вставить("Р31", "подраздела 3.1 Раздела 3");
	ПредставленияРазделов.Вставить("П01", "Приложения 1");
	ПредставленияРазделов.Вставить("П02", "Приложения 2");
	ПредставленияРазделов.Вставить("П03", "Приложения 3");
	ПредставленияРазделов.Вставить("П04", "Приложения 4");
	ПредставленияРазделов.Вставить("П05", "Приложения 5");
	ПредставленияРазделов.Вставить("П52", "подраздела 1.2 Приложения 5");
	ПредставленияРазделов.Вставить("П06", "Приложения 6");
	ПредставленияРазделов.Вставить("П61", "подраздела 1.1 Приложения 6");
	ПредставленияРазделов.Вставить("П62", "подраздела 1.2 Приложения 6");
	ПредставленияРазделов.Вставить("П63", "подраздела 1.3 Приложения 6");
	ПредставленияРазделов.Вставить("П64", "подраздела 1.4 Приложения 6");
	
	ДанныеКС.Вставить("ПредставленияРазделов", ПредставленияРазделов);
	
	МногострочныеЧасти = "П00001М2,П00003М2,П00102М2,П00102М3,П00104М2";
	ДанныеКС.Вставить("МногострочныеЧасти", МногострочныеЧасти);
	
	ПоляТитульногоЛиста = Новый Структура();
	ПоляТитульногоЛиста.Вставить("Р00С001", "Дата подписи");
	ПоляТитульногоЛиста.Вставить("Р00С002", "Отчетный год");
	ПоляТитульногоЛиста.Вставить("Р00С003", "Код формы реорганизации");
	
	ДанныеКС.Вставить("ПоляТитульногоЛиста", ПоляТитульногоЛиста);
	
	МногостраничныеРазделы = Новый Массив;
	
	МногостраничныеРазделы.Добавить("Р02");
	МногостраничныеРазделы.Добавить("Р21");
	МногостраничныеРазделы.Добавить("Р22");
	МногостраничныеРазделы.Добавить("Р23");
	МногостраничныеРазделы.Добавить("Р24");
	МногостраничныеРазделы.Добавить("Р25");
	МногостраничныеРазделы.Добавить("Р26");
	МногостраничныеРазделы.Добавить("П01");
	МногостраничныеРазделы.Добавить("П02");
	МногостраничныеРазделы.Добавить("П03");
	МногостраничныеРазделы.Добавить("П04");
	МногостраничныеРазделы.Добавить("П05");
	МногостраничныеРазделы.Добавить("П06");
	
	ДанныеКС.Вставить("МногостраничныеРазделы", МногостраничныеРазделы);
	
	ЦелочисленныеРазделы = Новый Массив;
	ЦелочисленныеРазделы.Добавить("Р01");
	ЦелочисленныеРазделы.Добавить("Р02");
	ЦелочисленныеРазделы.Добавить("Р24");
	ЦелочисленныеРазделы.Добавить("Р26");
	
	ДанныеКС.Вставить("ЦелочисленныеРазделы", ЦелочисленныеРазделы);
	
	МассивПолейСписочныхЗначений = Новый Массив;
	
	// Раздел 1
	МассивПолейСписочныхЗначений.Добавить("П00001М102000");
	МассивПолейСписочныхЗначений.Добавить("П00001М203000");
	
	// Раздел 2
	МассивПолейСписочныхЗначений.Добавить("П000020001003");
	МассивПолейСписочныхЗначений.Добавить("П000020002003");
	МассивПолейСписочныхЗначений.Добавить("П00021М100001");
	МассивПолейСписочныхЗначений.Добавить("П00021М100002");
	МассивПолейСписочныхЗначений.Добавить("П00022М100001");
	МассивПолейСписочныхЗначений.Добавить("П00023М100001");
	МассивПолейСписочныхЗначений.Добавить("П00024М100001");
	МассивПолейСписочныхЗначений.Добавить("П00241М100001");
	МассивПолейСписочныхЗначений.Добавить("П00025М100001");  
	
	// Раздел 3
	МассивПолейСписочныхЗначений.Добавить("П000030001003");
	МассивПолейСписочныхЗначений.Добавить("П00003М102003");
	МассивПолейСписочныхЗначений.Добавить("П00003М205003");
	МассивПолейСписочныхЗначений.Добавить("П00003М206003");
	МассивПолейСписочныхЗначений.Добавить("П00003М207003");

	// Приложение 1
	МассивПолейСписочныхЗначений.Добавить("П001010001003");
	МассивПолейСписочныхЗначений.Добавить("П00101М100001");
	МассивПолейСписочныхЗначений.Добавить("П00101М100002");
	
	// Приложение 2
	МассивПолейСписочныхЗначений.Добавить("П001020000103");
	МассивПолейСписочныхЗначений.Добавить("П00102М106000");
	МассивПолейСписочныхЗначений.Добавить("П00102М207003");
	МассивПолейСписочныхЗначений.Добавить("П00102М308003");
	МассивПолейСписочныхЗначений.Добавить("П00102М409003");
	
	// Приложение 3
	МассивПолейСписочныхЗначений.Добавить("П00103М100001");

	// Приложение 4
	МассивПолейСписочныхЗначений.Добавить("П001040000103");

	// Приложение 6
	МассивПолейСписочныхЗначений.Добавить("П001060000103");

	ТаблицаСписков = РеквизитФормыВЗначение("СвойстваПоказателей", Тип("ТаблицаЗначений"));
	СоответствиеСписков = Новый Соответствие;
	
	Для каждого СтрокаТЗ Из ТаблицаСписков Цикл
		Если НЕ МассивПолейСписочныхЗначений.Найти(СтрокаТЗ.Показатель) = Неопределено Тогда
			СоответствиеЗначений = Новый Соответствие;
			Для каждого СтрокаЗначения Из СтрокаТЗ.ТаблицаЗначений Цикл
				СоответствиеЗначений.Вставить(СтрокаЗначения.Код, 1);
			КонецЦикла;
			СоответствиеСписков.Вставить(СтрокаТЗ.Показатель, СоответствиеЗначений);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеКС.Вставить("СоответствиеСписков", СоответствиеСписков);
	
	ДанныеКС.Вставить("СтавкиАкцизов", ПолучитьСтавкиАкциза(ДанныеКС.ДатаОкончания));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С010"	, "П000020001003");
	ИменаПоказателей.Вставить("Р21Г001"	, "П00021М100001_");
	ИменаПоказателей.Вставить("Р31С001"	, "П00003М207003_");
	ИменаПоказателей.Вставить("П01С010"	, "П001010001003"); 
	ИменаПоказателей.Вставить("П01Г001"	, "П00101М100001_");
	ИменаПоказателей.Вставить("П01Г005"	, "П00101М100005_"); 
	ИменаПоказателей.Вставить("П01Г006"	, "П00101М100006_"); 
	ИменаПоказателей.Вставить("П01Г007"	, "П00101М100007_"); 
	ИменаПоказателей.Вставить("П02П060"	, "П00102М106000_");
	ИменаПоказателей.Вставить("П02П086"	, "П00102М308006_");
	ИменаПоказателей.Вставить("П02П087"	, "П00102М308007_");
	ИменаПоказателей.Вставить("П05С010"	, "П001050001003");
	ИменаПоказателей.Вставить("П05С050"	, "П001050005003");
	ИменаПоказателей.Вставить("П06С010"	, "П001060001003");
	ИменаПоказателей.Вставить("П62С210"	, "П00106М121003_");
	ИменаПоказателей.Вставить("П64С385"	, "П00106М338503_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	МассивКодовР2_01	= Новый Массив;
	МассивКодовПТ_Р3	= Новый Массив;
	МассивКодовПТ_П1	= Новый Массив;
	МассивКодовПТ_П2	= Новый Массив;
	МассивКодовПТНП_П2	= Новый Массив;
	МассивКодовНИзв5	= Новый Массив;
	МассивКодовПТ5		= Новый Массив;
	МассивКодовПТ612 	= Новый Массив;
	МассивКодовПТ614 	= Новый Массив;
	МассивКодовБГПТ612 	= Новый Массив;
	МассивКодовБГПТ614 	= Новый Массив;
	МассивНомеровСтрок 	= Новый Массив(2); 
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
		
		Если Показатели.Р02С010.Значение = "294" Тогда
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
				ЗаполнитьПоказатель(Показатели.Р21Г001, СтраницаРаздела, Счетчик);
				
				Если НЕ СтрНайти("10024,10025,10026", Показатели.Р21Г001.Значение) = 0 Тогда
					КодПТ = Показатели.Р02С010.Значение + Показатели.Р21Г001.Значение;
					Если МассивКодовР2_01.Найти(КодПТ) = Неопределено Тогда
						МассивКодовР2_01.Добавить(КодПТ);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

	КонецЦикла;
	
	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
			ЗаполнитьПоказатель(Показатели.Р31С001, ДанныеКС.Раздел3, МассивНомеровСтрок);
	
			Если МассивКодовПТ_Р3.Найти(Показатели.Р31С001.Значение) = Неопределено Тогда
				МассивКодовПТ_Р3.Добавить(Показатели.Р31С001.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл
		ЗаполнитьПоказатель(Показатели.П01С010, СтраницаРаздела); 
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00101М1 Цикл
			ЗаполнитьПоказатель(Показатели.П01Г001, СтраницаРаздела, Счетчик);
			ЗаполнитьПоказатель(Показатели.П01Г006, СтраницаРаздела, Счетчик);
			ЗаполнитьПоказатель(Показатели.П01Г007, СтраницаРаздела, Счетчик);
			
			КодПТ = Показатели.П01С010.Значение + Показатели.П01Г001.Значение + Показатели.П01Г006.Значение 
				+ Показатели.П01Г007.Значение;
			Если МассивКодовПТ_П1.Найти(КодПТ) = Неопределено Тогда
				МассивКодовПТ_П1.Добавить(КодПТ);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
		
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			ЗаполнитьПоказатель(Показатели.П02П060, СтраницаРаздела, Счетчик);
			Если МассивКодовПТ_П2.Найти(Показатели.П02П060.Значение) = Неопределено Тогда
				МассивКодовПТ_П2.Добавить(Показатели.П02П060.Значение);
			КонецЕсли;
			
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00102М3_" + XMLСтрока(Счетчик)];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьПоказатель(Показатели.П02П086, СтраницаРаздела, МассивНомеровСтрок);
				ЗаполнитьПоказатель(Показатели.П02П087, СтраницаРаздела, МассивНомеровСтрок);
				
				КодПТНП = Показатели.П02П060.Значение + Показатели.П02П086.Значение + Показатели.П02П087.Значение; 
				Если МассивКодовПТНП_П2.Найти(КодПТНП) = Неопределено Тогда
					МассивКодовПТНП_П2.Добавить(КодПТНП);
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла;
	КонецЦикла;
		
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		ЗаполнитьПоказатель(Показатели.П05С010, СтраницаРаздела);
		Если МассивКодовНИзв5.Найти(Показатели.П05С010.Значение) = Неопределено Тогда
			МассивКодовНИзв5.Добавить(Показатели.П05С010.Значение);
		КонецЕсли;
		
		ЗаполнитьПоказатель(Показатели.П05С050, СтраницаРаздела);
		Если МассивКодовПТ5.Найти(Показатели.П05С050.Значение) = Неопределено Тогда
			МассивКодовПТ5.Добавить(Показатели.П05С050.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗаполнитьПоказатель(Показатели.П06С010, СтраницаРаздела);
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
		
				ЗаполнитьПоказатель(Показатели.П62С210, СтраницаПодраздела, Счетчик);
				Ключ_БГ_ПТ = Ключ_БГ_ПТ(Показатели.П06С010.Значение, Показатели.П62С210.Значение);
		
				Если МассивКодовПТ612.Найти(Показатели.П62С210.Значение) = Неопределено Тогда
					МассивКодовПТ612.Добавить(Показатели.П62С210.Значение);
				КонецЕсли;
		
				Если МассивКодовБГПТ612.Найти(Ключ_БГ_ПТ) = Неопределено Тогда
					МассивКодовБГПТ612.Добавить(Ключ_БГ_ПТ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗаполнитьПоказатель(Показатели.П64С385, СтраницаПодраздела, Счетчик);
				Ключ_БГ_ПТ = Ключ_БГ_ПТ(Показатели.П06С010.Значение, Показатели.П64С385.Значение);
		
				Если МассивКодовПТ614.Найти(Показатели.П64С385.Значение) = Неопределено Тогда
					МассивКодовПТ614.Добавить(Показатели.П64С385.Значение);
				КонецЕсли;
		
				Если МассивКодовБГПТ614.Найти(Ключ_БГ_ПТ) = Неопределено Тогда
					МассивКодовБГПТ614.Добавить(Ключ_БГ_ПТ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	ДанныеКС.Вставить("МассивКодовР2_01"	, МассивКодовР2_01);
	ДанныеКС.Вставить("МассивКодовПТ_Р3"	, МассивКодовПТ_Р3);
	ДанныеКС.Вставить("МассивКодовПТ_П1"	, МассивКодовПТ_П1);
	ДанныеКС.Вставить("МассивКодовПТ_П2"	, МассивКодовПТ_П2);
	ДанныеКС.Вставить("МассивКодовПТНП_П2"	, МассивКодовПТНП_П2);
	ДанныеКС.Вставить("МассивКодовНИзв5"	, МассивКодовНИзв5);
	ДанныеКС.Вставить("МассивКодовПТ5"		, МассивКодовПТ5);
	ДанныеКС.Вставить("МассивКодовПТ612"	, МассивКодовПТ612); 
	ДанныеКС.Вставить("МассивКодовПТ614"	, МассивКодовПТ614); 
	ДанныеКС.Вставить("МассивКодовБГПТ612"	, МассивКодовБГПТ612); 
	ДанныеКС.Вставить("МассивКодовБГПТ614"	, МассивКодовБГПТ614); 

	СформироватьПриоритетыРазделов();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьТаблицыОтчета()
	
	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(20));
	ТипСтрока5	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(5));
	ТипЧисло	= Новый ОписаниеТипов("Число");
	ТипДата		= Новый ОписаниеТипов("Дата");
	ТипРО		= Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет");

	ТаблицаР1 = Новый ТаблицаЗначений;
	ТаблицаР1.Колонки.Добавить("Р01С020"		, ТипСтрока);
	ТаблицаР1.Колонки.Добавить("Р01С030"		, ТипСтрока5);
	ТаблицаР1.Колонки.Добавить("Р01С040"		, ТипЧисло);
	
	ТаблицаР1.Колонки.Добавить("НомерСтраницы"	, ТипЧисло);
	ТаблицаР1.Колонки.Добавить("НомерСтроки"	, ТипСтрока5);

	ТаблицаР2 = Новый ТаблицаЗначений;
	ТаблицаР2.Колонки.Добавить("Р02С010"		, ТипСтрока5);
	ТаблицаР2.Колонки.Добавить("Р02С020"		, ТипСтрока);
	ТаблицаР2.Колонки.Добавить("Р24Г001"		, ТипСтрока5);
	ТаблицаР2.Колонки.Добавить("Р24Г002"		, ТипЧисло);
	ТаблицаР2.Колонки.Добавить("Р26Г001"		, ТипСтрока5);
	ТаблицаР2.Колонки.Добавить("Р26Г002"		, ТипЧисло);
	ТаблицаР2.Колонки.Добавить("НомерСтраницы"	, ТипЧисло);
	ТаблицаР2.Колонки.Добавить("НомерСтроки"	, ТипЧисло);
	
	ДанныеКС.Вставить("ТаблицаР1"				, ТаблицаР1);
	ДанныеКС.Вставить("ТаблицаР2"				, ТаблицаР2);

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыОтчета()

#Область Раздел_1
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С030"	, "П00001М203000_");
	ИменаПоказателей.Вставить("Р01С040"	, "П00001М204000_");
	ИменаПоказателей.Вставить("Р01С050"	, "П00001М105000_"); 
	ИменаПоказателей.Вставить("Р01С055"	, "П00001М105500_"); 
	ИменаПоказателей.Вставить("Р01С060"	, "П00001М106000_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	МассивНомеровСтрок 	= Новый Массив(2);
	МассивКБК_Р1		= Новый Массив;
	
	Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл 
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		ЗаполнитьПоказатель(Показатели.Р01С020, ДанныеКС.Раздел1, Счетчик);
		
		Если МассивКБК_Р1.Найти(Показатели.Р01С020.Значение) = Неопределено Тогда
			МассивКБК_Р1.Добавить(Показатели.Р01С020.Значение);
		КонецЕсли;

		КолвоСтрок2 = ДанныеКС.Раздел1["КолвоСтрокП00001М2_" + Счетчик];
		Для Счетчик2 = 1 По КолвоСтрок2 Цикл 
			
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
			
			ЗаполнитьПоказатель(Показатели.Р01С030, ДанныеКС.Раздел1, МассивНомеровСтрок);
			ЗаполнитьПоказатель(Показатели.Р01С040, ДанныеКС.Раздел1, МассивНомеровСтрок);
			
			НоваяСтрока					= ДанныеКС.ТаблицаР1.Добавить();
			НоваяСтрока.Р01С020			= Показатели.Р01С020.Значение;
			НоваяСтрока.Р01С030			= Показатели.Р01С030.Значение;
			НоваяСтрока.Р01С040			= Показатели.Р01С040.Значение;
			НоваяСтрока.НомерСтраницы	= ДанныеКС.Раздел1.НомерСтраницы;
			НоваяСтрока.НомерСтроки		= СтрСоединить(МассивНомеровСтрок, "_");
			
		КонецЦикла;
	КонецЦикла;
	
	ДанныеКС.Вставить("КБК_Р1", МассивКБК_Р1); 

#КонецОбласти

#Область Раздел_2

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С010", "П000020001003");
	ИменаПоказателей.Вставить("Р02С020", "П000020002003");
	ИменаПоказателей.Вставить("Р24Г001", "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002", "П00024М100002_");
	ИменаПоказателей.Вставить("Р26Г001", "П00241М100001_");
	ИменаПоказателей.Вставить("Р26Г002", "П00241М100002_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела2 Из ДанныеКС.Раздел2 Цикл
	
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела2);
		ЗаполнитьПоказатель(Показатели.Р02С020, СтраницаРаздела2);
		
		Для Счетчик = 1 По СтраницаРаздела2.КолвоСтрокП00024М1 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтраницаРаздела2, Счетчик);
			ЗаполнитьПоказатель(Показатели.Р24Г002, СтраницаРаздела2, Счетчик);
		
			НоваяСтрока					= ДанныеКС.ТаблицаР2.Добавить();
			НоваяСтрока.Р02С010			= Показатели.Р02С010.Значение;
			НоваяСтрока.Р02С020			= Показатели.Р02С020.Значение;
			НоваяСтрока.Р24Г001			= Показатели.Р24Г001.Значение;
			НоваяСтрока.Р24Г002			= Показатели.Р24Г002.Значение;
			НоваяСтрока.НомерСтраницы	= СтраницаРаздела2.НомерСтраницы;
			НоваяСтрока.НомерСтроки		= Счетчик;
		
		КонецЦикла;
		
		Для Счетчик = 1 По СтраницаРаздела2.КолвоСтрокП00241М1 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р26Г001, СтраницаРаздела2, Счетчик);
			ЗаполнитьПоказатель(Показатели.Р26Г002, СтраницаРаздела2, Счетчик);
		
			НоваяСтрока					= ДанныеКС.ТаблицаР2.Добавить();
			НоваяСтрока.Р02С010			= Показатели.Р02С010.Значение;
			НоваяСтрока.Р02С020			= Показатели.Р02С020.Значение;
			НоваяСтрока.Р26Г001			= Показатели.Р26Г001.Значение;
			НоваяСтрока.Р26Г002			= Показатели.Р26Г002.Значение;
			НоваяСтрока.НомерСтраницы	= СтраницаРаздела2.НомерСтраницы;
			НоваяСтрока.НомерСтроки		= Счетчик;
		
		КонецЦикла;
	КонецЦикла;

#КонецОбласти

КонецПроцедуры

&НаСервере
Процедура СформироватьПриоритетыРазделов()
	
	ПриоритетыРазделов = Новый Массив;
	ПриоритетыРазделов.Добавить("Раздел 1"); 
	ПриоритетыРазделов.Добавить("Раздел 2"); 
	ПриоритетыРазделов.Добавить("Раздел 3");
	ПриоритетыРазделов.Добавить("Приложение 1");
	ПриоритетыРазделов.Добавить("Приложение 2");
	ПриоритетыРазделов.Добавить("Приложение 3");
	ПриоритетыРазделов.Добавить("Приложение 4");
	ПриоритетыРазделов.Добавить("Приложение 5");
	ПриоритетыРазделов.Добавить("Приложение 6");
	
	ДанныеКС.Вставить("ПриоритетыРазделов", ПриоритетыРазделов);
	
КонецПроцедуры

&НаСервере
Функция ПолучитьСтавкиАкциза(ДатаДействия);
	
	СтавкиАкцизов = Новый Соответствие;
	СтавкиАкцизов.Вставить("", 0); 
	
	Если НЕ ЗначениеЗаполнено(ДатаДействия) Тогда 
		Возврат СтавкиАкцизов;
	КонецЕсли; 
	
	ГодПериода = Год(ДатаДействия);
	МесПериода = Месяц(ДатаДействия);
		
	Если ГодПериода = 2026 Тогда
		
		СтавкиАкцизов.Вставить("111", 696);
		СтавкиАкцизов.Вставить("121", 696);
		СтавкиАкцизов.Вставить("140", 696);
		СтавкиАкцизов.Вставить("150", 696);
		СтавкиАкцизов.Вставить("160", 696);
		СтавкиАкцизов.Вставить("166", 696);
		СтавкиАкцизов.Вставить("170", 696);
		СтавкиАкцизов.Вставить("224", 696);
		СтавкиАкцизов.Вставить("225", 696);
		СтавкиАкцизов.Вставить("226", 696);
		СтавкиАкцизов.Вставить("227", 696);
		СтавкиАкцизов.Вставить("232", 28);
		СтавкиАкцизов.Вставить("251", 38);
		СтавкиАкцизов.Вставить("252", 38);
		СтавкиАкцизов.Вставить("253", 38);
		СтавкиАкцизов.Вставить("254", 38);
		СтавкиАкцизов.Вставить("255", 38);
		СтавкиАкцизов.Вставить("256", 38);
		СтавкиАкцизов.Вставить("274", 129);
		СтавкиАкцизов.Вставить("275", 129);
		СтавкиАкцизов.Вставить("276", 116);
		СтавкиАкцизов.Вставить("277", 116);
		СтавкиАкцизов.Вставить("278", 153);
		СтавкиАкцизов.Вставить("279", 153);
		СтавкиАкцизов.Вставить("287", 38);
		СтавкиАкцизов.Вставить("288", 153);
		СтавкиАкцизов.Вставить("289", 116);
		СтавкиАкцизов.Вставить("290", 696);
		СтавкиАкцизов.Вставить("294", 32);
		СтавкиАкцизов.Вставить("298", 7);
		СтавкиАкцизов.Вставить("310", 0);
		СтавкиАкцизов.Вставить("320", 28);
		СтавкиАкцизов.Вставить("330", 53);
		
	ИначеЕсли ГодПериода = 2025 Тогда
		
		СтавкиАкцизов.Вставить("111", 740);
		СтавкиАкцизов.Вставить("121", 740);
		СтавкиАкцизов.Вставить("140", 740);
		СтавкиАкцизов.Вставить("150", 740);
		СтавкиАкцизов.Вставить("160", 740);
		СтавкиАкцизов.Вставить("166", 740);
		СтавкиАкцизов.Вставить("170", 740);
		СтавкиАкцизов.Вставить("224", 740);
		СтавкиАкцизов.Вставить("225", 740);
		СтавкиАкцизов.Вставить("226", 740);
		СтавкиАкцизов.Вставить("227", 740);
		СтавкиАкцизов.Вставить("232", 30);
		СтавкиАкцизов.Вставить("251", 38);
		СтавкиАкцизов.Вставить("252", 38);
		СтавкиАкцизов.Вставить("253", 38);
		СтавкиАкцизов.Вставить("254", 38);
		СтавкиАкцизов.Вставить("255", 38);
		СтавкиАкцизов.Вставить("256", 38);
		СтавкиАкцизов.Вставить("274", 125);
		СтавкиАкцизов.Вставить("275", 125);
		СтавкиАкцизов.Вставить("276", 113);
		СтавкиАкцизов.Вставить("277", 113);
		СтавкиАкцизов.Вставить("278", 148);
		СтавкиАкцизов.Вставить("279", 148);
		СтавкиАкцизов.Вставить("287", 113);
		СтавкиАкцизов.Вставить("288", 148);
		СтавкиАкцизов.Вставить("289", 113);
		СтавкиАкцизов.Вставить("290", 740);
		СтавкиАкцизов.Вставить("294", 32);
		СтавкиАкцизов.Вставить("298", 10);
		СтавкиАкцизов.Вставить("310", 0);
		СтавкиАкцизов.Вставить("320", 30);
		СтавкиАкцизов.Вставить("330", 56);
		
	ИначеЕсли ГодПериода = 2024 Тогда
		
		СтавкиАкцизов.Вставить("111", 643);
		СтавкиАкцизов.Вставить("121", 643);
		СтавкиАкцизов.Вставить("140", 643);
		СтавкиАкцизов.Вставить("150", 643);
		СтавкиАкцизов.Вставить("160", 643);
		СтавкиАкцизов.Вставить("166", 643);
		СтавкиАкцизов.Вставить("170", 643);
		СтавкиАкцизов.Вставить("224", 643);
		СтавкиАкцизов.Вставить("225", 643);
		СтавкиАкцизов.Вставить("226", 643);
		СтавкиАкцизов.Вставить("227", 643);
		СтавкиАкцизов.Вставить("232", 26);
		СтавкиАкцизов.Вставить("251", 36);
		СтавкиАкцизов.Вставить("252", 36);
		СтавкиАкцизов.Вставить("253", 36);
		СтавкиАкцизов.Вставить("254", 36);
		СтавкиАкцизов.Вставить("255", 36);
		СтавкиАкцизов.Вставить("256", 36);
		СтавкиАкцизов.Вставить("274", 47);
		СтавкиАкцизов.Вставить("275", 47);
		СтавкиАкцизов.Вставить("276", 36);
		СтавкиАкцизов.Вставить("277", 36);
		СтавкиАкцизов.Вставить("287", 36);
		СтавкиАкцизов.Вставить("288", 47);
		СтавкиАкцизов.Вставить("289", 36);
		СтавкиАкцизов.Вставить("290", 643);
		СтавкиАкцизов.Вставить("294", 32);
		СтавкиАкцизов.Вставить("298", 7);
		СтавкиАкцизов.Вставить("310", 0);
		СтавкиАкцизов.Вставить("320", 26);
		СтавкиАкцизов.Вставить("330", 49);
		
		Если МесПериода >= 5 Тогда
			
			СтавкиАкцизов.Вставить("274", 119);
			СтавкиАкцизов.Вставить("275", 119);
			СтавкиАкцизов.Вставить("276", 108);
			СтавкиАкцизов.Вставить("277", 108);
			СтавкиАкцизов.Вставить("278", 141);
			СтавкиАкцизов.Вставить("279", 141);
			СтавкиАкцизов.Вставить("288", 141);
			СтавкиАкцизов.Вставить("289", 108);
			
		КонецЕсли;
		
	ИначеЕсли ГодПериода = 2023 Тогда
		
		СтавкиАкцизов.Вставить("111", 613);
		СтавкиАкцизов.Вставить("121", 613);
		СтавкиАкцизов.Вставить("140", 613);
		СтавкиАкцизов.Вставить("150", 613);
		СтавкиАкцизов.Вставить("160", 613);
		СтавкиАкцизов.Вставить("166", 613);
		СтавкиАкцизов.Вставить("170", 613);
		СтавкиАкцизов.Вставить("224", 613);
		СтавкиАкцизов.Вставить("225", 613);
		СтавкиАкцизов.Вставить("226", 613);
		СтавкиАкцизов.Вставить("227", 613);
		СтавкиАкцизов.Вставить("232", 25);
		СтавкиАкцизов.Вставить("251", 34);
		СтавкиАкцизов.Вставить("252", 34);
		СтавкиАкцизов.Вставить("253", 34);
		СтавкиАкцизов.Вставить("254", 34);
		СтавкиАкцизов.Вставить("255", 34);
		СтавкиАкцизов.Вставить("256", 34);
		СтавкиАкцизов.Вставить("274", 45);
		СтавкиАкцизов.Вставить("275", 45);
		СтавкиАкцизов.Вставить("276", 34);
		СтавкиАкцизов.Вставить("277", 34);
		СтавкиАкцизов.Вставить("287", 34);
		СтавкиАкцизов.Вставить("288", 45);
		СтавкиАкцизов.Вставить("289", 34);
		СтавкиАкцизов.Вставить("290", 613);
		СтавкиАкцизов.Вставить("294", 32);
		СтавкиАкцизов.Вставить("310", 0);
		СтавкиАкцизов.Вставить("320", 25);
		СтавкиАкцизов.Вставить("330", 47);
		
		Если МесПериода >= 7 Тогда 
			
			СтавкиАкцизов.Вставить("298", 7);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат СтавкиАкцизов;
		
КонецФункции

#КонецОбласти

#Область Сервис

&НаСервере
Функция СформироватьПоказатели(ИменаПоказателей, МассивЗамен = Неопределено)
	
	Показатели = Новый Структура;
	Счетчик = 0;
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		МассивПредставления		= Новый Массив;
		ИмяРаздела				= "";
		ПредставлениеРаздела	= "";
		
		Если МассивЗамен = Неопределено Тогда
			ПрефиксРаздела		= Сред(Элемент.Ключ, 1, 3);
		Иначе
			ПрефиксРаздела		= МассивЗамен[Счетчик];
		КонецЕсли;

		ПрефиксДополнения		= Сред(Элемент.Ключ, 4, 1);
		ПодстрокаСтроки 		= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы 			= Сред(Элемент.Значение, 13,1);
		ПодстрокаДополнения		= Сред(Элемент.Ключ, 8, 1);
		
		ДанныеКС.ИменаРазделов.Свойство(ПрефиксРаздела			, ИмяРаздела);
		ДанныеКС.ПредставленияРазделов.Свойство(ПрефиксРаздела	, ПредставлениеРаздела);
		
		Если ПрефиксРаздела = "Р00" Тогда
			МассивПредставления.Добавить(ДанныеКС.ПоляТитульногоЛиста[Элемент.Ключ]);
		ИначеЕсли ПрефиксДополнения	= "С" Тогда
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		ИначеЕсли ПрефиксДополнения = "Г" Тогда
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
		Иначе
			МассивПредставления.Добавить("Графа " + ПодстрокаГрафы);
			МассивПредставления.Добавить("Строка " + ПодстрокаСтроки);
		КонецЕсли;
		МассивПредставления.Добавить(ПредставлениеРаздела);
		
		Если ПодстрокаДополнения = "П" Тогда
			МассивПредставления.Добавить("предыдущего налогового периода");
		КонецЕсли;
		
		Представление			= СтрСоединить(МассивПредставления, " ");
		Многострочный			= СтрДлина(Элемент.Значение) = 14;
		Округление				= НЕ ДанныеКС.ЦелочисленныеРазделы.Найти(ПрефиксРаздела) = Неопределено;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ПрефиксРаздела"	, ПрефиксРаздела);
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяРаздела"		, ИмяРаздела);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет"			, ?(ПодстрокаДополнения = "П", ДанныеКС.ОтчетПНПСсылка, Неопределено));
		Показатели[Элемент.Ключ].Вставить("НомерСтраницы"	, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		Показатели[Элемент.Ключ].Вставить("ЗначениеСтр"		, "");
		Показатели[Элемент.Ключ].Вставить("Итог"			, 0);
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("Округление"		, Округление);
		Показатели[Элемент.Ключ].Вставить("Синоним"			, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
		Показатели[Элемент.Ключ].Вставить("Заполнять"		, Истина);
		Показатели[Элемент.Ключ].Вставить("Расшифровывать"	, Истина);
		Показатели[Элемент.Ключ].Вставить("Инверсия"		, Ложь); 
		
		Счетчик = Счетчик + 1;
		
	КонецЦикла;
	
	Возврат Показатели;
	
КонецФункции

&НаСервере
Процедура РасшифроватьПоказатель(Показатель)
		
	НоваяСтрока							= ТаблицаРасшифровки.Добавить();
	НоваяСтрока.НомерЭлемента			= ДанныеКС.Счетчик;
	
	НоваяСтрока.СсылкаНаОтчет			= ?(ЗначениеЗаполнено(Показатель.Отчет), 
		Показатель.Отчет, ДанныеКС.Отчет);
	НоваяСтрока.ИмяРаздела				= Показатель.ИмяРаздела;
	НоваяСтрока.ИмяПоказателя			= Показатель.ИмяПоказателя;
	НоваяСтрока.НомерСтраницы			= Показатель.НомерСтраницы;
	
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	
	Если ТипЗнч(Показатель.Значение) = Тип("Число") Тогда
		НоваяСтрока.ЗначениеПоказателя		= Показатель.Значение;
	Иначе
		НоваяСтрока.ЗначениеПоказателя		= Показатель.ЗначениеСтр;
	КонецЕсли;
	
	Показатель.Дополнение = "";
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказатель(Показатель, Источник, Знач НомерСтроки = Неопределено)
	
	Перем ЗначениеВИсточнике;
	
	Если ТипЗнч(НомерСтроки) = Тип("Массив") Тогда
		НомерСтроки = СтрСоединить(НомерСтроки, "_");
	КонецЕсли; 
	
	Если ТипЗнч(Источник) = Тип("Структура") Тогда
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки);
		КонецЕсли;
		
		Если Источник.Свойство(Показатель.ИмяПоказателя, ЗначениеВИсточнике) Тогда
			
			Показатель.НомерСтраницы = ?(Источник.Свойство("НомерСтраницы"), Источник.НомерСтраницы, 1);
			
			ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике);
			
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("СтрокаТаблицыЗначений") Тогда
	
		ЗначениеВИсточнике = Источник[Показатель.Синоним];
		
		Показатель.Отчет			= ДанныеКС.Отчет;
		Показатель.НомерСтраницы 	= Источник.НомерСтраницы;
			
		ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике);
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки);
		КонецЕсли;
	
	ИначеЕсли ТипЗнч(Источник) = Тип("ВыборкаИзРезультатаЗапроса") Тогда
	
		ЗначениеВИсточнике = Источник["Сумма"];
		
		Показатель.Отчет			= ДанныеКС.Отчет;
		Показатель.НомерСтраницы 	= Источник.НомерСтраницы;
			
		ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике);
		
		Если ЗначениеЗаполнено(НомерСтроки) Тогда
			Показатель.ИмяПоказателя = Лев(Показатель.ИмяПоказателя, 14) + XMLСтрока(НомерСтроки);
		КонецЕсли;
	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказатели(Показатели, Источник, Знач НомерСтроки = Неопределено);
	
	Для Каждого Элемент Из Показатели Цикл
		ЗаполнитьПоказатель(Элемент.Значение, Источник, НомерСтроки);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьПоказательЗначениями(Показатель, ЗначениеВИсточнике)

	Если ТипЗнч(ЗначениеВИсточнике) = Тип("Число") И Показатель.Округление Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = РегламентированнаяОтчетностьКлиентСервер.ОкруглитьЧислоПоФормату(ЭтаФорма, 
			ЗначениеВИсточнике);
		Показатель.Итог = Показатель.Итог + Показатель.Значение;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Число") Тогда
		
		ЗначениеВИсточнике = ?(Показатель.Инверсия, -ЗначениеВИсточнике, ЗначениеВИсточнике);
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.Итог = Показатель.Итог + ЗначениеВИсточнике;
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Строка") Тогда
		
		Показатель.Значение = СокрЛП(ЗначениеВИсточнике);
		Показатель.ЗначениеСтр = ?(ЗначениеЗаполнено(ЗначениеВИсточнике), Показатель.Значение, "(...)");
		
	ИначеЕсли ТипЗнч(ЗначениеВИсточнике) = Тип("Дата") Тогда
		
		Показатель.Значение = ЗначениеВИсточнике;
		Показатель.ЗначениеСтр = Формат(ЗначениеВИсточнике, "ДФ=dd.MM.yy; ДП=(...)");
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИРасшифроватьПоказатель(Показатель, Источник, НомерСтроки = Неопределено)
											
	Если Показатель.Заполнять Тогда
		ЗаполнитьПоказатель(Показатель, Источник, НомерСтроки);
			
		Если Показатель.Расшифровывать Тогда
			РасшифроватьПоказатель(Показатель);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьИРасшифроватьПоказатели(Показатели, Источник, НомерСтроки = Неопределено)
	
	Для каждого Элемент Из Показатели Цикл
			
		ЗаполнитьИРасшифроватьПоказатель(Элемент.Значение, Источник, НомерСтроки);
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗарегистрироватьПроверку();

	ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьТаблицуРезультата()
	
	Если ДанныеКС.ТолькоОшибки И НЕ НастройкиКС.ЭтоОшибка Тогда
		УдалитьСтрокиТаблицыРасшифровки(ДанныеКС.Счетчик);
		Возврат;
	КонецЕсли;
	
	Если НастройкиКС.ЭтоОшибка Тогда
		ДанныеКС.ЧислоОшибок = ДанныеКС.ЧислоОшибок + 1;
	КонецЕсли;
	
	НоваяСтрока = ТаблицаРезультата.Добавить();
	
	НоваяСтрока.Раздел 			= НастройкиКС.Раздел;
	НоваяСтрока.Приоритет		= НастройкиКС.Приоритет;
	
	НоваяСтрока.НомерЭлемента 	= ДанныеКС.Счетчик;
	НоваяСтрока.НомерКС 		= НастройкиКС.НомерКС;
	
	НоваяСтрока.Описание 		= НастройкиКС.Описание;
	НоваяСтрока.Детализация 	= НастройкиКС.Детализация;
	НоваяСтрока.Нарушение 		= НастройкиКС.Нарушение;
	НоваяСтрока.Основание 		= НастройкиКС.Основание;
	НоваяСтрока.Рекомендации 	= НастройкиКС.Рекомендации;
	
	НоваяСтрока.ДопСведения 	= НастройкиКС.ДопСведения;
	НоваяСтрока.Комментарий 	= НастройкиКС.Комментарий;
	
	НоваяСтрока.ЭтоОшибка 		= НастройкиКС.ЭтоОшибка;
		
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокиТаблицыРасшифровки(НомерЭлемента)
	
	ПараметрыОтбора = Новый Структура;
	ПараметрыОтбора.Вставить("НомерЭлемента", НомерЭлемента);
	
	УдаляемыеСтроки = ТаблицаРасшифровки.НайтиСтроки(ПараметрыОтбора);
	
	Для каждого УдаляемаяСтрока Из УдаляемыеСтроки Цикл
		ТаблицаРасшифровки.Удалить(УдаляемаяСтрока);
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПодготовитьНастройки(Заголовки)
		
	НастройкиКС = Новый Структура;
	
	НастройкиКС.Вставить("Раздел"				, "");
	НастройкиКС.Вставить("НомерКС"				, "");
	
	НастройкиКС.Вставить("Описание"				, "");
	НастройкиКС.Вставить("Детализация"			, "");
	НастройкиКС.Вставить("Нарушение"			, "");
	НастройкиКС.Вставить("Основание"			, "");
	НастройкиКС.Вставить("Рекомендации"			, "");
	
	НастройкиКС.Вставить("ДопСведения"			, "");
	НастройкиКС.Вставить("Комментарий"			, "");
	
	НастройкиКС.Вставить("ЭтоОшибка"			, Ложь);
	
	НастройкиКС.Вставить("Условие"				, "");
	НастройкиКС.Вставить("ДляДокументации"		, "");
	
	НастройкиКС.Вставить("ШаблонДетализации"	, "");
	НастройкиКС.Вставить("ШаблонДопСведений"	, "");
	
	Для каждого ЭлементКоллекции Из Заголовки Цикл
		Если НастройкиКС.Свойство(ЭлементКоллекции.Ключ) Тогда
			НастройкиКС.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
		КонецЕсли; 
	КонецЦикла;
	
	Приоритет = ДанныеКС.ПриоритетыРазделов.Найти(НастройкиКС.Раздел);
	Приоритет = ?(Приоритет = Неопределено, 0, Приоритет + 1);
	
	НастройкиКС.Вставить("Приоритет"			, Приоритет);
	
	Если Документирование Тогда
		ДанныеКС.Счетчик = ДанныеКС.Счетчик + 1;
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, НастройкиКС);
		СтрокаОписания.НомерЭлемента = ДанныеКС.Счетчик;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПодготовитьРезультат();
	
	СтруктураРезультата = Новый Структура;
	
	СтруктураРезультата.Вставить("АдресТаблицыРезультата"		, ДанныеКС.АдресРезультата);
	СтруктураРезультата.Вставить("АдресТаблицыРасшифровки"		, ДанныеКС.АдресРасшифровки);
	СтруктураРезультата.Вставить("ЧислоОшибок"					, ДанныеКС.ЧислоОшибок);
	СтруктураРезультата.Вставить("ТекстЗаголовка"				, 
		РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(СтруктураРеквизитовФормы.мСохраненныйДок));
	СтруктураРезультата.Вставить("МакетСКП"						, ДанныеКС.МакетСКП);
	СтруктураРезультата.Вставить("ВариантСКП"					, ДанныеКС.ВариантСКП);
	
	Возврат СтруктураРезультата;
		
КонецФункции

&НаСервере
Функция РазделЗаполнен(Раздел)
	
	Если НЕ ТипЗнч(Раздел) = Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Для каждого Элемент Из Раздел Цикл
		Если НЕ ДанныеКС.МассивПолейИсключений.Найти(Элемент.Ключ) = Неопределено
			ИЛИ СтрНайти(Элемент.Ключ, "П00") = 0
			ИЛИ НЕ СтрНайти(Элемент.Ключ, "Колво") = 0
			ИЛИ НЕ СтрНайти(Элемент.Ключ, "МнЧасть") = 0
			Тогда
			Продолжить;
		КонецЕсли; 
		Если ЗначениеЗаполнено(Элемент.Значение) Тогда
			Возврат Истина;
		КонецЕсли;
	КонецЦикла; 
	
	Возврат Ложь;
	
КонецФункции

&НаСервере
Функция ЗначСтр(ЗначениеПоказателя)
	
	Возврат ?(ЗначениеЗаполнено(ЗначениеПоказателя), ЗначениеПоказателя, "(...)");
	
КонецФункции

&НаСервере
Функция КодНайден(ЗначениеКода, СтрокаКодов, Разделитель = ",")
	
	МассивКодов = СтрРазделить(СтрокаКодов, Разделитель);
	Возврат НЕ МассивКодов.Найти(ЗначениеКода) = Неопределено;
	
КонецФункции

&НаСервере
Функция Ключ_БГ_ПТ(НомерГарантии, КлючПТ)
	
	Возврат СокрЛП(НомерГарантии) + СокрЛП(КлючПТ);
	
КонецФункции

#КонецОбласти

#Область Проверки

#Область Проверки_Критические_НК_РФ

#Область Проверки_Раздела_1

&НаСервере
Процедура ПроверкаКС_8_1_1_к()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8.1.1.к';
													|en = '8.1.1.к'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 >= 0 в разрезе КБК';
													|en = 'Сумма акциза в стр.040 Раздела 1 >= 0 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0, КБК %2';
													|en = '%1 >= 0, КБК %2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму акциза в стр.040 Раздела 1 >= 0';
													|en = 'Укажите сумму акциза в стр.040 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@';
													|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@'")); 
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С040"	, "П00001М204000_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок 	= Новый Массив(2); 
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С040.Итог = 0;
		
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл 
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			ЗаполнитьПоказатель(Показатели.Р01С020, ДанныеКС.Раздел1, Счетчик);
			
			Если НЕ Показатели.Р01С020.Значение = КБК_Р1 Тогда 
				Продолжить;
			КонецЕсли;
			
			КолвоСтрок2 = ДанныеКС.Раздел1["КолвоСтрокП00001М2_" + Счетчик];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл 
				
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С040, ДанныеКС.Раздел1, МассивНомеровСтрок);
				
			КонецЦикла;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = Показатели.Р01С040.Итог < 0;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С040.Итог, ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_8_1_2_к()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8.1.2.к';
													|en = '8.1.2.к'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.060 Раздела 1 >= 0 в разрезе КБК';
													|en = 'Сумма акциза в стр.060 Раздела 1 >= 0 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0, КБК %2';
													|en = '%1 >= 0, КБК %2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму акциза в стр.060 Раздела 1 >= 0';
													|en = 'Укажите сумму акциза в стр.060 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@';
													|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@'")); 
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С060"	, "П00001М106000_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С060.Итог = 0;
		
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл 
			ЗаполнитьПоказатель(Показатели.Р01С020, ДанныеКС.Раздел1, Счетчик);
			
			Если НЕ Показатели.Р01С020.Значение = КБК_Р1 Тогда 
				Продолжить;
			КонецЕсли;
			
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С060, ДанныеКС.Раздел1, Счетчик);
			
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = Показатели.Р01С060.Итог < 0;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С060.Итог, ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_8_2_к()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8.2.к';
													|en = '8.2.к'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 03 в стр.030 Раздела 1 = гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 03 в стр.030 Раздела 1 = гр.2 подр. '") + 
		НСтр("ru = '2.4 Раздела 2 по коду 40001 в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр. ';
			|en = '2.4 Раздела 2 по коду 40001 в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр. '") +
		НСтр("ru = '2.4 Раздела 2 по коду 40002 в гр.1 подр.2.4 Раздела 2 по кодам видов подакцизных товаров ';
			|en = '2.4 Раздела 2 по коду 40002 в гр.1 подр.2.4 Раздела 2 по кодам видов подакцизных товаров '") +
		НСтр("ru = '294, 226, 227, 252, 254, 275, 277 в разрезе КБК';
			|en = '294, 226, 227, 252, 254, 275, 277 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3, код срока уплаты 03';
													|en = '%1 = %2, КБК %3, код срока уплаты 03'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@';
													|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@'")); 
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодСрока"			, "03");
	НастройкиКС.Вставить("КодыВидовПТ"		, СтрРазделить("294,226,227,252,254,275,277", ","));

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"	, "П00001М204000_");
	ИменаПоказателей.Вставить("Р24Г001"	, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"	, "П00024М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С040.Итог = 0;
		Показатели.Р24Г002.Итог = 0;
		УсловиеВыполнено = Ложь;
		
		ПараметрыОтбораР1 = Новый Структура;
		ПараметрыОтбораР1.Вставить("Р01С020", КБК_Р1);
		ПараметрыОтбораР1.Вставить("Р01С030", НастройкиКС.КодСрока);
		МассивСтрокР1 = ДанныеКС.ТаблицаР1.НайтиСтроки(ПараметрыОтбораР1);
		
		Если НЕ МассивСтрокР1.Количество() = 0 Тогда
			УсловиеВыполнено = Истина;
			Для каждого СтрокаР1 Из МассивСтрокР1 Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С040, СтрокаР1, СтрокаР1.НомерСтроки);
			КонецЦикла;
		КонецЕсли;
		
		Показатели.Р24Г002.Инверсия = Ложь;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40001" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		Показатели.Р24Г002.Инверсия = Истина;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40002" И СтрокаР2.Р02С020 = КБК_Р1 
				И НЕ НастройкиКС.КодыВидовПТ.Найти(СтрокаР2.Р02С010) = Неопределено Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р01С040.Итог = Макс(0, Показатели.Р24Г002.Итог);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С040.Итог, Макс(0, Показатели.Р24Г002.Итог), ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_8_3_к()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8.3.к';
													|en = '8.3.к'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 02 в стр.030 Раздела 1 = сумме гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 02 в стр.030 Раздела 1 = сумме гр.2 подр. '") + 
		НСтр("ru = '2.4.1 Раздела 2 по кодам 60005, 60007, 60009 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК';
			|en = '2.4.1 Раздела 2 по кодам 60005, 60007, 60009 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3, код срока уплаты 02';
													|en = '%1 = %2, КБК %3, код срока уплаты 02'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@';
													|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@'")); 
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодСрока"			, "02");
	НастройкиКС.Вставить("КодыПоказателей"	, СтрРазделить("60005,60007,60009", ","));
	
	ПроверкаКС_8_3_к_код();

КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_8_3_к_код()

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"	, "П00001М204000_");
	ИменаПоказателей.Вставить("Р26Г001"	, "П00241М100001_");
	ИменаПоказателей.Вставить("Р26Г002"	, "П00241М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С040.Итог = 0;
		Показатели.Р26Г002.Итог = 0;
		УсловиеВыполнено = Ложь;
		
		ПараметрыОтбораР1 = Новый Структура;
		ПараметрыОтбораР1.Вставить("Р01С020", КБК_Р1);
		ПараметрыОтбораР1.Вставить("Р01С030", НастройкиКС.КодСрока);
		МассивСтрокР1 = ДанныеКС.ТаблицаР1.НайтиСтроки(ПараметрыОтбораР1);
		
		Если НЕ МассивСтрокР1.Количество() = 0 Тогда
			УсловиеВыполнено = Истина;
			Для каждого СтрокаР1 Из МассивСтрокР1 Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С040, СтрокаР1, СтрокаР1.НомерСтроки);
			КонецЦикла;
		КонецЕсли;
		
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р26Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если НЕ НастройкиКС.КодыПоказателей.Найти(Показатели.Р26Г001.Значение) = Неопределено
				И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р26Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р01С040.Итог = Показатели.Р26Г002.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С040.Итог, Показатели.Р26Г002.Итог, ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_8_4_к()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8.4.к';
													|en = '8.4.к'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 01 в стр.030 Раздела 1 = сумме гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 01 в стр.030 Раздела 1 = сумме гр.2 подр. '") + 
		НСтр("ru = '2.4.1 Раздела 2 по коду 60006 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК';
			|en = '2.4.1 Раздела 2 по коду 60006 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3, код срока уплаты 01';
													|en = '%1 = %2, КБК %3, код срока уплаты 01'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@';
													|en = 'Приказ ФНС России от 29.02.2024 № ЕД-7-3/164@'")); 
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Критическая проверка';
													|en = 'Критическая проверка'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодСрока"			, "01");
	НастройкиКС.Вставить("КодыПоказателей"	, СтрРазделить("60006", ","));
	
	ПроверкаКС_8_3_к_код();

КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Основные_Проверки

#Область Раздел_1

&НаСервере
Процедура ПроверкаКС_02_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.01';
													|en = '02.01'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Код ОКТМО в стр.010 Раздела 1 должен быть заполнен';
													|en = 'Код ОКТМО в стр.010 Раздела 1 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Код ОКТМО в стр.010 Раздела 1 не заполнен';
													|en = 'Код ОКТМО в стр.010 Раздела 1 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните код ОКТМО в стр.010 Раздела 1';
													|en = 'Заполните код ОКТМО в стр.010 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С010"		, "П000010001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ЗарегистрироватьПроверку();
	ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1);

	НастройкиКС.ЭтоОшибка = ДанныеКС.Раздел1.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.Р01С010.Значение);
	НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
	ДополнитьТаблицуРезультата(); 
			
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.03';
													|en = '02.03'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'КБК в стр.020 Раздела 1 должен быть заполнен';
													|en = 'КБК в стр.020 Раздела 1 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КБК в стр.020 Раздела 1 не заполнен';
													|en = 'КБК в стр.020 Раздела 1 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КБК в стр.020 Раздела 1';
													|en = 'Заполните КБК в стр.020 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки);

	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"		, "П00001М102000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
	
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1, Счетчик);

		НастройкиКС.ЭтоОшибка = ДанныеКС.Раздел1.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.Р01С020.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации; 
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик); 
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.04';
													|en = '02.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КБК в стр.020 Раздела 1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.020 Раздела 1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК в стр.020 Раздела 1';
													|en = 'Возможно ошибочное значение КБК в стр.020 Раздела 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Выберите КБК в стр.020 Раздела 1 из списка выбора';
													|en = 'Выберите КБК в стр.020 Раздела 1 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"		, "П00001М102000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.Р01С020.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
	
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1, Счетчик);

			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р01С020.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р01С020.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик); 
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.05';
													|en = '02.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код срока уплаты в стр.030 Раздела 1 должен соответствовать списку допустимых значений';
			|en = 'Код срока уплаты в стр.030 Раздела 1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода срока уплаты в стр.030 Раздела 1';
													|en = 'Возможно ошибочное значение кода срока уплаты в стр.030 Раздела 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Выберите код срока уплаты в стр.030 Раздела 1 из списка выбора';
													|en = 'Выберите код срока уплаты в стр.030 Раздела 1 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С030"		, "П00001М203000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.Р01С030.ИмяПоказателя, 13)); 
	МассивНомеровСтрок = Новый Массив(2);
	
	Если НЕ Список = Неопределено Тогда
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			КолвоСтрок2 = ДанныеКС.Раздел1["КолвоСтрокП00001М2_" + Счетчик];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
				ЗарегистрироватьПроверку();
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1, МассивНомеровСтрок);

				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р01С030.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р01С030.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
			
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.08';
													|en = '02.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодами срока уплаты 03, 04 в стр.030 Раздела 1 = гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодами срока уплаты 03, 04 в стр.030 Раздела 1 = гр.2 подр. '") + 
		НСтр("ru = '2.4 Раздела 2 по коду 40001 в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр. ';
			|en = '2.4 Раздела 2 по коду 40001 в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр. '") +
		НСтр("ru = '2.4 Раздела 2 по коду 40002 в гр.1 подр.2.4 Раздела 2 в разрезе КБК';
			|en = '2.4 Раздела 2 по коду 40002 в гр.1 подр.2.4 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3';
													|en = '%1 = %2, КБК %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"	, "П00001М204000_");
	ИменаПоказателей.Вставить("Р24Г001"	, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"	, "П00024М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С040.Итог = 0;
		Показатели.Р24Г002.Итог = 0;
		УсловиеВыполнено = Ложь;
		
		ПараметрыОтбораР1 = Новый Структура;
		ПараметрыОтбораР1.Вставить("Р01С020", КБК_Р1);
		ПараметрыОтбораР1.Вставить("Р01С030", "03");
		МассивСтрокР1 = ДанныеКС.ТаблицаР1.НайтиСтроки(ПараметрыОтбораР1);
		
		Если НЕ МассивСтрокР1.Количество() = 0 Тогда
			УсловиеВыполнено = Истина;
			Для каждого СтрокаР1 Из МассивСтрокР1 Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С040, СтрокаР1, СтрокаР1.НомерСтроки);
			КонецЦикла;
		КонецЕсли; 
		
		ПараметрыОтбораР1 = Новый Структура;
		ПараметрыОтбораР1.Вставить("Р01С020", КБК_Р1);
		ПараметрыОтбораР1.Вставить("Р01С030", "04");
		МассивСтрокР1 = ДанныеКС.ТаблицаР1.НайтиСтроки(ПараметрыОтбораР1);
		
		Если НЕ МассивСтрокР1.Количество() = 0 Тогда
			УсловиеВыполнено = Истина;
			Для каждого СтрокаР1 Из МассивСтрокР1 Цикл
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С040, СтрокаР1, СтрокаР1.НомерСтроки);
			КонецЦикла;
		КонецЕсли; 
		
		Показатели.Р24Г002.Инверсия = Ложь;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40001" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		Показатели.Р24Г002.Инверсия = Истина;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40002" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р01С040.Итог = Макс(0, Показатели.Р24Г002.Итог);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С040.Итог, Макс(0, Показатели.Р24Г002.Итог), ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.09';
													|en = '02.09'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 02 в стр.030 Раздела 1 = сумме гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 02 в стр.030 Раздела 1 = сумме гр.2 подр. '") + 
		НСтр("ru = '2.4.1 Раздела 2 по кодам 60005, 60007, 60009 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК';
			|en = '2.4.1 Раздела 2 по кодам 60005, 60007, 60009 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3, код срока уплаты 02';
													|en = '%1 = %2, КБК %3, код срока уплаты 02'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодСрока"			, "02");
	НастройкиКС.Вставить("КодыПоказателей"	, СтрРазделить("60005,60007,60009", ","));
	
	ПроверкаКС_8_3_к_код();

КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.10';
													|en = '02.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 01 в стр.030 Раздела 1 = сумме гр.2 подр. ';
			|en = 'Сумма акциза в стр.040 Раздела 1 с кодом срока уплаты 01 в стр.030 Раздела 1 = сумме гр.2 подр. '") + 
		НСтр("ru = '2.4.1 Раздела 2 по коду 60006 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК';
			|en = '2.4.1 Раздела 2 по коду 60006 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3, код срока уплаты 01';
													|en = '%1 = %2, КБК %3, код срока уплаты 01'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 1';
													|en = 'Уточните сумму акциза в стр.040 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодСрока"			, "01");
	НастройкиКС.Вставить("КодыПоказателей"	, СтрРазделить("60006", ","));
	
	ПроверкаКС_8_3_к_код();

КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.11';
													|en = '02.11'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.040 Раздела 1 >= 0';
													|en = 'Сумма акциза в стр.040 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму акциза в стр.040 Раздела 1 >= 0';
													|en = 'Укажите сумму акциза в стр.040 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С040"		, "П00001М204000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		КолвоСтрок2 = ДанныеКС.Раздел1["КолвоСтрокП00001М2_" + Счетчик];
		Для Счетчик2 = 1 По КолвоСтрок2 Цикл
			
			ЗарегистрироватьПроверку();
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1, МассивНомеровСтрок);

			НастройкиКС.ЭтоОшибка = Показатели.Р01С040.Значение < 0;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р01С040.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтрСоединить(
				ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
			ДополнитьТаблицуРезультата(); 
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.12';
													|en = '02.12'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.050 Раздела 1 = гр.2 подр.2.4 Раздела 2 по коду 40002 ';
			|en = 'Сумма акциза в стр.050 Раздела 1 = гр.2 подр.2.4 Раздела 2 по коду 40002 '") + 
		НСтр("ru = 'в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр.2.4 Раздела 2 ';
			|en = 'в гр.1 подр.2.4 Раздела 2, уменьшенной на значение гр.2 подр.2.4 Раздела 2 '") +
		НСтр("ru = 'по коду 40001 в гр.1 подр.2.4 Раздела 2 в разрезе КБК';
			|en = 'по коду 40001 в гр.1 подр.2.4 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3';
													|en = '%1 = %2, КБК %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.050 Раздела 1';
													|en = 'Уточните сумму акциза в стр.050 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С002"	, "П00001М105000_");
	ИменаПоказателей.Вставить("Р24Г001"	, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"	, "П00024М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С002.Итог = 0;
		Показатели.Р24Г002.Итог = 0;
		
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р01С001, ДанныеКС.Раздел1, Счетчик);
			Если Показатели.Р01С001.Значение = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С002, ДанныеКС.Раздел1, Счетчик);
			КонецЕсли;
		КонецЦикла;
		
		Показатели.Р24Г002.Инверсия = Ложь;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40002" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;

		Показатели.Р24Г002.Инверсия = Истина;
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40001" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С002.Итог = Макс(0, Показатели.Р24Г002.Итог);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С002.Итог, Макс(0, Показатели.Р24Г002.Итог), ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.13';
													|en = '02.13'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.050 Раздела 1 >= 0';
													|en = 'Сумма акциза в стр.050 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму акциза в стр.050 Раздела 1 >= 0';
													|en = 'Укажите сумму акциза в стр.050 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00001М105000_");
	ПроверкаКС_02_13_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_13_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
			
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел1, Счетчик);

		НастройкиКС.ЭтоОшибка = Показатели.Р01С001.Значение < 0;
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р01С001.Значение);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик); 
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.14';
													|en = '02.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.055 Раздела 1 = гр.2 подр.2.4 Раздела 2 по коду 40003 в гр.1 подр.2.4 ';
			|en = 'Сумма акциза в стр.055 Раздела 1 = гр.2 подр.2.4 Раздела 2 по коду 40003 в гр.1 подр.2.4 '") + 
		НСтр("ru = 'Раздела 2 в разрезе КБК';
			|en = 'Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3';
													|en = '%1 = %2, КБК %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.055 Раздела 1';
													|en = 'Уточните сумму акциза в стр.055 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С001"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С002"	, "П00001М105500_");
	ИменаПоказателей.Вставить("Р24Г001"	, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"	, "П00024М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С002.Итог = 0;
		Показатели.Р24Г002.Итог = 0;
	
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р01С001, ДанныеКС.Раздел1, Счетчик);
			Если Показатели.Р01С001.Значение = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С002, ДанныеКС.Раздел1, Счетчик);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если Показатели.Р24Г001.Значение = "40003" И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р01С002.Итог = Показатели.Р24Г002.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С002.Итог, Показатели.Р24Г002.Итог, ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.15';
													|en = '02.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.055 Раздела 1 >= 0';
													|en = 'Сумма акциза в стр.055 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза';
													|en = 'Возможно ошибочная сумма акциза'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму акциза в стр.055 Раздела 1 >= 0';
													|en = 'Укажите сумму акциза в стр.055 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00001М105500_");
	ПроверкаКС_02_13_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.16';
													|en = '02.16'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма авансового платежа в стр.060 Раздела 1 = сумме гр.2 подр.2.4.1 Раздела 2 ';
			|en = 'Сумма авансового платежа в стр.060 Раздела 1 = сумме гр.2 подр.2.4.1 Раздела 2 '") + 
		НСтр("ru = 'по коду 60008 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК';
			|en = 'по коду 60008 в гр.1 подр.2.4.1 Раздела 2 в разрезе КБК'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2, КБК %3';
													|en = '%1 = %2, КБК %3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма авансового платежа';
													|en = 'Возможно ошибочная сумма авансового платежа'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.060 Раздела 1';
													|en = 'Уточните сумму авансового платежа в стр.060 Раздела 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("КодыПоказателей"	, СтрРазделить("60008", ","));
	
	ПроверкаКС_02_16_код();

КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_16_код()

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р01С020"	, "П00001М102000_");
	ИменаПоказателей.Вставить("Р01С060"	, "П00001М106000_");
	ИменаПоказателей.Вставить("Р26Г001"	, "П00241М100001_");
	ИменаПоказателей.Вставить("Р26Г002"	, "П00241М100002_");
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КБК_Р1 Из ДанныеКС.КБК_Р1 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.Р01С060.Итог = 0;
		Показатели.Р26Г002.Итог = 0;
		УсловиеВыполнено = Ложь;
	
		Для Счетчик = 1 По ДанныеКС.Раздел1.КолвоСтрокП00001М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р01С020, ДанныеКС.Раздел1, Счетчик);
			
			Если Показатели.Р01С020.Значение = КБК_Р1 Тогда
				Если НЕ УсловиеВыполнено Тогда
				    РасшифроватьПоказатель(Показатели.Р01С020);
					УсловиеВыполнено = Истина;
				КонецЕсли;
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р01С060, ДанныеКС.Раздел1, Счетчик);
			КонецЕсли; 
		КонецЦикла;
		
		Для каждого СтрокаР2 Из ДанныеКС.ТаблицаР2 Цикл 
			ЗаполнитьПоказатель(Показатели.Р26Г001, СтрокаР2, СтрокаР2.НомерСтроки);
			Если НЕ НастройкиКС.КодыПоказателей.Найти(Показатели.Р26Г001.Значение) = Неопределено
				И СтрокаР2.Р02С020 = КБК_Р1 Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р26Г002, СтрокаР2, СтрокаР2.НомерСтроки);
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р01С060.Итог = Показатели.Р26Г002.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации,
			Показатели.Р01С060.Итог, Показатели.Р26Г002.Итог, ЗначСтр(КБК_Р1));
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_02_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '02.17';
													|en = '02.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.060 Раздела 1 >= 0';
													|en = 'Сумма авансового платежа в стр.060 Раздела 1 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма авансового платежа';
													|en = 'Возможно ошибочная сумма авансового платежа'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Укажите сумму авансового платежа в стр.060 Раздела 1 >= 0';
													|en = 'Укажите сумму авансового платежа в стр.060 Раздела 1 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Строка %1 Раздела 1';
													|en = 'Строка %1 Раздела 1'"));
	ПодготовитьНастройки(Заголовки); 
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00001М106000_");
	ПроверкаКС_02_13_код();
	
КонецПроцедуры

#КонецОбласти

#Область Раздел_2

&НаСервере
Процедура ПроверкаКС_03_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.01';
													|en = '03.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.010 Раздела 2 должен соответствовать списку ';
			|en = 'Код подакцизного товара в стр.010 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Раздела 2';
			|en = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код подакцизного товара в стр.010 Раздела 2 из списка выбора';
			|en = 'Выберите код подакцизного товара в стр.010 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020001003");
	ПроверкаКС_03_01_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Показатели.Р02С001.ИмяПоказателя);
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р02С001.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р02С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.02';
													|en = '03.02'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'КБК в стр.020 Раздела 2 должен быть заполнен';
													|en = 'КБК в стр.020 Раздела 2 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КБК в стр.020 Раздела 2 не заполнен';
													|en = 'КБК в стр.020 Раздела 2 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КБК в стр.020 Раздела 2';
													|en = 'Заполните КБК в стр.020 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020002003");
	ПроверкаКС_03_02_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_02_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.Р02С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.03';
													|en = '03.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КБК в стр.020 Раздела 2 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.020 Раздела 2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК в стр.020 Раздела 2';
													|en = 'Возможно ошибочное значение КБК в стр.020 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Выберите КБК в стр.020 Раздела 2 из списка выбора';
													|en = 'Выберите КБК в стр.020 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П000020002003");
	ПроверкаКС_03_01_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.04';
													|en = '03.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.1 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.1 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.1 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.1 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.1 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00021М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивЗамен");
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_04_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21Г001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.Р21Г001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
				
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р21Г001.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р21Г001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.05';
													|en = '03.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.2 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.2 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.2 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.2 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.2 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.2';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00022М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"Р22", ","));
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.06';
													|en = '03.06'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.3 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.3 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.3 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.3 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.3 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.3';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00023М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"Р23", ","));
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.10';
													|en = '03.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.3 Раздела 2 = 30014, 30015, 30016, если стр.010 Раздела 2 = 294';
			|en = 'Код показателя в гр.1 подр.2.3 Раздела 2 = 30014, 30015, 30016, если стр.010 Раздела 2 = 294'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 30014, 30015, 30016, если %2 = 294';
													|en = '%1 = 30014, 30015, 30016, если %2 = 294'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.3 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код показателя в гр.1 подр.2.3 Раздела 2';
													|en = 'Уточните код показателя в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.3';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("СтрокаКодов"		, "30014,30015,30016");

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, "П000020001003");
	ИменаПоказателей.Вставить("Р23Г001"		, "П00023М100001_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
		ЗаполнитьПоказатель(Показатели.Р02С001, СтраницаРаздела);
		Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г001, СтраницаРаздела, Счетчик);
			РасшифроватьПоказатель(Показатели.Р02С001);
		
			НастройкиКС.ЭтоОшибка = Показатели.Р02С001.Значение = "294" 
				И СтрНайти(НастройкиКС.СтрокаКодов, Показатели.Р23Г001.Значение) = 0;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р23Г001.ЗначениеСтр, Показатели.Р02С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.11';
													|en = '03.11'"));
	Заголовки.Вставить("Описание"			,  
		НСтр("ru = 'Сумма акциза в гр.3 подр.2.3 Раздела 2 по коду подакцизного товара 294 и кодам показателей 30014, ';
			|en = 'Сумма акциза в гр.3 подр.2.3 Раздела 2 по коду подакцизного товара 294 и кодам показателей 30014, '") +
		НСтр("ru = '30015, 30016 = стр.140 подр.3.1 Раздела 3 по соответствующему коду показателя в стр.070 подр.3.1 ';
			|en = '30015, 30016 = стр.140 подр.3.1 Раздела 3 по соответствующему коду показателя в стр.070 подр.3.1 '") +
		НСтр("ru = 'Раздела 3';
			|en = 'Раздела 3'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));  
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в гр.3 подр.2.3 Раздела 2';
			|en = 'Возможно ошибочная сумма акциза в гр.3 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.3 подр.2.3 Раздела 2';
													|en = 'Уточните сумму акциза в гр.3 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"30014,30015,30016", ","));

	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С001"		, "П000020001003");
	ИменаПоказателей.Вставить("Р23Г001"		, "П00023М100001_");
	ИменаПоказателей.Вставить("Р23Г003"		, "П00023М100003_");
	ИменаПоказателей.Вставить("Р03С001"		, "П000030001003");
	ИменаПоказателей.Вставить("Р31С001"		, "П00003М207003_");
	ИменаПоказателей.Вставить("Р31С002"		, "П00003М214003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей); 
	МассивКэшКодов = Новый Массив;
	
	Пока Истина Цикл 
		
		УсловиеВыполнено = Ложь;
		Показатели.Р23Г003.Итог = 0;
		Показатели.Р31С002.Итог = 0;
		ТекущийКодПоказателя = Неопределено;
	
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			ЗаполнитьПоказатель(Показатели.Р02С001, СтраницаРаздела);
			Если НЕ Показатели.Р02С001.Значение = "294" Тогда
				Продолжить;
			КонецЕсли;
			
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00023М1 Цикл
				
				ЗаполнитьПоказатель(Показатели.Р23Г001, СтраницаРаздела, Счетчик);
				Если НастройкиКС.МассивКодов.Найти(Показатели.Р23Г001.Значение) = Неопределено Тогда 
					Продолжить;
				Иначе
					Если НЕ УсловиеВыполнено Тогда 
						Если МассивКэшКодов.Найти(Показатели.Р23Г001.Значение) = Неопределено Тогда
							ЗарегистрироватьПроверку();
							ТекущийКодПоказателя = Показатели.Р23Г001.ЗначениеСтр;
							МассивКэшКодов.Добавить(Показатели.Р23Г001.Значение);
							РасшифроватьПоказатель(Показатели.Р02С001);
							РасшифроватьПоказатель(Показатели.Р23Г001);
							ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г003, СтраницаРаздела, Счетчик);
							УсловиеВыполнено = Истина;
						Иначе 
							Продолжить;
						КонецЕсли;
					Иначе
						Если Показатели.Р23Г001.ЗначениеСтр = ТекущийКодПоказателя Тогда
							ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г003, СтраницаРаздела, Счетчик);
						Иначе
							Продолжить;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если НЕ УсловиеВыполнено Тогда 
			Прервать;
		КонецЕсли;
		
		МассивНомеровСтрок = Новый Массив(2);
		
		ЗаполнитьПоказатель(Показатели.Р03С001, ДанныеКС.Раздел3);
		Если Показатели.Р03С001.Значение = "294" Тогда
			Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
				МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
				Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
					
					МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
					ЗаполнитьПоказатель(Показатели.Р31С001, ДанныеКС.Раздел3, МассивНомеровСтрок);
					
					Если Показатели.Р31С001.Значение = ТекущийКодПоказателя Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.Р31С002, ДанныеКС.Раздел3, МассивНомеровСтрок);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
			
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено 
			И НЕ Показатели.Р23Г003.Итог = Показатели.Р31С002.Итог; 
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р23Г003.Итог, Показатели.Р31С002.Итог, Показатели.Р02С001.ЗначениеСтр, Показатели.Р23Г001.ЗначениеСтр);
		ДополнитьТаблицуРезультата();
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.12';
													|en = '03.12'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.4 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.4 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.4 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.4 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.4 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.4';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.4'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00024М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00024М1");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"Р24", ","));
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.13';
													|en = '03.13'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.4.1 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.4.1 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.4.1 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.4.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.4.1 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.4.1 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.4.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.4.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00241М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00241М1");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"Р26", ","));
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.14';
													|en = '03.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.5 Раздела 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 подр.2.5 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.5 Раздела 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 подр.2.5 Раздела 2 из списка выбора';
			|en = 'Выберите код показателя в гр.1 подр.2.5 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.5';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00025М100001_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"Р25", ","));
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.16';
													|en = '03.16'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код признака в гр.2 подр.2.1 Раздела 2 должен соответствовать списку ';
			|en = 'Код признака в гр.2 подр.2.1 Раздела 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода признака в гр.2 подр.2.1 Раздела 2';
			|en = 'Возможно ошибочное значение кода признака в гр.2 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код признака в гр.2 подр.2.1 Раздела 2 из списка выбора';
			|en = 'Выберите код признака в гр.2 подр.2.1 Раздела 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00021М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивЗамен");
	ПроверкаКС_03_04_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.17';
													|en = '03.17'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = гр.3 подр.2.1 Раздела 2 х ставку акциза, ';
			|en = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = гр.3 подр.2.1 Раздела 2 х ставку акциза, '") +
		НСтр("ru = 'действующую для кода подакцизного товара в стр.010 Раздела 2, если гр.2 подр.2.1 Раздела 2 ';
			|en = 'действующую для кода подакцизного товара в стр.010 Раздела 2, если гр.2 подр.2.1 Раздела 2 '") +
		НСтр("ru = '= 0, 4';
			|en = '= 0, 4'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4), если %5 = 0, 4';
													|en = '%1 = %2 (%3 х %4), если %5 = 0, 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"0,4", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21Г004"		, "П00021М100004_");
	ИменаПоказателей.Вставить("Р21Г003"		, "П00021М100003_");
	ИменаПоказателей.Вставить("Р21Г002"		, "П00021М100002_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
		СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.Р02С010.Значение);
		
		Если СтавкаАкциза = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г004, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г003, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г002, СтраницаРаздела, Счетчик);
			РасшифроватьПоказатель(Показатели.Р02С010);
			
			УсловиеВыполнено = НЕ НастройкиКС.МассивКодов.Найти(Показатели.Р21Г002.Значение) = Неопределено;
			РасчетнаяСумма = Окр(Показатели.Р21Г003.Значение * СтавкаАкциза);
			
			НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р21Г004.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р21Г004.Значение, РасчетнаяСумма, Показатели.Р21Г003.Значение, СтавкаАкциза, 
				Показатели.Р21Г002.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.18';
													|en = '03.18'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = 0, если гр.2 подр.2.1 Раздела 2 = 1, 2, 3 ';
			|en = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = 0, если гр.2 подр.2.1 Раздела 2 = 1, 2, 3 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 0, если %2 = 1, 2, 3';
													|en = '%1 = 0, если %2 = 1, 2, 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"1,2,3", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21Г004"		, "П00021М100004_");
	ИменаПоказателей.Вставить("Р21Г002"		, "П00021М100002_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
		
			НастройкиКС.ЭтоОшибка = НЕ НастройкиКС.МассивКодов.Найти(Показатели.Р21Г002.Значение) = Неопределено
				И НЕ Показатели.Р21Г004.Значение = 0;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р21Г004.Значение, Показатели.Р21Г002.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.20';
													|en = '03.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в гр.3 подр.2.1 Раздела 2 = стр.030 Раздела 3 по коду подакцизного товара 294 ';
			|en = 'Налоговая база в гр.3 подр.2.1 Раздела 2 = стр.030 Раздела 3 по коду подакцизного товара 294 '") +
		НСтр("ru = 'и кодам показателей 10024, 10025, 10026';
			|en = 'и кодам показателей 10024, 10025, 10026'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.3 подр.2.1 Раздела 2';
													|en = 'Возможно ошибочная налоговая база в гр.3 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму налоговой базы в гр.3 подр.2.1 Раздела 2';
													|en = 'Уточните сумму налоговой базы в гр.3 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли; 
	
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100003_");
	НастройкиКС.Вставить("ИмяПоказателяР3"	, "П00003М103003_");
	
	ПроверкаКС_03_20_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_20_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р21Г001"		, "П00021М100001_");
	ИменаПоказателей.Вставить("Р21Г003"		, НастройкиКС.ИмяПоказателяР2);
	ИменаПоказателей.Вставить("Р03С010"		, "П000030001003");
	ИменаПоказателей.Вставить("Р03С020"		, "П00003М102003_"); 
	ИменаПоказателей.Вставить("Р03С030"		, НастройкиКС.ИмяПоказателяР3); 
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Для каждого КодПТ Из ДанныеКС.МассивКодовР2_01 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.Р21Г003.Итог = 0;
		Показатели.Р03С030.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
		КодПСтр = "";
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Если НЕ Показатели.Р02С010.Значение = "294" Тогда
				Продолжить;
			КонецЕсли;
			
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
				
				ЗаполнитьПоказатель(Показатели.Р21Г001, СтраницаРаздела, Счетчик);
				Если СтрНайти("10024,10025,10026", Показатели.Р21Г001.Значение) = 0 Тогда
					Продолжить;
				КонецЕсли;
				
				КодПТКП = Показатели.Р02С010.Значение + Показатели.Р21Г001.Значение;
				Если КодПТКП = КодПТ Тогда
					
					Если РасшифроватьКодПТ Тогда 
						РасшифроватьПоказатель(Показатели.Р02С010);
						РасшифроватьПоказатель(Показатели.Р21Г001); 
						РасшифроватьКодПТ = Ложь;
						КодПТСтр 	= Показатели.Р02С010.ЗначениеСтр;
						КодПСтр 	= Показатели.Р21Г001.ЗначениеСтр;
					КонецЕсли;
					
					ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г003, СтраницаРаздела, Счетчик);
					
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		ЗаполнитьПоказатель(Показатели.Р03С010, ДанныеКС.Раздел3);
		
		Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р03С020, ДанныеКС.Раздел3, Счетчик);
			КодПТКП = Показатели.Р03С010.Значение + Показатели.Р03С020.Значение;
			
			Если КодПТКП = КодПТ Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р03С030, ДанныеКС.Раздел3, Счетчик);
			КонецЕсли;
		КонецЦикла; 
	
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р21Г003.Итог = Показатели.Р03С030.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р21Г003.Итог, Показатели.Р03С030.Итог, КодПТСтр, КодПСтр);
		ДополнитьТаблицуРезультата();
				
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.22';
													|en = '03.22'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = стр.040 Раздела 3 по коду подакцизного товара 294 ';
			|en = 'Сумма акциза в гр.4 подр.2.1 Раздела 2 = стр.040 Раздела 3 по коду подакцизного товара 294 '") +
		НСтр("ru = 'и кодам показателей 10024, 10025, 10026';
			|en = 'и кодам показателей 10024, 10025, 10026'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2';
													|en = 'Уточните сумму акциза в гр.4 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли; 
	
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100004_");
	НастройкиКС.Вставить("ИмяПоказателяР3"	, "П00003М104003_");
	
	ПроверкаКС_03_20_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.24';
													|en = '03.24'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Налоговая база в гр.3 подр.2.1 Раздела 2 > 0, если гр.2 подр.2.1 Раздела 2 = 0, 4 ';
			|en = 'Налоговая база в гр.3 подр.2.1 Раздела 2 > 0, если гр.2 подр.2.1 Раздела 2 = 0, 4 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0, если %2 = 0, 4';
													|en = '%1 > 0, если %2 = 0, 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.3 подр.2.1 Раздела 2';
													|en = 'Возможно ошибочная налоговая база в гр.3 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму налоговой базы в гр.3 подр.2.1 Раздела 2';
													|en = 'Уточните сумму налоговой базы в гр.3 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.1';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"0,4", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р21Г004"		, "П00021М100003_");
	ИменаПоказателей.Вставить("Р21Г002"		, "П00021М100002_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
		
			НастройкиКС.ЭтоОшибка = НЕ НастройкиКС.МассивКодов.Найти(Показатели.Р21Г002.Значение) = Неопределено
				И НЕ Показатели.Р21Г004.Значение > 0;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р21Г004.Значение, Показатели.Р21Г002.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.25';
													|en = '03.25'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.4 подр.2.2 Раздела 2 = гр.3 подр.2.2 Раздела 2 х ставку акциза, ';
			|en = 'Сумма акциза в гр.4 подр.2.2 Раздела 2 = гр.3 подр.2.2 Раздела 2 х ставку акциза, '") +
		НСтр("ru = 'действующую для кода подакцизного товара в стр.010 Раздела 2, если гр.2 подр.2.2 Раздела 2 ';
			|en = 'действующую для кода подакцизного товара в стр.010 Раздела 2, если гр.2 подр.2.2 Раздела 2 '") +
		НСтр("ru = '= 0, 4';
			|en = '= 0, 4'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4), если %5 = 0, 4';
													|en = '%1 = %2 (%3 х %4), если %5 = 0, 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.4 подр.2.2 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.4 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.4 подр.2.2 Раздела 2';
													|en = 'Уточните сумму акциза в гр.4 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.2';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"0,4", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р22Г004"		, "П00022М100004_");
	ИменаПоказателей.Вставить("Р22Г003"		, "П00022М100003_");
	ИменаПоказателей.Вставить("Р22Г002"		, "П00022М100002_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
		СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.Р02С010.Значение);
		
		Если СтавкаАкциза = Неопределено Тогда
			Продолжить;
		КонецЕсли;

		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00022М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р22Г004, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р22Г003, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р22Г002, СтраницаРаздела, Счетчик);
			РасшифроватьПоказатель(Показатели.Р02С010);
			
			УсловиеВыполнено = НЕ НастройкиКС.МассивКодов.Найти(Показатели.Р22Г002.Значение) = Неопределено;
			РасчетнаяСумма = Окр(Показатели.Р22Г003.Значение * СтавкаАкциза);
			
			НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р22Г004.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р22Г004.Значение, РасчетнаяСумма, Показатели.Р22Г003.Значение, СтавкаАкциза, 
				Показатели.Р22Г002.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.29';
													|en = '03.29'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.3 подр.2.3 Раздела 2 = гр.2 подр.2.3 Раздела 2 х ставку акциза, действующую в ';
			|en = 'Сумма акциза в гр.3 подр.2.3 Раздела 2 = гр.2 подр.2.3 Раздела 2 х ставку акциза, действующую в '") +  
		НСтр("ru = 'налоговом периоде гр.(4, 5) подр.2.3 Раздела 2 для кода подакцизного товара в стр.010 Раздела 2, ';
			|en = 'налоговом периоде гр.(4, 5) подр.2.3 Раздела 2 для кода подакцизного товара в стр.010 Раздела 2, '") +
		НСтр("ru = 'кроме кодов показателей 30014 - 30016 в гр.1 подр.2.3 Раздела 2';
			|en = 'кроме кодов показателей 30014 - 30016 в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.3 подр.2.3 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.3 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.3 подр.2.3 Раздела 2';
													|en = 'Уточните сумму акциза в гр.3 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.3';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"		, СтрРазделить(
		"30014,30015,30016", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р23Г003"		, "П00023М100003_");
	ИменаПоказателей.Вставить("Р23Г002"		, "П00023М100002_");
	ИменаПоказателей.Вставить("Р23Г004"		, "П00023М100004_");
	ИменаПоказателей.Вставить("Р23Г005"		, "П00023М100005_");
	ИменаПоказателей.Вставить("Р23Г001"		, "П00023М100001_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);

		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00023М1 Цикл 
			
			ЗаполнитьПоказатель(Показатели.Р23Г004, СтраницаРаздела, Счетчик);
			ЗаполнитьПоказатель(Показатели.Р23Г005, СтраницаРаздела, Счетчик);
			ЗаполнитьПоказатель(Показатели.Р23Г001, СтраницаРаздела, Счетчик);
			
			Если НЕ НастройкиКС.МассивКодов.Найти(Показатели.Р23Г001.Значение) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
				
			Если ЗначениеЗаполнено(Показатели.Р23Г004.Значение) И ЗначениеЗаполнено(Показатели.Р23Г005.Значение) Тогда
				ДатаСтавки = Дата(Показатели.Р23Г005.Значение + Показатели.Р23Г004.Значение + "01" + "01" + "01" + "01");
			Иначе
				ДатаСтавки = '00010101';
			КонецЕсли;
			
			СтавкиАкциза = ПолучитьСтавкиАкциза(ДатаСтавки);
			СтавкаАкциза = СтавкиАкциза.Получить(Показатели.Р02С010.Значение);
			
			Если СтавкаАкциза = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г003, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г002, СтраницаРаздела, Счетчик);
			РасшифроватьПоказатель(Показатели.Р23Г004);
			РасшифроватьПоказатель(Показатели.Р23Г005);
			РасшифроватьПоказатель(Показатели.Р23Г001);
			РасшифроватьПоказатель(Показатели.Р02С010);
			
			РасчетнаяСумма = Окр(Показатели.Р23Г002.Значение * СтавкаАкциза);
			
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р23Г003.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р23Г003.Значение, РасчетнаяСумма, Показатели.Р23Г002.Значение, СтавкаАкциза);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_30()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.30';
													|en = '03.30'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.4 Раздела 2 = 40001, если (гр.4 подр.2.1 + гр.4 подр.2.2 (по кодам  ';
			|en = 'Код показателя в гр.1 подр.2.4 Раздела 2 = 40001, если (гр.4 подр.2.1 + гр.4 подр.2.2 (по кодам  '") +
		НСтр("ru = 'показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015) - гр.3 подр.2.3 ) Раздела 2 > 0';
			|en = 'показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015) - гр.3 подр.2.3 ) Раздела 2 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 40001, если %3 (%4 + %5 - %6) > 0';
													|en = '%1 = 40001, если %3 (%4 + %5 - %6) > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код показателя в гр.1 подр.2.4 Раздела 2';
													|en = 'Возможно ошибочный код показателя в гр.1 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код показателя в гр.1 подр.2.4 Раздела 2';
													|en = 'Уточните код показателя в гр.1 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("БольшеНоля"		, Истина);
	НастройкиКС.Вставить("Сумма"			, Ложь);
	
	ПроверкаКС_03_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_30_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р24Г001"		, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"		, "П00024М100002_");
	ИменаПоказателей.Вставить("Р21Г004"		, "П00021М100004_");
	ИменаПоказателей.Вставить("Р22Г001"		, "П00022М100001_");
	ИменаПоказателей.Вставить("Р22Г004"		, "П00022М100004_");
	ИменаПоказателей.Вставить("Р23Г003"		, "П00023М100003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей); 
	Показатели.Р24Г002.Расшифровывать = НастройкиКС.Сумма; 
	
	КодыПоказателей = СтрРазделить(
		"20003,20004,20005,20007,20009,20011,20013,20015", ",");
	КодПоказателя24 = ?(НастройкиКС.БольшеНоля, "40001", "40002");
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗарегистрироватьПроверку();
		УсловиеВыполнено = Ложь; 
		КодПоказателя24Стр = "(...)";
		Показатели.Р24Г002.Итог = 0; 
		Показатели.Р21Г004.Итог = 0;
		Показатели.Р22Г004.Итог = 0;
		Показатели.Р23Г003.Итог = 0;
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00024М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтраницаРаздела, Счетчик);
			Если Показатели.Р24Г001.Значение = КодПоказателя24 Тогда
				УсловиеВыполнено = Истина;   
				КодПоказателя24Стр = Показатели.Р24Г001.ЗначениеСтр;
				РасшифроватьПоказатель(Показатели.Р24Г001);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтраницаРаздела, Счетчик); 
			КонецЕсли;
		КонецЦикла; 
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00021М1 Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г004, СтраницаРаздела, Счетчик); 
		КонецЦикла; 
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00022М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р22Г001, СтраницаРаздела, Счетчик);
			Если НЕ КодыПоказателей.Найти(Показатели.Р22Г001.Значение) = Неопределено Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р22Г004, СтраницаРаздела, Счетчик); 
			КонецЕсли;
		КонецЦикла; 
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00023М1 Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г003, СтраницаРаздела, Счетчик); 
		КонецЦикла; 
		
		РасчетнаяСумма = Показатели.Р21Г004.Итог + Показатели.Р22Г004.Итог - Показатели.Р23Г003.Итог;
		РасчетнаяСумма2 = ?(НастройкиКС.БольшеНоля, Макс(0, РасчетнаяСумма), - Мин(0, РасчетнаяСумма));
		
		Если НЕ НастройкиКС.Сумма Тогда
			НастройкиКС.ЭтоОшибка = РасчетнаяСумма2 > 0 И НЕ УсловиеВыполнено; 
		ИначеЕсли НастройкиКС.БольшеНоля И НастройкиКС.Сумма Тогда
			НастройкиКС.ЭтоОшибка = НЕ КодПоказателя24Стр = "(...)" И РасчетнаяСумма > 0 
				И НЕ Показатели.Р24Г002.Итог = РасчетнаяСумма2;   
		ИначеЕсли НЕ НастройкиКС.БольшеНоля И НастройкиКС.Сумма Тогда
			НастройкиКС.ЭтоОшибка = НЕ КодПоказателя24Стр = "(...)" И РасчетнаяСумма < 0 
				И НЕ Показатели.Р24Г002.Итог = РасчетнаяСумма2;   
		Иначе
			НастройкиКС.ЭтоОшибка = Ложь; 
		КонецЕсли;
		
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			КодПоказателя24Стр, Показатели.Р24Г002.Итог, РасчетнаяСумма2, Показатели.Р21Г004.Итог,
			Показатели.Р22Г004.Итог, Показатели.Р23Г003.Итог);
		НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
			СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_31()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.31';
													|en = '03.31'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40001) = (гр.4 подр.2.1 + гр.4 подр.2.2 ';
			|en = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40001) = (гр.4 подр.2.1 + гр.4 подр.2.2 '") +
		НСтр("ru = '(по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015) - гр.3 подр.2.3) ';
			|en = '(по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015) - гр.3 подр.2.3) '") +
		НСтр("ru = 'Раздела 2, если результат > 0';
			|en = 'Раздела 2, если результат > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%2 = %3 (%4 + %5 - %6), если %3 > 0';
													|en = '%2 = %3 (%4 + %5 - %6), если %3 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("БольшеНоля"		, Истина);
	НастройкиКС.Вставить("Сумма"			, Истина);
	
	ПроверкаКС_03_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_32()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.32';
													|en = '03.32'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 подр.2.4 Раздела 2 = 40002, если (гр.3 подр.2.3 - гр.4 подр.2.1 - гр.4 подр.2.2';
			|en = 'Код показателя в гр.1 подр.2.4 Раздела 2 = 40002, если (гр.3 подр.2.3 - гр.4 подр.2.1 - гр.4 подр.2.2'") +
		НСтр("ru = ' (по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015)) Раздела 2 > 0';
			|en = ' (по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015)) Раздела 2 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 40002, если %3 (%6 - %4 - %5) > 0';
													|en = '%1 = 40002, если %3 (%6 - %4 - %5) > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код показателя в гр.1 подр.2.4 Раздела 2';
													|en = 'Возможно ошибочный код показателя в гр.1 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код показателя в гр.1 подр.2.4 Раздела 2';
													|en = 'Уточните код показателя в гр.1 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("БольшеНоля"		, Ложь);
	НастройкиКС.Вставить("Сумма"			, Ложь);
	
	ПроверкаКС_03_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_33()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.33';
													|en = '03.33'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40002) = (гр.3 подр.2.3 - гр.4 подр.2.1 - ';
			|en = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40002) = (гр.3 подр.2.3 - гр.4 подр.2.1 - '") +
		НСтр("ru = 'гр.4 подр.2.2 (по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015)) ';
			|en = 'гр.4 подр.2.2 (по кодам  показателей 20003, 20004, 20005, 20007, 20009, 20011, 20013, 20015)) '") +
		НСтр("ru = 'Раздела 2, если результат > 0';
			|en = 'Раздела 2, если результат > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%2 = %3 (%6 - %4 - %5), если %3 > 0';
													|en = '%2 = %3 (%6 - %4 - %5), если %3 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("БольшеНоля"		, Ложь);
	НастройкиКС.Вставить("Сумма"			, Истина);
	
	ПроверкаКС_03_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_34()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.34';
													|en = '03.34'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40003) = гр.3 подр.2.5 ';
			|en = 'Сумма акциза в гр.2 подр.2.4 Раздела 2 (по коду показателя 40003) = гр.3 подр.2.5 '") +
		НСтр("ru = 'по кодам  показателей 50001, 50002, 50006, 50007';
			|en = 'по кодам  показателей 50001, 50002, 50006, 50007'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2';
													|en = 'Уточните сумму акциза в гр.2 подр.2.4 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2';
													|en = 'Страница %1 Раздела 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р24Г001"		, "П00024М100001_");
	ИменаПоказателей.Вставить("Р24Г002"		, "П00024М100002_");
	ИменаПоказателей.Вставить("Р25Г001"		, "П00025М100001_");
	ИменаПоказателей.Вставить("Р25Г003"		, "П00025М100003_");
	Показатели = СформироватьПоказатели(ИменаПоказателей); 
	
	КодыПоказателей = СтрРазделить(
		"50001,50002,50006,50007", ",");
	КодПоказателя24 = "40003";
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗарегистрироватьПроверку();
		УсловиеВыполнено = Ложь; 
		Показатели.Р24Г002.Итог = 0; 
		Показатели.Р25Г003.Итог = 0;
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00024М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р24Г001, СтраницаРаздела, Счетчик);
			Если Показатели.Р24Г001.Значение = КодПоказателя24 Тогда
				УсловиеВыполнено = Истина;   
				КодПоказателя24Стр = Показатели.Р24Г001.ЗначениеСтр;
				РасшифроватьПоказатель(Показатели.Р24Г001);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р24Г002, СтраницаРаздела, Счетчик); 
			КонецЕсли;
		КонецЦикла; 
		
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00025М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р25Г001, СтраницаРаздела, Счетчик);
			Если НЕ КодыПоказателей.Найти(Показатели.Р25Г001.Значение) = Неопределено Тогда
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р25Г003, СтраницаРаздела, Счетчик); 
			КонецЕсли;
		КонецЦикла; 
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.Р24Г002.Итог = Показатели.Р25Г003.Итог;   
		
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р24Г002.Итог, Показатели.Р25Г003.Итог);
		НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
			СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_03_35()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '03.35';
													|en = '03.35'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.3 подр.2.5 Раздела 2 = гр.2 подр.2.5 Раздела 2 х ставку акциза, действующую ';
			|en = 'Сумма акциза в гр.3 подр.2.5 Раздела 2 = гр.2 подр.2.5 Раздела 2 х ставку акциза, действующую '") +  
		НСтр("ru = 'налоговом периоде гр.(4, 5) подр.2.5 Раздела 2 для кода подакцизного товара в стр.010 Раздела 2';
			|en = 'налоговом периоде гр.(4, 5) подр.2.5 Раздела 2 для кода подакцизного товара в стр.010 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная сумма акциза в гр.3 подр.2.5 Раздела 2';
													|en = 'Возможно ошибочная сумма акциза в гр.3 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.3 подр.2.5 Раздела 2';
													|en = 'Уточните сумму акциза в гр.3 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Раздела 2, строка %2 подр.2.5';
													|en = 'Страница %1 Раздела 2, строка %2 подр.2.5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р25Г003"		, "П00025М100003_");
	ИменаПоказателей.Вставить("Р25Г002"		, "П00025М100002_");
	ИменаПоказателей.Вставить("Р25Г004"		, "П00025М100004_");
	ИменаПоказателей.Вставить("Р25Г005"		, "П00025М100005_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл  
		
		ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);

		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00025М1 Цикл 
			
			ЗаполнитьПоказатель(Показатели.Р25Г004, СтраницаРаздела, Счетчик);
			ЗаполнитьПоказатель(Показатели.Р25Г005, СтраницаРаздела, Счетчик);
				
			Если ЗначениеЗаполнено(Показатели.Р25Г004.Значение) И ЗначениеЗаполнено(Показатели.Р25Г005.Значение) Тогда
				ДатаСтавки = Дата(Показатели.Р25Г005.Значение + Показатели.Р25Г004.Значение + "01" + "01" + "01" + "01");
			Иначе
				ДатаСтавки = '00010101';
			КонецЕсли;
			
			СтавкиАкциза = ПолучитьСтавкиАкциза(ДатаСтавки);
			СтавкаАкциза = СтавкиАкциза.Получить(Показатели.Р02С010.Значение);
			
			Если СтавкаАкциза = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р25Г003, СтраницаРаздела, Счетчик);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р25Г002, СтраницаРаздела, Счетчик);
			РасшифроватьПоказатель(Показатели.Р25Г004);
			РасшифроватьПоказатель(Показатели.Р25Г005);
			РасшифроватьПоказатель(Показатели.Р02С010);
			
			РасчетнаяСумма = Окр(Показатели.Р25Г002.Значение * СтавкаАкциза);
			
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р25Г003.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р25Г003.Значение, РасчетнаяСумма, Показатели.Р25Г002.Значение, СтавкаАкциза);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Раздел_3

&НаСервере
Процедура ПроверкаКС_04_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.01';
													|en = '04.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.010 Раздела 3 должен соответствовать списку ';
			|en = 'Код подакцизного товара в стр.010 Раздела 3 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Раздела 3';
			|en = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код подакцизного товара в стр.010 Раздела 3 из списка выбора';
			|en = 'Выберите код подакцизного товара в стр.010 Раздела 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С010"		, "П000030001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Показатели.Р03С010.ИмяПоказателя);
	
	Если НЕ Список = Неопределено Тогда
			
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3);
		
		НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р03С010.Значение) = Неопределено;
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р03С010.ЗначениеСтр);
		ДополнитьТаблицуРезультата(); 
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.02';
													|en = '04.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в стр.020 Раздела 3 должен соответствовать списку ';
			|en = 'Код показателя в стр.020 Раздела 3 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в стр.020 Раздела 3';
			|en = 'Возможно ошибочное значение кода показателя в стр.020 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в стр.020 Раздела 3 из списка выбора';
			|en = 'Выберите код показателя в стр.020 Раздела 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С020"		, "П00003М102003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.Р03С020.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3, Счетчик);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р03С020.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р03С020.ЗначениеСтр);  
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);  
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла; 
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.03';
													|en = '04.03'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Налоговая база в стр.030 Раздела 3 > 0, если стр.010 Раздела 3 = 294';
													|en = 'Налоговая база в стр.030 Раздела 3 > 0, если стр.010 Раздела 3 = 294'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0, если %2 = 294';
													|en = '%1 > 0, если %2 = 294'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в стр.030 Раздела 3';
													|en = 'Возможно ошибочная налоговая база в стр.030 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму налоговой базы в стр.030 Раздела 3';
													|en = 'Уточните сумму налоговой базы в стр.030 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р03С030"		, "П00003М103003_");
	ИменаПоказателей.Вставить("Р03С010"		, "П000030001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ЗаполнитьПоказатель(Показатели.Р03С010, ДанныеКС.Раздел3);
	
	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р03С030, ДанныеКС.Раздел3, Счетчик);
		РасшифроватьПоказатель(Показатели.Р03С010);
		
		НастройкиКС.ЭтоОшибка = Показатели.Р03С010.Значение = "294" И НЕ Показатели.Р03С030.Значение > 0;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С030.Значение, Показатели.Р03С010.ЗначениеСтр);  
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);  
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла; 
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.04';
													|en = '04.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.040 Раздела 3 = стр.030 Раздела 3 х ставку акциза, ';
			|en = 'Сумма акциза в стр.040 Раздела 3 = стр.030 Раздела 3 х ставку акциза, '") +
		НСтр("ru = 'действующую для кода подакцизного товара в стр.010 Раздела 3';
			|en = 'действующую для кода подакцизного товара в стр.010 Раздела 3'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.040 Раздела 3';
													|en = 'Возможно ошибочное значение стр.040 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.040 Раздела 3';
													|en = 'Уточните сумму акциза в стр.040 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("Р03С040"		, "П00003М104003_");
	ИменаПоказателей.Вставить("Р03С030"		, "П00003М103003_");
	ИменаПоказателей.Вставить("Р03С010"		, "П000030001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ЗаполнитьПоказатель(Показатели.Р03С010, ДанныеКС.Раздел3);
	СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.Р03С010.Значение);
	
	Если СтавкаАкциза = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р03С040, ДанныеКС.Раздел3, Счетчик);
		ЗаполнитьИРасшифроватьПоказатель(Показатели.Р03С030, ДанныеКС.Раздел3, Счетчик);
		РасшифроватьПоказатель(Показатели.Р03С010);

		РасчетнаяСумма = Окр(Показатели.Р03С030.Значение * СтавкаАкциза);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р03С040.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р03С040.Значение, РасчетнаяСумма, Показатели.Р03С030.Значение, СтавкаАкциза);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", Счетчик);  
		ДополнитьТаблицуРезультата(); 
			
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.05';
													|en = '04.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.050 подр.3.1 Раздела 3 должен соответствовать списку ';
			|en = 'Код подакцизного товара в стр.050 подр.3.1 Раздела 3 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода подакцизного товара в стр.050 подр.3.1 Раздела 3';
			|en = 'Возможно ошибочное значение кода подакцизного товара в стр.050 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код подакцизного товара в стр.050 подр.3.1 Раздела 3 из списка выбора';
			|en = 'Выберите код подакцизного товара в стр.050 подр.3.1 Раздела 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М205003_");
	ПроверкаКС_04_05_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_05_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р31С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.Р31С001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
				
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
			
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3, МассивНомеровСтрок);
		
				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.Р31С001.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.Р31С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.06';
													|en = '04.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'КБК в стр.060 подр.3.1 Раздела 3 должен быть заполнен';
													|en = 'КБК в стр.060 подр.3.1 Раздела 3 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КБК в стр.060 подр.3.1 Раздела 3 не заполнен';
													|en = 'КБК в стр.060 подр.3.1 Раздела 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КБК в стр.060 подр.3.1 Раздела 3';
													|en = 'Заполните КБК в стр.060 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М206003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_06_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р31С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
			
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3, МассивНомеровСтрок);
	
			НастройкиКС.ЭтоОшибка = ДанныеКС.Раздел3["МнЧастьЗаполненаП00003М2_" + Счетчик + "_" + Счетчик2]
				И ?(ТипЗнч(Показатели.Р31С001.Значение) = Тип("Число"), 
				НЕ Показатели.Р31С001.Значение > 0, НЕ ЗначениеЗаполнено(Показатели.Р31С001.Значение));
			НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
				?(ТипЗнч(Показатели.Р31С001.Значение) = Тип("Число"), Показатели.Р31С001.Значение, 
				Показатели.Р31С001.ЗначениеСтр));
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтрСоединить(
				ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.07';
													|en = '04.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КБК в стр.060 подр.3.1 Раздела 3 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.060 подр.3.1 Раздела 3 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение КБК в стр.060 подр.3.1 Раздела 3';
													|en = 'Возможно ошибочное значение КБК в стр.060 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Выберите КБК в стр.060 подр.3.1 Раздела 3 из списка выбора';
													|en = 'Выберите КБК в стр.060 подр.3.1 Раздела 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М206003_");
	ПроверкаКС_04_05_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.08';
													|en = '04.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в стр.070 подр.3.1 Раздела 3 должен соответствовать списку ';
			|en = 'Код показателя в стр.070 подр.3.1 Раздела 3 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в стр.070 подр.3.1 Раздела 3';
			|en = 'Возможно ошибочное значение кода показателя в стр.070 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в стр.070 подр.3.1 Раздела 3 из списка выбора';
			|en = 'Выберите код показателя в стр.070 подр.3.1 Раздела 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М207003_");
	ПроверкаКС_04_05_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.09';
													|en = '04.09'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Коэффициент Квд в стр.080 подр.3.1 Раздела 3 > 0';
													|en = 'Коэффициент Квд в стр.080 подр.3.1 Раздела 3 > 0'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Коэффициент Квд в стр.080 подр.3.1 Раздела 3 не заполнен';
													|en = 'Коэффициент Квд в стр.080 подр.3.1 Раздела 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните коэффициент Квд в стр.080 подр.3.1 Раздела 3';
													|en = 'Заполните коэффициент Квд в стр.080 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М208003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.10';
													|en = '04.10'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 > 0';
													|en = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 > 0'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 не заполнен';
													|en = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните коэффициент Кгвп в стр.090 подр.3.1 Раздела 3';
													|en = 'Заполните коэффициент Кгвп в стр.090 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М209003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.11';
													|en = '04.11'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Величина Vгвп в стр.100 подр.3.1 Раздела 3 > 0';
													|en = 'Величина Vгвп в стр.100 подр.3.1 Раздела 3 > 0'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Величина Vгвп в стр.100 подр.3.1 Раздела 3 не заполнена';
													|en = 'Величина Vгвп в стр.100 подр.3.1 Раздела 3 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните величину Vгвп в стр.100 подр.3.1 Раздела 3';
													|en = 'Заполните величину Vгвп в стр.100 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М210003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.12';
													|en = '04.12'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Величина Vвд в стр.110 подр.3.1 Раздела 3 > 0';
													|en = 'Величина Vвд в стр.110 подр.3.1 Раздела 3 > 0'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Величина Vвд в стр.110 подр.3.1 Раздела 3 не заполнена';
													|en = 'Величина Vвд в стр.110 подр.3.1 Раздела 3 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните величину Vвд в стр.110 подр.3.1 Раздела 3';
													|en = 'Заполните величину Vвд в стр.110 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М211003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.13';
													|en = '04.13'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Коэффициент Кв в стр.130 подр.3.1 Раздела 3 > 0';
													|en = 'Коэффициент Кв в стр.130 подр.3.1 Раздела 3 > 0'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Коэффициент Кв в стр.130 подр.3.1 Раздела 3 не заполнен';
													|en = 'Коэффициент Кв в стр.130 подр.3.1 Раздела 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните коэффициент Кв в стр.130 подр.3.1 Раздела 3';
													|en = 'Заполните коэффициент Кв в стр.130 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00003М213003_");
	ПроверкаКС_04_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.14';
													|en = '04.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.130 подр.3.1 Раздела 3 = стр.110 подр.3.1 Раздела 3 х ставку акциза, ';
			|en = 'Сумма акциза в стр.130 подр.3.1 Раздела 3 = стр.110 подр.3.1 Раздела 3 х ставку акциза, '") +
		НСтр("ru = 'действующую для кода подакцизного товара в стр.010 Раздела 3';
			|en = 'действующую для кода подакцизного товара в стр.010 Раздела 3'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.130 подр.3.1 Раздела 3';
													|en = 'Возможно ошибочное значение стр.130 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.130 подр.3.1 Раздела 3';
													|en = 'Уточните сумму акциза в стр.130 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("Р31С130"		, "П00003М213003_");
	ИменаПоказателей.Вставить("Р31С110"		, "П00003М211003_");
	ИменаПоказателей.Вставить("Р03С010"		, "П000030001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ЗаполнитьПоказатель(Показатели.Р03С010, ДанныеКС.Раздел3);
	СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.Р03С010.Значение);
	МассивНомеровСтрок = Новый Массив(2);
	
	Если СтавкаАкциза = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
			
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р31С130, ДанныеКС.Раздел3, МассивНомеровСтрок);
			ЗаполнитьИРасшифроватьПоказатель(Показатели.Р31С110, ДанныеКС.Раздел3, МассивНомеровСтрок);
			РасшифроватьПоказатель(Показатели.Р03С010);

			РасчетнаяСумма = Окр(Показатели.Р31С110.Значение * СтавкаАкциза);
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р31С130.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р31С130.Значение, РасчетнаяСумма, Показатели.Р31С110.Значение, СтавкаАкциза);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтрСоединить(
				ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.15';
													|en = '04.15'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.140 подр.3.1 Раздела 3 = стр.(130 х 080) подр.3.1 Раздела 3';
			|en = 'Сумма акциза в стр.140 подр.3.1 Раздела 3 = стр.(130 х 080) подр.3.1 Раздела 3'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.140 подр.3.1 Раздела 3';
													|en = 'Возможно ошибочное значение стр.140 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.140 подр.3.1 Раздела 3';
													|en = 'Уточните сумму акциза в стр.140 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("Р31С140"		, "П00003М214003_");
	ИменаПоказателей.Вставить("Р31С130"		, "П00003М213003_");
	ИменаПоказателей.Вставить("Р31С080"		, "П00003М208003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
			
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3, МассивНомеровСтрок);

			РасчетнаяСумма = Окр(Показатели.Р31С130.Значение * Показатели.Р31С080.Значение);
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р31С140.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р31С140.Значение, РасчетнаяСумма, Показатели.Р31С130.Значение, Показатели.Р31С080.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтрСоединить(
				ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.16';
													|en = '04.16'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.140 подр.3.1 Раздела 3 = гр.3 подр.2.3 Раздела 2 по соответствующему коду ';
			|en = 'Сумма акциза в стр.140 подр.3.1 Раздела 3 = гр.3 подр.2.3 Раздела 2 по соответствующему коду '") +
		НСтр("ru = 'показателя в стр.070 подр.3.1 Раздела 3 и коду подакцизного товара 294 в гр.1 подр.2.3 Раздела 2';
			|en = 'показателя в стр.070 подр.3.1 Раздела 3 и коду подакцизного товара 294 в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.140 подр.3.1 Раздела 3';
			|en = 'Возможно ошибочная сумма акциза в стр.140 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.140 подр.3.1 Раздела 3';
													|en = 'Уточните сумму акциза в стр.140 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"30014,30015,30016", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Р31С001"		, "П00003М207003_");
	ИменаПоказателей.Вставить("Р31С002"		, "П00003М214003_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р23Г001"		, "П00023М100001_");
	ИменаПоказателей.Вставить("Р23Г003"		, "П00023М100003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого КодПТ Из ДанныеКС.МассивКодовПТ_Р3 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.Р31С002.Итог = 0;
		Показатели.Р23Г003.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
		
		Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
				
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьПоказатель(Показатели.Р31С001, ДанныеКС.Раздел3, МассивНомеровСтрок);
				
				Если Показатели.Р31С001.Значение = КодПТ Тогда
					Если РасшифроватьКодПТ Тогда
						РасшифроватьПоказатель(Показатели.Р31С001);
						РасшифроватьКодПТ = Ложь;
						КодПТСтр = Показатели.Р31С001.ЗначениеСтр;
					КонецЕсли;
					ЗаполнитьИРасшифроватьПоказатель(Показатели.Р31С002, ДанныеКС.Раздел3, МассивНомеровСтрок);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Если Показатели.Р02С010.Значение = "294" Тогда
				Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
					ЗаполнитьПоказатель(Показатели.Р23Г001, СтраницаРаздела, Счетчик);
					Если Показатели.Р23Г001.Значение = КодПТ Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г003, СтраницаРаздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.Р31С002.Итог = Показатели.Р23Г003.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.Р31С002.Итог, Показатели.Р23Г003.Итог, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_04_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3';
														|en = 'Раздел 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '04.17';
													|en = '04.17'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 = стр.(100 / 110) подр.3.1 Раздела 3';
			|en = 'Коэффициент Кгвп в стр.090 подр.3.1 Раздела 3 = стр.(100 / 110) подр.3.1 Раздела 3'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 / %4)';
													|en = '%1 = %2 (%3 / %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.090 подр.3.1 Раздела 3';
													|en = 'Возможно ошибочное значение стр.090 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните коэффициент Кгвп в стр.090 подр.3.1 Раздела 3';
													|en = 'Уточните коэффициент Кгвп в стр.090 подр.3.1 Раздела 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Раздел 3, группа строк %1';
													|en = 'Раздел 3, группа строк %1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("Р31С090"		, "П00003М209003_");
	ИменаПоказателей.Вставить("Р31С100"		, "П00003М210003_");
	ИменаПоказателей.Вставить("Р31С110"		, "П00003М211003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для Счетчик = 1 По ДанныеКС.Раздел3.КолвоСтрокП00003М1 Цикл
		
		МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
		Для Счетчик2 = 1 По ДанныеКС.Раздел3["КолвоСтрокП00003М2_" + Счетчик] Цикл
			
			МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, ДанныеКС.Раздел3, МассивНомеровСтрок);

			РасчетнаяСумма = ?(Показатели.Р31С110.Значение = 0, 0, 
				Окр(Показатели.Р31С100.Значение / Показатели.Р31С110.Значение, 3));
			НастройкиКС.ЭтоОшибка = НЕ Показатели.Р31С090.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.Р31С090.Значение, РасчетнаяСумма, Показатели.Р31С100.Значение, Показатели.Р31С110.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтрСоединить(
				ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
			ДополнитьТаблицуРезультата();
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Приложение_1

&НаСервере
Процедура ПроверкаКС_05_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.01';
													|en = '05.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.010 Приложения 1 должен соответствовать списку ';
			|en = 'Код подакцизного товара в стр.010 Приложения 1 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Приложения 1';
			|en = 'Возможно ошибочное значение кода подакцизного товара в стр.010 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код подакцизного товара в стр.010 Приложения 1 из списка выбора';
			|en = 'Выберите код подакцизного товара в стр.010 Приложения 1 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 1';
													|en = 'Страница %1 Приложения 1'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П01С010"		, "П001010001003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Показатели.П01С010.ИмяПоказателя);
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П01С010.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П01С010.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.02';
													|en = '05.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 Приложения 1 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 Приложения 1 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.1 Приложения 1';
			|en = 'Возможно ошибочное значение кода показателя в гр.1 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 Приложения 1 из списка выбора';
			|en = 'Выберите код показателя в гр.1 Приложения 1 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 1, строка %2';
													|en = 'Страница %1 Приложения 1, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00101М100001_");
	ПроверкаКС_05_02_код()
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_02_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П01Г001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.П01Г001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00101М1 Цикл
			
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г001, СтраницаРаздела, Счетчик);
			
				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П01Г001.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П01Г001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата(); 
			
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.03';
													|en = '05.03'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Налоговая база в гр.5 Приложения 1 = ';
													|en = 'Налоговая база в гр.5 Приложения 1 = '") +
		НСтр("ru = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду ';
			|en = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду '") +
		НСтр("ru = 'показателя 10001, 10006-10012, 10020, 10022, 10023 в гр.1 Приложения 1';
			|en = 'показателя 10001, 10006-10012, 10020, 10022, 10023 в гр.1 Приложения 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.5 Приложения 1';
													|en = 'Возможно ошибочная налоговая база в гр.5 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните налоговую базу в гр.5 Приложения 1';
													|en = 'Уточните налоговую базу в гр.5 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00021М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"10001,10006,10007,10008,10009,10010,10011,10012,10020,10022,10023", ","));
	НастройкиКС.Вставить("МассивЗамен");
	НастройкиКС.Вставить("СПериодом"		, Ложь);
	
	ПроверкаКС_05_03_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_03_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П01С001"		, "П001010001003");
	ИменаПоказателей.Вставить("П01Г001"		, "П00101М100001_");
	ИменаПоказателей.Вставить("П01Г005"		, "П00101М100005_"); 
	ИменаПоказателей.Вставить("П01Г006"		, "П00101М100006_"); 
	ИменаПоказателей.Вставить("П01Г007"		, "П00101М100007_"); 
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р21Г001"		, НастройкиКС.ПолеКодаПТР2);
	ИменаПоказателей.Вставить("Р21Г003"		, НастройкиКС.ИмяПоказателяР2); 
	ИменаПоказателей.Вставить("Р25Г004"		, "П00025М100004_");
	ИменаПоказателей.Вставить("Р25Г005"		, "П00025М100005_"); 
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	Для каждого КодПТ Из ДанныеКС.МассивКодовПТ_П1 Цикл 
		
		КодНайден = Ложь;
		Для каждого КодПоказателя Из НастройкиКС.МассивКодовР2 Цикл
			КодНайден = КодНайден ИЛИ НЕ СтрНайти(КодПТ, КодПоказателя) = 0;
		КонецЦикла;
		
		Если НЕ КодНайден Тогда
			Продолжить;
		КонецЕсли;
		
		ЗарегистрироватьПроверку();
		Показатели.П01Г005.Итог = 0;
		Показатели.Р21Г003.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
		КодПСтр = "";
		КодМесСтр = "";
		КодГодСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл 
			ЗаполнитьПоказатель(Показатели.П01С001, СтраницаРаздела);
			
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00101М1 Цикл
				ЗаполнитьПоказатель(Показатели.П01Г001, СтраницаРаздела, Счетчик);
				ЗаполнитьПоказатель(Показатели.П01Г006, СтраницаРаздела, Счетчик);
				ЗаполнитьПоказатель(Показатели.П01Г007, СтраницаРаздела, Счетчик);
				
				КодПТНП = Показатели.П01С001.Значение + Показатели.П01Г001.Значение + Показатели.П01Г006.Значение
					+ Показатели.П01Г007.Значение;
					
				Если КодПТНП = КодПТ Тогда
					Если РасшифроватьКодПТ Тогда 
						РасшифроватьПоказатель(Показатели.П01С001);
						РасшифроватьПоказатель(Показатели.П01Г001); 
						Если НастройкиКС.СПериодом Тогда
							РасшифроватьПоказатель(Показатели.П01Г006); 
							РасшифроватьПоказатель(Показатели.П01Г007); 
						КонецЕсли;
						РасшифроватьКодПТ = Ложь;
						КодПТСтр 	= Показатели.П01С001.ЗначениеСтр;
						КодПСтр 	= Показатели.П01Г001.ЗначениеСтр;
						КодМесСтр 	= Показатели.П01Г006.ЗначениеСтр;
						КодГодСтр 	= Показатели.П01Г007.ЗначениеСтр;
					КонецЕсли;
				
					ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г005, СтраницаРаздела, Счетчик);  
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
				ЗаполнитьПоказатель(Показатели.Р21Г001, СтраницаРаздела, Счетчик); 
				
				Если НастройкиКС.СПериодом Тогда
					ЗаполнитьПоказатель(Показатели.Р25Г004, СтраницаРаздела, Счетчик);
					ЗаполнитьПоказатель(Показатели.Р25Г005, СтраницаРаздела, Счетчик);
				    КодПТНП = Показатели.Р02С010.Значение + Показатели.Р21Г001.Значение + Показатели.Р25Г004.Значение
						+ Показатели.Р25Г005.Значение;
				Иначе
				    КодПТНП = Показатели.Р02С010.Значение + Показатели.Р21Г001.Значение;
				КонецЕсли;
			
				Если КодПТНП = КодПТ Тогда
					ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г003, СтраницаРаздела, Счетчик);
				КонецЕсли;
			КонецЦикла; 
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П01Г005.Итог) 
			И НЕ Показатели.П01Г005.Итог = Показатели.Р21Г003.Итог;
		НастройкиКС.Детализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НастройкиКС.ШаблонДетализации, 
			Показатели.П01Г005.Итог, Показатели.Р21Г003.Итог, КодПТСтр, КодПСтр, КодМесСтр, КодГодСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.04';
													|en = '05.04'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Налоговая база в гр.5 Приложения 1 = ';
													|en = 'Налоговая база в гр.5 Приложения 1 = '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду '") +
		НСтр("ru = 'показателя 20001 - 20015 в гр.1 Приложения 1';
			|en = 'показателя 20001 - 20015 в гр.1 Приложения 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.5 Приложения 1';
													|en = 'Возможно ошибочная налоговая база в гр.5 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните налоговую базу в гр.5 Приложения 1';
													|en = 'Уточните налоговую базу в гр.5 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20002,20003,20004,20005,20006,20007,20008,20009,20010,20011,20012,20013,20014,20015", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П01,П01,П01,П01,П01,Р02,Р22,Р22,Р25,Р25", ","));
	НастройкиКС.Вставить("СПериодом"		, Ложь);
	
	ПроверкаКС_05_03_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.05';
													|en = '05.05'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Налоговая база в гр.5 Приложения 1 = ';
													|en = 'Налоговая база в гр.5 Приложения 1 = '") +
		НСтр("ru = 'гр.2 подр.2.3 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду ';
			|en = 'гр.2 подр.2.3 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1 и коду '") +
		НСтр("ru = 'показателя 30001 - 30003, 30008 - 30011 в гр.1 Приложения 1';
			|en = 'показателя 30001 - 30003, 30008 - 30011 в гр.1 Приложения 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4';
													|en = '%1 = %2 по кодам %3, %4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.5 Приложения 1';
													|en = 'Возможно ошибочная налоговая база в гр.5 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните налоговую базу в гр.5 Приложения 1';
													|en = 'Уточните налоговую базу в гр.5 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00023М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00023М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"30001,30002,30003,30008,30009,30010,30011", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П01,П01,П01,П01,П01,Р02,Р23,Р23,Р25,Р25", ","));
	НастройкиКС.Вставить("СПериодом"		, Ложь);
	
	ПроверкаКС_05_03_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.06';
													|en = '05.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Налоговая база в гр.5 Приложения 1 = гр.2 ';
													|en = 'Налоговая база в гр.5 Приложения 1 = гр.2 '") +
		НСтр("ru = 'подр.2.5 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1, коду показателя ';
			|en = 'подр.2.5 Раздела 2 по коду подакцизного товара в стр.010 Приложения 1, коду показателя '") +
		НСтр("ru = '50001 - 50011 в гр.1 Приложения 1 и коду налогового периода в гр.(6,7) Приложения 1';
			|en = '50001 - 50011 в гр.1 Приложения 1 и коду налогового периода в гр.(6,7) Приложения 1'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по кодам %3, %4, %5, %6';
													|en = '%1 = %2 по кодам %3, %4, %5, %6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочная налоговая база в гр.5 Приложения 1';
													|en = 'Возможно ошибочная налоговая база в гр.5 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните налоговую базу в гр.5 Приложения 1';
													|en = 'Уточните налоговую базу в гр.5 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П01,П01,П01,П01,П01,Р02,Р25,Р25,Р25,Р25", ","));
	НастройкиКС.Вставить("СПериодом"		, Истина);
	
	ПроверкаКС_05_03_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.07';
													|en = '05.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код признака в гр.2 Приложения 1 должен соответствовать списку ';
			|en = 'Код признака в гр.2 Приложения 1 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода признака в гр.2 Приложения 1';
			|en = 'Возможно ошибочное значение кода признака в гр.2 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код признака в гр.2 Приложения 1 из списка выбора';
			|en = 'Выберите код признака в гр.2 Приложения 1 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 1, строка %2';
													|en = 'Страница %1 Приложения 1, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00101М100002_");
	ПроверкаКС_05_02_код()
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.08';
													|en = '05.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Месяц налогового периода в гр.6 Приложения 1 = 01 - 12, ';
			|en = 'Месяц налогового периода в гр.6 Приложения 1 = 01 - 12, '") +
		НСтр("ru = 'если код показателя в гр.1 Приложения 7 50001 - 50011';
			|en = 'если код показателя в гр.1 Приложения 7 50001 - 50011'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 01 - 12';
													|en = '%1 = 01 - 12'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение месяца налогового периода в гр.6 Приложения 1';
			|en = 'Возможно ошибочное значение месяца налогового периода в гр.6 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните месяц налогового периода в гр.6 Приложения 1';
			|en = 'Уточните месяц налогового периода в гр.6 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 1, строка %2';
													|en = 'Страница %1 Приложения 1, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"	, СтрРазделить(
		"50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011", ","));
	НастройкиКС.Вставить("МассивМесяцев", СтрРазделить(
		"01,02,03,04,05,06,07,08,09,10,11,12", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П01Г001"		, "П00101М100001_");
	ИменаПоказателей.Вставить("П01Г006"		, "П00101М100006_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00101М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г001, СтраницаРаздела, Счетчик); 
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г006, СтраницаРаздела, Счетчик); 
			
			УсловиеВыполнено = НЕ НастройкиКС.МассивКодов.Найти(Показатели.П01Г001.Значение) = Неопределено;
			НастройкиКС.ЭтоОшибка = УсловиеВыполнено 
				И НастройкиКС.МассивМесяцев.Найти(Показатели.П01Г006.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П01Г006.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_05_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '05.09';
													|en = '05.09'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Год налогового периода в гр.7 Приложения 1 >= (отчетный год - 3 года) Титульного листа, ';
			|en = 'Год налогового периода в гр.7 Приложения 1 >= (отчетный год - 3 года) Титульного листа, '") +
		НСтр("ru = 'если код показателя в гр.1 Приложения 7 50001 - 50011';
			|en = 'если код показателя в гр.1 Приложения 7 50001 - 50011'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= %2 (%3 - 3)';
													|en = '%1 >= %2 (%3 - 3)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение года налогового периода в гр.7 Приложения 1';
			|en = 'Возможно ошибочное значение года налогового периода в гр.7 Приложения 1'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните год налогового периода в гр.7 Приложения 1';
			|en = 'Уточните год налогового периода в гр.7 Приложения 1'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 1, строка %2';
													|en = 'Страница %1 Приложения 1, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодов"	, СтрРазделить(
		"50001,50002,50003,50004,50005,50006,50007,50008,50009,50010,50011", ","));
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П01Г001"		, "П00101М100001_");
	ИменаПоказателей.Вставить("П01Г007"		, "П00101М100007_");
	ИменаПоказателей.Вставить("Р00С002"		, "ОтчетГод");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	ЗаполнитьПоказатель(Показатели.Р00С002, ДанныеКС.Раздел0);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение1 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00101М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г001, СтраницаРаздела, Счетчик); 
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П01Г007, СтраницаРаздела, Счетчик); 
			РасшифроватьПоказатель(Показатели.Р00С002);
			
			РасчетныйГодЗаполнен = ЗначениеЗаполнено(Показатели.Р00С002.Значение); 
			УсловиеВыполнено = РасчетныйГодЗаполнен 
				И НЕ НастройкиКС.МассивКодов.Найти(Показатели.П01Г001.Значение) = Неопределено;
			РасчетныйГод = ?(РасчетныйГодЗаполнен, XMLСтрока(Число(Показатели.Р00С002.Значение) - 3), "0");
		
			НастройкиКС.ЭтоОшибка = УсловиеВыполнено И Показатели.П01Г007.Значение < РасчетныйГод;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П01Г007.ЗначениеСтр, РасчетныйГод, Показатели.Р00С002.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Приложение_2

&НаСервере
Процедура ПроверкаКС_06_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.01';
													|en = '06.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Признак документа в стр.001 Приложения 2 должен соответствовать списку ';
			|en = 'Признак документа в стр.001 Приложения 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака документа';
													|en = 'Возможно ошибочное значение признака документа'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите признак документа в стр.001 Приложения 2 из списка выбора';
			|en = 'Выберите признак документа в стр.001 Приложения 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001020000103");
	ПроверкаКС_06_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Показатели.П02С001.ИмяПоказателя);
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П02С001.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П02С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.02';
													|en = '06.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Номер банковской гарантии в стр.010 Приложения 2 должен быть заполнен';
			|en = 'Номер банковской гарантии в стр.010 Приложения 2 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Номер банковской гарантии в стр.010 Приложения 2 не заполнен';
													|en = 'Номер банковской гарантии в стр.010 Приложения 2 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните номер банковской гарантии в стр.010 Приложения 2';
													|en = 'Заполните номер банковской гарантии в стр.010 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001020001003");
	ПроверкаКС_06_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_02_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П02С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.03';
													|en = '06.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата выдачи банковской гарантии в стр.020 Приложения 2 <= стр.030 Приложения 2';
			|en = 'Дата выдачи банковской гарантии в стр.020 Приложения 2 <= стр.030 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата выдачи банковской гарантии в стр.020 Приложения 2';
			|en = 'Возможно ошибочная дата выдачи банковской гарантии в стр.020 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните дату выдачи банковской гарантии в стр.020 Приложения 2';
													|en = 'Уточните дату выдачи банковской гарантии в стр.020 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001020002003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001020003003");
	
	ПроверкаКС_06_03_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_03_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П02С002"		, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = Показатели.П02С001.Значение > Показатели.П02С002.Значение;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П02С001.ЗначениеСтр, Показатели.П02С002.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.04';
													|en = '06.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата начала действия банковской гарантии в стр.030 Приложения 2 >= стр.020 Приложения 2';
			|en = 'Дата начала действия банковской гарантии в стр.030 Приложения 2 >= стр.020 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%2 >= %1';
													|en = '%2 >= %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата начала действия банковской гарантии в стр.030 Приложения 2';
			|en = 'Возможно ошибочная дата начала действия банковской гарантии в стр.030 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните дату начала действия банковской гарантии в стр.030 Приложения 2';
			|en = 'Уточните дату начала действия банковской гарантии в стр.030 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001020002003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001020003003");
	
	ПроверкаКС_06_03_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.05';
													|en = '06.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата окончания действия банковской гарантии в стр.040 Приложения 2 > стр.(020, 030) Приложения 2';
			|en = 'Дата окончания действия банковской гарантии в стр.040 Приложения 2 > стр.(020, 030) Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > %2, %3';
													|en = '%1 > %2, %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата окончания действия банковской гарантии в стр.040 Приложения 2';
			|en = 'Возможно ошибочная дата окончания действия банковской гарантии в стр.040 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните дату окончания действия банковской гарантии в стр.040 Приложения 2';
			|en = 'Уточните дату окончания действия банковской гарантии в стр.040 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, "П001020004003");
	ИменаПоказателей.Вставить("П02С002"		, "П001020002003");
	ИменаПоказателей.Вставить("П02С003"		, "П001020003003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ (Показатели.П02С001.Значение 
			> Показатели.П02С002.Значение И Показатели.П02С001.Значение > Показатели.П02С003.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П02С001.ЗначениеСтр, Показатели.П02С002.ЗначениеСтр, Показатели.П02С003.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.06';
													|en = '06.06'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма банковской гарантии в стр.050 Приложения 2 должна быть заполнена';
			|en = 'Сумма банковской гарантии в стр.050 Приложения 2 должна быть заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Сумма банковской гарантии в стр.050 Приложения 2 не заполнена';
													|en = 'Сумма банковской гарантии в стр.050 Приложения 2 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните сумму банковской гарантии в стр.050 Приложения 2';
													|en = 'Заполните сумму банковской гарантии в стр.050 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001020005003");
	ПроверкаКС_06_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.07';
													|en = '06.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.055 Приложения 2 = сумме стр.100 Приложения 2';
			|en = 'Сумма акциза в стр.055 Приложения 2 = сумме стр.100 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.055 Приложения 2';
			|en = 'Возможно ошибочная сумма акциза в стр.055 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.055 Приложения 2';
													|en = 'Уточните сумму акциза в стр.055 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2';
													|en = 'Страница %1 Приложения 2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, "П001020005503");
	ИменаПоказателей.Вставить("П02С002"		, "П00102М110000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С001, СтраницаРаздела);
		
		Показатели.П02С002.Итог = 0;
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С002, СтраницаРаздела, Счетчик);
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П02С001.Значение = Показатели.П02С002.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П02С001.Значение, Показатели.П02С002.Итог);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;

КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.08';
													|en = '06.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.060 Приложения 2 должен соответствовать списку ';
			|en = 'Код подакцизного товара в стр.060 Приложения 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода подакцизного товара в стр.060 Приложения 2';
			|en = 'Возможно ошибочное значение кода подакцизного товара в стр.060 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код подакцизного товара в стр.060 Приложения 2 из списка выбора';
			|en = 'Выберите код подакцизного товара в стр.060 Приложения 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00102М106000_");
	ПроверкаКС_06_08_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_08_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.П02С001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
				
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П02С001.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П02С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_09_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.09.1';
													|en = '06.09.1'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в гр.4 стр.070 Приложения 2 >= ';
													|en = 'Объем подакцизных товаров в гр.4 стр.070 Приложения 2 >= '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2 и коду '") +
		НСтр("ru = 'показателя 20001, 20008, 20012 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20008, 20012 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= %2 по коду %3';
													|en = '%1 >= %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в гр.4 стр.070 Приложения 2';
			|en = 'Возможно ошибочный объем подакцизных товаров в гр.4 стр.070 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в гр.4 стр.070 Приложения 2';
													|en = 'Уточните объем подакцизных товаров в гр.4 стр.070 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП2"		, "П00102М106000_");
	НастройкиКС.Вставить("ИмяПоказателяП2"	, "П00102М207004_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ_П2");
	НастройкиКС.Вставить("ТабЧастьП2"		, "КолвоСтрокП00102М2_");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20008,20012", ","));
	
	ПроверкаКС_06_09_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_09_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.09.2';
													|en = '06.09.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в гр.5 стр.070 Приложения 2 >= ';
													|en = 'Сумма акциза в гр.5 стр.070 Приложения 2 >= '") +
		НСтр("ru = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2 и коду ';
			|en = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2 и коду '") +
		НСтр("ru = 'показателя 20001, 20008, 20012 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20008, 20012 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= %2 по коду %3';
													|en = '%1 >= %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в гр.5 стр.070 Приложения 2';
			|en = 'Возможно ошибочная сумма акциза в гр.5 стр.070 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.5 стр.070 Приложения 2';
													|en = 'Уточните сумму акциза в гр.5 стр.070 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП2"		, "П00102М106000_");
	НастройкиКС.Вставить("ИмяПоказателяП2"	, "П00102М207005_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ_П2");
	НастройкиКС.Вставить("ТабЧастьП2"		, "КолвоСтрокП00102М2_");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20008,20012", ","));
	
	ПроверкаКС_06_09_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_09_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02П001"		, НастройкиКС.ПолеКодаПТП2);
	ИменаПоказателей.Вставить("П02П002"		, НастройкиКС.ИмяПоказателяП2);
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р22Г001"		, НастройкиКС.ПолеКодаПТР2);
	ИменаПоказателей.Вставить("Р22Г003"		, НастройкиКС.ИмяПоказателяР2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей); 
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого КодПТ Из ДанныеКС[НастройкиКС.МассивКодовПТ] Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П02П002.Итог = 0;
		Показатели.Р22Г003.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
				МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
				ЗаполнитьПоказатель(Показатели.П02П001, СтраницаРаздела, Счетчик);
				
				Если Показатели.П02П001.Значение = КодПТ Тогда
					Если РасшифроватьКодПТ Тогда 
						РасшифроватьПоказатель(Показатели.П02П001);
						РасшифроватьКодПТ = Ложь;
						КодПТСтр = Показатели.П02П001.ЗначениеСтр;
					КонецЕсли;
				
					КолвоСтрок2 = СтраницаРаздела[НастройкиКС.ТабЧастьП2 + XMLСтрока(Счетчик)];
					Для Счетчик2 = 1 По КолвоСтрок2 Цикл
					
						МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П02П002, СтраницаРаздела, МассивНомеровСтрок);
						
					КонецЦикла; 
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Если Показатели.Р02С010.Значение = КодПТ Тогда
				Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
					ЗаполнитьПоказатель(Показатели.Р22Г001, СтраницаРаздела, Счетчик);
					Если НЕ НастройкиКС.МассивКодовР2.Найти(Показатели.Р22Г001.Значение) = Неопределено Тогда
						РасшифроватьПоказатель(Показатели.Р22Г001);
						ЗаполнитьИРасшифроватьПоказатель(Показатели.Р22Г003, СтраницаРаздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
						
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П02П002.Итог) 
			И Показатели.П02П002.Итог < Показатели.Р22Г003.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П02П002.Итог, Показатели.Р22Г003.Итог, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_10_1()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.10.1';
													|en = '06.10.1'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в гр.4 стр.080 Приложения 2 = ';
													|en = 'Объем подакцизных товаров в гр.4 стр.080 Приложения 2 = '") +
		НСтр("ru = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2, налоговому периоду ';
			|en = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2, налоговому периоду '") +
		НСтр("ru = 'в гр.(6, 7) стр.080 Приложения 2 и коду показателя 50003, 50008, 50009 в гр.1 подр.2.5 Раздела 2';
			|en = 'в гр.(6, 7) стр.080 Приложения 2 и коду показателя 50003, 50008, 50009 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3, налоговому периоду %4, %5';
													|en = '%1 = %2 по коду %3, налоговому периоду %4, %5'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в гр.4 стр.080 Приложения 2';
			|en = 'Возможно ошибочный объем подакцизных товаров в гр.4 стр.080 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в гр.4 стр.080 Приложения 2';
													|en = 'Уточните объем подакцизных товаров в гр.4 стр.080 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП2"		, "П00102М106000_");
	НастройкиКС.Вставить("ИмяПоказателяП2"	, "П00102М308004_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТНП_П2");
	НастройкиКС.Вставить("ТабЧастьП2"		, "КолвоСтрокП00102М3_");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50003,50008,50009", ","));
	
	ПроверкаКС_06_10_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_10_2()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.10.2';
													|en = '06.10.2'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в гр.5 стр.080 Приложения 2 = ';
													|en = 'Сумма акциза в гр.5 стр.080 Приложения 2 = '") +
		НСтр("ru = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2, налоговому периоду ';
			|en = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.060 Приложения 2, налоговому периоду '") +
		НСтр("ru = 'в гр.(6, 7) стр.080 Приложения 2 и коду показателя 50003, 50008, 50009 в гр.1 подр.2.5 Раздела 2';
			|en = 'в гр.(6, 7) стр.080 Приложения 2 и коду показателя 50003, 50008, 50009 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3, налоговому периоду %4, %5';
													|en = '%1 = %2 по коду %3, налоговому периоду %4, %5'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в гр.5 стр.080 Приложения 2';
			|en = 'Возможно ошибочная сумма акциза в гр.5 стр.080 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.5 стр.080 Приложения 2';
													|en = 'Уточните сумму акциза в гр.5 стр.080 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП2"		, "П00102М106000_");
	НастройкиКС.Вставить("ИмяПоказателяП2"	, "П00102М308005_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТНП_П2");
	НастройкиКС.Вставить("ТабЧастьП2"		, "КолвоСтрокП00102М3_");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50003,50008,50009", ","));
	
	ПроверкаКС_06_10_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_10_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02П001"		, НастройкиКС.ПолеКодаПТП2);
	ИменаПоказателей.Вставить("П02П002"		, НастройкиКС.ИмяПоказателяП2);
	ИменаПоказателей.Вставить("П02П003"		, "П00102М308006_");
	ИменаПоказателей.Вставить("П02П004"		, "П00102М308007_");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р25Г001"		, НастройкиКС.ПолеКодаПТР2);
	ИменаПоказателей.Вставить("Р25Г003"		, НастройкиКС.ИмяПоказателяР2);
	ИменаПоказателей.Вставить("Р25Г004"		, "П00025М100004_");
	ИменаПоказателей.Вставить("Р25Г005"		, "П00025М100005_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей); 
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого КодПТ Из ДанныеКС[НастройкиКС.МассивКодовПТ] Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П02П002.Итог = 0;
		Показатели.Р25Г003.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
		МесСтр = "";
		ГодСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
				МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
				ЗаполнитьПоказатель(Показатели.П02П001, СтраницаРаздела, Счетчик);
				
				КолвоСтрок2 = СтраницаРаздела[НастройкиКС.ТабЧастьП2 + XMLСтрока(Счетчик)];
				Для Счетчик2 = 1 По КолвоСтрок2 Цикл
					
					МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
					ЗаполнитьПоказатель(Показатели.П02П003, СтраницаРаздела, МассивНомеровСтрок);
					ЗаполнитьПоказатель(Показатели.П02П004, СтраницаРаздела, МассивНомеровСтрок);
					КодПТНП = Показатели.П02П001.Значение + Показатели.П02П003.Значение + Показатели.П02П004.Значение;
					
					Если КодПТНП = КодПТ Тогда
						Если РасшифроватьКодПТ Тогда 
							РасшифроватьПоказатель(Показатели.П02П001);
							РасшифроватьПоказатель(Показатели.П02П003);
							РасшифроватьПоказатель(Показатели.П02П004);
							РасшифроватьКодПТ = Ложь;
							КодПТСтр = Показатели.П02П001.ЗначениеСтр;
							МесСтр = Показатели.П02П003.ЗначениеСтр;
							ГодСтр = Показатели.П02П004.ЗначениеСтр;
						КонецЕсли;
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П02П002, СтраницаРаздела, МассивНомеровСтрок);
					КонецЕсли;
					
				КонецЦикла; 
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
				
				ЗаполнитьПоказатель(Показатели.Р25Г001, СтраницаРаздела, Счетчик);
				ЗаполнитьПоказатель(Показатели.Р25Г004, СтраницаРаздела, Счетчик);
				ЗаполнитьПоказатель(Показатели.Р25Г005, СтраницаРаздела, Счетчик);
				КодПТНП = Показатели.Р02С010.Значение + Показатели.Р25Г004.Значение + Показатели.Р25Г005.Значение;
				
				Если КодПТНП = КодПТ И НЕ НастройкиКС.МассивКодовР2.Найти(Показатели.Р25Г001.Значение) = Неопределено Тогда
					ЗаполнитьИРасшифроватьПоказатель(Показатели.Р25Г003, СтраницаРаздела, Счетчик);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
						
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П02П002.Итог = Показатели.Р25Г003.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П02П002.Итог, Показатели.Р25Г003.Итог, КодПТСтр, МесСтр, ГодСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.11';
													|en = '06.11'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.3 стр.090 Приложения 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.3 стр.090 Приложения 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.3 стр.090 Приложения 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.3 стр.090 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.3 стр.090 Приложения 2 из списка выбора';
			|en = 'Выберите код показателя в гр.3 стр.090 Приложения 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00102М409003_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М4_");
	ПроверкаКС_06_11_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_11_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02П001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.П02П001.ИмяПоказателя, 13));
	МассивНомеровСтрок = Новый Массив(2);
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
				МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
				КолвоСтрок2 = СтраницаРаздела[НастройкиКС.ТабЧасть + XMLСтрока(Счетчик)];
				
				Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
					ЗарегистрироватьПроверку(); 
					МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
					ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, МассивНомеровСтрок);
					
					НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П02П001.Значение) = Неопределено;
					НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П02П001.ЗначениеСтр);
					НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
						СтраницаРаздела.НомерСтраницы, 
						СтрСоединить(
						ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
					ДополнитьТаблицуРезультата(); 
					
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.13';
													|en = '06.13'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в стр.100 Приложения 2 = гр.5 стр.(070 - 080 - 090) Приложения 2';
			|en = 'Сумма акциза в стр.100 Приложения 2 = гр.5 стр.(070 - 080 - 090) Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4 - %5)';
													|en = '%1 = %2 (%3 - %4 - %5)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.100 Приложения 2';
			|en = 'Возможно ошибочная сумма акциза в стр.100 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.100 Приложения 2';
													|en = 'Уточните сумму акциза в стр.100 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, группа строк %2';
													|en = 'Страница %1 Приложения 2, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02С100"		, "П00102М110000_");
	ИменаПоказателей.Вставить("П02С070"		, "П00102М207005_");
	ИменаПоказателей.Вставить("П02С080"		, "П00102М308005_");
	ИменаПоказателей.Вставить("П02С090"		, "П00102М409005_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
			ЗарегистрироватьПроверку(); 
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С100, СтраницаРаздела, Счетчик);
			
			Показатели.П02С070.Итог = 0;
			Показатели.П02С080.Итог = 0;
			Показатели.П02С090.Итог = 0;
			
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00102М2_" + XMLСтрока(Счетчик)];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С070, СтраницаРаздела, МассивНомеровСтрок);
			КонецЦикла;
			
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00102М3_" + XMLСтрока(Счетчик)];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С080, СтраницаРаздела, МассивНомеровСтрок);
			КонецЦикла;
			
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00102М4_" + XMLСтрока(Счетчик)];
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл 
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П02С090, СтраницаРаздела, МассивНомеровСтрок);
			КонецЦикла;
			
			РасчетнаяСумма = Показатели.П02С070.Итог - Показатели.П02С080.Итог - Показатели.П02С090.Итог;
			НастройкиКС.ЭтоОшибка = НЕ Показатели.П02С100.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П02С100.Значение, РасчетнаяСумма, Показатели.П02С070.Итог, Показатели.П02С080.Итог, 
				Показатели.П02С090.Итог);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.14';
													|en = '06.14'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.3 стр.070 Приложения 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.3 стр.070 Приложения 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.3 стр.070 Приложения 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.3 стр.070 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.3 стр.070 Приложения 2 из списка выбора';
			|en = 'Выберите код показателя в гр.3 стр.070 Приложения 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00102М207003_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М2_");
	ПроверкаКС_06_11_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.15';
													|en = '06.15'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.5 стр.070 Приложения 2 = гр.4 стр.070 Приложения 2 х ставку акциза, ';
			|en = 'Сумма акциза в гр.5 стр.070 Приложения 2 = гр.4 стр.070 Приложения 2 х ставку акциза, '") +
		НСтр("ru = 'действующую для кода подакцизного товара в стр.060 Приложения 2';
			|en = 'действующую для кода подакцизного товара в стр.060 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение гр.5 стр.070 Приложения 2';
													|en = 'Возможно ошибочное значение гр.5 стр.070 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.5 стр.070 Приложения 2';
													|en = 'Уточните сумму акциза в гр.5 стр.070 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00102М207005_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00102М207004_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М2_");
	ПроверкаКС_06_15_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_15_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П02П001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П02П002"		, НастройкиКС.ИмяПоказателя2); 
	ИменаПоказателей.Вставить("П02С003"		, "П00102М106000_"); 
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
			ЗаполнитьПоказатель(Показатели.П02С003, СтраницаРаздела, Счетчик);
			СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.П02С003.Значение);
			
			Если СтавкаАкциза = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			КолвоСтрок2 = СтраницаРаздела[НастройкиКС.ТабЧасть + XMLСтрока(Счетчик)];
			
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
			
				ЗарегистрироватьПроверку(); 
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П02П001, СтраницаРаздела, МассивНомеровСтрок);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П02П002, СтраницаРаздела, МассивНомеровСтрок);
				РасшифроватьПоказатель(Показатели.П02С003); 
				
				РасчетнаяСумма = Окр(Показатели.П02П002.Значение * СтавкаАкциза);
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П02П001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П02П001.Значение, РасчетнаяСумма, Показатели.П02П002.Значение, СтавкаАкциза);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.16';
													|en = '06.16'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.3 стр.080 Приложения 2 должен соответствовать списку ';
			|en = 'Код показателя в гр.3 стр.080 Приложения 2 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочное значение кода показателя в гр.3 стр.080 Приложения 2';
			|en = 'Возможно ошибочное значение кода показателя в гр.3 стр.080 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.3 стр.080 Приложения 2 из списка выбора';
			|en = 'Выберите код показателя в гр.3 стр.080 Приложения 2 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00102М308003_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М3_");
	ПроверкаКС_06_11_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.17';
													|en = '06.17'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.5 стр.080 Приложения 2 = гр.4 стр.080 Приложения 2 х ставку акциза, ';
			|en = 'Сумма акциза в гр.5 стр.080 Приложения 2 = гр.4 стр.080 Приложения 2 х ставку акциза, '") +
		НСтр("ru = 'действующую в налоговом периоде гр.(6, 7) стр.080 Приложения 2 для кода подакцизного ';
			|en = 'действующую в налоговом периоде гр.(6, 7) стр.080 Приложения 2 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.060 Приложения 2';
			|en = 'товара в стр.060 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение гр.5 стр.080 Приложения 2';
													|en = 'Возможно ошибочное значение гр.5 стр.080 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.5 стр.080 Приложения 2';
													|en = 'Уточните сумму акциза в гр.5 стр.080 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00102М308005_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00102М308004_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00102М308006_");
	НастройкиКС.Вставить("ИмяПоказателя4"	, "П00102М308007_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М3_");
	ПроверкаКС_06_17_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_17_код()
	
	ИменаПоказателей1 = Новый Структура;
	ИменаПоказателей1.Вставить("П02П001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей1.Вставить("П02П002"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей1.Вставить("П02П003"		, НастройкиКС.ИмяПоказателя3);
	ИменаПоказателей1.Вставить("П02П004"		, НастройкиКС.ИмяПоказателя4);
	
	ИменаПоказателей2 = Новый Структура;
	ИменаПоказателей2.Вставить("П02С001"		, "П00102М106000_"); 
	
	Показатели1 = СформироватьПоказатели(ИменаПоказателей1);
	Показатели2 = СформироватьПоказатели(ИменаПоказателей2);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00102М1 Цикл
			
			ЗаполнитьПоказатель(Показатели2.П02С001, СтраницаРаздела, Счетчик);
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			КолвоСтрок2 = СтраницаРаздела[НастройкиКС.ТабЧасть + XMLСтрока(Счетчик)];
			
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьПоказатель(Показатели1.П02П003, СтраницаРаздела, МассивНомеровСтрок);
				ЗаполнитьПоказатель(Показатели1.П02П004, СтраницаРаздела, МассивНомеровСтрок); 
				
				Если ЗначениеЗаполнено(Показатели1.П02П003.Значение) И ЗначениеЗаполнено(Показатели1.П02П004.Значение) Тогда
					ДатаСтавки = Дата(Показатели1.П02П004.Значение + Показатели1.П02П003.Значение + "01" + "01" + "01" + "01");
				Иначе
					ДатаСтавки = '00010101';
				КонецЕсли;
				
				СтавкиАкциза = ПолучитьСтавкиАкциза(ДатаСтавки);
				СтавкаАкциза = СтавкиАкциза.Получить(Показатели2.П02С001.Значение);
				
				Если СтавкаАкциза = Неопределено Тогда
					Продолжить;
				КонецЕсли;
			
				ЗарегистрироватьПроверку(); 
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатели(Показатели1, СтраницаРаздела, МассивНомеровСтрок);
				РасшифроватьПоказатель(Показатели2.П02С001);
		
				РасчетнаяСумма = Окр(Показатели1.П02П002.Значение * СтавкаАкциза);
				НастройкиКС.ЭтоОшибка = НЕ Показатели1.П02П001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели1.П02П001.Значение, РасчетнаяСумма, Показатели1.П02П002.Значение, СтавкаАкциза);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_06_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '06.18';
													|en = '06.18'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма акциза в гр.5 стр.090 Приложения 2 = гр.4 стр.090 Приложения 2 х ставку акциза, ';
			|en = 'Сумма акциза в гр.5 стр.090 Приложения 2 = гр.4 стр.090 Приложения 2 х ставку акциза, '") +
		НСтр("ru = 'действующую в налоговом периоде гр.(6, 7) стр.090 Приложения 2 для кода подакцизного ';
			|en = 'действующую в налоговом периоде гр.(6, 7) стр.090 Приложения 2 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.060 Приложения 2';
			|en = 'товара в стр.060 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение гр.5 стр.090 Приложения 2';
													|en = 'Возможно ошибочное значение гр.5 стр.090 Приложения 2'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в гр.5 стр.090 Приложения 2';
													|en = 'Уточните сумму акциза в гр.5 стр.090 Приложения 2'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 2, строка %2';
													|en = 'Страница %1 Приложения 2, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00102М409005_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00102М409004_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00102М409006_");
	НастройкиКС.Вставить("ИмяПоказателя4"	, "П00102М409007_");
	НастройкиКС.Вставить("ТабЧасть"			, "КолвоСтрокП00102М4_");
	ПроверкаКС_06_17_код();
		
КонецПроцедуры

#КонецОбласти

#Область Приложение_3

&НаСервере
Процедура ПроверкаКС_07_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.01';
													|en = '07.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'ИНН организации в стр.010 Приложения 3 должен быть заполнен';
			|en = 'ИНН организации в стр.010 Приложения 3 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ИНН организации в стр.010 Приложения 3 не заполнен';
													|en = 'ИНН организации в стр.010 Приложения 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните ИНН организации в стр.010 Приложения 3';
													|en = 'Заполните ИНН организации в стр.010 Приложения 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3';
													|en = 'Страница %1 Приложения 3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001030001003");
	ПроверкаКС_07_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П03С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение3 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П03С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.02';
													|en = '07.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КПП организации в стр.020 Приложения 3 должен быть заполнен';
			|en = 'КПП организации в стр.020 Приложения 3 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КПП организации в стр.020 Приложения 3 не заполнен';
													|en = 'КПП организации в стр.020 Приложения 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КПП организации в стр.020 Приложения 3';
													|en = 'Заполните КПП организации в стр.020 Приложения 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3';
													|en = 'Страница %1 Приложения 3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001030002003");
	ПроверкаКС_07_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.03';
													|en = '07.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Регистрационный номер в стр.030 Приложения 3 должен быть заполнен';
			|en = 'Регистрационный номер в стр.030 Приложения 3 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Регистрационный номер в стр.030 Приложения 3 не заполнен';
													|en = 'Регистрационный номер в стр.030 Приложения 3 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните регистрационный номер в стр.030 Приложения 3';
													|en = 'Заполните регистрационный номер в стр.030 Приложения 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3';
													|en = 'Страница %1 Приложения 3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001030003003");
	ПроверкаКС_07_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.04';
													|en = '07.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата регистрации в стр.040 Приложения 3 должна быть заполнена';
			|en = 'Дата регистрации в стр.040 Приложения 3 должна быть заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Дата регистрации в стр.040 Приложения 3 не заполнена';
													|en = 'Дата регистрации в стр.040 Приложения 3 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните дату регистрации в стр.040 Приложения 3';
													|en = 'Заполните дату регистрации в стр.040 Приложения 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3';
													|en = 'Страница %1 Приложения 3'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001030004003");
	ПроверкаКС_07_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.05';
													|en = '07.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код показателя в гр.1 Приложения 3 должен соответствовать списку ';
			|en = 'Код показателя в гр.1 Приложения 3 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение кода показателя';
													|en = 'Возможно ошибочное значение кода показателя'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите код показателя в гр.1 Приложения 3 из списка выбора';
			|en = 'Выберите код показателя в гр.1 Приложения 3 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3, строка %2';
													|en = 'Страница %1 Приложения 3, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00103М100001_");
	ПроверкаКС_07_05_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_05_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П03Г001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.П03Г001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение3 Цикл
			Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00103М1 Цикл
				
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П03Г001.Значение) = Неопределено;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П03Г001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
				
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '07.06';
													|en = '07.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в гр.5 Приложения 3 = гр.3 ';
													|en = 'Сумма авансового платежа в гр.5 Приложения 3 = гр.3 '") + 
		НСтр("ru = 'Приложения 3 х ставку акциза, действующую для кода подакцизного товара в гр.4 ';
			|en = 'Приложения 3 х ставку акциза, действующую для кода подакцизного товара в гр.4 '") +
		НСтр("ru = 'Приложения 3';
			|en = 'Приложения 3'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение гр.5 Приложения 3';
													|en = 'Возможно ошибочное значение гр.5 Приложения 3'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в гр.5 Приложения 3';
													|en = 'Уточните сумму авансового платежа в гр.5 Приложения 3'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 3, строка %2';
													|en = 'Страница %1 Приложения 3, строка %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00103М100005_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00103М100003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00103М100004_");
	
	ПроверкаКС_07_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_07_06_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П03Г005"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П03Г003"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П03Г004"		, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение3 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00103М1 Цикл
	
			ЗаполнитьПоказатель(Показатели.П03Г004, СтраницаРаздела, Счетчик);
			СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.П03Г004.Значение);
			
			Если СтавкаАкциза = Неопределено Тогда
				Продолжить;
			КонецЕсли;
	
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
	
			РасчетнаяСумма = Окр(Показатели.П03Г003.Значение * СтавкаАкциза);
			НастройкиКС.ЭтоОшибка = НЕ Показатели.П03Г005.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П03Г005.Значение, РасчетнаяСумма, Показатели.П03Г003.Значение, СтавкаАкциза);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Приложение_4

&НаСервере
Процедура ПроверкаКС_08_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.01';
													|en = '08.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Признак организации в стр.001 Приложения 4 должен соответствовать списку ';
			|en = 'Признак организации в стр.001 Приложения 4 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака организации';
													|en = 'Возможно ошибочное значение признака организации'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите признак организации в стр.001 Приложения 4 из списка выбора';
			|en = 'Выберите признак организации в стр.001 Приложения 4 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4';
													|en = 'Страница %1 Приложения 4'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001040000103");
	ПроверкаКС_08_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Показатели.П04С001.ИмяПоказателя);
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П04С001.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П04С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.02';
													|en = '08.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'ИНН организации в стр.010 Приложения 4 должен быть заполнен';
			|en = 'ИНН организации в стр.010 Приложения 4 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ИНН организации в стр.010 Приложения 4 не заполнен';
													|en = 'ИНН организации в стр.010 Приложения 4 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните ИНН организации в стр.010 Приложения 4';
													|en = 'Заполните ИНН организации в стр.010 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4';
													|en = 'Страница %1 Приложения 4'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001040001003");
	ПроверкаКС_08_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_02_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П04С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.03';
													|en = '08.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КПП организации в стр.020 Приложения 4 должен быть заполнен';
			|en = 'КПП организации в стр.020 Приложения 4 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КПП организации в стр.020 Приложения 4 не заполнен';
													|en = 'КПП организации в стр.020 Приложения 4 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КПП организации в стр.020 Приложения 4';
													|en = 'Заполните КПП организации в стр.020 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4';
													|en = 'Страница %1 Приложения 4'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001040002003");
	ПроверкаКС_08_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.04';
													|en = '08.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Серия и номер свидетельства в стр.030 Приложения 4 должны быть заполнены';
			|en = 'Серия и номер свидетельства в стр.030 Приложения 4 должны быть заполнены'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Серия и/или номер свидетельства в стр.030 Приложения 4 не заполнены';
													|en = 'Серия и/или номер свидетельства в стр.030 Приложения 4 не заполнены'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните серию и/или номер свидетельства в стр.030 Приложения 4';
													|en = 'Заполните серию и/или номер свидетельства в стр.030 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4';
													|en = 'Страница %1 Приложения 4'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, "П001040003003");
	ИменаПоказателей.Вставить("П04С002"		, "П001040003004");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен 
			И НЕ (ЗначениеЗаполнено(Показатели.П04С001.Значение) И ЗначениеЗаполнено(Показатели.П04С002.Значение));
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.05';
													|en = '08.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код этилового спирта в стр.040 Приложения 4 = 111, 121, 140, 150, 160, 166, 170';
			|en = 'Код этилового спирта в стр.040 Приложения 4 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 111, 121, 140, 150, 160, 166, 170';
													|en = '%1 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код этилового спирта в стр.040 Приложения 4';
													|en = 'Возможно ошибочный код этилового спирта в стр.040 Приложения 4'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код этилового спирта в стр.040 Приложения 4';
													|en = 'Уточните код этилового спирта в стр.040 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4, группа строк %2';
													|en = 'Страница %1 Приложения 4, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00104М104000_"); 
	НастройкиКС.Вставить("СтрокаКодов"		, "111,121,140,150,160,166,170");
	ПроверкаКС_08_05_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_05_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00104М1 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
			НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен 
				И НЕ КодНайден(Показатели.П04С001.Значение, НастройкиКС.СтрокаКодов);
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П04С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.06';
													|en = '08.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Номер счета-фактуры в стр.050 Приложения 4 должен быть заполнен';
													|en = 'Номер счета-фактуры в стр.050 Приложения 4 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Номер счета-фактуры в стр.050 Приложения 4 не заполнен';
													|en = 'Номер счета-фактуры в стр.050 Приложения 4 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните номер счета-фактуры в стр.050 Приложения 4';
													|en = 'Заполните номер счета-фактуры в стр.050 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4, группа строк %2';
													|en = 'Страница %1 Приложения 4, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00104М205000_");
	ПроверкаКС_08_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_06_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00104М1 Цикл
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00104М2_" + XMLСтрока(Счетчик)];
			
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
				ЗарегистрироватьПроверку();
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П04С001, СтраницаРаздела, МассивНомеровСтрок);
				
				НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П04С001.Значение);
				НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.07';
													|en = '08.07'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Дата счета-фактуры в стр.060 Приложения 4 должна быть заполнена';
													|en = 'Дата счета-фактуры в стр.060 Приложения 4 должна быть заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Дата счета-фактуры в стр.060 Приложения 4 не заполнена';
													|en = 'Дата счета-фактуры в стр.060 Приложения 4 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните дату счета-фактуры в стр.060 Приложения 4';
													|en = 'Заполните дату счета-фактуры в стр.060 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4, группа строк %2';
													|en = 'Страница %1 Приложения 4, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00104М206000_");
	ПроверкаКС_08_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.08';
													|en = '08.08'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.070 Приложения 4 должен быть заполнен';
													|en = 'Объем этилового спирта в стр.070 Приложения 4 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Объем этилового спирта в стр.070 Приложения 4 не заполнен';
													|en = 'Объем этилового спирта в стр.070 Приложения 4 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните объем этилового спирта в стр.070 Приложения 4';
													|en = 'Заполните объем этилового спирта в стр.070 Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4, группа строк %2';
													|en = 'Страница %1 Приложения 4, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00104М207000_");
	ПроверкаКС_08_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_08_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '08.09';
													|en = '08.09'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4 должны быть заполнены ';
			|en = 'Реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4 должны быть заполнены '") + 
		НСтр("ru = 'в случае заполнения одного из значений';
			|en = 'в случае заполнения одного из значений'")); 
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4 заполнены не полностью';
			|en = 'Реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4 заполнены не полностью'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Заполните реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4';
			|en = 'Заполните реквизиты счета-фактуры в стр.(080, 090, 100) Приложения 4'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 4, группа строк %2';
													|en = 'Страница %1 Приложения 4, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П04С001"		, "П00104М208000_");
	ИменаПоказателей.Вставить("П04С002"		, "П00104М209000_");
	ИменаПоказателей.Вставить("П04С003"		, "П00104М210000_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	МассивНомеровСтрок = Новый Массив(2);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение4 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00104М1 Цикл
			
			МассивНомеровСтрок.Установить(0, XMLСтрока(Счетчик));
			КолвоСтрок2 = СтраницаРаздела["КолвоСтрокП00104М2_" + XMLСтрока(Счетчик)];
			
			Для Счетчик2 = 1 По КолвоСтрок2 Цикл
				
				ЗарегистрироватьПроверку();
				МассивНомеровСтрок.Установить(1, XMLСтрока(Счетчик2));
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, МассивНомеровСтрок);
				
				ВсеРеквизитыЗаполнены = ЗначениеЗаполнено(Показатели.П04С001.Значение) 
					И ЗначениеЗаполнено(Показатели.П04С002.Значение) И ЗначениеЗаполнено(Показатели.П04С003.Значение);
				ВсеРеквизитыНеЗаполнены = НЕ ЗначениеЗаполнено(Показатели.П04С001.Значение) 
					И НЕ ЗначениеЗаполнено(Показатели.П04С002.Значение) И НЕ ЗначениеЗаполнено(Показатели.П04С003.Значение);
				
				НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен 
					И НЕ (ВсеРеквизитыЗаполнены ИЛИ ВсеРеквизитыНеЗаполнены);
				НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаРаздела.НомерСтраницы, 
					СтрСоединить(
					ОбщегоНазначения.СкопироватьРекурсивно(МассивНомеровСтрок), ","));
				ДополнитьТаблицуРезультата(); 
				
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Приложение_5

&НаСервере
Процедура ПроверкаКС_09_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.01';
													|en = '09.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Регистрационный номер в стр.010 Приложения 5 должен быть заполнен';
			|en = 'Регистрационный номер в стр.010 Приложения 5 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Регистрационный номер в стр.010 Приложения 5 не заполнен';
													|en = 'Регистрационный номер в стр.010 Приложения 5 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните регистрационный номер в стр.010 Приложения 5';
													|en = 'Заполните регистрационный номер в стр.010 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001050001003");
	ПроверкаКС_09_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П05С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.02';
													|en = '09.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата регистрации в стр.020 Приложения 5 должна быть заполнена';
			|en = 'Дата регистрации в стр.020 Приложения 5 должна быть заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Дата регистрации в стр.020 Приложения 5 не заполнена';
													|en = 'Дата регистрации в стр.020 Приложения 5 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните дату регистрации в стр.020 Приложения 5';
													|en = 'Заполните дату регистрации в стр.020 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001050002003");
	ПроверкаКС_09_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.03';
													|en = '09.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'ИНН организации в стр.030 Приложения 5 должен быть заполнен';
			|en = 'ИНН организации в стр.030 Приложения 5 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ИНН организации в стр.030 Приложения 5 не заполнен';
													|en = 'ИНН организации в стр.030 Приложения 5 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните ИНН организации в стр.030 Приложения 5';
													|en = 'Заполните ИНН организации в стр.030 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001050003003");
	ПроверкаКС_09_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.04';
													|en = '09.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КПП организации в стр.040 Приложения 5 должен быть заполнен';
			|en = 'КПП организации в стр.040 Приложения 5 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КПП организации в стр.040 Приложения 5 не заполнен';
													|en = 'КПП организации в стр.040 Приложения 5 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КПП организации в стр.040 Приложения 5';
													|en = 'Заполните КПП организации в стр.040 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001050004003");
	ПроверкаКС_09_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.05';
													|en = '09.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код этилового спирта в стр.050 Приложения 5 = 111, 121, 140, 150, 160, 166, 170';
			|en = 'Код этилового спирта в стр.050 Приложения 5 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 111, 121, 140, 150, 160, 166, 170';
													|en = '%1 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код этилового спирта в стр.050 Приложения 5';
													|en = 'Возможно ошибочный код этилового спирта в стр.050 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код этилового спирта в стр.050 Приложения 5';
													|en = 'Уточните код этилового спирта в стр.050 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001050005003");
	НастройкиКС.Вставить("СтрокаКодов"		, "111,121,140,150,160,166,170");
	ПроверкаКС_09_05_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_05_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ КодНайден(Показатели.П05С001.Значение, НастройкиКС.СтрокаКодов);
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П05С001.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.06';
													|en = '09.06'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.060 Приложения 5 = сумме стр.200 Приложения 5';
			|en = 'Объем этилового спирта в стр.060 Приложения 5 = сумме стр.200 Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.060 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.060 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.060 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.060 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001050006003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М120003_");
	ПроверкаКС_09_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_06_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П05С002"		, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		
		ЗарегистрироватьПроверку();
		Показатели.П05С002.Итог = 0;
		ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С001, СтраницаРаздела);
			
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С002, СтраницаРаздела, Счетчик);
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П05С001.Значение = Показатели.П05С002.Итог; 
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П05С001.Значение, Показатели.П05С002.Значение);
		НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
			СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.07';
													|en = '09.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма авансового платежа в стр.070 Приложения 5 = гр.2 подраздела 2.4.1 ';
			|en = 'Сумма авансового платежа в стр.070 Приложения 5 = гр.2 подраздела 2.4.1 '") +
		НСтр("ru = 'Раздела 2 по соответствующему коду подакцизного товара в стр.050 Приложения 5 и коду показателя ';
			|en = 'Раздела 2 по соответствующему коду подакцизного товара в стр.050 Приложения 5 и коду показателя '") +
		НСтр("ru = '60006 в гр.1 подраздела 2.4.1 Раздела 2, если дата извещения в стр.020 Приложения 5 относится к ';
			|en = '60006 в гр.1 подраздела 2.4.1 Раздела 2, если дата извещения в стр.020 Приложения 5 относится к '") +
		НСтр("ru = 'налоговому периоду отчета';
			|en = 'налоговому периоду отчета'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.070 Приложения 5';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.070 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.070 Приложения 5';
													|en = 'Уточните сумму авансового платежа в стр.070 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ДляДокументации"	, 
		НСтр("ru = 'Дата извещения в стр.020 Приложения 5 относится к налоговому периоду отчета';
			|en = 'Дата извещения в стр.020 Приложения 5 относится к налоговому периоду отчета'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодовР2", СтрРазделить(
		"60006", ","));
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("П05С001"		, "П001050002003");
	ИменаПоказателей.Вставить("П05С002"		, "П001050005003");
	ИменаПоказателей.Вставить("П05С003"		, "П001050007003");
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р26Г001"		, "П00241М100001_");
	ИменаПоказателей.Вставить("Р26Г002"		, "П00241М100002_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого КодПТ Из ДанныеКС.МассивКодовПТ5 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П05С003.Итог = 0;
		Показатели.Р26Г002.Итог = 0;
		РасшифроватьКодПТ = Истина;
		УсловиеВыполнено = Ложь;
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
					
			ЗаполнитьПоказатель(Показатели.П05С001, СтраницаРаздела);
			ЗаполнитьПоказатель(Показатели.П05С002, СтраницаРаздела);
			
			Если НЕ (Месяц(Показатели.П05С001.Значение) = ДанныеКС.МесОтчета 
				И Год(Показатели.П05С001.Значение) = ДанныеКС.ГодОтчета) Тогда
				Продолжить;
			КонецЕсли;
			
			Если Показатели.П05С002.Значение = КодПТ Тогда
				Если РасшифроватьКодПТ Тогда 
					РасшифроватьПоказатель(Показатели.П05С001);
					РасшифроватьПоказатель(Показатели.П05С002);
					УсловиеВыполнено = Истина;
					РасшифроватьКодПТ = Ложь;
					КодПТСтр = Показатели.П05С002.ЗначениеСтр;
				КонецЕсли;
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С003, СтраницаРаздела);
			КонецЕсли;
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Если Показатели.Р02С010.Значение = КодПТ Тогда
				Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00241М1 Цикл
					ЗаполнитьПоказатель(Показатели.Р26Г001, СтраницаРаздела, Счетчик);
					Если НЕ НастройкиКС.МассивКодовР2.Найти(Показатели.Р26Г001.Значение) = Неопределено Тогда
						РасшифроватьПоказатель(Показатели.Р26Г001);
						ЗаполнитьИРасшифроватьПоказатель(Показатели.Р26Г002, СтраницаРаздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = УсловиеВыполнено И НЕ Показатели.П05С003.Итог = Показатели.Р26Г002.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П05С003.Итог, Показатели.Р26Г002.Итог, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.08';
													|en = '09.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.080 Приложения 5 = сумме стр.200 Приложения 5';
			|en = 'Объем этилового спирта в стр.080 Приложения 5 = сумме стр.200 Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.080 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.080 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.080 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.080 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001050008003"); 
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М120003_");
	ПроверкаКС_09_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.09';
													|en = '09.09'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.090 Приложения 5 = стр.080 ';
													|en = 'Сумма авансового платежа в стр.090 Приложения 5 = стр.080 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую на дату в стр.020 Приложения 5 для кода подакцизного ';
			|en = 'Приложения 5 х ставку акциза, действующую на дату в стр.020 Приложения 5 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.050 Приложения 5';
			|en = 'товара в стр.050 Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.090 Приложения 5';
													|en = 'Возможно ошибочное значение стр.090 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.090 Приложения 5';
													|en = 'Уточните сумму авансового платежа в стр.090 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001050009003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001050008003");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П001050005003");
	ПроверкаКС_09_09_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_09_код() 
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П05С002"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П05С003"		, "П001050002003");
	ИменаПоказателей.Вставить("П05С004"		, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		
		ЗаполнитьПоказатель(Показатели.П05С003, СтраницаРаздела);
		ЗаполнитьПоказатель(Показатели.П05С004, СтраницаРаздела);
		СтавкиАкциза = ПолучитьСтавкиАкциза(Показатели.П05С003.Значение);
		СтавкаАкциза = СтавкиАкциза.Получить(Показатели.П05С004.Значение);
		
		Если СтавкаАкциза = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		РасчетнаяСумма = Окр(Показатели.П05С002.Значение * СтавкаАкциза);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П05С001.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П05С001.Значение, РасчетнаяСумма, Показатели.П05С002.Значение, СтавкаАкциза);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.10';
													|en = '09.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Остаток этилового спирта в стр.100 Приложения 5 = сумме стр.320 Приложения 5';
			|en = 'Остаток этилового спирта в стр.100 Приложения 5 = сумме стр.320 Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.100 Приложения 5';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.100 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.100 Приложения 5';
													|en = 'Уточните остаток этилового спирта в стр.100 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001050010003"); 
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М132003_");
	ПроверкаКС_09_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.11';
													|en = '09.11'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Сумма авансового платежа в стр.110 Приложения 5 = сумме стр.330 Приложения 5';
			|en = 'Сумма авансового платежа в стр.110 Приложения 5 = сумме стр.330 Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.110 Приложения 5';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.110 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.110 Приложения 5';
													|en = 'Уточните сумму авансового платежа в стр.110 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5';
													|en = 'Страница %1 Приложения 5'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001050011003"); 
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М133003_");
	ПроверкаКС_09_06_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.12';
													|en = '09.12'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.190 Приложения 5 = 224, 225, 226, 227, 231, 290';
			|en = 'Код подакцизного товара в стр.190 Приложения 5 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 224, 225, 226, 227, 231, 290';
													|en = '%1 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный код подакцизного товара в стр.190 Приложения 5';
			|en = 'Возможно ошибочный код подакцизного товара в стр.190 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код подакцизного товара в стр.190 Приложения 5';
													|en = 'Уточните код подакцизного товара в стр.190 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00105М119003_");
	НастройкиКС.Вставить("СтрокаКодов"		, "224,225,226,227,231,290");
	ПроверкаКС_09_12_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_12_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
			НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ КодНайден(Показатели.П05С001.Значение, 
				НастройкиКС.СтрокаКодов);
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П05С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.13';
													|en = '09.13'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.200 Приложения 5 > 0';
			|en = 'Объем этилового спирта в стр.200 Приложения 5 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Объем этилового спирта в стр.200 Приложения 5 не заполнен';
													|en = 'Объем этилового спирта в стр.200 Приложения 5 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните объем этилового спирта в стр.200 Приложения 5';
													|en = 'Заполните объем этилового спирта в стр.200 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, "П00105М120003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
		
			НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ Показатели.П05С001.Значение > 0;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П05С001.Значение); 
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.14';
													|en = '09.14'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.210 Приложения 5 = ';
													|en = 'Объем этилового спирта в стр.210 Приложения 5 = '") +
		НСтр("ru = 'стр.270 Приложения 5 отчета за предыдущий налоговый период по соответствующему ';
			|en = 'стр.270 Приложения 5 отчета за предыдущий налоговый период по соответствующему '") +
		НСтр("ru = 'номеру извещения в стр.010 Приложения 5 ';
			|en = 'номеру извещения в стр.010 Приложения 5 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по извещению %3';
													|en = '%1 = %2 по извещению %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.210 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.210 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.210 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.210 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М121003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М127003_");
	
	ПроверкаКС_09_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_14_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, "П001050001003");
	ИменаПоказателей.Вставить("П05С002"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П05С003П"	, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Если НЕ ДанныеКС.ОтчетПНПНайден Тогда 
		Возврат;
	КонецЕсли;
	
	Для каждого НомерИзвещения Из ДанныеКС.МассивКодовНИзв5 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П05С002.Итог 	= 0;
		Показатели.П05С003П.Итог 	= 0;
		РасшифроватьКоды = Истина; 
		КодНИСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
			
			ЗаполнитьПоказатель(Показатели.П05С001, СтраницаРаздела); 
			Если Показатели.П05С001.Значение = НомерИзвещения Тогда 
				
				Если РасшифроватьКоды Тогда
					РасшифроватьПоказатель(Показатели.П05С001);
					РасшифроватьКоды = Ложь; 
					КодНИСтр = Показатели.П05С001.ЗначениеСтр;
				КонецЕсли;
			
				Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
					ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С002, СтраницаРаздела, Счетчик);
				КонецЦикла;
				
			КонецЕсли;
		КонецЦикла;
	
		Для каждого СтраницаРаздела Из ДанныеКС.ОтчетПНП.Приложение5 Цикл
			ЗаполнитьПоказатель(Показатели.П05С001, СтраницаРаздела); 
			Если Показатели.П05С001.Значение = НомерИзвещения Тогда 
				Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
					ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С003П, СтраницаРаздела, Счетчик);
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П05С003П.Итог) 
			И НЕ Показатели.П05С002.Итог = Показатели.П05С003П.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П05С002.Итог, Показатели.П05С003П.Итог, КодНИСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.15';
													|en = '09.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.220 Приложения 5 = стр.210 ';
													|en = 'Сумма акциза в стр.220 Приложения 5 = стр.210 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.220 Приложения 5';
													|en = 'Возможно ошибочное значение стр.220 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.220 Приложения 5';
													|en = 'Уточните сумму акциза в стр.220 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М122003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М121003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_15_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П05С002"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П05С003"		, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
	
			ЗаполнитьПоказатель(Показатели.П05С003, СтраницаРаздела, Счетчик);
			СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.П05С003.Значение);
			
			Если СтавкаАкциза = Неопределено Тогда
				Продолжить;
			КонецЕсли;
	
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
	
			РасчетнаяСумма = Окр(Показатели.П05С002.Значение * СтавкаАкциза);
			НастройкиКС.ЭтоОшибка = НЕ Показатели.П05С001.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П05С001.Значение, РасчетнаяСумма, Показатели.П05С002.Значение, СтавкаАкциза);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата(); 
	
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.16';
													|en = '09.16'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.230 Приложения 5 = ';
													|en = 'Объем этилового спирта в стр.230 Приложения 5 = '") +
		НСтр("ru = 'стр.290 Приложения 5 отчета за предыдущий налоговый период по соответствующему ';
			|en = 'стр.290 Приложения 5 отчета за предыдущий налоговый период по соответствующему '") +
		НСтр("ru = 'номеру извещения в стр.010 Приложения 5 ';
			|en = 'номеру извещения в стр.010 Приложения 5 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по извещению %3';
													|en = '%1 = %2 по извещению %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.230 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.230 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.230 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.230 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М123003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М129003_");
	
	ПроверкаКС_09_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.17';
													|en = '09.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.240 Приложения 5 = ';
													|en = 'Объем этилового спирта в стр.240 Приложения 5 = '") +
		НСтр("ru = 'стр.300 Приложения 5 отчета за предыдущий налоговый период по соответствующему ';
			|en = 'стр.300 Приложения 5 отчета за предыдущий налоговый период по соответствующему '") +
		НСтр("ru = 'номеру извещения в стр.010 Приложения 5 ';
			|en = 'номеру извещения в стр.010 Приложения 5 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по извещению %3';
													|en = '%1 = %2 по извещению %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.240 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.240 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.240 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.240 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М124003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М130003_");
	
	ПроверкаКС_09_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.18';
													|en = '09.18'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.250 Приложения 5 = ';
													|en = 'Сумма акциза в стр.250 Приложения 5 = '") +
		НСтр("ru = 'стр.310 Приложения 5 отчета за предыдущий налоговый период по соответствующему ';
			|en = 'стр.310 Приложения 5 отчета за предыдущий налоговый период по соответствующему '") +
		НСтр("ru = 'номеру извещения в стр.010 Приложения 5 ';
			|en = 'номеру извещения в стр.010 Приложения 5 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по извещению %3';
													|en = '%1 = %2 по извещению %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.250 Приложения 5';
			|en = 'Возможно ошибочная сумма акциза в стр.250 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.250 Приложения 5';
													|en = 'Уточните сумму акциза в стр.250 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М125003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М131003_");
	
	ПроверкаКС_09_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_19()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.19';
													|en = '09.19'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.260 Приложения 5 = ';
													|en = 'Остаток этилового спирта в стр.260 Приложения 5 = '") +
		НСтр("ru = 'стр.320 Приложения 5 отчета за предыдущий налоговый период по соответствующему ';
			|en = 'стр.320 Приложения 5 отчета за предыдущий налоговый период по соответствующему '") +
		НСтр("ru = 'номеру извещения в стр.010 Приложения 5 ';
			|en = 'номеру извещения в стр.010 Приложения 5 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по извещению %3';
													|en = '%1 = %2 по извещению %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.260 Приложения 5';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.260 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.260 Приложения 5';
													|en = 'Уточните остаток этилового спирта в стр.260 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М126003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М132003_");
	
	ПроверкаКС_09_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.20';
													|en = '09.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в сумме стр.270 Приложения 5 = гр.2 подраздела 2.3 ';
			|en = 'Объем этилового спирта в сумме стр.270 Приложения 5 = гр.2 подраздела 2.3 '") +
		НСтр("ru = 'Раздела 2 по коду показателя 30003 в гр.1 подраздела 2.3 Раздела 2';
			|en = 'Раздела 2 по коду показателя 30003 в гр.1 подраздела 2.3 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.270 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.270 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем этилового спирта в стр.270 Приложения 5';
													|en = 'Уточните объем этилового спирта в стр.270 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("МассивКодовР2", СтрРазделить(
		"30003", ","));
	
	ИменаПоказателей = Новый Структура; 
	ИменаПоказателей.Вставить("П05С001"		, "П00105М127003_");
	ИменаПоказателей.Вставить("Р23Г001"		, "П00023М100001_");
	ИменаПоказателей.Вставить("Р23Г002"		, "П00023М100002_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ЗарегистрироватьПроверку();

	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
			ЗаполнитьИРасшифроватьПоказатель(Показатели.П05С001, СтраницаРаздела, Счетчик); 
		КонецЦикла;
	КонецЦикла;
	
	Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00023М1 Цикл
			ЗаполнитьПоказатель(Показатели.Р23Г001, СтраницаРаздела, Счетчик);
			Если НЕ НастройкиКС.МассивКодовР2.Найти(Показатели.Р23Г001.Значение) = Неопределено Тогда
				РасшифроватьПоказатель(Показатели.Р23Г001);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.Р23Г002, СтраницаРаздела, Счетчик);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П05С001.Итог) 
		И НЕ Показатели.П05С001.Итог = Показатели.Р23Г002.Итог;
	НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
		Показатели.П05С001.Итог, Показатели.Р23Г002.Итог);
	ДополнитьТаблицуРезультата();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.21';
													|en = '09.21'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.280 Приложения 5 = стр.270 ';
													|en = 'Сумма авансового платежа в стр.280 Приложения 5 = стр.270 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.280 Приложения 5';
													|en = 'Возможно ошибочное значение стр.280 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.280 Приложения 5';
													|en = 'Уточните сумму авансового платежа в стр.280 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М128003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М127003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.22';
													|en = '09.22'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.290 Приложения 5 >= 0';
													|en = 'Объем этилового спирта в стр.290 Приложения 5 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.290 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.290 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем этилового спирта в стр.290 Приложения 5 >= 0';
			|en = 'Укажите объем этилового спирта в стр.290 Приложения 5 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00105М129003_");
	ПроверкаКС_09_22_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_22_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
			НастройкиКС.ЭтоОшибка = Показатели.П05С001.Значение < 0;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П05С001.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.23';
													|en = '09.23'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.300 Приложения 5 = стр.(301 + 302 + 303) Приложения 5';
			|en = 'Объем этилового спирта в стр.300 Приложения 5 = стр.(301 + 302 + 303) Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5)';
													|en = '%1 = %2 (%3 + %4 + %5)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.300 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.300 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните объем этилового спирта в стр.300 Приложения 5';
			|en = 'Уточните объем этилового спирта в стр.300 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИндексСтроки"		, "0");
	ПроверкаКС_09_23_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_23_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, "П00105М13" + НастройкиКС.ИндексСтроки + "003_");
	ИменаПоказателей.Вставить("П05С002"		, "П00105М13" + НастройкиКС.ИндексСтроки + "103_");
	ИменаПоказателей.Вставить("П05С003"		, "П00105М13" + НастройкиКС.ИндексСтроки + "203_");
	ИменаПоказателей.Вставить("П05С004"		, "П00105М13" + НастройкиКС.ИндексСтроки + "303_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
			РасчетнаяСумма = Показатели.П05С002.Значение + Показатели.П05С003.Значение + Показатели.П05С004.Значение;
			НастройкиКС.ЭтоОшибка = НЕ Показатели.П05С001.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П05С001.Значение, РасчетнаяСумма, Показатели.П05С002.Значение, Показатели.П05С003.Значение, 
				Показатели.П05С004.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.24';
													|en = '09.24'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.310 Приложения 5 = стр.(311 + 312 + 313) Приложения 5';
			|en = 'Объем этилового спирта в стр.310 Приложения 5 = стр.(311 + 312 + 313) Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5)';
													|en = '%1 = %2 (%3 + %4 + %5)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем этилового спирта в стр.310 Приложения 5';
			|en = 'Возможно ошибочный объем этилового спирта в стр.310 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните объем этилового спирта в стр.310 Приложения 5';
			|en = 'Уточните объем этилового спирта в стр.310 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИндексСтроки"		, "1");
	ПроверкаКС_09_23_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.25';
													|en = '09.25'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.311 Приложения 5 = стр.301 ';
													|en = 'Сумма акциза в стр.311 Приложения 5 = стр.301 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.311 Приложения 5';
													|en = 'Возможно ошибочное значение стр.311 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.311 Приложения 5';
													|en = 'Уточните сумму акциза в стр.311 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М131103_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М130103_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_26()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.26';
													|en = '09.26'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.312 Приложения 5 = стр.302 ';
													|en = 'Сумма акциза в стр.312 Приложения 5 = стр.302 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.312 Приложения 5';
													|en = 'Возможно ошибочное значение стр.312 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.312 Приложения 5';
													|en = 'Уточните сумму акциза в стр.312 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М131203_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М130203_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.27';
													|en = '09.27'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.313 Приложения 5 = стр.303 ';
													|en = 'Сумма акциза в стр.313 Приложения 5 = стр.303 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.313 Приложения 5';
													|en = 'Возможно ошибочное значение стр.313 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.313 Приложения 5';
													|en = 'Уточните сумму акциза в стр.313 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М131303_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М130303_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.28';
													|en = '09.28'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Остаток этилового спирта в стр.320 Приложения 5 = стр.(200 - (210 + 230 + 240 + 270 + 290 + 300)) ';
			|en = 'Остаток этилового спирта в стр.320 Приложения 5 = стр.(200 - (210 + 230 + 240 + 270 + 290 + 300)) '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - (%4 + %5 + %6 + %7 + %8 + %9))';
													|en = '%1 = %2 (%3 - (%4 + %5 + %6 + %7 + %8 + %9))'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.320 Приложения 5';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.320 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните остаток этилового спирта в стр.320 Приложения 5';
			|en = 'Уточните остаток этилового спирта в стр.320 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П05С001"		, "П00105М132003_");
	ИменаПоказателей.Вставить("П05С002"		, "П00105М120003_");
	ИменаПоказателей.Вставить("П05С003"		, "П00105М121003_");
	ИменаПоказателей.Вставить("П05С004"		, "П00105М123003_");
	ИменаПоказателей.Вставить("П05С005"		, "П00105М124003_");
	ИменаПоказателей.Вставить("П05С006"		, "П00105М127003_");
	ИменаПоказателей.Вставить("П05С007"		, "П00105М129003_");
	ИменаПоказателей.Вставить("П05С008"		, "П00105М130003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение5 Цикл
		Для Счетчик = 1 По СтраницаРаздела.КолвоСтрокП00105М1 Цикл
		
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела, Счетчик);
			
			РасчетнаяСумма = Показатели.П05С002.Значение - Показатели.П05С003.Значение - Показатели.П05С004.Значение - 
				Показатели.П05С005.Значение - Показатели.П05С006.Значение - Показатели.П05С007.Значение -
                Показатели.П05С008.Значение;

			НастройкиКС.ЭтоОшибка = НЕ Показатели.П05С001.Значение = РасчетнаяСумма;
			НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
				Показатели.П05С001.Значение, РасчетнаяСумма, Показатели.П05С002.Значение, Показатели.П05С003.Значение, 
				Показатели.П05С004.Значение, Показатели.П05С005.Значение, Показатели.П05С006.Значение
				, Показатели.П05С007.Значение, Показатели.П05С008.Значение);
			НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
				СтраницаРаздела.НомерСтраницы, Счетчик);
			ДополнитьТаблицуРезультата();
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_09_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '09.29';
													|en = '09.29'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.330 Приложения 5 = стр.320 ';
													|en = 'Сумма авансового платежа в стр.330 Приложения 5 = стр.320 '") + 
		НСтр("ru = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 ';
			|en = 'Приложения 5 х ставку акциза, действующую для кода подакцизного товара в стр.190 '") +
		НСтр("ru = 'Приложения 5';
			|en = 'Приложения 5'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.330 Приложения 5';
													|en = 'Возможно ошибочное значение стр.330 Приложения 5'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.330 Приложения 5';
													|en = 'Уточните сумму авансового платежа в стр.330 Приложения 5'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 5, группа строк %2';
													|en = 'Страница %1 Приложения 5, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00105М133003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00105М132003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00105М119003_");
	
	ПроверкаКС_09_15_код();
	
КонецПроцедуры

#КонецОбласти

#Область Приложение_6

&НаСервере
Процедура ПроверкаКС_10_01()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.01';
													|en = '10.01'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Признак банковской гарантии в стр.001 Приложения 6 должен соответствовать списку ';
			|en = 'Признак банковской гарантии в стр.001 Приложения 6 должен соответствовать списку '") +
		НСтр("ru = 'допустимых значений';
			|en = 'допустимых значений'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение %1 отсутствует в списке выбора';
													|en = 'Значение %1 отсутствует в списке выбора'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение признака банковской гарантии';
													|en = 'Возможно ошибочное значение признака банковской гарантии'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Выберите признак банковской гарантии в стр.001 Приложения 6 из списка выбора';
			|en = 'Выберите признак банковской гарантии в стр.001 Приложения 6 из списка выбора'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060000103");
	ПроверкаКС_10_01_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_01_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	Список	= ДанныеКС.СоответствиеСписков.Получить(Лев(Показатели.П06С001.ИмяПоказателя, 13));
	
	Если НЕ Список = Неопределено Тогда
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
			
			ЗарегистрироватьПроверку();
			ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
			
			НастройкиКС.ЭтоОшибка = Список.Получить(Показатели.П06С001.Значение) = Неопределено;
			НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П06С001.ЗначениеСтр);
			НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
			ДополнитьТаблицуРезультата(); 
			
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_02()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.02';
													|en = '10.02'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Номер банковской гарантии в стр.010 Приложения 6 должен быть заполнен';
			|en = 'Номер банковской гарантии в стр.010 Приложения 6 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Номер банковской гарантии в стр.010 Приложения 6 не заполнен';
													|en = 'Номер банковской гарантии в стр.010 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните номер банковской гарантии в стр.010 Приложения 6';
													|en = 'Заполните номер банковской гарантии в стр.010 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060001003");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_02_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели.П06С001.Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_03()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.03';
													|en = '10.03'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата выдачи банковской гарантии в стр.015 Приложения 6 <= стр.020 Приложения 6';
			|en = 'Дата выдачи банковской гарантии в стр.015 Приложения 6 <= стр.020 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата выдачи банковской гарантии в стр.015 Приложения 6';
			|en = 'Возможно ошибочная дата выдачи банковской гарантии в стр.015 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните дату выдачи банковской гарантии в стр.015 Приложения 6';
													|en = 'Уточните дату выдачи банковской гарантии в стр.015 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001060001503");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001060002003");
	
	ПроверкаКС_10_03_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_03_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П06С002"		, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = Показатели.П06С001.Значение > Показатели.П06С002.Значение;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П06С001.ЗначениеСтр, Показатели.П06С002.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_04()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.04';
													|en = '10.04'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата начала действия банковской гарантии в стр.020 Приложения 2 >= стр.015 Приложения 2';
			|en = 'Дата начала действия банковской гарантии в стр.020 Приложения 2 >= стр.015 Приложения 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%2 >= %1';
													|en = '%2 >= %1'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата начала действия банковской гарантии в стр.020 Приложения 6';
			|en = 'Возможно ошибочная дата начала действия банковской гарантии в стр.020 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните дату начала действия банковской гарантии в стр.020 Приложения 6';
			|en = 'Уточните дату начала действия банковской гарантии в стр.020 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001060001503");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001060002003");
	
	ПроверкаКС_10_03_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_05()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.05';
													|en = '10.05'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата окончания действия банковской гарантии в стр.030 Приложения 6 > стр.(015, 020) Приложения 6';
			|en = 'Дата окончания действия банковской гарантии в стр.030 Приложения 6 > стр.(015, 020) Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > %2, %3';
													|en = '%1 > %2, %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная дата окончания действия банковской гарантии в стр.030 Приложения 6';
			|en = 'Возможно ошибочная дата окончания действия банковской гарантии в стр.030 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните дату окончания действия банковской гарантии в стр.030 Приложения 6';
			|en = 'Уточните дату окончания действия банковской гарантии в стр.030 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, "П001060003003");
	ИменаПоказателей.Вставить("П06С002"		, "П001060001503");
	ИменаПоказателей.Вставить("П06С003"		, "П001060002003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ (Показатели.П06С001.Значение 
			> Показатели.П06С002.Значение И Показатели.П06С001.Значение > Показатели.П06С003.Значение);
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П06С001.ЗначениеСтр, Показатели.П06С002.ЗначениеСтр, Показатели.П06С003.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_06()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.06';
													|en = '10.06'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма банковской гарантии в стр.040 Приложения 6 > 0';
													|en = 'Сумма банковской гарантии в стр.040 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.040 Приложения 6';
													|en = 'Возможно ошибочное значение стр.040 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительную сумму банковской гарантии в стр.040 Приложения 6';
			|en = 'Укажите положительную сумму банковской гарантии в стр.040 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060004003");
	ПроверкаКС_10_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_06_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ Показатели.П06С001.Значение > 0;
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П06С001.Значение);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_07()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.07';
													|en = '10.07'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Регистрационный номер в стр.050 Приложения 6 должен быть заполнен';
			|en = 'Регистрационный номер в стр.050 Приложения 6 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Регистрационный номер в стр.050 Приложения 6 не заполнен';
													|en = 'Регистрационный номер в стр.050 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните регистрационный номер в стр.050 Приложения 6';
													|en = 'Заполните регистрационный номер в стр.050 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060005003");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_08()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.08';
													|en = '10.08'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата извещения в стр.060 Приложения 6 должна быть заполнена';
			|en = 'Дата извещения в стр.060 Приложения 6 должна быть заполнена'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Дата извещения в стр.060 Приложения 6 не заполнена';
													|en = 'Дата извещения в стр.060 Приложения 6 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните дату извещения в стр.060 Приложения 6';
													|en = 'Заполните дату извещения в стр.060 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060006003");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_09()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.09';
													|en = '10.09'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'ИНН организации в стр.070 Приложения 6 должен быть заполнен';
			|en = 'ИНН организации в стр.070 Приложения 6 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ИНН организации в стр.070 Приложения 6 не заполнен';
													|en = 'ИНН организации в стр.070 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните ИНН организации в стр.070 Приложения 6';
													|en = 'Заполните ИНН организации в стр.070 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060007003");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_10()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.10';
													|en = '10.10'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КПП организации в стр.080 Приложения 6 должен быть заполнен';
			|en = 'КПП организации в стр.080 Приложения 6 должен быть заполнен'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КПП организации в стр.080 Приложения 6 не заполнен';
													|en = 'КПП организации в стр.080 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КПП организации в стр.080 Приложения 6';
													|en = 'Заполните КПП организации в стр.080 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060008003");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_11()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.11';
													|en = '10.11'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код этилового спирта в стр.090 Приложения 6 = 111, 121, 140, 150, 160, 166, 170';
			|en = 'Код этилового спирта в стр.090 Приложения 6 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 111, 121, 140, 150, 160, 166, 170';
													|en = '%1 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочный код этилового спирта в стр.090 Приложения 6';
													|en = 'Возможно ошибочный код этилового спирта в стр.090 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код этилового спирта в стр.090 Приложения 6';
													|en = 'Уточните код этилового спирта в стр.090 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060009003");
	НастройкиКС.Вставить("СтрокаКодов"		, "111,121,140,150,160,166,170");
	ПроверкаКС_10_11_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_11_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		НастройкиКС.ЭтоОшибка = СтраницаРаздела.РазделЗаполнен И НЕ КодНайден(Показатели.П06С001.Значение, НастройкиКС.СтрокаКодов);
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П06С001.ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_12()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.12';
													|en = '10.12'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.100 Приложения 6 > 0';
													|en = 'Объем этилового спирта в стр.100 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.100 Приложения 6';
													|en = 'Возможно ошибочное значение стр.100 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительный объем этилового спирта в стр.100 Приложения 6';
			|en = 'Укажите положительный объем этилового спирта в стр.100 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060010003");
	ПроверкаКС_10_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_13()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.13';
													|en = '10.13'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.110 Приложения 6 > 0';
													|en = 'Сумма авансового платежа в стр.110 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.110 Приложения 6';
													|en = 'Возможно ошибочное значение стр.110 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительную сумму авансового платежа в стр.110 Приложения 6';
			|en = 'Укажите положительную сумму авансового платежа в стр.110 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060011003");
	ПроверкаКС_10_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_14()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.14';
													|en = '10.14'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.110 Приложения 6 = стр.100 ';
													|en = 'Сумма авансового платежа в стр.110 Приложения 6 = стр.100 '") + 
		НСтр("ru = 'Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного ';
			|en = 'Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.090 Приложения 6';
			|en = 'товара в стр.090 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.110 Приложения 6';
													|en = 'Возможно ошибочное значение стр.110 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.110 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.110 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001060011003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001060010003");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П001060009003");
	ПроверкаКС_10_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_14_код() 
	
	Если НЕ НастройкиКС.Свойство("МассивЗамен") Тогда 
		НастройкиКС.Вставить("МассивЗамен");
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П06С002"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П06С003"		, "П001060006003");
	ИменаПоказателей.Вставить("П06С004"		, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗаполнитьПоказатель(Показатели.П06С003, СтраницаРаздела);
		ЗаполнитьПоказатель(Показатели.П06С004, СтраницаРаздела);
		СтавкиАкциза = ПолучитьСтавкиАкциза(Показатели.П06С003.Значение);
		СтавкаАкциза = СтавкиАкциза.Получить(Показатели.П06С004.Значение);
		
		Если СтавкаАкциза = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		ЗарегистрироватьПроверку();
		ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаРаздела);
		
		РасчетнаяСумма = Окр(Показатели.П06С002.Значение * СтавкаАкциза);
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П06С001.Значение = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П06С001.Значение, РасчетнаяСумма, Показатели.П06С002.Значение, СтавкаАкциза);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_15()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.15';
													|en = '10.15'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.120 Приложения 6 > 0';
													|en = 'Объем этилового спирта в стр.120 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.120 Приложения 6';
													|en = 'Возможно ошибочное значение стр.120 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительный объем этилового спирта в стр.120 Приложения 6';
			|en = 'Укажите положительный объем этилового спирта в стр.120 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060012003");
	ПроверкаКС_10_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_16()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.16';
													|en = '10.16'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.130 Приложения 6 > 0';
													|en = 'Сумма авансового платежа в стр.130 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.130 Приложения 6';
													|en = 'Возможно ошибочное значение стр.130 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительную сумму авансового платежа в стр.130 Приложения 6';
			|en = 'Укажите положительную сумму авансового платежа в стр.130 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060013003");
	ПроверкаКС_10_06_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_17()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.17';
													|en = '10.17'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.130 Приложения 6 = стр.120 ';
													|en = 'Сумма авансового платежа в стр.130 Приложения 6 = стр.120 '") + 
		НСтр("ru = 'Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного ';
			|en = 'Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.090 Приложения 6';
			|en = 'товара в стр.090 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.130 Приложения 6';
													|en = 'Возможно ошибочное значение стр.130 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.130 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.130 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001060013003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001060012003");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П001060009003");
	ПроверкаКС_10_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_18()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.18';
													|en = '10.18'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Месяц и год в стр.135 Приложения 6 должны быть заполнены';
			|en = 'Месяц и год в стр.135 Приложения 6 должны быть заполнены'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значения не заполнены';
													|en = 'Значения не заполнены'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Месяц и год в стр.135 Приложения 6 не заполнены';
													|en = 'Месяц и год в стр.135 Приложения 6 не заполнены'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните месяц и год в стр.135 Приложения 6';
													|en = 'Заполните месяц и год в стр.135 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П001060013503");
	ПроверкаКС_10_02_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_19()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.19';
													|en = '10.19'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Регистрационный номер в стр.140 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения ';
			|en = 'Регистрационный номер в стр.140 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения '") +
		НСтр("ru = 'подр.1.1 Приложения 6';
			|en = 'подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Регистрационный номер в стр.140 подр.1.1 Приложения 6 не заполнен';
													|en = 'Регистрационный номер в стр.140 подр.1.1 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните регистрационный номер в стр.140 подр.1.1 Приложения 6';
													|en = 'Заполните регистрационный номер в стр.140 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С140");
	ПроверкаКС_10_19_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_19_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П61С140"		, "П001060014003");
	ИменаПоказателей.Вставить("П61С150"		, "П001060015003");
	ИменаПоказателей.Вставить("П61С160"		, "П001060016003");
	ИменаПоказателей.Вставить("П61С170"		, "П001060017003");
	ИменаПоказателей.Вставить("П61С180"		, "П001060018003");
	ИменаПоказателей.Вставить("П61С190"		, "П001060019003");
	ИменаПоказателей.Вставить("П61С200"		, "П001060020003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьПоказатели(Показатели, СтраницаРаздела); 
		РасшифроватьПоказатель(Показатели[НастройкиКС.Показатель]);
		
		РазделЗаполнен = Ложь;
		Для каждого Показатель Из Показатели Цикл
			Если ЗначениеЗаполнено(Показатель.Значение.Значение) Тогда
				РазделЗаполнен = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		НастройкиКС.ЭтоОшибка = РазделЗаполнен И НЕ ЗначениеЗаполнено(Показатели[НастройкиКС.Показатель].Значение);
		НастройкиКС.Детализация = НастройкиКС.ШаблонДетализации;
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_20()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.20';
													|en = '10.20'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Дата извещения в стр.150 подр.1.1 Приложения 6 должна быть заполнена в случае заполнения ';
			|en = 'Дата извещения в стр.150 подр.1.1 Приложения 6 должна быть заполнена в случае заполнения '") +
		НСтр("ru = 'подр.1.1 Приложения 6';
			|en = 'подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Дата извещения в стр.150 подр.1.1 Приложения 6 не заполнена';
													|en = 'Дата извещения в стр.150 подр.1.1 Приложения 6 не заполнена'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните дату извещения в стр.150 подр.1.1 Приложения 6';
													|en = 'Заполните дату извещения в стр.150 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С150");
	ПроверкаКС_10_19_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_21()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.21';
													|en = '10.21'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'ИНН организации в стр.160 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения ';
			|en = 'ИНН организации в стр.160 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения '") +
		НСтр("ru = 'подр.1.1 Приложения 6';
			|en = 'подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ИНН организации в стр.160 подр.1.1 Приложения 6 не заполнен';
													|en = 'ИНН организации в стр.160 подр.1.1 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните ИНН организации в стр.160 подр.1.1 Приложения 6';
													|en = 'Заполните ИНН организации в стр.160 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С160");
	ПроверкаКС_10_19_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_22()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.22';
													|en = '10.22'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'КПП организации в стр.170 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения ';
			|en = 'КПП организации в стр.170 подр.1.1 Приложения 6 должен быть заполнен в случае заполнения '") +
		НСтр("ru = 'подр.1.1 Приложения 6';
			|en = 'подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = 'Значение не заполнено';
													|en = 'Значение не заполнено'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'КПП организации в стр.170 подр.1.1 Приложения 6 не заполнен';
													|en = 'КПП организации в стр.170 подр.1.1 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните КПП организации в стр.170 подр.1.1 Приложения 6';
													|en = 'Заполните КПП организации в стр.170 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С170");
	ПроверкаКС_10_19_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_23()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.23';
													|en = '10.23'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код этилового спирта в стр.180 подр.1.1 Приложения 6 = 111, 121, 140, 150, 160, 166, 170';
			|en = 'Код этилового спирта в стр.180 подр.1.1 Приложения 6 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 111, 121, 140, 150, 160, 166, 170';
													|en = '%1 = 111, 121, 140, 150, 160, 166, 170'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный код этилового спирта в стр.180 подр.1.1 Приложения 6';
			|en = 'Возможно ошибочный код этилового спирта в стр.180 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код этилового спирта в стр.180 подр.1.1 Приложения 6';
													|en = 'Уточните код этилового спирта в стр.180 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С180");
	НастройкиКС.Вставить("СтрокаКодов"		, "111,121,140,150,160,166,170");
	ПроверкаКС_10_23_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_23_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П61С140"		, "П001060014003");
	ИменаПоказателей.Вставить("П61С150"		, "П001060015003");
	ИменаПоказателей.Вставить("П61С160"		, "П001060016003");
	ИменаПоказателей.Вставить("П61С170"		, "П001060017003");
	ИменаПоказателей.Вставить("П61С180"		, "П001060018003");
	ИменаПоказателей.Вставить("П61С190"		, "П001060019003");
	ИменаПоказателей.Вставить("П61С200"		, "П001060020003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьПоказатели(Показатели, СтраницаРаздела); 
		РасшифроватьПоказатель(Показатели[НастройкиКС.Показатель]);
		
		РазделЗаполнен = Ложь;
		Для каждого Показатель Из Показатели Цикл
			Если ЗначениеЗаполнено(Показатель.Значение.Значение) Тогда
				РазделЗаполнен = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		НастройкиКС.ЭтоОшибка = РазделЗаполнен И НЕ КодНайден(Показатели[НастройкиКС.Показатель].Значение, 
			НастройкиКС.СтрокаКодов);
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", 
			Показатели[НастройкиКС.Показатель].ЗначениеСтр);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_24()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.24';
													|en = '10.24'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем этилового спирта в стр.190 подр.1.1 Приложения 6 > 0 ';
													|en = 'Объем этилового спирта в стр.190 подр.1.1 Приложения 6 > 0 '") +
		НСтр("ru = 'в случае заполнения подр.1.1 Приложения 6';
			|en = 'в случае заполнения подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.190 подр.1.1 Приложения 6';
													|en = 'Возможно ошибочное значение стр.190 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительный объем этилового спирта в стр.190 подр.1.1 Приложения 6';
			|en = 'Укажите положительный объем этилового спирта в стр.190 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С190");
	ПроверкаКС_10_24_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_24_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П61С140"		, "П001060014003");
	ИменаПоказателей.Вставить("П61С150"		, "П001060015003");
	ИменаПоказателей.Вставить("П61С160"		, "П001060016003");
	ИменаПоказателей.Вставить("П61С170"		, "П001060017003");
	ИменаПоказателей.Вставить("П61С180"		, "П001060018003");
	ИменаПоказателей.Вставить("П61С190"		, "П001060019003");
	ИменаПоказателей.Вставить("П61С200"		, "П001060020003");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		
		ЗарегистрироватьПроверку();
		ЗаполнитьПоказатели(Показатели, СтраницаРаздела); 
		РасшифроватьПоказатель(Показатели[НастройкиКС.Показатель]);
		
		РазделЗаполнен = Ложь;
		Для каждого Показатель Из Показатели Цикл
			Если ЗначениеЗаполнено(Показатель.Значение.Значение) Тогда
				РазделЗаполнен = Истина;
				Прервать;
			КонецЕсли; 
		КонецЦикла; 
		
		НастройкиКС.ЭтоОшибка = РазделЗаполнен И НЕ Показатели[НастройкиКС.Показатель].Значение > 0;
		НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", 
			Показатели[НастройкиКС.Показатель].Значение);
		НастройкиКС.ДопСведения = СтрЗаменить(НастройкиКС.ШаблонДопСведений, "%1", СтраницаРаздела.НомерСтраницы);
		ДополнитьТаблицуРезультата(); 
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_25()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.25';
													|en = '10.25'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.200 подр.1.1 Приложения 6 > 0 ';
													|en = 'Сумма авансового платежа в стр.200 подр.1.1 Приложения 6 > 0 '") +
		НСтр("ru = 'в случае заполнения подр.1.1 Приложения 6';
			|en = 'в случае заполнения подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.200 подр.1.1 Приложения 6';
													|en = 'Возможно ошибочное значение стр.200 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите положительную сумму авансового платежа в стр.200 подр.1.1 Приложения 6';
			|en = 'Укажите положительную сумму авансового платежа в стр.200 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("Показатель"		, "П61С200");
	ПроверкаКС_10_24_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_26()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.26';
													|en = '10.26'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.200 подр.1.1 Приложения 6 = стр.190 ';
													|en = 'Сумма авансового платежа в стр.200 подр.1.1 Приложения 6 = стр.190 '") + 
		НСтр("ru = 'подр.1.1 Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного ';
			|en = 'подр.1.1 Приложения 6 х ставку акциза, действующую на дату в стр.060 Приложения 6 для кода подакцизного '") +
		НСтр("ru = 'товара в стр.180 подр.1.1 Приложения 6';
			|en = 'товара в стр.180 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.200 подр.1.1 Приложения 6';
													|en = 'Возможно ошибочное значение стр.200 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.200 подр.1.1 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.200 подр.1.1 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 Приложения 6';
													|en = 'Страница %1 Приложения 6'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П001060020003");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П001060019003");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П001060018003");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П61,П61,П06,П61", ","));
	ПроверкаКС_10_14_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_27()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.27';
													|en = '10.27'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.210 подр.1.2 Приложения 6 = 224, 225, 226, 227, 231, 290';
			|en = 'Код подакцизного товара в стр.210 подр.1.2 Приложения 6 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 224, 225, 226, 227, 231, 290';
													|en = '%1 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный код подакцизного товара в стр.210 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный код подакцизного товара в стр.210 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код подакцизного товара в стр.210 подр.1.2 Приложения 6';
													|en = 'Уточните код подакцизного товара в стр.210 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М121003_");
	НастройкиКС.Вставить("СтрокаКодов"		, "224,225,226,227,231,290");
	ПроверкаКС_10_27_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_27_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = СтраницаПодраздела.РазделЗаполнен И НЕ КодНайден(Показатели.П62С001.Значение, НастройкиКС.СтрокаКодов);
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П62С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_28()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.28';
													|en = '10.28'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Объем этилового спирта в стр.220 подр.1.2 Приложения 6 > 0';
			|en = 'Объем этилового спирта в стр.220 подр.1.2 Приложения 6 > 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 > 0';
													|en = '%1 > 0'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Объем этилового спирта в стр.220 подр.1.2 Приложения 6 не заполнен';
													|en = 'Объем этилового спирта в стр.220 подр.1.2 Приложения 6 не заполнен'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Заполните объем этилового спирта в стр.220 подр.1.2 Приложения 6';
													|en = 'Заполните объем этилового спирта в стр.220 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, "П00106М122003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = СтраницаПодраздела.РазделЗаполнен И НЕ Показатели.П62С001.Значение > 0;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П62С001.Значение); 
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата(); 
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_29()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.29';
													|en = '10.29'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.230 подр.1.2 Приложения 6 = стр.220 ';
													|en = 'Сумма авансового платежа в стр.230 подр.1.2 Приложения 6 = стр.220 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.230 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.230 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.230 подр.1.2 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.230 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М123003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М122003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_29_код()
	
	Если НЕ НастройкиКС.Свойство("МассивЗамен") Тогда 
		НастройкиКС.Вставить("МассивЗамен");
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П62С002"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П62С003"		, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела[НастройкиКС.Подраздел] Цикл
			Для Счетчик = 1 По СтраницаПодраздела["КолвоСтрок" + НастройкиКС.ТабЧасть] Цикл
		
				ЗаполнитьПоказатель(Показатели.П62С003, СтраницаПодраздела, Счетчик);
				СтавкаАкциза = ДанныеКС.СтавкиАкцизов.Получить(Показатели.П62С003.Значение);
				
				Если СтавкаАкциза = Неопределено Тогда
					Продолжить;
				КонецЕсли;
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
		
				РасчетнаяСумма = Окр(Показатели.П62С002.Значение * СтавкаАкциза);
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П62С001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П62С001.Значение, РасчетнаяСумма, Показатели.П62С002.Значение, СтавкаАкциза);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата(); 
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_30()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.30';
													|en = '10.30'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.240 подр.1.2 Приложения 6 >= 0';
													|en = 'Остаток этилового спирта в стр.240 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.240 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.240 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите остаток этилового спирта в стр.240 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите остаток этилового спирта в стр.240 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М124003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_30_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = Показатели.П62С001.Значение < 0;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П62С001.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_31()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.31';
													|en = '10.31'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.240 подр.1.2 Приложения 6 = ';
													|en = 'Остаток этилового спирта в стр.240 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'стр.320 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.320 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 ';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по гарантии %3 и коду %4';
													|en = '%1 = %2 по гарантии %3 и коду %4'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.240 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.240 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.240 подр.1.2 Приложения 6';
													|en = 'Уточните остаток этилового спирта в стр.240 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М124003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М132003_");
	
	ПроверкаКС_10_31_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_31_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, "П001060001003");
	ИменаПоказателей.Вставить("П62С001"		, "П00106М121003_");
	ИменаПоказателей.Вставить("П62С002"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П62С003П"	, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Если НЕ ДанныеКС.ОтчетПНПНайден Тогда 
		Возврат;
	КонецЕсли;
	
	Для каждого Ключ_БГ_ПТ Из ДанныеКС.МассивКодовБГПТ612 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П62С002.Итог 	= 0;
		Показатели.П62С003П.Итог 	= 0;
		РасшифроватьКоды = Истина; 
		КодБГСтр = "";
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						Если РасшифроватьКоды Тогда
							РасшифроватьПоказатель(Показатели.П06С001);
							РасшифроватьПоказатель(Показатели.П62С001);
							РасшифроватьКоды = Ложь; 
							КодБГСтр = Показатели.П06С001.ЗначениеСтр;
							КодПТСтр = Показатели.П62С001.ЗначениеСтр;
						КонецЕсли;
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С002, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	
		Для каждого СтраницаРаздела Из ДанныеКС.ОтчетПНП.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С003П, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П62С003П.Итог) 
			И НЕ Показатели.П62С002.Итог = Показатели.П62С003П.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П62С002.Итог, Показатели.П62С003П.Итог, КодБГСтр, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_32()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.32';
													|en = '10.32'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.250 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.250 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М125003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_33()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.33';
													|en = '10.33'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.250 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2';
			|en = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.250 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.250 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.250 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.250 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М125003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00021М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"10001,10006,10007,10008,10009,10010,10011,10012", ","));
	НастройкиКС.Вставить("МассивЗамен");
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_33_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, НастройкиКС.ПолеКодаПТП6);
	ИменаПоказателей.Вставить("П62С002"		, НастройкиКС.ИмяПоказателяП6);
	ИменаПоказателей.Вставить("Р02С010"		, "П000020001003");
	ИменаПоказателей.Вставить("Р21Г001"		, НастройкиКС.ПолеКодаПТР2);
	ИменаПоказателей.Вставить("Р21Г003"		, НастройкиКС.ИмяПоказателяР2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	
	Для каждого КодПТ Из ДанныеКС[НастройкиКС.МассивКодовПТ] Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П62С002.Итог = 0;
		Показатели.Р21Г003.Итог = 0;
		РасшифроватьКодПТ = Истина;
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
			Для каждого СтраницаПодраздела Из СтраницаРаздела[НастройкиКС.ПодразделП6] Цикл
				Для Счетчик = 1 По СтраницаПодраздела[НастройкиКС.ТабЧастьП6] Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Показатели.П62С001.Значение = КодПТ Тогда
						Если РасшифроватьКодПТ Тогда 
							РасшифроватьПоказатель(Показатели.П62С001);
							РасшифроватьКодПТ = Ложь;
							КодПТСтр = Показатели.П62С001.ЗначениеСтр;
						КонецЕсли;
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С002, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		Для каждого СтраницаРаздела Из ДанныеКС.Раздел2 Цикл
			
			ЗаполнитьПоказатель(Показатели.Р02С010, СтраницаРаздела);
			Если Показатели.Р02С010.Значение = КодПТ Тогда
				Для Счетчик = 1 По СтраницаРаздела[НастройкиКС.ТабЧастьР2] Цикл
					ЗаполнитьПоказатель(Показатели.Р21Г001, СтраницаРаздела, Счетчик);
					Если НЕ НастройкиКС.МассивКодовР2.Найти(Показатели.Р21Г001.Значение) = Неопределено Тогда
						РасшифроватьПоказатель(Показатели.Р21Г001);
						ЗаполнитьИРасшифроватьПоказатель(Показатели.Р21Г003, СтраницаРаздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = НЕ Показатели.П62С002.Итог = Показатели.Р21Г003.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П62С002.Итог, Показатели.Р21Г003.Итог, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_34()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.34';
													|en = '10.34'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.255 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.255 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.255 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.255 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М125503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_35()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.35';
													|en = '10.35'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 = стр.250 ';
													|en = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 = стр.250 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.255 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.255 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.255 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.255 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М125503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М125003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_36()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.36';
													|en = '10.36'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.255 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.1 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.1 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2';
			|en = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.255 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.255 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.255 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.255 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М125503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00021М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"10001,10006,10007,10008,10009,10010,10011,10012", ","));
	НастройкиКС.Вставить("МассивЗамен");
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_37()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.37';
													|en = '10.37'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.260 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.260 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М126003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_38()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.38';
													|en = '10.38'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.260 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.260 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.260 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.260 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.260 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М126003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20003,20005,20006,20007", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_39()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.39';
													|en = '10.39'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.265 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.265 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.265 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.265 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М126503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_40()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.40';
													|en = '10.40'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 = стр.260 ';
													|en = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 = стр.260 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.265 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.265 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.265 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.265 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М126503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М126003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_41()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.41';
													|en = '10.41'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.265 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.265 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.265 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.265 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.265 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М126503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20003,20005,20006,20007", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_42()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.42';
													|en = '10.42'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.266 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.266 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М126603_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_43()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.43';
													|en = '10.43'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.266 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 50001, 50003, 50005 в гр.1 подр.2.5 Раздела 2';
			|en = 'показателя 50001, 50003, 50005 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.266 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.266 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.266 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.266 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М126603_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50001,50003,50005", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р25,Р25", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_44()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.44';
													|en = '10.44'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.267 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.267 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.267 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.267 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М126503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_45()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.45';
													|en = '10.45'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 = стр.266 ';
													|en = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 = стр.266 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.267 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.267 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.267 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.267 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М126703_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М126603_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_46()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.46';
													|en = '10.46'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.267 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 50001, 50003, 50005 в гр.1 подр.2.5 Раздела 2';
			|en = 'показателя 50001, 50003, 50005 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.267 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.267 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.267 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.267 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М126703_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50001,50003,50005", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р25,Р25", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_47()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.47';
													|en = '10.47'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.270 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.270 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М127003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_48()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.48';
													|en = '10.48'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.270 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.270 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.270 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.270 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.270 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М127003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20002,20004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_49()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.49';
													|en = '10.49'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.275 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.275 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.275 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.275 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М127503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_50()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.50';
													|en = '10.50'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 = стр.270 ';
													|en = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 = стр.270 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.275 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.275 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.275 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.275 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М127503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М127003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_51()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.51';
													|en = '10.51'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.275 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.275 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.275 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.275 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.275 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М127503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20002,20004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_52()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.52';
													|en = '10.52'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.276 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.276 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М127603_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_53()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.53';
													|en = '10.53'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.276 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.2 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 50002, 50004 в гр.1 подр.2.5 Раздела 2';
			|en = 'показателя 50002, 50004 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.276 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.276 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.276 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.276 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М127603_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100002_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50002,50004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р25,Р25", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_54()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.54';
													|en = '10.54'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.277 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.277 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.277 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.277 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М127703_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_55()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.55';
													|en = '10.55'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 = стр.276 ';
													|en = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 = стр.276 '") + 
		НСтр("ru = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 ';
			|en = 'подр.1.2 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.210 подр.1.2 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.277 подр.1.2 Приложения 6';
													|en = 'Возможно ошибочное значение стр.277 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.277 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.277 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М127703_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М127603_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М121003_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М1");
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_56()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.56';
													|en = '10.56'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.277 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.5 Раздела 2 по коду подакцизного товара в стр.210 подр.1.2 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 50002, 50004 в гр.1 подр.2.5 Раздела 2';
			|en = 'показателя 50002, 50004 в гр.1 подр.2.5 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.277 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.277 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.277 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.277 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М121003_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М127703_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ612");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение61");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М1");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00025М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00025М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00025М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"50002,50004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П62,П62,Р02,Р25,Р25", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_57()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.57';
													|en = '10.57'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.280 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.280 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'стр.250 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.250 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 ';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по гарантии %3 и коду %4';
													|en = '%1 = %2 по гарантии %3 и коду %4'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.280 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.280 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.280 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.280 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М128003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М125003_");
	
	ПроверкаКС_10_31_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_58()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.58';
													|en = '10.58'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.285 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.285 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'стр.255 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.255 подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 ';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по гарантии %3 и коду %4';
													|en = '%1 = %2 по гарантии %3 и коду %4'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.285 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.285 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.285 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.285 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М128503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М125503_");
	
	ПроверкаКС_10_31_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_59()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.59';
													|en = '10.59'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.290 подр.1.2 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.290 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'стр.(260 + 270) подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.(260 + 270) подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 ';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4) по гарантии %5 и коду %6';
													|en = '%1 = %2 (%3 + %4) по гарантии %5 и коду %6'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.290 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.290 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.290 подр.1.2 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.290 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М129003_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М126003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М127003_");
	
	ПроверкаКС_10_59_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_59_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, "П001060001003");
	ИменаПоказателей.Вставить("П62С001"		, "П00106М121003_");
	ИменаПоказателей.Вставить("П62С002"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П62С003П"	, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П62С004П"	, НастройкиКС.ИмяПоказателя3);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Если НЕ ДанныеКС.ОтчетПНПНайден Тогда 
		Возврат;
	КонецЕсли;
	
	Для каждого Ключ_БГ_ПТ Из ДанныеКС.МассивКодовБГПТ612 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П62С002.Итог 	= 0;
		Показатели.П62С003П.Итог 	= 0;
		Показатели.П62С004П.Итог 	= 0;
		РасшифроватьКоды = Истина; 
		КодБГСтр = "";
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						Если РасшифроватьКоды Тогда
							РасшифроватьПоказатель(Показатели.П06С001);
							РасшифроватьПоказатель(Показатели.П62С001);
							РасшифроватьКоды = Ложь; 
							КодБГСтр = Показатели.П06С001.ЗначениеСтр;
							КодПТСтр = Показатели.П62С001.ЗначениеСтр;
						КонецЕсли;
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С002, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	
		Для каждого СтраницаРаздела Из ДанныеКС.ОтчетПНП.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С003П, СтраницаПодраздела, Счетчик);
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С004П, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		РасчетнаяСумма = Показатели.П62С003П.Итог + Показатели.П62С004П.Итог;
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(РасчетнаяСумма) И НЕ Показатели.П62С002.Итог = РасчетнаяСумма;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П62С002.Итог, РасчетнаяСумма, Показатели.П62С003П.Итог, Показатели.П62С004П.Итог, КодБГСтр, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_60()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.60';
													|en = '10.60'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.295 подр.1.2 Приложения 6 = ';
													|en = 'Сумма акциза в стр.295 подр.1.2 Приложения 6 = '") +
		НСтр("ru = 'стр.(265 + 275) подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.(265 + 275) подр.1.2 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 ';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6 '"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4) по гарантии %5 и коду %6';
													|en = '%1 = %2 (%3 + %4) по гарантии %5 и коду %6'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.295 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.295 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.295 подр.1.2 Приложения 6';
													|en = 'Уточните сумму акциза в стр.295 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М129503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М126503_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М127503_");
	
	ПроверкаКС_10_59_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_61()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.61';
													|en = '10.61'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем фактических потерь в стр.300 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем фактических потерь в стр.300 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем фактических потерь в стр.300 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем фактических потерь в стр.300 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем фактических потерь в стр.300 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем фактических потерь в стр.300 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М130003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_62()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.62';
													|en = '10.62'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.305 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма авансового платежа в стр.305 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.305 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.305 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму авансового платежа в стр.305 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму авансового платежа в стр.305 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М130503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_63()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.63';
													|en = '10.63'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем фактических потерь в стр.310 подр.1.2 Приложения 6 >= 0';
													|en = 'Объем фактических потерь в стр.310 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем фактических потерь в стр.310 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный объем фактических потерь в стр.310 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем фактических потерь в стр.310 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите объем фактических потерь в стр.310 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М131003_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_64()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.64';
													|en = '10.64'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.315 подр.1.2 Приложения 6 >= 0';
													|en = 'Сумма авансового платежа в стр.315 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.315 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.315 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму авансового платежа в стр.315 подр.1.2 Приложения 6 >= 0';
			|en = 'Укажите сумму авансового платежа в стр.315 подр.1.2 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М131503_");
	ПроверкаКС_10_30_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_65()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.65';
													|en = '10.65'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Остаток этилового спирта в стр.320 подр.1.2 Приложения 6 = стр.(220 - 250 - 260 - 270 - 280 - 290 ';
			|en = 'Остаток этилового спирта в стр.320 подр.1.2 Приложения 6 = стр.(220 - 250 - 260 - 270 - 280 - 290 '") +
		НСтр("ru = '- 300 - 310) подр.1.2 Приложения 6';
			|en = '- 300 - 310) подр.1.2 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3)';
													|en = '%1 = %2 (%3)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.320 подр.1.2 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.320 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.320 подр.1.2 Приложения 6';
													|en = 'Уточните остаток этилового спирта в стр.320 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.2 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.2 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П62С001"		, "П00106М132003_");
	ИменаПоказателей.Вставить("П62С002"		, "П00106М122003_");
	ИменаПоказателей.Вставить("П62С003"		, "П00106М125003_");
	ИменаПоказателей.Вставить("П62С004"		, "П00106М126003_");
	ИменаПоказателей.Вставить("П62С005"		, "П00106М127003_");
	ИменаПоказателей.Вставить("П62С006"		, "П00106М128003_");
	ИменаПоказателей.Вставить("П62С007"		, "П00106М129003_");
	ИменаПоказателей.Вставить("П62С008"		, "П00106М130003_");
	ИменаПоказателей.Вставить("П62С009"		, "П00106М131003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	ШаблонДетализации2 = НСтр("ru = '%1 - %2 - %3 - %4 - %5 - %6 - %7 - %8';
								|en = '%1 - %2 - %3 - %4 - %5 - %6 - %7 - %8'");
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				РасчетнаяСумма = Показатели.П62С002.Значение - Показатели.П62С003.Значение - Показатели.П62С004.Значение - 
					Показатели.П62С005.Значение - Показатели.П62С006.Значение - Показатели.П62С007.Значение - 
					Показатели.П62С008.Значение - Показатели.П62С009.Значение; 
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П62С001.Значение = РасчетнаяСумма;
				Детализация2 = СтрШаблон(ШаблонДетализации2,
					Показатели.П62С002.Значение, Показатели.П62С003.Значение, Показатели.П62С004.Значение,
					Показатели.П62С005.Значение, Показатели.П62С006.Значение, Показатели.П62С007.Значение,
					Показатели.П62С008.Значение, Показатели.П62С009.Значение);
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П62С001.Значение, РасчетнаяСумма, Детализация2); 
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата(); 
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_66()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.66';
													|en = '10.66'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.325 подр.1.3 Приложения 6 = 224, 225, 226, 227, 231, 290';
			|en = 'Код подакцизного товара в стр.325 подр.1.3 Приложения 6 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 224, 225, 226, 227, 231, 290';
													|en = '%1 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный код подакцизного товара в стр.325 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочный код подакцизного товара в стр.325 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код подакцизного товара в стр.325 подр.1.3 Приложения 6';
													|en = 'Уточните код подакцизного товара в стр.325 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М232503_");
	НастройкиКС.Вставить("СтрокаКодов"		, "224,225,226,227,231,290");
	ПроверкаКС_10_66_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_66_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П63С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М2 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = СтраницаПодраздела.РазделЗаполнен И НЕ КодНайден(Показатели.П63С001.Значение, НастройкиКС.СтрокаКодов);
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П63С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_67()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.67';
													|en = '10.67'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.330 подр.1.3 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.330 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.330 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.330 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.330 подр.1.3 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.330 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М233003_");
	ПроверкаКС_10_67_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_67_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П63С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М2 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = Показатели.П63С001.Значение < 0;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П63С001.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_68()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.68';
													|en = '10.68'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.340 подр.1.3 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.340 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.340 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.340 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.340 подр.1.3 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.340 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М234003_");
	ПроверкаКС_10_67_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_69()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.69';
													|en = '10.69'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.350 подр.1.3 Приложения 6 >= 0';
													|en = 'Сумма акциза в стр.350 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.350 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.350 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму акциза в стр.350 подр.1.3 Приложения 6 >= 0';
			|en = 'Укажите сумму акциза в стр.350 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М235003_");
	ПроверкаКС_10_67_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_70()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.70';
													|en = '10.70'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.360 подр.1.3 Приложения 6 >= 0';
													|en = 'Сумма авансового платежа в стр.360 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.360 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.360 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму авансового платежа в стр.360 подр.1.3 Приложения 6 >= 0';
			|en = 'Укажите сумму авансового платежа в стр.360 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М236003_");
	ПроверкаКС_10_67_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_71()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.71';
													|en = '10.71'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.360 подр.1.3 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.360 подр.1.3 Приложения 6 = '") +
		НСтр("ru = 'стр.305 подр.1.2 Приложения 6 по соответствующему коду подакцизного товара';
			|en = 'стр.305 подр.1.2 Приложения 6 по соответствующему коду подакцизного товара'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.360 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.360 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните сумму авансового платежа в стр.360 подр.1.3 Приложения 6';
			|en = 'Уточните сумму авансового платежа в стр.360 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М236003_"); 
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М130503_"); 
	ПроверкаКС_10_71_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_71_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П63С001"		, "П00106М232503_");
	ИменаПоказателей.Вставить("П63С002"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П62С003"		, НастройкиКС.ИмяПоказателя2);
	ИменаПоказателей.Вставить("П62С004"		, "П00106М121003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М2 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С001, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С002, СтраницаПодраздела, Счетчик);
				Показатели.П62С003.Итог = 0; 
				
				Для Счетчик2 = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					ЗаполнитьПоказатель(Показатели.П62С004, СтраницаПодраздела, Счетчик2);
					Если Показатели.П62С004.Значение = Показатели.П63С001.Значение Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С003, СтраницаПодраздела, Счетчик2);
					КонецЕсли;
				КонецЦикла;

				НастройкиКС.ЭтоОшибка = НЕ Показатели.П63С002.Значение = Показатели.П62С003.Итог;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П63С002.Значение, Показатели.П62С003.Итог, Показатели.П63С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_72()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.72';
													|en = '10.72'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.370 подр.1.3 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.370 подр.1.3 Приложения 6 = '") +
		НСтр("ru = 'стр.(230 - 330 - 340 - 360) Приложения 6 по соответствующему коду подакцизного товара';
			|en = 'стр.(230 - 330 - 340 - 360) Приложения 6 по соответствующему коду подакцизного товара'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4 - %5 - %6) по коду %7';
													|en = '%1 = %2 (%3 - %4 - %5 - %6) по коду %7'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.370 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.370 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните сумму авансового платежа в стр.370 подр.1.3 Приложения 6';
			|en = 'Уточните сумму авансового платежа в стр.370 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П63С001"		, "П00106М232503_");
	ИменаПоказателей.Вставить("П63С002"		, "П00106М237003_");
	ИменаПоказателей.Вставить("П63С003"		, "П00106М233003_");
	ИменаПоказателей.Вставить("П63С004"		, "П00106М234003_");
	ИменаПоказателей.Вставить("П63С005"		, "П00106М236003_");
	ИменаПоказателей.Вставить("П62С006"		, "П00106М123003_");
	ИменаПоказателей.Вставить("П62С007"		, "П00106М121003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение61 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М2 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С001, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С002, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С003, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С004, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С005, СтраницаПодраздела, Счетчик);
				Показатели.П62С006.Итог = 0; 
				
				Для Счетчик2 = 1 По СтраницаПодраздела.КолвоСтрокП00106М1 Цикл
					ЗаполнитьПоказатель(Показатели.П62С007, СтраницаПодраздела, Счетчик2);
					Если Показатели.П62С007.Значение = Показатели.П63С001.Значение Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С006, СтраницаПодраздела, Счетчик2);
					КонецЕсли;
				КонецЦикла;
				
				РасчетнаяСумма = Показатели.П62С006.Итог - Показатели.П63С003.Значение - Показатели.П63С004.Значение - 
					Показатели.П63С005.Значение; 
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П63С002.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П63С002.Значение, РасчетнаяСумма, Показатели.П62С006.Итог, Показатели.П63С003.Значение, 
					Показатели.П63С004.Значение, Показатели.П63С005.Значение, Показатели.П63С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_73()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.73';
													|en = '10.73'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.380 подр.1.3 Приложения 6 >= 0';
													|en = 'Остаток этилового спирта в стр.380 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.380 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.380 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите остаток этилового спирта в стр.380 подр.1.3 Приложения 6 >= 0';
			|en = 'Укажите остаток этилового спирта в стр.380 подр.1.3 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М238003_");
	ПроверкаКС_10_67_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_74()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.74';
													|en = '10.74'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.380 подр.1.3 Приложения 6 = ';
													|en = 'Остаток этилового спирта в стр.380 подр.1.3 Приложения 6 = '") +
		НСтр("ru = 'стр.320 подр.1.2 Приложения 6 по соответствующему коду подакцизного товара';
			|en = 'стр.320 подр.1.2 Приложения 6 по соответствующему коду подакцизного товара'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.380 подр.1.3 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.380 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните остаток этилового спирта в стр.380 подр.1.3 Приложения 6';
			|en = 'Уточните остаток этилового спирта в стр.380 подр.1.3 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.3 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.3 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М238003_"); 
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М132003_"); 
	ПроверкаКС_10_71_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_75()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.75';
													|en = '10.75'"));
	Заголовки.Вставить("Описание"			, 
		НСтр("ru = 'Код подакцизного товара в стр.385 подр.1.4 Приложения 6 = 224, 225, 226, 227, 231, 290';
			|en = 'Код подакцизного товара в стр.385 подр.1.4 Приложения 6 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = 224, 225, 226, 227, 231, 290';
													|en = '%1 = 224, 225, 226, 227, 231, 290'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный код подакцизного товара в стр.385 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный код подакцизного товара в стр.385 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните код подакцизного товара в стр.385 подр.1.4 Приложения 6';
													|en = 'Уточните код подакцизного товара в стр.385 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М338503_");
	НастройкиКС.Вставить("СтрокаКодов"		, "224,225,226,227,231,290");
	ПроверкаКС_10_75_код();
		
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_75_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = СтраницаПодраздела.РазделЗаполнен И НЕ КодНайден(Показатели.П64С001.Значение, НастройкиКС.СтрокаКодов);
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П64С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_76()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.76';
													|en = '10.76'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.390 подр.1.4 Приложения 6 >= 0';
													|en = 'Сумма авансового платежа в стр.390 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.390 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.390 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму авансового платежа в стр.390 подр.1.4 Приложения 6 >= 0';
			|en = 'Укажите сумму авансового платежа в стр.390 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М339003_");
	ПроверкаКС_10_76_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_76_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, НастройкиКС.ИмяПоказателя);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				НастройкиКС.ЭтоОшибка = Показатели.П64С001.Значение < 0;
				НастройкиКС.Детализация = СтрЗаменить(НастройкиКС.ШаблонДетализации, "%1", Показатели.П64С001.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_77()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.77';
													|en = '10.77'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.390 подр.1.4 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.390 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'стр.370 подр.1.3 Приложения 6 по соответствующему коду подакцизного товара';
			|en = 'стр.370 подр.1.3 Приложения 6 по соответствующему коду подакцизного товара'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.390 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.390 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Уточните сумму авансового платежа в стр.390 подр.1.4 Приложения 6';
			|en = 'Уточните сумму авансового платежа в стр.390 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, "П00106М338503_");
	ИменаПоказателей.Вставить("П64С002"		, "П00106М339003_");
	ИменаПоказателей.Вставить("П63С003"		, "П00106М237003_");
	ИменаПоказателей.Вставить("П63С004"		, "П00106М232503_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П64С001, СтраницаПодраздела, Счетчик);
				ЗаполнитьИРасшифроватьПоказатель(Показатели.П64С002, СтраницаПодраздела, Счетчик);
				Показатели.П63С003.Итог = 0; 
				
				Для каждого СтраницаПодраздела2 Из СтраницаРаздела.Приложение61 Цикл
					Для Счетчик2 = 1 По СтраницаПодраздела2.КолвоСтрокП00106М2 Цикл
						ЗаполнитьПоказатель(Показатели.П63С004, СтраницаПодраздела2, Счетчик2);
						Если Показатели.П63С004.Значение = Показатели.П64С001.Значение Тогда
							ЗаполнитьИРасшифроватьПоказатель(Показатели.П63С003, СтраницаПодраздела2, Счетчик2);
						КонецЕсли;
					КонецЦикла;
				КонецЦикла;

				НастройкиКС.ЭтоОшибка = НЕ Показатели.П64С002.Значение = Показатели.П63С003.Итог;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П64С002.Значение, Показатели.П63С003.Итог, Показатели.П64С001.ЗначениеСтр);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_78()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.78';
													|en = '10.78'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.400 подр.1.4 Приложения 6 >= 0';
													|en = 'Сумма авансового платежа в стр.400 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.400 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.400 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите сумму авансового платежа в стр.400 подр.1.4 Приложения 6 >= 0';
			|en = 'Укажите сумму авансового платежа в стр.400 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М340003_");
	ПроверкаКС_10_76_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_79()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.79';
													|en = '10.79'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.405 подр.1.4 Приложения 6 = ';
													|en = 'Остаток этилового спирта в стр.405 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'стр.490 подр.1.4 Приложения 6 отчета за предыдущий налоговый период по соответствующим ';
			|en = 'стр.490 подр.1.4 Приложения 6 отчета за предыдущий налоговый период по соответствующим '") +
		НСтр("ru = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6';
			|en = 'банковской гарантии и коду подакцизного товара в стр.210 подр.1.2 Приложения 6'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по гарантии %3 и коду %4';
													|en = '%1 = %2 по гарантии %3 и коду %4'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.405 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.405 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.405 подр.1.4 Приложения 6';
													|en = 'Уточните остаток этилового спирта в стр.405 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М340503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М349003_");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П06,П64,П64,П64", ","));
	
	ПроверкаКС_10_79_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_79_код()
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П06С001"		, "П001060001003");
	ИменаПоказателей.Вставить("П62С001"		, "П00106М338503_");
	ИменаПоказателей.Вставить("П62С002"		, НастройкиКС.ИмяПоказателя1);
	ИменаПоказателей.Вставить("П62С003П"	, НастройкиКС.ИмяПоказателя2);
	
	Показатели = СформироватьПоказатели(ИменаПоказателей, НастройкиКС.МассивЗамен);
	
	Если НЕ ДанныеКС.ОтчетПНПНайден Тогда 
		Возврат;
	КонецЕсли;
	
	Для каждого Ключ_БГ_ПТ Из ДанныеКС.МассивКодовБГПТ614 Цикл 
		
		ЗарегистрироватьПроверку();
		Показатели.П62С002.Итог 	= 0;
		Показатели.П62С003П.Итог 	= 0;
		РасшифроватьКоды = Истина; 
		КодБГСтр = "";
		КодПТСтр = "";
	
		Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						Если РасшифроватьКоды Тогда
							РасшифроватьПоказатель(Показатели.П06С001);
							РасшифроватьПоказатель(Показатели.П62С001);
							РасшифроватьКоды = Ложь; 
							КодБГСтр = Показатели.П06С001.ЗначениеСтр;
							КодПТСтр = Показатели.П62С001.ЗначениеСтр;
						КонецЕсли;
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С002, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	
		Для каждого СтраницаРаздела Из ДанныеКС.ОтчетПНП.Приложение6 Цикл
			
			ЗаполнитьПоказатель(Показатели.П06С001, СтраницаРаздела);
			Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
				Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
					
					ЗаполнитьПоказатель(Показатели.П62С001, СтраницаПодраздела, Счетчик);
					Если Ключ_БГ_ПТ(Показатели.П06С001.Значение, Показатели.П62С001.Значение) = Ключ_БГ_ПТ Тогда
						ЗаполнитьИРасшифроватьПоказатель(Показатели.П62С003П, СтраницаПодраздела, Счетчик);
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
		
		НастройкиКС.ЭтоОшибка = ЗначениеЗаполнено(Показатели.П62С003П.Итог) 
			И НЕ Показатели.П62С002.Итог = Показатели.П62С003П.Итог;
		НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
			Показатели.П62С002.Итог, Показатели.П62С003П.Итог, КодБГСтр, КодПТСтр);
		ДополнитьТаблицуРезультата();
		
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_80()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.80';
													|en = '10.80'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.410 подр.1.4 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.410 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.1 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2';
			|en = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.410 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.410 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.410 подр.1.4 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.410 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М341003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00021М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"10001,10006,10007,10008,10009,10010,10011,10012", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р21,Р21", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_81()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.81';
													|en = '10.81'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.415 подр.1.4 Приложения 6 = стр.410 ';
													|en = 'Сумма акциза в стр.415 подр.1.4 Приложения 6 = стр.410 '") + 
		НСтр("ru = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 ';
			|en = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.415 подр.1.4 Приложения 6';
													|en = 'Возможно ошибочное значение стр.415 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.415 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.415 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М341503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М341003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М338503_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М3");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П64,П64,П64", ","));
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_82()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.82';
													|en = '10.82'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.415 подр.1.4 Приложения 6 = ';
													|en = 'Сумма акциза в стр.415 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.1 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.1 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2';
			|en = 'показателя 10001, 10006-10012 в гр.1 подр.2.1 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.415 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.415 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.415 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.415 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М341503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00021М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00021М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00021М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"10001,10006,10007,10008,10009,10010,10011,10012", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р21,Р21", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_83()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.83';
													|en = '10.83'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.420 подр.1.4 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.420 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.420 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.420 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.420 подр.1.4 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.420 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М342003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20003,20005,20006,20007", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_84()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.84';
													|en = '10.84'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.425 подр.1.4 Приложения 6 = стр.420 ';
													|en = 'Сумма акциза в стр.425 подр.1.4 Приложения 6 = стр.420 '") + 
		НСтр("ru = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 ';
			|en = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.425 подр.1.4 Приложения 6';
													|en = 'Возможно ошибочное значение стр.425 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.425 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.425 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М342503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М342003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М338503_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М3");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П64,П64,П64", ","));
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_85()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.85';
													|en = '10.85'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.425 подр.1.4 Приложения 6 = ';
													|en = 'Сумма акциза в стр.425 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20001, 20003, 20005, 20006, 20007 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.425 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.425 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.425 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.425 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М342503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20001,20003,20005,20006,20007", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_86()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.86';
													|en = '10.86'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем подакцизных товаров в стр.430 подр.1.4 Приложения 6 = ';
													|en = 'Объем подакцизных товаров в стр.430 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем подакцизных товаров в стр.430 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный объем подакцизных товаров в стр.430 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните объем подакцизных товаров в стр.430 подр.1.4 Приложения 6';
													|en = 'Уточните объем подакцизных товаров в стр.430 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М343003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20002,20004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_87()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.87';
													|en = '10.87'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.435 подр.1.4 Приложения 6 = стр.430 ';
													|en = 'Сумма акциза в стр.435 подр.1.4 Приложения 6 = стр.430 '") + 
		НСтр("ru = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 ';
			|en = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.435 подр.1.4 Приложения 6';
													|en = 'Возможно ошибочное значение стр.435 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.435 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.435 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М343503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М343003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М338503_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М3");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П64,П64,П64", ","));
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_88()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.88';
													|en = '10.88'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма акциза в стр.435 подр.1.4 Приложения 6 = ';
													|en = 'Сумма акциза в стр.435 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.4 подр.2.2 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2';
			|en = 'показателя 20002, 20004 в гр.1 подр.2.2 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма акциза в стр.435 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма акциза в стр.435 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму акциза в стр.435 подр.1.4 Приложения 6';
													|en = 'Уточните сумму акциза в стр.435 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М343503_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00022М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00022М100004_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00022М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"20002,20004", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р22,Р22", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_89()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.89';
													|en = '10.89'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем фактических потерь в стр.440 подр.1.4 Приложения 6 >= 0';
													|en = 'Объем фактических потерь в стр.440 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем фактических потерь в стр.440 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный объем фактических потерь в стр.440 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем фактических потерь в стр.440 подр.1.4 Приложения 6 >= 0';
			|en = 'Укажите объем фактических потерь в стр.440 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М344003_");
	ПроверкаКС_10_76_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_90()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.90';
													|en = '10.90'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.445 подр.1.4 Приложения 6 = стр.440 ';
													|en = 'Сумма авансового платежа в стр.445 подр.1.4 Приложения 6 = стр.440 '") + 
		НСтр("ru = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 ';
			|en = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.445 подр.1.4 Приложения 6';
													|en = 'Возможно ошибочное значение стр.445 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.445 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.445 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М344503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М344003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М338503_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М3");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П64,П64,П64", ","));
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_91()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.91';
													|en = '10.91'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Объем фактических потерь в стр.450 подр.1.4 Приложения 6 >= 0';
													|en = 'Объем фактических потерь в стр.450 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный объем фактических потерь в стр.450 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный объем фактических потерь в стр.450 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, 
		НСтр("ru = 'Укажите объем фактических потерь в стр.450 подр.1.4 Приложения 6 >= 0';
			|en = 'Укажите объем фактических потерь в стр.450 подр.1.4 Приложения 6 >= 0'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя"	, "П00106М345003_");
	ПроверкаКС_10_76_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_92()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.92';
													|en = '10.92'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.455 подр.1.4 Приложения 6 = стр.450 ';
													|en = 'Сумма авансового платежа в стр.455 подр.1.4 Приложения 6 = стр.450 '") + 
		НСтр("ru = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 ';
			|en = 'подр.1.4 Приложения 6 х ставку акциза, действующую для кода подакцизного товара в стр.385 подр.1.4 '") +
		НСтр("ru = 'Приложения 6';
			|en = 'Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 х %4)';
													|en = '%1 = %2 (%3 х %4)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Возможно ошибочное значение стр.455 подр.1.4 Приложения 6';
													|en = 'Возможно ошибочное значение стр.455 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.455 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.455 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ИмяПоказателя1"	, "П00106М345503_");
	НастройкиКС.Вставить("ИмяПоказателя2"	, "П00106М345003_");
	НастройкиКС.Вставить("ИмяПоказателя3"	, "П00106М338503_");
	НастройкиКС.Вставить("Подраздел"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧасть"			, "П00106М3");
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить("П64,П64,П64", ","));
	
	ПроверкаКС_10_29_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_93()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.93';
													|en = '10.93'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.460 подр.1.4 Приложения 6 = стр.(';
													|en = 'Сумма авансового платежа в стр.460 подр.1.4 Приложения 6 = стр.('") + 
		НСтр("ru = '415 + 425 + 435 + 445) подр.1.4 Приложения 6';
			|en = '415 + 425 + 435 + 445) подр.1.4 Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 + %4 + %5 + %6)';
													|en = '%1 = %2 (%3 + %4 + %5 + %6)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.460 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.460 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.460 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.460 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, "П00106М346003_");
	ИменаПоказателей.Вставить("П64С002"		, "П00106М341503_");
	ИменаПоказателей.Вставить("П64С003"		, "П00106М342503_");
	ИменаПоказателей.Вставить("П64С004"		, "П00106М343503_");
	ИменаПоказателей.Вставить("П64С005"		, "П00106М344503_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				РасчетнаяСумма = Показатели.П64С002.Значение + Показатели.П64С003.Значение + Показатели.П64С004.Значение + 
					Показатели.П64С005.Значение; 
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П64С001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П64С001.Значение, РасчетнаяСумма, Показатели.П64С002.Значение, Показатели.П64С003.Значение, 
					Показатели.П64С004.Значение, Показатели.П64С005.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_94()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.94';
													|en = '10.94'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.460 подр.1.4 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.460 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.3 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.3 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 30008 в гр.1 подр.2.3 Раздела 2';
			|en = 'показателя 30008 в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.460 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.460 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.460 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.460 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М346003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00023М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00023М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"30008", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р23,Р23", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_95()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.95';
													|en = '10.95'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.470 подр.1.4 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.470 подр.1.4 Приложения 6 = '") +
		НСтр("ru = 'гр.3 подр.2.3 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду ';
			|en = 'гр.3 подр.2.3 Раздела 2 по коду подакцизного товара в стр.385 подр.1.4 Приложения 6 и коду '") +
		НСтр("ru = 'показателя 30010 в гр.1 подр.2.3 Раздела 2';
			|en = 'показателя 30010 в гр.1 подр.2.3 Раздела 2'"));
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 по коду %3';
													|en = '%1 = %2 по коду %3'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.470 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.470 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.470 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.470 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru=''"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	НастройкиКС.Вставить("ПолеКодаПТП6"		, "П00106М338503_");
	НастройкиКС.Вставить("ИмяПоказателяП6"	, "П00106М347003_");
	НастройкиКС.Вставить("МассивКодовПТ"	, "МассивКодовПТ614");
	НастройкиКС.Вставить("ПодразделП6"		, "Приложение62");
	НастройкиКС.Вставить("ТабЧастьП6"		, "КолвоСтрокП00106М3");
	НастройкиКС.Вставить("ПолеКодаПТР2"		, "П00023М100001_");
	НастройкиКС.Вставить("ИмяПоказателяР2"	, "П00023М100003_");
	НастройкиКС.Вставить("ТабЧастьР2"		, "КолвоСтрокП00023М1");
	НастройкиКС.Вставить("МассивКодовР2"	, СтрРазделить(
		"30010", ","));
	НастройкиКС.Вставить("МассивЗамен"		, СтрРазделить(
		"П64,П64,Р02,Р23,Р23", ","));
	
	ПроверкаКС_10_33_код();
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_96()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.96';
													|en = '10.96'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Сумма авансового платежа в стр.480 подр.1.4 Приложения 6 = ';
													|en = 'Сумма авансового платежа в стр.480 подр.1.4 Приложения 6 = '") + 
		НСтр("ru = 'стр.(400 - 460) подр.1.4 Приложения 6';
			|en = 'стр.(400 - 460) подр.1.4 Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4)';
													|en = '%1 = %2 (%3 - %4)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочная сумма авансового платежа в стр.480 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочная сумма авансового платежа в стр.480 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните сумму авансового платежа в стр.480 подр.1.4 Приложения 6';
													|en = 'Уточните сумму авансового платежа в стр.480 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, "П00106М348003_");
	ИменаПоказателей.Вставить("П64С002"		, "П00106М340003_");
	ИменаПоказателей.Вставить("П64С003"		, "П00106М346003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				РасчетнаяСумма = Показатели.П64С002.Значение - Показатели.П64С003.Значение; 
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П64С001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П64С001.Значение, РасчетнаяСумма, Показатели.П64С002.Значение, Показатели.П64С003.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ПроверкаКС_10_97()
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10.97';
													|en = '10.97'"));
	Заголовки.Вставить("Описание"			, НСтр("ru = 'Остаток этилового спирта в стр.490 подр.1.4 Приложения 6 = стр.(';
													|en = 'Остаток этилового спирта в стр.490 подр.1.4 Приложения 6 = стр.('") + 
		НСтр("ru = '405 - 410 - 420 - 430 - 440 - 450) подр.1.4 Приложения 6';
			|en = '405 - 410 - 420 - 430 - 440 - 450) подр.1.4 Приложения 6'"));	
	Заголовки.Вставить("ШаблонДетализации"	, НСтр("ru = '%1 = %2 (%3 - %4 - %5 - %6 - %7 - %8)';
													|en = '%1 = %2 (%3 - %4 - %5 - %6 - %7 - %8)'"));
	Заголовки.Вставить("Нарушение"			, 
		НСтр("ru = 'Возможно ошибочный остаток этилового спирта в стр.490 подр.1.4 Приложения 6';
			|en = 'Возможно ошибочный остаток этилового спирта в стр.490 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Рекомендации"		, НСтр("ru = 'Уточните остаток этилового спирта в стр.490 подр.1.4 Приложения 6';
													|en = 'Уточните остаток этилового спирта в стр.490 подр.1.4 Приложения 6'"));
	Заголовки.Вставить("Основание"			, НСтр("ru = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@';
													|en = 'Письмо ФНС России от 26.10.2023 N БВ-4-3/13621@'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Страница %1 подр.1.4 Приложения 6, группа строк %2';
													|en = 'Страница %1 подр.1.4 Приложения 6, группа строк %2'"));
	ПодготовитьНастройки(Заголовки);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("П64С001"		, "П00106М349003_");
	ИменаПоказателей.Вставить("П64С002"		, "П00106М340503_");
	ИменаПоказателей.Вставить("П64С003"		, "П00106М341003_");
	ИменаПоказателей.Вставить("П64С004"		, "П00106М342003_");
	ИменаПоказателей.Вставить("П64С005"		, "П00106М343003_");
	ИменаПоказателей.Вставить("П64С006"		, "П00106М344003_");
	ИменаПоказателей.Вставить("П64С007"		, "П00106М345003_");
	
	Показатели = СформироватьПоказатели(ИменаПоказателей);
	
	Для каждого СтраницаРаздела Из ДанныеКС.Приложение6 Цикл
		Для каждого СтраницаПодраздела Из СтраницаРаздела.Приложение62 Цикл
			Для Счетчик = 1 По СтраницаПодраздела.КолвоСтрокП00106М3 Цикл
		
				ЗарегистрироватьПроверку();
				ЗаполнитьИРасшифроватьПоказатели(Показатели, СтраницаПодраздела, Счетчик);
				
				РасчетнаяСумма = Показатели.П64С002.Значение - Показатели.П64С003.Значение - Показатели.П64С004.Значение - 
					Показатели.П64С005.Значение - Показатели.П64С006.Значение - Показатели.П64С007.Значение; 
				НастройкиКС.ЭтоОшибка = НЕ Показатели.П64С001.Значение = РасчетнаяСумма;
				НастройкиКС.Детализация = СтрШаблон(НастройкиКС.ШаблонДетализации, 
					Показатели.П64С001.Значение, РасчетнаяСумма, Показатели.П64С002.Значение, Показатели.П64С003.Значение, 
					Показатели.П64С004.Значение, Показатели.П64С005.Значение, Показатели.П64С006.Значение, 
					Показатели.П64С007.Значение);
				НастройкиКС.ДопСведения = СтрШаблон(НастройкиКС.ШаблонДопСведений, 
					СтраницаПодраздела.НомерСтраницы, Счетчик);
				ДополнитьТаблицуРезультата();
		
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьДатуВЯчейках(Форма)
	
	Форма.ТабличныйДокумент.Области.ДатаПодписи.Значение = Форма.ДатаПодписи;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизацииНаСервере(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	Если НЕ ВПрограммеИзмененаДатаПодписи Тогда
	
		СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ФИО, ТелОрганизации";
		
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		СтруктураПараметров = Новый Структура("Организация, ДатаЗначения, СведенияОбОрганизации",
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, СведенияОбОрганизации);
		РегламентированнаяОтчетность.ЗаменитьСведенияОбОрганизацииСведениямиОКрупнейшемНалогоплательщике(
		СтруктураПараметров);
		
		ТабличныйДокумент.Области.ИНН.Значение = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
		
		ТабличныйДокумент.Области.КПП.Значение = СокрЛП(СведенияОбОрганизации.КППЮЛ);
		
		КодНО = СведенияОбОрганизации.КодНО;
		Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
			КодНО = " " + КодНО;
		КонецЦикла;
		ТабличныйДокумент.Области.НалоговыйОрган.Значение = КодНО;
		
		Если СтруктураРеквизитовФормы.ИП Тогда
			НаименованиеОрганизации = СведенияОбОрганизации.ФИО;
		Иначе
			НаименованиеОрганизации = СведенияОбОрганизации.НаимЮлПол;
		КонецЕсли;
		ТабличныйДокумент.Области.НаимОрг.Значение = СокрЛП(НаименованиеОрганизации);
		
		СтруктураРеквизитовФормы.Вставить("НачальноеЗначениеНаимОрганизации", ТабличныйДокумент.Области.НаимОрг.Значение);
		
		ТелОрганизации = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
		ТелОрганизации = СтрЗаменить(ТелОрганизации, " ", "");
		ТелОрганизации = СтрЗаменить(ТелОрганизации, "(", "");
		ТелОрганизации = СтрЗаменить(ТелОрганизации, ")", "");
		ТелОрганизации = СтрЗаменить(ТелОрганизации, "-", "");
		ТабличныйДокумент.Области.ТелОрганизации.Значение = ТелОрганизации;
		
		ЗаполнитьДатуВЯчейках(ЭтотОбъект);
		
	КонецЕсли;
	
	ЗаполнитьСведенияОПодписантах();
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОПодписантах() Экспорт
	
	ТипПодписанта = "1";
	Подписант = "";
	НаименованиеОрганизацииПредставителя = "";
	ДокументПредставителя = "";
	
	КодНО = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП = СокрЛП(ТабличныйДокумент.Области.КПП.Значение);
	
	СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
	СтруктураРеквизитовФормы.Организация, КодНО, КПП);
	
	ТипПодписанта = СведенияОПредставителе.ТипПодписанта;
	
	Если ТипПодписанта = "1" Тогда
		// Представителя нет.
		Если РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация) Тогда
			// Подписант - руководитель.
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			СтруктураРеквизитовФормы.Организация, ДатаПодписи, "ФИОРук, ФИО");
			Подписант = СокрЛП(?(ЗначениеЗаполнено(СведенияОбОрганизации.ФИОРук),
			СведенияОбОрганизации.ФИОРук, СведенияОбОрганизации.ФИО));
		КонецЕсли;
	Иначе
		// Есть представитель, подписант - он.
		Подписант = СведенияОПредставителе.ФИОПредставителя;
		НаименованиеОрганизацииПредставителя = СведенияОПредставителе.НаименованиеОрганизацииПредставителя;
		ДокументПредставителя = СведенияОПредставителе.ДокументПредставителя;
	КонецЕсли;
	
	ТабличныйДокумент.Области.ПрПодп.Значение = ТипПодписанта;
	ТабличныйДокумент.Области.ОргПодписант.Значение = Подписант;
	ТабличныйДокумент.Области.ОргУп.Значение = НаименованиеОрганизацииПредставителя;
	ТабличныйДокумент.Области.ДокУпПред.Значение = ДокументПредставителя;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код") Экспорт
	
	Если ТаблицаВыбора = Неопределено ИЛИ СтруктураРеквизитовФормы.мАвтоВыборКодов Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если СтрНачинаетсяС(Область.Имя, "П00003М212003") Тогда
		
		// Особая обработка для строки 120 раздела 3.
		ИсходноеЗначение = Формат(Область.Значение, "ЧРД=,; ЧН=-");
		
	Иначе
		
		Если Область.Имя = КодПоказателя ИЛИ МногострочнаяЧастьТекущейОбласти(ЭтотОбъект, Область.Имя) <> Неопределено Тогда
			ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
		Иначе
			Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
			ИндексОбласти = 1;
			ИсходноеЗначение = "";
			Пока ЭтотОбъект[ТекущийЭлемент.Имя].Области.Найти(
				КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ=")) <> Неопределено Цикл
				ИсходноеЗначение = ИсходноеЗначение + Строка(ЭтотОбъект[ТекущийЭлемент.Имя].Области[КодПоказателя
				+ Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
				ИндексОбласти = ИндексОбласти + 1;
			КонецЦикла;
			ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
		КонецЕсли;
		
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          ТекстВыбора);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ТаблицаВыбора);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура(КолонкаПоиска, ИсходноеЗначение));
	
	ДополнительныеПараметры = Новый Структура(
	"ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент",
	ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВвестиПоказательЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы",
	ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказательЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИндексОбласти = ДополнительныеПараметры.ИндексОбласти;
	КодПоказателя = ДополнительныеПараметры.КодПоказателя;
	КолонкаПоиска = ДополнительныеПараметры.КолонкаПоиска;
	Область = ДополнительныеПараметры.Область;
	Разделитель = ДополнительныеПараметры.Разделитель;
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если СтрНачинаетсяС(Область.Имя, "П00003М212003") Тогда
		
		// Особая обработка для строки 120 раздела 3.
		Область.Значение = ?(РезультатВыбора[КолонкаПоиска] = "-", 0, Число(РезультатВыбора[КолонкаПоиска]));
		
	Иначе
		
		Если Область.Имя = КодПоказателя ИЛИ МногострочнаяЧастьТекущейОбласти(ЭтотОбъект, Область.Имя) <> Неопределено Тогда
			Область.Значение = РезультатВыбора[КолонкаПоиска];
		Иначе
			СтрокаРезультатВыбора = Строка(РезультатВыбора[КолонкаПоиска]);
			Для Инд = СтрДлина(СтрокаРезультатВыбора) + 1 По ИндексОбласти - 1 Цикл
				СтрокаРезультатВыбора = " " + РезультатВыбора[КолонкаПоиска];
			КонецЦикла;
			Для Инд = 1 По ИндексОбласти - 1 Цикл
				ЭтотОбъект[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(Инд, "ЧГ=")].Значение
				= СокрЛП(Сред(РезультатВыбора[КолонкаПоиска], Инд, 1));
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область);
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	Если Ячейка.Раздел = "Раздел1" ИЛИ Ячейка.Раздел = "Раздел3" Тогда
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Ячейка.Раздел = "Раздел2"
		ИЛИ Ячейка.Раздел = "Приложение1"
		ИЛИ Ячейка.Раздел = "Приложение2"
		ИЛИ Ячейка.Раздел = "Приложение3"
		ИЛИ Ячейка.Раздел = "Приложение4"
		ИЛИ Ячейка.Раздел = "Приложение5"
		ИЛИ Ячейка.Раздел = "Приложение6" Тогда
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = Число(Ячейка.Страница) Тогда
						СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
						Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли Ячейка.Раздел = "Приложение612_613" ИЛИ Ячейка.Раздел = "Приложение614" Тогда
		
		ИмяГлРаздела = мСтруктураМногоуровневыхРазделов[Ячейка.Раздел]["ИмяГлавногоРаздела"];
		
		НомераСтрокМногоуровнегоРаздела = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Ячейка.Страница);
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяГлРаздела Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = Число(НомераСтрокМногоуровнегоРаздела[0]) Тогда
						ТекСтраница = НайденнаяСтраница;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Для каждого НайденнаяПодчСтраница Из ТекСтраница.ПолучитьЭлементы() Цикл
			Если Ячейка.Раздел = НайденнаяПодчСтраница.КолонкаРазделыОтчетаСокрНаим Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяПодчСтраница.ПолучитьИдентификатор();
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Если Ячейка.Раздел = "Титульный" Тогда
		РегламентированнаяОтчетностьКлиент.АктивизироватьЯчейку(ЭтотОбъект, Ячейка);
	Иначе
		ТекущийЭлемент = Элементы.ТабличныйДокумент;
		НайденнаяОбласть = ТабличныйДокумент.Области.Найти(Ячейка.ИмяЯчейки);
		Если НЕ НайденнаяОбласть = Неопределено Тогда
			Элементы.ТабличныйДокумент.ТекущаяОбласть = НайденнаяОбласть;
		КонецЕсли;
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
		РазделыОтчетаПриАктивизацииСтроки(Элементы.РазделыОтчета);
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоРазделовОтчетаНаКлиенте() Экспорт
	
	// Необходимо для работы универсального механизма.
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоРазделовОтчетаНаСервере()
	
	РазделыОтчета.ПолучитьЭлементы().Очистить();
	
	Для Каждого ЭлементДереваСтраницОтчета Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл
		
		Если ЭлементДереваСтраницОтчета.ПоказатьСтраницу = 1 Тогда
			
			ЭлементРазделовОтчета = РазделыОтчета.ПолучитьЭлементы().Добавить();
			ЭлементРазделовОтчета.КолонкаРазделыОтчета = ЭлементДереваСтраницОтчета.Представление;
			ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			ИмяРаздела = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяРаздела) Тогда
				
				СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяРаздела];
				
				ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
				
				Если СтруктураРаздела.Свойство("Многостраничность") Тогда
					
					КолСтрокВДеревеДанныхРаздела = Макс(ДеревоДанныхРаздела.Строки.Количество(), 1);
					
					Для НомерСтраницыРаздела = 1 По КолСтрокВДеревеДанныхРаздела Цикл
						
						ЭлементРаздел = ЭлементРазделовОтчета.ПолучитьЭлементы().Добавить();
						
						НаимСтраницы = ?(СтруктураРаздела.Свойство("НаимСтраницы"),
						СтруктураРаздела["НаимСтраницы"], "Стр. ");
						ЭлементРаздел.КолонкаРазделыОтчета = НаимСтраницы
						+ ?(Прав(НаимСтраницы, 1) = " ", "", ". Стр. ") + Формат(НомерСтраницыРаздела, "ЧГ=");
						
						ЭлементРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела;
						ЭлементРаздел.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницыРаздела;
						
						Если СтруктураРаздела.Свойство("ИменаПодчиненныхРазделов") Тогда
							
							ИменаПодчиненныхРазделов = СтруктураРаздела["ИменаПодчиненныхРазделов"];
							КолПодчРазделов = ИменаПодчиненныхРазделов.Количество();
							
							Для ИндПодчРаздела = 0 По КолПодчРазделов - 1 Цикл
								
								ИмяПодчРаздела = ИменаПодчиненныхРазделов[ИндПодчРаздела];
								СтруктураПодчРаздела = мСтруктураМногоуровневыхРазделов[ИмяПодчРаздела];
								
								ЭлементПодчРаздел = ЭлементРаздел.ПолучитьЭлементы().Добавить();
								НаимСтраницы = ?(СтруктураПодчРаздела.Свойство("НаимСтраницы"),
								СтруктураПодчРаздела["НаимСтраницы"], "Стр. ");
								ЭлементПодчРаздел.КолонкаРазделыОтчета = НаимСтраницы;
								ЭлементПодчРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяПодчРаздела;
								ЭлементПодчРаздел.КолонкаНомерСтраницыРазделаОтчета = 1;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				ДеревоДанныхРаздела = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
	 ИЛИ Элемент.ТекущаяСтрока = СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	Элементы.ОчиститьТекущуюСтраницу.Доступность = Истина;
	Если СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере Тогда
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета
				= ?(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = Неопределено
				ИЛИ Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = 0,
				1, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		КонецЕсли;
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			
			НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
			
			ТекРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
			Если ТекРодитель <> Неопределено Тогда
				ТекЭлемент = Элемент.ТекущиеДанные;
				Пока ТекРодитель.ПолучитьРодителя() <> Неопределено Цикл
					СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[ТекЭлемент.КолонкаРазделыОтчетаСокрНаим];
					Если СтруктураЭлемента.Свойство("Подчиненность") Тогда
						ИмяГлРаздела = СтруктураЭлемента["ИмяГлавногоРаздела"];
						СтруктураРодителя = мСтруктураМногоуровневыхРазделов[ИмяГлРаздела];
						ИндексПодчРаздела = СтруктураРодителя["ИменаПодчиненныхРазделов"].Найти(ТекЭлемент.КолонкаРазделыОтчетаСокрНаим);
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ИндексПодчРаздела + 1);
					Иначе
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, 1);
					КонецЕсли;
					НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ТекРодитель.КолонкаНомерСтраницыРазделаОтчета);
					ТекЭлемент = ТекРодитель;
					ТекРодитель = ТекЭлемент.ПолучитьРодителя();
				КонецЦикла;
			КонецЕсли;
			
			СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим];
			Если СтруктураЭлемента.Свойство("Многостраничность") Тогда
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Иначе
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
			КонецЕсли;
			
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим,
				НовыеНомераСтрокМногоуровнегоРаздела);
			
		Иначе
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		КонецЕсли;
		
	Иначе
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
	КМенюРО = Элементы.РазделыОтчета.КонтекстноеМеню;
	КМенюРО.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
	Если мСтруктураМногоуровневыхРазделов.Свойство(
		Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
		Если мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим].Свойство(
			"Многостраничность") Тогда
			Элемент.Развернуть(Элемент.ТекущаяСтрока);
			КМенюРО.Видимость = Истина;
			Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
				Элементы.ОчиститьТекущуюСтраницу.Доступность = Ложь;
			КонецЕсли;
			
			Если НЕ Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено
				И Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() > 1 Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Истина;
				
			Иначе
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
				
			КонецЕсли;
			
			#Если ВебКлиент Тогда
				ВидимостьМеню = КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
			#КонецЕсли
			
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Заголовок = "Добавить страницу";
			
			#Если ВебКлиент Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = ВидимостьМеню;
			#КонецЕсли
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Титульный" Тогда
		Элементы.Обновить.Доступность = Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Ложь;
	Иначе
		Элементы.Обновить.Доступность = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Истина;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда) Экспорт 
	
	ЗаполнитьСведенияОбОрганизацииНаСервере();
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтотОбъект, "Титульный");
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(
	ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		
		Возврат;
		
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СформироватьЗаголовокОтчета();
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;

	Если СтруктураРеквизитовФормы.НеобходимоПреобразованиеИзПрошлойРедакции Тогда 
		ОО = Новый ОписаниеОповещения("ВопросВыполнитьПреобразованиеИзПрошлойРедакции", ЭтотОбъект);
		ПоказатьВопрос(ОО, "Была скопирована форма другой редакции. Выполнить конвертацию данных?",
			РежимДиалогаВопрос.ДаНет);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВопросВыполнитьПреобразованиеИзПрошлойРедакции(РезультатВопроса, ДополнительныеПараметры) Экспорт
	РегламентированнаяОтчетностьЗагрузкаКлиент.ВыполнитьПреобразованиеИзПрошлойРедакции(ЭтотОбъект, РезультатВопроса);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНомерКорректировки(Форма)
	
	НомерКорр = Форма.СтруктураРеквизитовФормы.ВидДокумента * Форма.НомерКорректировки;
	НомерКорректировкиСтрока = Формат(НомерКорр, "ЧН=0; ЧГ=");
	СтрДлинаНомерКорректировкиСтрока = СтрДлина(НомерКорректировкиСтрока);
	
	Форма.ТабличныйДокумент.Области["НомерКорректировки"].Значение = НомерКорректировкиСтрока;
	
Конецпроцедуры

&НаКлиенте
Процедура СформироватьЗаголовокОтчета()
	
	НомКорр = Неопределено;
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		Обл = ТабличныйДокумент.Области.Найти("НомерКорректировки");
		Если Обл <> Неопределено Тогда
			НомКорр = Обл.Значение;
		КонецЕсли;
	Иначе
		СтруктураДанныхТитульный.Свойство("НомерКорректировки", НомКорр);
	КонецЕсли;
	ПредстНомКорр = ?(ТипЗнч(НомКорр) = Тип("Число") И НомКорр > 0, " К/" + Формат(НомКорр, "ЧГ="), "");
	
	Заголовок = "Акцизы на алкогольную продукцию за " + СтруктураРеквизитовФормы.СтрПериодОтчета
	+ ПредстНомКорр + " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")"
	+ ?(СтрНайти(ИмяФормы, "Внешний") > 0, " - внешний отчет", "");
	
КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТЫКОВКИ С СЕРВИСОМ СДАЧИ ОТЧЕТНОСТИ ЧЕРЕЗ ПРЕДСТАВИТЕЛЯ

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
	ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
	
	Оповещение = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	СохранитьНаКлиенте(, Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Форма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОтчета(ЭтотОбъектИмя) Экспорт
	
	Если мОбъектОтчета = Неопределено Тогда 
		мОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ЭтотОбъектИмя);
	КонецЕсли;
	
	Возврат мОбъектОтчета;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяОтчета(ЭтотОбъектИмя)
	
	Форма_Имя = СтрЗаменить(ЭтотОбъектИмя, "Внешний", "");
	Возврат Сред(Лев(Форма_Имя, СтрНайти(Форма_Имя, ".Форма.") - 1), 7);
	
КонецФункции

#Область ОбработчикиСобытийФормы

#Область ОбработчикиСобытийПроцессыОбработкиДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокументаОповещение(Контекст, ДополнительныеПараметры) Экспорт
	
	ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст);
		
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры, Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокумента(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВыполнитьЗадачу(
		ЭтотОбъект,
		Команда,
		?(ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок),
			СтруктураРеквизитовФормы.мСохраненныйДок,
			СтруктураРеквизитовФормы.ПустаяСсылкаНаРегламентированныйОтчет));
	
КонецПроцедуры

#КонецОбласти

#Область ПроцессыОбработкиДокументов

&НаКлиенте
Процедура Подключаемый_КомментарийНаправившегоОткрытие(Элемент, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.КомментарийНаправившегоОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомментарийСледующемуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.КомментарийСледующемуНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцессыОбработкиДокументов

&НаКлиенте
Процедура Записать(ПараметрыЗаписи) Экспорт
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст)
	
	РегламентированнаяОтчетность.ВыполнитьЗадачу(ЭтотОбъект, Контекст, СтруктураРеквизитовФормы.мСохраненныйДок);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюРеквизитов(БлокируемыеЭлементы, ТолькоПросмотр) Экспорт
	
	РегламентированнаяОтчетность.УправлениеДоступностьюРеквизитов(ЭтотОбъект, БлокируемыеЭлементы, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
