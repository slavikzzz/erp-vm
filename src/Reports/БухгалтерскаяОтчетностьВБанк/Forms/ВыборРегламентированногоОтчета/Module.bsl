#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Заголовок      = Параметры.Заголовок;
	Организация    = Параметры.Организация;
	ДатаНачала     = Параметры.ДатаНачала;
	ДатаОкончания  = Параметры.ДатаОкончания;
	ИсточникОтчета = Параметры.ИсточникОтчета;
	
	ЗаполнитьРегламентированныеОтчеты();
	
	СпозиционироватьсяНаОтчете(Параметры.ВыделенныйОтчет);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	
	Если ИмяСобытия = "Запись_РегламентированныйОтчет" ИЛИ ИмяСобытия = "Позиционирование в списке отчетов" Тогда
		// Обновим список после записи регламентированного отчета.
		Если ТипЗнч(Параметр) <> Тип("Структура")
			ИЛИ НЕ Параметр.Свойство("Ссылка")
			ИЛИ НЕ Параметр.Свойство("Организация") Тогда
			Возврат;
		КонецЕсли;
		
		Если Параметр.Организация <> Организация Тогда
			Возврат;
		КонецЕсли;
		
		ОбработкаОповещенияЗаписьРегламентированногоОтчета(Параметр);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыРегламентированныеОтчеты

&НаКлиенте
Процедура РегламентированныеОтчетыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОбработатьВыборОтчета();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура ВыбратьОтчет(Команда)
	
	ОбработатьВыборОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьОтчет(Команда)
	
	ТекущиеДанные = Элементы.РегламентированныеОтчеты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПоказатьЗначение(, ТекущиеДанные.РегламентированныйОтчет);
	
КонецПроцедуры

&НаКлиенте
Процедура СоздатьБухОтчетность(Команда)
	
	ОткрытьФормуНовогоБухОтчетность("РегламентированныйОтчетБухОтчетность");
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьРегламентированныеОтчеты()
	
	// Запомним отчет, который был выделен до перестроения списка, чтобы потом к нему вернуться.
	Если Элементы.РегламентированныеОтчеты.ТекущаяСтрока <> Неопределено Тогда
		ДанныеСтроки = РегламентированныеОтчеты.НайтиПоИдентификатору(Элементы.РегламентированныеОтчеты.ТекущаяСтрока);
		Если ДанныеСтроки <> Неопределено Тогда
			ВыделенныйОтчет = ДанныеСтроки.РегламентированныйОтчет;
		КонецЕсли;
	КонецЕсли;
	
	РегламентированныеОтчеты.Очистить();
	
	ЭтоВыборБухОтчетности = (ИсточникОтчета = "БухгалтерскаяОтчетность");
	
	ПараметрыРеглОтчетов = Новый ТаблицаЗначений;
	ПараметрыРеглОтчетов.Колонки.Добавить("ИсточникОтчета", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(254)));
	ПараметрыРеглОтчетов.Колонки.Добавить("Организация",    Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ПараметрыРеглОтчетов.Колонки.Добавить("ДатаОкончания",  ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	ПараметрыРеглОтчетов.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ПараметрыРеглОтчетов.Колонки.Добавить("Правило",                     Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	
	Если ЭтоВыборБухОтчетности Тогда
		// Выполняем поиск среди всех возможных источников бух.отчетности.
		ИсточникиБухОтчетности = ИсточникБухгалтерскойОтчетности();
		
		Для Каждого ИсточникБухОтчетности Из ИсточникиБухОтчетности Цикл
			ПараметрРеглОтчета = ПараметрыРеглОтчетов.Добавить();
			ПараметрРеглОтчета.ИсточникОтчета = ИсточникБухОтчетности;
			ПараметрРеглОтчета.Организация    = Организация;
			ПараметрРеглОтчета.ДатаОкончания  = ДатаОкончания;
		КонецЦикла;
		
	Иначе
		ПараметрРеглОтчета = ПараметрыРеглОтчетов.Добавить();
		ПараметрРеглОтчета.ИсточникОтчета = ИсточникОтчета;
		ПараметрРеглОтчета.Организация    = Организация;
		ПараметрРеглОтчета.ДатаОкончания  = ДатаОкончания;
		
	КонецЕсли;
	
	// Выберем все подходящие отчеты.
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСсылкиНаРеглОтчеты(ПараметрыРеглОтчетов);
	
	Для Каждого ПараметрыРеглОтчета Из ПараметрыРеглОтчетов Цикл
		Для Каждого РеглОтчет Из ПараметрыРеглОтчета.Документы Цикл
			НоваяСтрока = РегламентированныеОтчеты.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, РеглОтчет);
			НоваяСтрока.РегламентированныйОтчет = РеглОтчет.Ссылка;
			НоваяСтрока.ИсточникОтчета          = ИсточникОтчета;
		КонецЦикла;
	КонецЦикла;
	
	СпозиционироватьсяНаОтчете(ВыделенныйОтчет);
	
КонецПроцедуры

&НаСервере
Процедура СпозиционироватьсяНаОтчете(ВыделенныйОтчет)
	
	Если НЕ ЗначениеЗаполнено(ВыделенныйОтчет) Тогда
		Возврат;
	КонецЕсли;
	
	Отбор = Новый Структура();
	Отбор.Вставить("РегламентированныйОтчет", ВыделенныйОтчет);
	НайденныеСтроки = РегламентированныеОтчеты.НайтиСтроки(Отбор);
	Если НайденныеСтроки.Количество() > 0 Тогда
		Элементы.РегламентированныеОтчеты.ТекущаяСтрока = НайденныеСтроки[0].ПолучитьИдентификатор();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработатьВыборОтчета()
	
	ТекущиеДанные = Элементы.РегламентированныеОтчеты.ТекущиеДанные;
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОписаниеОтчета = ОписаниеОтчета(ТекущиеДанные.ПолучитьИдентификатор());
	
	Если ОписаниеОтчета.Свойство("ТекстПредупреждения")
		И ЗначениеЗаполнено(ОписаниеОтчета.ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ОписаниеОтчета.ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	РезультатВыбора = Новый Структура();
	РезультатВыбора.Вставить("РегламентированныйОтчет", ТекущиеДанные.РегламентированныйОтчет);
	РезультатВыбора.Вставить("НаименованиеОтчета",      ОписаниеОтчета.НаименованиеОтчета);
	РезультатВыбора.Вставить("СостояниеОтчета",         ОписаниеОтчета.СостояниеОтчета);
	
	Закрыть(РезультатВыбора);
	
КонецПроцедуры

&НаСервере
Функция ОписаниеОтчета(ИдСтроки)
	
	СведенияОбОтчете = РегламентированныеОтчеты.НайтиПоИдентификатору(ИдСтроки);
	
	Результат = Новый Структура();
	Результат.Вставить("НаименованиеОтчета", "");
	Результат.Вставить("СостояниеОтчета",    "");
	
	Если СведенияОбОтчете.ИсточникОтчета = "РасшифровкиБухгалтерскойОтчетности" Тогда
		Результат.НаименованиеОтчета = НСтр("ru = 'Дополнительные отчеты';
											|en = 'Дополнительные отчеты'");
		
	ИначеЕсли СтрНачинаетсяС(СведенияОбОтчете.ИсточникОтчета, "РегламентированныйОтчетБухОтчетность")
	      ИЛИ СведенияОбОтчете.ИсточникОтчета = "БухгалтерскаяОтчетность" Тогда
		
		Результат.НаименованиеОтчета = СтрШаблон(НСтр("ru = 'Бухгалтерская отчетность за %1';
														|en = 'Бухгалтерская отчетность за %1'"),
			СведенияОбОтчете.ФинансовыйПериод);
		
	Иначе
		// Все остальное считаем налоговой отчетностью.
		Результат.НаименованиеОтчета = СтрШаблон(НСтр("ru = '%1 за %2';
														|en = '%1 за %2'"),
			СведенияОбОтчете.НаименованиеОтчета, СведенияОбОтчете.ФинансовыйПериод);
			
	КонецЕсли;
	
	Результат.СостояниеОтчета = СтрШаблон(НСтр("ru = 'Готово (%1)';
												|en = 'Готово (%1)'"),
		СведенияОбОтчете.ВариантОтчета);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ОткрытьФормуНовогоБухОтчетность(ИсточникБухОтчетности)
	
	ПараметрыФормы = ПараметрыОткрытияФормыНовогоБухОтчетность(ИсточникБухОтчетности);
	
	Если ПараметрыФормы = Неопределено Тогда
		ПоказатьПредупреждение(, НСтр("ru = 'Не удалось определить подходящую редакцию формы, попробуйте создать отчет в меню ""Отчеты - 1С-Отчетность - Регламентированные отчеты""';
										|en = 'Не удалось определить подходящую редакцию формы, попробуйте создать отчет в меню ""Отчеты - 1С-Отчетность - Регламентированные отчеты""'"));
		Возврат;
	КонецЕсли;
	
	ИмяФормыОтчета = "Отчет." + ИсточникБухОтчетности + ".Форма." + ПараметрыФормы.мВыбраннаяФорма;
	
	ОткрытьФорму(ИмяФормыОтчета, ПараметрыФормы);
	
КонецПроцедуры

&НаСервере
Функция ПараметрыОткрытияФормыНовогоБухОтчетность(Знач ИсточникБухОтчетности)
	
	Результат = ИнтерфейсыВзаимодействияБРО.ПараметрыОткрытияФормыРеглОтчета(
		ИсточникБухОтчетности,
		Организация,
		Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка(),
		НачалоДня(ДатаНачала),
		КонецДня(ДатаОкончания),
		Перечисления.Периодичность.Год);
	
	Возврат Результат;
	
КонецФункции

&НаСервере
Процедура ОбработкаОповещенияЗаписьРегламентированногоОтчета(Параметр)
	
	СвойстваОтчета = ИнтерфейсыВзаимодействияБРО.СвойстваОтчета(Параметр.Ссылка);
	
	Если ИсточникОтчета = "БухгалтерскаяОтчетность" Тогда
		ИсточникиБухОтчетности = ИсточникБухгалтерскойОтчетности();
		Если ИсточникиБухОтчетности.Найти(СвойстваОтчета.ИсточникОтчета) = Неопределено Тогда
			Возврат;
		КонецЕсли;
		
	ИначеЕсли СвойстваОтчета.ИсточникОтчета <> ИсточникОтчета Тогда
		// Отчет не совпадает с текущим отбором, игнорируем его изменение.
		Возврат;
		
	КонецЕсли;
	
	Если СвойстваОтчета.ДатаОкончанияОП <> ДатаОкончания Тогда
		// Отчет за другой период.
		Возврат;
	КонецЕсли;
	
	// Обновляем список отчетов и позиционируемся на отчет из оповещения.
	ЗаполнитьРегламентированныеОтчеты();
	
	СпозиционироватьсяНаОтчете(Параметр.Ссылка);
	
КонецПроцедуры

&НаСервере
Функция ИсточникБухгалтерскойОтчетности()
	
	Результат = Новый Массив;
	
	Результат.Добавить("РегламентированныйОтчетБухОтчетность");
	Результат.Добавить("РегламентированныйОтчетБухОтчетностьМП");
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти
