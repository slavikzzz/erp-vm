#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.КНД = "1151152";
	Стр.ВерсияФормата = "5.03";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Заявление о применении заявительного порядка возмещения НДС (акциза), по приказу ФНС России от 20.03.2024 № ЕД-7-15/217@";
	Стр.ДатаНачала = '20240301';
	Стр.ДатаКонца = '20991231';

	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2024_1"  Тогда 
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2024_1(СведенияОтправки)
	Префикс = "ON_ZVVOZM";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2024_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2022_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2022_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2024_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2024_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2024_1"  Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор)
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаяв) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер заявления", "Титульная", "НомерЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата формирования документа", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(ЭтоЮЛ, Титульная, ТаблицаОшибок);
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная",
		ЭтоЮЛ Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2");
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КодОсн) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код основания", "Титульная", "КодОсн"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер заявления", "Титульная", "НомерЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата заявления", "Титульная", "ДатаЗаяв"));
	КонецЕсли;
	
	ЗаявВозм = Данные.ДанныеУведомления.ЗаявВозм;
	Если Не ЗначениеЗаполнено(ЗаявВозм.ВидНалог) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "ЗаявВозм", "ВидНалог"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЗаявВозм.СпосПред) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "ЗаявВозм", "СпосПред"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(ЗаявВозм.ВидДок) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "ЗаявВозм", "ВидДок"));
	КонецЕсли;
	
	Если ЗаявВозм.СпосПред = "1" Тогда 
		Если Не ЗначениеЗаполнено(ЗаявВозм.ИмяФайлДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя файла декларации", "ЗаявВозм", "ИмяФайлДекл"));
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЗаявВозм, "КНДДекл,ОтчетГод,Период,НомКорр,ДатаДекл") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке подачи уведомления в электронном виде блок ""Сведения о декларации"" не заполняется", "ЗаявВозм", "КНДДекл"));
		КонецЕсли;
	ИначеЕсли ЗаявВозм.СпосПред = "2" Тогда 
		Если ЗначениеЗаполнено(ЗаявВозм.ИмяФайлДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке 2 имя файла не заполняется", "ЗаявВозм", "ИмяФайлДекл"));
		КонецЕсли;
		
		Если ЗаявВозм.ВидНалог = "1" И ЗначениеЗаполнено(ЗаявВозм.КНДДекл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке 1 КНД декларации должен отсутствовать", "ЗаявВозм", "КНДДекл"));
		ИначеЕсли ЗаявВозм.ВидНалог = "2" И Не ЗначениеЗаполнено(ЗаявВозм.КНДДекл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КНД", "ЗаявВозм", "КНДДекл"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(ЗаявВозм, ТаблицаОшибок, "ЗаявВозм", "ОтчетГод", Истина);
		Если Не ЗначениеЗаполнено(ЗаявВозм.Период) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан налоговый период", "ЗаявВозм", "Период"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЗаявВозм.ДатаДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата декларации", "ЗаявВозм", "ДатаДекл"));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗаявВозм.ВидНалог = "2" Тогда 
		Если Не ЗначениеЗаполнено(ЗаявВозм.ОснНКАкциз) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код основания", "ЗаявВозм", "ОснНКАкциз"));
		КонецЕсли;
		Инд = 0;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
			Инд = Инд + 1;
			Если ЗначениеЗаполнено(Стр.ОснНКНДС) Или ЗначениеЗаполнено(Стр.СумНДС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Для акциза не указываются данные по НДС", "ЗаявВозм", 
					?(ЗначениеЗаполнено(Стр.ОснНКНДС), "ОснНКНДС___", "СумНДС___") + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(Инд)));
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли ЗаявВозм.ВидНалог = "1" Тогда 
		Если ЗначениеЗаполнено(ЗаявВозм.ОснНКАкциз) Или ЗначениеЗаполнено(ЗаявВозм.СумАкц) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Для НДС не указываются сумма акциза и статью НК", "ЗаявВозм", 
				?(ЗначениеЗаполнено(ЗаявВозм.ОснНКАкциз), "ОснНКАкциз", "СумАкц")));
		КонецЕсли;

		Инд = 0;
		Код02 = Ложь;
		Код05 = Ложь;
		Код07 = Ложь;
		КодПрочие = Ложь;
		СоответствиеПрочие = Новый Соответствие;
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр Цикл 
			Инд = Инд + 1;
			Если Не ЗначениеЗаполнено(Стр.ОснНКНДС) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код основания", "ЗаявВозм", "ОснНКНДС___" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(Инд)));
			Иначе 
				Если Стр.ОснНКНДС = "02" Тогда 
					Код02 = Истина;
				ИначеЕсли Стр.ОснНКНДС = "05" Тогда 
					Код05 = Истина;
				ИначеЕсли Стр.ОснНКНДС = "07" Тогда 
					Код07 = Истина;
				Иначе
					КодПрочие = Истина;
					СоответствиеПрочие.Вставить(Стр.ОснНКНДС);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Код02 И КодПрочие Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"С кодом 02 может быть указан либо код 05 либо код 07", "ЗаявВозм", "ОснНКНДС___1"));
		ИначеЕсли Код05 И КодПрочие Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"С кодом 05 может быть указан либо код 02 либо код 07", "ЗаявВозм", "ОснНКНДС___1"));
		ИначеЕсли Код07 И КодПрочие Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"С кодом 07 может быть указан либо код 02 либо код 05", "ЗаявВозм", "ОснНКНДС___1"));
		ИначеЕсли Код02 И Код05 И Не Код07 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Коды 02 и 05 без кода 07 не допускаются", "ЗаявВозм", "ОснНКНДС___1"));
		ИначеЕсли СоответствиеПрочие.Количество() > 1 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Допускается только код 01 или 06", "ЗаявВозм", "ОснНКНДС___1"));
		КонецЕсли;
	КонецЕсли;
	
	СведВозм = Данные.ДанныеУведомления.СведВозм;
	Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СведВозм, "НаимБанк,БИК,НомСчет") Тогда 
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные.ДанныеУведомления.СведВозм, "НаимВладСчет,КБКПолуч,ОКТМО,НомЛиц,НазнПлат") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При заполненном счете сведения о счете бюджетной организации не заполняются", "СведВозм", "НаимВладСчет"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведВозм.НаимБанк) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование банка", "СведВозм", "НаимБанк"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(СведВозм, ТаблицаОшибок, "СведВозм", "БИК", Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаНомераСчета(СведВозм, ТаблицаОшибок, "СведВозм", "НомСчет", Истина);
	ИначеЕсли УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные.ДанныеУведомления.СведВозм, "НаимВладСчет,КБКПолуч,ОКТМО,НомЛиц,НазнПлат") Тогда 
		Если Не ЗначениеЗаполнено(СведВозм.НаимВладСчет) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование владельца счета", "СведВозм", "НаимВладСчет"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКТМО(СведВозм, ТаблицаОшибок, "СведВозм", "ОКТМО", Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКБК(СведВозм, ТаблицаОшибок, "СведВозм", "КБКПолуч", Ложь);
		Если ЗначениеЗаполнено(СведВозм.НомЛиц) И СтрДлина(СведВозм.НомЛиц) <> 11 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан номер лицевого счета", "СведВозм", "НомЛиц"));
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.РеквБГПор Цикл 
		РеквБГПор = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(РеквБГПор) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(РеквБГПор.Дата) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата", "РеквБГПор", "Дата", РеквБГПор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РеквБГПор.Номер) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер", "РеквБГПор", "Номер", РеквБГПор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РеквБГПор.КемВыд) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "РеквБГПор", "КемВыд", РеквБГПор.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(РеквБГПор.Наим) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование", "РеквБГПор", "Наим", РеквБГПор.УИД));
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(РеквБГПор, ТаблицаОшибок, "РеквБГПор", "БИК", РеквБГПор.КемВыд = "1" Или РеквБГПор.КемВыд = "2");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(РеквБГПор, ТаблицаОшибок, "РеквБГПор", "ИНН", Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(РеквБГПор, ТаблицаОшибок, "РеквБГПор", "КПП", Истина);
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2024", "СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция СформироватьСписокЛистовФорма2022_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, , "БланкиПечати");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр,
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Титульная_2022"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.Возврат Цикл 
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Элт.Значение) Тогда 
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, Элт.Значение, НомСтр,
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Возврат_2022"), ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ТиповаяПечатьНесколькихСтраницНаОдинБланк(Объект, Листы, СтруктураПараметров, "Зачет", 4,
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Зачет_2022"), НомСтр, ИННКПП);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, , "БланкиПечати");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Титульная_2023"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Возврат"], НомСтр,
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Возврат_2023"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_1(Объект) Экспорт
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Ссылка,ПодписантФамилия,ПодписантИмя,ПодписантОтчество,ДанныеУведомления");
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = Объект;
	КонецЕсли;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбъектРеквизиты.ДанныеУведомления.Получить();
	БланкПечати = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2024_1");
	
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ЗаявВозм = СтруктураПараметров.ДанныеУведомления.ЗаявВозм;
	СведВозм = СтруктураПараметров.ДанныеУведомления.СведВозм;
	
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаЗаяв");
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(ЗаявВозм, "ДатаДекл");
	
	КоличествоСтраниц = Цел(СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.Количество() / 2) + (СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.Количество() % 2);
	Для Инд = 1 По КоличествоСтраниц Цикл 
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть1"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть2"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3"));
		ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
		ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
		ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Инд, "ЧЦ=3; ЧВН=");
		
		Если Инд = 1 Тогда
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(Титульная, ПечатнаяФорма);
			ПечатнаяФорма.Области["ФамилияПодп"].Текст = ОбъектРеквизиты.ПодписантФамилия;
			ПечатнаяФорма.Области["ИмяПодп"].Текст = ОбъектРеквизиты.ПодписантИмя;
			ПечатнаяФорма.Области["ОтчествоПодп"].Текст = ОбъектРеквизиты.ПодписантОтчество;
			
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(ЗаявВозм, ПечатнаяФорма);
			ПечатнаяФорма.Области["НомКорр"].Текст = Формат(ЗаявВозм.НомКорр, "ЧН=0");
			ПечатнаяФорма.Области["КодОсн3"].Текст = ЗаявВозм.ОснНКАкциз;
			ПечатнаяФорма.Области["Сумма13"].Текст = ЗаявВозм.СумАкц;
		КонецЕсли;
		
		Для Ид = 1 По 2 Цикл
			Индекс = 2*(Инд-1) + Ид;
			Если СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.Количество() < Индекс Тогда 
				Прервать;
			КонецЕсли;
			ПечатнаяФорма.Области["КодОсн" + Ид].Текст = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр[Индекс - 1].ОснНКНДС;
			ПечатнаяФорма.Области["Сумма1" + Ид].Текст = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр[Индекс - 1].СумНДС;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
	КонецЦикла;
	
	Для Инд = 1 По СтруктураПараметров.ДанныеМногостраничныхРазделов.РеквБГПор.Количество() Цикл
		РеквБГПор = СтруктураПараметров.ДанныеМногостраничныхРазделов.РеквБГПор.Получить(Инд-1).Значение;
		УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(РеквБГПор, "Дата");
		
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть4"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть5"));
		ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
		ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
		ПечатнаяФорма.Области["ТекстПриказа"].Текст = "";
		ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Листы.Количество() + 1, "ЧЦ=3; ЧВН=");
		
		Если Инд = 1 Тогда
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(ЗаявВозм, ПечатнаяФорма);
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведВозм, ПечатнаяФорма);
			ПечатнаяФорма.Области["БИКСвСч"].Текст = СведВозм.БИК;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(РеквБГПор, ПечатнаяФорма);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть6"));
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
