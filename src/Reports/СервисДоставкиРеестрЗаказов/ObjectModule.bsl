
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	АдресРезультата = ПоместитьВоВременноеХранилище(Неопределено);
	
	ТипГрузоперевозки = ПолучитьЗначениеПараметра(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы, "ПараметрТипГрузоперевозки");
	ОтборПунктВыдачи = ПолучитьЗначениеПараметра(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы, "ПараметрПунктВыдачи");
	ОтборСостояние = ПолучитьЗначениеПараметра(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы, "ПараметрСостояние");
	ОтборОрганизация = ПолучитьЗначениеПараметра(КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы, "ПараметрОрганизация");
	
	ПараметрыЗапроса = Новый Структура;
	ПараметрыЗапроса = ПараметрыЗапросаПолучитьЗаказыНаДоставку();
	ПараметрыЗапроса.Вставить("ОрганизацияБизнесСетиСсылка", ОтборОрганизация);
	ПараметрыЗапроса.Вставить("ПунктВыдачиКлиента", ОтборПунктВыдачи);
	ПараметрыЗапроса.Вставить("ТипГрузоперевозки", ТипГрузоперевозки);
	
	Для Каждого ТекущееЗначение Из ОтборСостояние Цикл
		
		Если ТекущееЗначение.Значение > 100 Тогда
			КоллекцияСостояний = КоллекцияСостоянийПоИдентификатору(ТекущееЗначение.Значение);
			
			Для Каждого ТекущееСостояние Из КоллекцияСостояний Цикл
				НовоеСостояние = ПараметрыЗапроса.Состояние.Добавить();
				НовоеСостояние.Идентификатор = ТекущееСостояние;
			КонецЦикла;
			
			Прервать;
		Иначе
			НовоеСостояние = ПараметрыЗапроса.Состояние.Добавить();
			НовоеСостояние.Идентификатор = ТекущееЗначение.Значение;
		КонецЕсли;
		
	КонецЦикла;
	
	СервисДоставки.ПолучитьЗаказыНаДоставку(ПараметрыЗапроса, АдресРезультата);
	
	ТаблицаДанных = ТаблицаДанныхДляОтчета();
		
	Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
	Если ТипЗнч(Результат) = Тип("Структура")
		И Результат.Свойство("Список")
		И ТипЗнч(Результат.Список) = Тип("Массив")
		И Результат.Список.Количество() > 0 Тогда
		
		Для Каждого СтруктураДанных Из Результат.Список Цикл
			
			ДобавитьСтрокуТаблицы(ТаблицаДанных, СтруктураДанных);
			
		КонецЦикла;
		
		Для Индекс = 2 По Результат.Страницы.КоличествоСтраниц Цикл
			
			ПараметрыЗапроса.Страница = Индекс;
			СервисДоставки.ПолучитьЗаказыНаДоставку(ПараметрыЗапроса, АдресРезультата);
			
			Результат = ПолучитьИзВременногоХранилища(АдресРезультата);
			Для Каждого СтруктураДанных Из Результат.Список Цикл
				
				ДобавитьСтрокуТаблицы(ТаблицаДанных, СтруктураДанных);
				
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
	КомпоновщикНастроек.ЗагрузитьНастройки(КомпоновщикНастроек.ПолучитьНастройки());
	
	НастройкиКомпоновки = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиКомпоновки, ДанныеРасшифровки);
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, Новый Структура("ТаблицаДанных", ТаблицаДанных), ДанныеРасшифровки, Истина, Ложь);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновкиДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ТаблицаДанныхДляОтчета();
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка");
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата");
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("НомерЗаказа", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ДатаЗаказа", ОписаниеТиповДата);
	Результат.Колонки.Добавить("СуммаЗаказа", ОписаниеТиповЧисло);
	Результат.Колонки.Добавить("Валюта", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ТекущееСостояние", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("КОплатеНаличными", ОписаниеТиповЧисло);
	Результат.Колонки.Добавить("КОплатеКартой", ОписаниеТиповЧисло);
	Результат.Колонки.Добавить("ТрекНомер", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("Получатель", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("Основание", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ПунктВыдачи", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("АдресДоставки", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ДатаОтгрузки", ОписаниеТиповДата);
	Результат.Колонки.Добавить("ДатаДоставки", ОписаниеТиповДата);
	
	Возврат Результат;
	
КонецФункции

Функция МассивКоллекцийСостояний()
	
	Результат = Новый Массив();
	Результат.Добавить("0"); //Все черновики
	Результат.Добавить("1,2,3,21"); //Все к отгрузке
	Результат.Добавить("4,5,6,8,22"); //Все отгруженные
	Результат.Добавить("7"); //Все готовые к выдаче
	Результат.Добавить("9"); //Все возвращаемые
	Результат.Добавить("18"); //Все отмененные
	
	Возврат Результат;
	
КонецФункции

Функция КоллекцияСостоянийПоИдентификатору(Идентификатор)
	
	Коллекция = Новый Массив();
	
	МассивКоллекций = МассивКоллекцийСостояний();
	
	Индекс = Идентификатор - 101;
	ТипЧисло = Новый ОписаниеТипов("Число");
	
	Если Индекс >= 0
		И Индекс < МассивКоллекций.Количество() Тогда
		
		КоллекцияСтрока = МассивКоллекций[Индекс];
		КоллекцияВСтроках = СтрРазделить(КоллекцияСтрока, ",");
		
		Для Каждого ТекущийЭлементСписка Из КоллекцияВСтроках Цикл
			Коллекция.Добавить(ТипЧисло.ПривестиЗначение(ТекущийЭлементСписка));
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат Коллекция;
	
КонецФункции

Процедура ДобавитьСтрокуТаблицы(ТаблицаДанных, СтруктураДанных)
	
	НоваяСтрока = ТаблицаДанных.Добавить();
	НоваяСтрока.НомерЗаказа = СтруктураДанных.НомерЗаказа;
	НоваяСтрока.ДатаЗаказа = СтруктураДанных.ДатаЗаказа;
	НоваяСтрока.СуммаЗаказа = СтруктураДанных.Сумма;
	НоваяСтрока.Валюта = СтруктураДанных.ВалютаНаименование;
	НоваяСтрока.ТекущееСостояние = СтруктураДанных.Состояние;
	НоваяСтрока.КОплатеНаличными = СтруктураДанных.СуммаНаложенногоПлатежа;
	НоваяСтрока.КОплатеКартой = СтруктураДанных.Сумма - СтруктураДанных.СуммаНаложенногоПлатежа;
	НоваяСтрока.ТрекНомер = СтруктураДанных.ТрекНомер;
	НоваяСтрока.Получатель = СтрШаблон("%1, %2", СтруктураДанных.ПолучательКонтактноеЛицоНаименование, СтруктураДанных.ПолучательКонтактноеЛицоТелефонПредставление);
	НоваяСтрока.Основание = СтруктураДанных.ДокументОснованиеПредставление;
	НоваяСтрока.ПунктВыдачи = СтруктураДанных.ПунктВыдачиКлиентаНаименование;
	НоваяСтрока.АдресДоставки = СтруктураДанных.АдресДоставкиПредставление;
	НоваяСтрока.ДатаОтгрузки = СтруктураДанных.ДатаОтгрузки;
	НоваяСтрока.ДатаДоставки = СтруктураДанных.ДатаДоставки;
	
КонецПроцедуры

Функция ПолучитьЗначениеПараметра(ПользовательскиеНастройки, ИмяПараметра)

	Результат = Неопределено;
	
	Для Каждого ЭлементНастройки Из ПользовательскиеНастройки Цикл
		
		Если ЭлементНастройки.Параметр = Новый ПараметрКомпоновкиДанных(ИмяПараметра) Тогда
			
			Результат = ЭлементНастройки.Значение;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ПараметрыЗапросаПолучитьЗаказыНаДоставку()
	
	ПараметрыЗапроса = СервисДоставки.НовыйПараметрыЗапросаПолучитьЗаказыНаДоставку();
	
	ПараметрыЗапроса.Страница = 1;
	ПараметрыЗапроса.РазмерСтраницы = 100;
	ПараметрыЗапроса.ФильтрПоМультизаказам = "allOrders";
		
	Возврат ПараметрыЗапроса;
	
КонецФункции

#КонецОбласти

#КонецЕсли
