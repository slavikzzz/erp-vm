#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2021_1";
	Стр.КНД = "1150064";
	Стр.ВерсияФормата = "5.03";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2021_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 18.06.2021 № ЕД-7-21/574@";
	Стр.ДатаНачала = '20220101';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2021_1" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2021_1"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1150064_5.03000_03.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2021_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2021_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2021_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2021_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2021_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2021_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "UT_PRORGLZTRNAL";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2021_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Истина, Титульная, ТаблицаОшибок);
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.СпособИнфРез) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способ информирования", "Титульная", "СпособИнфРез"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	
	ЕстьЗаполненныеЛисты = Ложь;
	Для Каждого Лист0Итер Из Данные.ДанныеМногостраничныхРазделов.Транспорт Цикл
		Лист0 = Лист0Итер.Значение;
		Страница0Заполнена = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист0);
		ТекЗаполнена = Страница0Заполнена;
		Если Страница0Заполнена Тогда 
			ЕстьЗаполненныеЛисты = Истина;
		КонецЕсли;
		Для Каждого Лист1Итер Из Данные.ДанныеМногостраничныхРазделов.ЛьготаДокументТранспорт Цикл
			Лист1 = Лист1Итер.Значение;
			Если Лист1.УИДРодителя <> Лист0.УИД Тогда 
				Продолжить;
			КонецЕсли;
			Страница1Заполнена = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист1);
			Если Не Страница1Заполнена И Не Страница0Заполнена Тогда 
				Продолжить;
			КонецЕсли;
			Если Страница1Заполнена Тогда 
				ЕстьЗаполненныеЛисты = Истина;
			КонецЕсли;
			Если Страница1Заполнена И Не Страница0Заполнена Тогда 
				Страница0Заполнена = Истина;
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена страница", "Транспорт", "ВидТС", Лист0.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Лист1.НаимДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено наименование документа ", "ЛьготаДокументТранспорт", "НаимДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ВыдДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен орган или лицо, выдавшее документ ", "ЛьготаДокументТранспорт", "ВыдДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ДатаДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена дата документа", "ЛьготаДокументТранспорт", "ДатаДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ДатаНачПериод) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена дата начала действия документа", "ЛьготаДокументТранспорт", "ДатаНачПериод", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ПрПериодДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен признак периода", "ЛьготаДокументТранспорт", "ПрПериодДок", Лист1.УИД));
			КонецЕсли;
			Если Лист1.ПрПериодДок = "1" Тогда 
				Если ЗначениеЗаполнено(Лист1.ДатаКонПериод) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"При бессрочном периоде действия дата окончания не указывается", "ЛьготаДокументТранспорт", "ДатаКонПериод", Лист1.УИД));
				КонецЕсли;
			ИначеЕсли Лист1.ПрПериодДок = "2" Тогда 
				Если Не ЗначениеЗаполнено(Лист1.ДатаКонПериод) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена дата окончания действия документа", "ЛьготаДокументТранспорт", "ДатаКонПериод", Лист1.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ТекЗаполнена Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Лист0.ВидТС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен вид транспортного средства", "Транспорт", "ВидТС", Лист0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист0.РегЗнакТС) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен регистрационный знак", "Транспорт", "РегЗнакТС", Лист0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист0.КодНалЛьготТр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налоговой льготы", "Транспорт", "КодНалЛьготТр", Лист0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист0.ДатаНачСр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена дата начала действия льготы", "Транспорт", "ДатаНачСр", Лист0.УИД));
		КонецЕсли;
		
		Если "30200" = Лист0.КодНалЛьготТр Или "40300" = Лист0.КодНалЛьготТр Тогда
			Если ЗначениеЗаполнено(Лист0.ДатаЗакон) Или ЗначениеЗаполнено(Лист0.НомерЗакон) Или ЗначениеЗаполнено(Лист0.СтруктЕдЗакон) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При кодах льготы 30200,40300 сведения о законе не заполняются", "Транспорт", "ДатаЗакон", Лист0.УИД));
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Лист0.ДатаЗакон) Или ЗначениеЗаполнено(Лист0.НомерЗакон) Или ЗначениеЗаполнено(Лист0.СтруктЕдЗакон) Тогда 
				Если Не ЗначениеЗаполнено(Лист0.ДатаЗакон) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена дата закона", "Транспорт", "ДатаЗакон", Лист0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист0.НомерЗакон) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен номер закона", "Транспорт", "НомерЗакон", Лист0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист0.СтруктЕдЗакон) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена структурная единица", "Транспорт", "СтруктЕдЗакон", Лист0.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Лист0.СтруктЕдЗакон) И СтрДлина(СокрЛП(Лист0.СтруктЕдЗакон)) <> 24 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Структурная единица должна иметь длину 24 знака", "Транспорт", "СтруктЕдЗакон", Лист0.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Лист0Итер Из Данные.ДанныеМногостраничныхРазделов.Земля Цикл
		Лист0 = Лист0Итер.Значение;
		Страница0Заполнена = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист0);
		ТекЗаполнена = Страница0Заполнена;
		Если Страница0Заполнена Тогда 
			ЕстьЗаполненныеЛисты = Истина;
		КонецЕсли;
		Для Каждого Лист1Итер Из Данные.ДанныеМногостраничныхРазделов.ЛьготаДокументЗемля Цикл
			Лист1 = Лист1Итер.Значение;
			Если Лист1.УИДРодителя <> Лист0.УИД Тогда 
				Продолжить;
			КонецЕсли;
			Страница1Заполнена = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист1);
			Если Не Страница1Заполнена И Не Страница0Заполнена Тогда 
				Продолжить;
			КонецЕсли;
			Если Страница1Заполнена Тогда 
				ЕстьЗаполненныеЛисты = Истина;
			КонецЕсли;
			Если Страница1Заполнена И Не Страница0Заполнена Тогда 
				Страница0Заполнена = Истина;
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена страница", "Земля", "НомКадастрЗУ", Лист0.УИД));
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(Лист1.НаимДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено наименование документа ", "ЛьготаДокументЗемля", "НаимДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ВыдДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен орган или лицо, выдавшее документ ", "ЛьготаДокументЗемля", "ВыдДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ДатаДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена дата документа", "ЛьготаДокументЗемля", "ДатаДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ПрПериодДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен период действия документа", "ЛьготаДокументЗемля", "ПрПериодДок", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ДатаНачПериод) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена дата начала действия документа", "ЛьготаДокументЗемля", "ДатаНачПериод", Лист1.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист1.ПрПериодДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен признак периода", "ЛьготаДокументЗемля", "ПрПериодДок", Лист1.УИД));
			КонецЕсли;
			Если Лист1.ПрПериодДок = "1" Тогда 
				Если ЗначениеЗаполнено(Лист1.ДатаКонПериод) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"При бессрочном периоде действия дата окончания не указывается", "ЛьготаДокументЗемля", "ДатаКонПериод", Лист1.УИД));
				КонецЕсли;
			ИначеЕсли Лист1.ПрПериодДок = "2" Тогда 
				Если Не ЗначениеЗаполнено(Лист1.ДатаКонПериод) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена дата окончания действия документа", "ЛьготаДокументЗемля", "ДатаКонПериод", Лист1.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если Не ТекЗаполнена Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Лист0.НомКадастрЗУ) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен кадастровый номер земельного участка", "Земля", "НомКадастрЗУ", Лист0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист0.КодНалЛьготЗем) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен код льготы", "Земля", "КодНалЛьготЗем", Лист0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Лист0.ДатаНачСр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена дата начала действия льготы", "Земля", "ДатаНачСр", Лист0.УИД));
		КонецЕсли;
		
		чКодНалЛьготЗем = Данные.ОТЧ.ПривестиЗначение(Лист0.КодНалЛьготЗем);
		Если чКодНалЛьготЗем = 3029000 Или (чКодНалЛьготЗем >= 3021110 И чКодНалЛьготЗем <= 3021198) Тогда
			Если ЗначениеЗаполнено(Лист0.ДатаАкт) Или ЗначениеЗаполнено(Лист0.НомерАкт) Или ЗначениеЗаполнено(Лист0.СтруктЕдАкт) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При коде льготы 3021110-3021198 и 3029000 сведения об акте не заполняются", "Земля", "ДатаАкт", Лист0.УИД));
			КонецЕсли;
		Иначе
			Если ЗначениеЗаполнено(Лист0.ДатаАкт) Или ЗначениеЗаполнено(Лист0.НомерАкт) Или ЗначениеЗаполнено(Лист0.СтруктЕдАкт) Тогда 
				Если Не ЗначениеЗаполнено(Лист0.ДатаАкт) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена дата акта", "Земля", "ДатаАкт", Лист0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист0.НомерАкт) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен номер акта", "Земля", "НомерАкт", Лист0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист0.СтруктЕдАкт) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена структурная единица", "Земля", "СтруктЕдАкт", Лист0.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Лист0.СтруктЕдАкт) И СтрДлина(СокрЛП(Лист0.СтруктЕдАкт)) <> 24 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Структурная единица должна иметь длину 24 знака", "Земля", "СтруктЕдАкт", Лист0.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЕстьЗаполненныеЛисты Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнены сведения о льготах", "Транспорт", "ВидТС", Данные.ДанныеМногостраничныхРазделов.Транспорт[0].Значение.УИД));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2021_1", "СхемаВыгрузкиФорма2021_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2021_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2021_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2021_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2019_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(
		Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, "Печать_Форма2019_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	НомСтр = 1;
	НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, "Печать_Форма2019_1_Транспорт", "Транспорт", "ЛьготаДокументТранспорт");
	НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, "Печать_Форма2019_1_Земля", "Земля", "ЛьготаДокументЗемля");
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2021_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(
		Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, "Печать_Форма2021_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	НомСтр = 1;
	НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, "Печать_Форма2021_1_Транспорт", "Транспорт", "ЛьготаДокументТранспорт");
	НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, "Печать_Форма2021_1_Земля", "Земля", "ЛьготаДокументЗемля");
	Возврат Листы;
КонецФункции

Процедура НапечататьЛистыСвед(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, ИмяМакетаПФ, ДанныеУровень0, ДанныеУровень1)
	Попытка
		МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(ИмяМакетаПФ);
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ТекИнд = 1;
	Для Каждого Элт0 Из СтруктураПараметров.ДанныеМногостраничныхРазделов[ДанныеУровень0] Цикл
		Свед0 = Элт0.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Свед0) Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого Элт1 Из СтруктураПараметров.ДанныеМногостраничныхРазделов[ДанныеУровень1] Цикл
			Свед1 = Элт1.Значение;
			Если Свед1.УИДРодителя <> Свед0.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("", Свед0, НомСтр, ИмяМакетаПФ, ПечатнаяФорма, ИННКПП, Ложь);
			УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру("", Свед1, 0, ИмяМакетаПФ, ПечатнаяФорма, ИННКПП, Ложь);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
#КонецЕсли
