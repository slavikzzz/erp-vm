#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если НаДату >= '20090101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	ИначеЕсли НаДату >= '20050101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия300;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2009Кв1";
	НоваяФорма.ОписаниеОтчета     = "Утверждена приказом Минфина РФ от 22.06.2009 № 58н.";
	НоваяФорма.РедакцияФормы      = "от 22.06.2009 № 58н.";
	НоваяФорма.ДатаНачалоДействия = '20090101';
	НоваяФорма.ДатаКонецДействия  = '20101231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2009Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Утверждена приказом Минфина РФ от 22.06.2009 № 58н (в ред. приказа Минфина РФ от 20.04.2011 № 48н).";
	НоваяФорма.РедакцияФормы      = "от 20.04.2011 № 48н.";
	НоваяФорма.ДатаНачалоДействия = '20110101';
	НоваяФорма.ДатаКонецДействия  = '20131231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2024Кв1";
	НоваяФорма.ОписаниеОтчета     = "Утверждена приказом ФНС России от 02.10.2024 № ЕД-7-3/813@.";
	НоваяФорма.РедакцияФормы      = "от 02.10.2024 № ЕД-7-3/813@.";
	НоваяФорма.ДатаНачалоДействия = '20240101';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2023Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Утверждена приказом ФНС России от 25.12.2020 № ЕД-7-3/958@ (в ред. приказа ФНС России от 01.11.2022 № ЕД-7-3/1036@).";
	НоваяФорма.РедакцияФормы      = "от 01.11.2022 № ЕД-7-3/1036@.";
	НоваяФорма.ДатаНачалоДействия = '20230101';
	НоваяФорма.ДатаКонецДействия  = '20231231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2021Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 25.12.2020 № ЕД-7-3/958@.";
	НоваяФорма.РедакцияФормы      = "от 25.12.2020 № ЕД-7-3/958@.";
	НоваяФорма.ДатаНачалоДействия = '20200101';
	НоваяФорма.ДатаКонецДействия  = '20231231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2015Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 26.02.2016 № ММВ-7-3/99@.";
	НоваяФорма.РедакцияФормы      = "от 26.02.2016 № ММВ-7-3/99@.";
	НоваяФорма.ДатаНачалоДействия = '20150101';
	НоваяФорма.ДатаКонецДействия  = '20211231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2014Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 04.07.2014 № ММВ-7-3/352@.";
	НоваяФорма.РедакцияФормы      = "от 04.07.2014 № ММВ-7-3/352@.";
	НоваяФорма.ДатаНачалоДействия = '20140101';
	НоваяФорма.ДатаКонецДействия  = '20151231';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета) Экспорт
	
	ТаблицаДанныхРеглОтчета = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	
	Период = ЭкземплярРеглОтчета.ДатаОкончания;
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2024Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2023Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2014Кв1" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ТаблицаДанныхРеглОтчета;
		КонецЕсли;
		
		// Раздел 1.1.
		Если ДанныеРеглОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел11") Тогда
			
			НалогКУплате11 = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел11;
			
			// Коды ОКТМО.
			КодСтрокиОКТМО11_010 = "П000110001003";
			КодСтрокиОКТМО11_030 = "П000110003003";
			КодСтрокиОКТМО11_060 = "П000110006003";
			КодСтрокиОКТМО11_090 = "П000110009003";
			
			Если ЗначениеЗаполнено(НалогКУплате11[КодСтрокиОКТМО11_090]) Тогда
				ОКТМО11 = НалогКУплате11[КодСтрокиОКТМО11_090];
			ИначеЕсли ЗначениеЗаполнено(НалогКУплате11[КодСтрокиОКТМО11_060]) Тогда
				ОКТМО11 = НалогКУплате11[КодСтрокиОКТМО11_060];
			ИначеЕсли ЗначениеЗаполнено(НалогКУплате11[КодСтрокиОКТМО11_030]) Тогда
				ОКТМО11 = НалогКУплате11[КодСтрокиОКТМО11_030];
			Иначе
				ОКТМО11 = НалогКУплате11[КодСтрокиОКТМО11_010];
			КонецЕсли;
			
			КодСтрокиСуммаПодлежащаяДоплате11 = "П000110010003"; //сумма налога, подлежащая доплате
			
			Если ЗначениеЗаполнено(НалогКУплате11[КодСтрокиСуммаПодлежащаяДоплате11]) Тогда
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.ВидНалога = Перечисления.ВидыНалогов.УСН_Доходы;
				Сумма.Период = Период;
				Сумма.ОКАТО  = ОКТМО11;
				Сумма.Сумма  = НалогКУплате11[КодСтрокиСуммаПодлежащаяДоплате11];
			КонецЕсли;
			
		КонецЕсли;
		
		// Раздел 1.2.
		Если ДанныеРеглОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел12") Тогда
			
			НалогКУплате12 = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел12;
			
			// Коды ОКТМО.
			КодСтрокиОКТМО12_010 = "П000120001003";
			КодСтрокиОКТМО12_030 = "П000120003003";
			КодСтрокиОКТМО12_060 = "П000120006003";
			КодСтрокиОКТМО12_090 = "П000120009003";
			
			Если ЗначениеЗаполнено(НалогКУплате12[КодСтрокиОКТМО12_090]) Тогда
				ОКТМО12 = НалогКУплате12[КодСтрокиОКТМО12_090];
			ИначеЕсли ЗначениеЗаполнено(НалогКУплате12[КодСтрокиОКТМО12_060]) Тогда
				ОКТМО12 = НалогКУплате12[КодСтрокиОКТМО12_060];
			ИначеЕсли ЗначениеЗаполнено(НалогКУплате12[КодСтрокиОКТМО12_030]) Тогда
				ОКТМО12 = НалогКУплате12[КодСтрокиОКТМО12_030];
			Иначе
				ОКТМО12 = НалогКУплате12[КодСтрокиОКТМО12_010];
			КонецЕсли;
			
			КодСтрокиСуммаПодлежащаяДоплате12 = "П000120010003"; //сумма налога, подлежащая доплате
			
			Если ЗначениеЗаполнено(НалогКУплате12[КодСтрокиСуммаПодлежащаяДоплате12]) Тогда
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.ВидНалога = Перечисления.ВидыНалогов.УСН_ДоходыМинусРасходы;
				Сумма.Период = Период;
				Сумма.ОКАТО  = ОКТМО12;
				Сумма.Сумма  = НалогКУплате12[КодСтрокиСуммаПодлежащаяДоплате12];
			КонецЕсли;
			
			КодСтрокиСуммаМинНалога12 = "П000120012003"; //сумма мин. налога, подлежащая уплате
			
			Если ЗначениеЗаполнено(НалогКУплате12[КодСтрокиСуммаМинНалога12]) Тогда
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.ВидНалога = Перечисления.ВидыНалогов.УСН_ДоходыМинусРасходы;
				Сумма.Период = Период;
				Сумма.ОКАТО  = ОКТМО12;
				Сумма.Сумма  = НалогКУплате12[КодСтрокиСуммаМинНалога12];
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2009Кв1" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ТаблицаДанныхРеглОтчета;
		КонецЕсли;
		
		// Раздел 1.
		// 010 - код ОКАТО
		// 020 - КБК налога
		// 060 - сумма
		// 080 - КБК минимального налога
		// 090 - сумма минимального налога
		
		Если ДанныеРеглОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1") Тогда
			
			НалогКУплате = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
			
			КодСтрокиОКАТО                   = "П000010002003";
			КодСтрокиКБК                     = "П000010002003";
			КодСтрокиСумма                   = "П000010006003";
			КодСтрокиКБКМинимальногоНалога   = "П000010008003";
			КодСтрокиСуммаМинимальногоНалога = "П000010009003";
			
			// Налог.
			Сумма = ТаблицаДанныхРеглОтчета.Добавить();
			Сумма.Период = Период;
			Сумма.ОКАТО  = НалогКУплате[КодСтрокиОКАТО];
			Сумма.КБК    = НалогКУплате[КодСтрокиКБК];
			Сумма.Сумма  = НалогКУплате[КодСтрокиСумма];
			
			// Минимальный налог.
			Сумма = ТаблицаДанныхРеглОтчета.Добавить();
			Сумма.Период = Период;
			Сумма.ОКАТО  = НалогКУплате[КодСтрокиОКАТО];
			Сумма.КБК    = НалогКУплате[КодСтрокиКБКМинимальногоНалога];
			Сумма.Сумма  = НалогКУплате[КодСтрокиСуммаМинимальногоНалога];
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20090101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20090622', "58н", "ФормаОтчета2009Кв1", , '20101231');
	ОпределитьФорматВДеревеФормИФорматов(Форма20090101, "5.01", , , , '20101231');
	
	Форма20110101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20110420', "48н", "ФормаОтчета2009Кв1", '20110101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20110101, "5.02", , , '2011-01-01', '2012-12-31');
	ОпределитьФорматВДеревеФормИФорматов(Форма20110101, "5.03", , , '2013-01-01', '2013-12-31');
	
	Форма20140101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20140704', "ММВ-7-3/352@", "ФормаОтчета2014Кв1", '20140101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20140101, "5.04", , , '2014-01-01');
	
	Форма20150101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20160226', "ММВ-7-3/99@", "ФормаОтчета2015Кв1", '20150101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20150101, "5.05", , , '2015-01-01');
	
	Форма20210101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20201225', "ЕД-7-3/958@", "ФормаОтчета2021Кв1", '20200101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20210101, "5.06", , , '2020-01-01');
	
	Форма20230101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20221101', "ЕД-7-3/1036@", "ФормаОтчета2023Кв1", '20230101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20230101, "5.07", , , '2023-01-01');
	
	Форма20240101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1152017", '20241002', "ЕД-7-3/813@", "ФормаОтчета2024Кв1", '20240101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20240101, "5.08", , , '2024-01-01');
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СформироватьАвтоматическиРеглОтчет(КорректирующийОтчет = Ложь, ИмяФормыОтчета = Неопределено, ПараметрыАвтоФормирования = Неопределено) Экспорт
	Если ИмяФормыОтчета = "ФормаОтчета2024Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыАвтоФормирования, КорректирующийОтчет);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2023Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоФормирования, КорректирующийОтчет);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2021Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоФормирования, КорректирующийОтчет);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2015Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоФормирования, КорректирующийОтчет);
	КонецЕсли;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "",
			ИмяОбъекта = "", ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

#КонецОбласти

#Область ПоказателиОценкиРискаВыезднойНалоговойПроверки

Процедура ПоказателиОценкиРискаВыезднойНалоговойПроверки(ТаблицаПоказателей, ОписаниеОтчета) Экспорт 
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2024Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2023Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв1" Тогда
		
		Раздел11 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел11;
		Раздел21 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел21;
		
		Раздел12 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел12;
		Раздел22 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22;
		
		ЗаполненРаздел11 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110010103"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110011003")) Тогда
			ЗаполненРаздел11 = Истина;
		КонецЕсли;
		
		ЗаполненРаздел12 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120010103"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120011003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120012003")) Тогда
			ЗаполненРаздел12 = Истина;
		КонецЕсли;
		
		Если ЗаполненРаздел11 И НЕ ЗаполненРаздел12 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110013303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110014303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		ИначеЕсли ЗаполненРаздел12 И НЕ ЗаполненРаздел11 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220022303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = Макс(РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220028003"),
									  РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220027303"));
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		Иначе
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
		КонецЕсли;
		
	ИначеЕсли ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		Раздел11 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел11;
		Раздел21 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел21;
		
		Раздел12 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел12;
		Раздел22 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22;
		
		ЗаполненРаздел11 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110011003")) Тогда
			ЗаполненРаздел11 = Истина;
		КонецЕсли;
		
		ЗаполненРаздел12 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120011003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120012003")) Тогда
			ЗаполненРаздел12 = Истина;
		КонецЕсли;
		
		Если ЗаполненРаздел11 И НЕ ЗаполненРаздел12 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110013303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П002110014303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		ИначеЕсли ЗаполненРаздел12 И НЕ ЗаполненРаздел11 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220022303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = Макс(РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220028003"),
									  РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220027303"));
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		Иначе
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
		КонецЕсли;
		
	ИначеЕсли ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2014Кв1" Тогда
		
		Раздел11 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел11;
		Раздел21 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел21;
		
		Раздел12 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел12;
		Раздел22 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел22;
		
		ЗаполненРаздел11 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел11, "П000110011003")) Тогда
			ЗаполненРаздел11 = Истина;
		КонецЕсли;
		
		ЗаполненРаздел12 = Ложь;
		Если ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120002003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120004003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120005003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120007003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120008003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120010003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120011003"))
		 ИЛИ ЗначениеЗаполнено(РегламентированнаяОтчетность.ПоказательОтчета(Раздел12, "П000120012003")) Тогда
			ЗаполненРаздел12 = Истина;
		КонецЕсли;
		
		Если ЗаполненРаздел11 И НЕ ЗаполненРаздел12 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П000210011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П000210011303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П000210013303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел21, "П000210014303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		ИначеЕсли ЗаполненРаздел12 И НЕ ЗаполненРаздел11 Тогда
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220021303")
							   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220022303");
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = Макс(РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220028003"),
									  РегламентированнаяОтчетность.ПоказательОтчета(Раздел22, "П000220027303"));
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		Иначе
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаУСН";
			НоваяСтрока.ЗначениеПоказателя = 0;
			
		КонецЕсли;
		
	Иначе
		
		Раздел1 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		Раздел2 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел2;
		
		Если РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000010000103") = "1" Тогда
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020021003");
			
		ИначеЕсли РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000010000103") = "2" Тогда
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020021003")
			                   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020022003");
			
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаПрибылиУСН";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Если РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000010000103") = "1" Тогда
			ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020026003") - РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020028003");
			
		ИначеЕсли РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000010000103") = "2" Тогда
			ЗначениеПоказателя = Макс(РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020026003"), РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020027003"));
			
		КонецЕсли;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаУСН";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел2, "П000020021003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовУСН";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииАвтоФормированияФормыУСН

Функция СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = НовыйРазделыРеглОтчетаУСНФормаОтчета2024Кв1();
	
	ЗаполнитьРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыАвтоформирования.Организация,
		РазделыОтчета,
		ДанныеРеглОтчета.ДатаПодписи,
		ПараметрыАвтоформирования.ДатаОкончания);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьНачальныеНастройки(ПараметрыАвтоформирования.ИсточникОтчета,
		ПараметрыАвтоформирования.ИмяФормыОтчета,
		"СоставПоказателей2024Кв1",
		СтруктураВариантыЗаполнения);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2024Кв1(ДеревоСтраницОтчета);
	
	СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2024Кв1(
		РазделыОтчета.Титульный.Данные.ОбНал, ДеревоСтраницОтчета);
	
	ВключитьПечатьЗаполненногоНеобязательногоРаздела("Раздел3", РазделыОтчета.Раздел3.Данные, ДеревоСтраницОтчета);
	ВключитьПечатьЗаполненногоНеобязательногоРаздела("Раздел4", РазделыОтчета.Раздел4.Данные, ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы","01/01/2024");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ПечатьБезШтрихкодаРазрешена", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("ДанныеРеглОтчета", ДанныеРеглОтчета);
	ПараметрыЗаписи.Вставить("СсылкаНаСохрРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыАвтоформирования.АдресВременногоХранилищаРасшифровки);
	
	Возврат ЗаписатьРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыЗаписи);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = НовыйРазделыРеглОтчетаУСНФормаОтчета2023Кв1();
	
	ЗаполнитьРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоформирования.Организация,
		РазделыОтчета,
		ДанныеРеглОтчета.ДатаПодписи,
		ПараметрыАвтоформирования.ДатаОкончания);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьНачальныеНастройки(ПараметрыАвтоформирования.ИсточникОтчета,
		ПараметрыАвтоформирования.ИмяФормыОтчета,
		"СоставПоказателей2023Кв1",
		СтруктураВариантыЗаполнения);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2023Кв1(ДеревоСтраницОтчета);
	
	СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоформирования.Организация,
		ПараметрыАвтоформирования.ДатаОкончания,
		ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы","01/01/2023");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ПечатьБезШтрихкодаРазрешена", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("ДанныеРеглОтчета", ДанныеРеглОтчета);
	ПараметрыЗаписи.Вставить("СсылкаНаСохрРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыАвтоформирования.АдресВременногоХранилищаРасшифровки);
	
	Возврат ЗаписатьРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыЗаписи);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = НовыйРазделыРеглОтчетаУСНФормаОтчета2021Кв1();
	
	ЗаполнитьРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоформирования.Организация,
		РазделыОтчета,
		ДанныеРеглОтчета.ДатаПодписи,
		ПараметрыАвтоформирования.ДатаОкончания);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьНачальныеНастройки(ПараметрыАвтоформирования.ИсточникОтчета,
		ПараметрыАвтоформирования.ИмяФормыОтчета,
		"СоставПоказателей2021Кв1",
		СтруктураВариантыЗаполнения);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2021Кв1(ДеревоСтраницОтчета);
	
	СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоформирования.Организация,
		ПараметрыАвтоформирования.ДатаОкончания,
		ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы","01/01/2021");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ПечатьБезШтрихкодаРазрешена", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("ДанныеРеглОтчета", ДанныеРеглОтчета);
	ПараметрыЗаписи.Вставить("СсылкаНаСохрРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыАвтоформирования.АдресВременногоХранилищаРасшифровки);
	
	Возврат ЗаписатьРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыЗаписи);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоформирования, КорректирующийОтчет)
	
	РазделыОтчета = НовыйРазделыРеглОтчетаУСНФормаОтчета2015Кв1();
	
	ЗаполнитьРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета);
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоформирования.Организация,
		РазделыОтчета,
		ДанныеРеглОтчета.ДатаПодписи,
		ПараметрыАвтоформирования.ДатаОкончания);
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьНачальныеНастройки(ПараметрыАвтоформирования.ИсточникОтчета,
		ПараметрыАвтоформирования.ИмяФормыОтчета,
		"СоставПоказателей2015Кв1",
		СтруктураВариантыЗаполнения);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2015Кв1(ДеревоСтраницОтчета);
	
	СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоформирования.Организация,
		ПараметрыАвтоформирования.ДатаОкончания,
		ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы","01/04/2016");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ПечатьБезШтрихкодаРазрешена", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ПараметрыАвтоформирования.ИсточникОтчета);
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", ПараметрыАвтоформирования.ИмяФормыОтчета);
	ПараметрыЗаписи.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыЗаписи.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыОтчета);
	ПараметрыЗаписи.Вставить("ДанныеРеглОтчета", ДанныеРеглОтчета);
	ПараметрыЗаписи.Вставить("СсылкаНаСохрРеглОтчет", ПараметрыАвтоформирования.СсылкаНаСохрРеглОтчет);
	ПараметрыЗаписи.Вставить("Ошибки", ПараметрыАвтоформирования.Ошибки);
	ПараметрыЗаписи.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыАвтоформирования.АдресВременногоХранилищаРасшифровки);
	
	Возврат ЗаписатьРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыЗаписи);
	
КонецФункции

Функция НовыйРазделыРеглОтчетаУСНФормаОтчета2024Кв1()
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел3", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000101",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000102",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000103",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000105",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел11", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел12", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел21", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел22", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел3, "П0000300001"));
	
	РазделыОтчета.Вставить("Раздел4", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция НовыйРазделыРеглОтчетаУСНФормаОтчета2023Кв1()
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел3", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000101",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000102",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000103",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000105",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел11", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел12", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел21", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел22", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел3, "П0000300001"));
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция НовыйРазделыРеглОтчетаУСНФормаОтчета2021Кв1()
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел3", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000101",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000102",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000103",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000105",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел11", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел12", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел21", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел22", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел3, "П0000300001"));
	
	Возврат РазделыОтчета;
	
КонецФункции

Функция НовыйРазделыРеглОтчетаУСНФормаОтчета2015Кв1()
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел3", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000101",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(3)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000102",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000103",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000104",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000105",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000106",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Колонки.Добавить("П000030000107",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(14, 2, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел3.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел11", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел12", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел21", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел22", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел3, "П0000300001"));
	
	Возврат РазделыОтчета;
	
КонецФункции

Процедура ЗаполнитьРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета)
	
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИП", ЭтоИП);
	ДопПараметры.Вставить("ОпределятьТрудНаемныхРабочих", ЭтоИП);
	ДопПараметры.Вставить("ИПИспользуетТрудНаемныхРаботников",
		РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация,
			ПараметрыАвтоформирования.ДатаНачала, ПараметрыАвтоформирования.ДатаОкончания));
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	
	ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", Новый УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВременногоХранилищаРасшифровки");
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Раздел11", РазделыОтчета.Раздел11.Данные);
	Контейнер.Вставить("Раздел12", РазделыОтчета.Раздел12.Данные);
	Контейнер.Вставить("Раздел21", РазделыОтчета.Раздел21.Данные);
	Контейнер.Вставить("Раздел22", РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел3",  РазделыОтчета.Раздел3.Данные);
	Контейнер.Вставить("Раздел3_ДанныеДопСтрок", РазделыОтчета.Раздел3.ДанныеДопСтрок);
	Контейнер.Вставить("Раздел4",  РазделыОтчета.Раздел4.Данные);
	
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
		
	Иначе
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
			ИсточникОтчета,
			ИмяФормыОтчета,
			ПараметрыОтчета,
			Контейнер);
			
	КонецЕсли;
	
	Если РазделыОтчета.Раздел3.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел3.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ЗаполнитьСтруктуруДанныхРазделаЗначениямиИзДопСтрок(
	Контейнер.Раздел3, Контейнер.Раздел3_ДанныеДопСтрок);
	
	ОтчетныйГод = Формат(Год(ПараметрыАвтоформирования.ДатаОкончания), "ЧГ=");
	Если ОтчетныйГод <> "2025" Тогда
		Контейнер.Раздел4.Вставить("П000040006403", 0);
	КонецЕсли;
	
	ПараметрыАвтоформирования.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
	РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "", ДопПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета)
	
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИП", ЭтоИП);
	ДопПараметры.Вставить("ОпределятьТрудНаемныхРабочих", ЭтоИП);
	ДопПараметры.Вставить("ИПИспользуетТрудНаемныхРаботников",
		РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация,
			ПараметрыАвтоформирования.ДатаНачала, ПараметрыАвтоформирования.ДатаОкончания));
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	
	ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", Новый УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВременногоХранилищаРасшифровки");
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Раздел11", РазделыОтчета.Раздел11.Данные);
	Контейнер.Вставить("Раздел12", РазделыОтчета.Раздел12.Данные);
	Контейнер.Вставить("Раздел21", РазделыОтчета.Раздел21.Данные);
	Контейнер.Вставить("Раздел22", РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел3",  РазделыОтчета.Раздел3.Данные);
	Контейнер.Вставить("Раздел3_ДанныеДопСтрок", РазделыОтчета.Раздел3.ДанныеДопСтрок);
	
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
		
	Иначе
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
			ИсточникОтчета,
			ИмяФормыОтчета,
			ПараметрыОтчета,
			Контейнер);
			
	КонецЕсли;
	
	Если РазделыОтчета.Раздел3.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел3.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ЗаполнитьСтруктуруДанныхРазделаЗначениямиИзДопСтрок(
	Контейнер.Раздел3, Контейнер.Раздел3_ДанныеДопСтрок);
	
	ПараметрыАвтоформирования.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
	РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "", ДопПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета)
	
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИП", ЭтоИП);
	ДопПараметры.Вставить("ОпределятьТрудНаемныхРабочих", ЭтоИП);
	ДопПараметры.Вставить("ИПИспользуетТрудНаемныхРаботников",
		РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация,
			ПараметрыАвтоформирования.ДатаНачала, ПараметрыАвтоформирования.ДатаОкончания));
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	
	ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", Новый УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВременногоХранилищаРасшифровки");
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Раздел11", РазделыОтчета.Раздел11.Данные);
	Контейнер.Вставить("Раздел12", РазделыОтчета.Раздел12.Данные);
	Контейнер.Вставить("Раздел21", РазделыОтчета.Раздел21.Данные);
	Контейнер.Вставить("Раздел22", РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел3",  РазделыОтчета.Раздел3.Данные);
	Контейнер.Вставить("Раздел3_ДанныеДопСтрок", РазделыОтчета.Раздел3.ДанныеДопСтрок);
	
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
		
	Иначе
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
			ИсточникОтчета,
			ИмяФормыОтчета,
			ПараметрыОтчета,
			Контейнер);
			
	КонецЕсли;
	
	Если РазделыОтчета.Раздел3.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел3.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ЗаполнитьСтруктуруДанныхРазделаЗначениямиИзДопСтрок(
	Контейнер.Раздел3, Контейнер.Раздел3_ДанныеДопСтрок);
	
	ПараметрыАвтоформирования.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
	РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "", ДопПараметры);
	
КонецПроцедуры

Процедура ЗаполнитьРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыАвтоформирования, КорректирующийОтчет, РазделыОтчета)
	
	ИсточникОтчета = ПараметрыАвтоформирования.ИсточникОтчета;
	ИмяФормыОтчета = ПараметрыАвтоформирования.ИмяФормыОтчета;
	
	Организация = ПараметрыАвтоформирования.Организация;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	ДопПараметры = Новый Структура;
	ДопПараметры.Вставить("ИП", ЭтоИП);
	ДопПараметры.Вставить("ОпределятьТрудНаемныхРабочих", ЭтоИП);
	ДопПараметры.Вставить("ИПИспользуетТрудНаемныхРаботников",
		РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация,
			ПараметрыАвтоформирования.ДатаНачала, ПараметрыАвтоформирования.ДатаОкончания));
	ДопПараметры.Вставить("ДатаНачала", ПараметрыАвтоформирования.ДатаНачала);
	ДопПараметры.Вставить("ДатаОкончания", ПараметрыАвтоформирования.ДатаОкончания);
	
	ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", ПараметрыАвтоформирования.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", ПараметрыАвтоформирования.ДатаНачала);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета", ПараметрыАвтоформирования.ДатаОкончания);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", Новый УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВременногоХранилищаРасшифровки");
	
	Контейнер = Новый Структура;
	Контейнер.Вставить("Раздел11", РазделыОтчета.Раздел11.Данные);
	Контейнер.Вставить("Раздел12", РазделыОтчета.Раздел12.Данные);
	Контейнер.Вставить("Раздел21", РазделыОтчета.Раздел21.Данные);
	Контейнер.Вставить("Раздел22", РазделыОтчета.Раздел22.Данные);
	Контейнер.Вставить("Раздел3",  РазделыОтчета.Раздел3.Данные);
	Контейнер.Вставить("Раздел3_ДанныеДопСтрок", РазделыОтчета.Раздел3.ДанныеДопСтрок);
	
	Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
		
		ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
		
	Иначе
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
			ИсточникОтчета,
			ИмяФормыОтчета,
			ПараметрыОтчета,
			Контейнер);
			
	КонецЕсли;
	
	Если РазделыОтчета.Раздел3.ДанныеДопСтрок.Количество() = 0 Тогда
		РазделыОтчета.Раздел3.ДанныеДопСтрок.Добавить();
	КонецЕсли;
	
	РегламентированнаяОтчетность.ЗаполнитьСтруктуруДанныхРазделаЗначениямиИзДопСтрок(
	Контейнер.Раздел3, Контейнер.Раздел3_ДанныеДопСтрок);
	
	ПараметрыАвтоформирования.Вставить("АдресВременногоХранилищаРасшифровки",
		ПараметрыОтчета.АдресВременногоХранилищаРасшифровки);
	
	РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "", ДопПараметры);
	
КонецПроцедуры

Процедура РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, ИмяРаздела = "", ДопПараметры)
	
	ДанныеРаздел11 = РазделыОтчета.Раздел11.Данные;
	ДанныеРаздел12 = РазделыОтчета.Раздел12.Данные;
	ДанныеРаздел21 = РазделыОтчета.Раздел21.Данные;
	ДанныеРаздел22 = РазделыОтчета.Раздел22.Данные;
	ДанныеРаздел3  = РазделыОтчета.Раздел3.Данные;
	ДанныеРаздел4  = РазделыОтчета.Раздел4.Данные;
	
	ОбНал = СокрЛП(РазделыОтчета.Титульный.Данные["ОбНал"]);
	
	Если ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "Раздел3",  ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "Раздел22", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "Раздел21", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "Раздел12", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2024Кв1(РазделыОтчета, "Раздел11", ДопПараметры);
		
	ИначеЕсли ИмяРаздела = "Раздел11" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.1 рассчитываются по данным разделов 2.1 и 4.
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		Окр_П000040006303 = ?(ОбНал = "1", Окр(ДанныеРаздел4["П000040006303"]), 0);
		Окр_П002110013303 = Окр(ДанныеРаздел21["П002110013303"]);
		Окр_П002110014303 = Окр(ДанныеРаздел21["П002110014303"]);
		Окр_П002120016303 = Окр(ДанныеРаздел21["П002120016303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303 - Окр_П002120016303
		- Окр_П000040006303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003) - Окр_П000110010103));
		
	ИначеЕсли ИмяРаздела = "Раздел12" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.2 рассчитываются по данным разделов 2.2 и 4.
		
		Окр_П000040006303 = ?(ОбНал = "2", Окр(ДанныеРаздел4["П000040006303"]), 0);
		Окр_П000220027303 = Окр(ДанныеРаздел22["П000220027303"]);
		Окр_П000220028003 = Окр(ДанныеРаздел22["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070
		// - стр. 080) - стр. 101, если стр. 273 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070
		// - стр. 080) - стр. 101 >= 0 и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - Окр_П000040006303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070
		// - стр. 080) - стр. 101, если стр. 280 разд. 2.2 > стр. 273 разд. 2.2 и стр. 280 разд. 2.2 - стр. 063 разд. 4
		// > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - Окр_П000040006303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда
		
		ДанРазд = ДанныеРаздел21;
		
		// Расчет данных в подразделе 2.1.1 раздела 2.1.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П002110012003"] = 8 ИЛИ ДанРазд["П002110012103"] = 8
			ИЛИ ДанРазд["П002110012203"] = 8 ИЛИ ДанРазд["П002110012303"] = 8 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П002110010103", ПризнакСтавки);
		
		// Для стр. 101 = "1": стр. 130 = стр. 110 х стр. 120 / 100.
		// Для стр. 101 = "2": стр. 130 = стр. 110 х стр. 120 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002110013003", Макс(0,
			Окр(Окр(ДанРазд["П002110011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002110013003", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 131 = стр. 111 х стр. 121 / 100.
		// Для стр. 101 = "2":
		// стр. 131 = стр. 111 х стр. 121 / 100, если стр. 121 = стр. 120;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 / 100, если стр. 121 > стр. 120 и стр. 111 >= стр. 110;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 / 100, если стр. 121 > стр. 120 и стр. 111 < стр. 110;
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013103", Макс(0,
			Окр(Окр(ДанРазд["П002110011103"]) * ДанРазд["П002110012103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011103"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013103", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 132 = стр. 112 х стр. 122 / 100.
		// Для стр. 101 = "2":
		// стр. 132 = стр. 112 х стр. 122 / 100, если стр. 122 = стр. 120;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 / 100, если стр. 122 > стр. 121 и стр. 112 >= стр. 111;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 / 100, если стр. 122 > стр. 121 и стр. 112 < стр. 111;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 / 100,
		// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 >= стр. 110;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 / 100,
		// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013203", Макс(0,
			Окр(Окр(ДанРазд["П002110011203"]) * ДанРазд["П002110012203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013203", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 133 = стр. 113 х стр. 123 / 100.
		// Для стр. 101 = "2":
		// стр. 133 = стр. 113 х стр. 123 / 100, если стр. 123 = стр. 120;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 / 100, если стр. 123 > стр. 122 и стр. 113 >= стр. 112;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 / 100, если стр. 123 > стр. 122 и стр. 113 < стр. 112;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 / 100,
		// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 >= стр. 111;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 / 100,
		// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 < стр. 111;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 / 100,
		// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 >= стр. 110;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 / 100,
		// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013303", Макс(0,
			Окр(Окр(ДанРазд["П002110011303"]) * ДанРазд["П002110012303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013303", 0);
		КонецЕсли;
		
		// Расчет данных в подразделе 2.1.2 раздела 2.1.
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002120013003", Макс(0,
			Окр(Окр(ДанРазд["П002120011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002120013003", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100, если стр. 121 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 разд. 2.1.1 / 100,
		// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 >= стр. 110;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 разд. 2.1.1 / 100,
		// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013103", Макс(0,
			Окр(Окр(ДанРазд["П002120011103"]) * ДанРазд["П002110012103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011103"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013103", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 разд. 2.1.1 / 100,
		// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 >= стр. 111;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 разд. 2.1.1 / 100,
		// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 < стр. 111;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 >= стр. 110;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013203", Макс(0,
			Окр(Окр(ДанРазд["П002120011203"]) * ДанРазд["П002110012203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013203", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 разд. 2.1.1 / 100,
		// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 >= стр. 112;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 разд. 2.1.1 / 100,
		// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 < стр. 112;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 >= стр. 111;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 < стр. 111;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 >= стр. 110;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013303", Макс(0,
			Окр(Окр(ДанРазд["П002120011303"]) * ДанРазд["П002110012303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013303", 0);
		КонецЕсли;
		
		// Стр. 160 = стр. 130 - стр. 140, если стр. 130 - стр. 140 < стр. 150.
		// Стр. 160 = стр. 150, если стр. 130 - стр. 140 >= стр. 150.
		ДанРазд.Вставить("П002120016003", Мин(Окр(ДанРазд["П002120013003"])
		- Окр(ДанРазд["П002120014003"]), Окр(ДанРазд["П002120015003"])));
		
		// Стр. 161 = стр. 131 - стр. 141, если стр. 131 - стр. 141 < стр. 151.
		// Стр. 161 = стр. 151, если стр. 131 - стр. 141 >= стр. 151.
		ДанРазд.Вставить("П002120016103", Мин(Окр(ДанРазд["П002120013103"])
		- Окр(ДанРазд["П002120014103"]), Окр(ДанРазд["П002120015103"])));
		
		// Стр. 162 = стр. 132 - стр. 142, если стр. 132 - стр. 142 < стр. 152.
		// Стр. 162 = стр. 152, если стр. 132 - стр. 142 >= стр. 152.
		ДанРазд.Вставить("П002120016203", Мин(Окр(ДанРазд["П002120013203"])
		- Окр(ДанРазд["П002120014203"]), Окр(ДанРазд["П002120015203"])));
		
		// Стр. 163 = стр. 133 - стр. 143, если стр. 133 - стр. 143 < стр. 153.
		// Стр. 163 = стр. 153, если стр. 133 - стр. 143 >= стр. 153.
		ДанРазд.Вставить("П002120016303", Мин(Окр(ДанРазд["П002120013303"])
		- Окр(ДанРазд["П002120014303"]), Окр(ДанРазд["П002120015303"])));
		
		// Расчет данных раздела 1.1. по данным разделов 2.1 и 4.
		
		Окр_П002110013003 = Окр(ДанРазд["П002110013003"]);
		Окр_П002110013103 = Окр(ДанРазд["П002110013103"]);
		Окр_П002110013203 = Окр(ДанРазд["П002110013203"]);
		Окр_П002110013303 = Окр(ДанРазд["П002110013303"]);
		Окр_П002110014003 = Окр(ДанРазд["П002110014003"]);
		Окр_П002110014103 = Окр(ДанРазд["П002110014103"]);
		Окр_П002110014203 = Окр(ДанРазд["П002110014203"]);
		Окр_П002110014303 = Окр(ДанРазд["П002110014303"]);
		Окр_П002120016003 = Окр(ДанРазд["П002120016003"]);
		Окр_П002120016103 = Окр(ДанРазд["П002120016103"]);
		Окр_П002120016203 = Окр(ДанРазд["П002120016203"]);
		Окр_П002120016303 = Окр(ДанРазд["П002120016303"]);
		
		Окр_П000040006003 = ?(ОбНал = "1", Окр(ДанныеРаздел4["П000040006003"]), 0);
		Окр_П000040006103 = ?(ОбНал = "1", Окр(ДанныеРаздел4["П000040006103"]), 0);
		Окр_П000040006203 = ?(ОбНал = "1", Окр(ДанныеРаздел4["П000040006203"]), 0);
		Окр_П000040006303 = ?(ОбНал = "1", Окр(ДанныеРаздел4["П000040006303"]), 0);
		
		// Стр. 020 разд. 1.1 = (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2 - стр. 060 разд. 4,
		// если (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2 - стр. 060 разд. 4 >= 0.
		ДанныеРаздел11.Вставить("П000110002003",
			Макс(0, Окр_П002110013003 - Окр_П002110014003 - Окр_П002120016003 - Окр_П000040006003));
		
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		
		// Стр. 040 разд. 1.1 = (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 061 разд. 4
		// - стр. 020, если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 061 разд. 4 - стр. 020 >= 0.
		ДанныеРаздел11.Вставить("П000110004003",
			Макс(0, Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103 - Окр_П000040006103 - Окр_П000110002003));
		
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		
		// Стр. 050 разд. 1.1 = стр. 020 - ((стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 061
		// разд. 4), если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 061 разд. 4 - стр. 020 < 0.
		ДанныеРаздел11.Вставить("П000110005003",
			Макс(0, Окр_П000110002003 - (Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103 - Окр_П000040006103)));
		
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		
		// Стр. 070 разд. 1.1 = (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - стр. 062 разд. 4 - (стр. 020
		// + стр. 040 - стр. 050), если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - стр. 062 разд. 4
		// - (стр. 020 + стр. 040 - стр. 050) >= 0.
		ДанныеРаздел11.Вставить("П000110007003", Макс(0, Окр_П002110013203 - Окр_П002110014203
			- Окр_П002120016203 - Окр_П000040006203 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003)));
		
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		
		// Стр. 080 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050) - ((стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2
		// - стр. 062 разд. 4 ), если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - стр. 062 разд. 4
		// - (стр. 020 + стр. 040 - стр. 050) < 0.
		ДанныеРаздел11.Вставить("П000110008003", Макс(0, Окр_П000110002003 + Окр_П000110004003
			- Окр_П000110005003 - (Окр_П002110013203 - Окр_П002110014203 - Окр_П002120016203 - Окр_П000040006203)));
		
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2 - стр. 063 разд. 4 - (стр. 020
		// + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101, если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163
		// разд. 2.1.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303
			- Окр_П002120016303 - Окр_П000040006303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003
			+ Окр_П000110007003 - Окр_П000110008003) - Окр_П000110010103));
		
		// Стр. 110 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - ((стр. 133 - стр. 143) разд. 2.1.1
		// - стр. 163 разд. 2.1.2 - стр. 063 разд. 4), если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0.
		ДанныеРаздел11.Вставить("П000110011003", Макс(0, Окр_П000110002003 + Окр_П000110004003
			- Окр_П000110005003 + Окр_П000110007003 - Окр_П000110008003 - (Окр_П002110013303 - Окр_П002110014303
			- Окр_П002120016303 - Окр_П000040006303)));
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда
		
		ДанРазд = ДанныеРаздел22;
		
		// Расчет данных раздела 2.2.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П000220026003"] = 20 ИЛИ ДанРазд["П000220026103"] = 20
			ИЛИ ДанРазд["П000220026203"] = 20 ИЛИ ДанРазд["П000220026303"] = 20 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П000220020103", ПризнакСтавки);
		
		// Стр. 240 = стр. 210 - стр. 220, если стр. 210 - стр. 220 > 0.
		ДанРазд.Вставить("П000220024003",
		Макс(0, Окр(ДанРазд["П000220021003"]) - Окр(ДанРазд["П000220022003"])));
		
		// Стр. 241 = стр. 211 - стр. 221, если стр. 211 - стр. 221 > 0.
		ДанРазд.Вставить("П000220024103",
		Макс(0, Окр(ДанРазд["П000220021103"]) - Окр(ДанРазд["П000220022103"])));
		
		// Стр. 242 = стр. 212 - стр. 222, если стр. 212 - стр. 222 > 0.
		ДанРазд.Вставить("П000220024203",
		Макс(0, Окр(ДанРазд["П000220021203"]) - Окр(ДанРазд["П000220022203"])));
		
		// Стр. 243 = стр. 213 - стр. 223 - стр. 230, если стр. 213 - стр. 223 - стр. 230 > 0.
		ДанРазд.Вставить("П000220024303", Макс(0, Окр(ДанРазд["П000220021303"])
		- Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220023003"])));
		
		// Стр. 250 = стр. 220 - стр. 210, если стр. 210 < стр. 220.
		ДанРазд.Вставить("П000220025003",
		Макс(0, Окр(ДанРазд["П000220022003"]) - Окр(ДанРазд["П000220021003"])));
		
		// Стр. 251 = стр. 221 - стр. 211, если стр. 211 < стр. 221.
		ДанРазд.Вставить("П000220025103",
		Макс(0, Окр(ДанРазд["П000220022103"]) - Окр(ДанРазд["П000220021103"])));
		
		// Стр. 252 = стр. 222 - стр. 212, если стр. 212 < стр. 222.
		ДанРазд.Вставить("П000220025203",
		Макс(0, Окр(ДанРазд["П000220022203"]) - Окр(ДанРазд["П000220021203"])));
		
		// Стр. 253 = стр. 223 - стр. 213, если стр. 213 < стр. 223.
		ДанРазд.Вставить("П000220025303",
		Макс(0, Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220021303"])));
		
		// Для стр. 201 = "1": стр. 270 = стр. 240 х стр. 260 / 100.
		// Для стр. 201 = "2": стр. 270 = стр. 240 х стр. 260 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П000220027003",
			Окр(Окр(ДанРазд["П000220024003"]) * ДанРазд["П000220026003"] / 100));
		Иначе
			ДанРазд.Вставить("П000220027003", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 271 = стр. 241 х стр. 261 / 100.
		// Для стр. 201 = "2":
		// стр. 271 = стр. 241 х стр. 261 / 100, если стр. 261 = стр. 260;
		// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 261 / 100, если стр. 261 > стр. 260 и стр. 241 >= стр. 240;
		// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 260 / 100, если стр. 261 > стр. 260 и стр. 241 < стр. 240.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026103"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027103", Макс(0,
			Окр(Окр(ДанРазд["П000220024103"]) * ДанРазд["П000220026103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026103"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024103"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027103", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 272 = стр. 242 х стр. 262 / 100.
		// Для стр. 201 = "2":
		// стр. 272 = стр. 242 х стр. 262 / 100, если стр. 262 = стр. 260;
		// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 262 / 100,
		// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 >= стр. 240;
		// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 260 / 100,
		// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 < стр. 240;
		// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 262 / 100, если 262 > стр. 261 и стр. 242 >= стр. 241;
		// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 261 / 100, если 262 > стр. 261 и стр. 242 < стр. 241.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027203", Макс(0,
			Окр(Окр(ДанРазд["П000220024203"]) * ДанРазд["П000220026203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026103"]
			И ДанРазд["П000220026203"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] > ДанРазд["П000220026103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027203", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 273 = стр. 243 х стр. 263 / 100.
		// Для стр. 201 = "2":
		// стр. 273 = стр. 243 х стр. 263 / 100, если стр. 263 = стр. 260;
		// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 263 / 100, если стр. 263 > стр. 262 и стр. 243 >= стр. 242;
		// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 262 / 100, если стр. 263 > стр. 262 и стр. 243 < стр. 242;
		// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 263 / 100,
		// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 >= стр. 241;
		// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 261 / 100,
		// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 < стр. 241;
		// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 263 / 100,
		// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 >= стр. 240;
		// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 260 / 100,
		// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 < стр. 240.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027303", Макс(0,
			Окр(Окр(ДанРазд["П000220024303"]) * ДанРазд["П000220026303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] > ДанРазд["П000220026203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026203"]
			И ДанРазд["П000220026303"] > ДанРазд["П000220026103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026103"]
			И ДанРазд["П000220026303"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027303", 0);
		КонецЕсли;
		
		// Если ИП и (2020 <= отч. год <= 2026) и (строки 260-263 раздела 2.2 = 0),
		// то стр. 280 = 0 (случай ИП с налоговыми каникулами).
		// Иначе стр. 280 = стр. 213 х 1 / 100 (налоговая ставка 1%).
		Если ДопПараметры.ИП И Год(ДопПараметры.ДатаОкончания) >= 2020 И Год(ДопПараметры.ДатаОкончания) <= 2026
			И ДанРазд["П000220026003"] = 0 И ДанРазд["П000220026103"] = 0
			И ДанРазд["П000220026203"] = 0 И ДанРазд["П000220026303"] = 0 Тогда
			ДанРазд.Вставить("П000220028003", 0);
		Иначе
			ДанРазд.Вставить("П000220028003", Окр(Окр(ДанРазд["П000220021303"]) / 100));
		КонецЕсли;
		
		// Расчет данных раздела 1.2. по данным разделов 2.2 и 4.
		
		Окр_П000220027003 = Окр(ДанРазд["П000220027003"]);
		Окр_П000220027103 = Окр(ДанРазд["П000220027103"]);
		Окр_П000220027203 = Окр(ДанРазд["П000220027203"]);
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
	
		Окр_П000040006003 = ?(ОбНал = "2", Окр(ДанныеРаздел4["П000040006003"]), 0);
		Окр_П000040006103 = ?(ОбНал = "2", Окр(ДанныеРаздел4["П000040006103"]), 0);
		Окр_П000040006203 = ?(ОбНал = "2", Окр(ДанныеРаздел4["П000040006203"]), 0);
		Окр_П000040006303 = ?(ОбНал = "2", Окр(ДанныеРаздел4["П000040006303"]), 0);
		
		// Стр. 020 разд. 1.2 = стр. 270 разд. 2.2 - стр. 060 разд. 4, если стр. 270 разд. 2.2 - стр. 060 разд. 4 >= 0.
		ДанныеРаздел12.Вставить("П000120002003", Макс(0, Окр_П000220027003 - Окр_П000040006003));
		
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		
		// Стр. 040 разд. 1.2 = стр. 271 разд. 2.2 - стр. 061 разд. 4 - стр. 020,
		// если стр. 271 разд. 2.2 - стр. 061 разд. 4 - стр. 020 >= 0.
		ДанныеРаздел12.Вставить("П000120004003",
			Макс(0, Окр_П000220027103 - Окр_П000040006103 - Окр_П000120002003));
		
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		
		// Стр. 050 разд. 1.2 = стр. 020 - (стр. 271 разд. 2.2 - стр. 061 разд. 4),
		// если стр. 271 разд. 2.2 - стр. 061 разд. 4 - стр. 020 < 0.
		ДанныеРаздел12.Вставить("П000120005003",
			- Мин(0, Окр_П000220027103 - Окр_П000040006103 - Окр_П000120002003));
		
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		
		// Стр. 070 разд. 1.2 = стр. 272 разд.2.2 - стр. 062 разд. 4 - (стр. 020 + стр. 040 - стр. 050),
		// если стр. 272 разд. 2.2. - стр. 062 разд. 4 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		ДанныеРаздел12.Вставить("П000120007003",
			Макс(0, Окр_П000220027203 - Окр_П000040006203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		
		// Стр. 080 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050) - (стр. 272 разд. 2.2 - стр. 062 разд. 4),
		// если стр. 272 разд. 2.2 - стр. 062 разд. 4. - (стр. 020 + стр. 040 - стр. 050) < 0.
		ДанныеРаздел12.Вставить("П000120008003",
			- Мин(0, Окр_П000220027203 - Окр_П000040006203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		
		// Стр. 100 разд. 1.2 = (стр. 273 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070
		// - стр. 080) - стр. 101), если (стр. 273 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050
		// + стр. 070 - стр. 080) - стр. 101) >= 0 и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - Окр_П000040006303
				- (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003)
				- Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 110 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - (стр. 273 разд. 2.2 - стр. 063
		// разд. 4), если стр. 273 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2 или (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - (стр. 280
		// разд. 2.2 - стр. 063 разд. 4), если стр. 273 разд. 2.2 < стр. 280 разд. 2.2 и (стр. 020 + стр. 040 - стр. 050
		// + стр. 070 - стр. 080) > стр. 280 разд. 2.2 - стр. 063 разд. 4.
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120011003", - Мин(0, Окр_П000220027303 - Окр_П000040006303
				- (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003)));
		Иначе
			ДанныеРаздел12.Вставить("П000120011003", Макс(0, (Окр_П000120002003 + Окр_П000120004003
				- Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - (Окр_П000220028003 - Окр_П000040006303)));
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = (стр. 280 разд. 2.2 - стр. 063 разд. 4 - (стр. 020 + стр. 040 - стр. 050 + стр. 070
		// - стр. 080) - стр. 101), если стр. 280 разд. 2.2 > стр. 273 разд. 2.2 и стр. 280 разд. 2.2 - стр. 063 разд. 4
		// > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - Окр_П000040006303 - (Окр_П000120002003
				+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		Колонка3 = 0;
		Колонка4 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		
		Для каждого ДопСтрока Из РазделыОтчета.Раздел3.ДанныеДопСтрок Цикл
			
			ДопСтрока.П000030000107 = Макс(0,
				Окр(ДопСтрока.П000030000103) - Окр(ДопСтрока.П000030000104) - Окр(ДопСтрока.П000030000106), 0);
			
			Колонка3 = Колонка3 + Окр(ДопСтрока.П000030000103);
			Колонка4 = Колонка4 + Окр(ДопСтрока.П000030000104);
			Колонка6 = Колонка6 + Окр(ДопСтрока.П000030000106);
			Колонка7 = Колонка7 + Окр(ДопСтрока.П000030000107);
			
		КонецЦикла;
		
		ДанныеРаздел3.Вставить("П000030000203", Колонка3);
		ДанныеРаздел3.Вставить("П000030000204", Колонка4);
		ДанныеРаздел3.Вставить("П000030000206", Колонка6);
		ДанныеРаздел3.Вставить("П000030000207", Колонка7);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, ИмяРаздела = "", ДопПараметры)
	
	ДанныеРаздел11 = РазделыОтчета.Раздел11.Данные;
	ДанныеРаздел12 = РазделыОтчета.Раздел12.Данные;
	ДанныеРаздел21 = РазделыОтчета.Раздел21.Данные;
	ДанныеРаздел22 = РазделыОтчета.Раздел22.Данные;
	ДанныеРаздел3  = РазделыОтчета.Раздел3.Данные;
	
	Если ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "Раздел3",  ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "Раздел22", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "Раздел21", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "Раздел12", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2023Кв1(РазделыОтчета, "Раздел11", ДопПараметры);
		
	ИначеЕсли ИмяРаздела = "Раздел11" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.1 рассчитываются по данным раздела 2.1.
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		Окр_П002110013303 = Окр(ДанныеРаздел21["П002110013303"]);
		Окр_П002110014303 = Окр(ДанныеРаздел21["П002110014303"]);
		Окр_П002120016303 = Окр(ДанныеРаздел21["П002120016303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303
		- Окр_П002120016303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003) - Окр_П000110010103));
		
	ИначеЕсли ИмяРаздела = "Раздел12" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.2 рассчитываются по данным раздела 2.2.
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанныеРаздел22["П000220027303"]);
		Окр_П000220028003 = Окр(ДанныеРаздел22["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 280 разд. 2.2 > стр. 273 разд. 2.2
		// и стр. 280 разд. 2.2 > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Окр_П000220027303 = Окр(ДанныеРаздел22["П000220027303"]);
		Окр_П000220028003 = Окр(ДанныеРаздел22["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда
		
		ДанРазд = ДанныеРаздел21;
		
		// Расчет данных в подразделе 2.1.1 раздела 2.1.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П002110012003"] = 8 ИЛИ ДанРазд["П002110012103"] = 8
			ИЛИ ДанРазд["П002110012203"] = 8 ИЛИ ДанРазд["П002110012303"] = 8 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П002110010103", ПризнакСтавки);
		
		// Для стр. 101 = "1": стр. 130 = стр. 110 х стр. 120 / 100.
		// Для стр. 101 = "2": стр. 130 = стр. 110 х стр. 120 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002110013003", Макс(0,
			Окр(Окр(ДанРазд["П002110011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002110013003", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 131 = стр. 111 х стр. 121 / 100.
		// Для стр. 101 = "2":
		// стр. 131 = стр. 111 х стр. 121 / 100, если стр. 121 = стр. 120;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 / 100, если стр. 121 > стр. 120 и стр. 111 >= стр. 110;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 / 100, если стр. 121 > стр. 120 и стр. 111 < стр. 110;
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013103", Макс(0,
			Окр(Окр(ДанРазд["П002110011103"]) * ДанРазд["П002110012103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011103"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013103", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 132 = стр. 112 х стр. 122 / 100.
		// Для стр. 101 = "2":
		// стр. 132 = стр. 112 х стр. 122 / 100, если стр. 122 = стр. 120;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 / 100, если стр. 122 > стр. 121 и стр. 112 >= стр. 111;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 / 100, если стр. 122 > стр. 121 и стр. 112 < стр. 111;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 / 100,
		// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 >= стр. 110;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 / 100,
		// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013203", Макс(0,
			Окр(Окр(ДанРазд["П002110011203"]) * ДанРазд["П002110012203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013203", 0);
		КонецЕсли;
		
		// Для стр. 101 = "1": стр. 133 = стр. 113 х стр. 123 / 100.
		// Для стр. 101 = "2":
		// стр. 133 = стр. 113 х стр. 123 / 100, если стр. 123 = стр. 120;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 / 100, если стр. 123 > стр. 122 и стр. 113 >= стр. 112;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 / 100, если стр. 123 > стр. 122 и стр. 113 < стр. 112;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 / 100,
		// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 >= стр. 111;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 / 100,
		// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 < стр. 111;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 / 100,
		// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 >= стр. 110;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 / 100,
		// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002110013303", Макс(0,
			Окр(Окр(ДанРазд["П002110011303"]) * ДанРазд["П002110012303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
				ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002110013303", 0);
		КонецЕсли;
		
		// Расчет данных в подразделе 2.1.2 раздела 2.1.
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002120013003", Макс(0,
			Окр(Окр(ДанРазд["П002120011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002120013003", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100, если стр. 121 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 разд. 2.1.1 / 100,
		// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 >= стр. 110;
		// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 разд. 2.1.1 / 100,
		// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013103", Макс(0,
			Окр(Окр(ДанРазд["П002120011103"]) * ДанРазд["П002110012103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011103"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013103", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 разд. 2.1.1 / 100,
		// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 >= стр. 111;
		// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 разд. 2.1.1 / 100,
		// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 < стр. 111;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 >= стр. 110;
		// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013203", Макс(0,
			Окр(Окр(ДанРазд["П002120011203"]) * ДанРазд["П002110012203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013203", 0);
		КонецЕсли;
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2":
		// стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 120 разд. 2.1.1;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 разд. 2.1.1 / 100,
		// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 >= стр. 112;
		// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 разд. 2.1.1 / 100,
		// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 < стр. 112;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 >= стр. 111;
		// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 < стр. 111;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 >= стр. 110;
		// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
		// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 < стр. 110.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
			ДанРазд.Вставить("П002120013303", Макс(0,
			Окр(Окр(ДанРазд["П002120011303"]) * ДанРазд["П002110012303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
			И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
				ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П002120013303", 0);
		КонецЕсли;
		
		// Стр. 160 = стр. 130 - стр. 140, если стр. 130 - стр. 140 < стр. 150.
		// Стр. 160 = стр. 150, если стр. 130 - стр. 140 >= стр. 150.
		ДанРазд.Вставить("П002120016003", Мин(Окр(ДанРазд["П002120013003"])
		- Окр(ДанРазд["П002120014003"]), Окр(ДанРазд["П002120015003"])));
		
		// Стр. 161 = стр. 131 - стр. 141, если стр. 131 - стр. 141 < стр. 151.
		// Стр. 161 = стр. 151, если стр. 131 - стр. 141 >= стр. 151.
		ДанРазд.Вставить("П002120016103", Мин(Окр(ДанРазд["П002120013103"])
		- Окр(ДанРазд["П002120014103"]), Окр(ДанРазд["П002120015103"])));
		
		// Стр. 162 = стр. 132 - стр. 142, если стр. 132 - стр. 142 < стр. 152.
		// Стр. 162 = стр. 152, если стр. 132 - стр. 142 >= стр. 152.
		ДанРазд.Вставить("П002120016203", Мин(Окр(ДанРазд["П002120013203"])
		- Окр(ДанРазд["П002120014203"]), Окр(ДанРазд["П002120015203"])));
		
		// Стр. 163 = стр. 133 - стр. 143, если стр. 133 - стр. 143 < стр. 153.
		// Стр. 163 = стр. 153, если стр. 133 - стр. 143 >= стр. 153.
		ДанРазд.Вставить("П002120016303", Мин(Окр(ДанРазд["П002120013303"])
		- Окр(ДанРазд["П002120014303"]), Окр(ДанРазд["П002120015303"])));
		
		// Расчет данных раздела 1.1. по данным подразделов 2.1.1 и 2.1.2 раздела 2.1.
		
		// Стр. 020 разд. 1.1 = (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2,
		// если (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2 >= 0.
		Окр_П002110013003 = Окр(ДанРазд["П002110013003"]);
		Окр_П002110014003 = Окр(ДанРазд["П002110014003"]);
		Окр_П002120016003 = Окр(ДанРазд["П002120016003"]);
		ДанныеРаздел11.Вставить("П000110002003",
		Макс(0, Окр_П002110013003 - Окр_П002110014003 - Окр_П002120016003));
		
		// Стр. 040 разд. 1.1 = (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020,
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 >= 0.
		Окр_П002110013103 = Окр(ДанРазд["П002110013103"]);
		Окр_П002110014103 = Окр(ДанРазд["П002110014103"]);
		Окр_П002120016103 = Окр(ДанРазд["П002120016103"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		ДанныеРаздел11.Вставить("П000110004003",
		Макс(0, Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103 - Окр_П000110002003));
		
		// Стр. 050 разд. 1.1 = стр. 020 - ((стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2),
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 < 0.
		Окр_П002110013103 = Окр(ДанРазд["П002110013103"]);
		Окр_П002110014103 = Окр(ДанРазд["П002110014103"]);
		Окр_П002120016103 = Окр(ДанРазд["П002120016103"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		ДанныеРаздел11.Вставить("П000110005003",
		Макс(0, Окр_П000110002003 - (Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103)));
		
		// Стр. 070 разд. 1.1 = (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050),
		// если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П002110013203 = Окр(ДанРазд["П002110013203"]);
		Окр_П002110014203 = Окр(ДанРазд["П002110014203"]);
		Окр_П002120016203 = Окр(ДанРазд["П002120016203"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		ДанныеРаздел11.Вставить("П000110007003", Макс(0, Окр_П002110013203
		- Окр_П002110014203 - Окр_П002120016203 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003)));
		
		// Стр. 080 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050) - ((стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд.
		// 2.1.2), если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) < 0.
		Окр_П002110013203 = Окр(ДанРазд["П002110013203"]);
		Окр_П002110014203 = Окр(ДанРазд["П002110014203"]);
		Окр_П002120016203 = Окр(ДанРазд["П002120016203"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		ДанныеРаздел11.Вставить("П000110008003", Макс(0, Окр_П000110002003
		+ Окр_П000110004003 - Окр_П000110005003 - (Окр_П002110013203 - Окр_П002110014203 - Окр_П002120016203)));
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		Окр_П002110013303 = Окр(ДанРазд["П002110013303"]);
		Окр_П002110014303 = Окр(ДанРазд["П002110014303"]);
		Окр_П002120016303 = Окр(ДанРазд["П002120016303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303
		- Окр_П002120016303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003) - Окр_П000110010103));
		
		// Стр. 110 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080)
		// - ((стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2),
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0.
		Окр_П002110013303 = Окр(ДанРазд["П002110013303"]);
		Окр_П002110014303 = Окр(ДанРазд["П002110014303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		ДанныеРаздел11.Вставить("П000110011003",
		Макс(0, Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003 - (Окр_П002110013303 - Окр_П002110014303 - Окр_П002120016303)));
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда
		
		ДанРазд = ДанныеРаздел22;
		
		// Расчет данных раздела 2.2.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П000220026003"] = 20 ИЛИ ДанРазд["П000220026103"] = 20
			ИЛИ ДанРазд["П000220026203"] = 20 ИЛИ ДанРазд["П000220026303"] = 20 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П000220020103", ПризнакСтавки);
		
		// Стр. 240 = стр. 210 - стр. 220, если стр. 210 - стр. 220 > 0.
		ДанРазд.Вставить("П000220024003",
		Макс(0, Окр(ДанРазд["П000220021003"]) - Окр(ДанРазд["П000220022003"])));
		
		// Стр. 241 = стр. 211 - стр. 221, если стр. 211 - стр. 221 > 0.
		ДанРазд.Вставить("П000220024103",
		Макс(0, Окр(ДанРазд["П000220021103"]) - Окр(ДанРазд["П000220022103"])));
		
		// Стр. 242 = стр. 212 - стр. 222, если стр. 212 - стр. 222 > 0.
		ДанРазд.Вставить("П000220024203",
		Макс(0, Окр(ДанРазд["П000220021203"]) - Окр(ДанРазд["П000220022203"])));
		
		// Стр. 243 = стр. 213 - стр. 223 - стр. 230, если стр. 213 - стр. 223 - стр. 230 > 0.
		ДанРазд.Вставить("П000220024303", Макс(0, Окр(ДанРазд["П000220021303"])
		- Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220023003"])));
		
		// Стр. 250 = стр. 220 - стр. 210, если стр. 210 < стр. 220.
		ДанРазд.Вставить("П000220025003",
		Макс(0, Окр(ДанРазд["П000220022003"]) - Окр(ДанРазд["П000220021003"])));
		
		// Стр. 251 = стр. 221 - стр. 211, если стр. 211 < стр. 221.
		ДанРазд.Вставить("П000220025103",
		Макс(0, Окр(ДанРазд["П000220022103"]) - Окр(ДанРазд["П000220021103"])));
		
		// Стр. 252 = стр. 222 - стр. 212, если стр. 212 < стр. 222.
		ДанРазд.Вставить("П000220025203",
		Макс(0, Окр(ДанРазд["П000220022203"]) - Окр(ДанРазд["П000220021203"])));
		
		// Стр. 253 = стр. 223 - стр. 213, если стр. 213 < стр. 223.
		ДанРазд.Вставить("П000220025303",
		Макс(0, Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220021303"])));
		
		// Для стр. 201 = "1": стр. 270 = стр. 240 х стр. 260 / 100.
		// Для стр. 201 = "2": стр. 270 = стр. 240 х стр. 260 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П000220027003",
			Окр(Окр(ДанРазд["П000220024003"]) * ДанРазд["П000220026003"] / 100));
		Иначе
			ДанРазд.Вставить("П000220027003", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 271 = стр. 241 х стр. 261 / 100.
		// Для стр. 201 = "2":
		// стр. 271 = стр. 241 х стр. 261 / 100, если стр. 261 = стр. 260;
		// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 261 / 100, если стр. 261 > стр. 260 и стр. 241 >= стр. 240;
		// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 260 / 100, если стр. 261 > стр. 260 и стр. 241 < стр. 240.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026103"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027103", Макс(0,
			Окр(Окр(ДанРазд["П000220024103"]) * ДанРазд["П000220026103"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026103"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024103"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027103", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 272 = стр. 242 х стр. 262 / 100.
		// Для стр. 201 = "2":
		// стр. 272 = стр. 242 х стр. 262 / 100, если стр. 262 = стр. 260;
		// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 262 / 100,
		// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 >= стр. 240;
		// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 260 / 100,
		// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 < стр. 240;
		// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 262 / 100, если 262 > стр. 261 и стр. 242 >= стр. 241;
		// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 261 / 100, если 262 > стр. 261 и стр. 242 < стр. 241.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027203", Макс(0,
			Окр(Окр(ДанРазд["П000220024203"]) * ДанРазд["П000220026203"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026103"]
			И ДанРазд["П000220026203"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] > ДанРазд["П000220026103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027203", 0);
		КонецЕсли;
		
		// Для стр. 201 = "1": стр. 273 = стр. 243 х стр. 263 / 100.
		// Для стр. 201 = "2":
		// стр. 273 = стр. 243 х стр. 263 / 100, если стр. 263 = стр. 260;
		// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 263 / 100, если стр. 263 > стр. 262 и стр. 243 >= стр. 242;
		// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 262 / 100, если стр. 263 > стр. 262 и стр. 243 < стр. 242;
		// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 263 / 100,
		// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 >= стр. 241;
		// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 261 / 100,
		// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 < стр. 241;
		// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 263 / 100,
		// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 >= стр. 240;
		// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 260 / 100,
		// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 < стр. 240.
		Если ПризнакСтавки = "1"
			ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026003"]) Тогда
			ДанРазд.Вставить("П000220027303", Макс(0,
			Окр(Окр(ДанРазд["П000220024303"]) * ДанРазд["П000220026303"] / 100)));
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] > ДанРазд["П000220026203"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024203"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026203"]
			И ДанРазд["П000220026303"] > ДанРазд["П000220026103"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024103"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			КонецЕсли;
		ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026103"]
			И ДанРазд["П000220026303"] > ДанРазд["П000220026003"] Тогда
			РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024003"]);
			Если РазностьНалБаз >= 0 Тогда
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
				ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
			КонецЕсли;
		Иначе
			ДанРазд.Вставить("П000220027303", 0);
		КонецЕсли;
		
		// Если ИП и (2020 <= отч. год <= 2026) и (строки 260-263 раздела 2.2 = 0),
		// то стр. 280 = 0 (случай ИП с налоговыми каникулами).
		// Иначе стр. 280 = стр. 213 х 1 / 100 (налоговая ставка 1%).
		Если ДопПараметры.ИП И Год(ДопПараметры.ДатаОкончания) >= 2020 И Год(ДопПараметры.ДатаОкончания) <= 2026
			И ДанРазд["П000220026003"] = 0 И ДанРазд["П000220026103"] = 0
			И ДанРазд["П000220026203"] = 0 И ДанРазд["П000220026303"] = 0 Тогда
			ДанРазд.Вставить("П000220028003", 0);
		Иначе
			ДанРазд.Вставить("П000220028003", Окр(Окр(ДанРазд["П000220021303"]) / 100));
		КонецЕсли;
		
		// Расчет данных раздела 1.2. по данным раздела 2.2.
		
		// Стр. 020 разд. 1.2 = стр. 270 разд. 2.2.
		Окр_П000220027003 = Окр(ДанРазд["П000220027003"]);
		ДанныеРаздел12.Вставить("П000120002003", Окр_П000220027003);
		
		// Стр. 040 разд. 1.2 = стр. 271 разд. 2.2 - стр. 020,
		// если стр. 271 разд. 2.2 - стр. 020 >= 0.
		Окр_П000220027103 = Окр(ДанРазд["П000220027103"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		ДанныеРаздел12.Вставить("П000120004003", Макс(0, Окр_П000220027103 - Окр_П000120002003));
		
		// Стр. 050 разд. 1.2 = стр. 020 - стр. 271 разд. 2.2,
		// если стр. 271 разд. 2.2 - стр. 020 < 0.
		Окр_П000220027103 = Окр(ДанРазд["П000220027103"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		ДанныеРаздел12.Вставить("П000120005003", - Мин(0, Окр_П000220027103 - Окр_П000120002003));
		
		// Стр. 070 разд. 1.2 = стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050),
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П000220027203 = Окр(ДанРазд["П000220027203"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		ДанныеРаздел12.Вставить("П000120007003",
		Макс(0, Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		// Стр. 080 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050) - стр. 272 разд. 2.2,
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) < 0.
		Окр_П000220027203 = Окр(ДанРазд["П000220027203"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		ДанныеРаздел12.Вставить("П000120008003",
		- Мин(0, Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 110 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 273 разд. 2.2,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2
		// или (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 280 разд. 2.2,
		// если стр. 273 разд. 2.2 < стр. 280 разд. 2.2
		// и (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) > стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120011003", - Мин(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003)));
		Иначе
			ДанныеРаздел12.Вставить("П000120011003", Макс(0, (Окр_П000120002003 + Окр_П000120004003
			- Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000220028003));
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 280 разд. 2.2 > стр. 273 разд. 2.2
		// и стр. 280 разд. 2.2 > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		// Для этого раздела при автоформировании не требуется расчет в строках многострочной части,
		// поскольку эти строки могут быть заполнены только интерактивно.
		
		// Расчет колонок в строке "Итого по отчету" раздела 3.
		Колонка3 = 0;
		Колонка4 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		
		Для каждого ДопСтрока Из РазделыОтчета.Раздел3.ДанныеДопСтрок Цикл
			
			Колонка3 = Колонка3 + Окр(ДопСтрока.П000030000103);
			Колонка4 = Колонка4 + Окр(ДопСтрока.П000030000104);
			Колонка6 = Колонка6 + Окр(ДопСтрока.П000030000106);
			Колонка7 = Колонка7 + Окр(ДопСтрока.П000030000107);
			
		КонецЦикла;
		
		ДанныеРаздел3.Вставить("П000030000203", Колонка3);
		ДанныеРаздел3.Вставить("П000030000204", Колонка4);
		ДанныеРаздел3.Вставить("П000030000206", Колонка6);
		ДанныеРаздел3.Вставить("П000030000207", Колонка7);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, ИмяРаздела = "", ДопПараметры)
	
	ДанныеРаздел11 = РазделыОтчета.Раздел11.Данные;
	ДанныеРаздел12 = РазделыОтчета.Раздел12.Данные;
	ДанныеРаздел21 = РазделыОтчета.Раздел21.Данные;
	ДанныеРаздел22 = РазделыОтчета.Раздел22.Данные;
	ДанныеРаздел3  = РазделыОтчета.Раздел3.Данные;
	
	Если ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "Раздел3",  ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "Раздел22", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "Раздел21", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "Раздел12", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2021Кв1(РазделыОтчета, "Раздел11", ДопПараметры);
		
	ИначеЕсли ИмяРаздела = "Раздел11" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.1 рассчитываются по данным раздела 2.1.
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		Окр_П002110013303 = Окр(ДанныеРаздел21["П002110013303"]);
		Окр_П002110014303 = Окр(ДанныеРаздел21["П002110014303"]);
		Окр_П002120016303 = Окр(ДанныеРаздел21["П002120016303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303
		- Окр_П002120016303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003) - Окр_П000110010103));
		
	ИначеЕсли ИмяРаздела = "Раздел12" Тогда
		
		// Строки 020, 040, 050, 070, 080 и 110 раздела 1.2 рассчитываются по данным раздела 2.2.
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанныеРаздел22["П000220027303"]);
		Окр_П000220028003 = Окр(ДанныеРаздел22["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 280 разд. 2.2 > стр. 273 разд. 2.2
		// и стр. 280 разд. 2.2 > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Окр_П000220027303 = Окр(ДанныеРаздел22["П000220027303"]);
		Окр_П000220028003 = Окр(ДанныеРаздел22["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда
		
		ДанРазд = ДанныеРаздел21;
		
		// Расчет данных в подразделе 2.1.1 раздела 2.1.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П002110012003"] = 8 ИЛИ ДанРазд["П002110012103"] = 8
			ИЛИ ДанРазд["П002110012203"] = 8 ИЛИ ДанРазд["П002110012303"] = 8 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П002110010103", ПризнакСтавки);
		
		// Для стр. 101 = "1": стр. 130 = стр. 110 х стр. 120 / 100.
		// Для стр. 101 = "2": стр. 130 = стр. 110 х стр. 120 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002110013003", Макс(0,
			Окр(Окр(ДанРазд["П002110011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002110013003", 0);
		КонецЕсли;
		
		Если Год(ДопПараметры.ДатаОкончания) >= 2022 Тогда
			
			// Для стр. 101 = "1": стр. 131 = стр. 111 х стр. 121 / 100.
			// Для стр. 101 = "2":
			// стр. 131 = стр. 111 х стр. 121 / 100, если стр. 121 = стр. 120;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 / 100, если стр. 121 > стр. 120 и стр. 111 >= стр. 110;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 / 100, если стр. 121 > стр. 120 и стр. 111 < стр. 110;
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013103", Макс(0,
				Окр(Окр(ДанРазд["П002110011103"]) * ДанРазд["П002110012103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011103"]) - Окр(ДанРазд["П002110011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013103", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002110013103", 0);
			КонецЕсли;
			
			// Для стр. 101 = "1": стр. 132 = стр. 112 х стр. 122 / 100.
			// Для стр. 101 = "2":
			// стр. 132 = стр. 112 х стр. 122 / 100, если стр. 122 = стр. 120;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 / 100, если стр. 122 > стр. 121 и стр. 112 >= стр. 111;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 / 100, если стр. 122 > стр. 121 и стр. 112 < стр. 111;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 / 100,
			// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 >= стр. 110;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 / 100,
			// если стр. 122 = стр. 121 и стр. 122 > стр. 120 и стр. 112 < стр. 110.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013203", Макс(0,
				Окр(Окр(ДанРазд["П002110011203"]) * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
					ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
					ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013203", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002110013203", 0);
			КонецЕсли;
			
			// Для стр. 101 = "1": стр. 133 = стр. 113 х стр. 123 / 100.
			// Для стр. 101 = "2":
			// стр. 133 = стр. 113 х стр. 123 / 100, если стр. 123 = стр. 120;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 / 100, если стр. 123 > стр. 122 и стр. 113 >= стр. 112;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 / 100, если стр. 123 > стр. 122 и стр. 113 < стр. 112;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 / 100,
			// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 >= стр. 111;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 / 100,
			// если стр. 123 = стр. 122 и стр. 123 > стр. 121 и стр. 113 < стр. 111;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 / 100,
			// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 >= стр. 110;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 / 100,
			// если стр. 123 = стр. 121 и стр. 123 > стр. 120 и стр. 113 < стр. 110.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013303", Макс(0,
				Окр(Окр(ДанРазд["П002110011303"]) * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011203"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002110013303", Макс(0, Окр(Окр(
					ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002110013303", 0);
			КонецЕсли;
			
		Иначе
			
			// Для стр. 101 = "1": стр. 131 = стр. 111 х стр. 121 / 100.
			// Для стр. 101 = "2":
			// стр. 131 = стр. 111 х стр. 121 / 100, если стр. 121 = стр. 120;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 / 100, если стр. 121 > стр. 120.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013103", Макс(0,
				Окр(Окр(ДанРазд["П002110011103"]) * ДанРазд["П002110012103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011103"]) - Окр(ДанРазд["П002110011003"]);
				ДанРазд.Вставить("П002110013103", Макс(0,
				Окр(Окр(ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013103", 0);
			КонецЕсли;
			
			// Для стр. 101 = "1": стр. 132 = стр. 112 х стр. 122 / 100.
			// Для стр. 101 = "2":
			// стр. 132 = стр. 112 х стр. 122 / 100, если стр. 122 = стр. 120;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 / 100, если стр. 122 > стр. 121;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 / 100, если стр. 122 = стр. 121 и стр. 122 > стр. 120.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013203", Макс(0,
				Окр(Окр(ДанРазд["П002110011203"]) * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011103"]);
				ДанРазд.Вставить("П002110013203", Макс(0,
				Окр(Окр(ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011203"]) - Окр(ДанРазд["П002110011003"]);
				ДанРазд.Вставить("П002110013203", Макс(0,
				Окр(Окр(ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013203", 0);
			КонецЕсли;
			
			// Для стр. 101 = "1": стр. 133 = стр. 113 х стр. 123 / 100.
			// Для стр. 101 = "2":
			// стр. 133 = стр. 113 х стр. 123 / 100, если стр. 123 = стр. 120;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 / 100, если стр. 123 > стр. 122;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 / 100, если стр. 123 = стр. 122 и стр. 123 > стр. 121;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 / 100, если стр. 123 = стр. 121 и стр. 123 > стр. 120.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002110013303", Макс(0,
				Окр(Окр(ДанРазд["П002110011303"]) * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011203"]);
				ДанРазд.Вставить("П002110013303", Макс(0,
				Окр(Окр(ДанРазд["П002110013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011103"]);
				ДанРазд.Вставить("П002110013303", Макс(0,
				Окр(Окр(ДанРазд["П002110013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002110011303"]) - Окр(ДанРазд["П002110011003"]);
				ДанРазд.Вставить("П002110013303", Макс(0,
				Окр(Окр(ДанРазд["П002110013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002110013303", 0);
			КонецЕсли;
			
		КонецЕсли;
		
		// Расчет данных в подразделе 2.1.2 раздела 2.1.
		
		// Для стр. 101 разд. 2.1.1 = "1": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		// Для стр. 101 разд. 2.1.1 = "2": стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П002120013003", Макс(0,
			Окр(Окр(ДанРазд["П002120011003"]) * ДанРазд["П002110012003"] / 100)));
		Иначе
			ДанРазд.Вставить("П002120013003", 0);
		КонецЕсли;
		
		Если Год(ДопПараметры.ДатаОкончания) >= 2022 Тогда
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100, если стр. 121 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 разд. 2.1.1 / 100,
			// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 >= стр. 110;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 120 разд. 2.1.1 / 100,
			// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 111 < стр. 110.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013103", Макс(0,
				Окр(Окр(ДанРазд["П002120011103"]) * ДанРазд["П002110012103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011103"]) - Окр(ДанРазд["П002120011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013103", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002120013103", 0);
			КонецЕсли;
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 разд. 2.1.1 / 100,
			// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 >= стр. 111;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 121 разд. 2.1.1 / 100,
			// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 112 < стр. 111;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
			// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 >= стр. 110;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 121
			// разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 112 < стр. 110.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013203", Макс(0,
				Окр(Окр(ДанРазд["П002120011203"]) * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
					ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
					ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013203", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002120013203", 0);
			КонецЕсли;
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 разд. 2.1.1 / 100,
			// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 >= стр. 112;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 122 разд. 2.1.1 / 100,
			// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1 и стр. 113 < стр. 112;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
			// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 >= стр. 111;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 121 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 122
			// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1 и стр. 113 < стр. 111;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
			// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 >= стр. 110;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 120 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 121
			// разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1 и стр. 113 < стр. 110.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013303", Макс(0,
				Окр(Окр(ДанРазд["П002120011303"]) * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011203"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
				Иначе
					ДанРазд.Вставить("П002120013303", Макс(0, Окр(Окр(
					ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П002120013303", 0);
			КонецЕсли;
			
		Иначе
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100, если стр. 121 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 131 = стр. 130 + (стр. 111 - стр. 110) х стр. 121 разд. 2.1.1 / 100,
			// если стр. 121 разд. 2.1.1 > стр. 120 разд. 2.1.1.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012103"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013103", Макс(0,
				Окр(Окр(ДанРазд["П002120011103"]) * ДанРазд["П002110012103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012103"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011103"]) - Окр(ДанРазд["П002120011003"]);
				ДанРазд.Вставить("П002120013103", Макс(0,
				Окр(Окр(ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012103"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013103", 0);
			КонецЕсли;
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100, если стр. 122 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 132 = стр. 131 + (стр. 112 - стр. 111) х стр. 122 разд. 2.1.1 / 100,
			// если стр. 122 разд. 2.1.1 > стр. 121 разд. 2.1.1;
			// стр. 132 = стр. 130 + (стр. 112 - стр. 110) х стр. 122 разд. 2.1.1 / 100,
			// если стр. 122 разд. 2.1.1 = стр. 121 разд. 2.1.1 и стр. 122 разд. 2.1.1 > стр. 120 разд. 2.1.1.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013203", Макс(0,
				Окр(Окр(ДанРазд["П002120011203"]) * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011103"]);
				ДанРазд.Вставить("П002120013203", Макс(0,
				Окр(Окр(ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012203"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012203"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011203"]) - Окр(ДанРазд["П002120011003"]);
				ДанРазд.Вставить("П002120013203", Макс(0,
				Окр(Окр(ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012203"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013203", 0);
			КонецЕсли;
			
			// Для стр. 101 разд. 2.1.1 = "1": стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100.
			// Для стр. 101 разд. 2.1.1 = "2":
			// стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100, если стр. 123 разд. 2.1.1 = стр. 120 разд. 2.1.1;
			// стр. 133 = стр. 132 + (стр. 113 - стр. 112) х стр. 123 разд. 2.1.1 / 100,
			// если стр. 123 разд. 2.1.1 > стр. 122 разд. 2.1.1;
			// стр. 133 = стр. 131 + (стр. 113 - стр. 111) х стр. 123 разд. 2.1.1 / 100,
			// если стр. 123 разд. 2.1.1 = стр. 122 разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 121 разд. 2.1.1;
			// стр. 133 = стр. 130 + (стр. 113 - стр. 110) х стр. 123 разд. 2.1.1 / 100,
			// если стр. 123 разд. 2.1.1 = стр. 121 разд. 2.1.1 и стр. 123 разд. 2.1.1 > стр. 120 разд. 2.1.1.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012003"]) Тогда
				ДанРазд.Вставить("П002120013303", Макс(0,
				Окр(Окр(ДанРазд["П002120011303"]) * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] > ДанРазд["П002110012203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011203"]);
				ДанРазд.Вставить("П002120013303", Макс(0,
				Окр(Окр(ДанРазд["П002120013203"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012203"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011103"]);
				ДанРазд.Вставить("П002120013303", Макс(0,
				Окр(Окр(ДанРазд["П002120013103"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П002110012303"] = ДанРазд["П002110012103"]
				И ДанРазд["П002110012303"] > ДанРазд["П002110012003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П002120011303"]) - Окр(ДанРазд["П002120011003"]);
				ДанРазд.Вставить("П002120013303", Макс(0,
				Окр(Окр(ДанРазд["П002120013003"]) + РазностьНалБаз * ДанРазд["П002110012303"] / 100)));
			Иначе
				ДанРазд.Вставить("П002120013303", 0);
			КонецЕсли;
			
		КонецЕсли;
		
		// Стр. 160 = стр. 130 - стр. 140, если стр. 130 - стр. 140 < стр. 150.
		// Стр. 160 = стр. 150, если стр. 130 - стр. 140 >= стр. 150.
		ДанРазд.Вставить("П002120016003", Мин(Окр(ДанРазд["П002120013003"])
		- Окр(ДанРазд["П002120014003"]), Окр(ДанРазд["П002120015003"])));
		
		// Стр. 161 = стр. 131 - стр. 141, если стр. 131 - стр. 141 < стр. 151.
		// Стр. 161 = стр. 151, если стр. 131 - стр. 141 >= стр. 151.
		ДанРазд.Вставить("П002120016103", Мин(Окр(ДанРазд["П002120013103"])
		- Окр(ДанРазд["П002120014103"]), Окр(ДанРазд["П002120015103"])));
		
		// Стр. 162 = стр. 132 - стр. 142, если стр. 132 - стр. 142 < стр. 152.
		// Стр. 162 = стр. 152, если стр. 132 - стр. 142 >= стр. 152.
		ДанРазд.Вставить("П002120016203", Мин(Окр(ДанРазд["П002120013203"])
		- Окр(ДанРазд["П002120014203"]), Окр(ДанРазд["П002120015203"])));
		
		// Стр. 163 = стр. 133 - стр. 143, если стр. 133 - стр. 143 < стр. 153.
		// Стр. 163 = стр. 153, если стр. 133 - стр. 143 >= стр. 153.
		ДанРазд.Вставить("П002120016303", Мин(Окр(ДанРазд["П002120013303"])
		- Окр(ДанРазд["П002120014303"]), Окр(ДанРазд["П002120015303"])));
		
		// Расчет данных раздела 1.1. по данным подразделов 2.1.1 и 2.1.2 раздела 2.1.
		
		// Стр. 020 разд. 1.1 = (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2,
		// если (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2 >= 0.
		Окр_П002110013003 = Окр(ДанРазд["П002110013003"]);
		Окр_П002110014003 = Окр(ДанРазд["П002110014003"]);
		Окр_П002120016003 = Окр(ДанРазд["П002120016003"]);
		ДанныеРаздел11.Вставить("П000110002003",
		Макс(0, Окр_П002110013003 - Окр_П002110014003 - Окр_П002120016003));
		
		// Стр. 040 разд. 1.1 = (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020,
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 >= 0.
		Окр_П002110013103 = Окр(ДанРазд["П002110013103"]);
		Окр_П002110014103 = Окр(ДанРазд["П002110014103"]);
		Окр_П002120016103 = Окр(ДанРазд["П002120016103"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		ДанныеРаздел11.Вставить("П000110004003",
		Макс(0, Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103 - Окр_П000110002003));
		
		// Стр. 050 разд. 1.1 = стр. 020 - ((стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2),
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 < 0.
		Окр_П002110013103 = Окр(ДанРазд["П002110013103"]);
		Окр_П002110014103 = Окр(ДанРазд["П002110014103"]);
		Окр_П002120016103 = Окр(ДанРазд["П002120016103"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		ДанныеРаздел11.Вставить("П000110005003",
		Макс(0, Окр_П000110002003 - (Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103)));
		
		// Стр. 070 разд. 1.1 = (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050),
		// если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П002110013203 = Окр(ДанРазд["П002110013203"]);
		Окр_П002110014203 = Окр(ДанРазд["П002110014203"]);
		Окр_П002120016203 = Окр(ДанРазд["П002120016203"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		ДанныеРаздел11.Вставить("П000110007003", Макс(0, Окр_П002110013203
		- Окр_П002110014203 - Окр_П002120016203 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003)));
		
		// Стр. 080 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050) - ((стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд.
		// 2.1.2), если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) < 0.
		Окр_П002110013203 = Окр(ДанРазд["П002110013203"]);
		Окр_П002110014203 = Окр(ДанРазд["П002110014203"]);
		Окр_П002120016203 = Окр(ДанРазд["П002120016203"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		ДанныеРаздел11.Вставить("П000110008003", Макс(0, Окр_П000110002003
		+ Окр_П000110004003 - Окр_П000110005003 - (Окр_П002110013203 - Окр_П002110014203 - Окр_П002120016203)));
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0.
		Окр_П002110013303 = Окр(ДанРазд["П002110013303"]);
		Окр_П002110014303 = Окр(ДанРазд["П002110014303"]);
		Окр_П002120016303 = Окр(ДанРазд["П002120016303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		Окр_П000110010103 = Окр(ДанныеРаздел11["П000110010103"]);
		ДанныеРаздел11.Вставить("П000110010003", Макс(0, Окр_П002110013303 - Окр_П002110014303
		- Окр_П002120016303 - (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003) - Окр_П000110010103));
		
		// Стр. 110 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080)
		// - ((стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2),
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0.
		Окр_П002110013303 = Окр(ДанРазд["П002110013303"]);
		Окр_П002110014303 = Окр(ДанРазд["П002110014303"]);
		Окр_П000110002003 = Окр(ДанныеРаздел11["П000110002003"]);
		Окр_П000110004003 = Окр(ДанныеРаздел11["П000110004003"]);
		Окр_П000110005003 = Окр(ДанныеРаздел11["П000110005003"]);
		Окр_П000110007003 = Окр(ДанныеРаздел11["П000110007003"]);
		Окр_П000110008003 = Окр(ДанныеРаздел11["П000110008003"]);
		ДанныеРаздел11.Вставить("П000110011003",
		Макс(0, Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003
		- Окр_П000110008003 - (Окр_П002110013303 - Окр_П002110014303 - Окр_П002120016303)));
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда
		
		ДанРазд = ДанныеРаздел22;
		
		// Расчет данных раздела 2.2.
		
		ПризнакСтавки = "1";
		Если ДанРазд["П000220026003"] = 20 ИЛИ ДанРазд["П000220026103"] = 20
			ИЛИ ДанРазд["П000220026203"] = 20 ИЛИ ДанРазд["П000220026303"] = 20 Тогда
			ПризнакСтавки = "2";
		КонецЕсли;
		ДанРазд.Вставить("П000220020103", ПризнакСтавки);
		
		// Стр. 240 = стр. 210 - стр. 220, если стр. 210 - стр. 220 > 0.
		ДанРазд.Вставить("П000220024003",
		Макс(0, Окр(ДанРазд["П000220021003"]) - Окр(ДанРазд["П000220022003"])));
		
		// Стр. 241 = стр. 211 - стр. 221, если стр. 211 - стр. 221 > 0.
		ДанРазд.Вставить("П000220024103",
		Макс(0, Окр(ДанРазд["П000220021103"]) - Окр(ДанРазд["П000220022103"])));
		
		// Стр. 242 = стр. 212 - стр. 222, если стр. 212 - стр. 222 > 0.
		ДанРазд.Вставить("П000220024203",
		Макс(0, Окр(ДанРазд["П000220021203"]) - Окр(ДанРазд["П000220022203"])));
		
		// Стр. 243 = стр. 213 - стр. 223 - стр. 230, если стр. 213 - стр. 223 - стр. 230 > 0.
		ДанРазд.Вставить("П000220024303", Макс(0, Окр(ДанРазд["П000220021303"])
		- Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220023003"])));
		
		// Стр. 250 = стр. 220 - стр. 210, если стр. 210 < стр. 220.
		ДанРазд.Вставить("П000220025003",
		Макс(0, Окр(ДанРазд["П000220022003"]) - Окр(ДанРазд["П000220021003"])));
		
		// Стр. 251 = стр. 221 - стр. 211, если стр. 211 < стр. 221.
		ДанРазд.Вставить("П000220025103",
		Макс(0, Окр(ДанРазд["П000220022103"]) - Окр(ДанРазд["П000220021103"])));
		
		// Стр. 252 = стр. 222 - стр. 212, если стр. 212 < стр. 222.
		ДанРазд.Вставить("П000220025203",
		Макс(0, Окр(ДанРазд["П000220022203"]) - Окр(ДанРазд["П000220021203"])));
		
		// Стр. 253 = стр. 223 - стр. 213, если стр. 213 < стр. 223.
		ДанРазд.Вставить("П000220025303",
		Макс(0, Окр(ДанРазд["П000220022303"]) - Окр(ДанРазд["П000220021303"])));
		
		// Для стр. 201 = "1": стр. 270 = стр. 240 х стр. 260 / 100.
		// Для стр. 201 = "2": стр. 270 = стр. 240 х стр. 260 / 100.
		Если ПризнакСтавки = "1" ИЛИ ПризнакСтавки = "2" Тогда
			ДанРазд.Вставить("П000220027003",
			Окр(Окр(ДанРазд["П000220024003"]) * ДанРазд["П000220026003"] / 100));
		Иначе
			ДанРазд.Вставить("П000220027003", 0);
		КонецЕсли;
		
		Если Год(ДопПараметры.ДатаОкончания) >= 2022 Тогда
			
			// Для стр. 201 = "1": стр. 271 = стр. 241 х стр. 261 / 100.
			// Для стр. 201 = "2":
			// стр. 271 = стр. 241 х стр. 261 / 100, если стр. 261 = стр. 260;
			// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 261 / 100, если стр. 261 > стр. 260 и стр. 241 >= стр. 240;
			// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 260 / 100, если стр. 261 > стр. 260 и стр. 241 < стр. 240.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026103"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027103", Макс(0,
				Окр(Окр(ДанРазд["П000220024103"]) * ДанРазд["П000220026103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026103"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024103"]) - Окр(ДанРазд["П000220024003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027103", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П000220027103", 0);
			КонецЕсли;
			
			// Для стр. 201 = "1": стр. 272 = стр. 242 х стр. 262 / 100.
			// Для стр. 201 = "2":
			// стр. 272 = стр. 242 х стр. 262 / 100, если стр. 262 = стр. 260;
			// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 262 / 100,
			// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 >= стр. 240;
			// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 260 / 100,
			// если стр. 262 = стр. 261 и стр. 262 > стр. 260 и стр. 242 < стр. 240;
			// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 262 / 100, если 262 > стр. 261 и стр. 242 >= стр. 241;
			// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 261 / 100, если 262 > стр. 261 и стр. 242 < стр. 241.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027203", Макс(0,
				Окр(Окр(ДанРазд["П000220024203"]) * ДанРазд["П000220026203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026103"]
				И ДанРазд["П000220026203"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] > ДанРазд["П000220026103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
					ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027203", Макс(0, Окр(Окр(
					ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П000220027203", 0);
			КонецЕсли;
			
			// Для стр. 201 = "1": стр. 273 = стр. 243 х стр. 263 / 100.
			// Для стр. 201 = "2":
			// стр. 273 = стр. 243 х стр. 263 / 100, если стр. 263 = стр. 260;
			// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 263 / 100, если стр. 263 > стр. 262 и стр. 243 >= стр. 242;
			// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 262 / 100, если стр. 263 > стр. 262 и стр. 243 < стр. 242;
			// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 263 / 100,
			// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 >= стр. 241;
			// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 261 / 100,
			// если стр. 263 = стр. 262 и стр. 263 > стр. 261 и стр. 243 < стр. 241;
			// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 263 / 100,
			// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 >= стр. 240;
			// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 260 / 100,
			// если стр. 263 = стр. 261 и стр. 263 > стр. 260 и стр. 243 < стр. 240.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027303", Макс(0,
				Окр(Окр(ДанРазд["П000220024303"]) * ДанРазд["П000220026303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] > ДанРазд["П000220026203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024203"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026203"]
				И ДанРазд["П000220026303"] > ДанРазд["П000220026103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024103"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
				КонецЕсли;
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026103"]
				И ДанРазд["П000220026303"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024003"]);
				Если РазностьНалБаз >= 0 Тогда
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
				Иначе
					ДанРазд.Вставить("П000220027303", Макс(0, Окр(Окр(
					ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026003"] / 100)));
				КонецЕсли;
			Иначе
				ДанРазд.Вставить("П000220027303", 0);
			КонецЕсли;
			
		Иначе
			
			// Для стр. 201 = "1": стр. 271 = стр. 241 х стр. 261 / 100.
			// Для стр. 201 = "2":
			// стр. 271 = стр. 241 х стр. 261 / 100, если стр. 261 = стр. 260;
			// стр. 271 = стр. 270 + (стр. 241 - стр. 240) х стр. 261 / 100, если стр. 261 > стр. 260.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026103"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027103", Макс(0,
				Окр(Окр(ДанРазд["П000220024103"]) * ДанРазд["П000220026103"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026103"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024103"]) - Окр(ДанРазд["П000220024003"]);
				ДанРазд.Вставить("П000220027103", Макс(0,
				Окр(Окр(ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026103"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027103", 0);
			КонецЕсли;
			
			// Для стр. 201 = "1": стр. 272 = стр. 242 х стр. 262 / 100.
			// Для стр. 201 = "2":
			// стр. 272 = стр. 242 х стр. 262 / 100, если стр. 262 = стр. 260;
			// стр. 272 = стр. 270 + (стр. 242 - стр. 240) х стр. 262 / 100, если стр. 262 = стр. 261 и стр. 262 > стр. 260;
			// стр. 272 = стр. 271 + (стр. 242 - стр. 241) х стр. 262 / 100, если 262 > стр. 261.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027203", Макс(0,
				Окр(Окр(ДанРазд["П000220024203"]) * ДанРазд["П000220026203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] = ДанРазд["П000220026103"]
				И ДанРазд["П000220026203"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024003"]);
				ДанРазд.Вставить("П000220027203", Макс(0,
				Окр(Окр(ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026203"] > ДанРазд["П000220026103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024203"]) - Окр(ДанРазд["П000220024103"]);
				ДанРазд.Вставить("П000220027203", Макс(0,
				Окр(Окр(ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026203"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027203", 0);
			КонецЕсли;
			
			// Для стр. 201 = "1": стр. 273 = стр. 243 х стр. 263 / 100.
			// Для стр. 201 = "2":
			// стр. 273 = стр. 243 х стр. 263 / 100, если стр. 263 = стр. 260;
			// стр. 273 = стр. 272 + (стр. 243 - стр. 242) х стр. 263 / 100, если стр. 263 > стр. 262;
			// стр. 273 = стр. 271 + (стр. 243 - стр. 241) х стр. 263 / 100, если стр. 263 = стр. 262 и стр. 263 > стр. 261;
			// стр. 273 = стр. 270 + (стр. 243 - стр. 240) х стр. 263 / 100, если стр. 263 = стр. 261 и стр. 263 > стр. 260.
			Если ПризнакСтавки = "1"
				ИЛИ (ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026003"]) Тогда
				ДанРазд.Вставить("П000220027303", Макс(0,
				Окр(Окр(ДанРазд["П000220024303"]) * ДанРазд["П000220026303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] > ДанРазд["П000220026203"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024203"]);
				ДанРазд.Вставить("П000220027303", Макс(0,
				Окр(Окр(ДанРазд["П000220027203"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026203"]
				И ДанРазд["П000220026303"] > ДанРазд["П000220026103"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024103"]);
				ДанРазд.Вставить("П000220027303", Макс(0,
				Окр(Окр(ДанРазд["П000220027103"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			ИначеЕсли ПризнакСтавки = "2" И ДанРазд["П000220026303"] = ДанРазд["П000220026103"]
				И ДанРазд["П000220026303"] > ДанРазд["П000220026003"] Тогда
				РазностьНалБаз = Окр(ДанРазд["П000220024303"]) - Окр(ДанРазд["П000220024003"]);
				ДанРазд.Вставить("П000220027303", Макс(0,
				Окр(Окр(ДанРазд["П000220027003"]) + РазностьНалБаз * ДанРазд["П000220026303"] / 100)));
			Иначе
				ДанРазд.Вставить("П000220027303", 0);
			КонецЕсли;
			
		КонецЕсли;
		
		// Если ИП и (2015 <= отч. год <= 2023) и (строки 260-263 раздела 2.2 = 0),
		// то стр. 280 = 0 (случай ИП с налоговыми каникулами).
		// Иначе стр. 280 = стр. 213 х 1 / 100 (налоговая ставка 1%).
		Если ДопПараметры.ИП И Год(ДопПараметры.ДатаОкончания) >= 2015 И Год(ДопПараметры.ДатаОкончания) <= 2023
			И ДанРазд["П000220026003"] = 0 И ДанРазд["П000220026103"] = 0
			И ДанРазд["П000220026203"] = 0 И ДанРазд["П000220026303"] = 0 Тогда
			ДанРазд.Вставить("П000220028003", 0);
		Иначе
			ДанРазд.Вставить("П000220028003", Окр(Окр(ДанРазд["П000220021303"]) / 100));
		КонецЕсли;
		
		// Расчет данных раздела 1.2. по данным раздела 2.2.
		
		// Стр. 020 разд. 1.2 = стр. 270 разд. 2.2.
		Окр_П000220027003 = Окр(ДанРазд["П000220027003"]);
		ДанныеРаздел12.Вставить("П000120002003", Окр_П000220027003);
		
		// Стр. 040 разд. 1.2 = стр. 271 разд. 2.2 - стр. 020,
		// если стр. 271 разд. 2.2 - стр. 020 >= 0.
		Окр_П000220027103 = Окр(ДанРазд["П000220027103"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		ДанныеРаздел12.Вставить("П000120004003", Макс(0, Окр_П000220027103 - Окр_П000120002003));
		
		// Стр. 050 разд. 1.2 = стр. 020 - стр. 271 разд. 2.2,
		// если стр. 271 разд. 2.2 - стр. 020 < 0.
		Окр_П000220027103 = Окр(ДанРазд["П000220027103"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		ДанныеРаздел12.Вставить("П000120005003", - Мин(0, Окр_П000220027103 - Окр_П000120002003));
		
		// Стр. 070 разд. 1.2 = стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050),
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П000220027203 = Окр(ДанРазд["П000220027203"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		ДанныеРаздел12.Вставить("П000120007003",
		Макс(0, Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		// Стр. 080 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050) - стр. 272 разд. 2.2,
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) < 0.
		Окр_П000220027203 = Окр(ДанРазд["П000220027203"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		ДанныеРаздел12.Вставить("П000120008003",
		- Мин(0, Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003)));
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101 >= 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120010003", Макс(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120010003", 0);
		КонецЕсли;
		
		// Стр. 110 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 273 разд. 2.2,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2
		// или (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 280 разд. 2.2,
		// если стр. 273 разд. 2.2 < стр. 280 разд. 2.2
		// и (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) > стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.Вставить("П000120011003", - Мин(0, Окр_П000220027303 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003)));
		Иначе
			ДанныеРаздел12.Вставить("П000120011003", Макс(0, (Окр_П000120002003 + Окр_П000120004003
			- Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000220028003));
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 101,
		// если стр. 280 разд. 2.2 > стр. 273 разд. 2.2
		// и стр. 280 разд. 2.2 > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080 + стр. 101).
		Окр_П000220027303 = Окр(ДанРазд["П000220027303"]);
		Окр_П000220028003 = Окр(ДанРазд["П000220028003"]);
		Окр_П000120002003 = Окр(ДанныеРаздел12["П000120002003"]);
		Окр_П000120004003 = Окр(ДанныеРаздел12["П000120004003"]);
		Окр_П000120005003 = Окр(ДанныеРаздел12["П000120005003"]);
		Окр_П000120007003 = Окр(ДанныеРаздел12["П000120007003"]);
		Окр_П000120008003 = Окр(ДанныеРаздел12["П000120008003"]);
		Окр_П000120010103 = Окр(ДанныеРаздел12["П000120010103"]);
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.Вставить("П000120012003", Макс(0, Окр_П000220028003 - (Окр_П000120002003
			+ Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003) - Окр_П000120010103));
		Иначе
			ДанныеРаздел12.Вставить("П000120012003", 0);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		// Для этого раздела при автоформировании не требуется расчет в строках многострочной части,
		// поскольку эти строки могут быть заполнены только интерактивно.
		
		// Расчет колонок в строке "Итого по отчету" раздела 3.
		Колонка3 = 0;
		Колонка4 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		
		Для каждого ДопСтрока Из РазделыОтчета.Раздел3.ДанныеДопСтрок Цикл
			
			Колонка3 = Колонка3 + Окр(ДопСтрока.П000030000103);
			Колонка4 = Колонка4 + Окр(ДопСтрока.П000030000104);
			Колонка6 = Колонка6 + Окр(ДопСтрока.П000030000106);
			Колонка7 = Колонка7 + Окр(ДопСтрока.П000030000107);
			
		КонецЦикла;
		
		ДанныеРаздел3.Вставить("П000030000203", Колонка3);
		ДанныеРаздел3.Вставить("П000030000204", Колонка4);
		ДанныеРаздел3.Вставить("П000030000206", Колонка6);
		ДанныеРаздел3.Вставить("П000030000207", Колонка7);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, ИмяРаздела = "", ДопПараметры)
	
	ДанныеРаздел11 = РазделыОтчета.Раздел11.Данные;
	ДанныеРаздел12 = РазделыОтчета.Раздел12.Данные;
	ДанныеРаздел21 = РазделыОтчета.Раздел21.Данные;
	ДанныеРаздел22 = РазделыОтчета.Раздел22.Данные;
	ДанныеРаздел3  = РазделыОтчета.Раздел3.Данные;
	
	Если ИмяРаздела = "" Тогда
		
		РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "Раздел3",  ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "Раздел22", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "Раздел21", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "Раздел12", ДопПараметры);
		РасчетРеглОтчетУСНФормаОтчета2015Кв1(РазделыОтчета, "Раздел11", ДопПараметры);
		
	ИначеЕсли ИмяРаздела = "Раздел11" Тогда
		
		// Данные раздела 1.1 рассчитываются по данным раздела 2.1.
		
	ИначеЕсли ИмяРаздела = "Раздел12" Тогда
		
		// Данные раздела 1.2 рассчитываются по данным раздела 2.2.
		
	ИначеЕсли ИмяРаздела = "Раздел21" Тогда
		
		// Расчет данных раздела 2.1.1.
		
		// Стр. 130 = стр. 110 х стр. 120 / 100.
		Окр_П002110011003 = Окр(ДанныеРаздел21.П002110011003);
		ДанныеРаздел21.П002110013003 = Окр_П002110011003
			* ДанныеРаздел21.П002110012003 / 100;
		
		// Стр. 131 = стр. 111 х стр. 121 / 100.
		Окр_П002110011103 = Окр(ДанныеРаздел21.П002110011103);
		ДанныеРаздел21.П002110013103 = Окр_П002110011103
			* ДанныеРаздел21.П002110012103 / 100;
		
		// Стр. 132 = стр. 112 х стр. 122 / 100.
		Окр_П002110011203 = Окр(ДанныеРаздел21.П002110011203);
		ДанныеРаздел21.П002110013203 = Окр_П002110011203
			* ДанныеРаздел21.П002110012203 / 100;
		
		// Стр. 133 = стр. 113 х стр. 123 / 100.
		Окр_П002110011303 = Окр(ДанныеРаздел21.П002110011303);
		ДанныеРаздел21.П002110013303 = Окр_П002110011303
			* ДанныеРаздел21.П002110012303 / 100;
		
		// Расчет данных раздела 2.1.2.
		
		// Стр. 130 = стр. 110 х стр. 120 разд. 2.1.1 / 100.
		Окр_П002120011003 = Окр(ДанныеРаздел21.П002120011003);
		ДанныеРаздел21.П002120013003 = Окр_П002120011003
			* ДанныеРаздел21.П002110012003 / 100;
		
		// Стр. 131 = стр. 111 х стр. 121 разд. 2.1.1 / 100.
		Окр_П002120011103 = Окр(ДанныеРаздел21.П002120011103);
		ДанныеРаздел21.П002120013103 = Окр_П002120011103
			* ДанныеРаздел21.П002110012103 / 100;
		
		// Стр. 132 = стр. 112 х стр. 122 разд. 2.1.1 / 100.
		Окр_П002120011203 = Окр(ДанныеРаздел21.П002120011203);
		ДанныеРаздел21.П002120013203 = Окр_П002120011203
			* ДанныеРаздел21.П002110012203 / 100;
		
		// Стр. 133 = стр. 113 х стр. 123 разд. 2.1.1 / 100.
		Окр_П002120011303 = Окр(ДанныеРаздел21.П002120011303);
		ДанныеРаздел21.П002120013303 = Окр_П002120011303
			* ДанныеРаздел21.П002110012303 / 100;
		
		// Стр. 160 = стр. 130 - стр. 140, если стр. 130 - стр. 140 < стр. 150,
		// при этом стр. 160 <= (стр. 130 - стр. 140) разд. 2.1.1.
		// Стр. 160 = стр. 150, если стр. 130 - стр. 140 >= стр. 150,
		// при этом стр. 160 <=( стр. 130 - стр. 140) разд. 2.1.1.
		Окр_П002120013003 = Окр(ДанныеРаздел21.П002120013003);
		Окр_П002120014003 = Окр(ДанныеРаздел21.П002120014003);
		Окр_П002120015003 = Окр(ДанныеРаздел21.П002120015003);
		Окр_П002110013003 = Окр(ДанныеРаздел21.П002110013003);
		Окр_П002110014003 = Окр(ДанныеРаздел21.П002110014003);
		ДанныеРаздел21.П002120016003
			= Мин(Окр_П002110013003 - Окр_П002110014003, Мин(Окр_П002120013003 - Окр_П002120014003, Окр_П002120015003));
		
		// Стр. 161 = стр. 131 - стр. 141, если стр. 131 - стр. 141 < стр. 151,
		// при этом стр. 161 <= (стр. 131 - стр. 141) разд. 2.1.1.
		// Стр. 161 = стр. 151, если стр. 131 - стр. 141 >= стр. 151,
		// при этом стр. 161 <=( стр. 131 - стр. 141) разд. 2.1.1.
		Окр_П002120013103 = Окр(ДанныеРаздел21.П002120013103);
		Окр_П002120014103 = Окр(ДанныеРаздел21.П002120014103);
		Окр_П002120015103 = Окр(ДанныеРаздел21.П002120015103);
		Окр_П002110013103 = Окр(ДанныеРаздел21.П002110013103);
		Окр_П002110014103 = Окр(ДанныеРаздел21.П002110014103);
		ДанныеРаздел21.П002120016103
			= Мин(Окр_П002110013103 - Окр_П002110014103, Мин(Окр_П002120013103 - Окр_П002120014103, Окр_П002120015103));
		
		// Стр. 162 = стр. 132 - стр. 142, если стр. 132 - стр. 142 < стр. 152,
		// при этом стр. 162 <= (стр. 132 - стр. 142) разд. 2.1.1.
		// Стр. 162 = стр. 152, если стр. 132 - стр. 142 >= стр. 152,
		// при этом стр. 162 <=( стр. 132 - стр. 142) разд. 2.1.1.
		Окр_П002120013203 = Окр(ДанныеРаздел21.П002120013203);
		Окр_П002120014203 = Окр(ДанныеРаздел21.П002120014203);
		Окр_П002120015203 = Окр(ДанныеРаздел21.П002120015203);
		Окр_П002110013203 = Окр(ДанныеРаздел21.П002110013203);
		Окр_П002110014203 = Окр(ДанныеРаздел21.П002110014203);
		ДанныеРаздел21.П002120016203
			= Мин(Окр_П002110013203 - Окр_П002110014203, Мин(Окр_П002120013203 - Окр_П002120014203, Окр_П002120015203));
		
		// Стр. 163 = стр. 133 - стр. 143, если стр. 133 - стр. 143 < стр. 153,
		// при этом стр. 163 <= (стр. 133 - стр. 143) разд. 2.1.1.
		// Стр. 163 = стр. 153, если стр. 133 - стр. 143 >= стр. 153,
		// при этом стр. 163 <=( стр. 133 - стр. 143) разд. 2.1.1.
		Окр_П002120013303 = Окр(ДанныеРаздел21.П002120013303);
		Окр_П002120014303 = Окр(ДанныеРаздел21.П002120014303);
		Окр_П002120015303 = Окр(ДанныеРаздел21.П002120015303);
		Окр_П002110013303 = Окр(ДанныеРаздел21.П002110013303);
		Окр_П002110014303 = Окр(ДанныеРаздел21.П002110014303);
		ДанныеРаздел21.П002120016303
			= Мин(Окр_П002110013303 - Окр_П002110014303, Мин(Окр_П002120013303 - Окр_П002120014303, Окр_П002120015303));
		
		// Расчет данных раздела 1.1. по данным разделов 2.1.1 и 2.1.2.
		
		// Стр. 020 разд. 1.1 = (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2,
		// если (стр. 130 - стр. 140) разд. 2.1.1 - стр. 160 разд. 2.1.2 >= 0.
		Окр_П002110013003 = Окр(ДанныеРаздел21.П002110013003);
		Окр_П002110014003 = Окр(ДанныеРаздел21.П002110014003);
		Окр_П002120016003 = Окр(ДанныеРаздел21.П002120016003);
		ДанныеРаздел11.П000110002003 = Макс(0,
			Окр_П002110013003 - Окр_П002110014003 - Окр_П002120016003);
		
		// Стр. 040 разд. 1.1 = (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020,
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 >= 0.
		Окр_П002110013103 = Окр(ДанныеРаздел21.П002110013103);
		Окр_П002110014103 = Окр(ДанныеРаздел21.П002110014103);
		Окр_П002120016103 = Окр(ДанныеРаздел21.П002120016103);
		
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		ДанныеРаздел11.П000110004003 = Макс(0,
			Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103 - Окр_П000110002003);
		
		// Стр. 050 разд. 1.1 = стр. 020 - ((стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2),
		// если (стр. 131 - стр. 141) разд. 2.1.1 - стр. 161 разд. 2.1.2 - стр. 020 < 0.
		Окр_П002110013103 = Окр(ДанныеРаздел21.П002110013103);
		Окр_П002110014103 = Окр(ДанныеРаздел21.П002110014103);
		Окр_П002120016103 = Окр(ДанныеРаздел21.П002120016103);
		
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		ДанныеРаздел11.П000110005003 = Макс(0,
			Окр_П000110002003 - (Окр_П002110013103 - Окр_П002110014103 - Окр_П002120016103));
		
		// Стр. 070 разд. 1.1 = (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050),
		// если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П002110013203 = Окр(ДанныеРаздел21.П002110013203);
		Окр_П002110014203 = Окр(ДанныеРаздел21.П002110014203);
		Окр_П002120016203 = Окр(ДанныеРаздел21.П002120016203);
		
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		Окр_П000110004003 = Окр(ДанныеРаздел11.П000110004003);
		Окр_П000110005003 = Окр(ДанныеРаздел11.П000110005003);
		ДанныеРаздел11.П000110007003 = Макс(0,
			Окр_П002110013203 - Окр_П002110014203 - Окр_П002120016203
			- (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003));
		
		// Стр. 080 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050) - ((стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2),
		// если (стр. 132 - стр. 142) разд. 2.1.1 - стр. 162 разд. 2.1.2 - (стр. 020 + стр. 040 - стр. 050) < 0
		Окр_П002110013203 = Окр(ДанныеРаздел21.П002110013203);
		Окр_П002110014203 = Окр(ДанныеРаздел21.П002110014203);
		Окр_П002120016203 = Окр(ДанныеРаздел21.П002120016203);
		
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		Окр_П000110004003 = Окр(ДанныеРаздел11.П000110004003);
		Окр_П000110005003 = Окр(ДанныеРаздел11.П000110005003);
		ДанныеРаздел11.П000110008003 = Макс(0,
			Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003
			- (Окр_П002110013203 - Окр_П002110014203 - Окр_П002120016203));
		
		// Стр. 100 разд. 1.1 = (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080),
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) >= 0.
		Окр_П002110013303 = Окр(ДанныеРаздел21.П002110013303);
		Окр_П002110014303 = Окр(ДанныеРаздел21.П002110014303);
		Окр_П002120016303 = Окр(ДанныеРаздел21.П002120016303);
	
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		Окр_П000110004003 = Окр(ДанныеРаздел11.П000110004003);
		Окр_П000110005003 = Окр(ДанныеРаздел11.П000110005003);
		Окр_П000110007003 = Окр(ДанныеРаздел11.П000110007003);
		Окр_П000110008003 = Окр(ДанныеРаздел11.П000110008003);
		ДанныеРаздел11.П000110010003 = Макс(0,
			Окр_П002110013303 - Окр_П002110014303 - Окр_П002120016303
			- (Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003 - Окр_П000110008003));
		
		// Стр. 110 разд. 1.1 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080)
		// - ((стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2),
		// если (стр. 133 - стр. 143) разд. 2.1.1 - стр. 163 разд. 2.1.2
		// - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0.
		Окр_П002110013303 = Окр(ДанныеРаздел21.П002110013303);
		Окр_П002110014303 = Окр(ДанныеРаздел21.П002110014303);
		
		Окр_П000110002003 = Окр(ДанныеРаздел11.П000110002003);
		Окр_П000110004003 = Окр(ДанныеРаздел11.П000110004003);
		Окр_П000110005003 = Окр(ДанныеРаздел11.П000110005003);
		Окр_П000110007003 = Окр(ДанныеРаздел11.П000110007003);
		Окр_П000110008003 = Окр(ДанныеРаздел11.П000110008003);
		ДанныеРаздел11.П000110011003 = Макс(0,
			Окр_П000110002003 + Окр_П000110004003 - Окр_П000110005003 + Окр_П000110007003 - Окр_П000110008003
			- (Окр_П002110013303 - Окр_П002110014303 - Окр_П002120016303));
		
	ИначеЕсли ИмяРаздела = "Раздел22" Тогда
		
		// Расчет данных раздела 2.2.
		
		// Стр. 240 = стр. 210 - стр. 220, если стр. 210 - стр. 220 > 0.
		Окр_П000220021003 = Окр(ДанныеРаздел22.П000220021003);
		Окр_П000220022003 = Окр(ДанныеРаздел22.П000220022003);
		ДанныеРаздел22.П000220024003 = Макс(0, Окр_П000220021003 - Окр_П000220022003);
		
		// Стр. 241 = стр. 211 - стр. 221, если стр. 211 - стр. 221 > 0.
		Окр_П000220021103 = Окр(ДанныеРаздел22.П000220021103);
		Окр_П000220022103 = Окр(ДанныеРаздел22.П000220022103);
		ДанныеРаздел22.П000220024103 = Макс(0, Окр_П000220021103 - Окр_П000220022103);
		
		// Стр. 242 = стр. 212 - стр. 222, если стр. 212 - стр. 222 > 0.
		Окр_П000220021203 = Окр(ДанныеРаздел22.П000220021203);
		Окр_П000220022203 = Окр(ДанныеРаздел22.П000220022203);
		ДанныеРаздел22.П000220024203 = Макс(0, Окр_П000220021203 - Окр_П000220022203);
		
		// Стр. 243 = стр. 213 - стр. 223 - стр. 230, если стр. 213 - стр. 223 - стр. 230 > 0.
		Окр_П000220021303 = Окр(ДанныеРаздел22.П000220021303);
		Окр_П000220022303 = Окр(ДанныеРаздел22.П000220022303);
		Окр_П000220023003 = Окр(ДанныеРаздел22.П000220023003);
		ДанныеРаздел22.П000220024303 = Макс(0,
			Окр_П000220021303 - Окр_П000220022303 - Окр_П000220023003);
		
		// Стр. 250 = стр. 220 - стр. 210, если стр. 210 < стр. 220.
		Окр_П000220021003 = Окр(ДанныеРаздел22.П000220021003);
		Окр_П000220022003 = Окр(ДанныеРаздел22.П000220022003);
		ДанныеРаздел22.П000220025003 = Макс(0, Окр_П000220022003 - Окр_П000220021003);
		
		// Стр. 251 = стр. 221 - стр. 211, если стр. 211 < стр. 221.
		Окр_П000220021103 = Окр(ДанныеРаздел22.П000220021103);
		Окр_П000220022103 = Окр(ДанныеРаздел22.П000220022103);
		ДанныеРаздел22.П000220025103 = Макс(0, Окр_П000220022103 - Окр_П000220021103);
		
		// Стр. 252 = стр. 222 - стр. 212, если стр. 212 < стр. 222.
		Окр_П000220021203 = Окр(ДанныеРаздел22.П000220021203);
		Окр_П000220022203 = Окр(ДанныеРаздел22.П000220022203);
		ДанныеРаздел22.П000220025203 = Макс(0, Окр_П000220022203 - Окр_П000220021203);
		
		// Стр. 253 = стр. 223 - стр. 213, если стр. 213 < стр. 223.
		Окр_П000220021303 = Окр(ДанныеРаздел22.П000220021303);
		Окр_П000220022303 = Окр(ДанныеРаздел22.П000220022303);
		ДанныеРаздел22.П000220025303 = Макс(0, Окр_П000220022303 - Окр_П000220021303);
		
		// Стр. 270 = стр. 240 х стр. 260 / 100.
		Окр_П000220024003 = Окр(ДанныеРаздел22.П000220024003);
		СтН_П000220026003 = ДанныеРаздел22.П000220026003;
		ДанныеРаздел22.П000220027003 = Окр_П000220024003 * СтН_П000220026003 / 100;
		
		// Стр. 271 = стр. 241 х стр. 261 / 100.
		Окр_П000220024103 = Окр(ДанныеРаздел22.П000220024103);
		СтН_П000220026103 = ДанныеРаздел22.П000220026103;
		ДанныеРаздел22.П000220027103 = Окр_П000220024103 * СтН_П000220026103 / 100;
		
		// Стр. 272 = стр. 242 х стр. 262 / 100.
		Окр_П000220024203 = Окр(ДанныеРаздел22.П000220024203);
		СтН_П000220026203 = ДанныеРаздел22.П000220026203;
		ДанныеРаздел22.П000220027203 = Окр_П000220024203 * СтН_П000220026203 / 100;
		
		// Стр. 273 = стр. 243 х стр. 263 / 100.
		Окр_П000220024303 = Окр(ДанныеРаздел22.П000220024303);
		СтН_П000220026303 = ДанныеРаздел22.П000220026303;
		ДанныеРаздел22.П000220027303 = Окр_П000220024303 * СтН_П000220026303 / 100;
		
		// Если ИП и (2015 <= отч. год <= 2023) и (строки 260-263 раздела 2.2 = 0),
		// то Стр. 280 = 0 (случай ИП с налоговыми каникулами).
		// Иначе Стр. 280 = стр. 213 х 1 / 100 (ставка налога 1%).
		Если ДопПараметры.ИП
			И Год(ДопПараметры.ДатаОкончания) >= 2015
			И Год(ДопПараметры.ДатаОкончания) <= 2023
			И ДанныеРаздел22.П000220026003 = 0
			И ДанныеРаздел22.П000220026103 = 0
			И ДанныеРаздел22.П000220026203 = 0
			И ДанныеРаздел22.П000220026303 = 0 Тогда
			ДанныеРаздел22.П000220028003 = 0;
		Иначе
			Окр_П000220021303 = Окр(ДанныеРаздел22.П000220021303);
			ДанныеРаздел22.П000220028003 = Окр_П000220021303 / 100;
		КонецЕсли;
		
		// Расчет данных раздела 1.2. по данным раздела 2.2.
		
		// Стр. 020 разд. 1.2 = стр. 270 разд. 2.2.
		ДанныеРаздел12.П000120002003 = ДанныеРаздел22.П000220027003;
		
		// Стр. 040 разд. 1.2 = стр. 271 разд. 2.2 - стр. 020,
		// если стр. 271 разд. 2.2 - стр. 020 >= 0.
		Окр_П000220027103 = Окр(ДанныеРаздел22.П000220027103);
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		ДанныеРаздел12.П000120004003 = Макс(0, Окр_П000220027103 - Окр_П000120002003);
		
		// Стр. 050 разд. 1.2 = стр. 020 - стр. 271 разд. 2.2,
		// если стр. 271 разд. 2.2 - стр. 020 < 0.
		
		Окр_П000220027103 = Окр(ДанныеРаздел22.П000220027103);
		
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		ДанныеРаздел12.П000120005003 = - Мин(0, Окр_П000220027103 - Окр_П000120002003);
		
		// Стр. 070 разд. 1.2 = стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050),
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) >= 0.
		Окр_П000220027203 = Окр(ДанныеРаздел22.П000220027203);
		
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		Окр_П000120004003 = Окр(ДанныеРаздел12.П000120004003);
		Окр_П000120005003 = Окр(ДанныеРаздел12.П000120005003);
		ДанныеРаздел12.П000120007003 = Макс(0,
			Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003));
		
		// Стр. 080 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050) - стр. 272 разд. 2.2,
		// если стр. 272 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050) < 0.
		Окр_П000220027203 = Окр(ДанныеРаздел22.П000220027203);
		
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		Окр_П000120004003 = Окр(ДанныеРаздел12.П000120004003);
		Окр_П000120005003 = Окр(ДанныеРаздел12.П000120005003);
		ДанныеРаздел12.П000120008003 = - Мин(0,
			Окр_П000220027203 - (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003));
		
		// Стр. 100 разд. 1.2 = стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080),
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) >= 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанныеРаздел22.П000220027303);
		Окр_П000220028003 = Окр(ДанныеРаздел22.П000220028003);
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		Окр_П000120004003 = Окр(ДанныеРаздел12.П000120004003);
		Окр_П000120005003 = Окр(ДанныеРаздел12.П000120005003);
		Окр_П000120007003 = Окр(ДанныеРаздел12.П000120007003);
		Окр_П000120008003 = Окр(ДанныеРаздел12.П000120008003);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.П000120010003 = Макс(0, Окр_П000220027303
				- (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003));
		Иначе
			ДанныеРаздел12.П000120010003 = 0;
		КонецЕсли;
		
		// Стр. 110 разд. 1.2 = (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 273 разд. 2.2,
		// если стр. 273 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) < 0
		// и стр. 273 разд. 2.2 >= стр. 280 разд. 2.2
		// или (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) - стр. 280 разд. 2.2,
		// если стр. 273 разд. 2.2 < стр. 280 разд. 2.2
		// и (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080) > стр. 280 разд. 2.2.
		Окр_П000220027303 = Окр(ДанныеРаздел22.П000220027303);
		Окр_П000220028003 = Окр(ДанныеРаздел22.П000220028003);
		
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		Окр_П000120004003 = Окр(ДанныеРаздел12.П000120004003);
		Окр_П000120005003 = Окр(ДанныеРаздел12.П000120005003);
		Окр_П000120007003 = Окр(ДанныеРаздел12.П000120007003);
		Окр_П000120008003 = Окр(ДанныеРаздел12.П000120008003);
		Если Окр_П000220027303 >= Окр_П000220028003 Тогда
			ДанныеРаздел12.П000120011003 = - Мин(0,
				Окр_П000220027303
				- (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003));
		Иначе
			ДанныеРаздел12.П000120011003 = Макс(0,
				(Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003)
				- Окр_П000220028003);
		КонецЕсли;
		
		// Стр. 120 разд. 1.2 = стр. 280 разд. 2.2 - (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080),
		// если стр. 280 разд. 2.2 > стр. 273 разд. 2.2
		// и стр. 280 разд. 2.2 > (стр. 020 + стр. 040 - стр. 050 + стр. 070 - стр. 080).
		Окр_П000220027303 = Окр(ДанныеРаздел22.П000220027303);
		Окр_П000220028003 = Окр(ДанныеРаздел22.П000220028003);
		
		Окр_П000120002003 = Окр(ДанныеРаздел12.П000120002003);
		Окр_П000120004003 = Окр(ДанныеРаздел12.П000120004003);
		Окр_П000120005003 = Окр(ДанныеРаздел12.П000120005003);
		Окр_П000120007003 = Окр(ДанныеРаздел12.П000120007003);
		Окр_П000120008003 = Окр(ДанныеРаздел12.П000120008003);
		Если Окр_П000220028003 > Окр_П000220027303 Тогда
			ДанныеРаздел12.П000120012003 = Макс(0, Окр_П000220028003
				- (Окр_П000120002003 + Окр_П000120004003 - Окр_П000120005003 + Окр_П000120007003 - Окр_П000120008003));
		Иначе
			ДанныеРаздел12.П000120012003 = 0;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		// Для этого раздела при автоформировании не требуется расчет в строках многострочной части,
		// поскольку эти строки могут быть заполнены только интерактивно.
		
		// Расчет колонок в строке "Итого по отчету" раздела 3.
		Колонка3 = 0;
		Колонка4 = 0;
		Колонка6 = 0;
		Колонка7 = 0;
		
		Для каждого ДопСтрока Из РазделыОтчета.Раздел3.ДанныеДопСтрок Цикл
			
			Колонка3 = Колонка3 + Окр(ДопСтрока.П000030000103);
			Колонка4 = Колонка4 + Окр(ДопСтрока.П000030000104);
			Колонка6 = Колонка6 + Окр(ДопСтрока.П000030000106);
			Колонка7 = Колонка7 + Окр(ДопСтрока.П000030000107);
			
		КонецЦикла;
		
		ДанныеРаздел3.Вставить("П000030000203", Колонка3);
		ДанныеРаздел3.Вставить("П000030000204", Колонка4);
		ДанныеРаздел3.Вставить("П000030000206", Колонка6);
		ДанныеРаздел3.Вставить("П000030000207", Колонка7);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2024Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ТипНП, ТелОрганизации, ФИО, ОКТМО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, СтрокаСведений);
	
	ТитульныйДанные.Вставить("ИНН", СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("КПП", СокрЛП(СведенияОбОрганизации.КППЮЛ));
	
	КодНО = СведенияОбОрганизации.КодНО;
	Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
		КодНО = " " + КодНО;
	КонецЦикла;
	ТитульныйДанные.Вставить("НалоговыйОрган", КодНО);
	
	ПоМесту = "   ";
	Если СведенияОбОрганизации.ТипНП = 1 Тогда
		ПоМесту = "210";
	ИначеЕсли СведенияОбОрганизации.ТипНП = 3 Тогда
		ПоМесту = "120";
	КонецЕсли;
	ТитульныйДанные.Вставить("ПоМесту", ПоМесту);
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
	ТитульныйДанные.Вставить("НаимОрг",
	?(ЭтоИП, СокрЛП(СведенияОбОрганизации.ФИО), СокрЛП(СведенияОбОрганизации.НаимЮлПол)));
	
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ОбъектНалогообложенияУСН");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаОкончания, Сведения);
	ВидОбъектаНалогообложения = "";
	ОргСведения.Свойство("ОбъектНалогообложенияУСН", ВидОбъектаНалогообложения);
	ОбНал = "";
	Если ВидОбъектаНалогообложения = 1 Тогда
		ОбНал = "1";
	ИначеЕсли ВидОбъектаНалогообложения = 2 Тогда
		ОбНал = "2";
	КонецЕсли;
	ТитульныйДанные.Вставить("ОбНал", ОбНал);
	
	// Код ОКТМО в разделах
	РазделыОтчета.Раздел11.Данные.Вставить("П000110001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	РазделыОтчета.Раздел12.Данные.Вставить("П000120001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2023Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ТипНП, ТелОрганизации, ФИО, ОКТМО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, СтрокаСведений);
	
	ТитульныйДанные.Вставить("ИНН", СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("КПП", СокрЛП(СведенияОбОрганизации.КППЮЛ));
	
	КодНО = СведенияОбОрганизации.КодНО;
	Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
		КодНО = " " + КодНО;
	КонецЦикла;
	ТитульныйДанные.Вставить("НалоговыйОрган", КодНО);
	
	ПоМесту = "   ";
	Если СведенияОбОрганизации.ТипНП = 1 Тогда
		ПоМесту = "210";
	ИначеЕсли СведенияОбОрганизации.ТипНП = 3 Тогда
		ПоМесту = "120";
	КонецЕсли;
	ТитульныйДанные.Вставить("ПоМесту", ПоМесту);
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
	ТитульныйДанные.Вставить("НаимОрг",
	?(ЭтоИП, СокрЛП(СведенияОбОрганизации.ФИО), СокрЛП(СведенияОбОрганизации.НаимЮлПол)));
	
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	// Код ОКТМО в разделах
	РазделыОтчета.Раздел11.Данные.Вставить("П000110001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	РазделыОтчета.Раздел12.Данные.Вставить("П000120001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2021Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, ТипНП, ТелОрганизации, ФИО, ОКТМО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, СтрокаСведений);
	
	ТитульныйДанные.Вставить("ИНН", СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("КПП", СокрЛП(СведенияОбОрганизации.КППЮЛ));
	
	КодНО = СведенияОбОрганизации.КодНО;
	Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
		КодНО = " " + КодНО;
	КонецЦикла;
	ТитульныйДанные.Вставить("НалоговыйОрган", КодНО);
	
	ПоМесту = "   ";
	Если СведенияОбОрганизации.ТипНП = 1 Тогда
		ПоМесту = "210";
	ИначеЕсли СведенияОбОрганизации.ТипНП = 3 Тогда
		ПоМесту = "120";
	КонецЕсли;
	ТитульныйДанные.Вставить("ПоМесту", ПоМесту);
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
	ТитульныйДанные.Вставить("НаимОрг",
	?(ЭтоИП, СокрЛП(СведенияОбОрганизации.ФИО), СокрЛП(СведенияОбОрганизации.НаимЮлПол)));
	
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	// Код ОКТМО в разделах
	РазделыОтчета.Раздел11.Данные.Вставить("П000110001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	РазделыОтчета.Раздел12.Данные.Вставить("П000120001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетУСНФормаОтчета2015Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СтрокаСведений = "ИННЮЛ, КППЮЛ, НаимЮЛПол, КодНО, НаимНО, ТипНП, ТелОрганизации, ФИО, ОКАТО, ОКТМО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ДатаПодписи, СтрокаСведений);
	
	ТитульныйДанные.Вставить("ИНН", СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("КПП", СокрЛП(СведенияОбОрганизации.КППЮЛ));
	
	КодНО = СведенияОбОрганизации.КодНО;
	Для Инд = СтрДлина(СведенияОбОрганизации.КодНО) + 1 По 4 Цикл
		КодНО = " " + КодНО;
	КонецЦикла;
	ТитульныйДанные.Вставить("НалоговыйОрган", КодНО);
	
	ПоМесту = "   ";
	Если СведенияОбОрганизации.ТипНП = 1 Тогда
		ПоМесту = "210";
	ИначеЕсли СведенияОбОрганизации.ТипНП = 3 Тогда
		ПоМесту = "120";
	КонецЕсли;
	ТитульныйДанные.Вставить("ПоМесту", ПоМесту);
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
	
	ТитульныйДанные.Вставить("НаимОрг", ?(ЭтоИП,
		СокрЛП(СведенияОбОрганизации.ФИО),
		СокрЛП(СведенияОбОрганизации.НаимЮлПол)));
	
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	// Код ОКВЭД или ОКВЭД2
	ТитульныйДанные.Вставить("ОКВЭД", "");
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТитульныйДанные.ОКВЭД);
	
	// Код ОКТМО в разделах
	РазделыОтчета.Раздел11.Данные.Вставить("П000110001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	РазделыОтчета.Раздел12.Данные.Вставить("П000120001003", СокрЛП(СведенияОбОрганизации.ОКТМО));
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2024Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	Если НаимРаздела = "Раздел21" Тогда
		
		Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
			И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
			ТабличныйДокумент.Области.П002110010203.Значение = "2";
		Иначе
			ТабличныйДокумент.Области.П002110010203.Значение = "1";
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	ИначеЕсли НаимРаздела = "Раздел3" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2023Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	Если НаимРаздела = "Раздел21" Тогда
		
		Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
			И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
			ТабличныйДокумент.Области.П002110010203.Значение = "2";
		Иначе
			ТабличныйДокумент.Области.П002110010203.Значение = "1";
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	ИначеЕсли НаимРаздела = "Раздел3" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2021Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	Если НаимРаздела = "Раздел21" Тогда
		
		Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
			И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
			ТабличныйДокумент.Области.П002110010203.Значение = "2";
		Иначе
			ТабличныйДокумент.Области.П002110010203.Значение = "1";
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	ИначеЕсли НаимРаздела = "Раздел3" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2015Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	Если НаимРаздела = "Раздел21" Тогда
		
		Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
			И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
			ТабличныйДокумент.Области.П002110010203.Значение = "2";
		Иначе
			ТабличныйДокумент.Области.П002110010203.Значение = "1";
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	ИначеЕсли НаимРаздела = "Раздел3" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	Иначе
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ЗаписатьРеглОтчетУСНФормаОтчета2024Кв1(ПараметрыЗаписи)
	
	ИсточникОтчета        = ПараметрыЗаписи.ИсточникОтчета;
	ИмяФормыОтчета        = ПараметрыЗаписи.ИмяФормыОтчета;
	Организация           = ПараметрыЗаписи.Организация;
	ДатаНачала            = ПараметрыЗаписи.ДатаНачала;
	ДатаОкончания         = ПараметрыЗаписи.ДатаОкончания;
	РазделыОтчета         = ПараметрыЗаписи.РазделыОтчета;
	ДанныеРеглОтчета      = ПараметрыЗаписи.ДанныеРеглОтчета;
	СохраняемыйРеглОтчет  = ПараметрыЗаписи.СсылкаНаСохрРеглОтчет;
	
	Если СохраняемыйРеглОтчет <> Неопределено Тогда
		
		Если ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
			И НЕ СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет.ПолучитьОбъект();
			ДокументРегламентированныйОтчет.Заблокировать();
			
		ИначеЕсли ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет;
			ДокументРегламентированныйОтчет.Заблокировать();
			
		Иначе
			
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН';
						|en = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН'"),
						ТипЗнч(СохраняемыйРеглОтчет)));
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по УСН";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида
		= РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("ДатаНачала", ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания", ДатаОкончания);
	
	Если РегламентированнаяОтчетность.ОрганизацияПрекратилаДеятельность(СтруктураПараметров) Тогда
		
		РазделыОтчета.Титульный.Данные.Период = "50";
		РазделыОтчета.Титульный.Данные.КодФормыРеорганизации = "0";
		
	Иначе
		
		РазделыОтчета.Титульный.Данные.Период = "34";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОтчетГод    = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	СписокСохранения = Новый Структура;
	
	ПоказателиОтчета = Новый Структура();
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы",                   ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц",              ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",           ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",                ДанныеРеглОтчета.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена",   ДанныеРеглОтчета.ПечатьБезШтрихкодаРазрешена);
	
	СписокСохранения.Вставить("СохранятьРасшифровку", Ложь);
	Если ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки <> Неопределено Тогда
		СписокСохранения.Вставить("СохранятьРасшифровку", Истина);
		СписокСохранения.Вставить("Расшифровка",
		ПолучитьИзВременногоХранилища(ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки));
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																						|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетУСНФормаОтчета2023Кв1(ПараметрыЗаписи)
	
	ИсточникОтчета        = ПараметрыЗаписи.ИсточникОтчета;
	ИмяФормыОтчета        = ПараметрыЗаписи.ИмяФормыОтчета;
	Организация           = ПараметрыЗаписи.Организация;
	ДатаНачала            = ПараметрыЗаписи.ДатаНачала;
	ДатаОкончания         = ПараметрыЗаписи.ДатаОкончания;
	РазделыОтчета         = ПараметрыЗаписи.РазделыОтчета;
	ДанныеРеглОтчета      = ПараметрыЗаписи.ДанныеРеглОтчета;
	СохраняемыйРеглОтчет  = ПараметрыЗаписи.СсылкаНаСохрРеглОтчет;
	
	Если СохраняемыйРеглОтчет <> Неопределено Тогда
		
		Если ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
			И НЕ СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет.ПолучитьОбъект();
			ДокументРегламентированныйОтчет.Заблокировать();
			
		ИначеЕсли ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет;
			ДокументРегламентированныйОтчет.Заблокировать();
			
		Иначе
			
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН';
						|en = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН'"),
						ТипЗнч(СохраняемыйРеглОтчет)));
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по УСН";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида
		= РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("Организация", Организация);
	СтруктураПараметров.Вставить("ДатаНачала", ДатаНачала);
	СтруктураПараметров.Вставить("ДатаОкончания", ДатаОкончания);
	
	Если РегламентированнаяОтчетность.ОрганизацияПрекратилаДеятельность(СтруктураПараметров) Тогда
		
		РазделыОтчета.Титульный.Данные.Период = "50";
		РазделыОтчета.Титульный.Данные.КодФормыРеорганизации = "0";
		
	Иначе
		
		РазделыОтчета.Титульный.Данные.Период = "34";
		
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.ОтчетГод    = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	СписокСохранения = Новый Структура;
	
	ПоказателиОтчета = Новый Структура();
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы",                   ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц",              ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",           ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",                ДанныеРеглОтчета.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена",   ДанныеРеглОтчета.ПечатьБезШтрихкодаРазрешена);
	
	СписокСохранения.Вставить("СохранятьРасшифровку", Ложь);
	Если ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки <> Неопределено Тогда
		СписокСохранения.Вставить("СохранятьРасшифровку", Истина);
		СписокСохранения.Вставить("Расшифровка",
		ПолучитьИзВременногоХранилища(ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки));
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																						|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетУСНФормаОтчета2021Кв1(ПараметрыЗаписи)
	
	ИсточникОтчета        = ПараметрыЗаписи.ИсточникОтчета;
	ИмяФормыОтчета        = ПараметрыЗаписи.ИмяФормыОтчета;
	Организация           = ПараметрыЗаписи.Организация;
	ДатаНачала            = ПараметрыЗаписи.ДатаНачала;
	ДатаОкончания         = ПараметрыЗаписи.ДатаОкончания;
	РазделыОтчета         = ПараметрыЗаписи.РазделыОтчета;
	ДанныеРеглОтчета      = ПараметрыЗаписи.ДанныеРеглОтчета;
	СохраняемыйРеглОтчет  = ПараметрыЗаписи.СсылкаНаСохрРеглОтчет;
	
	Если СохраняемыйРеглОтчет <> Неопределено Тогда
		
		Если ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
			И НЕ СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет.ПолучитьОбъект();
			ДокументРегламентированныйОтчет.Заблокировать();
			
		ИначеЕсли ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет;
			ДокументРегламентированныйОтчет.Заблокировать();
			
		Иначе
			
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН';
						|en = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН'"),
						ТипЗнч(СохраняемыйРеглОтчет)));
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по УСН";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида
		= РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	РазделыОтчета.Титульный.Данные.Период      = "34";
	РазделыОтчета.Титульный.Данные.ОтчетГод    = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	СписокСохранения = Новый Структура;
	
	ПоказателиОтчета = Новый Структура();
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы",                   ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц",              ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",           ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",                ДанныеРеглОтчета.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена",   ДанныеРеглОтчета.ПечатьБезШтрихкодаРазрешена);
	
	СписокСохранения.Вставить("СохранятьРасшифровку", Ложь);
	Если ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки <> Неопределено Тогда
		СписокСохранения.Вставить("СохранятьРасшифровку", Истина);
		СписокСохранения.Вставить("Расшифровка",
		ПолучитьИзВременногоХранилища(ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки));
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																						|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетУСНФормаОтчета2015Кв1(ПараметрыЗаписи)
	
	ИсточникОтчета        = ПараметрыЗаписи.ИсточникОтчета;
	ИмяФормыОтчета        = ПараметрыЗаписи.ИмяФормыОтчета;
	Организация           = ПараметрыЗаписи.Организация;
	ДатаНачала            = ПараметрыЗаписи.ДатаНачала;
	ДатаОкончания         = ПараметрыЗаписи.ДатаОкончания;
	РазделыОтчета         = ПараметрыЗаписи.РазделыОтчета;
	ДанныеРеглОтчета      = ПараметрыЗаписи.ДанныеРеглОтчета;
	СохраняемыйРеглОтчет  = ПараметрыЗаписи.СсылкаНаСохрРеглОтчет;
	
	Если СохраняемыйРеглОтчет <> Неопределено Тогда
		
		Если ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументСсылка.РегламентированныйОтчет")
			И НЕ СохраняемыйРеглОтчет.Пустая() Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет.ПолучитьОбъект();
			ДокументРегламентированныйОтчет.Заблокировать();
			
		ИначеЕсли ТипЗнч(СохраняемыйРеглОтчет) = Тип("ДокументОбъект.РегламентированныйОтчет") Тогда
			
			ДокументРегламентированныйОтчет = СохраняемыйРеглОтчет;
			ДокументРегламентированныйОтчет.Заблокировать();
			
		Иначе
			
			РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи,
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					НСтр("ru = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН';
						|en = 'Неверный тип входящего параметра (%1) при автоматическом формировании декларации по УСН'"),
						ТипЗнч(СохраняемыйРеглОтчет)));
			Возврат Неопределено;
			
		КонецЕсли
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = ИсточникОтчета;
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по УСН";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида
		= РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	РазделыОтчета.Титульный.Данные.Период      = "34";
	РазделыОтчета.Титульный.Данные.ОтчетГод    = Формат(ДатаОкончания, "ДФ=гггг");
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	СписокСохранения = Новый Структура;
	
	ПоказателиОтчета = Новый Структура();
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы",                   ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц",              ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений",           ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("Автозаполнение",                ДанныеРеглОтчета.Автозаполнение);
	СписокСохранения.Вставить("ПечатьБезШтрихкодаРазрешена",   ДанныеРеглОтчета.ПечатьБезШтрихкодаРазрешена);
	
	СписокСохранения.Вставить("СохранятьРасшифровку", Ложь);
	Если ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки <> Неопределено Тогда
		СписокСохранения.Вставить("СохранятьРасшифровку", Истина);
		СписокСохранения.Вставить("Расшифровка",
		ПолучитьИзВременногоХранилища(ПараметрыЗаписи.АдресВременногоХранилищаРасшифровки));
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		
		ДокументРегламентированныйОтчет.Записать();
		
	Исключение
		
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																						|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
		РегламентированнаяОтчетность.ДобавитьОшибкуФормированияРеглОтчета(ПараметрыЗаписи, ТекстСообщения);
		
		Возврат Неопределено;
		
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Процедура ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2024Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел11";
	СтрокаУровня1.Представление            = "Раздел 1.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел12";
	СтрокаУровня1.Представление            = "Раздел 1.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел21";
	СтрокаУровня1.Представление            = "Раздел 2.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел22";
	СтрокаУровня1.Представление            = "Раздел 2.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел3";
	СтрокаУровня1.Представление            = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел4";
	СтрокаУровня1.Представление            = "Раздел 4";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2023Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел11";
	СтрокаУровня1.Представление            = "Раздел 1.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел12";
	СтрокаУровня1.Представление            = "Раздел 1.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел21";
	СтрокаУровня1.Представление            = "Раздел 2.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел22";
	СтрокаУровня1.Представление            = "Раздел 2.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел3";
	СтрокаУровня1.Представление            = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2021Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел11";
	СтрокаУровня1.Представление            = "Раздел 1.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел12";
	СтрокаУровня1.Представление            = "Раздел 1.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел21";
	СтрокаУровня1.Представление            = "Раздел 2.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел22";
	СтрокаУровня1.Представление            = "Раздел 2.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел3";
	СтрокаУровня1.Представление            = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетУСНФормаОтчета2015Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Титульный";
	СтрокаУровня1.Представление            = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел11";
	СтрокаУровня1.Представление            = "Раздел 1.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел12";
	СтрокаУровня1.Представление            = "Раздел 1.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел21";
	СтрокаУровня1.Представление            = "Раздел 2.1";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел22";
	СтрокаУровня1.Представление            = "Раздел 2.2";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 1;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();;
	СтрокаУровня1.ИмяСтраницы              = "Раздел3";
	СтрокаУровня1.Представление            = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы       = "Портрет";
	СтрокаУровня1.ВыводНаПечать            = 0;
	СтрокаУровня1.ПоказатьСтраницу         = 1;
	СтрокаУровня1.ВыгрузитьСтраницу        = 2;
	
КонецПроцедуры

Процедура СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2024Кв1(ОбъектНалогообложения, ДеревоСтраницОтчета)
	
	Если ОбъектНалогообложения = "1" Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел12", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел22", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	ИначеЕсли ОбъектНалогообложения = "2" Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел11", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел21", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2023Кв1(Организация, ПериодОтчета, ДеревоСтраницОтчета)
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ОбъектНалогообложенияУСН");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ПериодОтчета, Сведения);
	
	ВидОбъектаНалогообложения = "";
	
	ОргСведения.Свойство("ОбъектНалогообложенияУСН", ВидОбъектаНалогообложения);
	
	Если ВидОбъектаНалогообложения = 1 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел12", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел22", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	ИначеЕсли ВидОбъектаНалогообложения = 2 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел11", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел21", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2021Кв1(Организация, ПериодОтчета, ДеревоСтраницОтчета)
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ОбъектНалогообложенияУСН");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ПериодОтчета, Сведения);
	
	ВидОбъектаНалогообложения = "";
	
	ОргСведения.Свойство("ОбъектНалогообложенияУСН", ВидОбъектаНалогообложения);
	
	Если ВидОбъектаНалогообложения = 1 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел12", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел22", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	ИначеЕсли ВидОбъектаНалогообложения = 2 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел11", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел21", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СкрытьРазделыПоОбъектуНалогообложенияРеглОтчетУСНФормаОтчета2015Кв1(Организация, ПериодОтчета, ДеревоСтраницОтчета)
	
	Сведения = Новый СписокЗначений;
	Сведения.Добавить("", "ОбъектНалогообложенияУСН");
	ОргСведения = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Организация, ПериодОтчета, Сведения);
	
	ВидОбъектаНалогообложения = "";
	
	ОргСведения.Свойство("ОбъектНалогообложенияУСН", ВидОбъектаНалогообложения);
	
	Если ВидОбъектаНалогообложения = 1 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел12", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел22", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	ИначеЕсли ВидОбъектаНалогообложения = 2 Тогда
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел11", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
		НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти("Раздел21", "ИмяСтраницы");
		Если НастройкиСтраницыРаздела <> Неопределено Тогда
			НастройкиСтраницыРаздела.ВыводНаПечать    = 0;
			НастройкиСтраницыРаздела.ПоказатьСтраницу = 0;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВключитьПечатьЗаполненногоНеобязательногоРаздела(ИмяРаздела, СтруктураДанныхРаздела, ДеревоСтраницОтчета)
	
	Если ИмяРаздела = "Раздел3" Тогда
		ПрефиксПоказателейРаздела = "П00003";
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда
		ПрефиксПоказателейРаздела = "П00004";
	Иначе
		Возврат;
	КонецЕсли;
	
	Для Каждого Показатель Из СтруктураДанныхРаздела Цикл
		Если СтрНачинаетсяС(Показатель.Ключ, ПрефиксПоказателейРаздела) И ЗначениеЗаполнено(Показатель.Значение) Тогда
			НастройкиСтраницыРаздела = ДеревоСтраницОтчета.Строки.Найти(ИмяРаздела, "ИмяСтраницы");
			Если НастройкиСтраницыРаздела <> Неопределено Тогда
				НастройкиСтраницыРаздела.ВыводНаПечать = 1;
			КонецЕсли;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры = Неопределено)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если (НЕ Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные.Количество() = 0)
		   ИЛИ (Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные[0].Данные.Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(Отчеты["РегламентированныйОтчетУСН"].ПолучитьМакет(ИмяФормыОтчета + "_" + Раздел.Ключ));
			
			Если ИмяФормыОтчета = "ФормаОтчета2024Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2024Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2023Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2023Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2021Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2021Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2015Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетУСНФормаОтчета2015Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
				КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли