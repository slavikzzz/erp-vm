#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДатаНачала, ДатаКонца;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ДокументРезультат.Очистить();
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ЗначениеПараметра = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Период"));
	Если ЗначениеПараметра <> Неопределено Тогда
		ДатаНачала = Дата(ЗначениеПараметра.Значение.ДатаНачала);
		ДатаКонца  = Дата(ЗначениеПараметра.Значение.ДатаОкончания);
	КонецЕсли;
	
	Если ДатаНачала = '00010101' Тогда
		ДатаНачала = НачалоМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	Если ДатаКонца = '00010101' Тогда
		ДатаКонца = КонецМесяца(ТекущаяДатаСеанса());
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Организация = Неопределено;
	Для Каждого ЭлементОтбора Из НастройкиОтчета.Отбор.Элементы Цикл
		
		Если ТипЗнч(ЭлементОтбора) <> Тип("ЭлементОтбораКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		
		Если Не ЭлементОтбора.Использование Тогда
			Продолжить;
		КонецЕсли;
		
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ГоловнаяОрганизация") Тогда
			Организация = ЭлементОтбора.ПравоеЗначение;
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Запрос.Текст=
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	Организации.Ссылка КАК Организация,
	|	Организации.ПометкаУдаления КАК ПометкаУдаления
	|ПОМЕСТИТЬ ВТРазрешенныеОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	&УсловиеПоОрганизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	СведенияОДоходахСтраховыеВзносы.Организация КАК Организация,
	|	ГОД(СведенияОДоходахСтраховыеВзносы.Период) КАК Год,
	|	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахСтраховыеВзносы.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТФизическиеЛицаПоОрганизациямИГодам
	|ИЗ
	|	ВТРазрешенныеОрганизации КАК ВТРазрешенныеОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходахСтраховыеВзносы
	|		ПО ВТРазрешенныеОрганизации.Организация = СведенияОДоходахСтраховыеВзносы.Организация
	|ГДЕ
	|	СведенияОДоходахСтраховыеВзносы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРазрешенныеОрганизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТФизическиеЛицаПоОрганизациямИГодам.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТФизическиеЛицаПоОрганизациямИГодам КАК ВТФизическиеЛицаПоОрганизациямИГодам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТФизическиеЛицаПоОрганизациямИГодам.Организация КАК Организация,
	|	ВТФизическиеЛицаПоОрганизациямИГодам.Год КАК Год,
	|	ВТФизическиеЛицаПоОрганизациямИГодам.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ИЗ
	|	ВТФизическиеЛицаПоОрганизациямИГодам КАК ВТФизическиеЛицаПоОрганизациямИГодам";
	
	Если Организация = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "ИСТИНА");
	Иначе
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеПоОрганизации", "Организации.ГоловнаяОрганизация = &ГоловнаяОрганизация");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", ДатаНачала);
	Запрос.УстановитьПараметр("КонецПериода", ДатаКонца);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", Организация);
	
	КолонкиВзносов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(УчетСтраховыхВзносов.РассчитываемыеВзносы());
	
	РассчитанныеВзносы = Новый ТаблицаЗначений;
	
	РассчитанныеВзносы.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов("СправочникСсылка.ФизическиеЛица"));
	РассчитанныеВзносы.Колонки.Добавить("Период", Новый ОписаниеТипов("Дата"));
	РассчитанныеВзносы.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	РассчитанныеВзносы.Колонки.Добавить("ГоловнаяОрганизация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	РассчитанныеВзносы.Колонки.Добавить("ФССПоОсновномуТарифу", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РассчитанныеВзносы.Колонки.Добавить("ФОМСПоОсновномуТарифу", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РассчитанныеВзносы.Колонки.Добавить("ПФРДоПредельнойВеличиныПоОсновномуТарифу", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РассчитанныеВзносы.Колонки.Добавить("ПФРСПревышенияПоОсновномуТарифу", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	РассчитанныеВзносы.Колонки.Добавить("ВсегоПоОсновномуТарифу", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));

	Выборка = Запрос.Выполнить().Выбрать();

	Пока Выборка.Следующий() Цикл
		
		РассчитанныеЗаГодВзносы = УчетСтраховыхВзносов.РассчитатьВзносы(Неопределено, Выборка.Организация, Дата(Выборка.Год,12,31),
			Запрос.МенеджерВременныхТаблиц, Ложь, ДатаКонца, Истина);
		Для Каждого СтрокаВзносовЗаГод Из РассчитанныеЗаГодВзносы Цикл
			НоваяСтрока = РассчитанныеВзносы.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаВзносовЗаГод);
			НоваяСтрока.Период = НачалоМесяца(СтрокаВзносовЗаГод.ДатаПолученияДохода);
			НоваяСтрока.ФССПоОсновномуТарифу = СтрокаВзносовЗаГод.ФСС + СтрокаВзносовЗаГод.ФССЕНВД;
			НоваяСтрока.ФОМСПоОсновномуТарифу = СтрокаВзносовЗаГод.ФФОМС + СтрокаВзносовЗаГод.ФФОМСЕНВД;
			НоваяСтрока.ПФРДоПредельнойВеличиныПоОсновномуТарифу = СтрокаВзносовЗаГод.ПФРДоПредельнойВеличины + СтрокаВзносовЗаГод.ПФРДоПредельнойВеличиныЕНВД 
				+ СтрокаВзносовЗаГод.ОПСпоМеждународнымДоговорам + СтрокаВзносовЗаГод.ОМСпоМеждународнымДоговорам + СтрокаВзносовЗаГод.ОССпоМеждународнымДоговорам;
			НоваяСтрока.ПФРСПревышенияПоОсновномуТарифу = СтрокаВзносовЗаГод.ПФРСПревышения + СтрокаВзносовЗаГод.ПФРСПревышенияЕНВД
				+ СтрокаВзносовЗаГод.ОПСпоМеждународнымДоговорамСПревышения + СтрокаВзносовЗаГод.ОМСпоМеждународнымДоговорамСПревышения + СтрокаВзносовЗаГод.ОССпоМеждународнымДоговорамСПревышения;
			НоваяСтрока.ВсегоПоОсновномуТарифу = НоваяСтрока.ФССПоОсновномуТарифу
				+ НоваяСтрока.ФОМСПоОсновномуТарифу
				+ НоваяСтрока.ПФРДоПредельнойВеличиныПоОсновномуТарифу 
				+ НоваяСтрока.ПФРСПревышенияПоОсновномуТарифу;
		КонецЦикла;
		
	КонецЦикла;
	
	ВнешниеНаборыДанных = Новый Структура;
	ВнешниеНаборыДанных.Вставить("ВзносыРассчитанныеПоОсновномуТарифу", РассчитанныеВзносы);
	
	МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанных(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
		
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки, Истина);
	
	УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	ТаблицаЗначений = Новый ТаблицаЗначений;
	ПроцессорВывода.УстановитьОбъект(ТаблицаЗначений);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	ДопСвойства = КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства;
	ДопСвойства.Вставить("ОтчетПустой", ТаблицаЗначений.Количество() = 0);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет() Экспорт
	
	ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект);
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если КлючСхемы <> КлючВарианта Тогда
		
		ИнициализироватьОтчет();
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
		
		КлючСхемы = КлючВарианта;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьПараметрыВыводаТабличногоДокумента(ДокументРезультат)
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Портрет;
	ДокументРезультат.ТолькоПросмотр		= 	Истина;
	ДокументРезультат.ПолеСверху			= 	5;
	ДокументРезультат.ПолеСнизу				= 	5;
	ДокументРезультат.ПолеСлева				= 	15;
	ДокументРезультат.ФиксацияСлева			= 	1;
КонецПроцедуры

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли