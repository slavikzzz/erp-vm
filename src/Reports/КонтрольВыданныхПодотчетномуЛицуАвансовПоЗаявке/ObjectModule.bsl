#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(Форма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = Форма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		Форма.ФормаПараметры.Отбор.Вставить("Документ", Параметры.ПараметрКоманды);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрДокумент = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек.Настройки, "Документ");
	
	Если ЗначениеЗаполнено(ПараметрДокумент.Значение) Тогда
		
		Если ТипЗнч(ПараметрДокумент.Значение) = Тип("ДокументСсылка.ЗаявкаНаРасходованиеДенежныхСредств") Тогда
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				ПараметрДокумент.Значение, "Организация, ПодотчетноеЛицо");
			
			КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
				КомпоновщикНастроек, "Организация", РеквизитыДокумента["Организация"]);
			КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
				КомпоновщикНастроек, "ПодотчетноеЛицо", РеквизитыДокумента["ПодотчетноеЛицо"]);
				
		ИначеЕсли ТипЗнч(ПараметрДокумент.Значение) = Тип("ДокументСсылка.ЗаявкаНаКомандировку") Тогда
			
			РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
				ПараметрДокумент.Значение, "Организация, Сотрудник, СписокФизЛиц");
			
			КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
				КомпоновщикНастроек, "Организация", РеквизитыДокумента["Организация"]);
			
			Если РеквизитыДокумента["СписокФизЛиц"] Тогда
				Запрос = Новый Запрос("ВЫБРАТЬ Сотрудник ИЗ Документ.ЗаявкаНаКомандировку.ВыдачаПодОтчет ГДЕ Ссылка = &Ссылка");
				Запрос.УстановитьПараметр("Ссылка", ПараметрДокумент.Значение);
				КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
					КомпоновщикНастроек, "ПодотчетноеЛицо", Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Сотрудник"));
			Иначе
				КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
					КомпоновщикНастроек, "ПодотчетноеЛицо", РеквизитыДокумента["Сотрудник"]);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли