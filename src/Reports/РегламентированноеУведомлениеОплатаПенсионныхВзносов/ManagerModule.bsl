#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1184044";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 12.10.2023 № БВ-7-11/737@";
	
	Возврат Результат;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	ВызватьИсключение НСтр("ru = 'Печатная форма не реализована';
							|en = 'Печатная форма не реализована'");
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ДанныеСправки(Объект, ТекстВыгрузки) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда
		Возврат ДанныеСправки2023_1(Объект, ТекстВыгрузки);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставлениеСправки(Объект, УникальныйИдентификатор) Экспорт
	Попытка
		Возврат УведомлениеОСпецрежимахНалогообложения.ЭлектронноеПредставлениеСправки(
			Объект, УникальныйИдентификатор, ЭлектронноеПредставлениеСправки_Форма2023_1(Объект.Ссылка, УникальныйИдентификатор))
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу(Объект, УникальныйИдентификатор) Экспорт 
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SVOPLPENS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SPROPLPENS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина, , 2024);
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		СведУплПенсВзн = Стр.Значение;
		
		УведомлениеОСпецрежимахНалогообложения.ПроверкаДанныхПолучателяСправки(СведУплПенсВзн, "СведУплПенсВзн", ТаблицаОшибок, СведУплПенсВзн.ПрВыгодопр);
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерСвед) Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СведУплПенсВзн.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан номер", "СведУплПенсВзн", "НомерСвед", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ПрВыгодопр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведУплПенсВзн", "ПрВыгодопр", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", "СведУплПенсВзн", "ДатаДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер договора", "СведУплПенсВзн", "НомерДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина, , 2024);
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		СведУплПенсВзн = Стр.Значение;
		Если УникальныйИдентификатор <> СведУплПенсВзн.УИД Тогда 
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ПроверкаДанныхПолучателяСправки(СведУплПенсВзн, "СведУплПенсВзн", ТаблицаОшибок, СведУплПенсВзн.ПрВыгодопр);
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерСвед) Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СведУплПенсВзн.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан номер", "СведУплПенсВзн", "НомерСвед", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ПрВыгодопр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведУплПенсВзн", "ПрВыгодопр", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.ДатаДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", "СведУплПенсВзн", "ДатаДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведУплПенсВзн.НомерДоговор) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер договора", "СведУплПенсВзн", "НомерДоговор", СведУплПенсВзн.УИД));
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиСправка2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Инд = 0;
	Пока Инд < ТаблицаОшибок.Количество() Цикл 
		ТекущаяОшибка = ТаблицаОшибок[Инд].Значение;
		Если ТекущаяОшибка.ИмяСтраницы = "СведУплПенсВзн" И ТекущаяОшибка.УИДСтраницы <> УникальныйИдентификатор Тогда 
			ТаблицаОшибок.Удалить(Инд);
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставлениеСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	Для Каждого Стр Из ДанныеУведомления.ДанныеМногостраничныхРазделов.СведУплПенсВзн Цикл 
		Если Стр.Значение.УИД = УникальныйИдентификатор Тогда 
			ДанныеУведомления.ДанныеУведомления.Вставить("СпрУплПенсВзн", Стр.Значение);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Возврат УведомлениеОСпецрежимахНалогообложения.СформироватьЖурналСправок(Объект, "СведУплПенсВзн");
КонецФункции

Функция СформироватьСправку(Объект, УИДТекущаяСтраница) Экспорт
	Возврат УведомлениеОСпецрежимахНалогообложения.СформироватьСправку(Объект, УИДТекущаяСтраница, "СведУплПенсВзн");
КонецФункции

Функция ДанныеСправки2023_1(Объект, ТекстВыгрузки)
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ТекстВыгрузки);
		КНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента").ЗначениеЭлемента;
		ВерсФорм = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
		Если КНД <> "1151157" Или ВерсФорм <> "5.01" Тогда 
			ОбщегоНазначения.СообщитьПользователю("Ожидается файл КНД 1151157 в формате 5.01");
			Если КНД = "1184044" Тогда 
				ОбщегоНазначения.СообщитьПользователю("Выбранный файл является журналом справок (КНД 1184044), но не справкой");
			КонецЕсли;
			Возврат Неопределено;
		КонецЕсли;
		СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
		Возврат УведомлениеОСпецрежимахНалогообложения.ЗагрузитьСправку(СхемаВыгрузки, ДеревоЗагрузки, "Документ/СпрУплПенсВзн");
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Файл не соответсвует формату");
		Возврат Неопределено;
	КонецПопытки;
КонецФункции
#КонецОбласти
#КонецЕсли
