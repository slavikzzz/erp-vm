#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ТипЗнч(Параметры.ДанныеДляРедактирования) = Тип("ХранилищеЗначения") Тогда 
		ЗагрузкаДанных(Параметры.ДанныеДляРедактирования);
	КонецЕсли;
	
	ОтчетностьМайнеров.СправочникиМайнеровВТаблицыНаФорме(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОчиститьСообщения();
КонецПроцедуры

&НаКлиенте
Процедура СсылкаПулПриИзменении(Элемент)
	Если ЗначениеЗаполнено(СсылкаПул) Тогда 
		ПрОтсПул = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПрОтсПулПриИзменении(Элемент)
	Если ПрОтсПул Тогда 
		СсылкаПул = "";
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвВалют

&НаКлиенте
Процедура СвВалютКодВалютНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыборИзСписка("Валюты", "КодВалют", Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СвВалютКодВалютЗачисНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыборИзСписка("Валюты", "КодВалютЗачис", Элемент, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгруппироватьВалюты(Команда)
	СгруппироватьВалютыНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ОчиститьСообщения();
	Для Каждого Стр Из СвВалют Цикл 
		Если СтрДлина(СокрЛП(Стр.КодВалют)) <> 4 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Код валюты должен содержать 4 символа", , "СвВалютКодВалют");
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтрСвВалют;
			Элементы.СвВалют.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли ЗначениеЗаполнено(СокрЛП(Стр.КодВалютЗачис)) 
			И (СтрДлина(СокрЛП(Стр.КодВалютЗачис)) <> 4 Или Стр.КодВалютЗачис = Стр.КодВалют) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Код зачисленной валюты должен содержать 4 символа и не совпадать с основной валютой", , "СвВалютКодВалютЗачис");
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтрСвВалют;
			Элементы.СвВалют.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли Не ЗначениеЗаполнено(Стр.Сумма) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Необходимо указать сумму", , "СвВалютСумма");
			Элементы.Страницы.ТекущаяСтраница = Элементы.СтрСвВалют;
			Элементы.СвВалют.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	Если СвВалют.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Валюты не заполнены", , "АдрИдентифАдрИдентиф");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтрСвВалют;
	ИначеЕсли Не ПрОтсПул И Не ЗначениеЗаполнено(СсылкаПул) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не указана ссылка на пул", , "СсылкаПул");
		Элементы.Страницы.ТекущаяСтраница = Элементы.СтрАдрИдентифПул;
	Иначе
		ВсеКлючи = Новый Соответствие;
		Для Каждого Стр Из СвВалют Цикл
			КлючСтроки = "_" + Стр.КодВалют + "_" + Стр.КодВалютЗачис + "_";
			Если ВсеКлючи[КлючСтроки] = Истина Тогда
				Элементы.Страницы.ТекущаяСтраница = Элементы.СтрСвВалют;
				Элементы.СвВалют.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
				ОбщегоНазначенияКлиент.СообщитьПользователю("Обнаружены дублирующиеся строки, их следует сгруппировать");
				Возврат;
			КонецЕсли;
			
			ВсеКлючи.Вставить(КлючСтроки, Истина);
		КонецЦикла;
		
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполнение корректно");
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	Если Не ЗаполненоКорректно() Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполнение некорректно, выполните проверку заполнения");
	Иначе
		Закрыть(ОписаниеРезультата());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Добавить(Команда)
	Если СвВалют.Количество() >= 500 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Допускается не более 500 строк с валютами");
	Иначе
		Элементы.СвВалют.ТекущаяСтрока = СвВалют.Добавить().ПолучитьИдентификатор();
		ВыборИзСписка("Валюты", "КодВалют", Элементы.СвВалютКодВалют, Ложь);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура Удалить(Команда)
	Если Элементы.СвВалют.ТекущиеДанные <> Неопределено И
		КодВозвратаДиалога.Да = Ждать ВопросАсинх("Удалить сведения?", РежимДиалогаВопрос.ДаНетОтмена) Тогда 
		
		Для Каждого Элт Из ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Элементы.СвВалют.ВыделенныеСтроки) Цикл 
			СвВалют.Удалить(СвВалют.НайтиПоИдентификатору(Элт));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОчиститьВалюты(Команда)
	Если ЗначениеЗаполнено(СвВалют.Количество()) 
		И КодВозвратаДиалога.Да = Ждать ВопросАсинх("Очистить сведения по валютам?", РежимДиалогаВопрос.ДаНетОтмена) Тогда
		СвВалют.Очистить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузкаДанных(ДанныеДляРедактирования)
	ОтчетностьМайнеров.JSONВРеквизитыФормы(ЭтотОбъект, ДанныеДляРедактирования.Получить());
КонецПроцедуры

&НаКлиенте
Функция ЗаполненоКорректно()
	Для Каждого Стр Из СвВалют Цикл 
		Если (СтрДлина(СокрЛП(Стр.КодВалют)) <> 4) Или (Не ЗначениеЗаполнено(Стр.Сумма))
			Или (ЗначениеЗаполнено(СокрЛП(Стр.КодВалютЗачис)) 
				И (СтрДлина(СокрЛП(Стр.КодВалютЗачис)) <> 4 Или Стр.КодВалютЗачис = Стр.КодВалют)) Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	ВсеКлючи = Новый Соответствие;
	ЕстьДубли = Ложь;
	Для Каждого Стр Из СвВалют Цикл
		КлючСтроки = "_" + Стр.КодВалют + "_" + Стр.КодВалютЗачис + "_";
		Если ВсеКлючи[КлючСтроки] = Истина Тогда
			ЕстьДубли = Истина;
			Прервать;
		КонецЕсли;
		ВсеКлючи.Вставить(КлючСтроки, Истина);
	КонецЦикла;
	
	Возврат ЗначениеЗаполнено(СвВалют.Количество()) И (ПрОтсПул Или ЗначениеЗаполнено(СсылкаПул)) И (Не ЕстьДубли);
КонецФункции

&НаСервере
Функция ОписаниеРезультата()
	РезультатЗакрытия = Новый Структура("Описание, Данные", "", Неопределено);
	Если ЗначениеЗаполнено(СвВалют.Количество()) Тогда 
		РезультатЗакрытия.Описание = "Информация о " + Формат(СвВалют.Количество(), "ЧГ=") + " валютах";
	КонецЕсли;
	
	ОписаниеJSON = ВалютыУведомлениеМайнераВJSON();
	РезультатЗакрытия.Данные = Новый ХранилищеЗначения(ОписаниеJSON, Новый СжатиеДанных(9));
	Возврат РезультатЗакрытия;
КонецФункции

&НаСервере
Функция ВалютыУведомлениеМайнераВJSON()
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "version", "4.01");
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "Форма", "ФормаСвДобытВалют");
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "schema", "ON_SVMINING_2_314_13_04_01_01.xsd");
	ОтчетностьМайнеров.ЗаписатьТаблицуПоказателей(ЭтотОбъект, ЗаписьJSON, "СвВалют");
	ОтчетностьМайнеров.ЗаписатьПакетПоказателей(Новый Структура("ПрОтсПул,СсылкаПул", ПрОтсПул, СсылкаПул), ЗаписьJSON);
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	Результат = ЗаписьJSON.Закрыть();
	Возврат Результат;
КонецФункции

&НаКлиенте
Процедура ВыборИзСписка(ИмяСписка, ИмяКолонки, Элемент, СтандартнаяОбработка) Экспорт 
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", "Выбор кода");
	ПараметрыФормы.Вставить("ТаблицаЗначений", ЭтотОбъект[ИмяСписка]);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", Элемент.Родитель.ТекущиеДанные[ИмяКолонки]));
	
	ДополнительныеПараметры = Новый Структура("Форма, Элемент, ИмяКолонки", ЭтотОбъект, Элемент, ИмяКолонки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", 
		ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.Элемент.Родитель.ТекущиеДанные[ДополнительныеПараметры.ИмяКолонки] = РезультатВыбора.Код;
КонецПроцедуры

&НаСервере
Процедура СгруппироватьВалютыНаСервере()
	ТаблицаСвВалют = РеквизитФормыВЗначение("СвВалют");
	ТаблицаСвВалют.Свернуть("КодВалют,КодВалютЗачис", "Сумма");
	ЗначениеВРеквизитФормы(ТаблицаСвВалют, "СвВалют");
КонецПроцедуры

#КонецОбласти
