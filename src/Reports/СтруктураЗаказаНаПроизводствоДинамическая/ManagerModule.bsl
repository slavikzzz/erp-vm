
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует дерево изделий заданного заказа на производство.
// В дерево выводятся изделия заказа и ПФ первого уровня.
//
// Параметры:
//	Параметры - Структура - параметры чтения данных. Содержит:
//		* Заказ - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ.
//		* ПоказыватьЭтапы - Булево - выводить/не выводить в структуру этапы.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПостроитьДеревоЗаказа(Параметры, АдресХранилища) Экспорт
	
	ПоместитьВоВременноеХранилище(
		ДеревоЗаказа(Параметры), 
		АдресХранилища);
	
КонецПроцедуры

// Формирует дерево изделий заданного заказа на производство.
// Дерево строится рекурсивно в соответствии с коллекцией развернутых строк.
//
// Параметры:
//	Параметры - Структура - параметры чтения данных. Содержит:
//		* Заказ - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ.
//		* ПоказыватьЭтапы - Булево - выводить/не выводить в структуру этапы.
//		* РазвернутыеСтроки - ТаблицаЗначений - партии, развернутые в дереве.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПостроитьДеревоРазвернутыхСтрок(Параметры, АдресХранилища) Экспорт
	
	Результат = ДеревоЗаказа(Параметры);
	
	РазвернутыеСтроки = Параметры.РазвернутыеСтроки;
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура");
	СтруктураПоиска.Вставить("Характеристика");
	СтруктураПоиска.Вставить("Склад");
	СтруктураПоиска.Вставить("Назначение");
	СтруктураПоиска.Вставить("ЭтапСсылка");
	
	СтрокиДерева = Результат.Строки.НайтиСтроки(
		Новый Структура("ДостроитьДерево", Истина),
		Истина);
	КлючиПартий = Новый Массив;
	
	Пока СтрокиДерева.ВГраница() <> -1 Цикл
		Для Индекс = -СтрокиДерева.ВГраница() По 0 Цикл
			
			СтрокаДерева = СтрокиДерева[-Индекс];
			
			Если СтрокаДерева.ТипСтроки = ТипСтрокиЭтапСтруктуры()
					ИЛИ СтрокаДерева.ТипСтроки = ТипСтрокиЭтапДокумент() Тогда
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДерева.Родитель,
					"Номенклатура, Характеристика, Склад, Назначение");
				СтруктураПоиска.ЭтапСсылка = СтрокаДерева.ЭтапСсылка;
			Иначе
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, СтрокаДерева);
			КонецЕсли;
			
			Если РазвернутыеСтроки.НайтиСтроки(СтруктураПоиска).ВГраница() <> -1 Тогда
				
				КлючиПартий.Очистить();
				
				Для ИндексПотомок = -СтрокаДерева.Строки.Количество()+1 По 0 Цикл
					СтрокаПотомок = СтрокаДерева.Строки[-ИндексПотомок];
					Если СтрокаПотомок.ТипСтроки = ТипСтрокиСлужебный() Тогда
						КлючиПартий.Добавить(СтрокаПотомок.КлючПартия);
						СтрокаДерева.Строки.Удалить(-ИндексПотомок);
					КонецЕсли;
				КонецЦикла;
				
				ЗаполнитьДеревоРекурсивно(
					СтрокаДерева.Строки,
					ДеревоПолуфабрикатов(Параметры.Заказ, КлючиПартий, СтрокаДерева.ЭтапСсылка, Параметры, Параметры.Назначение).Строки,
					СтрокиДерева);
				
				СтрокаДерева.ДостроитьДерево = Ложь;
				
			КонецЕсли;
			СтрокиДерева.Удалить(-Индекс);
			
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
КонецПроцедуры

// Формирует дерево заказа от заданной позиции номенклатуры / склада (поиск в структуре заказа).
//
// Параметры:
//	Параметры - Структура - параметры чтения данных. Содержит:
//		* Заказ - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ.
//		* ПоказыватьЭтапы - Булево - выводить/не выводить в структуру этапы.
//		* Номенклатура - СправочникСсылка.Номенклатура - значение поиска.
//		* Склад - СправочникСсылка.Склады - значение поиска.
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура ПостроитьДеревоПоиска(Параметры, АдресХранилища) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(
		"Отчет.СтруктураЗаказаНаПроизводствоДинамическая.ПоискВСтруктуре");
	
	КоличествоДанных = ПостроитьДеревоПоискаВнутриЗамераВремени(Параметры, АдресХранилища);
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоДанных);
	
КонецПроцедуры

Функция ПостроитьДеревоПоискаВнутриЗамераВремени(Параметры, АдресХранилища)
	
	Если Не ЗначениеЗаполнено(Параметры.Номенклатура)
		И Не ЗначениеЗаполнено(Параметры.Склад) Тогда
		Возврат 0;
	КонецЕсли;
	
	Заказ = Параметры.Заказ;
	ПоказыватьЭтапы = Параметры.ПоказыватьЭтапы;
	ПоказыватьМатериалы = Параметры.ПоказыватьМатериалы;
	Назначение = Параметры.Назначение;
	Номенклатура = Параметры.Номенклатура;
	Склад = Параметры.Склад;
	ЭтапыОтбор = Параметры.Этапы;
	ЭтапыОтборАналитика = Параметры.ЭтапыАналитика;
	
	ЭтоРежимРасшифровки = ЗначениеЗаполнено(ЭтапыОтбор);
	
	// Выборка искомых строк
	ТекстыЗапроса = Новый Массив;
	
	Если ЭтоРежимРасшифровки Тогда
		ТекстыЗапроса.Добавить(ТекстЗапросаЗапущеноВЭтапахВТ());
	Иначе
		ТекстыЗапроса.Добавить(ТекстЗапросаЗаказаноВТ());
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(
		"ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика КАК Характеристика,
		|	СтруктураЗаказа.Склад          КАК Склад,
		|	СтруктураЗаказа.Назначение     КАК Назначение,
		|	СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|	СтруктураЗаказа.Этап           КАК ЭтапСсылка
		|ПОМЕСТИТЬ Таблица1
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	СтруктураЗаказа.ЗаказНаПроизводство = &Заказ
		|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|	И (&Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка)
		|		ИЛИ СтруктураЗаказа.Номенклатура = &Номенклатура)
		|	И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка)
		|		ИЛИ СтруктураЗаказа.Склад = &Склад)
		|	И (&Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		ИЛИ СтруктураЗаказа.Назначение = &Назначение)
		|	И ИСТИНА В (&УсловиеЭтоПолуфабрикат)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Этап
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) <> 0
		|	ИЛИ СУММА(СтруктураЗаказа.Готово) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказано.Номенклатура   КАК Номенклатура,
		|	Заказано.Характеристика КАК Характеристика,
		|	Заказано.Склад          КАК Склад,
		|	Заказано.Назначение     КАК Назначение
		|ИЗ
		|	ВТЗаказано КАК Заказано
		|ГДЕ
		|	(&Номенклатура = ЗНАЧЕНИЕ(Справочник.Номенклатура.ПустаяСсылка) ИЛИ Заказано.Номенклатура = &Номенклатура)
		|	И (&Склад = ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка) ИЛИ Заказано.Склад = &Склад)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение,
		|	Таблица.КлючПартия     КАК КлючПартия,
		|	Таблица.ЭтапСсылка     КАК ЭтапСсылка
		|ИЗ
		|	Таблица1 КАК Таблица");
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, " ; ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеЭтоПолуфабрикат", 
		?(ПоказыватьМатериалы, "ИСТИНА", ТекстЗапросаЭтоПолуфабрикат()));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("Номенклатура", Номенклатура);
	Запрос.УстановитьПараметр("Склад", Склад);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	Запрос.УстановитьПараметр("ПоказыватьЭтапы", ПоказыватьЭтапы);
	Запрос.УстановитьПараметр("ПустойКлючСвязи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Если ЭтоРежимРасшифровки Тогда
		Запрос.УстановитьПараметр("Этапы", ЭтапыОтбор);
		Запрос.УстановитьПараметр("ЭтапНоменклатура", ЭтапыОтборАналитика.Номенклатура);
		Запрос.УстановитьПараметр("ЭтапХарактеристика", ЭтапыОтборАналитика.Характеристика);
		Запрос.УстановитьПараметр("ЭтапСклад", ЭтапыОтборАналитика.Склад);
		Запрос.УстановитьПараметр("ЭтапНазначение", ЭтапыОтборАналитика.Назначение);
	КонецЕсли;
	
	МассивРезультатов = Запрос.ВыполнитьПакет();
	Продукция = МассивРезультатов[МассивРезультатов.ВГраница()-1].Выгрузить();
	Партии = МассивРезультатов[МассивРезультатов.ВГраница()].Выгрузить();
	
	// Обход дерева изделий "вверх" (к продукции)
	ТекстЗапроса = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтруктураЗаказа.Номенклатура        КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика      КАК Характеристика,
		|	СтруктураЗаказа.Склад               КАК Склад,
		|	СтруктураЗаказа.Назначение          КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура    КАК КлючНоменклатура
		|ПОМЕСТИТЬ Выпуск
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	СтруктураЗаказа.КлючПартия В (
		|		ВЫБРАТЬ
		|			Таблица.КлючПартия
		|		ИЗ
		|			ТаблицаИсточник КАК Таблица)
		|	И СтруктураЗаказа.ВидСтроки В (
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика КАК Характеристика,
		|	СтруктураЗаказа.Склад          КАК Склад,
		|	СтруктураЗаказа.Назначение     КАК Назначение,
		|	СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|	СтруктураЗаказа.Этап           КАК ЭтапСсылка
		|ПОМЕСТИТЬ ТаблицаПриемник
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	(СтруктураЗаказа.Номенклатура, СтруктураЗаказа.Характеристика, СтруктураЗаказа.Склад,
		|		СтруктураЗаказа.Назначение, СтруктураЗаказа.ЗаказНаПроизводство, СтруктураЗаказа.КлючНоменклатура) В (
		|		ВЫБРАТЬ
		|			Выпуск.Номенклатура        КАК Номенклатура,
		|			Выпуск.Характеристика      КАК Характеристика,
		|			Выпуск.Склад               КАК Склад,
		|			Выпуск.Назначение          КАК Назначение,
		|			Выпуск.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|			Выпуск.КлючНоменклатура    КАК КлючНоменклатура
		|		ИЗ
		|			Выпуск КАК Выпуск)
		|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Заказано.Номенклатура   КАК Номенклатура,
		|	Заказано.Характеристика КАК Характеристика,
		|	Заказано.Склад          КАК Склад,
		|	Заказано.Назначение     КАК Назначение
		|ИЗ
		|	ВТЗаказано КАК Заказано
		|ГДЕ
		|	Заказано.КлючПартия В (
		|		ВЫБРАТЬ
		|			Таблица.КлючПартия
		|		ИЗ
		|			ТаблицаИсточник КАК Таблица)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Таблица.Номенклатура        КАК Номенклатура,
		|	Таблица.Характеристика      КАК Характеристика,
		|	Таблица.Склад               КАК Склад,
		|	Таблица.Назначение          КАК Назначение,
		|	Таблица.КлючПартия          КАК КлючПартия,
		|	Таблица.ЭтапСсылка          КАК ЭтапСсылка
		|ИЗ
		|	ТаблицаПриемник КАК Таблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ТаблицаИсточник
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ Выпуск";
	
	ЧетнаяВыборка = Истина;
	Пока Истина Цикл
		
		Запрос.Текст = СтрЗаменить(ТекстЗапроса, "ТаблицаПриемник", ?(ЧетнаяВыборка, "Таблица2", "Таблица1"));
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ТаблицаИсточник", ?(ЧетнаяВыборка, "Таблица1", "Таблица2"));
		
		МассивРезультатов = Запрос.ВыполнитьПакет();
		ВыборкаПродукция = МассивРезультатов[2].Выбрать();
		Пока ВыборкаПродукция.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(Продукция.Добавить(), ВыборкаПродукция);
		КонецЦикла;
		
		ВыборкаПартии = МассивРезультатов[3].Выбрать();
		Если ВыборкаПартии.Количество() = 0 Тогда
			Прервать;
		Иначе
			Пока ВыборкаПартии.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(Партии.Добавить(), ВыборкаПартии);
			КонецЦикла;
		КонецЕсли;
		
		ЧетнаяВыборка = Не ЧетнаяВыборка;
		
	КонецЦикла;
	
	Продукция.Свернуть("Номенклатура, Характеристика, Склад, Назначение");
	Продукция.Индексы.Добавить("Номенклатура, Характеристика, Склад, Назначение");
	
	Партии.Свернуть("Номенклатура, Характеристика, Склад, Назначение, КлючПартия, ЭтапСсылка");
	Партии.Индексы.Добавить("КлючПартия, ЭтапСсылка");
	Партии.Индексы.Добавить("Номенклатура, Характеристика, Назначение, КлючПартия");
	Партии.Индексы.Добавить("Номенклатура, Характеристика, Склад, Назначение, КлючПартия");
	
	СтруктураПоиска1 = Новый Структура("Номенклатура, Характеристика, Склад, Назначение");
	СтруктураПоиска2 = Новый Структура("КлючПартия, ЭтапСсылка");
	СтруктураПоиска3 = Новый Структура("Номенклатура, Характеристика, Назначение, КлючПартия");
	СтруктураПоиска4 = Новый Структура("Номенклатура, Характеристика, Склад, Назначение, КлючПартия");
	
	// Формирование результата
	ОчередьЗаполнить = Новый ТаблицаЗначений();
	ОчередьЗаполнить.Колонки.Добавить("СтрокиПриемник", Новый ОписаниеТипов("КоллекцияСтрокДереваЗначений"));
	ОчередьЗаполнить.Колонки.Добавить("СтрокиИсточник", Новый ОписаниеТипов("КоллекцияСтрокДереваЗначений"));
	ОчередьПрочитать = Новый Массив;
	КлючиПартий = Новый Массив;
	
	Результат = НовыйДерево();
	
	НоваяСтрокаОчередь = ОчередьЗаполнить.Добавить();
	НоваяСтрокаОчередь.СтрокиПриемник = Результат.Строки;
	НоваяСтрокаОчередь.СтрокиИсточник = ДеревоЗаказа(Параметры).Строки;
	
	Пока ОчередьЗаполнить.Количество() > 0 ИЛИ ОчередьПрочитать.Количество() > 0 Цикл
		
		ИндексОчередь = 0;
		Пока ИндексОчередь < ОчередьЗаполнить.Количество() Цикл
			
			Строка = ОчередьЗаполнить[ИндексОчередь];
			
			Для каждого СтрокаИсточник Из Строка.СтрокиИсточник Цикл
				
				ПотомокПоиска = Строка.СтрокиПриемник.Родитель <> Неопределено
					И Строка.СтрокиПриемник.Родитель.СтрокаПоиска;
				ПотомокИзделияПоиска = Строка.СтрокиПриемник.Родитель <> Неопределено
					И (Строка.СтрокиПриемник.Родитель.СтрокаПоиска
						И (Строка.СтрокиПриемник.Родитель.ТипСтроки = ТипСтрокиИзделие()
							ИЛИ Строка.СтрокиПриемник.Родитель.ТипСтроки = ТипСтрокиНоменклатураРасшифровки())
						ИЛИ Строка.СтрокиПриемник.Родитель.ПотомокИзделияПоиска);
				
				ДобавитьСтроку = Истина;
				Если СтрокаИсточник.ТипСтроки = ТипСтрокиЗаказНаЗапуск() Тогда
					ДобавитьСтроку = ПотомокПоиска;
				ИначеЕсли СтрокаИсточник.ТипСтроки = ТипСтрокиСлужебный()
					ИЛИ ПотомокПоиска
					ИЛИ ПотомокИзделияПоиска Тогда
					ДобавитьСтроку = Истина;
				Иначе
					Если СтрокаИсточник.ТипСтроки = ТипСтрокиИзделие()
							ИЛИ СтрокаИсточник.ТипСтроки = ТипСтрокиНоменклатураРасшифровки() Тогда
						ЗаполнитьЗначенияСвойств(СтруктураПоиска1, СтрокаИсточник);
						НайденныеСтроки = Продукция.НайтиСтроки(СтруктураПоиска1);
					ИначеЕсли СтрокаИсточник.ТипСтроки = ТипСтрокиЭтапСтруктуры()
						ИЛИ СтрокаИсточник.ТипСтроки = ТипСтрокиЭтапДокумент() Тогда
						ЗаполнитьЗначенияСвойств(СтруктураПоиска2, СтрокаИсточник);
						НайденныеСтроки = Партии.НайтиСтроки(СтруктураПоиска2);
					ИначеЕсли СтрокаИсточник.НесколькоСкладов Тогда
						ЗаполнитьЗначенияСвойств(СтруктураПоиска3, СтрокаИсточник);
						НайденныеСтроки = Партии.НайтиСтроки(СтруктураПоиска3);
					Иначе
						ЗаполнитьЗначенияСвойств(СтруктураПоиска4, СтрокаИсточник);
						НайденныеСтроки = Партии.НайтиСтроки(СтруктураПоиска4);
					КонецЕсли;
					ДобавитьСтроку = НайденныеСтроки.ВГраница() <> -1;
				КонецЕсли;
				Если Не ДобавитьСтроку Тогда
					Продолжить;
				КонецЕсли;
				
				НоваяСтрока = Строка.СтрокиПриемник.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИсточник);
				
				НоваяСтрока.СтрокаПоиска = (Не ЗначениеЗаполнено(Склад) ИЛИ Склад = НоваяСтрока.Склад)
					И (Не ЗначениеЗаполнено(Номенклатура) ИЛИ Номенклатура = НоваяСтрока.Номенклатура);
				НоваяСтрока.ПотомокИзделияПоиска = ПотомокИзделияПоиска;
				
				Если НоваяСтрока.ДостроитьДерево
					И Не НоваяСтрока.СтрокаПоиска
					И Не ПотомокПоиска
					И Не ПотомокИзделияПоиска Тогда
					ОчередьПрочитать.Добавить(НоваяСтрока);
				КонецЕсли;
				
				Если СтрокаИсточник.Строки.Количество() > 0 Тогда
					НоваяСтрокаОчередь = ОчередьЗаполнить.Добавить();
					НоваяСтрокаОчередь.СтрокиПриемник = НоваяСтрока.Строки;
					НоваяСтрокаОчередь.СтрокиИсточник = СтрокаИсточник.Строки;
				КонецЕсли;
				
			КонецЦикла;
			
			ИндексОчередь = ИндексОчередь + 1;
			
		КонецЦикла;
		ОчередьЗаполнить.Очистить();
		
		Для каждого Строка Из ОчередьПрочитать Цикл
			
			КлючиПартий.Очистить();
				
			Для ИндексПотомок = -Строка.Строки.Количество()+1 По 0 Цикл
				СтрокаПотомок = Строка.Строки[-ИндексПотомок];
				Если СтрокаПотомок.ТипСтроки = ТипСтрокиСлужебный() Тогда
					КлючиПартий.Добавить(СтрокаПотомок.КлючПартия);
					Строка.Строки.Удалить(-ИндексПотомок);
				КонецЕсли;
			КонецЦикла;
			
			НоваяСтрокаОчередь = ОчередьЗаполнить.Добавить();
			НоваяСтрокаОчередь.СтрокиПриемник = Строка.Строки;
			НоваяСтрокаОчередь.СтрокиИсточник = ДеревоПолуфабрикатов(
				Заказ, КлючиПартий, Строка.ЭтапСсылка, Параметры, Назначение).Строки;
			
			Строка.ДостроитьДерево = Ложь;
			
		КонецЦикла;
		ОчередьПрочитать.Очистить();
		
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(Результат, АдресХранилища);
	
	КоличествоСтрок = 0;
	Очередь = Новый Массив;
	Для каждого Строка Из Результат.Строки Цикл
		Очередь.Добавить(Строка);
	КонецЦикла;
	Индекс = 0;
	Пока Индекс <= Очередь.ВГраница() Цикл
		КоличествоСтрок = КоличествоСтрок + 1;
		Для каждого Строка Из Очередь[Индекс].Строки Цикл
			Очередь.Добавить(Строка);
		КонецЦикла;
		Индекс = Индекс + 1;
	КонецЦикла;
	Возврат КоличествоСтрок;
	
КонецФункции

// Достраивает дерево полуфабрикатов.
// 
// Параметры:
// 	КлючиНоменклатуры - Массив - содержит ключи номенклатуры полуфабрикатов.
// 	ПоказыватьЭтапы - Булево - выводить/не выводить в структуру этапы.
//
// Возвращаемое значение:
// 	ДеревоЗначений - см. НовыйДерево.
//
Функция ДеревоПолуфабрикатов(Заказ, КлючиПартий, Этап, ПараметрыВывода, Назначение) Экспорт
	
	ПоказыватьЭтапы = ПараметрыВывода.ПоказыватьЭтапы;
	ПоказыватьПеремещения = ПараметрыВывода.ПоказыватьПеремещения;
	ПоказыватьМатериалы = ПараметрыВывода.ПоказыватьМатериалы;
	
	ТекстыЗапроса = Новый Массив;
	
	УсловиеОтбора = "СтруктураЗаказа.КлючПартия В (&КлючиПартий)";
	Если ЗначениеЗаполнено(Этап) Тогда
		УсловиеОтбора = УсловиеОтбора + " И СтруктураЗаказа.Этап = &Этап";
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребностьВТ(УсловиеОтбора));
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаменаКлючНоменклатураВТ(
		"ВЫБРАТЬ
		|	Потребности.Номенклатура        КАК Номенклатура,
		|	Потребности.Характеристика      КАК Характеристика,
		|	Потребности.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	Потребности.КлючНоменклатура    КАК КлючСвязиПеремещение
		|ИЗ
		|	ВТПотребность КАК Потребности",
		""));
	ТекстыЗапроса.Добавить(ТекстЗапросаОбеспечениеВТ());
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаменаКлючНоменклатураВТ(
		"ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура        КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика      КАК Характеристика,
		|	СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура    КАК КлючСвязиПеремещение
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	СтруктураЗаказа.КлючПартия В(
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			ВТОбеспечение КАК Т
		|		ГДЕ
		|			НЕ Т.ЭтоРезерв)
		|	И СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|	И ИСТИНА В(&УсловиеЭтоПолуфабрикат)",
		"Полуфабрикаты"));
	
	ОтборПартийОбеспечения = 
		"СтруктураЗаказа.КлючПартия В
		|		(ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			ВТОбеспечение КАК Т
		|		ГДЕ
		|			НЕ Т.ЭтоРезерв)";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияВТ(ОтборПартийОбеспечения, "Полуфабрикаты", "Полуфабрикаты"));
	Если ПоказыватьЭтапы Тогда
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтаповВТ(ОтборПартийОбеспечения, "Полуфабрикаты", "Полуфабрикаты"));
		ТекстыЗапроса.Добавить(ТекстЗапросаЭтапы("ВТОбеспечение", "ВТРазмерПартий"));
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтапов("Полуфабрикаты"));
	КонецЕсли;
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребность());
	ТекстыЗапроса.Добавить(ТекстЗапросаОбеспечение());
	ТекстыЗапроса.Добавить(ТекстЗапросаОстаткиПоДругимНазначениям());
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребностьСвернуто());
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспечения("Полуфабрикаты"));
	ТекстыЗапроса.Добавить(ТекстЗапросаВыпускПартийОбеспечения(ОтборПартийОбеспечения));
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, " ; ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеЭтоПолуфабрикат", 
		?(ПоказыватьМатериалы, "ИСТИНА", ТекстЗапросаЭтоПолуфабрикат("СтруктураЗаказа")));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПотребностьЭтоПолуфабрикат", 
		?(ПоказыватьМатериалы, ТекстЗапросаЭтоПолуфабрикат("Потребность"), "ИСТИНА"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("КлючиПартий", КлючиПартий);
	Запрос.УстановитьПараметр("Этап", Этап);
	Запрос.УстановитьПараметр("ПоказыватьЭтапы", ПоказыватьЭтапы);
	Запрос.УстановитьПараметр("ПоказыватьПеремещения", ПоказыватьПеремещения);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Индекс = РезультатыЗапроса.ВГраница();
	Этапы = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-7].Выгрузить(), Неопределено);
	ПроцентОбеспеченияЭтапы = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-6].Выгрузить(), Неопределено);
	Выборка = РезультатыЗапроса[Индекс-5].Выбрать(); // Потребности в ПФ 1 уровня
	Обеспечение = РезультатыЗапроса[Индекс-4].Выгрузить(); // Обеспечние Потребностей 1 уровня
	ОстаткиПоДругимНазначениям = РезультатыЗапроса[Индекс-3].Выгрузить();
	Потребности = РезультатыЗапроса[Индекс-2].Выгрузить(); // Потребности в ПФ 2 уровня
	ПроцентОбеспечения = РезультатыЗапроса[Индекс-1].Выгрузить();
	ВыпускПартийОбеспечения = ДеревоВыпускаПартийОбеспечения(РезультатыЗапроса[Индекс]);
	
	Обеспечение.Индексы.Добавить("КлючНоменклатура");
	ОстаткиПоДругимНазначениям.Индексы.Добавить("Номенклатура, Характеристика, Склад, Назначение");
	ПроцентОбеспечения.Индексы.Добавить("КлючПартия");
	
	Если ПоказыватьЭтапы Тогда
		Потребности.Индексы.Добавить("Партия, ЭтапСсылка");
		Этапы.Индексы.Добавить("Партия");
		ПроцентОбеспеченияЭтапы.Индексы.Добавить("Партия, ЭтапСсылка");
	Иначе
		Потребности.Индексы.Добавить("Партия");
	КонецЕсли;
	
	Результат = НовыйДерево();
	
	// Полуфабрикат 1 уровня
	Полуфабрикаты = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		СтрокаДерева = Результат.Строки.Добавить();
		ЗаполнитьСтрокуПолуфабрикат(
			СтрокаДерева, Выборка, Обеспечение, ПроцентОбеспечения, ВыпускПартийОбеспечения, ОстаткиПоДругимНазначениям, ПоказыватьПеремещения);
		НайтиПотребностиДобавитьЭтапы(СтрокаДерева, Потребности, Этапы, ПроцентОбеспеченияЭтапы, ПоказыватьЭтапы, Полуфабрикаты);
		
	КонецЦикла;
	
	// Полуфабрикат 2 уровня
	Для каждого Полуфабрикат Из Полуфабрикаты Цикл
		Для каждого СтрокаПотебность Из Полуфабрикат.Потребности Цикл
			
			СтрокаДерева = Полуфабрикат.Владелец.Строки.Добавить();
			СтрокаДерева.ТипСтроки = ТипСтрокиСлужебный();
			СтрокаДерева.КлючПартия = СтрокаПотебность.Партия;
			Полуфабрикат.Владелец.ДостроитьДерево = Истина;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Формирует полную структуру заказа от заданных узлов.
//
// Параметры:
//	Параметры - Структура - параметры чтения данных. Содержит:
//		* Заказ - ДокументСсылка.ЗаказНаПроизводство2_2 - заказ.
//		* ПоказыватьЭтапы - Булево - выводить/не выводить в структуру этапы.
//		* Узлы - Соответствие -  в качестве ключа передается идентификатор строки дерева,
//			в качестве значения - массив ключей номенклатуры.
//		* ПорционнаяВыборка - Булево - если Истина, то будет прочитано ограниченное количество узлов (1000 шт).
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура РазвернутьВсеУровни(Параметры, АдресХранилища) Экспорт
	
	Узлы = Новый Соответствие;
	
	СтрокиДерева = Новый Массив;
	КоличествоСтрок = 0;
	
	Для каждого Узел Из Параметры.Узлы Цикл
		
		Дерево = НовыйДерево();
		
		ЗаполнитьДеревоРекурсивно(
			Дерево.Строки,
			ДеревоПолуфабрикатов(Параметры.Заказ, Узел.Значение.КлючиПартий, Узел.Значение.Этап, Параметры, Параметры.Назначение).Строки,
			СтрокиДерева);
		
		Узлы.Вставить(Узел.Ключ, Дерево);
		
		Если Параметры.ПорционнаяВыборка Тогда
			КоличествоСтрок = КоличествоСтрок + КоличествоСтрок(Дерево.Строки);
			Если КоличествоСтрок >= РазмерПорцииВыборки() Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		
	КонецЦикла;
	
	КлючиПартий = Новый Массив;
	
	Пока СтрокиДерева.ВГраница() <> -1 Цикл
		
		Если Параметры.ПорционнаяВыборка
			И КоличествоСтрок >= РазмерПорцииВыборки() Тогда
			Прервать;
		КонецЕсли;
		
		Для Индекс = -СтрокиДерева.ВГраница() По 0 Цикл
			
			СтрокаДерева = СтрокиДерева[-Индекс];
			
			КлючиПартий.Очистить();
			
			Для ИндексПотомок = -СтрокаДерева.Строки.Количество()+1 По 0 Цикл
				СтрокаПотомок = СтрокаДерева.Строки[-ИндексПотомок];
				Если СтрокаПотомок.ТипСтроки = ТипСтрокиСлужебный() Тогда
					КлючиПартий.Добавить(СтрокаПотомок.КлючПартия);
					СтрокаДерева.Строки.Удалить(-ИндексПотомок);
				КонецЕсли;
			КонецЦикла;
			
			ЗаполнитьДеревоРекурсивно(
				СтрокаДерева.Строки,
				ДеревоПолуфабрикатов(Параметры.Заказ, КлючиПартий, СтрокаДерева.ЭтапСсылка, Параметры, Параметры.Назначение).Строки,
				СтрокиДерева);
			
			СтрокаДерева.ДостроитьДерево = Ложь;
			
			СтрокиДерева.Удалить(-Индекс);
			
			Если Параметры.ПорционнаяВыборка Тогда
				КоличествоСтрок = КоличествоСтрок + КоличествоСтрок(СтрокаДерева.Строки);
				Если КоличествоСтрок >= РазмерПорцииВыборки() Тогда
					Прервать;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	ВсеДанныеВыбраны = Узлы.Количество() = Параметры.Узлы.Количество()
		И СтрокиДерева.ВГраница() = -1;
	
	ПоместитьВоВременноеХранилище(
		Новый Структура("Узлы, ВсеДанныеВыбраны", Узлы, ВсеДанныеВыбраны),
		АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеДерева

Функция ДеревоЗаказа(Параметры)
	
	Заказ = Параметры.Заказ;
	ПоказыватьЭтапы = Параметры.ПоказыватьЭтапы;
	ПоказыватьМатериалы = Параметры.ПоказыватьМатериалы;
	ПоказыватьПеремещения = Параметры.ПоказыватьПеремещения;
	Назначение = Параметры.Назначение;
	ЭтапыОтбор = Параметры.Этапы;
	ЭтапыОтборАналитика = Параметры.ЭтапыАналитика;

	ЭтоРежимРасшифровки = ЗначениеЗаполнено(ЭтапыОтбор);
	
	ТекстыЗапроса = Новый Массив;
	
	Если ЭтоРежимРасшифровки Тогда
		ТекстыЗапроса.Добавить(ТекстЗапросаЗапущеноВЭтапахВТ());
	Иначе
		ТекстыЗапроса.Добавить(ТекстЗапросаЗаказаноВТ());
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребностьВТ(
		"СтруктураЗаказа.КлючПартия В
		|	(ВЫБРАТЬ
		|		Т.КлючПартия КАК КлючПартия
		|	ИЗ
		|		ВТЗаказано КАК Т)"));
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаменаКлючНоменклатураВТ(
		"ВЫБРАТЬ
		|	Потребности.Номенклатура        КАК Номенклатура,
		|	Потребности.Характеристика      КАК Характеристика,
		|	Потребности.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	Потребности.КлючНоменклатура    КАК КлючСвязиПеремещение
		|ИЗ
		|	ВТПотребность КАК Потребности",
		""));
	ТекстыЗапроса.Добавить(ТекстЗапросаОбеспечениеВТ());
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаменаКлючНоменклатураВТ(
		"ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура        КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика      КАК Характеристика,
		|	СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура    КАК КлючСвязиПеремещение
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	СтруктураЗаказа.КлючПартия В(
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			ВТОбеспечение КАК Т
		|		ГДЕ
		|			НЕ Т.ЭтоРезерв)
		|	И СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|	И ИСТИНА В(&УсловиеЭтоПолуфабрикат)",
		"Полуфабрикаты"));
	
	ОтборПартийОбеспеченияЗаказ = 
		"СтруктураЗаказа.КлючПартия В
		|	(ВЫБРАТЬ
		|		Т.КлючПартия КАК КлючПартия
		|	ИЗ
		|		ВТЗаказано КАК Т)";
	ОтборПартийОбеспечения = 
		"СтруктураЗаказа.КлючПартия В
		|	(ВЫБРАТЬ
		|		Т.КлючПартия КАК КлючПартия
		|	ИЗ
		|		ВТОбеспечение КАК Т
		|	ГДЕ
		|		НЕ Т.ЭтоРезерв)";
	
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияВТ(ОтборПартийОбеспеченияЗаказ, "Изделия", ""));
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияВТ(ОтборПартийОбеспечения, "Полуфабрикаты", "Полуфабрикаты"));
	Если ПоказыватьЭтапы Тогда
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтаповВТ(ОтборПартийОбеспеченияЗаказ, "Изделия", ""));
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтаповВТ(ОтборПартийОбеспечения, "Полуфабрикаты", "Полуфабрикаты"));
		ТекстыЗапроса.Добавить(ТекстЗапросаЭтапы("ВТЗаказано", "ВТРазмерПартийЗаказ"));
		ТекстыЗапроса.Добавить(ТекстЗапросаЭтапы("ВТОбеспечение", "ВТРазмерПартий"));
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтапов("Изделия"));
		ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспеченияЭтапов("Полуфабрикаты"));
	КонецЕсли;
	ТекстыЗапроса.Добавить(ТекстЗапросаЗаказано());
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребность());
	ТекстыЗапроса.Добавить(ТекстЗапросаОбеспечение());
	ТекстыЗапроса.Добавить(ТекстЗапросаОстаткиПоДругимНазначениям());
	ТекстыЗапроса.Добавить(ТекстЗапросаПотребностьСвернуто());
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспечения("Изделия"));
	ТекстыЗапроса.Добавить(ТекстЗапросаПроцентОбеспечения("Полуфабрикаты"));
	ТекстыЗапроса.Добавить(ТекстЗапросаВыпускПартийОбеспечения(ОтборПартийОбеспеченияЗаказ));
	ТекстыЗапроса.Добавить(ТекстЗапросаВыпускПартийОбеспечения(ОтборПартийОбеспечения));
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, " ; ");
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеЭтоПолуфабрикат", 
		?(ПоказыватьМатериалы, "ИСТИНА", ТекстЗапросаЭтоПолуфабрикат("СтруктураЗаказа")));
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстПотребностьЭтоПолуфабрикат", 
		?(ПоказыватьМатериалы, ТекстЗапросаЭтоПолуфабрикат("Потребность"), "ИСТИНА"));
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Заказ", Заказ);
	Запрос.УстановитьПараметр("ПоказыватьЭтапы", ПоказыватьЭтапы);
	Запрос.УстановитьПараметр("ПоказыватьПеремещения", ПоказыватьПеремещения);
	Запрос.УстановитьПараметр("Назначение", Назначение);
	Запрос.УстановитьПараметр("ПустойКлючСвязи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Если ЭтоРежимРасшифровки Тогда
		Запрос.УстановитьПараметр("Этапы", ЭтапыОтбор);
		Запрос.УстановитьПараметр("ЭтапНоменклатура", ЭтапыОтборАналитика.Номенклатура);
		Запрос.УстановитьПараметр("ЭтапХарактеристика", ЭтапыОтборАналитика.Характеристика);
		Запрос.УстановитьПараметр("ЭтапСклад", ЭтапыОтборАналитика.Склад);
		Запрос.УстановитьПараметр("ЭтапНазначение", ЭтапыОтборАналитика.Назначение);
	КонецЕсли;
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	Индекс = РезультатыЗапроса.ВГраница();
	ЭтапыЗаказ = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-13].Выгрузить(), Неопределено);
	Этапы = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-12].Выгрузить(), Неопределено);
	ПроцентОбеспеченияЭтапыЗаказ = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-11].Выгрузить(), Неопределено);
	ПроцентОбеспеченияЭтапы = ?(ПоказыватьЭтапы, РезультатыЗапроса[Индекс-10].Выгрузить(), Неопределено);
	Выборка = РезультатыЗапроса[Индекс-9].Выбрать(); // Потребности заказа
	ОбеспечениеЗаказ = РезультатыЗапроса[Индекс-8].Выгрузить(); // Обеспечение потребностей заказа
	Потребности1 = РезультатыЗапроса[Индекс-7].Выгрузить(); // Потребности в ПФ 1 уровня
	Обеспечение = РезультатыЗапроса[Индекс-6].Выгрузить(); // Обеспечние Потребностей 1 уровня
	ОстаткиПоДругимНазначениям = РезультатыЗапроса[Индекс-5].Выгрузить();
	Потребности2 = РезультатыЗапроса[Индекс-4].Выгрузить(); // Потребности в ПФ 2 уровня
	ПроцентОбеспеченияЗаказ = РезультатыЗапроса[Индекс-3].Выгрузить();
	ПроцентОбеспечения = РезультатыЗапроса[Индекс-2].Выгрузить();
	ВыпускПартийОбеспеченияЗаказ = ДеревоВыпускаПартийОбеспечения(РезультатыЗапроса[Индекс-1]);
	ВыпускПартийОбеспечения = ДеревоВыпускаПартийОбеспечения(РезультатыЗапроса[Индекс]);
	
	ОбеспечениеЗаказ.Индексы.Добавить("Номенклатура, Характеристика, Склад, Назначение");
	Обеспечение.Индексы.Добавить("КлючНоменклатура");
	ОстаткиПоДругимНазначениям.Индексы.Добавить("Номенклатура, Характеристика, Склад, Назначение");
	ПроцентОбеспеченияЗаказ.Индексы.Добавить("КлючПартия");
	ПроцентОбеспечения.Индексы.Добавить("КлючПартия");
	
	Если ПоказыватьЭтапы Тогда
		Потребности1.Индексы.Добавить("Партия, ЭтапСсылка");
		Потребности2.Индексы.Добавить("Партия, ЭтапСсылка");
		ЭтапыЗаказ.Индексы.Добавить("Партия");
		Этапы.Индексы.Добавить("Партия");
	Иначе
		Потребности1.Индексы.Добавить("Партия");
		Потребности2.Индексы.Добавить("Партия");
	КонецЕсли;
	
	Результат = НовыйДерево();
	
	// Изделие заказа
	Полуфабрикаты1 = Новый Массив;
	Пока Выборка.Следующий() Цикл
		
		СтрокаДерева = Результат.Строки.Добавить();
		ЗаполнитьСтрокуИзделие(СтрокаДерева, Выборка, ОбеспечениеЗаказ, ПроцентОбеспеченияЗаказ, ВыпускПартийОбеспеченияЗаказ);
		НайтиПотребностиДобавитьЭтапы(СтрокаДерева, Потребности1, ЭтапыЗаказ, ПроцентОбеспеченияЭтапыЗаказ, ПоказыватьЭтапы, Полуфабрикаты1);
		
		Если ЭтоРежимРасшифровки Тогда
			СтрокаДерева.ТипСтроки = ТипСтрокиНоменклатураРасшифровки();
		КонецЕсли;
		
	КонецЦикла;
	
	// Полуфабрикат 1 уровня
	Полуфабрикаты2 = Новый Массив;
	Для каждого Полуфабрикат Из Полуфабрикаты1 Цикл
		Для каждого СтрокаПотебность Из Полуфабрикат.Потребности Цикл
			
			СтрокаДерева = Полуфабрикат.Владелец.Строки.Добавить();
			ЗаполнитьСтрокуПолуфабрикат(
				СтрокаДерева, СтрокаПотебность, Обеспечение, ПроцентОбеспечения, ВыпускПартийОбеспечения, ОстаткиПоДругимНазначениям, ПоказыватьПеремещения);
			НайтиПотребностиДобавитьЭтапы(СтрокаДерева, Потребности2, Этапы, ПроцентОбеспеченияЭтапы, ПоказыватьЭтапы, Полуфабрикаты2);
			
		КонецЦикла;
	КонецЦикла;
	
	// Полуфабрикат 2 уровня
	Для каждого Полуфабрикат Из Полуфабрикаты2 Цикл
		Для каждого СтрокаПотебность Из Полуфабрикат.Потребности Цикл
			
			СтрокаДерева = Полуфабрикат.Владелец.Строки.Добавить();
			СтрокаДерева.ТипСтроки = ТипСтрокиСлужебный();
			СтрокаДерева.КлючПартия = СтрокаПотебность.Партия;
			Полуфабрикат.Владелец.ДостроитьДерево = Истина;
			
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура НайтиПотребностиДобавитьЭтапы(СтрокаДерева, Потребности, Этапы, ПроцентОбеспеченияЭтапы, ПоказыватьЭтапы, Результат)
	
	СтруктураПоиска1 = Новый Структура("Партия");
	СтруктураПоиска2 = Новый Структура("Партия, ЭтапСсылка");
	
	Для каждого Партия Из СтрокаДерева.ОбеспечениеПартии Цикл
		
		Если ПоказыватьЭтапы И СтрокаДерева.ТипСтроки <> ТипСтрокиПеремещение() Тогда
			
			СтруктураПоиска1.Партия = Партия;
			НайденныеСтроки = Этапы.НайтиСтроки(СтруктураПоиска1);
			Для Индекс = - НайденныеСтроки.ВГраница() По 0 Цикл
				
				Этап = НайденныеСтроки[-Индекс];
				
				Если Этап.Номенклатура <> Неопределено
					И Этап.Номенклатура <> СтрокаДерева.Номенклатура Тогда
					Продолжить;
				КонецЕсли;
				
				ЗаполнитьЗначенияСвойств(СтруктураПоиска2, Этап);
				
				Обеспечение = ПроцентОбеспеченияЭтапы.НайтиСтроки(СтруктураПоиска2);
				ДанныеОбеспечения = ?(Обеспечение.ВГраница() <> -1, Обеспечение[0], Неопределено);
				
				СтрокаДереваЭтап = СтрокаДерева.Строки.Добавить();
				ЗаполнитьСтрокуЭтап(СтрокаДереваЭтап, Этап, ДанныеОбеспечения);
				
				Результат.Добавить(
					Новый Структура("Владелец, Потребности",
						СтрокаДереваЭтап,
						Потребности.НайтиСтроки(СтруктураПоиска2)));
				
			КонецЦикла;
			
		Иначе
			
			СтруктураПоиска1.Партия = Партия;
			Результат.Добавить(
				Новый Структура("Владелец, Потребности",
					СтрокаДерева,
					Потребности.НайтиСтроки(СтруктураПоиска1)));
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьДеревоРекурсивно(СтрокиПриемник, СтрокиИсточник, СтрокиДостроитьДерево)
	
	Для каждого СтрокаИсточник Из СтрокиИсточник Цикл
		
		НоваяСтрока = СтрокиПриемник.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаИсточник);
		
		Если НоваяСтрока.ДостроитьДерево Тогда
			СтрокиДостроитьДерево.Добавить(НоваяСтрока);
		КонецЕсли;
		
		Если СтрокаИсточник.Строки.Количество() > 0 Тогда
			ЗаполнитьДеревоРекурсивно(НоваяСтрока.Строки, СтрокаИсточник.Строки, СтрокиДостроитьДерево);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуИзделие(СтрокаДерева, ЗначенияЗаполнения, Обеспечение, ПроцентОбеспечения, ВыпускПартийОбеспечения)
	
	ЗаполнитьЗначенияСвойств(СтрокаДерева, ЗначенияЗаполнения, 
		"Номенклатура, Характеристика, Склад, Назначение, ЕдиницаИзмерения, ТипПроцесса, Требуется, НомерСтроки, ТипНоменклатуры, ЖелаемаяДата");
	
	СтрокаДерева.ПредставлениеСтроки = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
		ЗначенияЗаполнения.НоменклатураПредставление,
		ЗначенияЗаполнения.ХарактеристикаПредставление);
	СтрокаДерева.СкладПодразделение = ЗначенияЗаполнения.Склад;
	
	СтрокаДерева.ТипСтроки = ТипСтрокиИзделие();
	СтрокаДерева.НомерКартинки = НомерКартинки(СтрокаДерева);
	
	СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Склад, Назначение",
		ЗначенияЗаполнения.Номенклатура,
		ЗначенияЗаполнения.Характеристика,
		ЗначенияЗаполнения.Склад,
		ЗначенияЗаполнения.Назначение);
	
	КлючиПартий = Новый Массив;
	КлючиНоменклатуры = Новый Массив;
	
	Для каждого Строка Из Обеспечение.НайтиСтроки(СтруктураПоиска) Цикл
		
		Если Не СтрокаДерева.НесколькоСпецификаций Тогда
			Если СтрокаДерева.Спецификация.Пустая() Тогда
				СтрокаДерева.Спецификация = Строка.Спецификация;
			ИначеЕсли СтрокаДерева.Спецификация <> Строка.Спецификация
					И Не Строка.Спецификация.Пустая() Тогда
				СтрокаДерева.Спецификация = Справочники.РесурсныеСпецификации.ПустаяСсылка();
				СтрокаДерева.НесколькоСпецификаций = Истина;
			КонецЕсли;
		КонецЕсли;
		
		СтрокаДерева.Запущено = СтрокаДерева.Запущено + Строка.Запущено;
		СтрокаДерева.Готово = СтрокаДерева.Готово + Строка.Готово;
		СтрокаДерева.Начало = ?(СтрокаДерева.Начало = '00010101',
			Строка.Начало,
			?(Строка.Начало = '00010101', СтрокаДерева.Начало, Мин(СтрокаДерева.Начало, Строка.Начало)));
		СтрокаДерева.Окончание = Макс(СтрокаДерева.Окончание, Строка.Окончание);
		
		Если КлючиПартий.Найти(Строка.Партия) = Неопределено Тогда
			КлючиПартий.Добавить(Строка.Партия);
		КонецЕсли;
		
		Если КлючиНоменклатуры.Найти(Строка.КлючНоменклатура) = Неопределено Тогда
			КлючиНоменклатуры.Добавить(Строка.КлючНоменклатура);
		КонецЕсли;
		
	КонецЦикла;
	
	СтрокаДерева.Осталось = СтрокаДерева.Требуется - СтрокаДерева.Готово - СтрокаДерева.Запущено;
	
	Если КлючиПартий.ВГраница() <> -1 Тогда
		
		СтрокаДерева.ОбеспечениеПартии = Новый ФиксированныйМассив(КлючиПартий);
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КлючПартия");
		СтруктураПоиска.Вставить("Номенклатура", ЗначенияЗаполнения.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", ЗначенияЗаполнения.Характеристика);
		
		КоличествоСтрок = 0;
		Для каждого КлючПартия Из КлючиПартий Цикл
			НайденнаяСтрока = ПроцентОбеспечения.Найти(КлючПартия, "КлючПартия");
			Если НайденнаяСтрока <> Неопределено Тогда
				СтрокаДерева.ТребуетсяОбеспечение = Истина;
				
				СтрокаДерева.ОбеспеченоПроцент = СтрокаДерева.ОбеспеченоПроцент + НайденнаяСтрока.ОбеспеченоПроцент;
				КоличествоСтрок = КоличествоСтрок + 1;
				
				СтруктураПоиска.КлючПартия = КлючПартия;
				СтрокиДерева = ВыпускПартийОбеспечения.Строки.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДерева.Количество() > 0 Тогда
					СтрокаИтоги = СтрокиДерева[0];
					Если СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель > 0 Тогда
						Остаток = ?(ЗначенияЗаполнения.ШтучнаяНоменклатура,
							Окр(СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель - 0.5),
							СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель);
						Индекс = 0;
						Пока Остаток > 0 И Индекс < СтрокаИтоги.Строки.Количество() Цикл
							СтрокаДетали = СтрокаИтоги.Строки[Индекс];
							
							Если КлючиНоменклатуры.Найти(СтрокаДетали.КлючНоменклатура) <> Неопределено Тогда
								СтрокаДерева.Обеспечено = СтрокаДерева.Обеспечено + Мин(Остаток, СтрокаДетали.Количество);
							КонецЕсли;
							
							Остаток = Остаток - Мин(Остаток, СтрокаДетали.Количество);
							Индекс = Индекс + 1;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоСтрок > 1 Тогда
			СтрокаДерева.ОбеспеченоПроцент = СтрокаДерева.ОбеспеченоПроцент/КоличествоСтрок;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуПолуфабрикат(СтрокаДерева, ЗначенияЗаполнения, Обеспечение, ПроцентОбеспечения, ВыпускПартийОбеспечения, ОстаткиПоДругимНазначениям, ПоказыватьПеремещения)
	
	ЗаполнитьЗначенияСвойств(СтрокаДерева, ЗначенияЗаполнения, 
		"Номенклатура, Характеристика, Склад, Назначение, ЕдиницаИзмерения, ТипПроцесса, КлючПартия, КлючНоменклатура, Требуется, ТипНоменклатуры, ЖелаемаяДата");
	
	СтрокаДерева.ПредставлениеСтроки = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
		ЗначенияЗаполнения.НоменклатураПредставление,
		ЗначенияЗаполнения.ХарактеристикаПредставление);
	СтрокаДерева.СкладПодразделение = ЗначенияЗаполнения.Склад;
	
	// Обеспечение потребности в ПФ
	СпецификацияОбеспечение = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	СпецификацияРезерв = Справочники.РесурсныеСпецификации.ПустаяСсылка();
	НесколькоСпецификаций = Ложь;
	
	ЕстьПеремещение = Ложь;
	ЕстьТипОбеспеченияПеремещение = Ложь;
	ЕстьПроизводство = Ложь;
	
	КлючиПартий = Новый Массив;
	ЗаказНаЗапускЭтапы = Новый Соответствие;
	
	СтруктураПоиска = Новый Структура("КлючНоменклатура", ЗначенияЗаполнения.КлючНоменклатура);
	Для каждого Строка Из Обеспечение.НайтиСтроки(СтруктураПоиска) Цикл
		
		СтрокаДерева.Начало = ?(СтрокаДерева.Начало = '00010101',
			Строка.Начало,
			?(Строка.Начало = '00010101', СтрокаДерева.Начало, Мин(СтрокаДерева.Начало, Строка.Начало)));
		СтрокаДерева.Окончание = Макс(СтрокаДерева.Окончание, Строка.Окончание);
		
		Если Строка.ЭтоПеремещение Тогда
			Если ПоказыватьПеремещения Тогда
				ЕстьПеремещение = Истина;
			Иначе
				СтрокаДерева.НесколькоСкладов = Истина;
				Продолжить;
			КонецЕсли;
		КонецЕсли;
		
		Если Строка.ТипОбеспечения = Перечисления.ТипыОбеспечения.Перемещение
			И ПоказыватьПеремещения Тогда
			ЕстьТипОбеспеченияПеремещение = Истина;
		КонецЕсли;
		
		Если Строка.ЭтоПроизводство Тогда
			ЕстьПроизводство = Истина;
		КонецЕсли;
		
		СтрокаДерева.Запущено = СтрокаДерева.Запущено + Строка.Запущено;
		
		Если Строка.ЭтоРезерв Тогда
			
			Если Не Строка.ЗаказНаЗапуск.Пустая() Тогда
				СтрокаДереваЗаказНаЗапуск = СтрокаДерева.Строки.Найти(Строка.ЗаказНаЗапуск, "ЗаказНаЗапуск");
				Если СтрокаДереваЗаказНаЗапуск = Неопределено Тогда
					СтрокаДереваЗаказНаЗапуск = СтрокаДерева.Строки.Добавить();
					СтрокаДереваЗаказНаЗапуск.ТипСтроки = ТипСтрокиЗаказНаЗапуск();
					СтрокаДереваЗаказНаЗапуск.ЗаказНаЗапуск = Строка.ЗаказНаЗапуск;
					ЗаказНаЗапускЭтапы.Вставить(Строка.ЗаказНаЗапуск, Новый Массив);
				КонецЕсли;
				
				СтрокаДереваЗаказНаЗапуск.ЗапущеноВЗаказахНаЗапуск = СтрокаДереваЗаказНаЗапуск.ЗапущеноВЗаказахНаЗапуск
					+ Строка.Распределено;
					
				Представление = СтрШаблон(НСтр("ru = '%1 (%2 %3)';
												|en = '%1 (%2 %3)'"),
					Документы.ЗаказНаПроизводство2_2.ПредставлениеЗаказа(Строка.ЗаказНаЗапуск),
					Формат(СтрокаДереваЗаказНаЗапуск.ЗапущеноВЗаказахНаЗапуск, "ЧГ=0;"),
					ЗначенияЗаполнения.ЕдиницаИзмерения);
				
				Если Строка.РасшифровкаЗапускаЭтапами Тогда
					ЗаказНаЗапускЭтапы[Строка.ЗаказНаЗапуск].Добавить(Строка.ЗаказНаПоступление);
					СтрокаДереваЗаказНаЗапуск.ЗаказНаЗапускЭтапы = Новый ФиксированныйМассив(
						ЗаказНаЗапускЭтапы[Строка.ЗаказНаЗапуск]);
						
					Представление = Представление + ", "
						+ Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(Строка.ЗаказНаПоступление);
					Если СтрокаДереваЗаказНаЗапуск.ЗаказНаЗапускЭтапы.Количество() > 1 Тогда
						Представление = Представление + ", ..."
					КонецЕсли;
				КонецЕсли;
				
				СтрокаДереваЗаказНаЗапуск.ПредставлениеСтроки = Представление;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(Строка.ЗаказНаПоступление) Тогда
				СтрокаДерева.Запущено = СтрокаДерева.Запущено + Строка.Распределено;
			Иначе
				СтрокаДерева.Готово = СтрокаДерева.Готово + Строка.Распределено;
			КонецЕсли;
			
			Если Не НесколькоСпецификаций Тогда
				Если СпецификацияРезерв.Пустая() Тогда
					СпецификацияРезерв = Строка.Спецификация;
				ИначеЕсли СпецификацияРезерв <> Строка.Спецификация
						И Не Строка.Спецификация.Пустая() Тогда
					СпецификацияРезерв = Справочники.РесурсныеСпецификации.ПустаяСсылка();
					НесколькоСпецификаций = Истина;
				КонецЕсли;
			КонецЕсли;
			
		Иначе
			
			Если КлючиПартий.Найти(Строка.КлючПартия) = Неопределено Тогда
				КлючиПартий.Добавить(Строка.КлючПартия);
			КонецЕсли;
			
			Если Не НесколькоСпецификаций Тогда
				Если СпецификацияОбеспечение.Пустая() Тогда
					СпецификацияОбеспечение = Строка.Спецификация;
				ИначеЕсли СпецификацияОбеспечение <> Строка.Спецификация
						И Не Строка.Спецификация.Пустая() Тогда
					СпецификацияОбеспечение = Справочники.РесурсныеСпецификации.ПустаяСсылка();
					НесколькоСпецификаций = Истина;
				КонецЕсли;
			КонецЕсли;
			
			Если Не ПоказыватьПеремещения
				И СтрокаДерева.Склад <> Строка.Склад Тогда
				СтрокаДерева.Склад = Строка.Склад;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЕстьПроизводство Тогда
		СтрокаДерева.ТипСтроки = ТипСтрокиПолуфабрикат();
	ИначеЕсли ЕстьПеремещение Или ЕстьТипОбеспеченияПеремещение Тогда
		СтрокаДерева.ТипСтроки = ТипСтрокиПеремещение();
	Иначе
		СтрокаДерева.ТипСтроки = ?(ЗначенияЗаполнения.ЭтоМатериал, ТипСтрокиМатериал(), ТипСтрокиПолуфабрикат());
	КонецЕсли;
	
	СтрокаДерева.НесколькоСпецификаций = НесколькоСпецификаций;
	Если Не НесколькоСпецификаций Тогда
		СтрокаДерева.Спецификация = ?(Не СпецификацияОбеспечение.Пустая(), СпецификацияОбеспечение, СпецификацияРезерв);
	КонецЕсли;
	СтрокаДерева.Осталось = СтрокаДерева.Требуется - СтрокаДерева.Готово - СтрокаДерева.Запущено;
	СтрокаДерева.НомерКартинки = НомерКартинки(СтрокаДерева);
	
	Если КлючиПартий.ВГраница() <> -1 Тогда
		
		СтрокаДерева.ОбеспечениеПартии = Новый ФиксированныйМассив(КлючиПартий);
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("КлючПартия");
		СтруктураПоиска.Вставить("Номенклатура", ЗначенияЗаполнения.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", ЗначенияЗаполнения.Характеристика);
		
		КоличествоСтрок = 0;
		Для каждого КлючПартия Из КлючиПартий Цикл
			НайденнаяСтрока = ПроцентОбеспечения.Найти(КлючПартия, "КлючПартия");
			Если НайденнаяСтрока <> Неопределено Тогда
				СтрокаДерева.ТребуетсяОбеспечение = Истина;
				
				СтрокаДерева.ОбеспеченоПроцент = СтрокаДерева.ОбеспеченоПроцент + НайденнаяСтрока.ОбеспеченоПроцент;
				КоличествоСтрок = КоличествоСтрок + 1;
				
				СтруктураПоиска.КлючПартия = КлючПартия;
				СтрокиДерева = ВыпускПартийОбеспечения.Строки.НайтиСтроки(СтруктураПоиска);
				Если СтрокиДерева.Количество() > 0 Тогда
					СтрокаИтоги = СтрокиДерева[0];
					Если СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель > 0 Тогда
						Остаток = ?(ЗначенияЗаполнения.ШтучнаяНоменклатура,
							Окр(СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель - 0.5),
							СтрокаИтоги.Количество * НайденнаяСтрока.Числитель / НайденнаяСтрока.Знаменатель);
						Индекс = 0;
						Пока Остаток > 0 И Индекс < СтрокаИтоги.Строки.Количество() Цикл
							СтрокаДетали = СтрокаИтоги.Строки[Индекс];
							
							Если СтрокаДетали.КлючНоменклатура = ЗначенияЗаполнения.КлючНоменклатура Тогда
								СтрокаДерева.Обеспечено = СтрокаДерева.Обеспечено + Мин(Остаток, СтрокаДетали.Количество);
								Прервать;
							КонецЕсли;
							
							Остаток = Остаток - Мин(Остаток, СтрокаДетали.Количество);
							Индекс = Индекс + 1;
						КонецЦикла;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		Если КоличествоСтрок > 1 Тогда
			СтрокаДерева.ОбеспеченоПроцент = СтрокаДерева.ОбеспеченоПроцент/КоличествоСтрок;
		КонецЕсли;
		
	КонецЕсли;
	
	// Индикация наличия остатков по другим назначениям
	СтруктураИндексов = Новый Структура;
	СтруктураИндексов.Вставить("ИндексКартинкиОсталосьСвободныйИлиНеНужный", 0);
	СтруктураИндексов.Вставить("ИндексКартинкиОсталосьПоДругимНазначением",  0);
	СтруктураИндексов.Вставить("ИндексКартинкиОсталосьНаДругомСкладе",       0);
	СтруктураИндексов.Вставить("ИндексКартинкиОсталось",                     0);
	
	Если СтрокаДерева.Осталось > 0 Тогда
		
		СтруктураПоиска = Новый Структура;
		СтруктураПоиска.Вставить("Номенклатура",   ЗначенияЗаполнения.Номенклатура);
		СтруктураПоиска.Вставить("Характеристика", ЗначенияЗаполнения.Характеристика);
		СтруктураПоиска.Вставить("Склад",		   ЗначенияЗаполнения.Склад);
		СтруктураПоиска.Вставить("Назначение",	   ЗначенияЗаполнения.Назначение);
		
		МассивСтрок = ОстаткиПоДругимНазначениям.НайтиСтроки(СтруктураПоиска);
		Если МассивСтрок.Количество() > 0 Тогда
			ЗаполнитьЗначенияСвойств(СтруктураИндексов, МассивСтрок[0]);
		КонецЕсли;
		
	КонецЕсли;
	
	ЗаполнитьЗначенияСвойств(СтрокаДерева, СтруктураИндексов);
	
КонецПроцедуры

Процедура ЗаполнитьСтрокуЭтап(СтрокаДерева, ЗначенияЗаполнения, ДанныеОбеспечения)
	
	ЗаполнитьЗначенияСвойств(СтрокаДерева, ЗначенияЗаполнения,
		"КлючПартия,
		|Подразделение,
		|Спецификация,
		|ЭтапСсылка,
		|НомерЭтапа,
		|НомерСледующегоЭтапа,
		|Начало,
		|Окончание,
		|ТипПроцесса,
		|ЕдиницаИзмерения,
		|Требуется,
		|Запущено,
		|Готово,
		|ПроизводствоНаСтороне");
	
	СтрокаДерева.ПредставлениеСтроки = ЗначенияЗаполнения.НаименованиеЭтапа;
	СтрокаДерева.СкладПодразделение = ЗначенияЗаполнения.Подразделение;
	СтрокаДерева.ТипСтроки = ?(ТипЗнч(СтрокаДерева.ЭтапСсылка) = Тип("СправочникСсылка.ЭтапыПроизводства"),
		ТипСтрокиЭтапСтруктуры(),
		ТипСтрокиЭтапДокумент());
	СтрокаДерева.НомерКартинки = НомерКартинки(СтрокаДерева);
	
	Если Не СтрокаДерева.ПроизводствоНаСтороне Тогда
		СтрокаДерева.Осталось = СтрокаДерева.Требуется - СтрокаДерева.Готово - СтрокаДерева.Запущено;
	КонецЕсли;
	
	Если ДанныеОбеспечения <> Неопределено Тогда
		СтрокаДерева.ТребуетсяОбеспечение = Истина;
		СтрокаДерева.ОбеспеченоПроцент = ДанныеОбеспечения.ОбеспеченоПроцент;
		Обеспечено = (СтрокаДерева.Требуется - СтрокаДерева.Готово) * ДанныеОбеспечения.Числитель / ДанныеОбеспечения.Знаменатель;
		Если Обеспечено > 0 Тогда
			СтрокаДерева.Обеспечено = ?(ЗначенияЗаполнения.ШтучнаяНоменклатура, Окр(Обеспечено - 0.5), Обеспечено);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ТекстыЗапроса

Функция ТекстЗапросаЗаказаноВТ()
	
	Возврат
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
		|	ВЫБОР 
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|				ИЛИ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Склад
		|	КОНЕЦ                           КАК Склад,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.БезСпецификаций)
		|				И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ТабличнаяЧасть.Ссылка.НазначениеПродукция
		|		ИНАЧЕ ТабличнаяЧасть.Назначение
		|	КОНЕЦ                           КАК Назначение,
		|	ТабличнаяЧасть.Количество       КАК Количество,
		|	ТабличнаяЧасть.КлючНоменклатура КАК КлючНоменклатура,
		|	ТабличнаяЧасть.НомерСтроки      КАК НомерСтроки,
		|	ТабличнаяЧасть.Ссылка           КАК ЗаказНаПроизводство,
		|	ТабличнаяЧасть.Ссылка.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство2_2.Закрыт) КАК Закрыт,
		|	ТабличнаяЧасть.Ссылка.ДатаПотребности КАК ЖелаемаяДата
		|ПОМЕСТИТЬ ВТДанныеЗаказа
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ТабличнаяЧасть
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка = &Заказ
		|	И НЕ ТабличнаяЧасть.Отменено
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура           КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика         КАК Характеристика,
		|	ТабличнаяЧасть.Склад                  КАК Склад,
		|	ТабличнаяЧасть.Назначение             КАК Назначение,
		|	ТабличнаяЧасть.ЗаказНаПроизводство    КАК ЗаказНаПроизводство,
		|	ТабличнаяЧасть.ЖелаемаяДата           КАК ЖелаемаяДата,
		|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки)   КАК НомерСтроки,
		|	СУММА(ТабличнаяЧасть.Количество)      КАК Требуется
		|ПОМЕСТИТЬ ВТДанныеЗакрытогоЗаказа
		|ИЗ
		|	ВТДанныеЗаказа КАК ТабличнаяЧасть
		|ГДЕ
		|	(&Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ИЛИ ТабличнаяЧасть.Назначение = &Назначение)
		|	И ТабличнаяЧасть.Закрыт
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Склад,
		|	ТабличнаяЧасть.Назначение,
		|	ТабличнаяЧасть.ЗаказНаПроизводство,
		|	ТабличнаяЧасть.ЖелаемаяДата
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЗапасыИПотребностиОстатки.Номенклатура КАК Номенклатура,
		|	ЗапасыИПотребностиОстатки.Характеристика КАК Характеристика,
		|	ЗапасыИПотребностиОстатки.Склад КАК Склад,
		|	ЗапасыИПотребностиОстатки.Назначение КАК Назначение,
		|	ЗапасыИПотребностиОстатки.Заказ КАК ЗаказНаПроизводство,
		|	ЗапасыИПотребностиОстатки.ЗаказаноОстаток КАК Остаток
		|ПОМЕСТИТЬ ВТОстаткиЗакрытогоЗаказа
		|ИЗ
		|	РегистрНакопления.ЗапасыИПотребности.Остатки(, (Номенклатура, Характеристика, Склад, Назначение, Заказ) В
		|		(ВЫБРАТЬ
		|			Т.Номенклатура,
		|			Т.Характеристика,
		|			Т.Склад,
		|			Т.Назначение,
		|			Т.ЗаказНаПроизводство КАК Заказ
		|		ИЗ
		|			ВТДанныеЗакрытогоЗаказа КАК Т)) КАК ЗапасыИПотребностиОстатки
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура          КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика        КАК Характеристика,
		|	СтруктураЗаказа.Склад                 КАК Склад,
		|	СтруктураЗаказа.Назначение            КАК Назначение,
		|	СтруктураЗаказа.КлючПартия            КАК КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура      КАК КлючНоменклатура,
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ СтруктураЗаказа.Спецификация
		|	КОНЕЦ                                 КАК Спецификация,
		|	СтруктураЗаказа.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|	ТабличнаяЧасть.ЖелаемаяДата           КАК ЖелаемаяДата,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки)   КАК НомерСтроки,
		|	СУММА(СтруктураЗаказа.Требуется) + СУММА(СтруктураЗаказа.Готово) КАК Требуется,
		|	СУММА(СтруктураЗаказа.Запланировано) КАК Запланировано,
		|	СУММА(СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) КАК Запущено,
		|	СУММА(СтруктураЗаказа.Готово) КАК Готово
		|ПОМЕСТИТЬ ВТЗаказано
		|ИЗ
		|	ВТДанныеЗаказа КАК ТабличнаяЧасть
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|	ПО ТабличнаяЧасть.Номенклатура = СтруктураЗаказа.Номенклатура
		|		И ТабличнаяЧасть.Характеристика = СтруктураЗаказа.Характеристика
		|		И ТабличнаяЧасть.Склад = СтруктураЗаказа.Склад
		|		И ТабличнаяЧасть.Назначение = СтруктураЗаказа.Назначение
		|		И ТабличнаяЧасть.ЗаказНаПроизводство = СтруктураЗаказа.ЗаказНаПроизводство
		|		И ТабличнаяЧасть.КлючНоменклатура = СтруктураЗаказа.КлючНоменклатура
		|	
		|ГДЕ
		|	СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Продукция),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПродукции))
		|	И (&Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ИЛИ СтруктураЗаказа.Назначение = &Назначение)
		|	И НЕ ТабличнаяЧасть.Закрыт
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ СтруктураЗаказа.Спецификация
		|	КОНЕЦ,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	ТабличнаяЧасть.ЖелаемаяДата
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) > 0
		|		ИЛИ СУММА(СтруктураЗаказа.Запланировано) > 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) > 0
		|		ИЛИ СУММА(СтруктураЗаказа.Готово) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ТабличнаяЧасть.Номенклатура        КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика      КАК Характеристика,
		|	ТабличнаяЧасть.Склад               КАК Склад,
		|	ТабличнаяЧасть.Назначение          КАК Назначение,
		|	&ПустойКлючСвязи                   КАК КлючПартия,
		|	&ПустойКлючСвязи                   КАК КлючНоменклатура,
		|	ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка) КАК Спецификация,
		|	ТабличнаяЧасть.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	ТабличнаяЧасть.ЖелаемаяДата        КАК ЖелаемаяДата,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	ТабличнаяЧасть.НомерСтроки         КАК НомерСтроки,
		|	ТабличнаяЧасть.Требуется           КАК Требуется,
		|	0                                  КАК Запланировано,
		|	0                                  КАК Запущено,
		|	ТабличнаяЧасть.Требуется
		|		- ЕСТЬNULL(ОстаткиЗакрытогоЗаказа.Остаток, 0) КАК Готово
		|ИЗ
		|	ВТДанныеЗакрытогоЗаказа КАК ТабличнаяЧасть
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТОстаткиЗакрытогоЗаказа КАК ОстаткиЗакрытогоЗаказа
		|	ПО ТабличнаяЧасть.Номенклатура = ОстаткиЗакрытогоЗаказа.Номенклатура
		|		И ТабличнаяЧасть.Характеристика = ОстаткиЗакрытогоЗаказа.Характеристика
		|		И ТабличнаяЧасть.Склад = ОстаткиЗакрытогоЗаказа.Склад
		|		И ТабличнаяЧасть.Назначение = ОстаткиЗакрытогоЗаказа.Назначение
		|		И ТабличнаяЧасть.ЗаказНаПроизводство = ОстаткиЗакрытогоЗаказа.ЗаказНаПроизводство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия                    КАК КлючПартия,
		|	СтруктураЗаказа.Номенклатура                  КАК Номенклатура,
		|	СтруктураЗаказа.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(СтруктураЗаказа.Запланировано)          КАК Запланировано
		|ПОМЕСТИТЬ ВТРазмерПартийЗаказ
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	&ПоказыватьЭтапы
		|	И (СтруктураЗаказа.Номенклатура, СтруктураЗаказа.Характеристика, СтруктураЗаказа.КлючПартия) В 
		|		(ВЫБРАТЬ
		|			Заказано.Номенклатура,
		|			Заказано.Характеристика,
		|			Заказано.КлючПартия
		|		ИЗ
		|			ВТЗаказано КАК Заказано)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Номенклатура.ЕдиницаИзмерения
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Запланировано) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия";
		
КонецФункции

Функция ТекстЗапросаЗаказано()
	
	Возврат
		"ВЫБРАТЬ
		|	Заказано.Номенклатура                  КАК Номенклатура,
		|	Заказано.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Заказано.Номенклатура.Представление    КАК НоменклатураПредставление,
		|	Заказано.Номенклатура.ТипНоменклатуры  КАК ТипНоменклатуры,
		|	ЕСТЬNULL(Заказано.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук), ЛОЖЬ) КАК ШтучнаяНоменклатура,
		|	Заказано.Характеристика                КАК Характеристика,
		|	Заказано.Характеристика.Представление  КАК ХарактеристикаПредставление,
		|	Заказано.Склад                         КАК Склад,
		|	Заказано.Назначение                    КАК Назначение,
		|	Заказано.ТипПроцесса                   КАК ТипПроцесса,
		|	Заказано.ЖелаемаяДата                  КАК ЖелаемаяДата,
		|	МИНИМУМ(Заказано.НомерСтроки)          КАК НомерСтроки,
		|	СУММА(Заказано.Требуется)              КАК Требуется
		|ИЗ
		|	ВТЗаказано КАК Заказано
		|
		|СГРУППИРОВАТЬ ПО
		|	Заказано.Номенклатура,
		|	ЕСТЬNULL(Заказано.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук), ЛОЖЬ),
		|	Заказано.Характеристика,
		|	Заказано.Склад,
		|	Заказано.Назначение,
		|	Заказано.ТипПроцесса,
		|	Заказано.ЖелаемаяДата
		|
		|ИМЕЮЩИЕ
		|	СУММА(Заказано.Требуется) > 0
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Обеспечение.Номенклатура     КАК Номенклатура,
		|	Обеспечение.Характеристика   КАК Характеристика,
		|	Обеспечение.Склад            КАК Склад,
		|	Обеспечение.Назначение       КАК Назначение,
		|	Обеспечение.КлючПартия       КАК Партия,
		|	Обеспечение.КлючНоменклатура КАК КлючНоменклатура,
		|	Обеспечение.Спецификация     КАК Спецификация,
		|	Обеспечение.Запущено         КАК Запущено,
		|	Обеспечение.Готово           КАК Готово,
		|	ЕСТЬNULL(НормативныйГрафик.Начало, ДАТАВРЕМЯ(1,1,1)) КАК Начало,
		|	ЕСТЬNULL(НормативныйГрафик.Окончание, ДАТАВРЕМЯ(1,1,1)) КАК Окончание
		|ИЗ
		|	ВТЗаказано КАК Обеспечение
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафик
		|	ПО Обеспечение.ЗаказНаПроизводство = НормативныйГрафик.ЗаказНаПроизводство
		|		И Обеспечение.КлючПартия = НормативныйГрафик.КлючПартия
		|		И НормативныйГрафик.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|
		|ГДЕ
		|	Обеспечение.Запланировано > 0
		|	ИЛИ Обеспечение.Запущено > 0
		|	ИЛИ Обеспечение.Готово > 0";
	
КонецФункции

Функция ТекстЗапросаЗапущеноВЭтапахВТ()
	
	// Имитация потребностей заказа на основе заданного изделия в запущенном этапе (ВТЗаказано)
	Возврат
		"ВЫБРАТЬ
		|	СтруктураЗаказа.ВидСтроки             КАК ВидСтроки,
		|	СтруктураЗаказа.Номенклатура          КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика        КАК Характеристика,
		|	СтруктураЗаказа.Склад                 КАК Склад,
		|	СтруктураЗаказа.Назначение            КАК Назначение,
		|	СтруктураЗаказа.КлючПартия            КАК КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура      КАК КлючНоменклатура,
		|	СтруктураЗаказа.Этап                  КАК Этап,
		|	ВЫБОР 
		|		КОГДА СтруктураЗаказа.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ТОГДА СтруктураЗаказа.Спецификация
		|		КОГДА СтруктураЗаказа.Этап ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.Этап КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ ВЫРАЗИТЬ(СтруктураЗаказа.Этап КАК Справочник.ЭтапыПроизводства).Владелец
		|	КОНЕЦ                                 КАК Спецификация,
		|	СтруктураЗаказа.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|	СУММА(СтруктураЗаказа.Требуется)      КАК Требуется,
		|	СУММА(СтруктураЗаказа.Запущено)       КАК Запущено,
		|	СУММА(СтруктураЗаказа.РаспределеноИзПартий 
		|				+ СтруктураЗаказа.РаспределеноИзПартийОбособленно) КАК РаспределеноИзПартий,
		|	ЕСТЬNULL(НормативныйГрафик.Начало, ДАТАВРЕМЯ(1,1,1)) КАК Начало,
		|	ЕСТЬNULL(НормативныйГрафик.Окончание, ДАТАВРЕМЯ(1,1,1)) КАК Окончание
		|ПОМЕСТИТЬ ВТНоменклатураПартийЗапуска
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафик
		|	ПО СтруктураЗаказа.ЗаказНаПроизводство = НормативныйГрафик.ЗаказНаПроизводство
		|		И СтруктураЗаказа.КлючПартия = НормативныйГрафик.КлючПартия
		|		И НормативныйГрафик.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|	
		|ГДЕ
		|	СтруктураЗаказа.Номенклатура = &ЭтапНоменклатура
		|	И СтруктураЗаказа.Характеристика = &ЭтапХарактеристика
		|	И СтруктураЗаказа.Склад = &ЭтапСклад
		|	И СтруктураЗаказа.Назначение = &ЭтапНазначение
		|	И СтруктураЗаказа.ЗаказНаПроизводство = &Заказ
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.ВидСтроки,
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	СтруктураЗаказа.Этап,
		|	ВЫБОР 
		|		КОГДА СтруктураЗаказа.Спецификация <> ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ТОГДА СтруктураЗаказа.Спецификация
		|		КОГДА СтруктураЗаказа.Этап ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.Этап КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ ВЫРАЗИТЬ(СтруктураЗаказа.Этап КАК Справочник.ЭтапыПроизводства).Владелец
		|	КОНЕЦ,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	ЕСТЬNULL(НормативныйГрафик.Начало, ДАТАВРЕМЯ(1,1,1)),
		|	ЕСТЬNULL(НормативныйГрафик.Окончание, ДАТАВРЕМЯ(1,1,1))
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.Запущено) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) <> 0
		|;
		|
		|//////////////////////////////////////////////////////////////////////////////// 
		|ВЫБРАТЬ
		|	Выпуск.КлючПартия КАК КлючПартия,
		|	МИНИМУМ(Потребление.Начало) КАК ЖелаемаяДата
		|ПОМЕСТИТЬ ВТДатыПотребностиПартийЗапуска	
		|ИЗ	
		|	ВТНоменклатураПартийЗапуска КАК Выпуск
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНоменклатураПартийЗапуска КАК Потребление
		|	ПО Выпуск.КлючНоменклатура = Потребление.КлючНоменклатура
		|	
		|ГДЕ
		|	Выпуск.Этап В (&Этапы)
		|	И Выпуск.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката)
        |	И Потребление.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|СГРУППИРОВАТЬ ПО
		|	Выпуск.КлючПартия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ПартииЗапуска.Номенклатура          КАК Номенклатура,
		|	ПартииЗапуска.Характеристика        КАК Характеристика,
		|	ПартииЗапуска.Склад                 КАК Склад,
		|	ПартииЗапуска.Назначение            КАК Назначение,
		|	ПартииЗапуска.КлючПартия            КАК КлючПартия,
		|	ПартииЗапуска.КлючНоменклатура      КАК КлючНоменклатура,
		|	ПартииЗапуска.Спецификация          КАК Спецификация,
		|	ПартииЗапуска.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|	ЕСТЬNULL(ДатыПотребности.ЖелаемаяДата, ПартииЗапуска.Окончание) КАК ЖелаемаяДата,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	0                                   КАК НомерСтроки,
		|	ПартииЗапуска.Запущено              КАК Требуется,
		|	0                                   КАК Запланировано,
		|	0                                   КАК Запущено,
		|	0                                   КАК Готово
		|ПОМЕСТИТЬ ВТЗаказано
		|ИЗ
		|	ВТНоменклатураПартийЗапуска КАК ПартииЗапуска
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПотребностиПартийЗапуска КАК ДатыПотребности
		|	ПО ПартииЗапуска.КлючПартия = ДатыПотребности.КлючПартия
		|	
		|ГДЕ
		|	ПартииЗапуска.Этап В (&Этапы)
		|	И ПартииЗапуска.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Запущено)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПартииЗапуска.Номенклатура          КАК Номенклатура,
		|	ПартииЗапуска.Характеристика        КАК Характеристика,
		|	ПартииЗапуска.Склад                 КАК Склад,
		|	ПартииЗапуска.Назначение            КАК Назначение,
		|	ПартииЗапуска.КлючПартия            КАК КлючПартия,
		|	ПартииЗапуска.КлючНоменклатура      КАК КлючНоменклатура,
		|	ПартииЗапуска.Спецификация          КАК Спецификация,
		|	ПартииЗапуска.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
		|	ЕСТЬNULL(ДатыПотребности.ЖелаемаяДата, ПартииЗапуска.Окончание) КАК ЖелаемаяДата,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	0                                   КАК НомерСтроки,
		|	0                                   КАК Требуется,
		|	0                                   КАК Запланировано,
		|	СУММА(ПартииЗапуска.РаспределеноИзПартий) КАК Запущено,
		|	0                                   КАК Готово
		|ИЗ
		|	ВТНоменклатураПартийЗапуска КАК ПартииЗапуска
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПотребностиПартийЗапуска КАК ДатыПотребности
		|	ПО ПартииЗапуска.КлючПартия = ДатыПотребности.КлючПартия
		|	
		|ГДЕ
		|	ПартииЗапуска.Этап В (&Этапы)
		|
		|СГРУППИРОВАТЬ ПО
		|	ПартииЗапуска.Номенклатура,
		|	ПартииЗапуска.Характеристика,
		|	ПартииЗапуска.Склад,
		|	ПартииЗапуска.Назначение,
		|	ПартииЗапуска.КлючПартия,
		|	ПартииЗапуска.КлючНоменклатура,
		|	ПартииЗапуска.Спецификация,
		|	ПартииЗапуска.ЗаказНаПроизводство,
		|	ЕСТЬNULL(ДатыПотребности.ЖелаемаяДата, ПартииЗапуска.Окончание)
		|
		|ИМЕЮЩИЕ
		|	СУММА(ПартииЗапуска.РаспределеноИзПартий) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Обеспечение.КлючПартия                    КАК КлючПартия,
		|	Обеспечение.Номенклатура                  КАК Номенклатура,
		|	Обеспечение.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(Обеспечение.Запланировано)          КАК Запланировано
		|ПОМЕСТИТЬ ВТРазмерПартийЗаказ
		|ИЗ
		|	ВТЗаказано КАК Обеспечение
		|ГДЕ
		|	&ПоказыватьЭтапы
		|
		|СГРУППИРОВАТЬ ПО
		|	Обеспечение.КлючПартия,
		|	Обеспечение.Номенклатура,
		|	Обеспечение.Номенклатура.ЕдиницаИзмерения
		|
		|ИМЕЮЩИЕ
		|	СУММА(Обеспечение.Запланировано) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия";
	
КонецФункции

Функция ТекстЗапросаПотребностьВТ(УсловиеОтбора)
	
	Возврат СтрЗаменить( 
		"ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура        КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика      КАК Характеристика,
		|	СтруктураЗаказа.Склад               КАК Склад,
		|	СтруктураЗаказа.Назначение          КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура    КАК КлючНоменклатура,
		|	СтруктураЗаказа.КлючПартия          КАК КлючПартия,
		|	СтруктураЗаказа.КлючПартия          КАК Партия,
		|	СтруктураЗаказа.Этап                КАК ЭтапСсылка,
		|	СУММА(СтруктураЗаказа.Требуется)
		|		+ СУММА(СтруктураЗаказа.Готово) КАК Требуется,
		|	МАКСИМУМ(ЕСТЬNULL(НормативныйГрафик.Начало, ДАТАВРЕМЯ(1,1,1))) КАК ЖелаемаяДата
		|ПОМЕСТИТЬ ВТПотребность
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|		
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафик
		|	ПО СтруктураЗаказа.ЗаказНаПроизводство = НормативныйГрафик.ЗаказНаПроизводство
		|		И СтруктураЗаказа.КлючПартия = НормативныйГрафик.КлючПартия
		|		И СтруктураЗаказа.Этап = НормативныйГрафик.Этап
		|ГДЕ
		|	&УсловиеОтбора
		|	И СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|	И ИСТИНА В(&УсловиеЭтоПолуфабрикат)
		|	И (&Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ИЛИ СтруктураЗаказа.Назначение = &Назначение)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Этап
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) <> 0
		|	ИЛИ СУММА(СтруктураЗаказа.Готово) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура",
		"&УсловиеОтбора",
		УсловиеОтбора);
	
КонецФункции

Функция ТекстЗапросаПотребностьСвернуто()
	
	Возврат
		"ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия КАК Партия,
		|	СтруктураЗаказа.Этап       КАК ЭтапСсылка
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	СтруктураЗаказа.КлючПартия В(
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			ВТОбеспечение КАК Т)
		|	И СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|	И ИСТИНА В(&УсловиеЭтоПолуфабрикат)
		|	И (&Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка) ИЛИ СтруктураЗаказа.Назначение = &Назначение)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Этап
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) <> 0
		|	ИЛИ СУММА(СтруктураЗаказа.Готово) <> 0";
	
КонецФункции

Функция ТекстЗапросаПроцентОбеспеченияВТ(УсловиеОтбора, Постфикс, ЗаменаКлючейПостфикс)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.КлючПартия КАК КлючПартия,
		|	ВложенныйЗапрос.Распределено КАК Числитель,
		|	ВложенныйЗапрос.Требуется КАК Знаменатель,
		|	ВложенныйЗапрос.Распределено/ВложенныйЗапрос.Требуется КАК Обеспечено
		|ПОМЕСТИТЬ ВТПроцентОбеспечения
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос2.КлючПартия          КАК КлючПартия,
		|		ВложенныйЗапрос2.Номенклатура        КАК Номенклатура,
		|		ВложенныйЗапрос2.Характеристика      КАК Характеристика,
		|		СУММА(ВложенныйЗапрос2.Требуется)    КАК Требуется,
		|		СУММА(ВложенныйЗапрос2.Распределено) КАК Распределено
		|	ИЗ
		|		(
		|		ВЫБРАТЬ
		|			СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|			СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|			СтруктураЗаказа.Характеристика КАК Характеристика,
		|			СтруктураЗаказа.Требуется
		|				+ СтруктураЗаказа.Готово   КАК Требуется,
		|			СтруктураЗаказа.РаспределеноИзЗапасов 
		|				+ СтруктураЗаказа.РаспределеноИзЗапасовОбособленно
		|				+ СтруктураЗаказа.Готово   КАК Распределено
		|		ИЗ
		|			РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|		ГДЕ
		|			&УсловиеОтбора
		|			И СтруктураЗаказа.ВидСтроки В (
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление),
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано))
		|			И (СтруктураЗаказа.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|				ИЛИ НЕ &ПоказыватьПеремещения
		|					И (СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПеремещение
		|						ИЛИ СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказМатериаловВПроизводство))
		|			И ИСТИНА В(&УсловиеЭтоПолуфабрикат)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|			СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|			СтруктураЗаказа.Характеристика КАК Характеристика,
		|			0                              КАК Требуется,
		|			Резервы.РаспределеноИзЗапасов 
		|				+ Резервы.РаспределеноИзЗапасовОбособленно КАК Распределено
		|		ИЗ
		|			ВТЗаменаКлючНоменклатура КАК ЗаменаКлючНоменклатура
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК Резервы
		|			ПО ЗаменаКлючНоменклатура.Номенклатура = Резервы.Номенклатура
		|				И ЗаменаКлючНоменклатура.Характеристика = Резервы.Характеристика
		|				И ЗаменаКлючНоменклатура.Склад = Резервы.Склад
		|				И ЗаменаКлючНоменклатура.Назначение = Резервы.Назначение
		|				И ЗаменаКлючНоменклатура.ЗаказНаПроизводство = Резервы.ЗаказНаПроизводство
		|				И ЗаменаКлючНоменклатура.КлючНоменклатура = Резервы.КлючНоменклатура
		|				И ЗаменаКлючНоменклатура.КлючПартия = Резервы.КлючПартия
		|				И Резервы.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				И (Резервы.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|					ИЛИ Резервы.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПеремещение
		|					ИЛИ Резервы.ЗаказНаПоступление ССЫЛКА Документ.ЗаказМатериаловВПроизводство)
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|			ПО ЗаменаКлючНоменклатура.Номенклатура = СтруктураЗаказа.Номенклатура
		|				И ЗаменаКлючНоменклатура.Характеристика = СтруктураЗаказа.Характеристика
		|				И ЗаменаКлючНоменклатура.ЗаказНаПроизводство = СтруктураЗаказа.ЗаказНаПроизводство
		|				И ЗаменаКлючНоменклатура.КлючНоменклатураЗамена = СтруктураЗаказа.КлючНоменклатура
		|				И СтруктураЗаказа.ВидСтроки В(
		|					ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|				И НЕ СтруктураЗаказа.ДополнительнаяЗапись
		|		) КАК ВложенныйЗапрос2
		|
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос2.КлючПартия,
		|		ВложенныйЗапрос2.Номенклатура,
		|		ВложенныйЗапрос2.Характеристика
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(ВложенныйЗапрос2.Требуется) <> 0
		|	) КАК ВложенныйЗапрос";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаменаКлючНоменклатура", "ВТЗаменаКлючНоменклатура" + ЗаменаКлючейПостфикс);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТПроцентОбеспечения", "ВТПроцентОбеспечения" + Постфикс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроцентОбеспечения(Постфикс)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.КлючПартия КАК КлючПартия,
		|	МАКСИМУМ(ВложенныйЗапрос.Числитель) КАК Числитель,
		|	МАКСИМУМ(ВложенныйЗапрос.Знаменатель) КАК Знаменатель,
		|	СРЕДНЕЕ(ВложенныйЗапрос.Обеспечено)*100 КАК ОбеспеченоПроцент
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ПроцентОбеспечения.КлючПартия КАК КлючПартия,
		|		ВЫБОР
		|			КОГДА ПроцентОбеспечения.Обеспечено В 
		|				(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						Т.Обеспечено
		|					ИЗ
		|						ВТПроцентОбеспечения КАК Т
		|					ГДЕ
		|						Т.КлючПартия = ПроцентОбеспечения.КлючПартия
		|					УПОРЯДОЧИТЬ ПО
		|						Т.Обеспечено
		|				)
		|				ТОГДА ПроцентОбеспечения.Числитель
		|		КОНЕЦ КАК Числитель,
		|		ВЫБОР
		|			КОГДА ПроцентОбеспечения.Обеспечено В 
		|				(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						Т.Обеспечено
		|					ИЗ
		|						ВТПроцентОбеспечения КАК Т
		|					ГДЕ
		|						Т.КлючПартия = ПроцентОбеспечения.КлючПартия
		|					УПОРЯДОЧИТЬ ПО
		|						Т.Обеспечено
		|				)
		|				ТОГДА ПроцентОбеспечения.Знаменатель
		|		КОНЕЦ КАК Знаменатель,
		|		ПроцентОбеспечения.Обеспечено КАК Обеспечено
		|	ИЗ
		|		ВТПроцентОбеспечения КАК ПроцентОбеспечения
		|	) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.КлючПартия";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТПроцентОбеспечения", "ВТПроцентОбеспечения" + Постфикс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВыпускПартийОбеспечения(УсловиеОтбора)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия       КАК КлючПартия,
		|	СтруктураЗаказа.Номенклатура     КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика   КАК Характеристика,
		|	СтруктураЗаказа.КлючНоменклатура КАК КлючНоменклатура,
		|	СУММА(СтруктураЗаказа.Запланировано + СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) КАК Количество
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	&УсловиеОтбора
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.КлючНоменклатура
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Запланировано + СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) > 0
		|
		|ИТОГИ
		|	СУММА(Количество)
		|ПО
		|	КлючПартия,
		|	Номенклатура,
		|	Характеристика";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ДеревоВыпускаПартийОбеспечения(РезультатЗапроса)
	
	Результат = Новый ДеревоЗначений();
	Результат.Колонки.Добавить("КлючПартия", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("КлючНоменклатура", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Результат.Колонки.Добавить("Количество", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 3)));
	
	ВыборкаКлючПартия = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаКлючПартия.Следующий() Цикл
		ВыборкаНоменклатура = ВыборкаКлючПартия.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаНоменклатура.Следующий() Цикл
			ВыборкаХарактеристика = ВыборкаНоменклатура.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаХарактеристика.Следующий() Цикл
				СтрокаИтоги = Результат.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаИтоги, ВыборкаХарактеристика);
				
				Выборка = ВыборкаХарактеристика.Выбрать();
				Пока Выборка.Следующий() Цикл
					СтрокаДетали = СтрокаИтоги.Строки.Добавить();
					ЗаполнитьЗначенияСвойств(СтрокаДетали, Выборка);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаПроцентОбеспеченияЭтаповВТ(УсловиеОтбора, Постфикс, ЗаменаКлючейПостфикс)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.КлючПартия КАК КлючПартия,
		|	ВложенныйЗапрос.Этап КАК Этап,
		|	ВложенныйЗапрос.Распределено КАК Числитель,
		|	ВложенныйЗапрос.Требуется КАК Знаменатель,
		|	ВложенныйЗапрос.Распределено/ВложенныйЗапрос.Требуется КАК Обеспечено
		|ПОМЕСТИТЬ ВТПроцентОбеспеченияЭтапов
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ВложенныйЗапрос2.КлючПартия          КАК КлючПартия,
		|		ВложенныйЗапрос2.Этап                КАК Этап,
		|		ВложенныйЗапрос2.Номенклатура        КАК Номенклатура,
		|		ВложенныйЗапрос2.Характеристика      КАК Характеристика,
		|		СУММА(ВложенныйЗапрос2.Требуется)    КАК Требуется,
		|		СУММА(ВложенныйЗапрос2.Распределено) КАК Распределено
		|	ИЗ
		|		(
		|		ВЫБРАТЬ
		|			СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|			СтруктураЗаказа.Этап           КАК Этап,
		|			СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|			СтруктураЗаказа.Характеристика КАК Характеристика,
		|			СтруктураЗаказа.Требуется
		|				+ СтруктураЗаказа.Готово   КАК Требуется,
		|			СтруктураЗаказа.РаспределеноИзЗапасов 
		|				+ СтруктураЗаказа.РаспределеноИзЗапасовОбособленно
		|				+ СтруктураЗаказа.Готово   КАК Распределено
		|		ИЗ
		|			РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|		ГДЕ
		|			&УсловиеОтбора
		|			И СтруктураЗаказа.ВидСтроки В (
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление),
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано))
		|			И (СтруктураЗаказа.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|				ИЛИ НЕ &ПоказыватьПеремещения
		|					И (СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПеремещение
		|						ИЛИ СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказМатериаловВПроизводство))
		|			И ИСТИНА В(&УсловиеЭтоПолуфабрикат)
		|
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			СтруктураЗаказа.КлючПартия     КАК КлючПартия,
		|			СтруктураЗаказа.Этап           КАК Этап,
		|			СтруктураЗаказа.Номенклатура   КАК Номенклатура,
		|			СтруктураЗаказа.Характеристика КАК Характеристика,
		|			0                              КАК Требуется,
		|			Резервы.РаспределеноИзЗапасов 
		|				+ Резервы.РаспределеноИзЗапасовОбособленно КАК Распределено
		|		ИЗ
		|			ВТЗаменаКлючНоменклатура КАК ЗаменаКлючНоменклатура
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК Резервы
		|			ПО ЗаменаКлючНоменклатура.Номенклатура = Резервы.Номенклатура
		|				И ЗаменаКлючНоменклатура.Характеристика = Резервы.Характеристика
		|				И ЗаменаКлючНоменклатура.Склад = Резервы.Склад
		|				И ЗаменаКлючНоменклатура.Назначение = Резервы.Назначение
		|				И ЗаменаКлючНоменклатура.ЗаказНаПроизводство = Резервы.ЗаказНаПроизводство
		|				И ЗаменаКлючНоменклатура.КлючНоменклатура = Резервы.КлючНоменклатура
		|				И ЗаменаКлючНоменклатура.КлючПартия = Резервы.КлючПартия
		|				И Резервы.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				И (Резервы.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
		|					ИЛИ Резервы.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПеремещение
		|					ИЛИ Резервы.ЗаказНаПоступление ССЫЛКА Документ.ЗаказМатериаловВПроизводство)
		|		
		|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|			ПО ЗаменаКлючНоменклатура.Номенклатура = СтруктураЗаказа.Номенклатура
		|				И ЗаменаКлючНоменклатура.Характеристика = СтруктураЗаказа.Характеристика
		|				И ЗаменаКлючНоменклатура.ЗаказНаПроизводство = СтруктураЗаказа.ЗаказНаПроизводство
		|				И ЗаменаКлючНоменклатура.КлючНоменклатураЗамена = СтруктураЗаказа.КлючНоменклатура
		|				И СтруктураЗаказа.ВидСтроки В(
		|					ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|				И НЕ СтруктураЗаказа.ДополнительнаяЗапись
		|		) КАК ВложенныйЗапрос2
		|
		|	СГРУППИРОВАТЬ ПО
		|		ВложенныйЗапрос2.КлючПартия,
		|		ВложенныйЗапрос2.Этап,
		|		ВложенныйЗапрос2.Номенклатура,
		|		ВложенныйЗапрос2.Характеристика
		|	
		|	ИМЕЮЩИЕ
		|		СУММА(ВложенныйЗапрос2.Требуется) <> 0
		|	) КАК ВложенныйЗапрос";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаменаКлючНоменклатура", "ВТЗаменаКлючНоменклатура" + ЗаменаКлючейПостфикс);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТПроцентОбеспеченияЭтапов", "ВТПроцентОбеспеченияЭтапов" + Постфикс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПроцентОбеспеченияЭтапов(Постфикс)
	
	ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВложенныйЗапрос.КлючПартия КАК Партия,
		|	ВложенныйЗапрос.Этап КАК ЭтапСсылка,
		|	МАКСИМУМ(ВложенныйЗапрос.Числитель) КАК Числитель,
		|	МАКСИМУМ(ВложенныйЗапрос.Знаменатель) КАК Знаменатель,
		|	СРЕДНЕЕ(ВложенныйЗапрос.Обеспечено)*100 КАК ОбеспеченоПроцент
		|ИЗ
		|	(
		|	ВЫБРАТЬ
		|		ПроцентОбеспечения.КлючПартия КАК КлючПартия,
		|		ПроцентОбеспечения.Этап КАК Этап,
		|		ВЫБОР
		|			КОГДА ПроцентОбеспечения.Обеспечено В 
		|				(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						Т.Обеспечено
		|					ИЗ
		|						ВТПроцентОбеспеченияЭтапов КАК Т
		|					ГДЕ
		|						Т.КлючПартия = ПроцентОбеспечения.КлючПартия
		|						И Т.Этап = ПроцентОбеспечения.Этап
		|					УПОРЯДОЧИТЬ ПО
		|						Т.Обеспечено
		|				)
		|				ТОГДА ПроцентОбеспечения.Числитель
		|		КОНЕЦ КАК Числитель,
		|		ВЫБОР
		|			КОГДА ПроцентОбеспечения.Обеспечено В 
		|				(
		|					ВЫБРАТЬ ПЕРВЫЕ 1
		|						Т.Обеспечено
		|					ИЗ
		|						ВТПроцентОбеспеченияЭтапов КАК Т
		|					ГДЕ
		|						Т.КлючПартия = ПроцентОбеспечения.КлючПартия
		|						И Т.Этап = ПроцентОбеспечения.Этап
		|					УПОРЯДОЧИТЬ ПО
		|						Т.Обеспечено
		|				)
		|				ТОГДА ПроцентОбеспечения.Знаменатель
		|		КОНЕЦ КАК Знаменатель,
		|		ПроцентОбеспечения.Обеспечено КАК Обеспечено
		|	ИЗ
		|		ВТПроцентОбеспеченияЭтапов КАК ПроцентОбеспечения
		|	) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.КлючПартия,
		|	ВложенныйЗапрос.Этап";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТПроцентОбеспеченияЭтапов", "ВТПроцентОбеспеченияЭтапов" + Постфикс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаПотребность()
	
	Возврат
		"ВЫБРАТЬ
		|	Потребность.Номенклатура                                    КАК Номенклатура,
		|	Потребность.Номенклатура.ЕдиницаИзмерения                   КАК ЕдиницаИзмерения,
		|	Потребность.Номенклатура.Представление                      КАК НоменклатураПредставление,
		|	Потребность.Номенклатура.ТипНоменклатуры                    КАК ТипНоменклатуры,
		|	ЕСТЬNULL(Потребность.Номенклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук), ЛОЖЬ) КАК ШтучнаяНоменклатура,
		|	Потребность.Характеристика                                  КАК Характеристика,
		|	Потребность.Характеристика.Представление                    КАК ХарактеристикаПредставление,
		|	Потребность.Склад                                           КАК Склад,
		|	Потребность.Назначение                                      КАК Назначение,
		|	Потребность.КлючПартия                                      КАК КлючПартия,
		|	Потребность.КлючНоменклатура                                КАК КлючНоменклатура,
		|	Потребность.Партия                                          КАК Партия,
		|	Потребность.ЭтапСсылка                                      КАК ЭтапСсылка,
		|	Потребность.Требуется                                       КАК Требуется,
		|	Потребность.ЖелаемаяДата                                    КАК ЖелаемаяДата,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	НЕ ИСТИНА В (&ТекстПотребностьЭтоПолуфабрикат)              КАК ЭтоМатериал
		|ИЗ
		|	ВТПотребность КАК Потребность
		|
		|УПОРЯДОЧИТЬ ПО
		|	ЭтоМатериал,
		|	КлючПартия,
		|	Номенклатура,
		|	Характеристика
		|АВТОУПОРЯДОЧИВАНИЕ";
	
КонецФункции

Функция ТекстЗапросаОбеспечениеВТ()
	
	Возврат
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Т.КлючПартия КАК КлючПартия
		|ПОМЕСТИТЬ ВТПартииОбеспечение
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК Т
		|ГДЕ
		|	(Т.Номенклатура, Т.Характеристика, Т.Склад, Т.Назначение, Т.ЗаказНаПроизводство, Т.КлючНоменклатура) В(
		|		ВЫБРАТЬ
		|			Потребность.Номенклатура        КАК Номенклатура,
		|			Потребность.Характеристика      КАК Характеристика,
		|			Потребность.Склад               КАК Склад,
		|			Потребность.Назначение          КАК Назначение,
		|			Потребность.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|			Потребность.КлючНоменклатура    КАК КлючНоменклатура
		|		ИЗ
		|			ВТПотребность КАК Потребность
		|		
		|		ОБЪЕДИНИТЬ ВСЕ
		|		
		|		ВЫБРАТЬ
		|			ЗаменаКлючей.Номенклатура        КАК Номенклатура,
		|			ЗаменаКлючей.Характеристика      КАК Характеристика,
		|			ЗаменаКлючей.Склад               КАК Склад,
		|			ЗаменаКлючей.Назначение          КАК Назначение,
		|			ЗаменаКлючей.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|			ЗаменаКлючей.КлючНоменклатура    КАК КлючНоменклатура
		|		ИЗ
		|			ВТЗаменаКлючНоменклатура КАК ЗаменаКлючей)
		|	И Т.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия             КАК КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура       КАК КлючНоменклатура,
		|	СтруктураЗаказа.Номенклатура           КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика         КАК Характеристика,
		|	СтруктураЗаказа.Склад                  КАК Склад,
		|	СтруктураЗаказа.Назначение             КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПоступление     КАК ЗаказНаПоступление,
		|	СтруктураЗаказа.ЗаказНаПроизводство    КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.ВидСтроки              КАК ВидСтроки,
		|	МАКСИМУМ(ВЫБОР
		|			КОГДА СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|				ТОГДА ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)
		|			ИНАЧЕ СтруктураЗаказа.Спецификация
		|		КОНЕЦ)                             КАК Спецификация,
		|	СУММА(СтруктураЗаказа.Запланировано) КАК Запланировано,
		|	СУММА(СтруктураЗаказа.РаспределеноИзПартий + СтруктураЗаказа.РаспределеноИзПартийОбособленно) КАК Запущено,
		|	СУММА(СтруктураЗаказа.РаспределеноИзЗапасов + СтруктураЗаказа.РаспределеноИзЗапасовОбособленно + СтруктураЗаказа.Готово) КАК Распределено,
		|	СУММА(СтруктураЗаказа.РаспределеноИзЗапасовОбособленно) КАК РаспределеноОбособленныхЗапасов,
		|	СУММА(СтруктураЗаказа.РаспределеноИзЗапасов) КАК РаспределеноСвободныхЗапасов
		|ПОМЕСТИТЬ ВТСтруктураЗаказаОбеспечение
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|	
		|ГДЕ
		|	СтруктураЗаказа.КлючПартия В(
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			ВТПартииОбеспечение КАК Т)
		|	И СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	СтруктураЗаказа.ВидСтроки,
		|	СтруктураЗаказа.ЗаказНаПоступление
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Запланировано) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзЗапасов) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзЗапасовОбособленно) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзПартий) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.РаспределеноИзПартийОбособленно) <> 0
		|		ИЛИ СУММА(СтруктураЗаказа.Готово) <> 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия           КАК КлючПартия,
		|	ЕСТЬNULL(ЗаменаКлючей.КлючНоменклатураЗамена, СтруктураЗаказа.КлючНоменклатура) КАК КлючНоменклатура,
		|	СтруктураЗаказа.Номенклатура         КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика       КАК Характеристика,
		|	СтруктураЗаказа.Склад                КАК Склад,
		|	СтруктураЗаказа.Назначение           КАК Назначение,
		|	
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ СтруктураЗаказа.Спецификация
		|	КОНЕЦ                                КАК Спецификация,
		|
		|	СтруктураЗаказа.ЗаказНаПоступление   КАК ЗаказНаПоступление,
		|
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).ПартияПроизводства
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|	КОНЕЦ                                КАК ПартияПроизводства,
		|	
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				И (
		|					СтруктураЗаказа.РаспределеноОбособленныхЗапасов <> 0
		|						И СтруктураЗаказа.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|					ИЛИ СтруктураЗаказа.РаспределеноСвободныхЗапасов <> 0
		|						И СтруктураЗаказа.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|				)
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|							И ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение <> &Заказ
		|						ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение
		|					КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПроизводство2_2
		|							И ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЗаказНаПроизводство2_2) <> &Заказ
		|						ТОГДА СтруктураЗаказа.ЗаказНаПоступление
		|					ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
		|	КОНЕЦ КАК ЗаказНаЗапуск,
		|
		|	СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(
		|		Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката) КАК ЭтоПроизводство,
		|
		|	СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(
		|		Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение) КАК ЭтоПеремещение,
		|
		|	СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)) КАК ЭтоРезерв,
		|
		|	ЕСТЬNULL(КэшНСИСтруктурыЗаказа.ТипОбеспечения,
		|		ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка)) КАК ТипОбеспечения,
		|
		|	СУММА(СтруктураЗаказа.Запланировано) КАК Запланировано,
		|	СУММА(СтруктураЗаказа.Запущено)      КАК Запущено,
		|	СУММА(СтруктураЗаказа.Распределено)  КАК Распределено,
		|
		|	МИНИМУМ(
		|		ВЫБОР
		|			КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|				ТОГДА ЕСТЬNULL(НормативныйГрафикПартийЭтапов.Начало, ДАТАВРЕМЯ(1,1,1))
		|			КОГДА СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				ТОГДА ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ ЕСТЬNULL(НормативныйГрафик.Начало, ДАТАВРЕМЯ(1,1,1))
		|		КОНЕЦ)                           КАК Начало,
		|
		|	МАКСИМУМ(
		|		ВЫБОР
		|			КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|				ТОГДА ЕСТЬNULL(НормативныйГрафикПартийЭтапов.Окончание, ДАТАВРЕМЯ(1,1,1))
		|			КОГДА СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				ТОГДА ДАТАВРЕМЯ(1,1,1)
		|			ИНАЧЕ ЕСТЬNULL(НормативныйГрафик.Окончание, ДАТАВРЕМЯ(1,1,1))
		|		КОНЕЦ)                           КАК Окончание
		|ПОМЕСТИТЬ ВТОбеспечение
		|ИЗ
		|	ВТСтруктураЗаказаОбеспечение КАК СтруктураЗаказа
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафикЭтапов
		|	ПО СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|		И СтруктураЗаказа.ЗаказНаПоступление = НормативныйГрафикЭтапов.Этап
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафикПартийЭтапов
		|	ПО НормативныйГрафикЭтапов.ЗаказНаПроизводство = НормативныйГрафикПартийЭтапов.ЗаказНаПроизводство
		|		И НормативныйГрафикЭтапов.КлючПартия = НормативныйГрафикПартийЭтапов.КлючПартия
		|		И НормативныйГрафикПартийЭтапов.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК НормативныйГрафик
		|	ПО СтруктураЗаказа.ЗаказНаПроизводство = НормативныйГрафик.ЗаказНаПроизводство
		|		И СтруктураЗаказа.КлючПартия = НормативныйГрафик.КлючПартия
		|		И НормативныйГрафик.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаменаКлючНоменклатура КАК ЗаменаКлючей
		|	ПО СтруктураЗаказа.Номенклатура = ЗаменаКлючей.Номенклатура
		|		И СтруктураЗаказа.Характеристика = ЗаменаКлючей.Характеристика
		|		И СтруктураЗаказа.Склад = ЗаменаКлючей.Склад
		|		И СтруктураЗаказа.Назначение = ЗаменаКлючей.Назначение
		|		И СтруктураЗаказа.ЗаказНаПроизводство = ЗаменаКлючей.ЗаказНаПроизводство
		|		И СтруктураЗаказа.КлючНоменклатура = ЗаменаКлючей.КлючНоменклатура
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КэшНСИСтруктурыЗаказа КАК КэшНСИСтруктурыЗаказа
		|	ПО СтруктураЗаказа.Номенклатура = КэшНСИСтруктурыЗаказа.Номенклатура
		|		И СтруктураЗаказа.Характеристика = КэшНСИСтруктурыЗаказа.Характеристика
		|		И СтруктураЗаказа.Склад = КэшНСИСтруктурыЗаказа.Склад
		|		И СтруктураЗаказа.Назначение = КэшНСИСтруктурыЗаказа.Назначение
		|		И СтруктураЗаказа.ЗаказНаПроизводство = КэшНСИСтруктурыЗаказа.ЗаказНаПроизводство
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	ЕСТЬNULL(ЗаменаКлючей.КлючНоменклатураЗамена, СтруктураЗаказа.КлючНоменклатура),
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Спецификация
		|		ИНАЧЕ СтруктураЗаказа.Спецификация
		|	КОНЕЦ,
		|	СтруктураЗаказа.ЗаказНаПоступление,
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|			ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).ПартияПроизводства
		|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.ПартииПроизводства.ПустаяСсылка)
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|				И (
		|					СтруктураЗаказа.РаспределеноОбособленныхЗапасов <> 0
		|						И СтруктураЗаказа.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|					ИЛИ СтруктураЗаказа.РаспределеноСвободныхЗапасов <> 0
		|						И СтруктураЗаказа.Назначение = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|				)
		|			ТОГДА
		|				ВЫБОР
		|					КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|							И ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение <> &Заказ
		|						ТОГДА ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение
		|					КОГДА СтруктураЗаказа.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПроизводство2_2
		|							И ВЫРАЗИТЬ(СтруктураЗаказа.ЗаказНаПоступление КАК Документ.ЗаказНаПроизводство2_2) <> &Заказ
		|						ТОГДА СтруктураЗаказа.ЗаказНаПоступление
		|					ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
		|				КОНЕЦ
		|		ИНАЧЕ ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
		|	КОНЕЦ,
		|	СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката),
		|	СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение),
		|	СтруктураЗаказа.ВидСтроки В(
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано),
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)),
		|	ЕСТЬNULL(КэшНСИСтруктурыЗаказа.ТипОбеспечения, ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.ПустаяСсылка))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.КлючПартия                    КАК КлючПартия,
		|	СтруктураЗаказа.Номенклатура                  КАК Номенклатура,
		|	СтруктураЗаказа.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	СУММА(СтруктураЗаказа.Запланировано)          КАК Запланировано
		|ПОМЕСТИТЬ ВТРазмерПартий
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	&ПоказыватьЭтапы
		|	И (СтруктураЗаказа.Номенклатура, СтруктураЗаказа.Характеристика, СтруктураЗаказа.КлючПартия) В 
		|		(ВЫБРАТЬ
		|			Обеспечение.Номенклатура,
		|			Обеспечение.Характеристика,
		|			Обеспечение.КлючПартия
		|		ИЗ
		|			ВТОбеспечение КАК Обеспечение)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Номенклатура.ЕдиницаИзмерения
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Запланировано) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия";
		
КонецФункции

Функция ТекстЗапросаЗаменаКлючНоменклатураВТ(УсловиеОтбора, Постфикс)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура                КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика              КАК Характеристика,
		|	СтруктураЗаказа.Склад                       КАК Склад,
		|	СтруктураЗаказа.Назначение                  КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство         КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура            КАК КлючНоменклатура,
		|	СтруктураЗаказа.КлючПартия                  КАК КлючПартия,
		|	СтруктураЗаказа.КлючСвязиПеремещение        КАК КлючНоменклатураЗамена
		|ПОМЕСТИТЬ ВТЗаменаКлючНоменклатура
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|ГДЕ
		|	НЕ &ПоказыватьПеремещения
		|	И (СтруктураЗаказа.Номенклатура, СтруктураЗаказа.Характеристика, СтруктураЗаказа.ЗаказНаПроизводство, СтруктураЗаказа.КлючСвязиПеремещение) В
		|		(&УсловиеОтбора)
		|	И ИСТИНА В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			РегистрСведений.СтруктураЗаказа КАК Перемещения
		|		ГДЕ
		|			Перемещения.КлючПартия = СтруктураЗаказа.КлючПартия
		|			И Перемещения.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))
		|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	СтруктураЗаказа.КлючСвязиПеремещение
		|ИМЕЮЩИЕ
		|	СУММА(СтруктураЗаказа.Требуется) <> 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОтбора", УсловиеОтбора);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТЗаменаКлючНоменклатура", "ВТЗаменаКлючНоменклатура" + Постфикс);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОбеспечение()
	
	Возврат 
		"ВЫБРАТЬ
		|	Обеспечение.КлючПартия         КАК КлючПартия,
		|	Обеспечение.КлючНоменклатура   КАК КлючНоменклатура,
		|	Обеспечение.Спецификация       КАК Спецификация,
		|	Обеспечение.ЗаказНаПоступление КАК ЗаказНаПоступление,
		|	Обеспечение.ПартияПроизводства КАК ПартияПроизводства,
		|	Обеспечение.ЗаказНаЗапуск      КАК ЗаказНаЗапуск,
		|	Обеспечение.ЗаказНаЗапуск <> ЗНАЧЕНИЕ(Документ.ЗаказНаПроизводство2_2.ПустаяСсылка)
		|		И Обеспечение.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|		И НЕ ИСТИНА В (
		|			ВЫБРАТЬ ПЕРВЫЕ 1 
		|				ИСТИНА
		|			ИЗ
		|				Документ.ЗаказНаПроизводство2_2.Продукция КАК Т
		|			ГДЕ
		|				Т.Ссылка = Обеспечение.ЗаказНаЗапуск
		|				И Т.Номенклатура = Обеспечение.Номенклатура
		|				И Т.Характеристика = Обеспечение.Характеристика
		|				И ВЫБОР 
		|					КОГДА Т.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|							ИЛИ Т.СписатьНаРасходы
		|						ТОГДА Т.Подразделение
		|					ИНАЧЕ Т.Склад
		|				КОНЕЦ = Обеспечение.Склад
		|				И ВЫБОР
		|					КОГДА Т.Ссылка.ТипПроизводственногоПроцесса = ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.БезСпецификаций)
		|							И НЕ Т.СписатьНаРасходы
		|						ТОГДА Т.Ссылка.НазначениеПродукция
		|					ИНАЧЕ Т.Назначение
		|				КОНЕЦ = Обеспечение.Назначение
		|				И НЕ Т.Отменено)   КАК РасшифровкаЗапускаЭтапами,
		|	Обеспечение.ЭтоПроизводство    КАК ЭтоПроизводство,
		|	Обеспечение.ЭтоПеремещение     КАК ЭтоПеремещение,
		|	Обеспечение.ЭтоРезерв          КАК ЭтоРезерв,
		|	Обеспечение.ТипОбеспечения     КАК ТипОбеспечения,
		|	Обеспечение.Запущено           КАК Запущено,
		|	Обеспечение.Распределено       КАК Распределено,
		|	Обеспечение.Начало             КАК Начало,
		|	Обеспечение.Окончание          КАК Окончание,
		|	Обеспечение.Склад              КАК Склад
		|ИЗ
		|	ВТОбеспечение КАК Обеспечение";
	
КонецФункции

Функция ТекстЗапросаЭтапы(ИмяТаблицыКлючи, ИмяТаблицыРазмерПартий)
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	График.КлючПартия                                           КАК Партия,
		|	График.КлючПартия                                           КАК КлючПартия,
		|	Этапы.Владелец                                              КАК Спецификация,
		|	График.Этап                                                 КАК ЭтапСсылка,
		|	Этапы.Наименование                                          КАК НаименованиеЭтапа,
		|	Этапы.Подразделение                                         КАК Подразделение,
		|	Этапы.НомерЭтапа                                            КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа                                  КАК НомерСледующегоЭтапа,
		|	График.Начало                                               КАК Начало,
		|	График.Окончание                                            КАК Окончание,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	ЕСТЬNULL(РазмерПартий.Номенклатура, НЕОПРЕДЕЛЕНО)           КАК Номенклатура,
		|	ЕСТЬNULL(РазмерПартий.ЕдиницаИзмерения, НЕОПРЕДЕЛЕНО)       КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(РазмерПартий.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук), ЛОЖЬ) КАК ШтучнаяНоменклатура,
		|	ЕСТЬNULL(РазмерПартий.Запланировано, 0)                     КАК Требуется,
		|	0                                                           КАК Запущено,
		|	0                                                           КАК Готово,
		|	Этапы.ПроизводствоНаСтороне                                 КАК ПроизводствоНаСтороне
		|ИЗ
		|	РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК График
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ЭтапыПроизводства КАК Этапы
		|	ПО График.Этап = Этапы.Ссылка
		|
		|	ЛЕВОЕ СОЕДИНЕНИЕ &ИмяТаблицыРазмерПартий КАК РазмерПартий
		|	ПО График.КлючПартия = РазмерПартий.КлючПартия
		|
		|ГДЕ
		|	График.ЗаказНаПроизводство = &Заказ
		|	И График.КлючПартия В (
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			&ИмяТаблицыКлючи КАК Т)
		|	И График.Этап ССЫЛКА Справочник.ЭтапыПроизводства
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	График.КлючПартия                                           КАК Партия,
		|	График.КлючПартия                                           КАК КлючПартия,
		|	Этапы.Спецификация                                          КАК Спецификация,
		|	Этапы.Ссылка                                                КАК ЭтапСсылка,
		|	Этапы.НаименованиеЭтапа                                     КАК НаименованиеЭтапа,
		|	Этапы.Подразделение                                         КАК Подразделение,
		|	Этапы.НомерЭтапа                                            КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа                                  КАК НомерСледующегоЭтапа,
		|	График.Начало                                               КАК Начало,
		|	График.Окончание                                            КАК Окончание,
		|	ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка) КАК ТипПроцесса,
		|	НЕОПРЕДЕЛЕНО                                                КАК Номенклатура,
		|	Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	ЕСТЬNULL(Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ЕдиницаИзмерения.ТипИзмеряемойВеличины = ЗНАЧЕНИЕ(Перечисление.ТипыИзмеряемыхВеличин.КоличествоШтук), ЛОЖЬ) КАК ШтучнаяНоменклатура,
		|	Этапы.КоличествоУпаковокПлан * ЕСТЬNULL(&КоэффициентУпаковкиПлан, 1)
		|		- Этапы.КоличествоУпаковокОтменено * ЕСТЬNULL(&КоэффициентУпаковкиОтменено, 1) КАК Требуется,
		|	ВЫБОР
		|		КОГДА Этапы.Статус В (
		|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.КВыполнению),
		|					ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат))
		|				И НЕ Этапы.ПроизводствоНаСтороне
		|			ТОГДА Этапы.КоличествоУпаковокПлан * ЕСТЬNULL(&КоэффициентУпаковкиПлан, 1)
		|					- Этапы.КоличествоУпаковокОтменено * ЕСТЬNULL(&КоэффициентУпаковкиОтменено, 1)
		|					- Этапы.КоличествоУпаковокФакт * ЕСТЬNULL(&КоэффициентУпаковкиФакт, 1)
		|		ИНАЧЕ 0
		|	КОНЕЦ                                                       КАК Запущено,
		|	ВЫБОР
		|		КОГДА Этапы.ПроизводствоНаСтороне
		|			ТОГДА 0
		|		ИНАЧЕ Этапы.КоличествоУпаковокФакт * ЕСТЬNULL(&КоэффициентУпаковкиФакт, 1)
		|	КОНЕЦ                                                       КАК Готово,
		|	Этапы.ПроизводствоНаСтороне                                 КАК ПроизводствоНаСтороне
		|ИЗ
		|	РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК График
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Этапы
		|	ПО График.Этап = Этапы.Ссылка
		|
		|ГДЕ
		|	График.ЗаказНаПроизводство = &Заказ
		|	И График.КлючПартия В (
		|		ВЫБРАТЬ
		|			Т.КлючПартия
		|		ИЗ
		|			&ИмяТаблицыКлючи КАК Т)
		|	И График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2
		|	И Этапы.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	Партия,
		|	НомерЭтапа,
		|	НомерСледующегоЭтапа";
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиПлан",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаПлан",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
			
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиФакт",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаФакт",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиОтменено",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаОтменено",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяТаблицыКлючи", ИмяТаблицыКлючи);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ИмяТаблицыРазмерПартий", ИмяТаблицыРазмерПартий);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаОстаткиПоДругимНазначениям()
	
	Возврат
	"ВЫБРАТЬ
	|	Таблица.Номенклатура                                         КАК Номенклатура,
	|	Таблица.Характеристика                                       КАК Характеристика,
	|	Таблица.Склад                                                КАК Склад,
	|	Таблица.Назначение                                           КАК Назначение,
	|	МАКСИМУМ(Таблица.ИндексКартинкиОсталосьСвободныйИлиНеНужный) КАК ИндексКартинкиОсталосьСвободныйИлиНеНужный,
	|	МАКСИМУМ(Таблица.ИндексКартинкиОсталосьПоДругимНазначением)  КАК ИндексКартинкиОсталосьПоДругимНазначением,
	|	МАКСИМУМ(Таблица.ИндексКартинкиОсталосьНаДругомСкладе)       КАК ИндексКартинкиОсталосьНаДругомСкладе,
	|	МАКСИМУМ(Таблица.ИндексКартинкиОсталось)                     КАК ИндексКартинкиОсталось
	|ИЗ
	|	(ВЫБРАТЬ
	|		Обеспечение.Номенклатура   КАК Номенклатура,
	|		Обеспечение.Характеристика КАК Характеристика,
	|		Обеспечение.Склад          КАК Склад,
	|		Обеспечение.Назначение     КАК Назначение,
	|		4                          КАК ИндексКартинкиОсталосьСвободныйИлиНеНужный,
	|		0                          КАК ИндексКартинкиОсталосьПоДругимНазначением,
	|		0                          КАК ИндексКартинкиОсталосьНаДругомСкладе,
	|		4                          КАК ИндексКартинкиОсталось
	|	ИЗ
	|		ВТОбеспечение КАК Обеспечение
	|	ГДЕ
	|		Обеспечение.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.РаспределениеЗапасов КАК Остатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|					ПО СтруктураЗаказа.Номенклатура   = Остатки.Номенклатура
	|					 И СтруктураЗаказа.Характеристика = Остатки.Характеристика
	|					 И СтруктураЗаказа.Склад          = Остатки.Склад
	|					 И СтруктураЗаказа.Назначение     = Остатки.Назначение
	|					 И СтруктураЗаказа.ВидСтроки      = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
	|			ГДЕ
	|				Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|				И Остатки.Номенклатура   = Обеспечение.Номенклатура
	|				И Остатки.Характеристика = Обеспечение.Характеристика
	|				И Остатки.Склад          = Обеспечение.Склад
	|				И (Остатки.Назначение    = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				   ИЛИ НЕ Остатки.Назначение В (
	|									Обеспечение.Назначение))
	|			СГРУППИРОВАТЬ ПО
	|				Остатки.Назначение
	|			ИМЕЮЩИЕ
	|				МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.Требуется, 0)) > 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Обеспечение.Номенклатура   КАК Номенклатура,
	|		Обеспечение.Характеристика КАК Характеристика,
	|		Обеспечение.Склад          КАК Склад,
	|		Обеспечение.Назначение     КАК Назначение,
	|		0                          КАК ИндексКартинкиОсталосьСвободныйИлиНеНужный,
	|		2                          КАК ИндексКартинкиОсталосьПоДругимНазначением,
	|		0                          КАК ИндексКартинкиОсталосьНаДругомСкладе,
	|		2                          КАК ИндексКартинкиОсталось
	|	ИЗ
	|		ВТОбеспечение КАК Обеспечение
	|	ГДЕ
	|		Обеспечение.Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.РаспределениеЗапасов КАК Остатки
	|					ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|					ПО СтруктураЗаказа.Номенклатура   = Остатки.Номенклатура
	|					 И СтруктураЗаказа.Характеристика = Остатки.Характеристика
	|					 И СтруктураЗаказа.Склад          = Остатки.Склад
	|					 И СтруктураЗаказа.Назначение     = Остатки.Назначение
	|					 И СтруктураЗаказа.ВидСтроки      = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
	|			ГДЕ
	|				Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|				И Остатки.Номенклатура   = Обеспечение.Номенклатура
	|				И Остатки.Характеристика = Обеспечение.Характеристика
	|				И Остатки.Склад          = Обеспечение.Склад
	|				И НЕ Остатки.Назначение В (
	|								ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка),
	|								Обеспечение.Назначение)
	|			СГРУППИРОВАТЬ ПО
	|				Остатки.Назначение
	|			ИМЕЮЩИЕ
	|				МАКСИМУМ(Остатки.Запас) > 0
	|				И МАКСИМУМ(Остатки.Запас) - МАКСИМУМ(Остатки.Излишек) + СУММА(ЕСТЬNULL(СтруктураЗаказа.Требуется, 0)) > 0)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Обеспечение.Номенклатура   КАК Номенклатура,
	|		Обеспечение.Характеристика КАК Характеристика,
	|		Обеспечение.Склад          КАК Склад,
	|		Обеспечение.Назначение     КАК Назначение,
	|		0                          КАК ИндексКартинкиОсталосьСвободныйИлиНеНужный,
	|		0                          КАК ИндексКартинкиОсталосьПоДругимНазначением,
	|		1                          КАК ИндексКартинкиОсталосьНаДругомСкладе,
	|		1                          КАК ИндексКартинкиОсталось
	|	ИЗ
	|		ВТОбеспечение КАК Обеспечение
	|	ГДЕ
	|		ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.РаспределениеЗапасов КАК Остатки
	|			ГДЕ
	|				Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|				И Остатки.Номенклатура   = Обеспечение.Номенклатура
	|				И Остатки.Характеристика = Обеспечение.Характеристика
	|				И Остатки.Склад         <> Обеспечение.Склад
	|				И Остатки.Назначение     = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И Остатки.Свободно > 0
	|				И НЕ ИСТИНА В (
	|						ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|						ГДЕ
	|							СтруктураЗаказа.КлючПартия       = Обеспечение.КлючПартия
	|							И СтруктураЗаказа.Номенклатура   = Обеспечение.Номенклатура
	|							И СтруктураЗаказа.Характеристика = Обеспечение.Характеристика
	|							И СтруктураЗаказа.Склад          = Остатки.Склад
	|							И СтруктураЗаказа.ВидСтроки     <> ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение)
	|							И ИСТИНА В (
	|								ВЫБРАТЬ ПЕРВЫЕ 1
	|									ИСТИНА
	|								ИЗ
	|									РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|								ГДЕ
	|									СтруктураЗаказа.КлючПартия       = Обеспечение.КлючПартия
	|									И СтруктураЗаказа.Номенклатура   = Обеспечение.Номенклатура
	|									И СтруктураЗаказа.Характеристика = Обеспечение.Характеристика
	|									И СтруктураЗаказа.Склад          = Обеспечение.Склад
	|									И СтруктураЗаказа.ВидСтроки      = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))))
	|		И НЕ ИСТИНА В (
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|				ГДЕ
	|					СтруктураЗаказа.Номенклатура       = Обеспечение.Номенклатура
	|					И СтруктураЗаказа.Характеристика   = Обеспечение.Характеристика
	|					И СтруктураЗаказа.Склад            = Обеспечение.Склад
	|					И СтруктураЗаказа.КлючНоменклатура = Обеспечение.КлючНоменклатура
	|					И СтруктураЗаказа.КлючПартия      <> Обеспечение.КлючПартия
	|					И ИСТИНА В (
	|						ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказаПеремещение
	|						ГДЕ
	|							СтруктураЗаказаПеремещение.Номенклатура      = Обеспечение.Номенклатура
	|							И СтруктураЗаказаПеремещение.Характеристика  = Обеспечение.Характеристика
	|							И СтруктураЗаказаПеремещение.Склад          <> Обеспечение.Склад
	|							И СтруктураЗаказаПеремещение.КлючПартия      = СтруктураЗаказа.КлючПартия
	|							И СтруктураЗаказаПеремещение.ВидСтроки       = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение)))
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Обеспечение.Номенклатура   КАК Номенклатура,
	|		Обеспечение.Характеристика КАК Характеристика,
	|		Обеспечение.Склад          КАК Склад,
	|		Обеспечение.Назначение     КАК Назначение,
	|		0                          КАК ИндексКартинкиОсталосьСвободныйИлиНеНужный,
	|		0                          КАК ИндексКартинкиОсталосьПоДругимНазначением,
	|		1                          КАК ИндексКартинкиОсталосьНаДругомСкладе,
	|		1                          КАК ИндексКартинкиОсталось
	|	ИЗ
	|		ВТОбеспечение КАК Обеспечение
	|	ГДЕ
	|		ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.РаспределениеЗапасов КАК Остатки
	|			ГДЕ
	|				Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|				И Остатки.Номенклатура   = Обеспечение.Номенклатура
	|				И Остатки.Характеристика = Обеспечение.Характеристика
	|				И Остатки.Склад         <> Обеспечение.Склад
	|				И Остатки.Назначение    <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|				И Остатки.Запас > 0
	|				И НЕ ИСТИНА В (
	|						ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|						ГДЕ
	|							СтруктураЗаказа.КлючПартия       = Обеспечение.КлючПартия
	|							И СтруктураЗаказа.Номенклатура   = Обеспечение.Номенклатура
	|							И СтруктураЗаказа.Характеристика = Обеспечение.Характеристика
	|							И СтруктураЗаказа.Склад          = Остатки.Склад
	|							И СтруктураЗаказа.ВидСтроки     <> ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение)
	|							И ИСТИНА В (
	|								ВЫБРАТЬ ПЕРВЫЕ 1
	|									ИСТИНА
	|								ИЗ
	|									РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|								ГДЕ
	|									СтруктураЗаказа.КлючПартия       = Обеспечение.КлючПартия
	|									И СтруктураЗаказа.Номенклатура   = Обеспечение.Номенклатура
	|									И СтруктураЗаказа.Характеристика = Обеспечение.Характеристика
	|									И СтруктураЗаказа.Склад          = Обеспечение.Склад
	|									И СтруктураЗаказа.ВидСтроки      = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))))
	|		И НЕ ИСТИНА В (
	|				ВЫБРАТЬ ПЕРВЫЕ 1
	|					ИСТИНА
	|				ИЗ
	|					РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|				ГДЕ
	|					СтруктураЗаказа.Номенклатура       = Обеспечение.Номенклатура
	|					И СтруктураЗаказа.Характеристика   = Обеспечение.Характеристика
	|					И СтруктураЗаказа.Склад            = Обеспечение.Склад
	|					И СтруктураЗаказа.КлючНоменклатура = Обеспечение.КлючНоменклатура
	|					И СтруктураЗаказа.КлючПартия      <> Обеспечение.КлючПартия
	|					И ИСТИНА В (
	|						ВЫБРАТЬ ПЕРВЫЕ 1
	|							ИСТИНА
	|						ИЗ
	|							РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказаПеремещение
	|						ГДЕ
	|							СтруктураЗаказаПеремещение.Номенклатура      = Обеспечение.Номенклатура
	|							И СтруктураЗаказаПеремещение.Характеристика  = Обеспечение.Характеристика
	|							И СтруктураЗаказаПеремещение.Склад          <> Обеспечение.Склад
	|							И СтруктураЗаказаПеремещение.КлючПартия      = СтруктураЗаказа.КлючПартия
	|							И СтруктураЗаказаПеремещение.ВидСтроки       = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение)))) КАК Таблица
	|	
	|СГРУППИРОВАТЬ ПО
	|	Таблица.Номенклатура,
	|	Таблица.Характеристика,
	|	Таблица.Склад,
	|	Таблица.Назначение
	|";
	
КонецФункции

Функция ТекстЗапросаОстаткиПоДругимНазначениямВКоличественномВыражение() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СУММА(Таблица.НаТекущемСкладе), 0)                КАК НаТекущемСкладе,
	|	ЕСТЬNULL(СУММА(Таблица.НаТекущемСкладеСвободноИзлишек), 0) КАК НаТекущемСкладеСвободноИзлишек,
	|	ЕСТЬNULL(СУММА(Таблица.НаДругихСкладах), 0)                КАК НаДругихСкладах,
	|	ЕСТЬNULL(СУММА(Таблица.НаДругихСкладахСвободноИзлишек), 0) КАК НаДругихСкладахСвободноИзлишек
	|ИЗ
	|	(ВЫБРАТЬ
	|		Остатки.Назначение КАК Назначение,
	|		ВЫБОР
	|			КОГДА Остатки.Склад = &Склад
	|				ТОГДА Остатки.Запас
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаТекущемСкладе,
	|		0     КАК НаТекущемСкладеСвободноИзлишек,
	|		ВЫБОР
	|			КОГДА Остатки.Склад <> &Склад
	|				ТОГДА Остатки.Запас
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаДругихСкладах,
	|		0     КАК НаДругихСкладахСвободноИзлишек
	|	ИЗ
	|		РегистрСведений.РаспределениеЗапасов КАК Остатки
	|	ГДЕ
	|		Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|		И Остатки.Номенклатура   = &Номенклатура
	|		И Остатки.Характеристика = &Характеристика
	|		И Остатки.Запас > 0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Остатки.Назначение КАК Назначение,
	|		0     КАК НаТекущемСкладе,
	|		ВЫБОР
	|			КОГДА Остатки.Склад = &Склад
	|				ТОГДА МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасов, 0))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаТекущемСкладеСвободноИзлишек,
	|		0     КАК НаДругихСкладах,
	|		ВЫБОР
	|			КОГДА Остатки.Склад <> &Склад
	|				ТОГДА МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасов, 0))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаДругихСкладахСвободноИзлишек
	|	ИЗ
	|		РегистрСведений.РаспределениеЗапасов КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|			ПО Остатки.Номенклатура   = СтруктураЗаказа.Номенклатура
	|			 И Остатки.Характеристика = СтруктураЗаказа.Характеристика
	|			 И Остатки.Склад          = СтруктураЗаказа.Склад
	|			 И Остатки.Назначение     = СтруктураЗаказа.Назначение
	|			 И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
	|	ГДЕ
	|		Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|		И Остатки.Номенклатура   = &Номенклатура
	|		И Остатки.Характеристика = &Характеристика
	|		И Остатки.Склад          = &Склад
	|		И Остатки.Назначение     = ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И &Назначение <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	СГРУППИРОВАТЬ ПО
	|		Остатки.Склад, Остатки.Назначение
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасов, 0)) > 0
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Остатки.Назначение КАК Назначение,
	|		0     КАК НаТекущемСкладе,
	|		ВЫБОР
	|			КОГДА Остатки.Склад = &Склад
	|				ТОГДА МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасовОбособленно, 0))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаТекущемСкладеСвободноИзлишек,
	|		0     КАК НаДругихСкладах,
	|		ВЫБОР
	|			КОГДА Остатки.Склад <> &Склад
	|				ТОГДА МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасовОбособленно, 0))
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК НаДругихСкладахСвободноИзлишек
	|	ИЗ
	|		РегистрСведений.РаспределениеЗапасов КАК Остатки
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|			ПО Остатки.Номенклатура   = СтруктураЗаказа.Номенклатура
	|			 И Остатки.Характеристика = СтруктураЗаказа.Характеристика
	|			 И Остатки.Склад          = СтруктураЗаказа.Склад
	|			 И Остатки.Назначение     = СтруктураЗаказа.НазначениеСтруктуры
	|			 И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
	|	ГДЕ
	|		Остатки.Состояние        = ЗНАЧЕНИЕ(Перечисление.РаспределениеЗапасовСостояния.ОстатокНаСкладе)
	|		И Остатки.Номенклатура   = &Номенклатура
	|		И Остатки.Характеристика = &Характеристика
	|		И Остатки.Склад          = &Склад
	|		И Остатки.Назначение    <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		И &Назначение           <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	СГРУППИРОВАТЬ ПО
	|		Остатки.Склад, Остатки.Назначение
	|	ИМЕЮЩИЕ
	|		МАКСИМУМ(Остатки.Излишек) - СУММА(ЕСТЬNULL(СтруктураЗаказа.РаспределеноИзЗапасовОбособленно, 0)) > 0
	|
	|) КАК Таблица
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаЭтоПолуфабрикат(ИмяВнешнейТаблицы = "СтруктураЗаказа")
	
	Возврат 
		СтрЗаменить(
		"ВЫБРАТЬ ПЕРВЫЕ 1
		|	ИСТИНА
		|ИЗ
		|	РегистрСведений.КэшНСИСтруктурыЗаказа КАК СпособыОбеспечения
		|ГДЕ
		|	СпособыОбеспечения.Номенклатура = ИмяВнешнейТаблицы.Номенклатура
		|	И СпособыОбеспечения.Характеристика = ИмяВнешнейТаблицы.Характеристика
		|	И СпособыОбеспечения.ЗаказНаПроизводство = ИмяВнешнейТаблицы.ЗаказНаПроизводство
		|	И СпособыОбеспечения.Запланировать
		|	И СпособыОбеспечения.ТипОбеспечения = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство)",
		"ИмяВнешнейТаблицы",
		ИмяВнешнейТаблицы);
	
КонецФункции

#КонецОбласти

#Область Прочее

Функция НовыйДерево()
	
	Результат = Новый ДеревоЗначений;
	
	Результат.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	Результат.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	Результат.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады"));
	Результат.Колонки.Добавить("СкладПодразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия, СправочникСсылка.Склады"));
	Результат.Колонки.Добавить("Назначение", Новый ОписаниеТипов("СправочникСсылка.Назначения"));
	Результат.Колонки.Добавить("ТипНоменклатуры", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыНоменклатуры"));
	
	Результат.Колонки.Добавить("КлючПартия", Новый ОписаниеТипов("УникальныйИдентификатор"));
	Результат.Колонки.Добавить("КлючНоменклатура", Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	Результат.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	Результат.Колонки.Добавить("ПредставлениеСтроки", Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки));
	Результат.Колонки.Добавить("ЕдиницаИзмерения", Новый ОписаниеТипов("СправочникСсылка.УпаковкиЕдиницыИзмерения"));
	
	Результат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	
	Результат.Колонки.Добавить("Начало", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	Результат.Колонки.Добавить("Окончание", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	Результат.Колонки.Добавить("ЖелаемаяДата", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты));
	
	Результат.Колонки.Добавить("НомерКартинки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("ТипСтроки", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("ТипПроцесса", Новый ОписаниеТипов("ПеречислениеСсылка.ТипыПроизводственныхПроцессов"));
	
	Результат.Колонки.Добавить("Требуется", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("Запущено", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("Готово", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("Осталось", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("Обеспечено", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("ОбеспеченоПроцент", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	Результат.Колонки.Добавить("Спецификация", Новый ОписаниеТипов("СправочникСсылка.РесурсныеСпецификации"));
	Результат.Колонки.Добавить("ЭтапСсылка", Новый ОписаниеТипов("СправочникСсылка.ЭтапыПроизводства, ДокументСсылка.ЭтапПроизводства2_2"));
	Результат.Колонки.Добавить("НомерЭтапа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	Результат.Колонки.Добавить("НомерСледующегоЭтапа", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	Результат.Колонки.Добавить("ДостроитьДерево", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("СтрокаПоиска", Новый ОписаниеТипов("Булево"));
	
	Результат.Колонки.Добавить("ИндексКартинкиОсталосьСвободныйИлиНеНужный", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Результат.Колонки.Добавить("ИндексКартинкиОсталосьПоДругимНазначением", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Результат.Колонки.Добавить("ИндексКартинкиОсталосьНаДругомСкладе", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	Результат.Колонки.Добавить("ИндексКартинкиОсталось", ОбщегоНазначения.ОписаниеТипаЧисло(1));
	
	Результат.Колонки.Добавить("ЗаказНаЗапуск", Новый ОписаниеТипов("ДокументСсылка.ЗаказНаПроизводство2_2"));
	Результат.Колонки.Добавить("ЗаказНаЗапускЭтапы", Новый ОписаниеТипов("ФиксированныйМассив"));
	
	Результат.Колонки.Добавить("ПроизводствоНаСтороне", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("НесколькоСкладов", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("НесколькоСпецификаций", Новый ОписаниеТипов("Булево"));
	Результат.Колонки.Добавить("ТребуетсяОбеспечение", Новый ОписаниеТипов("Булево"));
	
	// Партии, обеспечивающие полуфабрикат (КлючПартии)
	Результат.Колонки.Добавить("ОбеспечениеПартии", Новый ОписаниеТипов("ФиксированныйМассив"));
	
	// Служебные колонки для построения дерева
	
	// Для расчета количества при обеспечении другими заказами на производство и их этапами
	Результат.Колонки.Добавить("ЗапущеноВЗаказахНаЗапуск", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла));
	
	// Служебное поле для формирования дерева поиска
	Результат.Колонки.Добавить("ПотомокИзделияПоиска", Новый ОписаниеТипов("Булево"));
	
	Возврат Результат;
	
КонецФункции

Функция ТипСтрокиИзделие()
	
	Возврат 1;
	
КонецФункции

Функция ТипСтрокиПолуфабрикат()
	
	Возврат 2;
	
КонецФункции

Функция ТипСтрокиЭтапСтруктуры()
	
	Возврат 3;
	
КонецФункции

Функция ТипСтрокиПеремещение()
	
	Возврат 4;
	
КонецФункции

Функция ТипСтрокиЭтапДокумент()
	
	Возврат 5;
	
КонецФункции

Функция ТипСтрокиЗаказНаЗапуск()
	
	Возврат 6;
	
КонецФункции

Функция ТипСтрокиСлужебный()
	
	Возврат 7;
	
КонецФункции

Функция ТипСтрокиМатериал()
	
	Возврат 8;
	
КонецФункции

Функция ТипСтрокиНоменклатураРасшифровки()
	
	Возврат 9;
	
КонецФункции

Функция НомерКартинки(Строка)
	
	Если Строка.ТипСтроки = ТипСтрокиЭтапСтруктуры() Тогда
		Возврат 1;
	ИначеЕсли Строка.ТипСтроки = ТипСтрокиЭтапДокумент() Тогда
		Возврат 2;
	ИначеЕсли Строка.ТипСтроки = ТипСтрокиПолуфабрикат() Тогда
		Возврат 3;
	ИначеЕсли Строка.ТипСтроки = ТипСтрокиПеремещение() Тогда
		Возврат 4;
	ИначеЕсли Строка.ТипСтроки = ТипСтрокиМатериал() Тогда
		Возврат 5;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция РазмерПорцииВыборки() Экспорт
	
	Возврат 1000;
	
КонецФункции

Функция КоличествоСтрок(СтрокиДерева)
	
	Результат = 0;
	
	Очередь = Новый Массив;
	Для каждого Строка Из СтрокиДерева Цикл
		Если Строка.ТипСтроки <> ТипСтрокиСлужебный() Тогда
			Очередь.Добавить(Строка);
		КонецЕсли;
	КонецЦикла;
	
	Пока Очередь.ВГраница() <> -1 Цикл
		Результат = Результат + 1;
		Для каждого СтрокаПотомок Из Очередь[0].Строки Цикл
			Если СтрокаПотомок.ТипСтроки <> ТипСтрокиСлужебный() Тогда
				Очередь.Добавить(СтрокаПотомок);
			КонецЕсли;
		КонецЦикла;
		Очередь.Удалить(0);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#КонецЕсли
