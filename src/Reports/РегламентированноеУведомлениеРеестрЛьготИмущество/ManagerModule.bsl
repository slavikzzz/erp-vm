#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.КНД = "1155218";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2020_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 24.05.2021 № ЕД-7-15/513@";
	Стр.ДатаНачала = '20201001';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_1" Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Электронный формат для данной формы не опубликован';
													|en = 'Электронный формат для данной формы не опубликован'"));
		Возврат Неопределено;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2020_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2020_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(СведенияОтправки)
	Префикс = "KO_RROBNLIM";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_1(Данные, УникальныйИдентификатор)
	СпискиВыбора = УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбораДляПроверкиВыгрузки(
		Данные.Объект.ИмяОтчета, "СпискиВыбора2020_1");
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчетГод", Истина);
	Если ЗначениеЗаполнено(Титульная.Период)
		И Титульная.Период <> "34" 
		И Титульная.Период <> "50" Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан код периода", "Титульная", "Период"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Наименование) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "Наименование"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата формирования документа", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Истина, Титульная, ТаблицаОшибок);
	Если СтрНайти("01|51|52|55|56|63|64|65|91|92|70|4A|4B|4C|4D|4E|4F|", Сред(Титульная.КПП, 5, 2) + "|") = 0 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указаны 5 и 6 символ КПП", "Титульная", "КПП"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверитьПоказательНаСоотвествиеСписку(
		Титульная, СпискиВыбора, "ПРИЗНАК_НП_ПОДВАЛ", "Титульная", Истина, "признак подписанта", ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если СтрДлина(СокрЛП(Титульная.Период)) <> 2 Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан/неправильно указан налоговый (отчетный) период ", "Титульная", "Период"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ИмяФайлТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано имя файла требования о представлении пояснений", "Титульная", "ИмяФайлТреб"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Титульная.ФормРеорг)
		Или ЗначениеЗаполнено(Титульная.ИННРеорг)
		Или ЗначениеЗаполнено(Титульная.КППРеорг)Тогда 
		
		УведомлениеОСпецрежимахНалогообложения.ПроверитьПоказательНаСоотвествиеСписку(
			Титульная, СпискиВыбора, "ФормРеорг", "Титульная", Истина, "форма реорганизации", ТаблицаОшибок);
		Если Титульная.ФормРеорг = "1" Или Титульная.ФормРеорг = "2" Или Титульная.ФормРеорг = "3" 
			Или Титульная.ФормРеорг = "5" Или Титульная.ФормРеорг = "6" Тогда 
			
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННРеорг", Истина, Истина);
			Если Не ЗначениеЗаполнено(Титульная.КППРеорг)
				Или Не РегламентированнаяОтчетностьВызовСервера.КППСоответствуетТребованиямФНС(Титульная.КППРеорг)
				Или Сред(Титульная.КППРеорг, 5, 2) = "50" Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан / неправильно указан КПП реорганизованной организации", "Титульная", "КППРеорг"));
			КонецЕсли;
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННРеорг", Ложь, Истина);
			Если ЗначениеЗаполнено(Титульная.КППРеорг)
				И Не РегламентированнаяОтчетностьВызовСервера.КППСоответствуетТребованиямФНС(Титульная.КППРеорг)
				И Сред(Титульная.КППРеорг, 5, 2) = "50" Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указан КПП реорганизованной организации", "Титульная", "КППРеорг"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.РеестрДокПОбНЛ Цикл
		РеестрДокПОбНЛ = Стр.Значение;
		
		Если Не ЗначениеЗаполнено(РеестрДокПОбНЛ.НомОбъект) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер объекта", "РеестрДокПОбНЛ", "НомОбъект", РеестрДокПОбНЛ.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложения.ПроверитьПоказательНаСоотвествиеСписку(
			РеестрДокПОбНЛ, СпискиВыбора, "КодНомОбъект", "РеестрДокПОбНЛ", Истина, "код номера объекта", ТаблицаОшибок);
		
		Если Не ЗначениеЗаполнено(РеестрДокПОбНЛ.КодНалЛьг)
			И Не ЗначениеЗаполнено(РеестрДокПОбНЛ.КодЛгПНС)
			И Не ЗначениеЗаполнено(РеестрДокПОбНЛ.КодЛгУмен) Тогда
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код льготы", "РеестрДокПОбНЛ", "КодНалЛьг", РеестрДокПОбНЛ.УИД));
		КонецЕсли;
		
		Если ?(ЗначениеЗаполнено(РеестрДокПОбНЛ.КодНалЛьг), 1, 0)
			+ ?(ЗначениеЗаполнено(РеестрДокПОбНЛ.КодЛгПНС), 1, 0)
			+ ?(ЗначениеЗаполнено(РеестрДокПОбНЛ.КодЛгУмен), 1, 0) > 1 Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Возможно указать только один из кодов", "РеестрДокПОбНЛ", "КодНалЛьг", РеестрДокПОбНЛ.УИД));
		КонецЕсли;
		
		Инд = 0;
		Для Каждого МнгСтр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл 
			Если МнгСтр.УИД <> РеестрДокПОбНЛ.УИД Тогда 
				Продолжить;
			КонецЕсли;
			Инд = Инд + 1;
			ИндСтр = "___" + Формат(Инд, "ЧГ=");
			Если Не ЗначениеЗаполнено(МнгСтр.НаимДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование документа", "РеестрДокПОбНЛ", "НаимДок" + ИндСтр, РеестрДокПОбНЛ.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(МнгСтр.ДатаДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата документа", "РеестрДокПОбНЛ", "ДатаДок" + ИндСтр, РеестрДокПОбНЛ.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2020_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2020_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2020_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2020_1");
	
	ШапкаИнформация = МакетПФ.ПолучитьОбласть("ШапкаИнформация");
	Шапка = МакетПФ.ПолучитьОбласть("Шапка");
	Строка = МакетПФ.ПолучитьОбласть("Строка");
	
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Шапка.Параметры.НаимОрг = СтруктураПараметров.ДанныеУведомления.Титульная.Наименование;
	Шапка.Параметры._ОтчетГод = СтруктураПараметров.ДанныеУведомления.Титульная.ОтчетГод;
	Шапка.Параметры._Период = СтруктураПараметров.ДанныеУведомления.Титульная.Период;
	Шапка.Параметры._КПП = СтруктураПараметров.ДанныеУведомления.Титульная.КПП;
	Шапка.Параметры._ИмяФайлТреб = СтруктураПараметров.ДанныеУведомления.Титульная.ИмяФайлТреб;
	Шапка.Параметры._ФормРеорг = СтруктураПараметров.ДанныеУведомления.Титульная.ФормРеорг;
	Если ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИННРеорг) 
		Или ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.КППРеорг) Тогда 
		Шапка.Параметры._ИННКППРеорг = СтруктураПараметров.ДанныеУведомления.Титульная.ИННРеорг + "/" 
			+ СтруктураПараметров.ДанныеУведомления.Титульная.КППРеорг;
		КонецЕсли;
	Шапка.Параметры._ИНН = СтруктураПараметров.ДанныеУведомления.Титульная.ИНН;
	Шапка.Параметры._НомКорр = Формат(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр, "ЧН=0");
	
	ПечатнаяФорма.Вывести(ШапкаИнформация);
	ПечатнаяФорма.Вывести(Шапка);
	
	Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов.РеестрДокПОбНЛ Цикл 
		РеестрДокПОбНЛ = Стр.Значение;
		Строка.Параметры.ТипДокумента = Неопределено;
		Строка.Параметры.НомерДокумента = Неопределено;
		Строка.Параметры.ДатаДокумента = Неопределено;
		Строка.Параметры.КодЛьготы = СокрЛП("" + РеестрДокПОбНЛ.КодНалЛьг + " " + РеестрДокПОбНЛ.КодЛгПНС + " " + РеестрДокПОбНЛ.КодЛгУмен);
		Строка.Параметры.Информация = "" + РеестрДокПОбНЛ.КодНомОбъект + " / " + РеестрДокПОбНЛ.НомОбъект;
		
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр1 Цикл 
			Если МнгСтр.УИД <> РеестрДокПОбНЛ.УИД Тогда 
				Продолжить;
			КонецЕсли;
			Строка.Параметры.ТипДокумента = МнгСтр.НаимДок;
			Строка.Параметры.НомерДокумента = МнгСтр.НомДок;
			Строка.Параметры.ДатаДокумента = Формат(МнгСтр.ДатаДок, "ДФ=dd.MM.yyyy; ДП=-");
			ПечатнаяФорма.Вывести(Строка);
			Строка.Параметры.КодЛьготы = Неопределено;
			Строка.Параметры.Информация = Неопределено;
		КонецЦикла;
		
		ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы, 2, ПечатнаяФорма.ВысотаТаблицы, 8).ГраницаСнизу = 
						ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы, 2, ПечатнаяФорма.ВысотаТаблицы, 2).ГраницаСлева;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции
#КонецОбласти
#КонецЕсли
