// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
// * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
// * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//   поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//   нужно всегда использовать схему по умолчанию - указываем значение "null".
// * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
// Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
// поэтому обработчики используются для получения значений показателей, не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : false,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "col", "ПолеТабличногоДокументаРаздел1"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если Лев(СтрокаДерева.Ключ, 4) = "Дата" Тогда
			СтрокаДерева.Формат = "T";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "section", "ПолеТабличногоДокументаРаздел4_6"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		АтрибутыS1 = УзлыПоXPath(СтрокаДерева, "row/@s1");
		Для Каждого АтрибутS1 Из АтрибутыS1 Цикл
			Если Лев(АтрибутS1.ЗначениеПоУмолчанию, 1) = "&" Тогда
				ИмяПараметра = "Кд" + Сред(АтрибутS1.ЗначениеПоУмолчанию, 4);
				П.ПараметрыОтчета.Вставить(ИмяПараметра, 0);
				АтрибутS1.ЗначениеПоУмолчанию = "&" + ИмяПараметра;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Ключ", "s1", "П000030001003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если ЗначениеЗаполнено(СтрокаДерева.ЗначениеПоУмолчанию) Тогда
			СтрокаДерева.ЗначениеПоУмолчанию = "";
			СтрокаДерева.Формат = "T";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Ключ", "s1", "П000080001003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		Если ЗначениеЗаполнено(СтрокаДерева.ЗначениеПоУмолчанию) Тогда
			СтрокаДерева.ЗначениеПоУмолчанию = "";
		КонецЕсли;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел,Ключ", "s1", "ПолеТабличногоДокументаРаздел10", "КодЗн"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Формат = "T";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел,Ключ", "col", "ПолеТабличногоДокументаРаздел10", "Код"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Формат = "T";
		РодительскийУзел = СтрокаДерева.Родитель;
		ПодчиненныеСтроки = РодительскийУзел.Строки.НайтиСтроки(Новый Структура("Многостраничность", Ложь), Истина);
		Для Каждого ПодчиненнаяСтрока Из ПодчиненныеСтроки Цикл
			ПодчиненнаяСтрока.Многостраничность = Истина;
		КонецЦикла;
		РодительскийУзел.Родитель.Многостраничность = Ложь;
		УзлыКод = РодительскийУзел.Родитель.Строки.НайтиСтроки(Новый Структура("Код", "code"));
		Для Каждого УзелКод Из УзлыКод Цикл
			УзелКод.Многостраничность = Ложь;
		КонецЦикла;
	КонецЦикла;
	
	ПрототипДобавляемогоУзла8р  = Неопределено;
	
	УзлыСтрок802 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section/row[@code='802']");
	Для Каждого УзелСтроки802 Из УзлыСтрок802 Цикл
		АтрибутыS1 = УзлыПоXPath(УзелСтроки802, "@s1");
		Для Каждого АтрибутS1 Из АтрибутыS1 Цикл
			АтрибутS1.ЗначениеПоУмолчанию = "";
		КонецЦикла;
		ПрототипДобавляемогоУзла8р = УзелСтроки802;
	КонецЦикла;
	
	ПрототипДобавляемогоУзла8р.Обязательность = "НП";
	Для НомУзла = 1 По 299 Цикл
		НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла8р.Родитель, ПрототипДобавляемогоУзла8р);
	КонецЦикла;
	
	ПрототипДобавляемогоУзла9р  = Неопределено;
	ПрототипДобавляемогоУзла10р = Неопределено;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код,Раздел", "section", "ПолеТабличногоДокументаРаздел9"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		ПодчиненныеУзлы = УзлыПоXPath(СтрокаДерева, "row[@code='901']");
		Для Каждого ПодчиненныйУзел Из ПодчиненныеУзлы Цикл
			ПодчиненныйУзел.Раздел = "";
			АтрибутыS1 = УзлыПоXPath(ПодчиненныйУзел, "@s1");
			Для Каждого АтрибутS1 Из АтрибутыS1 Цикл
				АтрибутS1.Формат = "T";
			КонецЦикла;
		КонецЦикла;
		
		ПодчиненныеУзлы = УзлыПоXPath(СтрокаДерева, "row[@code='902']");
		Для Каждого ПодчиненныйУзел Из ПодчиненныеУзлы Цикл
			ПодчиненныйУзел.Раздел = "";
			АтрибутыS1 = УзлыПоXPath(ПодчиненныйУзел, "@s1");
			Для Каждого АтрибутS1 Из АтрибутыS1 Цикл
				АтрибутS1.Многострочность = Истина;
				АтрибутS1.Формат = "T";
				//АтрибутS1.ЗначениеПоУмолчанию = "";
			КонецЦикла;
			ПрототипДобавляемогоУзла9р = ПодчиненныйУзел;
		КонецЦикла;
		
		АтрибутыCode = УзлыПоXPath(СтрокаДерева, "row[@code='903']/@code");
		Для Каждого АтрибутCode Из АтрибутыCode Цикл
			АтрибутCode.Многострочность = АтрибутCode.Родитель.Многострочность;
			АтрибутыS1 = УзлыПоXPath(АтрибутCode.Родитель, "@s1");
			Для Каждого АтрибутS1 Из АтрибутыS1 Цикл
				АтрибутS1.Формат = "T";
			КонецЦикла;
			ПрототипДобавляемогоУзла10р = АтрибутCode.Родитель;
		КонецЦикла;
	КонецЦикла;
	
	ПрототипДобавляемогоУзла9р.Обязательность = "НП";
	Для НомУзла = 2 По 299 Цикл
		НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла9р.Родитель, ПрототипДобавляемогоУзла9р);
	КонецЦикла;
	
	ПрототипДобавляемогоУзла10р.Обязательность = "НП";
	Для НомУзла = 3 По 999 Цикл
		НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла10р.Родитель, ПрототипДобавляемогоУзла10р);
	КонецЦикла;
	
#КонецОбласти

#Область ПостОбработкаДокументаОтчета
	
	Раздел1 = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1", Раздел1);
	
	Если Раздел1 <> Неопределено Тогда
		
		Для Ном = 3 По 8 Цикл
			НомСтр = Формат(Ном, "ЧЦ=2; ЧВН=");
			ЗначениеПараметра = Неопределено;
			КодПоказателя = "П01000" + НомСтр + "01";
			Если П.ПараметрыОтчета.Свойство("Зн_" + КодПоказателя, ЗначениеПараметра) И ЗначениеПараметра = "1" Тогда
				Раздел1.Вставить(КодПоказателя, Число("-1" + НомСтр));
			Иначе
				Раздел1.Вставить(КодПоказателя, Число("1" + НомСтр));
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Раздел23 = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел2_3", Раздел23);
	
	Если Раздел23 <> Неопределено Тогда
		
		Для Ном = 1 По 10 Цикл
			НомСтр = Формат(Ном, "ЧЦ=2; ЧВН=");
			ЗначениеПараметра = Неопределено;
			КодПоказателя = "П020002" + НомСтр + "01";
			Если П.ПараметрыОтчета.Свойство("Зн_" + КодПоказателя, ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				Раздел23.Вставить(КодПоказателя, ЧислоИзСтроки(ЗначениеПараметра));
			КонецЕсли;
		КонецЦикла;
		
		ЗначениеПараметра = Неопределено;
		КодПоказателя1 = "П0200021101";
		КодПоказателя2 = "П0200021201";
		Если П.ПараметрыОтчета.Свойство("Зн_" + КодПоказателя1, ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
			Если ЗначениеПараметра = "1" Тогда
				Раздел23.Вставить(КодПоказателя1, -211);
				Раздел23.Вставить(КодПоказателя2,  212);
			Иначе
				Раздел23.Вставить(КодПоказателя1,  211);
				Раздел23.Вставить(КодПоказателя2, -212);
			КонецЕсли;
		Иначе
			Раздел23.Вставить(КодПоказателя1, 211);
			Раздел23.Вставить(КодПоказателя2, 212);
		КонецЕсли;
		
	КонецЕсли;
	
	Раздел7 = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел7", Раздел7);
	
	Если Раздел7 <> Неопределено Тогда
		
		Для Ном = 601 По 671 Цикл
			НомСтр = Формат(Ном, "ЧЦ=3; ЧВН=");
			
			ЗначениеПараметра = Неопределено;
			Если П.ПараметрыОтчета.Свойство("Зн_" + НомСтр, ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				Раздел7.Вставить("П0600" + НомСтр + "01", ЧислоИзСтроки(ЗначениеПараметра));
			КонецЕсли;
		КонецЦикла;
		
		Для Ном = 701 По 737 Цикл
			НомСтр = Формат(Ном, "ЧЦ=3; ЧВН=");
			
			ЗначениеПараметра = Неопределено;
			Если П.ПараметрыОтчета.Свойство("Зн_" + НомСтр, ЗначениеПараметра) И ЗначениеЗаполнено(ЗначениеПараметра) Тогда
				Раздел7.Вставить("П0700" + НомСтр + "01", ЧислоИзСтроки(ЗначениеПараметра));
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	Раздел8 = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел8", Раздел8);
	
	Если Раздел8 <> Неопределено Тогда
		
		НомерЗагруженнойСтроки = 0;
		НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000080001003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			
			Знач1 = ""; Знач2 = 0;
			
			РодительСтрокиДерева = СтрокаДерева.Родитель;
			НайденныеСтрокиСрЧисл = РодительСтрокиДерева.Строки.НайтиСтроки(Новый Структура("Ключ", "П000080001004"));
			
			Знач1 = СокрЛП(СтрокаДерева.Значение);
			Знач2 = Число(" " + НайденныеСтрокиСрЧисл[0].Значение);
			
			Если НЕ ЗначениеЗаполнено(Знач1) И Знач2 = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НомерЗагруженнойСтроки = НомерЗагруженнойСтроки + 1;
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(РодительСтрокиДерева, П.ДанныеОтчета, П.ПараметрыОтчета, , , НомерЗагруженнойСтроки);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Раздел9 = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел9", Раздел9);
	
	Если Раздел9 <> Неопределено Тогда
		
		НомерЗагруженнойСтроки = 0;
		НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000090001003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			
			Знач1 = ""; Знач2 = 0;
			
			РодительСтрокиДерева = СтрокаДерева.Родитель;
			НайденныеСтрокиСрЧисл = РодительСтрокиДерева.Строки.НайтиСтроки(Новый Структура("Ключ", "П000090001004"));
			
			Знач1 = СокрЛП(СтрокаДерева.Значение);
			Знач2 = Число(" " + НайденныеСтрокиСрЧисл[0].Значение);
			
			Если НЕ ЗначениеЗаполнено(Знач1) И Знач2 = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			НомерЗагруженнойСтроки = НомерЗагруженнойСтроки + 1;
			
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(РодительСтрокиДерева, П.ДанныеОтчета, П.ПараметрыОтчета, , , НомерЗагруженнойСтроки);
			
		КонецЦикла;
		
		П.ПараметрыОтчета.Свойство("ОснОКПО", Раздел9.Код);
		
	КонецЕсли;
	
	Раздел10 = Неопределено;
	П.ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел10", Раздел10);
	
	Если Раздел10 <> Неопределено Тогда
		
		НомераСтраницРаздела = Новый Соответствие;
		
		Для НомСтраницы = 1 По Раздел10.Количество() Цикл
			СтраницаРаздела = Раздел10[НомСтраницы - 1];
			ЗначениеОКПО = Неопределено;
			СтраницаРаздела.Данные.Свойство("КодЗн", ЗначениеОКПО);
			Если ЗначениеОКПО <> Неопределено Тогда
				НомераСтраницРаздела.Вставить(ЗначениеОКПО, Новый Структура("НомСтраницы,НомСтроки", НомСтраницы, 1));
			КонецЕсли;
		КонецЦикла;
		
		НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000000001003"), Истина);
		Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
			
			Знач1 = ""; Знач2 = "";
			
			РодительСтрокиДерева = СтрокаДерева.Родитель;
			НайденныеКодыОКПО = РодительСтрокиДерева.Строки.НайтиСтроки(Новый Структура("Ключ", "П000000001008"));
			
			Знач1 = СокрЛП(СтрокаДерева.Значение);
			Знач2 = СокрЛП(НайденныеКодыОКПО[0].Значение);
			
			Если НЕ ЗначениеЗаполнено(Знач1) И НЕ ЗначениеЗаполнено(Знач2) Тогда
				Продолжить;
			КонецЕсли;
			
			СчетчикиСтраницы = НомераСтраницРаздела[Знач2];
			Если СчетчикиСтраницы = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если Знач1 = "101.АГ" Тогда
				РодительСтрокиДерева.Многострочность = Ложь;
				ДочерниеУзлы = РодительСтрокиДерева.Строки.НайтиСтроки(Новый Структура("Многострочность", Истина), Истина);
				Для Каждого ДочернийУзел Из ДочерниеУзлы Цикл
					ДочернийУзел.Многострочность = Ложь;
					Если ДочернийУзел.Ключ = "П000000001004" Тогда
						ДочернийУзел.Ключ = "П09009030101";
					ИначеЕсли ДочернийУзел.Ключ = "П000000001005" Тогда
						ДочернийУзел.Ключ = "П09009030201";
					ИначеЕсли ДочернийУзел.Ключ = "П000000001006" Тогда
						ДочернийУзел.Ключ = "П09009030301";
					ИначеЕсли ДочернийУзел.Ключ = "П000000001007" Тогда
						ДочернийУзел.Ключ = "П09009030401";
					Иначе
						ДочернийУзел.Ключ = "";
					КонецЕсли;
				КонецЦикла;
				
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(
					РодительСтрокиДерева, П.ДанныеОтчета, П.ПараметрыОтчета, , СчетчикиСтраницы.НомСтраницы);
			Иначе
				НайденныеКодыОКПО[0].Ключ = "";
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(
					РодительСтрокиДерева, П.ДанныеОтчета, П.ПараметрыОтчета, , СчетчикиСтраницы.НомСтраницы, СчетчикиСтраницы.НомСтроки);
				СчетчикиСтраницы.НомСтроки = СчетчикиСтраницы.НомСтроки + 1;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти