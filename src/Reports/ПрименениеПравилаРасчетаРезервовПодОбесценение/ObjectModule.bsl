#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	ПараметрыОтчета = ПолучитьПараметрыОтчета(НастройкиОтчета);
	
	Если НЕ ЗначениеЗаполнено(ПараметрыОтчета.Правило) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	СформироватьВременнуюТаблицуДляСКД(МенеджерВременныхТаблиц, ПараметрыОтчета);
	
	// Скомпонуем и выведем результат запроса в табличный документ
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);

	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки,,, МенеджерВременныхТаблиц);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти
	
#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура из см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию.
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры
	
// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево -Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") И Параметры.ПараметрКоманды.Количество() <> 0 Тогда
		
		Правило = Параметры.ПараметрКоманды[0];
		ФормаПараметры = ЭтаФорма.ФормаПараметры;
		ФормаПараметры.Отбор.Очистить();
		ФормаПараметры.Отбор.Вставить("Правило", Правило);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если ТипЗнч(Контекст) = Тип("ФормаКлиентскогоПриложения") Тогда
		НастроитьПараметрДанныеОтчета(Контекст.НастройкиОтчета, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти	

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьПараметрыОтчета(НастройкиОтчета)
	
	СтруктураПараметров = Новый Структура("Правило,Период");
	
	ПараметрыДанных = НастройкиОтчета.ПараметрыДанных;
	ПараметрПравило = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Правило"));
	ПараметрПериод = ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ПериодОтчета"));
	
	Если НЕ ЗначениеЗаполнено(ПараметрПравило.Значение) Тогда
		СтруктураПараметров.Правило = ПредопределенноеЗначение("Справочник.ПравилаФормированияРезервовПодОбесценениеЗапасов.ПустаяСсылка");
	Иначе
		СтруктураПараметров.Правило = ПараметрПравило.Значение;
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ПараметрПериод.Значение) Тогда
		СтруктураПараметров.Период = Новый Граница(КонецМесяца(ТекущаяДатаСеанса()), ВидГраницы.Включая);
	Иначе
		СтруктураПараметров.Период = Новый Граница(КонецМесяца(ПараметрПериод.Значение), ВидГраницы.Включая);
	КонецЕсли;
	
	Возврат СтруктураПараметров;
	
КонецФункции

Процедура СформироватьВременнуюТаблицуДляСКД(МенеджерВременныхТаблиц, ПараметрыОтчета)

	ПараметрыОтчета.Вставить("ПартионныйУчетВерсии22", РасчетСебестоимостиПовтИсп.ПартионныйУчетВерсии22());
	ПараметрыОтчета.Вставить("ДатаПереходаНаПартионныйУчетВерсии22", РасчетСебестоимостиПовтИсп.ДатаПереходаНаПартионныйУчетВерсии22());
	ТаблицаРезервов = Справочники.ПравилаФормированияРезервовПодОбесценениеЗапасов.СформироватьТаблицуОстатковПоПравилу(ПараметрыОтчета.Правило, Ложь, ПараметрыОтчета);
	
	ПараметрыПомещения = Новый Структура;
	ПараметрыПомещения.Вставить("ИмяВременнойТаблицы", "ТаблицаОстатков");
	ПараметрыПомещения.Вставить("РасчетРезервов", Истина);
	Справочники.ПравилаФормированияРезервовПодОбесценениеЗапасов.ПоместитьТаблицуОстатковВоВременнуюТаблицу(ТаблицаРезервов, МенеджерВременныхТаблиц, ПараметрыПомещения);
	
КонецПроцедуры

// Настроить параметр данные отчета.
// 
// Параметры:
//  НастройкиОтчета						- НастройкиКомпоновкиДанных					- настройки отчета.
//	НовыеНастройкиКД					- НастройкиКомпоновкиДанных					- настройки варианта отчета, которые будут загружены
//																						в компоновщик настроек после его инициализации.
//										- Неопределено 								- настройки варианта не надо загружать (уже загружены ранее).
//	НовыеПользовательскиеНастройкиКД	- ПользовательскиеНастройкиКомпоновкиДанных - пользовательские настройки, которые будут загружены в компоновщик
//																						настроек после его инициализации.
//										- Неопределено 								- пользовательские настройки не надо загружать (уже загружены ранее).
//
Процедура НастроитьПараметрДанныеОтчета(НастройкиОтчета, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД)
	
	ПараметрДанныеОтчета = СхемаКомпоновкиДанных.Параметры.Найти("ДанныеОтчета");

	СписокВыбора = Новый СписокЗначений;
	
	Если РасчетСебестоимостиПовтИсп.УправленческийУчетОрганизаций() Тогда
		СписокВыбора.Добавить(1, НСтр("ru = 'В валюте упр. учета';
										|en = 'In management accounting currency'"));
	КонецЕсли;
		
	СписокВыбора.Добавить(2, НСтр("ru = 'В валюте регл. учета';
									|en = 'In local accounting currency'"));
		
	ПараметрДанныеОтчета.УстановитьДоступныеЗначения(СписокВыбора);
	
	Если НовыеНастройкиКД = Неопределено
		Или НовыеПользовательскиеНастройкиКД = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗначениеПараметраДанныеОтчета = НовыеНастройкиКД.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ДанныеОтчета"));
	НастройкаДанныеОтчета = НовыеПользовательскиеНастройкиКД.Элементы.Найти(ЗначениеПараметраДанныеОтчета.ИдентификаторПользовательскойНастройки);
	
	Если Не НастройкаДанныеОтчета = Неопределено
		И СписокВыбора.НайтиПоЗначению(НастройкаДанныеОтчета.Значение) = Неопределено Тогда
		НастройкаДанныеОтчета.Значение = СписокВыбора[0].Значение;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
