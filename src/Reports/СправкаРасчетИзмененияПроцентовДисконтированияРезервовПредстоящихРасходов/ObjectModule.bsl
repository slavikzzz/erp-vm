
#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	ПараметрОбъектУчетаРезервов = НастройкиОтчета.ПараметрыДанных.Элементы.Найти("ОбъектУчетаРезервов");
	
	ОбъектУчетаРезервов = ПараметрОбъектУчетаРезервов.Значение;
	Если Не ЗначениеЗаполнено(ПараметрОбъектУчетаРезервов.Значение) Тогда
		ОбъектУчетаРезервов = ПредопределенноеЗначение("Справочник.ОбъектыУчетаРезервовПредстоящихРасходов.ПустаяСсылка");
	КонецЕсли;
	
	РеквизитыОУР = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ОбъектУчетаРезервов, "Организация, ВидРезервов");
	Параметр = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Организация"));
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = РеквизитыОУР.Организация;
		Параметр.Использование = Истина;
	КонецЕсли;
	
	Параметр = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ВидРезервов"));
	Если Параметр <> Неопределено Тогда
		Параметр.Значение = РеквизитыОУР.ВидРезервов;
		Параметр.Использование = Истина;
	КонецЕсли;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки,, ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - Структура - см. возвращаемое значение ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию().
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ОбъектУчетаРезервов") И Не ЭтаФорма.ФормаПараметры.Отбор.Свойство("ОбъектУчетаРезервов") Тогда
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("ОбъектУчетаРезервов", Параметры.ОбъектУчетаРезервов);
	КонецЕсли;
	
	Если Параметры.Свойство("Период") И Не ЭтаФорма.ФормаПараметры.Отбор.Свойство("Период") Тогда
		Если Параметры.Свойство("Регистратор") И ЗначениеЗаполнено(Параметры.Регистратор) 
			И НЕ ЗначениеЗаполнено(Параметры.Период) Тогда
			ПериодОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Параметры.Регистратор, "Дата");	
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Период", ПериодОтчета);
		Иначе
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("Период", Параметры.Период);			
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
