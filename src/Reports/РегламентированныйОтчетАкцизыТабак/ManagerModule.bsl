#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если НаДату > '20180701' И ТипЗнч(ВыбраннаяФорма) = Тип("ДокументСсылка.РегламентированныйОтчет")
		И (СокрЛП(ВыбраннаяФорма.ВыбраннаяФорма) = "ФормаОтчета2025Кв1"
		ИЛИ СокрЛП(ВыбраннаяФорма.ВыбраннаяФорма) = "ФормаОтчета2022Кв4"
		ИЛИ СокрЛП(ВыбраннаяФорма.ВыбраннаяФорма) = "ФормаОтчета2020Кв1"
		ИЛИ СокрЛП(ВыбраннаяФорма.ВыбраннаяФорма) = "ФормаОтчета2018Кв3") Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	ИначеЕсли НаДату > '20050101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия300;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2007Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 3 к приказу Минфина РФ от 14.11.2006 № 146н (в редакции приказа Минфина России от 20.12.2007 № 142н).";
	НоваяФорма.РедакцияФормы      = "от 20.12.2007 № 142н.";
	НоваяФорма.ДатаНачалоДействия = '2007-01-01';
	НоваяФорма.ДатаКонецДействия  = '2018-07-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2025Кв1";
	НоваяФорма.ОписаниеОтчета     = "Утверждена приказом ФНС России от 02.10.2024 № ЕД-7-3/815@.";
	НоваяФорма.РедакцияФормы      = "от 02.10.2024 № ЕД-7-3/815@.";
	НоваяФорма.ДатаНачалоДействия = '2025-01-01';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2022Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 15.02.2018 № ММВ-7-3/95@ (в редакции приказа ФНС России от 26.08.2022 № ЕД-7-3/778@).";
	НоваяФорма.РедакцияФормы      = "от 26.08.2022 № ЕД-7-3/778@.";
	НоваяФорма.ДатаНачалоДействия = '2022-11-01';
	НоваяФорма.ДатаКонецДействия  = '2024-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 15.02.2018 № ММВ-7-3/95@ (в редакции приказа ФНС России от 25.09.2020 № ЕД-7-3/696@).";
	НоваяФорма.РедакцияФормы      = "от 25.09.2020 № ЕД-7-3/696@.";
	НоваяФорма.ДатаНачалоДействия = '2020-01-01';
	НоваяФорма.ДатаКонецДействия  = '2022-10-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв3";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 15.02.2018 № ММВ-7-3/95@.";
	НоваяФорма.РедакцияФормы      = "от 15.02.2018 № ММВ-7-3/95@.";
	НоваяФорма.ДатаНачалоДействия = '2018-07-01';
	НоваяФорма.ДатаКонецДействия  = '2022-10-31';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета) Экспорт
	
	ТаблицаДанныхРеглОтчета = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	
	ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
	
	Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
		Возврат ТаблицаДанныхРеглОтчета;
	КонецЕсли;
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв3" Тогда
		
		Если ДанныеРеглОтчета.Свойство("ОкружениеСохранения") Тогда
			
			Возврат ТаблицаДанныхРеглОтчета; // отчет сохранен в 2.0
			
		ИначеЕсли ДанныеРеглОтчета.Свойство("ДанныеМногоуровневыхРазделов") Тогда
			
			ОКТМО = ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0].Данные["П000010001003"];
			
			ДанныеМногострочнойЧастиРаздела1
			= ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0].ДанныеМногострочныхЧастей["П00001М1"];
			
			Для каждого СтрокаМнЧ Из ДанныеМногострочнойЧастиРаздела1.Строки Цикл
				
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.Период = ЭкземплярРеглОтчета.ДатаОкончания;
				Сумма.ОКАТО  = ОКТМО;
				Сумма.КБК    = СтрокаМнЧ.Данные.П00001М102003;
				Сумма.Сумма  = СтрокаМнЧ.Данные.П00001М103003;
				
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2007Кв1" Тогда
		
		// Раздел 1
		// 010 - КБК
		// 020 - ОКАТО
		// 030 - сумма
		
		Если ДанныеРеглОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел1") Тогда
			
			Раздел1 = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
			
			Период = ЭкземплярРеглОтчета.ДатаОкончания;
			
			Сумма = ТаблицаДанныхРеглОтчета.Добавить();
			Сумма.Период = Период;
			Сумма.КБК    = Раздел1.КБК1;
			Сумма.ОКАТО  = Раздел1.КодОКАТО1;
			Сумма.Сумма  = Раздел1.СуммаНалога25Число1;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20070101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2006-11-14', "146н", "ФормаОтчета2007Кв1", , '20071231');
	ОпределитьФорматВДеревеФормИФорматов(Форма20070101, "3.00002");
	
	Форма20080101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2007-12-20', "142н", "ФормаОтчета2007Кв1", '20080101', );
	ОпределитьФорматВДеревеФормИФорматов(Форма20080101, "3.00003", , , , '2009-12-31');
	ОпределитьФорматВДеревеФормИФорматов(Форма20080101, "3.00004", , , '2010-01-01', '2012-12-31');
	ОпределитьФорматВДеревеФормИФорматов(Форма20080101, "3.00005");
	ОпределитьФорматВДеревеФормИФорматов(Форма20080101, "3.00006");
	ОпределитьФорматВДеревеФормИФорматов(Форма20080101, "3.00007");
	
	Форма20180801 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2018-02-15', "ММВ-7-3/95@", "ФормаОтчета2018Кв3");
	ОпределитьФорматВДеревеФормИФорматов(Форма20180801, "5.01");
	
	Форма2020Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2020-09-25', "ЕД-7-3/696@", "ФормаОтчета2020Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма2020Кв1, "5.01");
	
	Форма2022Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2022-08-26', "ЕД-7-3/778@", "ФормаОтчета2022Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2022Кв4, "5.02");
	
	Форма2025Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151074", '2024-10-02', "ЕД-7-3/815@", "ФормаОтчета2025Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма2025Кв1, "5.03");
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "",
			ИмяОбъекта = "", ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

#КонецОбласти

#Область ПоказателиОценкиРискаВыезднойНалоговойПроверки

Процедура ПоказателиОценкиРискаВыезднойНалоговойПроверки(ТаблицаПоказателей, ОписаниеОтчета) Экспорт 
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	ОТЧ = Новый ОписаниеТипов("Число");
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв3" Тогда
		
		Если СведенияОтчета.Свойство("ОкружениеСохранения") Тогда // отчет сохранен в 2.0
		Иначе
			ДанныеМногострочнойЧастиРаздела1
			= СведенияОтчета.ДанныеМногоуровневыхРазделов["Раздел1"].Строки[0].ДанныеМногострочныхЧастей["П00001М1"];
			Для Каждого СтрокаМнЧ Из ДанныеМногострочнойЧастиРаздела1.Строки Цикл
				ЗначениеПоказателя = ЗначениеПоказателя + СтрокаМнЧ.Данные.П00001М103003 - СтрокаМнЧ.Данные.П00001М104003;
			КонецЦикла;
		КонецЕсли;
		
	Иначе // "ФормаОтчета2007Кв1"
		
		Раздел1 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		
		// Конвертация данных при переходе с 2.0 на 3.0.
		ОтчетСформированВ20 = Ложь;
		Для Каждого Показатель Из Раздел1 Цикл
			ИмяПоказателя = Показатель.Ключ;
			Если ИмяПоказателя = "СуммаНалога25Число1_1" Тогда
				ОтчетСформированВ20 = Истина;
				СуммаНалога25 = "";
				Для Ном = 1 По 15 Цикл
					СуммаНалога25 = СуммаНалога25 + СокрЛП(Раздел1["СуммаНалога25Число1_" + Ном]);
				КонецЦикла;
				Если ЗначениеЗаполнено(СуммаНалога25) Тогда
					СуммаНалога25 = Число(СуммаНалога25);
				Иначе
					СуммаНалога25 = 0;
				КонецЕсли;
			ИначеЕсли ИмяПоказателя = "СуммаНалога15Число1_1" Тогда
				ОтчетСформированВ20 = Истина;
				СуммаНалога15 = "";
				Для Ном = 1 По 15 Цикл
					СуммаНалога15 = СуммаНалога15 + СокрЛП(Раздел1["СуммаНалога15Число1_" + Ном]);
				КонецЦикла;
				Если ЗначениеЗаполнено(СуммаНалога15) Тогда
					СуммаНалога15 = Число(СуммаНалога15);
				Иначе
					СуммаНалога15 = 0;
				КонецЕсли;
			ИначеЕсли ИмяПоказателя = "СуммаНалогаКУменьшению1_1" Тогда
				ОтчетСформированВ20 = Истина;
				СуммаНалогаКУменьшению = "";
				Для Ном = 1 По 15 Цикл
					СуммаНалогаКУменьшению = СуммаНалогаКУменьшению + СокрЛП(Раздел1["СуммаНалогаКУменьшению1_" + Ном]);
				КонецЦикла;
				Если ЗначениеЗаполнено(СуммаНалогаКУменьшению) Тогда
					СуммаНалогаКУменьшению = Число(СуммаНалогаКУменьшению);
				Иначе
					СуммаНалогаКУменьшению = 0;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Если ОтчетСформированВ20 Тогда
			ЗначениеПоказателя = СуммаНалога25 + СуммаНалога15 - СуммаНалогаКУменьшению;
		Иначе
			ЗначениеПоказателя = ОТЧ.ПривестиЗначение(РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "СуммаНалога25Число1"))
			+ ОТЧ.ПривестиЗначение(РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "СуммаНалога15Число1"))
			- ОТЧ.ПривестиЗначение(РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "СуммаНалогаКУменьшению1"));
		КонецЕсли;
		
	КонецЕсли;
	
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "СуммаАкцизовНаТабачныеИзделия";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли