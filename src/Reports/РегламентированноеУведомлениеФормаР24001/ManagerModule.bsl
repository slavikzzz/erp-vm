#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	ИмяФормы = Неопределено;
	Если НЕ Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда
		ИмяФормы = "Форма2024_1";
	КонецЕсли;
	
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат СоздатьЗаполненноеУведомление_Форма2024_1(Параметры, СуществующийДокументСсылка);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы) Экспорт
	СоответствиеПоказателей = Новый Структура;
	
	Если ИмяФормы = "Форма2020_4" Или ИмяФормы = "Форма2024_1" Тогда
		ЗаполнитьСоответствиеРеквизитамАдреса_Форма2024_1(СоответствиеПоказателей);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
	
	Возврат СоответствиеПоказателей;
КонецФункции

Функция ДоступнаПечатьPDF417(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат Истина;
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_4" Или ИмяФормы = "Форма2024_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2024_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении(
				"При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ПроверитьДокумент():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ПроверитьДокумент():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияОтчета

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2024_1();
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2024_1()
	
	ДеревоСтраниц = НовоеДеревоСтраниц();
	
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист А";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница2";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Б";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница3";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист В";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница4";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьВ010107");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Г";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница5";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Д стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница6";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД1";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьД010102");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Д стр. 2";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница7";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД2";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьД010202");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Е";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2024_1_Страница8";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ";
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Функция НовоеДеревоСтраниц()
	
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, КонтейнерВходящий, КонтейнерРезультат) Экспорт
	Если ИмяФормы = "Форма2020_4" Или ИмяФормы = "Форма2024_1" Тогда
		ДобавитьМногострочныеЧасти_Форма2024_1(КонтейнерРезультат);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ИнициализироватьМногострочныеЧасти():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ИнициализироватьМногострочныеЧасти():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецПроцедуры

Процедура ДобавитьМногострочныеЧасти_Форма2024_1(КонтейнерРезультат)
	
	ИмяРеквизита = "МногострочнаяЧастьВ010107";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("В01010701", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	ТаблицаМСЧ.Колонки.Добавить("В01010702", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(255)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьД010102";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("Д01010200", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(8)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьД010202";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("Д01020200", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(8)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы = Ложь) Экспорт
	Если Объект.ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
	ИначеЕсли Объект.ИмяФормы = "Форма2020_4" Или Объект.ИмяФормы = "Форма2024_1" Тогда
		Возврат СформироватьСписокЛистовФорма2024_1(Объект, ЕстьВыходЗаГраницы);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
		
		Если Стр.ИДНаименования = "ЛистЕ1" Или Стр.ИДНаименования = "ЛистЕ2" Тогда
			Если Стр.ИДНаименования = "ЛистЕ1" Тогда
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			Иначе
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть2;
			КонецЕсли;
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
			
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
				И Не УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
				Продолжить;
			КонецЕсли;
			
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000, "А01010000", МакетПФ.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			ВсегоНапечатаноСтрок = 1;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда
					Продолжить;
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+ВсегоНапечатаноСтрок, МакетПФ.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
				Если ВсегоНапечатаноСтрок = 57 Тогда
					ПечатнаяФорма.Вывести(МакетПФ);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					
					ВсегоНапечатаноСтрок = 1;
					НомСтр = НомСтр + 1;
					МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
				КонецЕсли;
			КонецЦикла;
			
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
		Иначе
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
			
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НомСтр = НомСтр + 1;
				Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
					Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда
						Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(КЗ.Ключ) Тогда
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
						Иначе 
							УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области);
						КонецЕсли;
					ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда
						УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
					КонецЕсли;
				КонецЦикла;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
				ПечатнаяФорма.Вывести(МакетПФ);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Функция СформироватьСписокЛистовФорма2024_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистВ" Тогда
			ВывестиБланк2024_1_ЛистВ(СтруктураПараметров, Стр, ЕстьВыходЗаГраницы, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
		ИначеЕсли Стр.ИДНаименования = "ЛистД1" Тогда
			ВывестиБланк2024_1_ЛистД1(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
		ИначеЕсли Стр.ИДНаименования = "ЛистД2" Тогда
			ВывестиБланк2024_1_ЛистД2(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
		Иначе
			ВывестиПростойБланк(СтруктураПараметров, Стр, ЕстьВыходЗаГраницы, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Процедура ВывестиПростойБланк(СтруктураПараметров, Стр, ЕстьВыходЗаГраницы, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
		НомСтр = НомСтр + 1;
		
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			ВывестиПоказательНаБланк(КЗ.Ключ, КЗ.Значение, МакетПФ, ЕстьВыходЗаГраницы)
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", МакетПФ.Области);
		ПечатнаяФорма.Вывести(МакетПФ);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиБланк2024_1_ЛистВ(СтруктураПараметров, Стр, ЕстьВыходЗаГраницы, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьВ010107;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
	НомСтр = НомСтр + 1;
	
	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		ВывестиПоказательНаБланк(КЗ.Ключ, КЗ.Значение, МакетПФ, ЕстьВыходЗаГраницы)
	КонецЦикла;
	
	Для Каждого СтрокаМСЧ Из МногострочнаяЧасть Цикл
		НомерСтроки = МногострочнаяЧасть.Индекс(СтрокаМСЧ) + 1;
		Если НомерСтроки > 3 Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого Колонка Из МногострочнаяЧасть.Колонки Цикл
			ИмяПоказателя = Колонка.Имя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки);
			ЗначениеПоказателя = СтрокаМСЧ[Колонка.Имя];
			ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", МакетПФ.Области);
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиБланк2024_1_ЛистД1(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьД010102;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
		И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
	НомСтр = НомСтр + 1;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].Д01010100, "Д01010100", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг.Д01010200) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг.Д01010200, "Д01010200_"+РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиБланк2024_1_ЛистД2(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьД010202;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
		И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
	НомСтр = НомСтр + 1;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].Д01020100, "Д01020100", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг.Д01020200) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг.Д01020200, "Д01020200_"+РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы)
	
	Если ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(ИмяПоказателя) Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеПредставление

Процедура Проверить_Форма2024_1(Данные, УникальныйИдентификатор)
	
	ПроверкаПоказателейФормыНеТребуется = Истина;
	
КонецПроцедуры

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	ЗаполнитьДанными_Форма2024_1(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(Объект.Дата, "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	Проверить_Форма2024_1(Данные, УникальныйИдентификатор);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура ЗаполнитьДанными_Форма2024_1(Объект, Параметры, ДеревоВыгрузки)
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_Форма2024_1(Параметры, ДанныеУведомления);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
КонецПроцедуры

Процедура ДополнитьПараметры_Форма2024_1(Параметры, ВсеДанные)
	
	Лист001 = ВсеДанные.ДанныеУведомления.Лист001;
	ДобавитьПризнакиНаличияФИО(Лист001, "П0101020");
	
	ЛистА = ВсеДанные.ДанныеУведомления.ЛистА;
	ДобавитьПризнакиНаличияФИО(ЛистА, "А0101010", Истина);
	ДобавитьПризнакиНаличияФИО(ЛистА, "А0101020", Истина);
	
	ЛистБ = ВсеДанные.ДанныеУведомления.ЛистБ;
	ДобавитьПолныйКодПодразделения(ЛистБ, "Б0101050");
	
	ЛистВ = ВсеДанные.ДанныеУведомления.ЛистВ;
	МногострочнаяЧастьВ010107 = ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьВ010107;
	ДобавитьПоказателиМСЧ(ЛистВ, МногострочнаяЧастьВ010107);
	
	// Сделать многострочные части видимыми для общих механизмов выгрузки.
	ВсеДанные.Вставить("МногострочнаяЧастьД010102",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьД010102);
	ВсеДанные.Вставить("МногострочнаяЧастьД010202",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьД010202);
	
КонецПроцедуры

Процедура ДобавитьПризнакиНаличияФИО(ДанныеРаздела, Префикс, ТолькоЗаполненные = Ложь)
	
	ПоказательФ = Префикс + "1";
	ПоказательИ = Префикс + "2";
	ПоказательО = Префикс + "3";
	
	ФИОЗаполнено =  ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]);
	
	Если ТолькоЗаполненные И НЕ ФИОЗаполнено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательФ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательИ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательО, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]), "", "1"));
	
КонецПроцедуры

Процедура ДобавитьПолныйКодПодразделения(ДанныеРаздела, Префикс)
	
	КодПодразделения = "";
	Если ЗначениеЗаполнено(ДанныеРаздела[Префикс + "1"]) ИЛИ ЗначениеЗаполнено(ДанныеРаздела[Префикс + "2"]) Тогда
		КодПодразделения = ДанныеРаздела[Префикс + "1"] + "-" + ДанныеРаздела[Префикс + "2"];
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(Префикс, 2) + "0", КодПодразделения);
	
КонецПроцедуры

Процедура ДобавитьПоказателиМСЧ(ДанныеРаздела, МСЧ)
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаМСЧ Из МСЧ Цикл
		СтрокаЗаполнена = Ложь;
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			СтрокаЗаполнена = СтрокаЗаполнена
				ИЛИ КолонкаМСЧ.Имя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[КолонкаМСЧ.Имя]);
		КонецЦикла;
		
		Если НЕ СтрокаЗаполнена Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ДанныеРаздела.Вставить(ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки), СтрокаМСЧ[ИмяПоказателя]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда
		ДатаДокумента = Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)),
			Число(Сред(СведенияОтправки.ДатаДок, 4, 2)),
			Число(Лев(СведенияОтправки.ДатаДок, 2)));
		ДатаФормированияФайла = Формат(ДатаДокумента, "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R24001";
	ИдПолучателя = "0000_0000";
	ИдОтправителя = "000000000000000";
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ПрефиксИмениФайла = Префикс + "_" + ИдПолучателя + "_" + ИдОтправителя + "_"
	                  + ДатаФормированияФайла + "_" + ИдентификационныйНомер;
	
	Возврат ПрефиксИмениФайла;
	
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2024_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор)
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2024_1",
		"СхемаВыгрузкиФорма2024_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	
	Лист001 = Данные.ДанныеУведомления.Лист001;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(Лист001, ТаблицаОшибок, "Лист001", "П01010100", Истина, Ложь);
	Если Не ЗначениеЗаполнено(Лист001.П01020100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код причины представления сведений", "Лист001", "П01020100"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Лист001.П01030100) И ЗначениеЗаполнено(Лист001.П01030200) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код", "Лист001", "П01030100"));
	КонецЕсли;
	
	ЛистА = Данные.ДанныеУведомления.ЛистА;
	РегистрационныеФормы.Проверка_СвРожд("А01030100,А01030200", ЛистА, ТаблицаОшибок, "ЛистА");
	РегистрационныеФормы.Проверка_СвГражд("А01040100,А01040200", ЛистА, ТаблицаОшибок, "ЛистА");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистА, ТаблицаОшибок, "ЛистА", "А01040200", Ложь);
	
	ЛистБ = Данные.ДанныеУведомления.ЛистБ;
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистБ) Тогда 
		РегистрационныеФормы.Проверка_УдЛичнФЛ(
			"Б01010100,Б01010200,Б01010300,Б01010400,Б01010501,Б01010502", ЛистБ, ТаблицаОшибок, "ЛистБ");
	КонецЕсли;
	
	ЛистВ = Данные.ДанныеУведомления.ЛистВ;
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистВ) Тогда
		РегистрационныеФормы.Проверка_Адрес("В01010100,В01010201,В01010202", ЛистВ, ТаблицаОшибок, "ЛистВ");
		
		Инд = 0;
		Для Каждого Стр Из Данные.МногострочныеЧасти.МногострочнаяЧастьВ010107 Цикл 
			Инд = Инд + 1;
			ИндСтр = "_" + Инд;
			
			Если ЗначениеЗаполнено(Стр["В01010701"]) И Не ЗначениеЗаполнено(Стр["В01010702"]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер", "ЛистВ", "В01010702" + ИндСтр));
			ИначеЕсли Не ЗначениеЗаполнено(Стр["В01010701"]) И ЗначениеЗаполнено(Стр["В01010702"]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан тип", "ЛистВ", "В01010701" + ИндСтр));
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	ЛистГ = Данные.ДанныеУведомления.ЛистГ;
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистГ) Тогда
		РегистрационныеФормы.Проверка_УдЛичнФЛ(
			"Г01010100,Г01010200,Г01010300,Г01010400", ЛистГ, ТаблицаОшибок, "ЛистГ", Истина);
		Если Не ЗначениеЗаполнено(ЛистГ.Г01010501) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак срока действия", "ЛистГ", "Г01010501"));
		ИначеЕсли ЛистГ.Г01010100 = "1" И ЛистГ.Г01010501 <> "2" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"для вида на жительство признак срока действия должен быть равен 2", "ЛистГ", "Г01010501"));
		КонецЕсли;
		Если ЛистГ.Г01010501 = "1" И ЗначениеЗаполнено(ЛистГ.Г01010502) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При бессрочном сроке действия срок не указывается", "ЛистГ", "Г01010502"));
		ИначеЕсли ЛистГ.Г01010501 = "2" И Не ЗначениеЗаполнено(ЛистГ.Г01010502) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Необходимо указать срок действия", "ЛистГ", "Г01010502"));
		КонецЕсли;
	КонецЕсли;
	
	ЛистД1 = Данные.ДанныеУведомления.ЛистД1;
	Если ЗначениеЗаполнено(ЛистД1.Д01010100)
		И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(ЛистД1.Д01010100) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Некорректно заполнен ОКВЭД", "ЛистД1", "Д01010100"));
	КонецЕсли;
	
	Инд = 0;
	Для Каждого Стр Из Данные.МногострочныеЧасти.МногострочнаяЧастьД010102 Цикл 
		Инд = Инд + 1;
		Если ЗначениеЗаполнено(Стр["Д01010200"]) И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(Стр["Д01010200"]) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Некорректно заполнен ОКВЭД", "ЛистД1", "Д01010200_" + Формат(Инд, "ЧГ=")));
		КонецЕсли;
	КонецЦикла;
	
	ЛистД2 = Данные.ДанныеУведомления.ЛистД2;
	Если ЗначениеЗаполнено(ЛистД2.Д01020100)
		И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(ЛистД2.Д01020100) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Некорректно заполнен ОКВЭД", "ЛистД2", "Д01020100"));
	КонецЕсли;
	
	Инд = 0;
	Для Каждого Стр Из Данные.МногострочныеЧасти.МногострочнаяЧастьД010202 Цикл 
		Инд = Инд + 1;
		Если ЗначениеЗаполнено(Стр["Д01020200"]) И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(Стр["Д01020200"]) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Некорректно заполнен ОКВЭД", "ЛистД2", "Д01020200_" + Формат(Инд, "ЧГ=")));
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

#КонецОбласти

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт
	Возврат Ложь;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт
	
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	ПолноеОписаниеФормы = Результат.Добавить();
	ПолноеОписаниеФормы.ИмяФормы = "Форма2024_1";
	ПолноеОписаниеФормы.ОписаниеФормы = "В редакции приказа ФНС России от 09.01.2024 № ЕД-7-14/4@";
	ПолноеОписаниеФормы.ДатаНачала = '2024-02-18';
	ПолноеОписаниеФормы.ДатаКонца  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат Результат;
	
КонецФункции

Функция ДанныеУведомления(ЭкземплярУведомления) Экспорт
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("СпособРегистрации", "");
	СтруктураДанных.Вставить("ОсновнойКодОКВЭД", "");
	СтруктураДанных.Вставить("ПрежнийОсновнойКодОКВЭД", "");
	
	Возврат СтруктураДанных;
КонецФункции

Процедура СохранитьДанныеПомощника(Уведомление, ДанныеПомощникаЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	ДанныеУведомления = УведомлениеОбъект.ДанныеУведомления.Получить();
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") Тогда
		ДанныеУведомления.Вставить("ДанныеПомощникаЗаполнения", ДанныеПомощникаЗаполнения);
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	Попытка
		УведомлениеОбъект.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

Функция СоздатьЗаполненноеУведомление_Форма2024_1(Параметры, СуществующийДокументСсылка = Неопределено)
	
	ИмяФормы = "Форма2024_1";
	
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР24001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	ИнициализироватьМногострочныеЧасти(ИмяФормы, ВходящийКонтейнер, РезультатКонтейнер2);
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(РезультатКонтейнер1.ДанныеУведомления);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", Параметры.ДополнительныеПараметры);
	ПараметрыОтчета.Вставить("ИмяФормы", ИмяФормы);
	
	Контейнер = Новый Структура;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеУведомления Цикл
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		Контейнер.Вставить(КЗ.Ключ, КЗ.Значение);
	КонецЦикла;
	
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	Для Каждого КЗ Из Контейнер Цикл
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		РезультатКонтейнер2[КЗ.Ключ] = Контейнер[КЗ.Ключ];
	КонецЦикла;
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
		И СуществующийДокументСсылка.Свойство("Ссылка")
		И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда
		
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
		И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР24001;
	КонецЕсли;
	
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("ДанныеУведомления", РезультатКонтейнер1.ДанныеУведомления);
	ДанныеОтчета.Вставить("ДеревоСтраниц", Дерево);
	
	ДанныеОтчета.Вставить("МногострочныеЧасти", Новый Структура);
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		ДанныеОтчета.МногострочныеЧасти.Вставить(
			КЗ.Ключ, РезультатКонтейнер2[КЗ.Ключ]);
	КонецЦикла;
	
	ДатаСоставления = Неопределено;
	Если Параметры.ДополнительныеПараметры.Свойство("ДатаСоставления", ДатаСоставления)
	   И ЗначениеЗаполнено(ДатаСоставления) Тогда
		НовыйДок.Дата = ДатаСоставления;
	Иначе
		НовыйДок.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	НовыйДок.ДатаПодписи = НовыйДок.Дата;
	НовыйДок.ИмяФормы = ИмяФормы;
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеОтчета);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
	
КонецФункции

Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2024_1(СоответствиеПоказателей)
	
	СоответствиеПоказателей.Вставить("ВИ1010100", "ИдентификаторАдресногоОбъекта");
	СоответствиеПоказателей.Вставить("ВД1010100", "СтрокаАдресногоОбъекта");
	
	СоответствиеПоказателей.Вставить("В01010100", "КодРегиона");
	СоответствиеПоказателей.Вставить("В01010201", "МуниципальныйРайонВид");
	СоответствиеПоказателей.Вставить("В01010202", "МуниципальныйРайон");
	СоответствиеПоказателей.Вставить("В01010301", "ПоселениеВид");
	СоответствиеПоказателей.Вставить("В01010302", "Поселение");
	СоответствиеПоказателей.Вставить("В01010401", "НаселенныйПунктВид");
	СоответствиеПоказателей.Вставить("В01010402", "НаселенныйПункт");
	СоответствиеПоказателей.Вставить("В01010501", "ТерриторияТип");
	СоответствиеПоказателей.Вставить("В01010502", "Территория");
	СоответствиеПоказателей.Вставить("В01010601", "УлицаТип");
	СоответствиеПоказателей.Вставить("В01010602", "Улица");
	СоответствиеПоказателей.Вставить("В01010801", "ПомещениеВЗданииТип");
	СоответствиеПоказателей.Вставить("В01010802", "ПомещениеВЗданииНомер");
	СоответствиеПоказателей.Вставить("В01010901", "ПомещениеВКвартиреТип");
	СоответствиеПоказателей.Вставить("В01010902", "ПомещениеВКвартиреНомер");
	
	Здания = Новый Массив;
	Здания.Добавить("Здания");
	Здания.Добавить(Новый Структура("В01010701, В01010702", "ЗданиеТип", "ЗданиеНомер"));
	СоответствиеПоказателей.Вставить("В010107", Здания);
	
КонецПроцедуры

Функция СведенияИзФормРегистрации(ИмяФормы, ДанныеУведомления) Экспорт
	Если ИмяФормы = "Форма2020_4" Или ИмяФормы = "Форма2024_1" Тогда
		Результат = Новый Структура;
		Результат.Вставить("КодЗаявления", "Р24001");
		Данные = ДанныеУведомления.Получить();
		
		Лист001 = Данные.ДанныеУведомления.Лист001;
		Результат.Вставить("ОГРНИП", Лист001.П01010100);
		Результат.Вставить("Фамилия", Лист001.П01010201);
		Результат.Вставить("Имя", Лист001.П01010202);
		Результат.Вставить("Отчество", Лист001.П01010203);
		
		Результат.Вставить("Заявители", Новый Массив);
		
		СвЗаяв = Новый Структура;
		СвЗаяв.Вставить("Фамилия", Лист001.П01010201);
		СвЗаяв.Вставить("Имя", Лист001.П01010202);
		СвЗаяв.Вставить("Отчество", Лист001.П01010203);
		СвЗаяв.Вставить("ЭлектроннаяПочта", Данные.ДанныеУведомления.ЛистЕ.Е01020100);
		Результат.Заявители.Добавить(СвЗаяв);
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2024_1" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2024_1"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1112502_5.03000_08.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецЕсли
