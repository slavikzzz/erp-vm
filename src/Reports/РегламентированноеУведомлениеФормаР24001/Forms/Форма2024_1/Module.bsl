#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Данные = Неопределено;
	ПараметрыЗаполнения = Неопределено;
	Параметры.Свойство("Данные", Данные);
	Параметры.Свойство("ПараметрыЗаполнения", ПараметрыЗаполнения);
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР24001;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2024_1");
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		УведомлениеОСпецрежимахНалогообложения.ЗагрузитьДанныеПростогоУведомления(ЭтотОбъект, Данные, ПредставлениеУведомления)
	ИначеЕсли Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		Объект.Организация = Параметры.Ключ.Организация;
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		Объект.Организация = Параметры.ЗначениеКопирования.Организация;
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	Иначе
		Параметры.Свойство("Организация", Объект.Организация);
		СформироватьДеревоСтраниц();
		
		ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", ИмяФормы, РеквизитФормыВЗначение("ДеревоСтраниц"));
		РезультатКонтейнер = Новый Структура;
		УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер, Истина);
		Для Каждого КЗ Из РезультатКонтейнер Цикл
			ЭтотОбъект[КЗ.Ключ] = КЗ.Значение;
		КонецЦикла;
		
		РезультатКонтейнер.Очистить();
		
		ИнициализироватьМногострочныеЧасти(ВходящийКонтейнер, РезультатКонтейнер);
		
		Для Каждого КЗ Из РезультатКонтейнер Цикл
			ЗначениеВРеквизитФормы(КЗ.Значение, КЗ.Ключ);
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ЭтотОбъект["ДанныеУведомления"], ЭтотОбъект["ДанныеМногостраничныхРазделов"]);
		
	КонецЕсли;
	
	Если Параметры.СформироватьФормуОтчетаАвтоматически Тогда
		ЗаполнитьАвтоНаСервере(ПараметрыЗаполнения);
	КонецЕсли;
	
	Если Параметры.СформироватьПечатнуюФорму Тогда
		Модифицированность = Истина;
		СохранитьДанные();
		Отказ = Истина;
		Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
			РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
		КонецЕсли;
		
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект, "РегистрацияЮЛФНС");
	
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		СохраненныеДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
		УведомлениеЗаполненоВПомощнике = СохраненныеДанныеУведомления.Свойство("ДанныеПомощникаЗаполнения") 
			И ТипЗнч(СохраненныеДанныеУведомления.ДанныеПомощникаЗаполнения) = Тип("Структура")
			И ЗначениеЗаполнено(СохраненныеДанныеУведомления.ДанныеПомощникаЗаполнения);
	Иначе
		УведомлениеЗаполненоВПомощнике = Ложь;
	КонецЕсли;
	
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(
		ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", , Объект.Ссылка);
	
КонецПроцедуры

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", Объект.Организация, Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(
			ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.РегистрацияЮЛФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "РегистрацияЮЛФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "РегистрацияЮЛФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент,
	НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "РегистрацияЮЛФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета);
	Если Элемент.ТекущиеДанные.Многострочность Тогда
		Для Каждого СтрокаМСЧ Из Элемент.ТекущиеДанные.МногострочныеЧасти Цикл
			ИмяМСЧ = СтрокаМСЧ.Значение;
			ВывестиМногострочнуюЧасть(ИмяМСЧ);
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	
	ИмяОбласти = Область.Имя;
	
	Если СтрЧислоВхождений(ИмяОбласти, "ДобавитьСтроку") > 0 Тогда
		ДобавитьСтроку(Неопределено);
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	ИначеЕсли СтрЧислоВхождений(ИмяОбласти, "УдалитьСтроку") > 0 Тогда
		УдалитьСтроку(Неопределено);
		СтандартнаяОбработка = Ложь;
		Модифицированность = Истина;
		Возврат;
	КонецЕсли;
	
	Если ЭтотОбъект["РучнойВвод"] Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка);
	
	Если СтрНайти(ИмяОбласти, "В0101") = 1 Тогда
		ОбработкаАдреса(Область, СтандартнаяОбработка);
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область);
	Если СтрНачинаетсяС(Область.Имя, "Д01010200_") Тогда 
		Постфикс = Число(СтрЗаменить(Область.Имя, "Д01010200_", ""));
		МногострочнаяЧастьД010102[Постфикс-1].Д01010200 = Область.Значение;
		Модифицированность = Истина;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "Д01020200_") Тогда 
		Постфикс = Число(СтрЗаменить(Область.Имя, "Д01020200_", ""));
		МногострочнаяЧастьД010202[Постфикс-1].Д01020200 = Область.Значение;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизации(Элемент)
	
	Область = Элемент.ТекущаяОбласть;
	ИмяОбласти = Область.Имя;
	
	Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьКодОКСМ.Доступность = ЭтоОбластьОКСМ(Область);
	НастроитьКонтекстноеМенюПредставленияУведомления(ИмяОбласти);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	СохранитьНаКлиенте();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", , Объект.Ссылка);
	Закрыть(Неопределено);
	
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "РегистрацияЮЛФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(
		ЭтотОбъект, "РегистрацияЮЛФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьКодОКСМ(Команда)
	
	ПредставлениеУведомления.ТекущаяОбласть.Значение = "";
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(
		ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть);
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ЕстьВыходЗаГраницы = Ложь;
	ПечатьБРОНаСервере(ЕстьВыходЗаГраницы);
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов,
		Новый Структура("ЕстьВыходЗаГраницы", ЕстьВыходЗаГраницы));
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	Если ДоступнаПечатьPDF417(ИмяФормы) Тогда
		РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
	Иначе
		ТекстПредупреждения = НСтр("ru = 'Печать формы со штрихкодом PDF417 будет реализована в будущих версиях программы.';
									|en = 'Печать формы со штрихкодом PDF417 будет реализована в будущих версиях программы.'");
		ПоказатьПредупреждение( , ТекстПредупреждения);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	
	СохранитьНаКлиенте();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", , Объект.Ссылка);
	
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	Область = Элементы.ПредставлениеУведомления.ТекущаяОбласть;
	ИмяОбласти = Область.Имя;
	
	Если СтрНайти(ИмяОбласти, "ДобавитьСтроку") = 1 Тогда
		ИмяОбластиДобавленияСтроки = ИмяОбласти;
		ИдМСЧ = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
		ИдМСЧ = СтрЗаменить(ИдМСЧ, "Значок", "");
	Иначе
		ПолноеИмяМСЧ = ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ИмяОбласти);
		ИдМСЧ = ИдМСЧ(ПолноеИмяМСЧ);
		ИмяОбластиДобавленияСтроки = "ДобавитьСтроку" + ИдМСЧ;
	КонецЕсли;
	
	ПроверкаМаксимумаСтрок = ПроверитьДостижениеМаксимальногоКоличестваСтрок(ИдМСЧ);
	
	Если ПроверкаМаксимумаСтрок.ДостигнутМаксимум Тогда
		ПоказатьПредупреждение( , ПроверкаМаксимумаСтрок.ТекстПредупреждения);
	Иначе
		ДобавитьСтрокуНаСервере(ИмяОбластиДобавленияСтроки);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Асинх Процедура УдалитьСтроку(Команда)
	Область = Элементы.ПредставлениеУведомления.ТекущаяОбласть;
	ИмяОбласти = Область.Имя;
	
	Если СтрНайти(ИмяОбласти, "УдалитьСтроку") = 1 Тогда
		ИмяОбластиУдаленияСтроки = ИмяОбласти;
	Иначе
		ПолноеИмяМСЧ = ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ИмяОбласти);
		ИдМСЧ = ИдМСЧ(ПолноеИмяМСЧ);
		Постфикс = Сред(ИмяОбласти, СтрНайти(ИмяОбласти, "_"));
		ИмяОбластиУдаленияСтроки = "УдалитьСтроку" + ИдМСЧ + Постфикс;
	КонецЕсли;
	
	Если НЕ ПредставлениеУведомления.Области[ИмяОбластиУдаленияСтроки].Гиперссылка Тогда
		Возврат;
	КонецЕсли;
	
	Если Ждать ВопросАсинх("Удалить выбранную строку?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		УдалитьСтрокуНаСервере(ИмяОбластиУдаленияСтроки);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область УправлениеЭлементамиФормы

&НаКлиенте
Процедура НастроитьКонтекстноеМенюПредставленияУведомления(ИмяОбласти)
	
	ЭтоПоказательМСЧ = СтрНайти(ИмяОбласти, "В010107") = 1
	               ИЛИ СтрНайти(ИмяОбласти, "Д010102") = 1
	               ИЛИ СтрНайти(ИмяОбласти, "Д010202") = 1;
	
	ЭтоЕдинственнаяСтрока = Истина;
	Если ЭтоПоказательМСЧ Тогда
		ИмяБезПостфикса = Лев(ИмяОбласти, СтрНайти(ИмяОбласти, "_") - 1);
		ИмяПоказателяВторойСтроки = ИмяБезПостфикса + "_2";
		ЭтоЕдинственнаяСтрока = (ПредставлениеУведомления.Области.Найти(ИмяПоказателяВторойСтроки) = Неопределено);
	КонецЕсли;
	
	Элементы.ПредставлениеУведомленияКонтекстноеМенюДобавитьСтроку.Доступность = ЭтоПоказательМСЧ;
	Элементы.ПредставлениеУведомленияКонтекстноеМенюУдалитьСтроку.Доступность =
		ЭтоПоказательМСЧ И НЕ ЭтоЕдинственнаяСтрока;
	
КонецПроцедуры

#КонецОбласти

#Область Многострочность

&НаСервере
Процедура ДобавитьСтрокуНаСервере(ИмяОбласти)
	
	ИдМСЧ = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
	ИдМСЧ = СтрЗаменить(ИдМСЧ, "Значок", "");
	ПолноеИмяМСЧ = "МногострочнаяЧасть" + ИдМСЧ;
	
	ЭтотОбъект[ПолноеИмяМСЧ].Добавить();
	ТаблицаМСЧ = РеквизитФормыВЗначение(ПолноеИмяМСЧ);
	НомерНовойСтроки = ТаблицаМСЧ.Количество();
	
	ИсходныйМакетРаздела = МакетОтчетаСодержащийМСЧ(ПолноеИмяМСЧ);
	ОбластьМСЧ = ИсходныйМакетРаздела.ПолучитьОбласть(ПолноеИмяМСЧ);
	Для Каждого КолонкаМСЧ Из ТаблицаМСЧ.Колонки Цикл
		ИмяПоказателя = КолонкаМСЧ.Имя;
		ОбластьПоказателя = ОбластьМСЧ.Область(ИмяПоказателя + "_1");
		ОбластьПоказателя.Имя = ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерНовойСтроки);
	КонецЦикла;
	ОбластьУдаленияСтроки = ОбластьМСЧ.Область("УдалитьСтроку" + ИдМСЧ + "_1");
	ОбластьУдаленияСтроки.Имя = "УдалитьСтроку" + ИдМСЧ + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерНовойСтроки);
	
	ПозицияВставки = ПредставлениеУведомления.Область(ИмяОбласти).Верх;
	
	ПредставлениеУведомления.ВставитьОбласть(
		ОбластьМСЧ.Область(1, , ОбластьМСЧ.ВысотаТаблицы),
		ПредставлениеУведомления.Область(ПозицияВставки, , ПозицияВставки, ),
		ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	УстановитьВидимостьУдаленияПервойСтроки(ИдМСЧ);
	
	ИмяОбластиДляАктивации = ТаблицаМСЧ.Колонки[0].Имя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерНовойСтроки);
	Элементы.ПредставлениеУведомления.ТекущаяОбласть = ПредставлениеУведомления.Область(ИмяОбластиДляАктивации);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтрокуНаСервере(ИмяОбласти)
	
	ИмяБезПостфикса = Лев(ИмяОбласти, СтрНайти(ИмяОбласти, "_") - 1);
	ИдМСЧ = СтрЗаменить(ИмяБезПостфикса, "УдалитьСтроку", "");
	ПолноеИмяМСЧ = "МногострочнаяЧасть" + ИдМСЧ;
	НомерСтроки = Число(Сред(ИмяОбласти, СтрНайти(ИмяОбласти, "_") + 1));
	
	МногострочнаяЧасть = ЭтотОбъект[ПолноеИмяМСЧ];
	
	Если МногострочнаяЧасть.Количество() <= 1 Тогда
		Возврат;
	КонецЕсли;
	
	МногострочнаяЧасть.Удалить(НомерСтроки - 1);
	
	// Обрабатываются только многострочные части с высотой 2 строки
	// и показателями, расположенными в одной строке.
	ВысотаБлокаМСЧ = 2;
	НомерСтрокиМакета = ПредставлениеУведомления.Область(ИмяОбласти).Верх;
	УдаляемаяОбласть = ПредставлениеУведомления.Область(НомерСтрокиМакета, , НомерСтрокиМакета + ВысотаБлокаМСЧ -1, );
	ПредставлениеУведомления.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	ТаблицаМСЧ = РеквизитФормыВЗначение(ПолноеИмяМСЧ);
	
	Пока Истина Цикл
		ОбластьУдаленияСтроки = ПредставлениеУведомления.Области.Найти(
			"УдалитьСтроку" + ИдМСЧ + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки + 1));
		Если ОбластьУдаленияСтроки = Неопределено Тогда
			Прервать;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из ТаблицаМСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ОбластьПоказателя = ПредставлениеУведомления.Область(ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки + 1));
			ОбластьПоказателя.Имя = ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки);
		КонецЦикла;
		ОбластьУдаленияСтроки.Имя = "УдалитьСтроку" + ИдМСЧ + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки);
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
	УстановитьВидимостьУдаленияПервойСтроки(ИдМСЧ);
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМногострочнуюЧасть(ПолноеИмяМСЧ)
	
	ИдМСЧ = ИдМСЧ(ПолноеИмяМСЧ);
	ТаблицаМСЧ = РеквизитФормыВЗначение(ПолноеИмяМСЧ);
	ИсходныйМакетРаздела = МакетОтчетаСодержащийМСЧ(ПолноеИмяМСЧ);
	ПромежуточныйМакет = Новый ТабличныйДокумент;
	
	Инд = 1;
	Для Каждого Стр Из ЭтотОбъект[ПолноеИмяМСЧ] Цикл
		ОбластьМСЧ = ИсходныйМакетРаздела.ПолучитьОбласть(ПолноеИмяМСЧ);
		Для Каждого КолонкаМСЧ Из ТаблицаМСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ОбластьПоказателя = ОбластьМСЧ.Область(ИмяПоказателя + "_1");
			ОбластьПоказателя.Имя = ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(Инд);
			ОбластьПоказателя.Значение = Стр[ИмяПоказателя];
		КонецЦикла;
		
		ОбластьУдаленияСтроки = ОбластьМСЧ.Область("УдалитьСтроку" + ИдМСЧ + "_1");
		ОбластьУдаленияСтроки.Имя = "УдалитьСтроку" + ИдМСЧ + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(Инд);
		
		ПромежуточныйМакет.Вывести(ОбластьМСЧ);
		Инд = Инд + 1;
		
	КонецЦикла;
	
	ИсходнаяОбластьМСЧ = ПредставлениеУведомления.Область(ПолноеИмяМСЧ);
	ПозицияВставки = ИсходнаяОбластьМСЧ.Верх;
	
	ПредставлениеУведомления.УдалитьОбласть(ИсходнаяОбластьМСЧ, ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	ПредставлениеУведомления.ВставитьОбласть(
		ПромежуточныйМакет.Область(1, , ПромежуточныйМакет.ВысотаТаблицы),
		ПредставлениеУведомления.Область(ПозицияВставки, , ПозицияВставки, ),
		ТипСмещенияТабличногоДокумента.ПоВертикали);
	
	УстановитьВидимостьУдаленияПервойСтроки(ИдМСЧ);
	УведомлениеОСпецрежимахНалогообложения.ПозиционироватьсяНаЯчейке(ЭтотОбъект);
	Возврат;
	
КонецПроцедуры

&НаСервере
Функция МакетОтчетаСодержащийМСЧ(ПолноеИмяМСЧ)
	
	Если ПолноеИмяМСЧ = "МногострочнаяЧастьВ010107" Тогда
		Возврат УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, "Форма2024_1_Страница4");
		
	ИначеЕсли ПолноеИмяМСЧ = "МногострочнаяЧастьД010102" Тогда
		Возврат УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, "Форма2024_1_Страница6");
		
	ИначеЕсли ПолноеИмяМСЧ = "МногострочнаяЧастьД010202" Тогда
		Возврат УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, "Форма2024_1_Страница7");
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция МакетОтчетаСодержащийМСЧ():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция МакетОтчетаСодержащийМСЧ():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция ИдМСЧ(ПолноеИмяМСЧ)
	
	Если ПолноеИмяМСЧ = "МногострочнаяЧастьВ010107" Тогда
		Возврат "В010107";
		
	ИначеЕсли ПолноеИмяМСЧ = "МногострочнаяЧастьД010102" Тогда
		Возврат "Д010102";
		
	ИначеЕсли ПолноеИмяМСЧ = "МногострочнаяЧастьД010202" Тогда
		Возврат "Д010202";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ИдМСЧ():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ИдМСЧ():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ИмяОбласти) Экспорт
	
	ИмяБезПостфикса = Лев(ИмяОбласти, СтрНайти(ИмяОбласти, "_") - 1);
	
	Если ИмяБезПостфикса = "В01010701" ИЛИ ИмяБезПостфикса = "В01010702" Тогда
		Возврат "МногострочнаяЧастьВ010107";
		
	ИначеЕсли ИмяБезПостфикса = "Д01010200" Тогда
		Возврат "МногострочнаяЧастьД010102";
		
	ИначеЕсли ИмяБезПостфикса = "Д01020200" Тогда
		Возврат "МногострочнаяЧастьД010202";
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура УстановитьВидимостьУдаленияПервойСтроки(ИдМСЧ)
	
	ТаблицаМСЧ = ЭтотОбъект["МногострочнаяЧасть" + ИдМСЧ];
	УдалениеВозможно = (ТаблицаМСЧ.Количество() >= 2);
	
	ОбластьУдаленияСтроки = ПредставлениеУведомления.Область("УдалитьСтроку" + ИдМСЧ + "_1");
	ОбластьУдаленияСтроки.Гиперссылка = УдалениеВозможно;
	ОбластьУдаленияСтроки.Текст = ?(УдалениеВозможно, "х", "");
	
КонецПроцедуры

&НаКлиенте
Функция ПроверитьДостижениеМаксимальногоКоличестваСтрок(ИдМСЧ)
	
	Результат = Новый Структура("ДостигнутМаксимум, ТекстПредупреждения", Ложь, "");
	
	Если ИдМСЧ = "В010107" Тогда
		ИмяПредельногоПоказателя = "В01010701_3";
		Если ПредставлениеУведомления.Области.Найти(ИмяПредельногоПоказателя) <> Неопределено Тогда
			Результат.ДостигнутМаксимум = Истина;
			Результат.ТекстПредупреждения = НСтр("ru = 'Допускается не более 3 строк с указанием здания/сооружения';
												|en = 'Допускается не более 3 строк с указанием здания/сооружения'");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область ВводАдресаФИАС

&НаКлиенте
Процедура ОбработкаАдреса(Область, СтандартнаяОбработка) Экспорт
	
	// Эмуляция механизма многострочных частей из налоговой отчетности.
	СтруктураРеквизитовФормы_СтруктураМногострочныхЧастей = Новый Структура;
	ИменаГраф = Новый Массив;
	ИменаГраф.Добавить("В01010701");
	ИменаГраф.Добавить("В01010702");
	ИменаПодчиненныхГрупп = Новый Массив;
	СтруктураРеквизитовФормы_СтруктураМногострочныхЧастей.Вставить("В010107",
		Новый Структура("ИменаГраф, ИсхКолСтрок, УровеньПодчинения, ИменаПодчиненныхГрупп",
			ИменаГраф, 1, 0, ИменаПодчиненныхГрупп));
	
	СтандартнаяОбработка = Ложь;
	
	СоответствиеПоказателейСтраницыРеквизитамАдреса = СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы);
	
	ПараметрыОпределенияАдреса = Новый Структура;
	ПараметрыОпределенияАдреса.Вставить("СтруктураМногострочныхЧастей",
		СтруктураРеквизитовФормы_СтруктураМногострочныхЧастей);
	ПараметрыОпределенияАдреса.Вставить("СоответствиеПоказателейСтраницыРеквизитамАдреса",
		СоответствиеПоказателейСтраницыРеквизитамАдреса);
	
	ПоляАдресаВJSON = "";
	Для Каждого Элем Из СоответствиеПоказателейСтраницыРеквизитамАдреса Цикл
		Если Элем.Значение = "СтрокаАдресногоОбъекта" Тогда
			ПоляАдресаВJSON = ПредставлениеУведомления.Области[Элем.Ключ].Значение;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", "Ввод адреса");
	ПараметрыФормы.Вставить("ЗначенияПолей", ПоляАдресаВJSON);
	ПараметрыФормы.Вставить("ВидКонтактнойИнформации", УведомлениеОСпецрежимахНалогообложенияКлиент.ВидКонтактнойИнформацииАдресСПроверкой());
	
	ДополнительныеПараметры = Новый Структура;
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуКонтактнойИнформацииЗавершение",
		ЭтотОбъект, ДополнительныеПараметры);
	
	ОбщегоНазначенияКлиент.ОбщийМодуль("УправлениеКонтактнойИнформациейКлиент").ОткрытьФормуКонтактнойИнформации(
		ПараметрыФормы, , Оповещение);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуКонтактнойИнформацииЗавершение(Результат, Параметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	ОбновитьАдресВМестеХранения(Результат);
	
	Элемент= Элементы.ДеревоСтраниц;
	
	ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета);
	Если Элемент.ТекущиеДанные.Многострочность Тогда
		Для Каждого СтрокаМСЧ Из Элемент.ТекущиеДанные.МногострочныеЧасти Цикл
			ИмяМСЧ = СтрокаМСЧ.Значение;
			ВывестиМногострочнуюЧасть(ИмяМСЧ);
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьАдресВМестеХранения(Результат)
	
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("Адрес", Результат.Значение);
	ПараметрыЗаполнения.Вставить("СоответствиеПоказателейСтраницыРеквизитамАдреса",
		СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы));
	ПараметрыЗаполнения.Вставить("ВерсияАдреса", 2);
	
	ВиртуальноеДеревоРазделов = Новый ДеревоЗначений;
	ВиртуальноеДеревоРазделов.Колонки.Добавить("Данные");
	ВиртуальноеДеревоРазделов.Колонки.Добавить("ДанныеМногострочныхЧастей");
	
	ВиртуальнаяВеткаРаздела = ВиртуальноеДеревоРазделов.Строки.Добавить();
	ВиртуальнаяВеткаРаздела.Данные = ЭтотОбъект["ДанныеУведомления"].ЛистВ;
	ВиртуальнаяВеткаРаздела.ДанныеМногострочныхЧастей = Новый Структура("В010107", МногострочнаяЧастьВ010107);
	
	ЗаполнитьАдресВФорматеФИАСНаСтраницеРеглОтчета(ВиртуальнаяВеткаРаздела, ПараметрыЗаполнения);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАдресВФорматеФИАСНаСтраницеРеглОтчета(СтраницаРаздела, ПараметрыЗаполнения)
	
	СоответствиеПоказателейСтраницыРеквизитамАдреса = ПараметрыЗаполнения.СоответствиеПоказателейСтраницыРеквизитамАдреса;
	
	ДополнительныеПараметры = Неопределено;
	Если ПараметрыЗаполнения.Свойство("ВерсияАдреса") Тогда
		ДополнительныеПараметры = Новый Структура("ВерсияАдреса", ПараметрыЗаполнения.ВерсияАдреса);
	КонецЕсли;
	
	СтруктураАдреса = УведомлениеОСпецрежимахНалогообложения.АдресВФорматеФИАС(
		ПараметрыЗаполнения.Адрес, ДополнительныеПараметры);
	
	ДанныеСтраницы = СтраницаРаздела.Данные;
	
	Для Каждого Элем Из СоответствиеПоказателейСтраницыРеквизитамАдреса Цикл
		Если ДанныеСтраницы.Свойство(Элем.Ключ) Тогда
			ДанныеСтраницы.Вставить(Элем.Ключ, СтруктураАдреса[Элем.Значение]);
			
		ИначеЕсли СтраницаРаздела.ДанныеМногострочныхЧастей.Свойство(Элем.Ключ)
			И ТипЗнч(Элем.Значение) = Тип("Массив") И Элем.Значение.Количество() >= 2
			И ТипЗнч(Элем.Значение[0]) = Тип("Строка") И ЗначениеЗаполнено(Элем.Значение[0])
			И СтруктураАдреса.Свойство(Элем.Значение[0]) И ТипЗнч(СтруктураАдреса[Элем.Значение[0]]) = Тип("Массив")
			И ТипЗнч(Элем.Значение[1]) = Тип("Структура") Тогда
			
			ДанныеМСЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[Элем.Ключ];
			ДанныеМСЧ.Очистить();
			
			СоответствиеМногострочнойЧастиМножественномуРеквизитуАдреса = Элем.Значение[1];
			
			МножественныйРеквизитАдреса = СтруктураАдреса[Элем.Значение[0]];
			
			Для Каждого РеквизитАдреса Из МножественныйРеквизитАдреса Цикл
				СтрокаМногострочнойЧасти = ДанныеМСЧ.Добавить();
				Для Каждого ЭлемСоответствия Из СоответствиеМногострочнойЧастиМножественномуРеквизитуАдреса Цикл
					СтрокаМногострочнойЧасти[ЭлемСоответствия.Ключ] = РеквизитАдреса[ЭлемСоответствия.Значение];
				КонецЦикла;
			КонецЦикла;
			
			Если ДанныеМСЧ.Количество() = 0 Тогда
				СтрокаМногострочнойЧасти = ДанныеМСЧ.Добавить();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ИнтерфейсОбращенияКМодулюМенеджераИОбъекта

&НаСервере
Процедура ИнициализироватьМногострочныеЧасти(КонтейнерВходящий, КонтейнерРезультат) Экспорт
	Отчеты[Объект.ИмяОтчета].ИнициализироватьМногострочныеЧасти(Объект.ИмяФормы, КонтейнерВходящий, КонтейнерРезультат);
КонецПроцедуры

&НаСервереБезКонтекста
Функция СоответствиеПоказателейСтраницыРеквизитамАдреса(ПолноеИмяФормы)
	Возврат Отчеты[РегламентированнаяОтчетностьКлиентСервер.ИмяОтчета(ПолноеИмяФормы)].СоответствиеПоказателейСтраницыРеквизитамАдреса(
		РегламентированнаяОтчетностьКлиентСервер.ИмяФормыОтчета(ПолноеИмяФормы));
КонецФункции

&НаСервереБезКонтекста
Функция ДоступнаПечатьPDF417(ПолноеИмяФормы)
	Возврат Отчеты[РегламентированнаяОтчетностьКлиентСервер.ИмяОтчета(ПолноеИмяФормы)].ДоступнаПечатьPDF417(
		РегламентированнаяОтчетностьКлиентСервер.ИмяФормыОтчета(ПолноеИмяФормы));
КонецФункции

#КонецОбласти

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	
	СформироватьДеревоСтраниц();
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", ИмяФормы, РеквизитФормыВЗначение("ДеревоСтраниц"));
	РезультатКонтейнер = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер, Истина);
	Для Каждого КЗ Из РезультатКонтейнер Цикл
		ЭтотОбъект[КЗ.Ключ] = КЗ.Значение;
	КонецЦикла;
	
	РезультатКонтейнер.Очистить();
	ИнициализироватьМногострочныеЧасти(ВходящийКонтейнер, РезультатКонтейнер);
	Для Каждого КЗ Из РезультатКонтейнер Цикл
		ЗначениеВРеквизитФормы(КЗ.Значение, КЗ.Ключ);
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьАвтоНаСервере(ПараметрыЗаполнения = Неопределено)
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", Объект.Организация);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", ПараметрыЗаполнения);
	
	Контейнер = НовыйКонтейнерДляАвтозаполнения();
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(Объект.ИмяОтчета, Объект.ИмяФормы, ПараметрыОтчета, Контейнер);
	ЗагрузитьПодготовленныеДанные(Контейнер);
КонецПроцедуры

&НаСервере
Функция НовыйКонтейнерДляАвтозаполнения()
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ЭтотОбъект["ДанныеУведомления"] Цикл
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные(Контейнер)
	Для Каждого КЗ Из Контейнер Цикл
		Если ЭтотОбъект["ДанныеУведомления"].Свойство(КЗ.Ключ) Тогда
			ЗаполнитьЗначенияСвойств(ЭтотОбъект["ДанныеУведомления"][КЗ.Ключ], КЗ.Значение);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".");
	ДС = Отчеты[Разложение[1]].СформироватьДеревоСтраниц(Разложение[3]);
	ЗначениеВРеквизитФормы(ДС, "ДеревоСтраниц");
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета)
	ПредставлениеУведомления.Очистить();
	ПредставлениеУведомления.Вывести(УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета));
	
	Если НЕ ОбщегоНазначения.РежимОтладки()
	   И ПредставлениеУведомления.Области.Найти("СкрытьПриОткрытии") <> Неопределено Тогда
		СкрываемаяОбласть = ПредставлениеУведомления.Область("СкрытьПриОткрытии");
		СкрываемаяОбласть.Видимость = Ложь;
	КонецЕсли;
	
	СтрДанных = ЭтотОбъект["ДанныеУведомления"][ЭтотОбъект["ТекущееИДНаименования"]];
	Для Каждого Обл Из ПредставлениеУведомления.Области Цикл
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
		   И Обл.СодержитЗначение Тогда
			СтрДанных.Свойство(Обл.Имя, Обл.Значение);
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПозиционироватьсяНаЯчейке(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	СтруктураПараметров.Вставить("ДанныеПомощникаЗаполнения", Новый Структура);
	СтруктураПараметров.Вставить("МногострочныеЧасти", Новый Структура);
	СтруктураПараметров.МногострочныеЧасти.Вставить(
		"МногострочнаяЧастьВ010107", РеквизитФормыВЗначение("МногострочнаяЧастьВ010107"));
	СтруктураПараметров.МногострочныеЧасти.Вставить(
		"МногострочнаяЧастьД010102", РеквизитФормыВЗначение("МногострочнаяЧастьД010102"));
	СтруктураПараметров.МногострочныеЧасти.Вставить(
		"МногострочнаяЧастьД010202", РеквизитФормыВЗначение("МногострочнаяЧастьД010202"));
	
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
	УведомлениеЗаполненоВПомощнике = Ложь;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
	
	Для Каждого МСЧ Из СтруктураПараметров.МногострочныеЧасти Цикл
		ПолноеИмяМСЧ = МСЧ.Ключ;
		ТаблицаМСЧ = МСЧ.Значение;
		Если ТаблицаМСЧ.Количество() = 0 Тогда
			ТаблицаМСЧ.Добавить();
		КонецЕсли;
		ЭтотОбъект[ПолноеИмяМСЧ].Загрузить(ТаблицаМСЧ);
	КонецЦикла;
	
	ДобавитьНедостающиеПоказатели();
КонецПроцедуры

&НаСервере
Процедура ДобавитьНедостающиеПоказатели()
	
	ЛистВ = ЭтотОбъект["ДанныеУведомления"].ЛистВ;
	
	Если НЕ ЛистВ.Свойство("ВД1010100") Тогда
		ЛистВ.Вставить("ВД1010100", "");
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	
	Если Область.Имя = "А01040200" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистА" Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаКлиенте
Процедура ПредварительныйПросмотрЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		СохранитьДанные();
		МассивПечати = Новый Массив;
		МассивПечати.Добавить(Объект.Ссылка);
		УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
			"Документ.УведомлениеОСпецрежимахНалогообложения",
			"Уведомление", МассивПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
	
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	Если Модифицированность И УведомлениеЗаполненоВПомощнике Тогда
		Оповестить("ЗакрытьПомощникВнесенияИзмененийЕГР", Объект.Ссылка);
	КонецЕсли;
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере(ЕстьВыходЗаГраницы)
	ЕстьВыходЗаГраницы = Ложь;
	СохранитьДанные();
	ЭтотОбъект["СтруктураРеквизитовУведомления"] = Новый Структура("СписокПечатаемыхЛистов",
		Отчеты[Объект.ИмяОтчета].СформироватьСписокЛистов(Объект.Ссылка, ЕстьВыходЗаГраницы));
КонецПроцедуры

&НаКлиенте
Процедура УведомлениеЗаполненоВПомощникеОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	Если НавигационнаяСсылкаФорматированнойСтроки = "ВнесениеИзмененийЕГР" Тогда
		СтандартнаяОбработка = Ложь;
		
		МодульРегистрацияОрганизацииКлиентСервер = ОбщегоНазначенияКлиент.ОбщийМодуль("РегистрацияОрганизацииКлиентСервер");
		ПараметрыПомощника = МодульРегистрацияОрганизацииКлиентСервер.НовыеПараметрыПомощникаВнесенияИзменений();
		ПараметрыПомощника.Организация = Объект.Организация;
		ПараметрыПомощника.КонтекстныйВызов = Истина;
		
		МодульРегистрацияОрганизацииКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("РегистрацияОрганизацииКлиент");
		МодульРегистрацияОрганизацииКлиент.ОткрытьПомощникВнесенияИзменений(ПараметрыПомощника);
		
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗакрытьУведомлениеЗаполненоВПомощникеНажатие(Элемент)
	УведомлениеЗаполненоВПомощнике = Ложь;
	УправлениеФормой(ЭтотОбъект);
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УправлениеФормой(Форма)
	Форма.Элементы.ГруппаУведомлениеИзПомощника.Видимость = Форма.УведомлениеЗаполненоВПомощнике;
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
