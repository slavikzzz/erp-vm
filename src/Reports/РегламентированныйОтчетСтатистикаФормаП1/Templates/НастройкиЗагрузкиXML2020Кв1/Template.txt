// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код", "s1"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.ЗначениеПоУмолчанию = "";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код", "s2"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.ЗначениеПоУмолчанию = "";
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section[@code='2']/row[@code='21']/@code");
	Для Каждого ТекущийУзел Из НайденныеУзлы Цикл
		ТекущийУзел.ЗначениеПоУмолчанию = "21";
	КонецЦикла;
	
	НайденныеСтроки = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section[@code='5']/row");
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		УзелРаздела = СтрокаДерева.Родитель;
		Если СтрокаДерева.Многострочность = Истина Тогда
			УзелРаздела.Обязательность = "ОП";
		Иначе
			УзелРаздела.Строки.Удалить(СтрокаДерева);
		КонецЕсли;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	ФормаОтчета = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаФормаОтчета", ФормаОтчета);
	Если ФормаОтчета <> Неопределено Тогда
		
		ЗначениеПараметра = Неопределено;
		
		П.ПараметрыОтчета.Свойство("Зн_П000101503", ЗначениеПараметра);
		ФормаОтчета.Вставить("П000101503", ?(ЧислоИзСтроки(ЗначениеПараметра) = 15, "V", ""));
		ФормаОтчета.Вставить("П000101603", ?(ЧислоИзСтроки(ЗначениеПараметра) = 16, "V", ""));
		
		П.ПараметрыОтчета.Свойство("Зн_П000101703", ЗначениеПараметра);
		ФормаОтчета.Вставить("П000101703", ?(ЧислоИзСтроки(ЗначениеПараметра) = 17, "V", ""));
		ФормаОтчета.Вставить("П000101803", ?(ЧислоИзСтроки(ЗначениеПараметра) = 18, "V", ""));
		
		ФормаОтчета.Вставить("П000202102_1", "21");
		
		ГруппыРаздел5 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section[@code='5']/row");
		НомерСтроки = 1;
		Для НомСтроки = 1 По ГруппыРаздел5.Количество() Цикл
			ГруппаРаздела = ГруппыРаздел5[НомСтроки - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(ГруппаРаздела, П.ДанныеОтчета, П.ПараметрыОтчета, , , НомерСтроки);
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти