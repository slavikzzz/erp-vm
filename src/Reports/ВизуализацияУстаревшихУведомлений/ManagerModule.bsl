#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "Уведомление") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(КоллекцияПечатныхФорм, "Уведомление", МассивОбъектов[0].ВидУведомления, 
			ПечатьУведомления(МассивОбъектов, ОбъектыПечати));
	КонецЕсли;
КонецПроцедуры

Функция ПечатьУведомления(МассивОбъектов, ОбъектыПечати)
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(МассивОбъектов[0], "Ссылка, ИмяОтчета, ИмяФормы, ДанныеУведомления,
		|ПодписантФамилия, ПодписантИмя, ПодписантОтчество, ДатаПодписи");
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеЕНВД1" Тогда
		Возврат ПечатьУведомленияЕНВД1(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеЕНВД2" Тогда
		Возврат ПечатьУведомленияЕНВД2(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеЕНВД3" Тогда
		Возврат ПечатьУведомленияЕНВД3(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеЕНВД4" Тогда
		Возврат ПечатьУведомленияЕНВД4(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеРеорганизацияЛиквидация" Тогда
		Возврат ПечатьУведомленияРеорганизацияЛиквидация(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеРанееПредставленныеДокументы" Тогда
		Возврат ПечатьУведомленияРанееПредставленныеДокументы(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	Если Реквизиты.ИмяОтчета = "РегламентированноеУведомлениеСообщениеОбУчастии" Тогда
		Возврат ПечатьРегламентированноеУведомлениеСообщениеОбУчастии(Реквизиты, ОбъектыПечати);
	КонецЕсли;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьМакет("ПечатьВСледующихВерсиях"));
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПечатнаяФорма, 1, ОбъектыПечати, Реквизиты.Ссылка);
	Возврат ПечатнаяФорма;
КонецФункции

Функция СформироватьСписокЛистов(Ссылка) Экспорт
	Объект = Ссылка.ПолучитьОбъект();
	Если Объект.ИмяФормы = "Форма2022_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеВозвратЕНП" Тогда 
		Возврат СписокЛистов_ВозвратЕНП(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2020_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеЗаявлениеНаСубсидиюПрофилактика" Тогда 
		Возврат СписокЛистов_ЗаявлениеНаСубсидиюПрофилактика(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2020_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеЗаявлениеНаСубсидиюДляЗарплаты" Тогда 
		Возврат СписокЛистов_ЗаявлениеНаСубсидиюДляЗарплаты(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2022_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеОсобыйПорядокУплатыНалогов" Тогда 
		Возврат СписокЛистов_ОсобыйПорядокУплатыНалогов(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2023_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеОтсрочкаСтраховыеВзносы" Тогда 
		Возврат СписокЛистов_ОтсрочкаСтраховыеВзносы(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2021_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеСубсидияПострадавшимМСП" Тогда 
		Возврат СписокЛистов_СубсидияПострадавшимМСП(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2021_2" И Объект.ИмяОтчета = "РегламентированноеУведомлениеСубсидияПострадавшимМСП" Тогда 
		Возврат СписокЛистов_СубсидияПоПостановлению1513(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2014_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеФормаР14001" Тогда 
		Возврат СписокЛистов_ФормаР14001(Объект);
	КонецЕсли;
	Если Объект.ИмяФормы = "Форма2014_1" И Объект.ИмяОтчета = "РегламентированноеУведомлениеФормаР13001" Тогда 
		Возврат СписокЛистов_ФормаР13001(Объект);
	КонецЕсли;
КонецФункции

Функция ИнформацияДляПечати() Экспорт 
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(128));
	ОписаниеТиповБулево = Новый ОписаниеТипов("Булево");
	
	Результат = Новый ТаблицаЗначений;
	Результат.Колонки.Добавить("ИмяФормы", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ИмяОтчета", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ПечатьБСП", ОписаниеТиповБулево);
	Результат.Колонки.Добавить("МенеджерПечати", ОписаниеТиповСтрока);
	Результат.Колонки.Добавить("ЗаголовокФормы", ОписаниеТиповСтрока);
	
	МакетДанных = Отчеты["ВизуализацияУстаревшихУведомлений"].ПолучитьМакет("ИнформацияДляПечати");
	ОбластьДанные = МакетДанных.Области.Найти("Данные");
	Для Инд = ОбластьДанные.Верх По ОбластьДанные.Низ Цикл
		ИмяФормы = МакетДанных.Область(Инд, 1, Инд, 1).Текст;
		Если Не ЗначениеЗаполнено(ИмяФормы) Тогда 
			Прервать;
		КонецЕсли;
		
		НовСтр = Результат.Добавить();
		НовСтр.ИмяФормы = ИмяФормы;
		НовСтр.ИмяОтчета = МакетДанных.Область(Инд, 2, Инд, 2).Текст;
		НовСтр.ПечатьБСП = ОписаниеТиповБулево.ПривестиЗначение(МакетДанных.Область(Инд, 3, Инд, 3).Текст);
		НовСтр.МенеджерПечати = МакетДанных.Область(Инд, 4, Инд, 4).Текст;
		НовСтр.ЗаголовокФормы = МакетДанных.Область(Инд, 5, Инд, 5).Текст;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция РедакцияУдалена(ИмяОтчета, ИмяФормы) Экспорт 
	Возврат ЗначениеЗаполнено(УведомлениеОСпецрежимахНалогообложенияПовтИсп.ТаблицаУдаленныхОтчетовИФорм().НайтиСтроки(
		Новый Структура("ИмяОтчета, ИмяФормы", ИмяОтчета, ИмяФормы)));
КонецФункции

Функция ИнформацияДляПечатиУведомления(Ссылка) Экспорт 
	ИнформацияДляПечати = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Ссылка, "ИмяОтчета,ИмяФормы,Организация");
	ИнформацияДляПечати.Вставить("МенеджерПечати");
	ИнформацияДляПечати.Вставить("СписокПечатаемыхЛистов");
	ИнформацияДляПечати.Вставить("ЗаголовокФормы");
	
	ДанныеМакета = Отчеты["ВизуализацияУстаревшихУведомлений"].ИнформацияДляПечати();
	НайденныеСтроки = ДанныеМакета.НайтиСтроки(Новый Структура("ИмяФормы, ИмяОтчета", ИнформацияДляПечати.ИмяФормы, ИнформацияДляПечати.ИмяОтчета));
	Если ЗначениеЗаполнено(НайденныеСтроки) Тогда 
		Информация = НайденныеСтроки[0];
		ИнформацияДляПечати.Вставить("ПечатьБСП", Информация.ПечатьБСП);
		Если Информация.ПечатьБСП Тогда 
			ИнформацияДляПечати.Вставить("МенеджерПечати", Информация.МенеджерПечати);
		Иначе
			ИнформацияДляПечати.Вставить("ЗаголовокФормы", Информация.ЗаголовокФормы + " (" + ИнформацияДляПечати.Организация + ")");
			ИнформацияДляПечати.Вставить("СписокПечатаемыхЛистов", ОбщегоНазначения.ОбщийМодуль(Информация.МенеджерПечати).СформироватьСписокЛистов(Ссылка));
		КонецЕсли;
		Возврат ИнформацияДляПечати;
	КонецЕсли;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПечатьУведомленияЕНВД1(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	МакетУведомления = СписокИспользуемыхМакетов["Печать_MXL_ЕНВД1"];
	ОбластьТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ОбластьОграничители = МакетУведомления.ПолучитьОбласть("Ограничители");
	ОбластьПустаяСтрока = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки = Новый Массив;
	МассивДляПроверки.Добавить(ОбластьПустаяСтрока);
	МассивДляПроверки.Добавить(ОбластьОграничители);
	
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.ТитульныйЛист[0];
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН1_", ОбластьТитульный.Области, 10);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_КПП, "КПП1_", ОбластьТитульный.Области, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_НО, "КОД_НО_", ОбластьТитульный.Области, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_РЕЗИДЕНТА, "КОД_РЕЗИДЕНТА_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ОРГАНИЗАЦИЯ, "НаимОрг_", ОбластьТитульный.Области, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ОГРН, "ОГРН_", ОбластьТитульный.Области, 13);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПРИМЕНЕНЕНИ_ЕНВД, "ДАТА_ПРИМЕНЕНЕНИ_ЕНВД_", ОбластьТитульный.Области);	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_СТРАНИЦ, "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_ЛИСТОВ, "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ПРИЗНАК_НП_ПОДВАЛ, "ПРИЗНАК_НП_ПОДВАЛ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантФамилия, "ОргПодписантФамилия_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантИмя, "ОргПодписантИмя_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ИНН_ПРЕДСТАВИТЕЛЯ, "ИНН_ПРЕДСТАВИТЕЛЯ_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ТЕЛЕФОН, "Телефон_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокУпПред_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ОбластьТитульный.Области);
	
	ПечатнаяФорма.Вывести(ОбластьТитульный);
	ПечатнаяФорма.Вывести(ОбластьОграничители);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьПодвалДопЛист = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки[1] = ОбластьПодвалДопЛист;
	
	Страница = 1;
	Для Каждого ДопЛист Из СтруктураПараметров.Лист2 Цикл 
		ОбластьДопЛист = МакетУведомления.ПолучитьОбласть("Приложение");
		ОбластиМакета = ОбластьДопЛист.Области;
		Страница = Страница + 1;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН2_", ОбластиМакета, 10);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_КПП, "КПП2_", ОбластиМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "НомСтр1_", ОбластиМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Страница, "НомСтр1_", ОбластиМакета, 3);
		
		Для Инд = 1 по 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд], "КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ИНДЕКС" + Инд], "ИНДЕКС" + Инд + "_", ОбластиМакета, 6); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РЕГИОН" + Инд], "РЕГИОН" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РАЙОН" + Инд], "РАЙОН" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ГОРОД" + Инд], "ГОРОД" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["НаселенныйПункт" + Инд], "НаселенныйПункт" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Улица" + Инд], "Улица" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Дом" + Инд], "Дом" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Корпус" + Инд], "Корпус" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Квартира" + Инд], "Квартира" + Инд + "_", ОбластиМакета, 8); 
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОбластьДопЛист);
		ПечатнаяФорма.Вывести(ОбластьОграничители);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПечатнаяФорма, 1, ОбъектыПечати, Реквизиты.Ссылка);
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьУведомленияЕНВД2(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	МакетУведомления = СписокИспользуемыхМакетов["Печать_MXL_ЕНВД2"];
	ОбластьТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ОбластьОграничители = МакетУведомления.ПолучитьОбласть("Ограничители");
	ОбластьПустаяСтрока = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки = Новый Массив;
	МассивДляПроверки.Добавить(ОбластьПустаяСтрока);
	МассивДляПроверки.Добавить(ОбластьОграничители);
	
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.ТитульныйЛист[0];
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН1_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_НО, "КОД_НО_", ОбластьТитульный.Области, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Фамилия_ИП, "Фамилия_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Имя_ИП, "Имя_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Отчество_ИП, "Отчество_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ОГРНИП, "ОГРН_", ОбластьТитульный.Области, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПРИМЕНЕНЕНИ_ЕНВД, "ДАТА_ПРИМЕНЕНЕНИ_ЕНВД_", ОбластьТитульный.Области);	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_СТРАНИЦ, "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_ЛИСТОВ, "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ПРИЗНАК_НП_ПОДВАЛ, "ПРИЗНАК_НП_ПОДВАЛ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантФамилия, "ОргПодписантФамилия_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантИмя, "ОргПодписантИмя_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ИНН_ПРЕДСТАВИТЕЛЯ, "ИНН_ПРЕДСТАВИТЕЛЯ_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ТЕЛЕФОН, "Телефон_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокУпПред_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ОбластьТитульный.Области);
	
	ПечатнаяФорма.Вывести(ОбластьТитульный);
	ПечатнаяФорма.Вывести(ОбластьОграничители);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьПодвалДопЛист = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки[1] = ОбластьПодвалДопЛист;
	
	Страница = 1;
	Для Каждого ДопЛист Из СтруктураПараметров.Лист2 Цикл 
		ОбластьДопЛист = МакетУведомления.ПолучитьОбласть("Приложение");
		ОбластиМакета = ОбластьДопЛист.Области;
		Страница = Страница + 1;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН2_", ОбластиМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "НомСтр1_", ОбластиМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Страница, "НомСтр1_", ОбластиМакета, 3);
		
		Для Инд = 1 по 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд], "КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ИНДЕКС" + Инд], "ИНДЕКС" + Инд + "_", ОбластиМакета, 6); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РЕГИОН" + Инд], "РЕГИОН" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РАЙОН" + Инд], "РАЙОН" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ГОРОД" + Инд], "ГОРОД" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["НаселенныйПункт" + Инд], "НаселенныйПункт" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Улица" + Инд], "Улица" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Дом" + Инд], "Дом" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Корпус" + Инд], "Корпус" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Квартира" + Инд], "Квартира" + Инд + "_", ОбластиМакета, 8); 
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОбластьДопЛист);
		ПечатнаяФорма.Вывести(ОбластьОграничители);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПечатнаяФорма, 1, ОбъектыПечати, Реквизиты.Ссылка);
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьУведомленияЕНВД3(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	МакетУведомления = СписокИспользуемыхМакетов["Печать_MXL_ЕНВД3"];
	ОбластьТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ОбластьОграничители = МакетУведомления.ПолучитьОбласть("Ограничители");
	ОбластьПустаяСтрока = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки = Новый Массив;
	МассивДляПроверки.Добавить(ОбластьПустаяСтрока);
	МассивДляПроверки.Добавить(ОбластьОграничители);
	
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.ТитульныйЛист[0];
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН1_", ОбластьТитульный.Области, 10);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_КПП, "КПП1_", ОбластьТитульный.Области, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_НО, "КОД_НО_", ОбластьТитульный.Области, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_ПРИЧИНЫ, "КОД_ПРИЧИНЫ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_РЕЗИДЕНТА, "КОД_РЕЗИДЕНТА_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ОРГАНИЗАЦИЯ, "НаимОрг_", ОбластьТитульный.Области, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ОГРН, "ОГРН_", ОбластьТитульный.Области, 13);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПРЕКРАЩЕНИЯ_ЕНВД, "ДАТА_ПРИМЕНЕНЕНИ_ЕНВД_", ОбластьТитульный.Области);	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_СТРАНИЦ, "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_ЛИСТОВ, "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ПРИЗНАК_НП_ПОДВАЛ, "ПРИЗНАК_НП_ПОДВАЛ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантФамилия, "ОргПодписантФамилия_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантИмя, "ОргПодписантИмя_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ИНН_ПРЕДСТАВИТЕЛЯ, "ИНН_ПРЕДСТАВИТЕЛЯ_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ТЕЛЕФОН, "Телефон_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокУпПред_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ОбластьТитульный.Области);
	
	ПечатнаяФорма.Вывести(ОбластьТитульный);
	ПечатнаяФорма.Вывести(ОбластьОграничители);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьПодвалДопЛист = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки[1] = ОбластьПодвалДопЛист;
	
	Страница = 1;
	Для Каждого ДопЛист Из СтруктураПараметров.Лист2 Цикл 
		ОбластьДопЛист = МакетУведомления.ПолучитьОбласть("Приложение");
		ОбластиМакета = ОбластьДопЛист.Области;
		Страница = Страница + 1;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН2_", ОбластиМакета, 10);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_КПП, "КПП2_", ОбластиМакета, 9);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "НомСтр1_", ОбластиМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Страница, "НомСтр1_", ОбластиМакета, 3);
		
		Для Инд = 1 по 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд], "КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ИНДЕКС" + Инд], "ИНДЕКС" + Инд + "_", ОбластиМакета, 6); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РЕГИОН" + Инд], "РЕГИОН" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РАЙОН" + Инд], "РАЙОН" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ГОРОД" + Инд], "ГОРОД" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["НаселенныйПункт" + Инд], "НаселенныйПункт" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Улица" + Инд], "Улица" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Дом" + Инд], "Дом" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Корпус" + Инд], "Корпус" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Квартира" + Инд], "Квартира" + Инд + "_", ОбластиМакета, 8); 
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОбластьДопЛист);
		ПечатнаяФорма.Вывести(ОбластьОграничители);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПечатнаяФорма, 1, ОбъектыПечати, Реквизиты.Ссылка);
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьУведомленияЕНВД4(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	МакетУведомления = СписокИспользуемыхМакетов["Печать_MXL_ЕНВД4"];
	ОбластьТитульный = МакетУведомления.ПолучитьОбласть("Титульный");
	ОбластьОграничители = МакетУведомления.ПолучитьОбласть("Ограничители");
	ОбластьПустаяСтрока = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки = Новый Массив;
	МассивДляПроверки.Добавить(ОбластьПустаяСтрока);
	МассивДляПроверки.Добавить(ОбластьОграничители);
	
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	Титульный = СтруктураПараметров.ТитульныйЛист[0];
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН1_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_НО, "КОД_НО_", ОбластьТитульный.Области, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.КОД_ПРИЧИНЫ, "КОД_ПРИЧИНЫ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Фамилия_ИП, "Фамилия_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Имя_ИП, "Имя_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.Отчество_ИП, "Отчество_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ОГРНИП, "ОГРН_", ОбластьТитульный.Области, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПРЕКРАЩЕНИЯ_ЕНВД, "ДАТА_ПРИМЕНЕНЕНИ_ЕНВД_", ОбластьТитульный.Области);	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_СТРАНИЦ, "ПРИЛОЖЕНО_СТРАНИЦ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Титульный.ПРИЛОЖЕНО_ЛИСТОВ, "ПРИЛОЖЕНО_ЛИСТОВ_", ОбластьТитульный.Области, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ПРИЗНАК_НП_ПОДВАЛ, "ПРИЗНАК_НП_ПОДВАЛ_", ОбластьТитульный.Области, 1);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантФамилия, "ОргПодписантФамилия_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантИмя, "ОргПодписантИмя_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ИНН_ПРЕДСТАВИТЕЛЯ, "ИНН_ПРЕДСТАВИТЕЛЯ_", ОбластьТитульный.Области, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ТЕЛЕФОН, "Телефон_", ОбластьТитульный.Области, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокУпПред_", ОбластьТитульный.Области, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВОбластиМакета(Титульный.ДАТА_ПОДПИСИ, "ДатаПодписи_", ОбластьТитульный.Области);
	
	ПечатнаяФорма.Вывести(ОбластьТитульный);
	ПечатнаяФорма.Вывести(ОбластьОграничители);
	ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	
	ОбластьПодвалДопЛист = МакетУведомления.ПолучитьОбласть("ПустаяСтрока");
	МассивДляПроверки[1] = ОбластьПодвалДопЛист;
	
	Страница = 1;
	Для Каждого ДопЛист Из СтруктураПараметров.Лист2 Цикл 
		ОбластьДопЛист = МакетУведомления.ПолучитьОбласть("Приложение");
		ОбластиМакета = ОбластьДопЛист.Области;
		Страница = Страница + 1;
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(Титульный.П_ИНН, "ИНН2_", ОбластиМакета, 12);
		Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета("000", "НомСтр1_", ОбластиМакета, 3);
		Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВОбластиМакета(Страница, "НомСтр1_", ОбластиМакета, 3);
		
		Для Инд = 1 по 3 Цикл
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд], "КОД_ВИДА_ДЕЯТЕЛЬНОСТИ" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ИНДЕКС" + Инд], "ИНДЕКС" + Инд + "_", ОбластиМакета, 6); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РЕГИОН" + Инд], "РЕГИОН" + Инд + "_", ОбластиМакета, 2); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["РАЙОН" + Инд], "РАЙОН" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["ГОРОД" + Инд], "ГОРОД" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["НаселенныйПункт" + Инд], "НаселенныйПункт" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Улица" + Инд], "Улица" + Инд + "_", ОбластиМакета, 34); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Дом" + Инд], "Дом" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Корпус" + Инд], "Корпус" + Инд + "_", ОбластиМакета, 8); 
			Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВОбластиМакета(ДопЛист["Квартира" + Инд], "Квартира" + Инд + "_", ОбластиМакета, 8); 
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОбластьДопЛист);
		ПечатнаяФорма.Вывести(ОбластьОграничители);
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЦикла;
	УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ПечатнаяФорма, 1, ОбъектыПечати, Реквизиты.Ссылка);
	
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьУведомленияРеорганизацияЛиквидация(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	ПечатнаяФорма.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_УведомлениеОСпецрежимах_Форма_С_09_4";
	
	МакетУведомления = СписокИспользуемыхМакетов["ПечатьРеорганизацияЛиквидация"];
	ПараметрыМакета = МакетУведомления.Параметры;
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Реквизиты.ДатаПодписи, "ДатаПодписи_", ПараметрыМакета);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантФамилия,  "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантИмя, 	  "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	
	ЗаполнитьЗначенияСвойств(ПараметрыМакета, СтруктураПараметров);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.КПП, "КПП_", ПараметрыМакета, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ИНН, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.НАИМЕНОВАНИЕ_ОРГАНИЗАЦИИ, "ОрганизацияНазвание_", ПараметрыМакета, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 120);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СтруктураПараметров.ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ, "ДАТА_ПРИНЯТИЯ_РЕШЕНИЯ_", ПараметрыМакета);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ОГРН, "ОГРН_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета("000", "ПриложеноЛистов_", ПараметрыМакета, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(СтруктураПараметров.ПРИЛОЖЕНО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ИНН_ПОДПИСАНТА, "ИНН_ПОДПИСАНТА_", ПараметрыМакета, 12);
	
	ПечатнаяФорма.Вывести(МакетУведомления);
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьУведомленияРанееПредставленныеДокументы(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	
	МакетУведомления = СписокИспользуемыхМакетов["РанееПредставленныеДокументы"];
	ОЧ1 = МакетУведомления.ПолучитьОбласть("Ч1");
	ОЧ2 = МакетУведомления.ПолучитьОбласть("Ч2");
	ОЧ3 = МакетУведомления.ПолучитьОбласть("Ч3");
	Титульный = Реквизиты.ДанныеУведомления.Получить().Титульный;
	ЗаполнитьЗначенияСвойств(ОЧ1.Параметры, Титульный);
	ЗаполнитьЗначенияСвойств(ОЧ2.Параметры, Титульный);
	ЗаполнитьЗначенияСвойств(ОЧ3.Параметры, Титульный);
	ПечатнаяФорма.Вывести(ОЧ1);
	Если Не ПечатнаяФорма.ПроверитьВывод(ОЧ2) Тогда 
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ПечатнаяФорма.Вывести(ОЧ2);
	Если Не ПечатнаяФорма.ПроверитьВывод(ОЧ3) Тогда 
		ПечатнаяФорма.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	ПечатнаяФорма.Вывести(ОЧ3);
	Возврат ПечатнаяФорма;
КонецФункции

Функция ПечатьРегламентированноеУведомлениеСообщениеОбУчастии(Реквизиты, ОбъектыПечати)
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБСП");
	
	ПечатнаяФорма = Новый ТабличныйДокумент;
	ПечатнаяФорма.АвтоМасштаб = Истина;
	ПечатнаяФорма.ПолеСверху = 0;
	ПечатнаяФорма.ПолеСнизу = 0;
	ПечатнаяФорма.ПолеСлева = 0;
	ПечатнаяФорма.ПолеСправа = 0;
	
	МакетУведомления = СписокИспользуемыхМакетов["СообщениеОбУчастии"];
	ПараметрыМакета = МакетУведомления.Параметры;
	СтруктураПараметров = Реквизиты.ДанныеУведомления.Получить();
	
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.П_ИНН, "ИНН_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.П_КПП, "КПП_", ПараметрыМакета, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.КОД_НО, "КОД_НО_", ПараметрыМакета, 4);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(СтруктураПараметров.ДАТА_СООБЩЕНИЯ, "ДатаСообщения_", ПараметрыМакета);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ОРГАНИЗАЦИЯ, "ОрганизацияНазвание_", ПараметрыМакета, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.П_ОГРН, "ОГРН_", ПараметрыМакета, 13);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.П_ОГРНИП, "ОГРНИП_", ПараметрыМакета, 15);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.НАИМЕНОВАНИЕ_ЗАВИСИМОЙ_ОРГАНИЗАЦИИ, "ОргУчНазвание_", ПараметрыМакета, 160);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ИНН_ЗАВИСИМОЙ, "ИННУчОрг_", ПараметрыМакета, 10);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.КПП_ЗАВИСИМОЙ, "КППУчОрг_", ПараметрыМакета, 9);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ОКСМ, "ОКСМ_", ПараметрыМакета, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоВПараметрыМакета(СтруктураПараметров.ПРИЛОЖЕНО_ЛИСТОВ, "ПриложеноЛистов_", ПараметрыМакета, 3);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЧислоСРазделителемВПараметрыМакета(СтруктураПараметров.ПРОЦЕНТ_УЧАСТИЯ, 3, 15, "ПроцентУчастия_", ПараметрыМакета);
	ПараметрыМакета.ПризнакСообщения = СтруктураПараметров.ПРИЗНАК_СООБЩЕНИЯ;
	
	ПараметрыМакета.ПризнакПодписанта = СтруктураПараметров.ПРИЗНАК_НП_ПОДВАЛ;
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантФамилия, "ОргПодписантФамилия_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантИмя, "ОргПодписантИмя_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(Реквизиты.ПодписантОтчество, "ОргПодписантОтчество_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ДОКУМЕНТ_ПРЕДСТАВИТЕЛЯ, "ДокументПредставителя_", ПараметрыМакета, 40);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ТЕЛЕФОН, "Телефон_", ПараметрыМакета, 20);
	Документы.УведомлениеОСпецрежимахНалогообложения.СтрокаВПараметрыМакета(СтруктураПараметров.ИНН_ПОДПИСАНТА, "ИНН_ПОДПИСАНТ_", ПараметрыМакета, 12);
	Документы.УведомлениеОСпецрежимахНалогообложения.ДатаВПараметрыМакета(Реквизиты.ДатаПодписи, "ДатаПодписи_", ПараметрыМакета);
	ПараметрыМакета.Email = СтруктураПараметров.EMAIL_ПОДПИСАНТА;
	
	ПечатнаяФорма.Вывести(МакетУведомления);
	Возврат ПечатнаяФорма;
КонецФункции

Функция СписокЛистов_ВозвратЕНП(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, СписокИспользуемыхМакетов["ВозвратЕНП_Титульная"], ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	ЗаявВозврДенСр = СтруктураПараметров.ДанныеУведомления["ЗаявВозврДенСр"];
	Если ЗаявВозврДенСр.ПрПолуч = "1" Тогда
		ЗаявВозврДенСр.Вставить("НаимПолуч", ЗаявВозврДенСр.НаимОрг);
	ИначеЕсли ЗаявВозврДенСр.ПрПолуч = "2" Тогда
		ЗаявВозврДенСр.Вставить("НаимПолуч", СокрЛП(ЗаявВозврДенСр.Фамилия + " " + ЗаявВозврДенСр.Имя + " " + ЗаявВозврДенСр.Отчество));
	ИначеЕсли ЗаявВозврДенСр.ПрПолуч = "3" Тогда
		ЗаявВозврДенСр.Вставить("НаимПолуч", ЗаявВозврДенСр.НаимОргЛицСч);
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета,
		ЗаявВозврДенСр, НомСтр, СписокИспользуемыхМакетов["ВозвратЕНП_ЗаявВозврДенСр"], ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_ЗаявлениеНаСубсидиюПрофилактика(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	Титульная.Вставить("Наим1", Титульная.Наименование);
	Титульная.Вставить("Наим3", Титульная.Наименование);
	Титульная.Вставить("Наим4", Титульная.Наименование);
	Титульная.Вставить("ДатаПодписи", Формат(Титульная.ДАТА_ПОДПИСИ, "ДЛФ=DD"));
	Титульная.Вставить("Рук", Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
	Титульная.Вставить("ИННКПП", Титульная.ИНН + ?(ЗначениеЗаполнено(Титульная.КПП), " / " + Титульная.КПП, ""));
	
	МакетПФ = СписокИспользуемыхМакетов["ЗаявлениеНаСубсидиюПрофилактика"];
	Инд = 0;
	НомСтр = 1;
	Пока Истина Цикл 
		Инд = Инд + 1;
		Если МакетПФ.Области.Найти("Часть" + Инд) = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		ОблЧ = МакетПФ.ПолучитьОбласть("Часть" + Инд);
		Для Каждого ОблПодч Из ОблЧ.Области Цикл 
			Если ОблПодч.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ОблПодч.СодержитЗначение = Истина 
				И Титульная.Свойство(ОблПодч.Имя) Тогда 
				
				ОблПодч.Значение = Титульная[ОблПодч.Имя];
			КонецЕсли;
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОблЧ);
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_ЗаявлениеНаСубсидиюДляЗарплаты(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	Титульная.Вставить("Наим1", Титульная.Наименование);
	Титульная.Вставить("Наим3", Титульная.Наименование);
	Если Титульная.ФлОрг = Истина Тогда 
		Титульная.Вставить("Наим4", Титульная.ПолучОрг);
	ИначеЕсли Титульная.ФлИП = Истина Тогда
		Титульная.Вставить("Наим4", Титульная.ФамилияПолучатель + " " + Титульная.ИмяПолучатель +  " " + Титульная.ОтчествоПолучатель);
	КонецЕсли;
	Титульная.Вставить("ДатаПодписи", Формат(Титульная.ДАТА_ПОДПИСИ, "ДЛФ=DD"));
	Титульная.Вставить("Рук", Объект.ПодписантФамилия + " " + Объект.ПодписантИмя + " " + Объект.ПодписантОтчество);
	Титульная.Вставить("ИННКПП", Титульная.ИНН + ?(ЗначениеЗаполнено(Титульная.КПП), " / " + Титульная.КПП, ""));
	
	МакетПФ = СписокИспользуемыхМакетов["ЗаявлениеНаСубсидиюДляЗарплаты"];
	Инд = 0;
	НомСтр = 1;
	Пока Истина Цикл 
		Инд = Инд + 1;
		Если МакетПФ.Области.Найти("Часть" + Инд) = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		ОблЧ = МакетПФ.ПолучитьОбласть("Часть" + Инд);
		Для Каждого ОблПодч Из ОблЧ.Области Цикл 
			Если ОблПодч.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И ОблПодч.СодержитЗначение = Истина 
				И Титульная.Свойство(ОблПодч.Имя) Тогда 
				
				ОблПодч.Значение = Титульная[ОблПодч.Имя];
			КонецЕсли;
		КонецЦикла;
		
		ПечатнаяФорма.Вывести(ОблЧ);
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_ОсобыйПорядокУплатыНалогов(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	ИННКПП.Вставить("НомСтр", 0);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
		СтруктураПараметров.ДанныеУведомления.Титульная, СписокИспользуемыхМакетов["ОсобыйПорядокУплатыНалогов"], ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_ОтсрочкаСтраховыеВзносы(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	Листы = Новый СписокЗначений;
	
	МакетУведомления = СписокИспользуемыхМакетов["ОтсрочкаСтраховыеВзносы"];
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, Титульная);
	Для Каждого КЗ Из Титульная Цикл
		ИННКПП.Вставить(КЗ.Ключ, КЗ.Значение);
	КонецЦикла;
	Если ЭтоЮЛ Тогда
		ИННКПП.Вставить("ОписаниеОрганизации", Титульная.НаимОрг + " ИНН/КПП " + Титульная.ИНН + "/" + Титульная.КПП);
	Иначе
		ИННКПП.Вставить("ОписаниеОрганизации", Титульная.НаимОрг + " ИНН " + Титульная.ИНН);
	КонецЕсли;
	ИННКПП.Вставить("СуммаВсего", Формат(Титульная.СуммаВсего, "ЧН=_____; ЧГ="));
	ИННКПП.Вставить("Сумма", Формат(Титульная.Сумма, "ЧН=_____; ЧГ="));
	
	ОбластьЧасть = МакетУведомления.ПолучитьОбласть("ОсновнаяЧасть");
	ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, ИННКПП);
	ПечатнаяФорма.Вывести(ОбластьЧасть);
	
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_СубсидияПострадавшимМСП(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = СписокИспользуемыхМакетов["СубсидияПострадавшимМСП"];
	Строка = МакетПФ.ПолучитьОбласть("Строка");
	Часть1 = МакетПФ.ПолучитьОбласть("Часть1");
	Часть2 = МакетПФ.ПолучитьОбласть("Часть2");
	
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ЗаполнитьЗначенияСвойств(Часть1.Параметры, Титульная);
	ПечатнаяФорма.Вывести(Часть1);
	
	Инд = 0;
	Для Каждого Стр Из ДанныеУведомления.ДанныеДопСтрокБД.МнгСтр Цикл 
		Инд = Инд + 1;
		
		ЗаполнитьЗначенияСвойств(Строка.Параметры, Стр);
		Строка.Параметры.НомерПП = Формат(Инд, "ЧГ=");
		ПечатнаяФорма.Вывести(Строка);
	КонецЦикла;
	
	ЗаполнитьЗначенияСвойств(Часть2.Параметры, Титульная);
	ПечатнаяФорма.Вывести(Часть2);
	
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Функция СписокЛистов_СубсидияПоПостановлению1513(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "МакетыПечатиБРО");
	
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	МакетПФ = СписокИспользуемыхМакетов["СубсидияПоПостановлению1513"];
	Часть1 = МакетПФ.ПолучитьОбласть("Часть1");
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = ДанныеУведомления.ДанныеУведомления.Титульная;
	ЗаполнитьЗначенияСвойств(Часть1.Параметры, Титульная);
	ПечатнаяФорма.Вывести(Часть1);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1, Ложь);
	Возврат Листы;
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда 
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
		КонецЦикла;
		
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда 
		МассивИменМакетов = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(МакетыПФ, ";");
	Иначе 
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
			СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(Объект, СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда 
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл 
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда 
					НапечататьСтруктуру(Объект, МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Процедура НапечататьСтруктуру(Объект, СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	НомСтр = НомСтр + 1;
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета);

	Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("Строка") Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(КЗ.Ключ) Тогда 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
			Иначе 
				УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Значение), КЗ.Ключ, МакетПФ.Области);
			КонецЕсли;
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(КЗ.Значение, КЗ.Ключ, МакетПФ.Области);
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
	ПечатнаяФорма.Вывести(МакетПФ);
КонецПроцедуры

Функция СписокЛистов_ФормаР14001(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "ФормаР14001");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		
		Если Стр.ИДНаименования = "ЛистН1" Или Стр.ИДНаименования = "ЛистН2" Тогда 
			Если Стр.ИДНаименования = "ЛистН1" Тогда 
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			Иначе
				МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть2;
			КонецЕсли;
			
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда 
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		Иначе 
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, Ложь, СписокИспользуемыхМакетов)
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СписокЛистов_ФормаР13001(Объект) Экспорт
	ДанныеДляЗагрузкиМакетов = Новый Структура("ИмяОтчета", "ВизуализацияУстаревшихУведомлений");
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(ДанныеДляЗагрузкиМакетов, "", "ФормаР13001");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистЛ1" Или Стр.ИДНаименования = "ЛистЛ2" Тогда 
			МногострочнаяЧасть = ?(Стр.ИДНаименования = "ЛистЛ1", СтруктураПараметров.МногострочнаяЧасть1, СтруктураПараметров.МногострочнаяЧасть2);
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда 
				Продолжить;
			КонецЕсли;
			
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда 
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		Иначе 
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, Ложь, СписокИспользуемыхМакетов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти

#КонецЕсли