#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
Процедура ВывестиИННКППШапка501(ДеревоЗагрузки, ОбластьШапка, Владелец)
	Попытка
		ОблИННКППОрг = ОбластьШапка.Области["ИННКППОрг"];
		ИдФайла = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ИдФайл", "ИмяЭлемента").ЗначениеЭлемента;
		ИННКПП = СтрРазделить(ИдФайла, "_")[2];
		НеобходимоЗаполнятьИННКПП = Ложь;
		Если СтрДлина(ИННКПП) = 19 Тогда 
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + Лев(ИННКПП, 10));
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "КПП:", "КПП: " + Прав(ИННКПП, 9));
		ИначеЕсли СтрДлина(ИННКПП) = 12 Тогда
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + ИННКПП);
		Иначе
			НеобходимоЗаполнятьИННКПП = Истина;
		КонецЕсли;
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, "НомерДокумента, ДатаДокумента, Организация");
		ОбластьШапка.Области["НомерДокумента"].Значение = Реквизиты.НомерДокумента;
		ОбластьШапка.Области["ДатаДокумента"].Значение = Реквизиты.ДатаДокумента;
		Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Реквизиты.Организация) Тогда 
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
				Реквизиты.Организация, ТекущаяДатаСеанса(), "НаимЮЛПол,ИННЮЛ,КППЮЛ");
			ОбластьШапка.Области["НаимОрг"].Значение = СведенияОбОрганизации.НаимЮЛПол;
			Если НеобходимоЗаполнятьИННКПП Тогда 
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + СведенияОбОрганизации.ИННЮЛ);
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "КПП:", "КПП: " + СведенияОбОрганизации.КППЮЛ);
			КонецЕсли;
		Иначе
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
				Реквизиты.Организация, ТекущаяДатаСеанса(), "ФИО,ИННФЛ");
			ОбластьШапка.Области["НаимОрг"].Значение = СведенияОбОрганизации.ФИО;
			Если НеобходимоЗаполнятьИННКПП Тогда 
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + СведенияОбОрганизации.ИННФЛ);
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Процедура ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец)
	Попытка
		ОблИННКППОрг = ОбластьШапка.Области["ИННКППОрг"];
		ИдФайла = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ИдФайл", "ИмяЭлемента").ЗначениеЭлемента;
		ИННКПП = СтрРазделить(ИдФайла, "_")[2];
		НеобходимоЗаполнятьИННКПП = Ложь;
		Если СтрДлина(ИННКПП) = 19 Тогда 
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + Лев(ИННКПП, 10));
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "КПП:", "КПП: " + Прав(ИННКПП, 9));
		ИначеЕсли СтрДлина(ИННКПП) = 12 Тогда
			ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + ИННКПП);
		Иначе
			НеобходимоЗаполнятьИННКПП = Истина;
		КонецЕсли;
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Владелец, "НомерДокумента, ДатаДокумента, Организация");
		НомерСообщ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
			ДеревоЗагрузки, "Файл/Документ/НомерСообщ", "ИмяЭлемента");
		Если НомерСообщ = Неопределено  Тогда 
			ОбластьШапка.Области["НомерДокумента"].Значение = Реквизиты.НомерДокумента;
		Иначе
			ОбластьШапка.Области["НомерДокумента"].Значение = НомерСообщ.ЗначениеЭлемента;
		КонецЕсли;
		ДатаДок = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/ДатаДок", "ИмяЭлемента");
		Если ДатаДок = Неопределено  Тогда 
			ОбластьШапка.Области["ДатаДокумента"].Значение = Реквизиты.ДатаДокумента;
		Иначе
			ОбластьШапка.Области["ДатаДокумента"].Значение = РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(ДатаДок.ЗначениеЭлемента);
		КонецЕсли;
		
		Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Реквизиты.Организация) Тогда 
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
				Реквизиты.Организация, ТекущаяДатаСеанса(), "НаимЮЛПол,ИННЮЛ,КППЮЛ");
			ОбластьШапка.Области["НаимОрг"].Значение = СведенияОбОрганизации.НаимЮЛПол;
			Если НеобходимоЗаполнятьИННКПП Тогда 
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + СведенияОбОрганизации.ИННЮЛ);
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "КПП:", "КПП: " + СведенияОбОрганизации.КППЮЛ);
			КонецЕсли;
		Иначе
			СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
				Реквизиты.Организация, ТекущаяДатаСеанса(), "ФИО,ИННФЛ");
			ОбластьШапка.Области["НаимОрг"].Значение = СведенияОбОрганизации.ФИО;
			Если НеобходимоЗаполнятьИННКПП Тогда 
				ОблИННКППОрг.Текст = СтрЗаменить(ОблИННКППОрг.Текст, "ИНН:", "ИНН: " + СведенияОбОрганизации.ИННФЛ);
			КонецЕсли;
		КонецЕсли;
	Исключение
	КонецПопытки;
КонецПроцедуры

Функция Сформировать_СообщениеОбИсчисленнойСуммеТранспортногоНалога501(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленнойСуммеТранспортногоНалога501");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	Если УзелВерсияФормата = "5.01" Тогда
		ВывестиИННКППШапка501(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ИначеЕсли УзелВерсияФормата = "5.02" Тогда
		ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/НалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ИсчТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Результат.Вывести(Макет.ПолучитьОбласть("ИсчТрНал_Шапка"));
		
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл 
			ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
			Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
				ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
			КонецЦикла;
			ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				
			Результат.Вывести(ОбластьДетализация);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ПерТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
			ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерТрНал_Шапка");
			ОбластьШапкаПерерасчета.Области.ПерТрНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
			Результат.Вывести(ОбластьШапкаПерерасчета);
			
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Результат.Вывести(Макет.ПолучитьОбласть("ПерТрНал_ШапкаТабличнойЧасти"));
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоСуммеНалога = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/СумНалогОКТМО", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоСуммеНалога) = Тип("СтрокаДереваЗначений") Тогда
		ПечатьДетализацииПоОКТМО(ДанныеПоСуммеНалога, Результат, Макет);
	КонецЕсли;
	
	Результат.Вывести(Макет.ПолучитьОбласть("Подвал"));
	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СообщениеОбИсчисленнойСуммеТранспортногоНалога503(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленнойСуммеТранспортногоНалога503");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/НалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ИсчТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Результат.Вывести(Макет.ПолучитьОбласть("ИсчТрНал_Шапка"));
		
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл
			ОбластьДетализацияОписание = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияОписание");
			ОбластьДетализацияОписание.Области.ИсчТрНал_Описание.Значение = 
				ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
			Результат.Вывести(ОбластьДетализацияОписание);
			ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияДанные");
			Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
				ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
			КонецЦикла;
			Результат.Вывести(ОбластьДетализацияДанные);
			
			СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислТС"));
			Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
				ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияДанные");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализацияДанные);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ПерТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
			ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерТрНал_Шапка");
			ОбластьШапкаПерерасчета.Области.ПерТрНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
			Результат.Вывести(ОбластьШапкаПерерасчета);
			
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Результат.Вывести(Макет.ПолучитьОбласть("ПерТрНал_ШапкаТабличнойЧасти"));
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл
				ОбластьДетализацияОписание = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияОписание");
				ОбластьДетализацияОписание.Области.ИсчТрНал_Описание.Значение = 
					ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				Результат.Вывести(ОбластьДетализацияОписание);
				ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияДанные");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализацияДанные);
				
				СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислТС"));
				Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
					ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияДанные");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализацияДанные);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоСуммеНалога = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/СумНалогОКТМО", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоСуммеНалога) = Тип("СтрокаДереваЗначений") Тогда
		ПечатьДетализацииПоОКТМО503(ДанныеПоСуммеНалога, Результат, Макет);
	КонецЕсли;
	
	Результат.Вывести(Макет.ПолучитьОбласть("Подвал"));
	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СообщениеОбИсчисленнойСуммеЗемельногоНалога501(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленнойСуммеЗемельногоНалога501");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	Если УзелВерсияФормата = "5.01" Тогда
		ВывестиИННКППШапка501(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ИначеЕсли УзелВерсияФормата = "5.02" Тогда
		ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/НалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ИсчЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Результат.Вывести(Макет.ПолучитьОбласть("ИсчЗемНал_Шапка"));
		
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл 
			ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
			Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
				ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
			КонецЦикла;
			ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				
			Результат.Вывести(ОбластьДетализация);
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ПерЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
			ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерЗемНал_Шапка");
			ОбластьШапкаПерерасчета.Области.ПерЗемНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
			Результат.Вывести(ОбластьШапкаПерерасчета);
			
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Результат.Вывести(Макет.ПолучитьОбласть("ПерЗемНал_ШапкаТабличнойЧасти"));
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоСуммеНалога = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/СумНалогОКТМО", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоСуммеНалога) = Тип("СтрокаДереваЗначений") Тогда
		ПечатьДетализацииПоОКТМО(ДанныеПоСуммеНалога, Результат, Макет);
	КонецЕсли;
	
	Результат.Вывести(Макет.ПолучитьОбласть("Подвал"));
	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СообщениеОбИсчисленнойСуммеЗемельногоНалога503(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленнойСуммеЗемельногоНалога503");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/НалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ИсчЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Результат.Вывести(Макет.ПолучитьОбласть("ИсчЗемНал_Шапка"));
		
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл
			ОбластьДетализацияОписание = Макет.ПолучитьОбласть("ИсчЗемНал_ДетализацияОписание");
			ОбластьДетализацияОписание.Области.ИсчЗемНал_Описание.Значение = 
				ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
				+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
			Результат.Вывести(ОбластьДетализацияОписание);
			
			ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
			Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
				ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
			КонецЦикла;
			Результат.Вывести(ОбластьДетализация);
			
			СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислЗУ"));
			Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ПерЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
			ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерЗемНал_Шапка");
			ОбластьШапкаПерерасчета.Области.ПерЗемНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
			Результат.Вывести(ОбластьШапкаПерерасчета);
			
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Результат.Вывести(Макет.ПолучитьОбласть("ПерЗемНал_ШапкаТабличнойЧасти"));
			Для Каждого СтрокаДанных Из СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер")) Цикл
				ОбластьДетализацияОписание = Макет.ПолучитьОбласть("ИсчЗемНал_ДетализацияОписание");
				ОбластьДетализацияОписание.Области.ИсчЗемНал_Описание.Значение = 
					ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				Результат.Вывести(ОбластьДетализацияОписание);
				
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализация);
				
				СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислЗУ"));
				Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалВычет,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализация);
				КонецЦикла;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ДанныеПоСуммеНалога = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/СумНалогОКТМО", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоСуммеНалога) = Тип("СтрокаДереваЗначений") Тогда
		ПечатьДетализацииПоОКТМО503(ДанныеПоСуммеНалога, Результат, Макет);
	КонецЕсли;
	
	Результат.Вывести(Макет.ПолучитьОбласть("Подвал"));
	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СообщениеОбИсчисленныхСуммахНалогов501(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленныхСуммахНалогов501");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	Если УзелВерсияФормата = "5.01" Тогда
		ВывестиИННКППШапка501(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ИначеЕсли УзелВерсияФормата = "5.02" Тогда
		ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ТрНалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["ТрНалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["ТрНалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/НалИмОргИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИмОргИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИмОргИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ЗемНалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["ЗемНалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["ЗемНалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
#Область ТранспортныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "ТрНалИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ИсчТрНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ПерТрНал", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчТрНал_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл 
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерТрНал_Шапка");
				ОбластьШапкаПерерасчета.Области.ПерТрНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.ПерТрНал_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("ПерТрНал_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
						
					Результат.Вывести(ОбластьДетализация);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

#Область ИмущественныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "НалИмОргИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ИсчНалИмОрг", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ПерНалИмОрг", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчНалИмОрг_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчНалИмОрг")) Цикл 
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				ОбластьДетализация.Области.ИсчНалИмОрг_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрНИ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерНалИмОрг"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерНалИмОрг_Шапка");
				ОбластьШапкаПерерасчета.Области.СведИмОргПер_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.СведИмОргПер_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведИмОргПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("СведИмОргПер_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					ОбластьДетализация.Области.ИсчНалИмОрг_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрНИ") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
						
					Результат.Вывести(ОбластьДетализация);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

#Область ЗемельныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "ЗемНалИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ИсчЗемНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ПерЗемНал", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчЗемНал_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл 
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					
				Результат.Вывести(ОбластьДетализация);
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда 
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерЗемНал_Шапка");
				ОбластьШапкаПерерасчета.Области.ПерЗемНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.ПерЗемНал_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("ПерЗемНал_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
						
					Результат.Вывести(ОбластьДетализация);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СообщениеОбИсчисленныхСуммахНалогов503(ДеревоЗагрузки, Владелец) Экспорт 
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СообщениеОбИсчисленныхСуммахНалогов503");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
	ВывестиИННКППШапка502(ДеревоЗагрузки, ОбластьШапка, Владелец);
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ТрНалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["ТрНалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["ТрНалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/НалИмОргИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["НалИмОргИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["НалИмОргИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ЗемНалИсчисл", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") И ЗначениеЗаполнено(ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента) Тогда 
		ОбластьШапка.Области["ЗемНалИсчисл"].Значение = ДанныеПоИсчисленномуНалогу.ЗначениеЭлемента + " руб.";
	Иначе
		ОбластьШапка.Области["ЗемНалИсчисл"].Значение = "0 руб.";
	КонецЕсли;
	Результат.Вывести(ОбластьШапка);
	
#Область ТранспортныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "ТрНалИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ИсчТрНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ПерТрНал", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчТрНал_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияОписание");
				ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = 
					ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				Результат.Вывести(ОбластьДетализация);
				
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализация);
				
				СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислТС"));
				Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
					ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализацияДанные);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерТрНал_Шапка");
				ОбластьШапкаПерерасчета.Области.ПерТрНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.ПерТрНал_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("ПерТрНал_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_ДетализацияОписание");
					ОбластьДетализация.Области.ИсчТрНал_Описание.Значение = 
						ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					Результат.Вывести(ОбластьДетализация);
					
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализация);
					
					СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислТС"));
					Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
						Продолжить;
					КонецЕсли;
					Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
						ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчТрНал_Детализация");
						Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,НалСтавка,ВладенТС,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
							ОбластьДетализацияДанные.Области["ИсчТрНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
						КонецЦикла;
						Результат.Вывести(ОбластьДетализацияДанные);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО503(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

#Область ИмущественныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "НалИмОргИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ИсчНалИмОрг", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ПерНалИмОрг", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/НалогИмОрг/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчНалИмОрг_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчНалИмОрг")) Цикл
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_ДетализацияОписание");
				ОбластьДетализация.Области.ИсчНалИмОрг_Описание.Значение = 
					ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрНИ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				Результат.Вывести(ОбластьДетализация);
				
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализация);
				
				СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислНИ"));
				Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
					ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализацияДанные.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализацияДанные);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерНалИмОрг"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерНалИмОрг_Шапка");
				ОбластьШапкаПерерасчета.Области.СведИмОргПер_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.СведИмОргПер_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведИмОргПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("СведИмОргПер_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_ДетализацияОписание");
					ОбластьДетализация.Области.ИсчНалИмОрг_Описание.Значение = 
						ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрНИ") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					Результат.Вывести(ОбластьДетализация);
					
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализация);
					
					СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислНИ"));
					Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
						Продолжить;
					КонецЕсли;
					Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
						ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчНалИмОрг_Детализация");
						Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляИмОрг,НалСтав,ВладенИмОрг,РазмНалЛьг,СумИсчисл", ",") Цикл 
							ОбластьДетализацияДанные.Области["ИсчНалИмОрг_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
						КонецЦикла;
						Результат.Вывести(ОбластьДетализацияДанные);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО503(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

#Область ЗемельныйНалог
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		ИсчисленоВсего = ЗначениеПодчиненногоЭлемента(ДанныеПоНалогу, "ЗемНалИсчисл");
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ИсчЗемНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ПерЗемНал", "ИмяЭлемента");
		Детализация = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/СумНалогОКТМО", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("ИсчЗемНал_Шапка"));
			
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_ДетализацияОписание");
				ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = 
					ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
					+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
				Результат.Вывести(ОбластьДетализация);
				
				ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
				Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
					ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
				КонецЦикла;
				Результат.Вывести(ОбластьДетализация);
				
				СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислЗУ"));
				Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
					ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализацияДанные.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализацияДанные);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда 
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл 
				ОбластьШапкаПерерасчета = Макет.ПолучитьОбласть("ПерЗемНал_Шапка");
				ОбластьШапкаПерерасчета.Области.ПерЗемНал_НомерСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "НомерСообщ");
				ОбластьШапкаПерерасчета.Области.ПерЗемНал_ДатаСообщ.Значение = ЗначениеПодчиненногоЭлемента(СтрокаПерерасчета0, "ДатаСообщ");
				Результат.Вывести(ОбластьШапкаПерерасчета);
				
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Результат.Вывести(Макет.ПолучитьОбласть("ПерЗемНал_ШапкаТабличнойЧасти"));
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_ДетализацияОписание");
					ОбластьДетализация.Области.ИсчЗемНал_Описание.Значение = 
						ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО") + "; "
						+ ЗначениеПодчиненногоЭлемента(СтрокаДанных, "КодНО");
					Результат.Вывести(ОбластьДетализация);
					
					ОбластьДетализация = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
					Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
						ОбластьДетализация.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДанных, Подчиненный);
					КонецЦикла;
					Результат.Вывести(ОбластьДетализация);
					
					СтрокиСведенийДетализация = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "НачислЗУ"));
					Если СтрокиСведенийДетализация.Количество() = 0 Тогда 
						Продолжить;
					КонецЕсли;
					Для Каждого СтрокаДетализация Из СтрокиСведенийДетализация Цикл
						ОбластьДетализацияДанные = Макет.ПолучитьОбласть("ИсчЗемНал_Детализация");
						Для Каждого Подчиненный Из СтрРазделить("НалПер,НалБаза,ДоляЗУ,НалСтав,ВладенЗУ,ПовКоэф,РазмНалЛьг,СумИсчисл", ",") Цикл 
							ОбластьДетализацияДанные.Области["ИсчЗемНал_" + Подчиненный].Значение = ЗначениеПодчиненногоЭлемента(СтрокаДетализация, Подчиненный);
						КонецЦикла;
						Результат.Вывести(ОбластьДетализацияДанные);
					КонецЦикла;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Если ТипЗнч(Детализация) = Тип("СтрокаДереваЗначений") Тогда
			ПечатьДетализацииПоОКТМО503(Детализация, Результат, Макет);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти

	ДобавитьШтампЭЦП(Результат, Владелец);
	Возврат Результат;
КонецФункции

Функция Сформировать_СправкаОПринадлежностиСуммЕНП501(ДеревоЗагрузки, Владелец) Экспорт
	Возврат СправкаОПринадлежностиСумм(ДеревоЗагрузки, Владелец, "СправкаОПринадлежностиСуммЕНП501");
КонецФункции

Функция Сформировать_СправкаОПринадлежностиСуммЕНПАгрегированная501(ДеревоЗагрузки, Владелец) Экспорт
	Возврат СправкаОПринадлежностиСумм(ДеревоЗагрузки, Владелец, "СправкаОПринадлежностиСуммЕНПАгрегированная501");
КонецФункции

Функция Сформировать_СправкаОНаличииОбязанностиейПоУплате504(ДеревоЗагрузки, Владелец) Экспорт
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СправкаОНаличииОбязанностиейПоУплате504");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.НомСправ = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/НомСправ");
	ОбластьШапка.Параметры.ДатаСправ = 
		Формат(РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/ДатаСправ")), "ДЛФ=DD; ДП=-");
		
	ПрНеиспОбяз = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/ПрНеиспОбяз");
	Если ПрНеиспОбяз = "0" Тогда
		ОбластьШапка.Параметры.ПрНеиспОбяз = "Нет неисполненной обязанности";
	ИначеЕсли ПрНеиспОбяз = "1" Тогда
		ОбластьШапка.Параметры.ПрНеиспОбяз = "Имеется неисполненная обязанность";
	КонецЕсли;
	
	ОбластьШапка.Параметры.НаимОрг = ПолучитьНаименованиеИзДерева(ДеревоЗагрузки);
	ОбластьШапка.Параметры.НаимНО = ПолучитьОписаниеОтправителяИзДерева(ДеревоЗагрузки);
	Результат.Вывести(ОбластьШапка);
	Возврат Результат;
КонецФункции

Функция Сформировать_СведенияПоЗадолженности501(ДеревоЗагрузки, Владелец) Экспорт
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет("СведенияПоЗадолженности501");
	
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьШапка.Параметры.ДатаСвед = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/ДатаСвед");
	
	ПрНеиспОбяз = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/ПрНеиспОбяз");
	Если ПрНеиспОбяз = "0" Тогда
		ОбластьШапка.Параметры.ПрНеиспОбяз = "не имеет";
	ИначеЕсли ПрНеиспОбяз = "1" Тогда
		ОбластьШапка.Параметры.ПрНеиспОбяз = "имеет";
	КонецЕсли;
	
	ОбластьШапка.Параметры.НаимОрг = ПолучитьНаименованиеИзДерева(ДеревоЗагрузки);
	ОбластьШапка.Параметры.НаимНО = ПолучитьОписаниеОтправителяИзДерева(ДеревоЗагрузки);
	
	Если ТипЗнч(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СвНП/НПФЛ", "ИмяЭлемента")) = Тип("СтрокаДереваЗначений") Тогда 
		ОбластьШапка.Параметры.ИНН = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/СвНП/НПФЛ/ИННФЛ");
	Иначе
		ОбластьШапка.Параметры.ИНН = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/ИННЮЛ");
		ОбластьШапка.Параметры.КПП = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ/КПП");
	КонецЕсли;
	
	Подписант = ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/Подписант/ФИО/Фамилия")
		+ " " + ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/Подписант/ФИО/Имя")
		+ " " + ЗначениеЭлементаВДереве(ДеревоЗагрузки, "Файл/Документ/Подписант/ФИО/Отчество");
	ОбластьШапка.Параметры.РукНО = СокрЛП(Подписант);
	
	Результат.Вывести(ОбластьШапка);
	Возврат Результат;
КонецФункции

Функция ПредставлениеСверкиСФНС(ЗапросИОН, ТекстXML) Экспорт 
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ТекстXML);
		УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
		УзелВерсияФормата = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
		
		Если УзелКНД.ЗначениеЭлемента = "1120502" Тогда
 			Если УзелВерсияФормата = "5.01" Тогда
				Возврат Сформировать_СправкаОПринадлежностиСуммЕНП501(ДеревоЗагрузки, ЗапросИОН);
			КонецЕсли;
		ИначеЕсли УзелКНД.ЗначениеЭлемента = "1120101" Тогда
 			Если УзелВерсияФормата = "5.04" Тогда
				Возврат Сформировать_СправкаОНаличииОбязанностиейПоУплате504(ДеревоЗагрузки, ЗапросИОН);
			КонецЕсли;
		ИначеЕсли УзелКНД.ЗначениеЭлемента = "1120518" Тогда
 			Если УзелВерсияФормата = "5.01" Тогда
				Возврат Сформировать_СведенияПоЗадолженности501(ДеревоЗагрузки, ЗапросИОН);
			КонецЕсли;
		ИначеЕсли УзелКНД.ЗначениеЭлемента = "1120525" Тогда
 			Если УзелВерсияФормата = "5.01" Тогда
				Возврат Сформировать_СправкаОПринадлежностиСуммЕНПАгрегированная501(ДеревоЗагрузки, ЗапросИОН);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Не удалось сформировать представление");
	КонецПопытки;
КонецФункции
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция СправкаОПринадлежностиСумм(ДеревоЗагрузки, Владелец, ИмяМакета)
	Результат = Новый ТабличныйДокумент;
	Результат.АвтоМасштаб = Истина;
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	Макет = Отчеты.ВизуализацияВходящихИзвещенийФНС.ПолучитьМакет(ИмяМакета);
	
#Область Шапка
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/НомСправ", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда 
		ОбластьШапка.Параметры.НомСправ = УзелТек.ЗначениеЭлемента;
	КонецЕсли;
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/ДатаСправ", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда 
		ОбластьШапка.Параметры.ДатаСправ = 
			Формат(РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(УзелТек.ЗначениеЭлемента), "ДЛФ=DD; ДП=-");
	КонецЕсли;
	
	ОбластьШапка.Параметры.НаимОрг = ПолучитьНаименованиеИзДерева(ДеревоЗагрузки);
	
	ДатаНачПериод = РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/ДатаНачПериод", "ИмяЭлемента").ЗначениеЭлемента);
	ДатаКонПериод = РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/ДатаКонПериод", "ИмяЭлемента").ЗначениеЭлемента);
		
	ОбластьШапка.Параметры.ОписаниеПериод = "перечисленные в качестве единого налогового платежа за период с " 
		+ Формат(ДатаНачПериод, "ДФ=dd.MM.yyyy") + " по " + Формат(ДатаКонПериод, "ДФ=dd.MM.yyyy")
		+ " , учтены в счет погашения налоговых обязанностей с соблюдением последовательности, установленной"
		+ " пунктами 8 - 10 статьи 45 Налогового кодекса Российской Федерации.";
		
	ОбластьШапка.Параметры.ОписаниеНачало = "Остаток на " + Формат(ДатаНачПериод, "ДФ=dd.MM.yyyy") + ":";
	ОбластьШапка.Параметры.ОписаниеКонец = "Остаток на " + Формат(ДатаКонПериод, "ДФ=dd.MM.yyyy") + ":";
	ОбластьШапка.Параметры.Входящее = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/ОстНачПериод", "ИмяЭлемента").ЗначениеЭлемента;
	ОбластьШапка.Параметры.Приход = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/ПоступПериод", "ИмяЭлемента").ЗначениеЭлемента;
	ОбластьШапка.Параметры.Расход = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/СписанПериод", "ИмяЭлемента").ЗначениеЭлемента;
	ОбластьШапка.Параметры.Исходящее = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/ОстКонПериод", "ИмяЭлемента").ЗначениеЭлемента;
	Результат.Вывести(ОбластьШапка);
#КонецОбласти
	
#Область Раздел1
	СтрокаДанных = Макет.ПолучитьОбласть("СтрокаДанныхПоступление");
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Поступления", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда
		Результат.Вывести(Макет.ПолучитьОбласть("ШапкаРаздел1"));
		Результат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицы"));
		СтрокиПлатежи = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "Платежи"));
		
		Если СтрокиПлатежи.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р1_1_Заголовок"));
		КонецЕсли;
		Для Каждого Стр Из СтрокиПлатежи Цикл 
			Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаПоступл,СумПоступл,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП", ",") Цикл 
				СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
			КонецЦикла;
			Результат.Вывести(СтрокаДанных);
		КонецЦикла;
		Если СтрокиПлатежи.Количество() > 0 Тогда 
			Итоги_1_1 = Макет.ПолучитьОбласть("Итоги_1_1");
			Итоги_1_1.Параметры.ПлатежИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Поступления/ПлатежИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_1_1);
		КонецЕсли;
		
		СтрокиЗачетИнЛиц = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ЗачетИнЛиц"));
		Если СтрокиЗачетИнЛиц.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р1_2_Заголовок"));
		КонецЕсли;
		Для Каждого Стр Из СтрокиЗачетИнЛиц Цикл 
			Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаПоступл,СумПоступл,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП", ",") Цикл 
				СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
			КонецЦикла;
			Результат.Вывести(СтрокаДанных);
		КонецЦикла;
		Если СтрокиЗачетИнЛиц.Количество() > 0 Тогда 
			Итоги_1_2 = Макет.ПолучитьОбласть("Итоги_1_2");
			Итоги_1_2.Параметры.ЗачетИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Поступления/ЗачетИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_1_2);
		КонецЕсли;
			
		СтрокиУчетПереплИтог = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "УчетПереплИтог"));
		Если СтрокиУчетПереплИтог.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р1_3_Заголовок"));
		КонецЕсли;
		Для Каждого Стр0 Из СтрокиУчетПереплИтог Цикл 
			СтрокиПодч = Стр0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "УчетПерепл"));
			Для Каждого Стр Из СтрокиПодч Цикл 
				Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаПоступл,СумПоступл,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП", ",") Цикл 
					СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
				КонецЦикла;
				Результат.Вывести(СтрокаДанных);
			КонецЦикла;
			
			Если СтрокиПодч.Количество() > 0 Тогда 
				Итоги_1_3_0 = Макет.ПолучитьОбласть("Итоги_1_3_0");
				Итоги_1_3_0.Параметры.Обязател = "Итого по обязательству: " + ЗначениеПодчиненногоЭлемента(Стр0, "Обязател");
				Итоги_1_3_0.Параметры.ИтогОбяз = ЗначениеПодчиненногоЭлемента(Стр0, "ИтогОбяз");
				Результат.Вывести(Итоги_1_3_0);
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокиУчетПереплИтог.Количество() > 0 Тогда 
			Итоги_1_3 = Макет.ПолучитьОбласть("Итоги_1_3");
			Итоги_1_3.Параметры.СумОбязИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Поступления/СумОбязИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_1_3);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти
	
#Область Раздел2
	СтрокаДанных = Макет.ПолучитьОбласть("СтрокаДанныхСписание");
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Списания", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда
		Результат.Вывести(Макет.ПолучитьОбласть("ШапкаРаздел2"));
		Результат.Вывести(Макет.ПолучитьОбласть("ШапкаТаблицыСписания"));
		СтрокиЗачетИнЛиц = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ЗачетИнЛиц"));
		
		Если СтрокиЗачетИнЛиц.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р2_1_Заголовок"));
		КонецЕсли;
		Для Каждого Стр Из СтрокиЗачетИнЛиц Цикл 
			Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаСписан,СумСписан,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП,СрокУпл", ",") Цикл 
				СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
			КонецЦикла;
			Результат.Вывести(СтрокаДанных);
		КонецЦикла;
		Если СтрокиЗачетИнЛиц.Количество() > 0 Тогда 
			Итоги_2_1 = Макет.ПолучитьОбласть("Итоги_2_1");
			Итоги_2_1.Параметры.ЗачетИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Списания/ЗачетИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_2_1);
		КонецЕсли;
		
		СтрокиВозвратДенСр = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ВозвратДенСр"));
		Если СтрокиВозвратДенСр.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р2_2_Заголовок"));
		КонецЕсли;
		Для Каждого Стр Из СтрокиВозвратДенСр Цикл 
			Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаСписан,СумСписан,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП,СрокУпл", ",") Цикл 
				СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
			КонецЦикла;
			Результат.Вывести(СтрокаДанных);
		КонецЦикла;
		Если СтрокиВозвратДенСр.Количество() > 0 Тогда 
			Итоги_2_2 = Макет.ПолучитьОбласть("Итоги_2_2");
			Итоги_2_2.Параметры.ВозвратИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Списания/ВозвратИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_2_2);
		КонецЕсли;
			
		СтрокиСписанСчОбязИтог = УзелТек.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СписанСчОбязИтог"));
		Если СтрокиСписанСчОбязИтог.Количество() > 0 Тогда 
			Результат.Вывести(Макет.ПолучитьОбласть("Р2_3_Заголовок"));
		КонецЕсли;
		Для Каждого Стр0 Из СтрокиСписанСчОбязИтог Цикл 
			СтрокиПодч = Стр0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СписанСчОбяз"));
			Для Каждого Стр Из СтрокиПодч Цикл 
				Для Каждого Элт Из СтрРазделить("НаимПоказ,ДатаСписан,СумСписан,КБК,ОКТМО,ДокОснов,ИтогВидОперац,КПП,СрокУпл", ",") Цикл 
					СтрокаДанных.Параметры[Элт] = ЗначениеПодчиненногоЭлемента(Стр, Элт);
				КонецЦикла;
				Результат.Вывести(СтрокаДанных);
			КонецЦикла;
			
			Если СтрокиПодч.Количество() > 0 Тогда 
				Итоги_2_3_0 = Макет.ПолучитьОбласть("Итоги_2_3_0");
				Итоги_2_3_0.Параметры.Обязател = "Итого по обязательству: " + ЗначениеПодчиненногоЭлемента(Стр0, "Обязател");
				Итоги_2_3_0.Параметры.ИтогОбяз = ЗначениеПодчиненногоЭлемента(Стр0, "ИтогОбяз");
				Результат.Вывести(Итоги_2_3_0);
			КонецЕсли;
		КонецЦикла;
		
		Если СтрокиСписанСчОбязИтог.Количество() > 0 Тогда 
			Итоги_2_3 = Макет.ПолучитьОбласть("Итоги_2_3");
			Итоги_2_3.Параметры.СписаниеИтог = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
					ДеревоЗагрузки, "Файл/Документ/СпрПринДенСрЕНП/Списания/СписаниеИтог", "ИмяЭлемента").ЗначениеЭлемента;
			Результат.Вывести(Итоги_2_3);
		КонецЕсли;
	КонецЕсли;
#КонецОбласти
	
#Область Подвал
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	ОбластьПодвал.Параметры.НаимНО = ПолучитьОписаниеОтправителяИзДерева(ДеревоЗагрузки);
	Результат.Вывести(ОбластьПодвал);
#КонецОбласти
	
	Возврат Результат;
КонецФункции

Функция ЗначениеПодчиненногоЭлемента(СтрокаДанных, ИмяПодчиненного)
	ОтобранныеСтроки = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяПодчиненного));
	Если ОтобранныеСтроки.Количество() = 1 Тогда 
		Возврат ОтобранныеСтроки[0].ЗначениеЭлемента;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

Функция СтроковоеПредставлениеПериода(КодПериода)
	Если КодПериода = "21" Тогда 
		Возврат "I квартал";
	ИначеЕсли КодПериода = "22" Тогда 
		Возврат "II квартал";
	ИначеЕсли КодПериода = "23" Тогда 
		Возврат "III квартал";
	Иначе
		Возврат КодПериода;
	КонецЕсли;
КонецФункции

Процедура ПечатьДетализацииПоОКТМО(ДанныеПоСуммеНалога, Результат, Макет)
	СтрокиПоСуммеНалога = ДанныеПоСуммеНалога.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СумНалогОКТМО"));
	Для Каждого СтрокаСуммы Из СтрокиПоСуммеНалога Цикл 
		ОбластьСуммаНалогаПоОКТМО = Макет.ПолучитьОбласть("СуммаНалогаПоОКТМО");
		ОбластьСуммаНалогаПоОКТМО.Области.СумНалогОКТМО.Значение = ЗначениеПодчиненногоЭлемента(СтрокаСуммы, "ОКТМО")
			+ " : " + ЗначениеПодчиненногоЭлемента(СтрокаСуммы, "СумИсчислОКТМО") + " руб.";
		Результат.Вывести(ОбластьСуммаНалогаПоОКТМО);
		
		СтрокиАвансов = СтрокаСуммы.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СумАвПлатПериод"));
		Для Каждого СтрокаАванса Из СтрокиАвансов Цикл 
			ОбластьАвансыПоОКТМО = Макет.ПолучитьОбласть("АвансыПоОКТМО");
			ОбластьАвансыПоОКТМО.Области.СумАвПлатПериод.Значение = 
				СтроковоеПредставлениеПериода(ЗначениеПодчиненногоЭлемента(СтрокаАванса, "Период"))
				+ " : " + ЗначениеПодчиненногоЭлемента(СтрокаАванса, "СумИсчислАвПлат") + " руб.";
			Результат.Вывести(ОбластьАвансыПоОКТМО);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Процедура ПечатьДетализацииПоОКТМО503(ДанныеПоСуммеНалога, Результат, Макет)
	СтрокиПоСуммеНалога = ДанныеПоСуммеНалога.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СумНалогОКТМО"));
	Для Каждого СтрокаСуммы Из СтрокиПоСуммеНалога Цикл 
		ОбластьСуммаНалогаПоОКТМО = Макет.ПолучитьОбласть("СуммаНалогаПоОКТМО");
		ОбластьСуммаНалогаПоОКТМО.Области.СумНалогОКТМО.Значение = ЗначениеПодчиненногоЭлемента(СтрокаСуммы, "ОКТМО")
			+ " : " + ЗначениеПодчиненногоЭлемента(СтрокаСуммы, "СумИсчислОКТМО") + " руб.";
		Результат.Вывести(ОбластьСуммаНалогаПоОКТМО);
		
		ОтчГод = ЗначениеПодчиненногоЭлемента(СтрокаСуммы, "ОтчГод");
		СтрокиАвансов = СтрокаСуммы.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СумАвПлатПериод"));
		Для Каждого СтрокаАванса Из СтрокиАвансов Цикл 
			ОбластьАвансыПоОКТМО = Макет.ПолучитьОбласть("АвансыПоОКТМО");
			ОбластьАвансыПоОКТМО.Области.СумАвПлатПериод.Значение = 
				ОтчГод + " г.,"
				+ СтроковоеПредставлениеПериода(ЗначениеПодчиненногоЭлемента(СтрокаАванса, "Период"))
				+ " : " + ЗначениеПодчиненногоЭлемента(СтрокаАванса, "СумИсчислАвПлат") + " руб.";
			Результат.Вывести(ОбластьАвансыПоОКТМО);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

Функция ПолучитьНаименованиеИзДерева(ДеревоЗагрузки)
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СвНП/НПЮЛ", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда
		НаимОрг = ЗначениеПодчиненногоЭлемента(УзелТек, "НаимОрг");
		ИННЮЛ = ЗначениеПодчиненногоЭлемента(УзелТек, "ИННЮЛ");
		КПП = ЗначениеПодчиненногоЭлемента(УзелТек, "КПП");
		Возврат НаимОрг + "; " + ИННЮЛ + "; " + КПП;
	КонецЕсли;
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СвНП/НПФЛ", "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда
		УзелФИО = УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(УзелТек.Строки, "ФИО", "ИмяЭлемента");
		Фамилия = ЗначениеПодчиненногоЭлемента(УзелФИО, "Фамилия");
		Имя = ЗначениеПодчиненногоЭлемента(УзелФИО, "Имя");
		Отчество = ЗначениеПодчиненногоЭлемента(УзелФИО, "Отчество");
		ИННФЛ = ЗначениеПодчиненногоЭлемента(УзелТек, "ИННФЛ");
		Возврат Фамилия + " " + Имя + " " + Отчество + "; " + ИННФЛ;
	КонецЕсли;
КонецФункции

Функция ПолучитьОписаниеОтправителяИзДерева(ДеревоЗагрузки)
	УзелСвОтпр = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(
		ДеревоЗагрузки, "Файл/Документ/СвОтпр", "ИмяЭлемента");
	КодНО = ЗначениеПодчиненногоЭлемента(УзелСвОтпр, "КодНО");
	НаимНО = ЗначениеПодчиненногоЭлемента(УзелСвОтпр, "НаимНО");
	Возврат "ИФНС " + КодНО + ?(ЗначениеЗаполнено(НаимНО), ", " + НаимНО, "");
КонецФункции

Процедура ДобавитьШтампЭЦП(ТабДок, СсылкаНаОтчет)
	Попытка
		Если ТипЗнч(СсылкаНаОтчет) = Тип("СправочникСсылка.ДокументыРеализацииПолномочийНалоговыхОрганов") Тогда
			Опись = ДокументооборотСКОВызовСервера.ПолучитьОписьВходящихДокументовПоТребованию(СсылкаНаОтчет);
			Если ЗначениеЗаполнено(Опись) Тогда
				КонтекстЭДОСервер = ДокументооборотСКО.ПолучитьОбработкуЭДО();
				КонтекстЭДОСервер.ДобавитьШтампПодписиПодДокументом(Опись, Перечисления.ТипыТранспортныхСообщений.ДокументНО, ТабДок);
			КонецЕсли;
		КонецЕсли;
	Исключение
		ЗаписьЖурналаРегистрации("ВизуализацияВходящихИзвещенийФНС.ДобавитьШтампЭЦП",
			УровеньЖурналаРегистрации.Предупреждение,,,"Не удалось вывести штамп ЭЦП в представление");
	КонецПопытки;
КонецПроцедуры

Функция ЗначениеЭлементаВДереве(ДеревоЗагрузки, Путь, ЗначениеПоУмолчанию = "")
	УзелТек = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, Путь, "ИмяЭлемента");
	Если ТипЗнч(УзелТек) = Тип("СтрокаДереваЗначений") Тогда 
		Возврат УзелТек.ЗначениеЭлемента;
	Иначе
		Возврат ЗначениеПоУмолчанию;
	КонецЕсли;
КонецФункции
#КонецОбласти
#КонецЕсли