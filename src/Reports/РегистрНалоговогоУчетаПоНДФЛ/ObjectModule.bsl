#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОписаниеПеременных

Перем ДанныеОФизЛицеОрганизации, ВыборкаНалогиНачисленныеИтоги, ВыборкаАвансыЗачтенныеИтоги, ВыборкаДоходовПоМесяцамПоРазделам, ВыборкаНалогиУдержанныеИтоги, ВыборкаНалогиВзысканиеИтоги;
Перем ВыборкаНалогиВозвращенныеИтоги, ВыборкаВычетыИтоги;
Перем ВыборкаВычетыПоМесяцамПоВидам, ВыборкаНалогиПеречисленныеИтоги, Ответственный, ДатаПодписи;
Перем ВыборкаСтандартныеВычеты, ВыборкаСоциальныеВычеты, ВыборкаСправкиНДФЛ, ВыборкаУведомления, ВыборкаСтатусов, ВыборкаВычетовПоСтавке13;
Перем ТаблицаРегистрацийВНО;

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	СтандартнаяОбработка = ложь;
	
	ДокументРезультат.НачатьАвтогруппировкуСтрок();
	
	ДокументРезультат.Очистить();
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	НастройкиОтчета.Выбор.Элементы.Очистить();
	
	ПоследняяГруппировка = ЗарплатаКадрыОтчеты.ПолучитьПоследнийЭлементСтруктуры(НастройкиОтчета);

	Группировка = ПоследняяГруппировка.Структура.Добавить(Тип("ГруппировкаКомпоновкиДанных"));
	
	ОтчетыСервер.ДобавитьВыбранноеПоле(Группировка.Выбор, "ГоловнаяОрганизация");
	ОтчетыСервер.ДобавитьВыбранноеПоле(Группировка.Выбор, "Организация");
	ОтчетыСервер.ДобавитьВыбранноеПоле(Группировка.Выбор, "ГОД");
	ОтчетыСервер.ДобавитьВыбранноеПоле(Группировка.Выбор, "ФизическоеЛицо");
	
	ЭлементСортировки = Группировка.Порядок.Элементы.Добавить(Тип("АвтоЭлементПорядкаКомпоновкиДанных"));
	ЭлементСортировки.Использование = Истина;
	
	ЭлементСортировки = НастройкиОтчета.Порядок.Элементы.Добавить(Тип("ЭлементПорядкаКомпоновкиДанных"));
	ЭлементСортировки.Использование = Истина;
	ЭлементСортировки.Поле = Новый ПолеКомпоновкиДанных("ФизическоеЛицо");
	
	ОтборПоОрганизации = Ложь;
	Для Каждого ЭлементОтбора Из НастройкиОтчета.Отбор.Элементы Цикл
		ЭлементОрганизация = Новый ПолеКомпоновкиДанных("Организация");
		Если ЭлементОтбора.Использование = Истина И ЭлементОтбора.ЛевоеЗначение = ЭлементОрганизация Тогда
			ОтборПоОрганизации = Истина;
		КонецЕсли;	
	КонецЦикла;	
	
	ПараметрКомпоновки = Новый ПараметрКомпоновкиДанных("ОтборПоОрганизации");
	ПараметрОтборПоОрганизации = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(ПараметрКомпоновки); 
	ПараметрОтборПоОрганизации.Значение = ОтборПоОрганизации;
	ПараметрОтборПоОрганизации.Использование = Истина;
	
	Ответственный = НастройкиОтчета.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("Ответственный"));
	
	МакетКомпоновки = ЗарплатаКадрыОтчеты.МакетКомпоновкиДанныхДляКоллекцииЗначений(СхемаКомпоновкиДанных, НастройкиОтчета);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , , Истина);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВКоллекциюЗначений;
	
	Данные = Новый ТаблицаЗначений;
	
	ПроцессорВывода.УстановитьОбъект(Данные);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	МассивТипов = Новый Массив(2);
	МассивТипов[0]= Тип("Null");
	СписокФизЛицОрганизация = Новый ТаблицаЗначений;
	МассивТипов[1]= Тип("СправочникСсылка.ФизическиеЛица");
	СписокФизЛицОрганизация.Колонки.Добавить("ФизическоеЛицо", Новый ОписаниеТипов(МассивТипов));
	МассивТипов[1]= Тип("СправочникСсылка.Организации");
	СписокФизЛицОрганизация.Колонки.Добавить("ГоловнаяОрганизация", Новый ОписаниеТипов(МассивТипов));
	СписокФизЛицОрганизация.Колонки.Добавить("Организация", Новый ОписаниеТипов(МассивТипов));
	МассивТипов[1]= Тип("Число");
	СписокФизЛицОрганизация.Колонки.Добавить("Год", Новый ОписаниеТипов(МассивТипов));
	МассивТипов[1]= Тип("Булево");
	СписокФизЛицОрганизация.Колонки.Добавить("НеОтбиратьПоОП", Новый ОписаниеТипов(МассивТипов));

	ПолучитьСпискиФизЛицИСотрудников(Данные, СписокФизЛицОрганизация);	
	
	ПолучитьДанныеДляПостроенияОтчета(СписокФизЛицОрганизация);
	
	// Параметры документа
	ДокументРезультат.Автомасштаб 			= 	Истина;
	ДокументРезультат.ОриентацияСтраницы 	= 	ОриентацияСтраницы.Ландшафт;
	ДокументРезультат.ТолькоПросмотр		= 	Истина;
	
	ВывестиКарточки(ДокументРезультат, Данные);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьДанныеДляПостроенияОтчета(СписокФизЛицОрганизация)
	
	Период = ЗарплатаКадрыОтчеты.НайтиПараметр(КомпоновщикНастроек, "Период").Значение; 
	
	ДатаНачалаНП = Период.ДатаНачала;
	ДатаКонцаНП  = Период.ДатаОкончания;
	ДатаПодписи  = ЗарплатаКадрыОтчеты.НайтиПараметр(КомпоновщикНастроек, "ДатаПодписи").Значение;
	Если ТипЗнч(ДатаПодписи) = Тип("СтандартнаяДатаНачала") Тогда 
		ДатаПодписи = ДатаПодписи.Дата;
	КонецЕсли;	
	
	Если ДатаПодписи = Неопределено Или ДатаПодписи = '00010101' Тогда
		ДатаПодписи = ТекущаяДатаСеанса();
	КонецЕсли;

	ФизическоеЛицоОтветственного = ?(Ответственный = Неопределено, Справочники.ФизическиеЛица.ПустаяСсылка(), ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ответственный.Значение, "ФизическоеЛицо"));
	
	// Создание запроса и установка всех необходимых параметров.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ответственный", Ответственный);
	Запрос.УстановитьПараметр("ФизлицоОтветственного", ФизическоеЛицоОтветственного);
	Запрос.УстановитьПараметр("НачалоНП", ДатаНачалаНП);
	Запрос.УстановитьПараметр("КонецНП", ДатаКонцаНП);
	Запрос.УстановитьПараметр("ДатаАктуальности", ДатаПодписи);
	Запрос.УстановитьПараметр("СписокФизЛицОрганизация", СписокФизЛицОрганизация);
	Запрос.УстановитьПараметр("Резидент", Справочники.СтатусыНалогоплательщиковПоНДФЛ.Резидент);
	Запрос.УстановитьПараметр("Нерезидент", Справочники.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент);
	Запрос.УстановитьПараметр("ДатаИзмененияНалогообложенияДивидендов", УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов());
	Запрос.УстановитьПараметр("ДатаНачалаРасчетаСроковУплатыНалога", УчетНДФЛ.ДатаНачалаРасчетаСроковУплатыНалога());
	Запрос.УстановитьПараметр("ДатаЗакона263ФЗ", УчетНДФЛ.ДатаЗакона263ФЗ());
	Запрос.УстановитьПараметр("ДатаЗакона285ФЗ", УчетНДФЛ.ДатаЗакона285ФЗ());
	Запрос.УстановитьПараметр("ДатаЗакона176ФЗ", УчетНДФЛ.ДатаЗакона176ФЗ());
	Запрос.УстановитьПараметр("ГодЗакона285ФЗ", Год(УчетНДФЛ.ДатаЗакона285ФЗ()));
	ПараметрыРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();		
	Запрос.УстановитьПараметр("ДатаОбъединенияНалоговыхБаз", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.ДатаОбъединенияНалоговыхБаз);
	Запрос.УстановитьПараметр("НачалоРасчетаНДФЛПоПрогрессивнойШкале", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.НачалоРасчетаНДФЛПоПрогрессивнойШкале);
	Запрос.УстановитьПараметр("ГодНачалаРасчетаНДФЛПоПрогрессивнойШкале", Год(ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.НачалоРасчетаНДФЛПоПрогрессивнойШкале));
	Запрос.УстановитьПараметр("ОсновнаяНалоговаяБаза", Перечисления.КатегорииДоходовНДФЛ.ОсновнаяНалоговаяБаза());
	Запрос.УстановитьПараметр("ОбщаяНалоговаяБаза", Перечисления.КатегорииДоходовНДФЛ.ПоОсновнойСтавке());
	Запрос.УстановитьПараметр("ДоходыОтТрудовойДеятельности", Перечисления.КатегорииДоходовНДФЛ.ДоходыОтТрудовойДеятельности());
	Запрос.УстановитьПараметр("Предел", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел);
	Запрос.УстановитьПараметр("СтавкаСПревышения", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Ставка);
	Запрос.УстановитьПараметр("СтавкаЧисломСПревышения", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом);
	// Сформируем текст запроса с датами месяцев налогового периода.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(Запрос.МенеджерВременныхТаблиц, ДатаНачалаНП, ДатаКонцаНП,,,, Истина);
	
	// -----------------------------------------------------------------------------
	// ВЫБОРКА СВЕДЕНИЙ ОБ ОРГАНИЗАЦИИ И ФИЗЛИЦЕ (Данные разделов 1 и 2).
	// 	
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ФизЛицаОрганизация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ФизЛицаОрганизация.Организация,
	|	ФизЛицаОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ФизЛицаОрганизация.Год КАК Год,
	|	ФизЛицаОрганизация.НеОтбиратьПоОП
	|ПОМЕСТИТЬ ВТСписокФизЛицОрганизация
	|ИЗ
	|	&СписокФизЛицОрганизация КАК ФизЛицаОрганизация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	ГоловнаяОрганизация,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСписокФизЛицОрганизация.ФизическоеЛицо,
	|	&ДатаАктуальности КАК Период
	|ПОМЕСТИТЬ ВТФизическиеЛица
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВТСписокФизЛицОрганизация.ГоловнаяОрганизация КАК СтруктурнаяЕдиница,
	|	&ДатаАктуальности КАК Период
	|ПОМЕСТИТЬ ВТГоловныеОрганизации
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ВТСписокФизЛицОрганизация.ГоловнаяОрганизация,
	|	ВТСписокФизЛицОрганизация.ФизическоеЛицо,
	|	ВТСписокФизЛицОрганизация.Год,
	|	ВЫБОР
	|		КОГДА Организации.Ссылка ЕСТЬ NULL 
	|			ТОГДА ВТСписокФизЛицОрганизация.Организация
	|		ИНАЧЕ Организации.Ссылка
	|	КОНЕЦ КАК Организация
	|ПОМЕСТИТЬ ВТОбособленныеПодразделения
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Организации КАК Организации
	|		ПО ВТСписокФизЛицОрганизация.ГоловнаяОрганизация = Организации.ГоловнаяОрганизация
	|			И (ВТСписокФизЛицОрганизация.НеОтбиратьПоОП)
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	ВТСписокФизЛицОрганизация.ГоловнаяОрганизация,
	|	ВТСписокФизЛицОрганизация.ФизическоеЛицо,
	|	ВТСписокФизЛицОрганизация.Год,
	|	ВТСписокФизЛицОрганизация.Организация
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Периоды.Период) КАК Период,
	|	СписокФизЛицОрганизация.Год КАК Год,
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТТаблицаДляСрезаНаКонецГода
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО (ГОД(Периоды.Период) = СписокФизЛицОрганизация.Год)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокФизЛицОрганизация.Год,
	|	СписокФизЛицОрганизация.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
	МассивНеобходимыхДанных = Новый Массив;
	МассивНеобходимыхДанных.Добавить("ФИОПолные");
	МассивНеобходимыхДанных.Добавить("ДокументВид");
	МассивНеобходимыхДанных.Добавить("ДокументНомер");
	МассивНеобходимыхДанных.Добавить("ДокументСерия");
	МассивНеобходимыхДанных.Добавить("АдресПоПрописке");
	МассивНеобходимыхДанных.Добавить("АдресЗаПределамиРФ");
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(
		Запрос.МенеджерВременныхТаблиц,
		"ВТФизическиеЛица");
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Ложь, МассивНеобходимыхДанных);
	
	// Получим кадровые данные ответственного лица.
	ФизическоеЛицоОтветственногоВМассиве = Новый Массив;
	ФизическоеЛицоОтветственногоВМассиве.Добавить(ФизическоеЛицоОтветственного);
	ПараметрыПолученияСотрудниковОрганизаций = КадровыйУчет.ПараметрыПолученияСотрудниковОрганизацийПоСпискуФизическихЛиц();
	ПараметрыПолученияСотрудниковОрганизаций.СписокФизическихЛиц 	= ФизическоеЛицоОтветственногоВМассиве;
	ПараметрыПолученияСотрудниковОрганизаций.НачалоПериода 			= ДатаПодписи;
	ПараметрыПолученияСотрудниковОрганизаций.ОкончаниеПериода 		= ДатаПодписи;
	ПараметрыПолученияСотрудниковОрганизаций.КадровыеДанные			= "ВидЗанятости,Организация,Должность";
	
	КадровыйУчет.СоздатьВТСотрудникиОрганизации(Запрос.МенеджерВременныхТаблиц, Истина, ПараметрыПолученияСотрудниковОрганизаций);
	КадровыйУчет.СоздатьВТСтраныМираДляГражданства(Запрос.МенеджерВременныхТаблиц);
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.Вставить("ВсеЗаписи", Истина);
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ГражданствоФизическихЛиц",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТТаблицаДляСрезаНаКонецГода",
			"Период,ФизическоеЛицо"),
		ПараметрыПостроения);
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ИсторияРегистрацийВНалоговомОргане",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТГоловныеОрганизации",
			"Период,СтруктурнаяЕдиница"));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ГОД(ГражданствоФизЛицаСрезПоследних.Период) КАК Год,
	|	ГражданствоФизЛицаСрезПоследних.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтраныМира.Код КАК КодСтраны,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ГражданствоФизЛицаСрезПоследних.Страна, ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)) = ЗНАЧЕНИЕ(Справочник.СтраныМира.Россия)
	|			ТОГДА """"
	|		ИНАЧЕ ГражданствоФизЛицаСрезПоследних.ИНН
	|	КОНЕЦ КАК ИННВСтранеГражданства
	|ПОМЕСТИТЬ ВТГражданствоФизЛиц
	|ИЗ
	|	ВТГражданствоФизическихЛицСрезПоследних КАК ГражданствоФизЛицаСрезПоследних
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтраныМираДляГражданства КАК СтраныМира
	|		ПО ГражданствоФизЛицаСрезПоследних.Страна = СтраныМира.Страна
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Периоды.Период КАК Период,
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО (ГОД(Периоды.Период) = СписокФизЛицОрганизация.Год)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(Периоды.Период) КАК Период,
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТИзмеренияДатыДляВТСтатусыФизЛицНаКонецНалоговогоПериода
	|ИЗ
	|	ВТПериоды КАК Периоды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО (ГОД(Периоды.Период) = СписокФизЛицОрганизация.Год)
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокФизЛицОрганизация.Год,
	|	СписокФизЛицОрганизация.ФизическоеЛицо";
	
	Запрос.Выполнить();
	
	// Статусы застрахованных на конец месяца.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца",
			"ФизическоеЛицо"),
		,
		"ВТСтатусФизЛицНаКонецМесяцаПромежуточная");
		
	// Статусы застрахованных на конец налогового периода.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"СтатусФизическихЛицКакНалогоплательщиковНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТИзмеренияДатыДляВТСтатусыФизЛицНаКонецНалоговогоПериода",
			"ФизическоеЛицо"),
		,
		"ВТСтатусыФизЛицНаКонецНалоговогоПериодаПромежуточная");
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.Период, МЕСЯЦ) КАК Месяц,
	|	ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ВЫБОР
	|			КОГДА ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.Период < &ДатаИзмененияНалогообложенияДивидендов
	|				ТОГДА СтатусФизЛицНаКонецМесяца.Статус.КодФНС
	|			ИНАЧЕ СтатусФизЛицНаКонецМесяца.Статус.КодФНС_2015
	|		КОНЕЦ, 1) КАК Статус,
	|	ВЫБОР
	|		КОГДА ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.Период < &ДатаЗакона285ФЗ
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатусФизЛицНаКонецМесяца.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(СтатусФизЛицНаКонецМесяца.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЯвляетсяРезидентомРФ,
	|	ВЫБОР
	|		КОГДА ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.Период < &ДатаЗакона285ФЗ
	|				И СтатусФизЛицНаКонецМесяца.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусФизЛицНаКонецМесяца.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК ТекущийСтатус
	|ПОМЕСТИТЬ ВТСтатусФизЛицНаКонецМесяца
	|ИЗ
	|	ВТИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца КАК ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусФизЛицНаКонецМесяцаПромежуточная КАК СтатусФизЛицНаКонецМесяца
	|		ПО ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.Период = СтатусФизЛицНаКонецМесяца.Период
	|			И ИзмеренияДатыДляВТСтатусФизЛицНаКонецМесяца.ФизическоеЛицо = СтатусФизЛицНаКонецМесяца.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокФизЛицОрганизация.ГОД КАК Год,
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА СписокФизЛицОрганизация.ГОД < &ГодЗакона285ФЗ
	|			ТОГДА ВЫБОР
	|					КОГДА ЕСТЬNULL(СтатусыФизЛицНаКонецНалоговогоПериода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) В (ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент), ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы))
	|						ТОГДА ЛОЖЬ
	|					ИНАЧЕ ИСТИНА
	|				КОНЕЦ
	|		КОГДА ЕСТЬNULL(СтатусыФизЛицНаКонецНалоговогоПериода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент)) = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЯвляетсяРезидентомРФ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатусыФизЛицНаКонецНалоговогоПериода.Статус, &Резидент) <> &Резидент
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ИспользоватьИностранныйАдрес,
	|	ВЫБОР
	|		КОГДА СписокФизЛицОрганизация.ГОД < &ГодЗакона285ФЗ
	|				И СтатусыФизЛицНаКонецНалоговогоПериода.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Беженцы)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Нерезидент)
	|		ИНАЧЕ ЕСТЬNULL(СтатусыФизЛицНаКонецНалоговогоПериода.Статус, ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент))
	|	КОНЕЦ КАК Статус
	|ПОМЕСТИТЬ ВТСтатусыФизЛицНаКонецНалоговогоПериода
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериодаПромежуточная КАК СтатусыФизЛицНаКонецНалоговогоПериода
	|		ПО (СписокФизЛицОрганизация.ГОД = ГОД(СтатусыФизЛицНаКонецНалоговогоПериода.Период))
	|			И СписокФизЛицОрганизация.ФизическоеЛицо = СтатусыФизЛицНаКонецНалоговогоПериода.ФизическоеЛицо
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Год
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусФизЛицНаКонецМесяца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СтатусФизЛицНаКонецМесяца.Месяц, МЕСЯЦ) КАК Период
	|ПОМЕСТИТЬ ВТИзмеренияДатыДляВТПрименениеСтандартныхВычетовПоНДФЛСрезПоследних
	|ИЗ
	|	ВТСтатусФизЛицНаКонецМесяца КАК СтатусФизЛицНаКонецМесяца
	|
	|СГРУППИРОВАТЬ ПО
	|	СтатусФизЛицНаКонецМесяца.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СтатусФизЛицНаКонецМесяца.Месяц, МЕСЯЦ)";
	
	Запрос.Выполнить();

	// Статусы застрахованных на конец налогового периода.
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"ПрименениеСтандартныхВычетовПоНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТИзмеренияДатыДляВТПрименениеСтандартныхВычетовПоНДФЛСрезПоследних",
			"ФизическоеЛицо"));
			
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтатусФизЛицНаКонецМесяца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(СтатусФизЛицНаКонецМесяца.Месяц, МЕСЯЦ) КАК Период,
	|	НДФЛПрименениеВычетов.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|ПОМЕСТИТЬ ВТПрименениеВычетовВМесяцаРезидентства
	|ИЗ
	|	ВТСтатусФизЛицНаКонецМесяца КАК СтатусФизЛицНаКонецМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериода КАК СтатусыФизЛицНаКонецНалоговогоПериода
	|		ПО (ГОД(СтатусФизЛицНаКонецМесяца.Месяц) = СтатусыФизЛицНаКонецНалоговогоПериода.Год)
	|			И СтатусФизЛицНаКонецМесяца.ФизическоеЛицо = СтатусыФизЛицНаКонецНалоговогоПериода.ФизическоеЛицо
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТПрименениеСтандартныхВычетовПоНДФЛСрезПоследних КАК НДФЛПрименениеВычетов
	|		ПО (НДФЛПрименениеВычетов.ФизическоеЛицо = СтатусФизЛицНаКонецМесяца.ФизическоеЛицо)
	|			И (НДФЛПрименениеВычетов.Период = СтатусФизЛицНаКонецМесяца.Месяц)
	|ГДЕ
	|	СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо,
	|	Период,
	|	ГоловнаяОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ДатаАктуальности КАК Период,
	|	ФизЛица.ГоловнаяОрганизация.ИндивидуальныйПредприниматель КАК ФизическоеЛицо
	|ПОМЕСТИТЬ ВТФизическиеЛицаДляПолученияФИО
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ФизЛица
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&ДатаАктуальности,
	|	&ФизлицоОтветственного";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("ОбъединеннаяНалоговаяБазаСтрокой", НСтр("ru = 'Объединенная налоговая база';
																		|en = 'Merged tax base'"));
	Запрос.УстановитьПараметр("ОсновнаяНалоговаяБазаСтрокой", НСтр("ru = 'Основная налоговая база';
																	|en = 'Main tax base'"));
	Запрос.УстановитьПараметр("Дивиденды", НСтр("ru = 'Дивиденды';
												|en = 'Dividends'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыОтДолевогоУчастия", НСтр("ru = 'Доходы от долевого участия';
																	|en = 'Income from share'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыПоВыигрышам", НСтр("ru = 'Доходы по выигрышам';
																|en = 'Income from prizes'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыЦБ", НСтр("ru = 'Операции с ценными бумагами кроме процента, купона по облигациям российских организаций';
													|en = 'Security transactions other than interest, coupon on Russian companies'' bonds'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыРЕПО", НСтр("ru = 'Операции РЕПО';
														|en = 'repo transactions'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыЗаймЦБ", НСтр("ru = 'Операции займа ценными бумагами';
														|en = 'Loan transactions in securities'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыИИС", НСтр("ru = 'Операции на ИИС';
														|en = 'Personal investment account transactions'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыПоОблигациям", НСтр("ru = 'Процент, купон по облигациям российских организаций с 1 января 2017 г.';
																|en = 'Interest, coupon on Russian companies'' bonds from January 1, 2017.'"));
	Запрос.УстановитьПараметр("ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ", НСтр("ru = 'Прочие доходы, облагаемые по ставке п. 1.1 ст. 224 НК РФ';
																				|en = 'Other income subject to tax at a rate cl. 1.1 art. 224 of the Tax Code of the Russian Federation'"));
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда) КАК КатегорияДохода,
	|	&ОсновнаяНалоговаяБазаСтрокой КАК ПредставлениеНалоговойБазы,
	|	1 КАК ПорядокНалоговойБазы
	|ПОМЕСТИТЬ ВТОписаниеНалоговыхБаз
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды),
	|	&Дивиденды,
	|	90
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке03),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке05),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПоСтавке06),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке07),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке10),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.АвторскиеРоялтиПроцентыПоСтавке15),
	|	"""",
	|	99
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыОтДолевогоУчастия),
	|	&ПрочиеДоходыОтДолевогоУчастия,
	|	2
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоВыигрышам),
	|	&ПрочиеДоходыПоВыигрышам,
	|	3
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ),
	|	&ПрочиеДоходыЦБ,
	|	4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыРЕПО),
	|	&ПрочиеДоходыРЕПО,
	|	5
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЗаймЦБ),
	|	&ПрочиеДоходыЗаймЦБ,
	|	6
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыИИС),
	|	&ПрочиеДоходыИИС,
	|	7
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоОблигациям),
	|	&ПрочиеДоходыПоОблигациям,
	|	8
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ),
	|	&ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ,
	|	9";
	Запрос.Выполнить();

	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеФизическихЛиц(Запрос.МенеджерВременныхТаблиц, "ВТФизическиеЛицаДляПолученияФИО");
	ОписательВременныхТаблиц.ИмяВТКадровыеДанныеФизическихЛиц = "ВТФИООтветственных";
	КадровыйУчет.СоздатьВТКадровыеДанныеФизическихЛиц(ОписательВременныхТаблиц, Истина, "ФИОПолные,ИОФамилия");

	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СписокФизЛицОрганизация.Год КАК Год,
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация.ИНН КАК Организация_ИНН,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КПП КАК Организация_КПП,
	|	ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.Код КАК Организация_КодНалоговогоОргана,
	|	ВЫБОР
	|		КОГДА СписокФизЛицОрганизация.ГоловнаяОрганизация.ЮридическоеФизическоеЛицо = ЗНАЧЕНИЕ(Перечисление.ЮридическоеФизическоеЛицо.ЮридическоеЛицо)
	|			ТОГДА СписокФизЛицОрганизация.ГоловнаяОрганизация.НаименованиеПолное
	|		ИНАЧЕ ФИОПредпринимателя.ФИОПолные
	|	КОНЕЦ КАК Организация_Наименование,
	|	ДанныеОФизЛице.ИНН КАК ФизическоеЛицо_ИНН,
	|	КадровыеДанныеФизЛиц.ФИОПолные КАК ФизическоеЛицо_ФИО,
	|	ФИОФизлицаОтветственного.ИОФамилия КАК Ответственный_ФИО,
	|	ДолжностьОтветственного.Должность.Наименование КАК Ответственный_Должность,
	|	КадровыеДанныеФизЛиц.ДокументВид.Наименование КАК ВидДокумента,
	|	ВЫБОР
	|		КОГДА КадровыеДанныеФизЛиц.ДокументВид ЕСТЬ NULL 
	|			ТОГДА """"
	|		ИНАЧЕ КадровыеДанныеФизЛиц.ДокументВид.КодМВД
	|	КОНЕЦ КАК КодДокументаУдЛичн,
	|	ВЫБОР
	|		КОГДА КадровыеДанныеФизЛиц.ДокументВид ЕСТЬ NULL 
	|			ТОГДА """"
	|		ИНАЧЕ КадровыеДанныеФизЛиц.ДокументСерия + "" "" + КадровыеДанныеФизЛиц.ДокументНомер
	|	КОНЕЦ КАК ФизическоеЛицо_СерияНомерДокументаУдЛичн,
	|	ДанныеОФизЛице.ДатаРождения КАК ФизическоеЛицо_ДатаРождения,
	|	ЕСТЬNULL(ГражданствоФизЛица.КодСтраны, ""643"") КАК ФизическоеЛицо_КодСтраны,
	|	ДоходыПредыдущегоМестаРаботыНДФЛ.Размер КАК ФизическоеЛицо_ДоходыПредыдущегоМестаРаботы,
	|	ЕСТЬNULL(КадровыеДанныеФизЛиц.АдресПоПрописке, """") КАК АдресРегистрации,
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ИспользоватьИностранныйАдрес
	|			ТОГДА ЕСТЬNULL(ГражданствоФизЛица.КодСтраны, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ФизическоеЛицо_АдресКодСтраны,
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ИспользоватьИностранныйАдрес
	|			ТОГДА ЕСТЬNULL(КадровыеДанныеФизЛиц.АдресЗаПределамиРФ, """")
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК ФизическоеЛицо_ИностранныйАдрес
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственных КАК ФИОПредпринимателя
	|		ПО (ФИОПредпринимателя.ФизическоеЛицо = СписокФизЛицОрганизация.ГоловнаяОрганизация.ИндивидуальныйПредприниматель)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ДанныеОФизЛице
	|		ПО СписокФизЛицОрганизация.ФизическоеЛицо = ДанныеОФизЛице.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ФизическиеЛица КАК ДанныеОбОтветственном
	|		ПО (ДанныеОбОтветственном.Ссылка = &ФизлицоОтветственного)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеФизическихЛиц КАК КадровыеДанныеФизЛиц
	|		ПО СписокФизЛицОрганизация.ФизическоеЛицо = КадровыеДанныеФизЛиц.ФизическоеЛицо
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсторияРегистрацийВНалоговомОрганеСрезПоследних КАК ИсторияРегистрацийВНалоговомОргане
	|		ПО СписокФизЛицОрганизация.ГоловнаяОрганизация = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТФИООтветственных КАК ФИОФизлицаОтветственного
	|		ПО (ФИОФизлицаОтветственного.ФизическоеЛицо = &ФизлицоОтветственного)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТГражданствоФизЛиц КАК ГражданствоФизЛица
	|		ПО СписокФизЛицОрганизация.ФизическоеЛицо = ГражданствоФизЛица.ФизическоеЛицо
	|			И СписокФизЛицОрганизация.Год = ГражданствоФизЛица.Год
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДоходыПредыдущегоМестаРаботыНДФЛ КАК ДоходыПредыдущегоМестаРаботыНДФЛ
	|		ПО СписокФизЛицОрганизация.ФизическоеЛицо = ДоходыПредыдущегоМестаРаботыНДФЛ.ФизическоеЛицо
	|			И СписокФизЛицОрганизация.ГоловнаяОрганизация = ДоходыПредыдущегоМестаРаботыНДФЛ.ГоловнаяОрганизация
	|			И (СписокФизЛицОрганизация.Год = ГОД(ДоходыПредыдущегоМестаРаботыНДФЛ.МесяцНалоговогоПериода))
	|			И (МЕСЯЦ(ДоходыПредыдущегоМестаРаботыНДФЛ.МесяцНалоговогоПериода) = 12)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиОрганизации КАК ДолжностьОтветственного
	|		ПО (ДолжностьОтветственного.ВидЗанятости <> ЗНАЧЕНИЕ(Перечисление.ВидыЗанятости.ВнутреннееСовместительство))
	|			И (ДолжностьОтветственного.Организация = СписокФизЛицОрганизация.ГоловнаяОрганизация)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериода КАК СтатусыФизЛицНаКонецНалоговогоПериода
	|		ПО СписокФизЛицОрганизация.ФизическоеЛицо = СтатусыФизЛицНаКонецНалоговогоПериода.ФизическоеЛицо
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	Год";
	
	ДанныеОФизЛицеОрганизации = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
	УчетНДФЛ.СоздатьВТСтандартныеВычетыПоНДФЛЗаПериод(Запрос.МенеджерВременныхТаблиц, Ложь, ДатаПодписи, "ВТПрименениеВычетовВМесяцаРезидентства");
	УчетНДФЛ.СоздатьВТДополнительныеСвойстваКодаДохода(Запрос.МенеджерВременныхТаблиц);
	
	// АПК:96-выкл в таблице ВТСтрокиУчета строки должны быть уникальны
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛСведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛСведенияОДоходах.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛСведенияОДоходах.СуммаДохода КАК СуммаДохода,
	|	НДФЛСведенияОДоходах.КодДохода КАК КодДохода,
	|	НДФЛСведенияОДоходах.КатегорияДохода КАК КатегорияДохода,
	|	НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛСведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	НДФЛСведенияОДоходах.Период КАК Период,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.ДатаПолученияДохода >= &НачалоРасчетаНДФЛПоПрогрессивнойШкале
	|				И НДФЛСведенияОДоходах.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|			ТОГДА 0
	|		ИНАЧЕ НДФЛСведенияОДоходах.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.ДатаПолученияДохода >= &НачалоРасчетаНДФЛПоПрогрессивнойШкале
	|				И НДФЛСведенияОДоходах.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыВычетовНДФЛ.ПустаяСсылка)
	|		ИНАЧЕ НДФЛСведенияОДоходах.КодВычета
	|	КОНЕЦ КАК КодВычета,
	|	НДФЛСведенияОДоходах.ДатаПолученияДохода КАК ПериодДляОпределенияСтатуса,
	|	НДФЛСведенияОДоходах.КодДохода.Код КАК КодДоходаКод,
	|	НДФЛСведенияОДоходах.МесяцНалоговогоПериода < &ДатаЗакона263ФЗ
	|		И СвойстваКодаДохода.СоответствуетОплатеТруда
	|		И (НДФЛСведенияОДоходах.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|			ИЛИ НДФЛСведенияОДоходах.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДоходыПредыдущихРедакций)) КАК УчитываетсяПоМесяцуНачисления,
	|	НДФЛСведенияОДоходах.КодДохода.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2021, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2025, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2021Года
	|		ИНАЧЕ НДФЛСведенияОДоходах.КодДохода.КодПрименяемыйВНалоговойОтчетностиС2025Года
	|	КОНЕЦ КАК КодДоходаКодДляОтчетности,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛСведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ НДФЛСведенияОДоходах.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ КАК КодВычетаКодДляОтчетности,
	|	НДФЛСведенияОДоходах.КодВычета.НеПредоставляетсяНерезидентам КАК ВычетНеПредоставляетсяНерезидентам,
	|	НДФЛСведенияОДоходах.ИсточникДоходаЗаПределамиРФ КАК ИсточникДоходаЗаПределамиРФ,
	|	&УсловиеОблагаемостиУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
	|	НДФЛСведенияОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
	|	НДФЛСведенияОДоходах.ДокументОснование КАК ДокументОснование,
	|	НДФЛСведенияОДоходах.УстаревшаяДатаПолученияДохода КАК УстаревшаяДатаПолученияДохода
	|ПОМЕСТИТЬ ВТСтрокиДоходов
	|ИЗ
	|	РегистрНакопления.СведенияОДоходахНДФЛ КАК НДФЛСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДополнительныеСвойстваКодаДохода КАК СвойстваКодаДохода
	|		ПО НДФЛСведенияОДоходах.КодДохода = СвойстваКодаДохода.КодДохода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО НДФЛСведенияОДоходах.ФизическоеЛицо = СписокФизЛицОрганизация.ФизическоеЛицо
	|			И НДФЛСведенияОДоходах.ГоловнаяОрганизация = СписокФизЛицОрганизация.ГоловнаяОрганизация
	|			И (СписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ НДФЛСведенияОДоходах.Организация = СписокФизЛицОрганизация.Организация)
	|ГДЕ
	|	НДФЛСведенияОДоходах.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВидДвижения КАК ВидДвижения,
	|	НДФЛРасчетыСБюджетом.Сумма КАК Сумма,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышения КАК СуммаСПревышения,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18 КАК СуммаСПревышенияПоСтавке18,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20 КАК СуммаСПревышенияПоСтавке20,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22 КАК СуммаСПревышенияПоСтавке22,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания КАК ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	НДФЛРасчетыСБюджетом.Период КАК Период,
	|	НДФЛРасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода,
	|	НДФЛРасчетыСБюджетом.КодДохода КАК КодДохода,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК ПериодДляОпределенияСтатуса,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.КрайнийСрокУплаты КАК СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КатегорияДохода В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке12), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке10), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ДивидендыПоСтавке05), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды))
	|			ТОГДА НДФЛРасчетыСБюджетом.НалогСДивидендовУплаченныйЗаРубежом
	|		ИНАЧЕ 0
	|	КОНЕЦ + ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|			ТОГДА НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогНаПрибыльДляДивидендов
	|ПОМЕСТИТЬ ВТСтрокиНалогов
	|ИЗ
	|	РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК НДФЛРасчетыСБюджетом
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СписокФизЛицОрганизация.ФизическоеЛицо
	|			И (ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода) = СписокФизЛицОрганизация.Год)
	|			И НДФЛРасчетыСБюджетом.ГоловнаяОрганизация = СписокФизЛицОрганизация.ГоловнаяОрганизация
	|			И (СписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ НДФЛРасчетыСБюджетом.Организация = СписокФизЛицОрганизация.Организация)
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиДоходов.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтрокиДоходов.ПериодДляОпределенияСтатуса КАК Период,
	|	СтрокиДоходов.КодДохода КАК КодДохода,
	|	СтрокиДоходов.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СтрокиДоходов.КатегорияДохода КАК КатегорияДохода
	|ПОМЕСТИТЬ ВТСтрокиУчета
	|ИЗ
	|	ВТСтрокиДоходов КАК СтрокиДоходов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.ФизическоеЛицо,
	|	СтрокиНалогов.ПериодДляОпределенияСтатуса,
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КатегорияДохода
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтрокиНалогов.ФизическоеЛицо,
	|	КОНЕЦПЕРИОДА(СтрокиНалогов.ПериодДляОпределенияСтатуса, ГОД),
	|	СтрокиНалогов.КодДохода,
	|	СтрокиНалогов.СтавкаНалогообложенияРезидента,
	|	СтрокиНалогов.КатегорияДохода
	|ИЗ
	|	ВТСтрокиНалогов КАК СтрокиНалогов";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&УсловиеОблагаемостиУНалоговогоАгента", УчетНДФЛ.УсловиеОблагаемостиУНалоговогоАгента("НДФЛСведенияОДоходах"));
	Запрос.Выполнить();
	// АПК:96-вкл
	
	УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета",,,"ВТСтавкаНДФЛ");
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	СтрокиУчета.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтрокиУчета.Период КАК Период,
	|	СтрокиУчета.КодДохода КАК КодДохода,
	|	СтрокиУчета.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СтрокиУчета.КатегорияДохода КАК КатегорияДохода
	|ИЗ
	|	ВТСтрокиУчета КАК СтрокиУчета
	|ГДЕ
	|	СтрокиУчета.Период < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)";
	Если Запрос.Выполнить().Пустой() Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ ПЕРВЫЕ 0
		|	ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка) КАК ФизическоеЛицо,
		|	ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ПустаяСсылка) КАК Статус,
		|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
		|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.ПустаяСсылка) КАК КодДохода,
		|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.ПустаяСсылка) КАК СтавкаНалогообложенияРезидента,
		|	ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.ПустаяСсылка) КАК СтавкаНДФЛ,
		|	0 КАК СтавкаЧислом
		|ПОМЕСТИТЬ ВТСтавкаНДФЛПоСтавкеРезидента";
		Запрос.Выполнить();
	Иначе 	
		УчетНДФЛ.СоздатьВТСтавкаНДФЛПоСтавкеРезидента2016(Запрос.МенеджерВременныхТаблиц, "ВТСтрокиУчета");
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СоответствиеНалоговыхБаз", УчетНДФЛПовтИсп.СоставНалоговыхБаз());
	Запрос.УстановитьПараметр("ДатаЗакона176ФЗ", УчетНДФЛ.ДатаЗакона176ФЗ());
	Запрос.УстановитьПараметр("ТаблицаПределовДляНалоговыхБаз", УчетНДФЛ.ТаблицаПределовДляНалоговыхБаз2025());
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоответствиеНалоговыхБаз.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	СоответствиеНалоговыхБаз.НалоговаяБаза КАК НалоговаяБаза,
	|	СоответствиеНалоговыхБаз.КатегорияДохода КАК КатегорияДохода,
	|	СоответствиеНалоговыхБаз.ПериодС КАК ПериодС,
	|	СоответствиеНалоговыхБаз.ПериодПо КАК ПериодПо,
	|	СоответствиеНалоговыхБаз.СтатусФизическогоЛица КАК Статус
	|ПОМЕСТИТЬ ВТСоответствиеНалоговыхБаз
	|ИЗ
	|	&СоответствиеНалоговыхБаз КАК СоответствиеНалоговыхБаз
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПределов.НалоговаяБаза КАК НалоговаяБаза,
	|	ТаблицаПределов.Предел1 КАК Предел1
	|ПОМЕСТИТЬ ВТПределыДляНалоговыхБаз
	|ИЗ
	|	&ТаблицаПределовДляНалоговыхБаз КАК ТаблицаПределов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.ВидДвижения КАК ВидДвижения,
	|	НДФЛРасчетыСБюджетом.Сумма КАК Сумма,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышения КАК СуммаСПревышения,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18 КАК СуммаСПревышенияПоСтавке18,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20 КАК СуммаСПревышенияПоСтавке20,
	|	НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22 КАК СуммаСПревышенияПоСтавке22,
	|	НДФЛРасчетыСБюджетом.ВариантУдержания КАК ВариантУдержания,
	|	НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|			ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
	|		ИНАЧЕ СтавкиНДФЛ.СтавкаНДФЛ
	|	КОНЕЦ КАК Ставка,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|			ТОГДА СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода.СтавкаНДФЛ
	|		ИНАЧЕ СтавкаНДФЛНаКонецНалоговогоПериода.СтавкаНДФЛ
	|	КОНЕЦ КАК СтавкаПоИтогамГода,
	|	НДФЛРасчетыСБюджетом.Период КАК Период,
	|	НДФЛРасчетыСБюджетом.КатегорияДохода КАК КатегорияДохода,
	|	ЕСТЬNULL(СоответствиеНалоговыхБаз.НалоговаяБаза, ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)) КАК НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.КодДохода КАК КодДохода,
	|	НДФЛРасчетыСБюджетом.ПериодДляОпределенияСтатуса КАК ПериодДляОпределенияСтатуса,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления КАК СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.СуммаВыплаченногоДохода КАК СуммаВыплаченногоДохода,
	|	НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов КАК НалогНаПрибыльДляДивидендов
	|ПОМЕСТИТЬ ВТСтрокиНалоговСоСтавками
	|ИЗ
	|	ВТСтрокиНалогов КАК НДФЛРасчетыСБюджетом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И НДФЛРасчетыСБюджетом.ПериодДляОпределенияСтатуса = СтавкаНДФЛПоСтавкеРезидента.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.КодДохода = СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода.КодДохода
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода.СтавкаНалогообложенияРезидента
	|			И (КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.ПериодДляОпределенияСтатуса, ГОД) = СтавкаНДФЛПоСтавкеРезидентаНаКонецНалоговогоПериода.Период)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛ КАК СтавкиНДФЛ
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкиНДФЛ.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкиНДФЛ.КатегорияДохода
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкиНДФЛ.СтавкаНалогообложенияРезидента
	|			И НДФЛРасчетыСБюджетом.ПериодДляОпределенияСтатуса = СтавкиНДФЛ.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеНалоговыхБаз КАК СоответствиеНалоговыхБаз
	|		ПО НДФЛРасчетыСБюджетом.КатегорияДохода = СоответствиеНалоговыхБаз.КатегорияДохода
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СоответствиеНалоговыхБаз.СтавкаНалогообложенияРезидента
	|			И (СтавкиНДФЛ.Статус = СоответствиеНалоговыхБаз.Статус)
	|			И (НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода МЕЖДУ СоответствиеНалоговыхБаз.ПериодС И СоответствиеНалоговыхБаз.ПериодПо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛ КАК СтавкаНДФЛНаКонецНалоговогоПериода
	|		ПО НДФЛРасчетыСБюджетом.ФизическоеЛицо = СтавкаНДФЛНаКонецНалоговогоПериода.ФизическоеЛицо
	|			И НДФЛРасчетыСБюджетом.КатегорияДохода = СтавкаНДФЛНаКонецНалоговогоПериода.КатегорияДохода
	|			И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = СтавкаНДФЛНаКонецНалоговогоПериода.СтавкаНалогообложенияРезидента
	|			И (КОНЕЦПЕРИОДА(НДФЛРасчетыСБюджетом.ПериодДляОпределенияСтатуса, ГОД) = СтавкаНДФЛНаКонецНалоговогоПериода.Период)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ВидДвижения КАК ВидДвижения,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Сумма КАК Сумма,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.СтавкаНалогообложенияРезидента КАК СтавкаНалогообложенияРезидента,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Период КАК Период,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.КодДохода КАК КодДохода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.МесяцНалоговогоПериода КАК ПериодДляОпределенияСтатуса,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.КатегорияДохода КАК КатегорияДохода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Ставка КАК Ставка,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.СтавкаПоИтогамГода КАК СтавкаПоИтогамГода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.НалоговаяБаза КАК НалоговаяБаза
	|ПОМЕСТИТЬ ВТСтрокиАвансов
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК АвансовыеПлатежиИностранцевПоНДФЛ
	|ГДЕ
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ГоловнаяОрганизация,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ФизическоеЛицо,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.МесяцНалоговогоПериода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ВидДвижения,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.СуммаСПревышения,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.СтавкаНалогообложенияРезидента,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.Период,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.КодДохода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.МесяцНалоговогоПериода,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.РегистрацияВНалоговомОргане,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.КатегорияДохода,
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежиИностранцевПоНДФЛ.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|		ИНАЧЕ АвансовыеПлатежиИностранцевПоНДФЛ.Ставка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА АвансовыеПлатежиИностранцевПоНДФЛ.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|		ИНАЧЕ АвансовыеПлатежиИностранцевПоНДФЛ.СтавкаПоИтогамГода
	|	КОНЕЦ,
	|	АвансовыеПлатежиИностранцевПоНДФЛ.НалоговаяБаза
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК АвансовыеПлатежиИностранцевПоНДФЛ
	|ГДЕ
	|	АвансовыеПлатежиИностранцевПоНДФЛ.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ЗачетАвансовыхПлатежей)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтандартныеВычетыПоНДФЛЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Месяц КАК Месяц,
	|	СтандартныеВычетыПоНДФЛЗаПериод.КодВычета КАК КодВычетаЛичный,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Количество КАК КоличествоДетей,
	|	СтандартныеВычетыПоНДФЛЗаПериод.Основание КАК Основание
	|ПОМЕСТИТЬ ВТСтандартныеВычетыПоМесяцамРезидентства
	|ИЗ
	|	ВТСтандартныеВычетыПоНДФЛЗаПериод КАК СтандартныеВычетыПоНДФЛЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименениеВычетовВМесяцаРезидентства.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ПрименениеВычетовВМесяцаРезидентства.Период КАК Месяц,
	|	ПрименениеВычетовВМесяцаРезидентства.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СтандартныеВычетыПоМесяцамРезидентства.КодВычетаЛичный КАК КодВычета,
	|	СтандартныеВычетыПоМесяцамРезидентства.КоличествоДетей КАК КоличествоДетей,
	|	СтандартныеВычетыПоМесяцамРезидентства.Основание КАК Основание
	|ПОМЕСТИТЬ ВТСтандартныеВычетыФизЛицОрганизации
	|ИЗ
	|	ВТПрименениеВычетовВМесяцаРезидентства КАК ПрименениеВычетовВМесяцаРезидентства
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСтандартныеВычетыПоМесяцамРезидентства КАК СтандартныеВычетыПоМесяцамРезидентства
	|		ПО ПрименениеВычетовВМесяцаРезидентства.ФизическоеЛицо = СтандартныеВычетыПоМесяцамРезидентства.ФизическоеЛицо
	|			И ПрименениеВычетовВМесяцаРезидентства.Период = СтандартныеВычетыПоМесяцамРезидентства.Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета КАК КодВычета,
	|	СУММА(НДФЛИмущественныеВычетыФизлиц.Сумма) КАК Размер,
	|	МАКСИМУМ(НДФЛИмущественныеВычетыФизлиц.Регистратор) КАК Регистратор,
	|	НДФЛИмущественныеВычетыФизлиц.Период КАК Дата
	|ПОМЕСТИТЬ ВТСоциальныеИИмущественныеВычеты
	|ИЗ
	|	РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо = СписокФизЛицОрганизация.ФизическоеЛицо
	|			И НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация = СписокФизЛицОрганизация.ГоловнаяОрганизация
	|			И (СписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ НДФЛИмущественныеВычетыФизлиц.Организация = СписокФизЛицОрганизация.Организация)
	|			И (НДФЛИмущественныеВычетыФизлиц.Год = ГОД(&НачалоНП))
	|			И (НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокФизЛицОрганизация.ФизическоеЛицо,
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета,
	|	НДФЛИмущественныеВычетыФизлиц.Период
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписокФизЛицОрганизация.ФизическоеЛицо,
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета,
	|	СУММА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Сумма),
	|	НЕОПРЕДЕЛЕНО,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Период
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК НДФЛПредоставленныеСтандартныеВычетыФизЛиц
	|		ПО СписокФизЛицОрганизация.ГоловнаяОрганизация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация
	|			И СписокФизЛицОрганизация.ФизическоеЛицо = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо
	|			И (СписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ СписокФизЛицОрганизация.Организация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Организация)
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.ГруппаВычета = ЗНАЧЕНИЕ(Перечисление.ГруппыВычетовПоНДФЛ.Социальные))
	|
	|СГРУППИРОВАТЬ ПО
	|	СписокФизЛицОрганизация.ГоловнаяОрганизация,
	|	СписокФизЛицОрганизация.ФизическоеЛицо,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛСведенияОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(НДФЛСведенияОДоходах.МесяцНалоговогоПериода) КАК Год,
	|	НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.МесяцНалоговогоПериода, МЕСЯЦ) КАК Месяц,
	|	НДФЛСведенияОДоходах.СуммаДохода КАК СуммаДохода,
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицПоГодам.Статус = &Резидент
	|			ТОГДА НДФЛСведенияОДоходах.СуммаВычета
	|		КОГДА НДФЛСведенияОДоходах.ВычетНеПредоставляетсяНерезидентам
	|			ТОГДА 0
	|		ИНАЧЕ НДФЛСведенияОДоходах.СуммаВычета
	|	КОНЕЦ КАК СуммаВычета,
	|	НДФЛСведенияОДоходах.КодДохода КАК КодДохода,
	|	НДФЛСведенияОДоходах.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
	|	НДФЛСведенияОДоходах.КодДоходаКод КАК КодДоходаКод,
	|	НДФЛСведенияОДоходах.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|			ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ
	|		ИНАЧЕ СтавкиНДФЛ.СтавкаНДФЛ
	|	КОНЕЦ КАК Ставка,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|			ТОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаЧислом
	|		ИНАЧЕ СтавкиНДФЛ.СтавкаЧислом
	|	КОНЕЦ КАК СтавкаЧислом,
	|	НДФЛСведенияОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.УчитываетсяПоМесяцуНачисления
	|			ТОГДА НАЧАЛОПЕРИОДА(НДФЛСведенияОДоходах.МесяцНалоговогоПериода, МЕСЯЦ)
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ КАК МесяцНачисления,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.УчитываетсяПоМесяцуНачисления
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		ИНАЧЕ НДФЛСведенияОДоходах.ДатаПолученияДохода
	|	КОНЕЦ КАК ДатаВыплаты,
	|	НДФЛСведенияОДоходах.ДатаПолученияДохода КАК Период,
	|	НДФЛСведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	НДФЛСведенияОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
	|	НДФЛСведенияОДоходах.Период КАК ДатаНачисления,
	|	НДФЛСведенияОДоходах.КодВычета КАК КодВычета,
	|	НДФЛСведенияОДоходах.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода >= &ДатаЗакона176ФЗ
	|			ТОГДА СоответствиеНалоговыхБаз.НалоговаяБаза
	|		КОГДА СтавкиНДФЛ.СтавкаНДФЛ <> ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|		КОГДА НДФЛСведенияОДоходах.ДатаПолученияДохода < &НачалоРасчетаНДФЛПоПрогрессивнойШкале
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|		КОГДА НДФЛСведенияОДоходах.КатегорияДохода = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|		КОГДА НДФЛСведенияОДоходах.КатегорияДохода В (&ОсновнаяНалоговаяБаза)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		КОГДА НДФЛСведенияОДоходах.КатегорияДохода В (&ОбщаяНалоговаяБаза)
	|				И НДФЛСведенияОДоходах.ДатаПолученияДохода >= &ДатаОбъединенияНалоговыхБаз
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ НДФЛСведенияОДоходах.КатегорияДохода
	|	КОНЕЦ КАК НалоговаяБаза,
	|	НДФЛСведенияОДоходах.КатегорияДохода КАК КатегорияДохода,
	|	ВЫБОР
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2017, 1, 1, 0, 0, 0)
	|			ТОГДА ВЫБОР
	|					КОГДА СтавкаНДФЛПоСтавкеРезидента.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|							И НДФЛСведенияОДоходах.КодДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовНДФЛ.Код1010)
	|						ТОГДА ИСТИНА
	|					ИНАЧЕ ЛОЖЬ
	|				КОНЕЦ
	|		КОГДА НДФЛСведенияОДоходах.МесяцНалоговогоПериода >= &ДатаЗакона176ФЗ
	|			ТОГДА НЕ СоответствиеНалоговыхБаз.НалоговаяБаза В (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды), ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка))
	|		КОГДА СтавкиНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛСведенияОДоходах.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыПоСтавкеПункта11Статьи224НКРФ)
	|					И НДФЛСведенияОДоходах.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|		КОГДА СтавкиНДФЛ.СтавкаНДФЛ = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА НДФЛСведенияОДоходах.КатегорияДохода <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|					И НДФЛСведенияОДоходах.ДатаПолученияДохода >= &НачалоРасчетаНДФЛПоПрогрессивнойШкале
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ДоходРазделаПо13,
	|	НДФЛСведенияОДоходах.ДокументОснование КАК ДокументОснование,
	|	НДФЛСведенияОДоходах.УстаревшаяДатаПолученияДохода <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|		И НДФЛСведенияОДоходах.ДатаПолученияДохода <> НДФЛСведенияОДоходах.УстаревшаяДатаПолученияДохода КАК ДатаПолученияДоходаПеренесена
	|ПОМЕСТИТЬ ВТДоходыПоСтавкам
	|ИЗ
	|	ВТСтрокиДоходов КАК НДФЛСведенияОДоходах
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛПоСтавкеРезидента КАК СтавкаНДФЛПоСтавкеРезидента
	|		ПО НДФЛСведенияОДоходах.ФизическоеЛицо = СтавкаНДФЛПоСтавкеРезидента.ФизическоеЛицо
	|			И НДФЛСведенияОДоходах.КодДохода = СтавкаНДФЛПоСтавкеРезидента.КодДохода
	|			И НДФЛСведенияОДоходах.СтавкаНалогообложенияРезидента = СтавкаНДФЛПоСтавкеРезидента.СтавкаНалогообложенияРезидента
	|			И НДФЛСведенияОДоходах.ПериодДляОпределенияСтатуса = СтавкаНДФЛПоСтавкеРезидента.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтавкаНДФЛ КАК СтавкиНДФЛ
	|		ПО НДФЛСведенияОДоходах.ФизическоеЛицо = СтавкиНДФЛ.ФизическоеЛицо
	|			И НДФЛСведенияОДоходах.КатегорияДохода = СтавкиНДФЛ.КатегорияДохода
	|			И НДФЛСведенияОДоходах.СтавкаНалогообложенияРезидента = СтавкиНДФЛ.СтавкаНалогообложенияРезидента
	|			И НДФЛСведенияОДоходах.ПериодДляОпределенияСтатуса = СтавкиНДФЛ.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоответствиеНалоговыхБаз КАК СоответствиеНалоговыхБаз
	|		ПО НДФЛСведенияОДоходах.КатегорияДохода = СоответствиеНалоговыхБаз.КатегорияДохода
	|			И НДФЛСведенияОДоходах.СтавкаНалогообложенияРезидента = СоответствиеНалоговыхБаз.СтавкаНалогообложенияРезидента
	|			И (СтавкиНДФЛ.Статус = СоответствиеНалоговыхБаз.Статус)
	|			И (НДФЛСведенияОДоходах.ДатаПолученияДохода МЕЖДУ СоответствиеНалоговыхБаз.ПериодС И СоответствиеНалоговыхБаз.ПериодПо)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериода КАК СтатусыФизЛицПоГодам
	|		ПО НДФЛСведенияОДоходах.ФизическоеЛицо = СтатусыФизЛицПоГодам.ФизическоеЛицо
	|			И (ГОД(НДФЛСведенияОДоходах.ПериодДляОпределенияСтатуса) = СтатусыФизЛицПоГодам.Год)
	|ГДЕ
	|	(НЕ НДФЛСведенияОДоходах.ИсточникДоходаЗаПределамиРФ
	|			ИЛИ СтатусыФизЛицПоГодам.Статус = &Резидент
	|			ИЛИ СтатусыФизЛицПоГодам.Статус = ЗНАЧЕНИЕ(Справочник.СтатусыНалогоплательщиковПоНДФЛ.ДистанционныйРаботник)
	|				И НДФЛСведенияОДоходах.КатегорияДохода В (&ДоходыОтТрудовойДеятельности)
	|				И НДФЛСведенияОДоходах.ДатаПолученияДохода >= ДАТАВРЕМЯ(2024, 1, 1, 0, 0, 0))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо КАК ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Период, МЕСЯЦ) КАК Месяц,
	|	СУММА(НДФЛИмущественныеВычетыФизлиц.Сумма) КАК СуммаВычета,
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ КАК Ставка,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.НалоговаяБаза
	|	КОНЕЦ КАК НалоговаяБаза,
	|	НДФЛИмущественныеВычетыФизлиц.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета КАК КодВычета,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ КАК КодВычетаКодДляОтчетности,
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК МесяцПериодаПредоставленияВычета
	|ПОМЕСТИТЬ ВТВычетыПоСтавкам
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериода КАК СтатусыФизЛицНаКонецНалоговогоПериода
	|			ПО НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо = СтатусыФизЛицНаКонецНалоговогоПериода.ФизическоеЛицо
	|				И (ГОД(НДФЛИмущественныеВычетыФизлиц.Период) = СтатусыФизЛицНаКонецНалоговогоПериода.Год)
	|		ПО СписокФизЛицОрганизация.ГоловнаяОрганизация = НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация
	|			И СписокФизЛицОрганизация.ФизическоеЛицо = НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо
	|			И (НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И (НДФЛИмущественныеВычетыФизлиц.Период МЕЖДУ &НачалоНП И &КонецНП)
	|			И (СписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ СписокФизЛицОрганизация.Организация = НДФЛИмущественныеВычетыФизлиц.Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация,
	|	НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛИмущественныеВычетыФизлиц.Период, МЕСЯЦ),
	|	НДФЛИмущественныеВычетыФизлиц.РегистрацияВНалоговомОргане,
	|	НДФЛИмущественныеВычетыФизлиц.КодВычета,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.Период < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛИмущественныеВычетыФизлиц.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ НДФЛИмущественныеВычетыФизлиц.НалоговаяБаза
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ),
	|	СУММА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Сумма),
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ НДФЛПредоставленныеСтандартныеВычетыФизЛиц.НалоговаяБаза
	|	КОНЕЦ,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.РегистрацияВНалоговомОргане,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета,
	|	ВЫБОР
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцПериодаПредоставленияВычета
	|ИЗ
	|	ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ПредоставленныеСтандартныеИСоциальныеВычетыНДФЛ КАК НДФЛПредоставленныеСтандартныеВычетыФизЛиц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСтатусыФизЛицНаКонецНалоговогоПериода КАК СтатусыФизЛицНаКонецНалоговогоПериода
	|			ПО НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо = СтатусыФизЛицНаКонецНалоговогоПериода.ФизическоеЛицо
	|				И (ГОД(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода) = СтатусыФизЛицНаКонецНалоговогоПериода.Год)
	|		ПО ВТСписокФизЛицОрганизация.ГоловнаяОрганизация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация
	|			И ВТСписокФизЛицОрганизация.ФизическоеЛицо = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо
	|			И (НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (ВТСписокФизЛицОрганизация.НеОтбиратьПоОП
	|				ИЛИ ВТСписокФизЛицОрганизация.Организация = НДФЛПредоставленныеСтандартныеВычетыФизЛиц.Организация)
	|
	|СГРУППИРОВАТЬ ПО
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ГоловнаяОрганизация,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.ФизическоеЛицо,
	|	НАЧАЛОПЕРИОДА(НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода, МЕСЯЦ),
	|	ВЫБОР
	|		КОГДА СтатусыФизЛицНаКонецНалоговогоПериода.ЯвляетсяРезидентомРФ
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|	КОНЕЦ,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.РегистрацияВНалоговомОргане,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета,
	|	ВЫБОР
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ НДФЛПредоставленныеСтандартныеВычетыФизЛиц.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ,
	|	НДФЛПредоставленныеСтандартныеВычетыФизЛиц.МесяцПериодаПредоставленияВычета,
	|	ВЫБОР
	|		КОГДА НДФЛПредоставленныеСтандартныеВычетыФизЛиц.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|		ИНАЧЕ НДФЛПредоставленныеСтандартныеВычетыФизЛиц.НалоговаяБаза
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	База.ФизическоеЛицо КАК ФизическоеЛицо,
	|	База.НалоговаяБаза КАК НалоговаяБаза,
	|	База.Год КАК Год,
	|	База.НачалоГода КАК НачалоГода
	|ПОМЕСТИТЬ ВТСотрудникиСПревышением
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
	|		ДоходыПоСтавкам.СуммаДохода - ДоходыПоСтавкам.СуммаВычета КАК ОблагаемаяБаза,
	|		ДоходыПоСтавкам.Год КАК Год,
	|		НАЧАЛОПЕРИОДА(ДоходыПоСтавкам.Месяц, ГОД) КАК НачалоГода
	|	ИЗ
	|		ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
	|	ГДЕ
	|		ДоходыПоСтавкам.НалоговаяБаза <> ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПустаяСсылка)
	|		И ДоходыПоСтавкам.Год >= &ГодНачалаРасчетаНДФЛПоПрогрессивнойШкале
	|		И ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		СтандартныеИмущественныеВычеты.ФизическоеЛицо,
	|		СтандартныеИмущественныеВычеты.НалоговаяБаза,
	|		-СтандартныеИмущественныеВычеты.СуммаВычета,
	|		ГОД(СтандартныеИмущественныеВычеты.Месяц),
	|		НАЧАЛОПЕРИОДА(СтандартныеИмущественныеВычеты.Месяц, ГОД)
	|	ИЗ
	|		ВТВычетыПоСтавкам КАК СтандартныеИмущественныеВычеты
	|	ГДЕ
	|		СтандартныеИмущественныеВычеты.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|		И ГОД(СтандартныеИмущественныеВычеты.Месяц) >= &ГодНачалаРасчетаНДФЛПоПрогрессивнойШкале) КАК База
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПределыДляНалоговыхБаз КАК ПределыДляНалоговыхБаз
	|		ПО База.НалоговаяБаза = ПределыДляНалоговыхБаз.НалоговаяБаза
	|
	|СГРУППИРОВАТЬ ПО
	|	База.ФизическоеЛицо,
	|	База.НалоговаяБаза,
	|	База.Год,
	|	ПределыДляНалоговыхБаз.Предел1,
	|	База.НачалоГода
	|
	|ИМЕЮЩИЕ
	|	СУММА(База.ОблагаемаяБаза) > ВЫБОР
	|		КОГДА База.НачалоГода >= &ДатаЗакона176ФЗ
	|			ТОГДА ПределыДляНалоговыхБаз.Предел1
	|		ИНАЧЕ &Предел
	|	КОНЕЦ";
	
	Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.Год КАК Год,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.ДатаПолученияДохода, МЕСЯЦ) КАК НачалоМесяца,
		|	СведенияОДоходахНДФЛ.НалоговаяБаза КАК НалоговаяБаза,
		|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) КАК ОблагаемыйДоход,
		|	0 КАК ОблагаемыйДоходСНачалаГода,
		|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела,
		|	ЛОЖЬ КАК ПределПревышен
		|ИЗ
		|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
		|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
		|			И СведенияОДоходахНДФЛ.НалоговаяБаза = СотрудникиСПревышением.НалоговаяБаза
		|			И СведенияОДоходахНДФЛ.Год = СотрудникиСПревышением.Год
		|ГДЕ
		|	СведенияОДоходахНДФЛ.ОблагаетсяУНалоговогоАгента
		|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода < &ДатаЗакона176ФЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
		|	СведенияОДоходахНДФЛ.Год,
		|	СведенияОДоходахНДФЛ.НалоговаяБаза
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	НалоговаяБаза,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода";
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			ТаблицаРасчетаНарастающимИтогом = Результат.Выгрузить();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СтандартныеИмущественныеВычеты.НалоговаяБаза КАК НалоговаяБаза,
			|	СУММА(СтандартныеИмущественныеВычеты.СуммаВычета) КАК Сумма,
			|	СтандартныеИмущественныеВычеты.Месяц КАК НачалоМесяца
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СтандартныеИмущественныеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
			|		ПО СтандартныеИмущественныеВычеты.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
			|			И (ГОД(СтандартныеИмущественныеВычеты.Месяц) = СотрудникиСПревышением.Год)
			|			И (ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда) = СотрудникиСПревышением.НалоговаяБаза)
			|ГДЕ
			|	СтандартныеИмущественныеВычеты.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
			|	И ГОД(СтандартныеИмущественныеВычеты.Месяц) >= &ГодНачалаРасчетаНДФЛПоПрогрессивнойШкале
			|	И СтандартныеИмущественныеВычеты.Месяц < &ДатаЗакона176ФЗ
			|
			|СГРУППИРОВАТЬ ПО
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо,
			|	СтандартныеИмущественныеВычеты.НалоговаяБаза,
			|	СтандартныеИмущественныеВычеты.Месяц";
			ТаблицаВычетов = Запрос.Выполнить().Выгрузить();
			ИскатьВычеты = ТаблицаВычетов.Количество() > 0;
			Если ИскатьВычеты И ТаблицаВычетов.Количество() > 100 Тогда
				ТаблицаВычетов.Индексы.Добавить("ФизическоеЛицо,НалоговаяБаза,НачалоМесяца");
			КонецЕсли;
			ПоискВычетов = Новый Структура("ФизическоеЛицо,НачалоМесяца,НалоговаяБаза");
			
			// Расчет облагаемого дохода нарастающим итогом с учетом всех вычетов для каждой даты получения дохода.
			ОблагаемыйДоходСНачалаГода = 0;
			ТекущееФизлицо = Неопределено;
			ТекущаяНалоговаяБаза = Неопределено;
			ТекущееНачалоМесяца = Неопределено;
			ТекущийГод = Неопределено;
			Для каждого СтрокаТаблицы Из ТаблицаРасчетаНарастающимИтогом Цикл
				Если ТекущееФизлицо <> СтрокаТаблицы.ФизическоеЛицо Или ТекущаяНалоговаяБаза <> СтрокаТаблицы.НалоговаяБаза Или ТекущийГод <> СтрокаТаблицы.Год Тогда
					ОблагаемыйДоходСНачалаГода = 0;
					ТекущееФизлицо = СтрокаТаблицы.ФизическоеЛицо;
					ТекущаяНалоговаяБаза = СтрокаТаблицы.НалоговаяБаза;
					ТекущийГод = СтрокаТаблицы.Год;
					ТекущееНачалоМесяца = Неопределено;
				КонецЕсли;
				// Стандартные, имущественные вычеты учтем один раз за каждый месяц - в первую дату получения дохода месяца.
				ПредоставленныеВычеты = 0;
				Если ИскатьВычеты И СтрокаТаблицы.НалоговаяБаза = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда И ТекущееНачалоМесяца <> СтрокаТаблицы.НачалоМесяца Тогда
					ЗаполнитьЗначенияСвойств(ПоискВычетов, СтрокаТаблицы);
					СтрокиВычетов = ТаблицаВычетов.НайтиСтроки(ПоискВычетов);
					Если СтрокиВычетов.Количество() > 0 Тогда
						ПредоставленныеВычеты = СтрокиВычетов[0].Сумма;
					КонецЕсли;
					ТекущееНачалоМесяца = СтрокаТаблицы.НачалоМесяца;
				КонецЕсли;
				СтрокаТаблицы.ЭтоДеньПревышенияПредела = ОблагаемыйДоходСНачалаГода < ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты > ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел;
				ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты;
				СтрокаТаблицы.ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода;
				СтрокаТаблицы.ПределПревышен = ОблагаемыйДоходСНачалаГода > ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел;
			КонецЦикла;
			
			Запрос.УстановитьПараметр("РасчетНарастающимИтогом", ТаблицаРасчетаНарастающимИтогом); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РасчетНарастающимИтогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасчетНарастающимИтогом.Период КАК ДатаПолученияДохода,
			|	РасчетНарастающимИтогом.НалоговаяБаза КАК НалоговаяБаза,
			|	РасчетНарастающимИтогом.ОблагаемыйДоход КАК ОблагаемыйДоход,
			|	РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела КАК ЭтоДеньПревышенияПредела,
			|	РасчетНарастающимИтогом.ПределПревышен КАК ПределПревышен
			|ПОМЕСТИТЬ ВТРасчетНарастающимИтогом
			|ИЗ
			|	&РасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоходыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыПоСтавкам.Год КАК Год,
			|	ДоходыПоСтавкам.Месяц КАК Месяц,
			|	ДоходыПоСтавкам.СуммаДохода КАК СуммаДохода,
			|	ДоходыПоСтавкам.СуммаВычета КАК СуммаВычета,
			|	ДоходыПоСтавкам.КодДохода КАК КодДохода,
			|	ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
			|	ДоходыПоСтавкам.КодДоходаКод КАК КодДоходаКод,
			|	ДоходыПоСтавкам.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	ДоходыПоСтавкам.Ставка КАК Ставка,
			|	ДоходыПоСтавкам.СтавкаЧислом КАК СтавкаЧислом,
			|	ДоходыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	ДоходыПоСтавкам.МесяцНачисления КАК МесяцНачисления,
			|	ДоходыПоСтавкам.ДатаВыплаты КАК ДатаВыплаты,
			|	ДоходыПоСтавкам.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДоходыПоСтавкам.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	ДоходыПоСтавкам.ДатаНачисления КАК ДатаНачисления,
			|	ДоходыПоСтавкам.КодВычета КАК КодВычета,
			|	ДоходыПоСтавкам.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыПоСтавкам.ДоходРазделаПо13 КАК ДоходРазделаПо13,
			|	ДоходыПоСтавкам.Период КАК Период,
			|	ДоходыПоСтавкам.КатегорияДохода КАК КатегорияДохода,
			|	ДоходыПоСтавкам.ДокументОснование КАК ДокументОснование,
			|	ДоходыПоСтавкам.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода, 0) КАК ОблагаемыйДоходСНачалаГода,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ПределПревышен, ЛОЖЬ) КАК ПределПревышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоход, 0) КАК ОблагаемыйДоходЗаДень
			|ПОМЕСТИТЬ ВТРасширенныеДанныеОДоходах
			|ИЗ
			|	ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|		ПО ДоходыПоСтавкам.ФизическоеЛицо = РасчетНарастающимИтогом.ФизическоеЛицо
			|			И ДоходыПоСтавкам.ДатаПолученияДохода = РасчетНарастающимИтогом.ДатаПолученияДохода
			|			И ДоходыПоСтавкам.НалоговаяБаза = РасчетНарастающимИтогом.НалоговаяБаза
			|ГДЕ
			|	ДоходыПоСтавкам.ДатаПолученияДохода < &ДатаЗакона176ФЗ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Период КАК Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза
			|ПОМЕСТИТЬ ВТФизлицаБезПереносаДат
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела
			|
			|СГРУППИРОВАТЬ ПО
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(РасширенныеДанныеОДоходах.ДатаПолученияДоходаПеренесена) = ЛОЖЬ И
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане) > 1 И
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасширенныеДанныеОДоходах.ДокументОснование) > 1
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФизлицаБезПереносаДат.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ФизлицаБезПереносаДат.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ФизлицаБезПереносаДат.Период КАК Период,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	РасширенныеДанныеОДоходах.ДокументОснование КАК ДокументОснование,
			|	ФизлицаБезПереносаДат.НалоговаяБаза КАК НалоговаяБаза
			|ПОМЕСТИТЬ ВТОтборОснований
			|ИЗ
			|	ВТФизлицаБезПереносаДат КАК ФизлицаБезПереносаДат
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|		ПО ФизлицаБезПереносаДат.ФизическоеЛицо = РасширенныеДанныеОДоходах.ФизическоеЛицо
			|			И ФизлицаБезПереносаДат.НалоговаяБаза = РасширенныеДанныеОДоходах.НалоговаяБаза
			|			И ФизлицаБезПереносаДат.Период = РасширенныеДанныеОДоходах.Период
			|			И ФизлицаБезПереносаДат.ГоловнаяОрганизация = РасширенныеДанныеОДоходах.ГоловнаяОрганизация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтборОснований.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ОтборОснований.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОтборОснований.Период КАК ДатаПолученияДохода,
			|	ОтборОснований.НалоговаяБаза КАК НалоговаяБаза,
			|	ОтборОснований.ДокументОснование КАК ДокументОснование,
			|	ВЫБОР
			|		КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) <> 0
			|				И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) = 0
			|			ТОГДА 1
			|		КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) <> 0
			|				И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) = 0
			|			ТОГДА 2
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОписаниеДокумента
			|ПОМЕСТИТЬ ВТОснованияВДниПревышения
			|ИЗ
			|	ВТОтборОснований КАК ОтборОснований
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ПО ОтборОснований.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
			|			И ОтборОснований.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
			|			И ОтборОснований.Период = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
			|			И ОтборОснований.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
			|			И ОтборОснований.ГоловнаяОрганизация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация
			|ГДЕ
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтборОснований.ФизическоеЛицо,
			|	ОтборОснований.Период,
			|	ОтборОснований.НалоговаяБаза,
			|	ОтборОснований.ДокументОснование,
			|	ОтборОснований.ГоловнаяОрганизация
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода) КАК СуммаДохода,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаВычета) КАК СуммаВычета,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода - РасширенныеДанныеОДоходах.СуммаВычета) КАК ОблагаемаяСумма,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год КАК Год,
			|	РасширенныеДанныеОДоходах.Месяц КАК Месяц,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод КАК КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.Ставка КАК Ставка,
			|	РасширенныеДанныеОДоходах.СтавкаЧислом КАК СтавкаЧислом,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.МесяцНачисления КАК МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты КАК ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления КАК ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13 КАК ДоходРазделаПо13,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела КАК ЭтоДеньПревышенияПредела,
			|	РасширенныеДанныеОДоходах.ПределПревышен КАК ПределПревышен,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень КАК ОблагаемыйДоходЗаДень,
			|	РасширенныеДанныеОДоходах.ДокументОснование КАК ДокументОснование,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	ЕСТЬNULL(ОснованияВДниПревышения.ОписаниеДокумента, 0) КАК ОписаниеДокументаСПревышением
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияВДниПревышения КАК ОснованияВДниПревышения
			|		ПО РасширенныеДанныеОДоходах.ФизическоеЛицо = ОснованияВДниПревышения.ФизическоеЛицо
			|			И РасширенныеДанныеОДоходах.НалоговаяБаза = ОснованияВДниПревышения.НалоговаяБаза
			|			И РасширенныеДанныеОДоходах.ДокументОснование = ОснованияВДниПревышения.ДокументОснование
			|			И РасширенныеДанныеОДоходах.Период = ОснованияВДниПревышения.ДатаПолученияДохода
			|			И РасширенныеДанныеОДоходах.ГоловнаяОрганизация = ОснованияВДниПревышения.ГоловнаяОрганизация
			|ГДЕ
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела
			|	И РасширенныеДанныеОДоходах.ОблагаетсяУНалоговогоАгента
			|
			|СГРУППИРОВАТЬ ПО
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год,
			|	РасширенныеДанныеОДоходах.Месяц,
			|	РасширенныеДанныеОДоходах.КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.Ставка,
			|	РасширенныеДанныеОДоходах.СтавкаЧислом,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела,
			|	РасширенныеДанныеОДоходах.ПределПревышен,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень,
			|	РасширенныеДанныеОДоходах.ДокументОснование,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаПеренесена,
			|	ЕСТЬNULL(ОснованияВДниПревышения.ОписаниеДокумента, 0),
			|	РасширенныеДанныеОДоходах.КатегорияДохода
			|
			|ИМЕЮЩИЕ
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода - РасширенныеДанныеОДоходах.СуммаВычета) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	Год,
			|	ФизическоеЛицо,
			|	НалоговаяБаза,
			|	КодДохода";
			
			ТаблицаРасчетаНарастающимИтогом = Запрос.Выполнить().Выгрузить();
			ДоходыСУточненнымиСтавками = ТаблицаРасчетаНарастающимИтогом.СкопироватьКолонки();
			
			ТекущееФизлицо = Неопределено;
			ТекущаяНалоговаяБаза = Неопределено;
			ТекущийГод = Неопределено;
			СтрокиРаспределения = Новый Массив;
			ОблагаемыйДоходДоПредела = 0;
			Для каждого СтрокаТаблицы Из ТаблицаРасчетаНарастающимИтогом Цикл
				Если ТекущееФизлицо <> СтрокаТаблицы.ФизическоеЛицо Или ТекущийГод <> СтрокаТаблицы.Год Или ТекущаяНалоговаяБаза <> СтрокаТаблицы.НалоговаяБаза Тогда
					Если ОблагаемыйДоходДоПредела <> 0 Тогда
						ВыделитьСуммыПревышенияПредела(ОблагаемыйДоходДоПредела, СтрокиРаспределения, ДоходыСУточненнымиСтавками)				
					КонецЕсли;
					СтрокиРаспределения = Новый Массив;
					ОблагаемыйДоходДоПредела = 0;
					ТекущееФизлицо = СтрокаТаблицы.ФизическоеЛицо;
					ТекущаяНалоговаяБаза = СтрокаТаблицы.НалоговаяБаза;
					ТекущийГод = СтрокаТаблицы.Год;
				КонецЕсли;
				Если ОблагаемыйДоходДоПредела = 0 Тогда
					ОблагаемыйДоходДоПредела = СтрокаТаблицы.ОблагаемыйДоходЗаДень - СтрокаТаблицы.ОблагаемыйДоходСНачалаГода + ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Предел
				КонецЕсли;
				СтрокиРаспределения.Добавить(СтрокаТаблицы);
			КонецЦикла;
			Если ОблагаемыйДоходДоПредела <> 0 Тогда
				ВыделитьСуммыПревышенияПредела(ОблагаемыйДоходДоПредела, СтрокиРаспределения, ДоходыСУточненнымиСтавками)				
			КонецЕсли;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРасчетаНарастающимИтогом, ДоходыСУточненнымиСтавками); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			
			Запрос.УстановитьПараметр("ДоходыСУточненнымиСтавками", ДоходыСУточненнымиСтавками); ДоходыСУточненнымиСтавками = Неопределено;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Год КАК Год,
			|	ДоходыСУточненнымиСтавками.Месяц КАК Месяц,
			|	ДоходыСУточненнымиСтавками.СуммаДохода КАК СуммаДохода,
			|	ДоходыСУточненнымиСтавками.СуммаВычета КАК СуммаВычета,
			|	ДоходыСУточненнымиСтавками.КодДохода КАК КодДохода,
			|	ДоходыСУточненнымиСтавками.КодДоходаКод КАК КодДоходаКод,
			|	ДоходыСУточненнымиСтавками.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	ВЫБОР
			|		КОГДА ДоходыСУточненнымиСтавками.ОписаниеДокументаСПревышением = 2
			|			ТОГДА &СтавкаСПревышения
			|		ИНАЧЕ ДоходыСУточненнымиСтавками.Ставка
			|	КОНЕЦ КАК Ставка,
			|	ВЫБОР
			|		КОГДА ДоходыСУточненнымиСтавками.ОписаниеДокументаСПревышением = 2
			|			ТОГДА &СтавкаЧисломСПревышения
			|		ИНАЧЕ ДоходыСУточненнымиСтавками.СтавкаЧислом
			|	КОНЕЦ КАК СтавкаЧислом,
			|	ДоходыСУточненнымиСтавками.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	ДоходыСУточненнымиСтавками.МесяцНачисления КАК МесяцНачисления,
			|	ДоходыСУточненнымиСтавками.ДатаВыплаты КАК ДатаВыплаты,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	ДоходыСУточненнымиСтавками.ДатаНачисления КАК ДатаНачисления,
			|	ДоходыСУточненнымиСтавками.КодВычета КАК КодВычета,
			|	ДоходыСУточненнымиСтавками.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.КатегорияДохода КАК КатегорияДохода,
			|	ДоходыСУточненнымиСтавками.ДокументОснование КАК ДокументОснование,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	ДоходыСУточненнымиСтавками.ДоходРазделаПо13 КАК ДоходРазделаПо13
			|ПОМЕСТИТЬ ВТДоходыСУточненнымиСтавками
			|ИЗ
			|	&ДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.ПределПревышен
			|			ТОГДА &СтавкаЧисломСПревышения
			|		ИНАЧЕ РасширенныеДанныеОДоходах.СтавкаЧислом
			|	КОНЕЦ КАК СтавкаЧислом,
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.ПределПревышен
			|			ТОГДА &СтавкаСПревышения
			|		ИНАЧЕ РасширенныеДанныеОДоходах.Ставка
			|	КОНЕЦ КАК Ставка,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год КАК Год,
			|	РасширенныеДанныеОДоходах.Месяц КАК Месяц,
			|	РасширенныеДанныеОДоходах.СуммаДохода КАК СуммаДохода,
			|	РасширенныеДанныеОДоходах.СуммаВычета КАК СуммаВычета,
			|	РасширенныеДанныеОДоходах.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод КАК КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.МесяцНачисления КАК МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты КАК ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления КАК ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	РасширенныеДанныеОДоходах.ДокументОснование КАК ДокументОснование,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13 КАК ДоходРазделаПо13
			|ПОМЕСТИТЬ ВТВременнаяТаблица
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	(НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела
			|			ИЛИ НЕ РасширенныеДанныеОДоходах.ОблагаетсяУНалоговогоАгента)
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.СтавкаЧислом,
			|	ДоходыСУточненнымиСтавками.Ставка,
			|	ДоходыСУточненнымиСтавками.РегистрацияВНалоговомОргане,
			|	ДоходыСУточненнымиСтавками.ГоловнаяОрганизация,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Год,
			|	ДоходыСУточненнымиСтавками.Месяц,
			|	ДоходыСУточненнымиСтавками.СуммаДохода,
			|	ДоходыСУточненнымиСтавками.СуммаВычета,
			|	ИСТИНА,
			|	ДоходыСУточненнымиСтавками.КодДохода,
			|	ДоходыСУточненнымиСтавками.КодДоходаКод,
			|	ДоходыСУточненнымиСтавками.КодДоходаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.МесяцНачисления,
			|	ДоходыСУточненнымиСтавками.ДатаВыплаты,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаФиксирована,
			|	ДоходыСУточненнымиСтавками.ДатаНачисления,
			|	ДоходыСУточненнымиСтавками.КодВычета,
			|	ДоходыСУточненнымиСтавками.КодВычетаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.КатегорияДохода,
			|	ДоходыСУточненнымиСтавками.ДокументОснование,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаПеренесена,
			|	ДоходыСУточненнымиСтавками.ДоходРазделаПо13
			|ИЗ
			|	ВТДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.СтавкаЧислом,
			|	ДоходыСУточненнымиСтавками.Ставка,
			|	ДоходыСУточненнымиСтавками.РегистрацияВНалоговомОргане,
			|	ДоходыСУточненнымиСтавками.ГоловнаяОрганизация,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Год,
			|	ДоходыСУточненнымиСтавками.Месяц,
			|	ДоходыСУточненнымиСтавками.СуммаДохода,
			|	ДоходыСУточненнымиСтавками.СуммаВычета,
			|	ДоходыСУточненнымиСтавками.ОблагаетсяУНалоговогоАгента,
			|	ДоходыСУточненнымиСтавками.КодДохода,
			|	ДоходыСУточненнымиСтавками.КодДоходаКод,
			|	ДоходыСУточненнымиСтавками.КодДоходаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.МесяцНачисления,
			|	ДоходыСУточненнымиСтавками.ДатаВыплаты,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаФиксирована,
			|	ДоходыСУточненнымиСтавками.ДатаНачисления,
			|	ДоходыСУточненнымиСтавками.КодВычета,
			|	ДоходыСУточненнымиСтавками.КодВычетаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.КатегорияДохода,
			|	ДоходыСУточненнымиСтавками.ДокументОснование,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаПеренесена,
			|	ДоходыСУточненнымиСтавками.ДоходРазделаПо13
			|ИЗ
			|	ВТДоходыПоСтавкам КАК ДоходыСУточненнымиСтавками
			|ГДЕ
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТДоходыПоСтавкам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВременнаяТаблица.СтавкаЧислом КАК СтавкаЧислом,
			|	ВременнаяТаблица.Ставка КАК Ставка,
			|	ВременнаяТаблица.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	ВременнаяТаблица.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ВременнаяТаблица.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ВременнаяТаблица.Год КАК Год,
			|	ВременнаяТаблица.Месяц КАК Месяц,
			|	ВременнаяТаблица.СуммаДохода КАК СуммаДохода,
			|	ВременнаяТаблица.СуммаВычета КАК СуммаВычета,
			|	ВременнаяТаблица.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
			|	ВременнаяТаблица.КодДохода КАК КодДохода,
			|	ВременнаяТаблица.КодДоходаКод КАК КодДоходаКод,
			|	ВременнаяТаблица.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	ВременнаяТаблица.МесяцНачисления КАК МесяцНачисления,
			|	ВременнаяТаблица.ДатаВыплаты КАК ДатаВыплаты,
			|	ВременнаяТаблица.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ВременнаяТаблица.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	ВременнаяТаблица.ДатаНачисления КАК ДатаНачисления,
			|	ВременнаяТаблица.КодВычета КАК КодВычета,
			|	ВременнаяТаблица.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	ВременнаяТаблица.НалоговаяБаза КАК НалоговаяБаза,
			|	ВременнаяТаблица.КатегорияДохода КАК КатегорияДохода,
			|	ВременнаяТаблица.ДокументОснование КАК ДокументОснование,
			|	ВременнаяТаблица.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	ВременнаяТаблица.ДоходРазделаПо13 КАК ДоходРазделаПо13
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТВременнаяТаблица КАК ВременнаяТаблица";
			Запрос.Выполнить();
			
			ТвблицыКУдалению = Новый Массив;
			ТвблицыКУдалению.Добавить("ВТРасчетНарастающимИтогом");
			ТвблицыКУдалению.Добавить("ВТРасширенныеДанныеОДоходах");
			ТвблицыКУдалению.Добавить("ВТФизлицаБезПереносаДат");
			ТвблицыКУдалению.Добавить("ВТОтборОснований");
			ТвблицыКУдалению.Добавить("ВТОснованияВДниПревышения");
			ТвблицыКУдалению.Добавить("ВТДоходыСУточненнымиСтавками");
			ТвблицыКУдалению.Добавить("ВТВременнаяТаблица");
			ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, ТвблицыКУдалению);
		КонецЕсли;
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.Год КАК Год,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода КАК Период,
		|	НАЧАЛОПЕРИОДА(СведенияОДоходахНДФЛ.ДатаПолученияДохода, МЕСЯЦ) КАК НачалоМесяца,
		|	СведенияОДоходахНДФЛ.НалоговаяБаза КАК НалоговаяБаза,
		|	СУММА(СведенияОДоходахНДФЛ.СуммаДохода - СведенияОДоходахНДФЛ.СуммаВычета) КАК ОблагаемыйДоход,
		|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела1,
		|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела2,
		|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела3,
		|	ЛОЖЬ КАК ЭтоДеньПревышенияПредела4,
		|	ЛОЖЬ КАК Предел1Превышен,
		|	ЛОЖЬ КАК Предел2Превышен,
		|	ЛОЖЬ КАК Предел3Превышен,
		|	ЛОЖЬ КАК Предел4Превышен,
		|	0 КАК ОблагаемыйДоходСНачалаГода
		|ИЗ
		|	ВТДоходыПоСтавкам КАК СведенияОДоходахНДФЛ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
		|		ПО СведенияОДоходахНДФЛ.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
		|			И СведенияОДоходахНДФЛ.НалоговаяБаза = СотрудникиСПревышением.НалоговаяБаза
		|			И СведенияОДоходахНДФЛ.Год = СотрудникиСПревышением.Год
		|ГДЕ
		|	СведенияОДоходахНДФЛ.ОблагаетсяУНалоговогоАгента
		|	И СведенияОДоходахНДФЛ.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходахНДФЛ.ФизическоеЛицо,
		|	СведенияОДоходахНДФЛ.ДатаПолученияДохода,
		|	СведенияОДоходахНДФЛ.Год,
		|	СведенияОДоходахНДФЛ.НалоговаяБаза
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	НалоговаяБаза,
		|	Период";
		
		Результат = Запрос.Выполнить();
		Если Не Результат.Пустой() Тогда
			
			ТаблицаРасчетаНарастающимИтогом = Результат.Выгрузить();
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
			|	СтандартныеИмущественныеВычеты.НалоговаяБаза КАК НалоговаяБаза,
			|	СУММА(СтандартныеИмущественныеВычеты.СуммаВычета) КАК Сумма,
			|	СтандартныеИмущественныеВычеты.Месяц КАК НачалоМесяца
			|ИЗ
			|	ВТВычетыПоСтавкам КАК СтандартныеИмущественныеВычеты
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
			|		ПО СтандартныеИмущественныеВычеты.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
			|			И (ГОД(СтандартныеИмущественныеВычеты.Месяц) = СотрудникиСПревышением.Год)
			|			И СтандартныеИмущественныеВычеты.НалоговаяБаза = СотрудникиСПревышением.НалоговаяБаза
			|ГДЕ
			|	СтандартныеИмущественныеВычеты.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
			|	И СтандартныеИмущественныеВычеты.Месяц >= &ДатаЗакона176ФЗ
			|
			|СГРУППИРОВАТЬ ПО
			|	СтандартныеИмущественныеВычеты.ФизическоеЛицо,
			|	СтандартныеИмущественныеВычеты.НалоговаяБаза,
			|	СтандартныеИмущественныеВычеты.Месяц";
			ТаблицаВычетов = Запрос.Выполнить().Выгрузить();
			ИскатьВычеты = ТаблицаВычетов.Количество() > 0;
			Если ИскатьВычеты И ТаблицаВычетов.Количество() > 100 Тогда
				ТаблицаВычетов.Индексы.Добавить("ФизическоеЛицо,НалоговаяБаза,НачалоМесяца");
			КонецЕсли;
			ПоискВычетов = Новый Структура("ФизическоеЛицо,НалоговаяБаза,НачалоМесяца");
			
			// Расчет облагаемого дохода нарастающим итогом с учетом всех вычетов для каждой даты получения дохода.
			СоответствиеПараметровНалоговыхБаз = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкалеС2025Года().СоответствиеПараметровНалоговыхБаз;
			ОблагаемыйДоходСНачалаГода = 0;
			ТекущееФизлицо = Неопределено;
			ТекущаяНалоговаяБаза = Неопределено;
			ТекущееНачалоМесяца = Неопределено;
			ТекущийГод = Неопределено;
			Предел1 = 0; Предел2 = 0; Предел3 = 0; Предел4 = 0;
			Для каждого СтрокаТаблицы Из ТаблицаРасчетаНарастающимИтогом Цикл
				Если ТекущееФизлицо <> СтрокаТаблицы.ФизическоеЛицо Или ТекущаяНалоговаяБаза <> СтрокаТаблицы.НалоговаяБаза Или ТекущийГод <> СтрокаТаблицы.Год Тогда
					ОблагаемыйДоходСНачалаГода = 0;
					ТекущееФизлицо = СтрокаТаблицы.ФизическоеЛицо;
					ТекущаяНалоговаяБаза = СтрокаТаблицы.НалоговаяБаза;
					ТекущийГод = СтрокаТаблицы.Год;
					ТекущееНачалоМесяца = Неопределено;
					ПределыНалоговойБазы = СоответствиеПараметровНалоговыхБаз[СтрокаТаблицы.НалоговаяБаза];
					Предел1 = ПределыНалоговойБазы.Предел1;
					Предел2 = ПределыНалоговойБазы.Предел2;
					Предел3 = ПределыНалоговойБазы.Предел3;
					Предел4 = ПределыНалоговойБазы.Предел4;
				КонецЕсли;
				// Стандартные, имущественные вычеты учтем один раз за каждый месяц - в первую дату получения дохода месяца.
				ПредоставленныеВычеты = 0;
				Если ИскатьВычеты И ТекущееНачалоМесяца <> СтрокаТаблицы.НачалоМесяца Тогда
					ЗаполнитьЗначенияСвойств(ПоискВычетов, СтрокаТаблицы);
					СтрокиВычетов = ТаблицаВычетов.НайтиСтроки(ПоискВычетов);
					Если СтрокиВычетов.Количество() > 0 Тогда
						ПредоставленныеВычеты = СтрокиВычетов[0].Сумма;
					КонецЕсли;
					ТекущееНачалоМесяца = СтрокаТаблицы.НачалоМесяца;
				КонецЕсли;
				СтрокаТаблицы.ЭтоДеньПревышенияПредела1 = ОблагаемыйДоходСНачалаГода < Предел1 И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты > Предел1;
				Если Предел1 <> Предел2 Тогда
					СтрокаТаблицы.ЭтоДеньПревышенияПредела2 = ОблагаемыйДоходСНачалаГода < Предел2 И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты > Предел2;
					Если Предел2 <> Предел3 Тогда
						СтрокаТаблицы.ЭтоДеньПревышенияПредела3 = ОблагаемыйДоходСНачалаГода < Предел3 И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты > Предел3;
						Если Предел3 <> Предел4 Тогда
							СтрокаТаблицы.ЭтоДеньПревышенияПредела4 = ОблагаемыйДоходСНачалаГода < Предел4 И ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты > Предел4;
						Иначе 
							СтрокаТаблицы.ЭтоДеньПревышенияПредела4	= СтрокаТаблицы.ЭтоДеньПревышенияПредела3;
						КонецЕсли;
					Иначе 
						СтрокаТаблицы.ЭтоДеньПревышенияПредела3	= СтрокаТаблицы.ЭтоДеньПревышенияПредела2;
						СтрокаТаблицы.ЭтоДеньПревышенияПредела4	= СтрокаТаблицы.ЭтоДеньПревышенияПредела2;
					КонецЕсли;
				Иначе 
					СтрокаТаблицы.ЭтоДеньПревышенияПредела2	= СтрокаТаблицы.ЭтоДеньПревышенияПредела1;
					СтрокаТаблицы.ЭтоДеньПревышенияПредела3	= СтрокаТаблицы.ЭтоДеньПревышенияПредела1;
					СтрокаТаблицы.ЭтоДеньПревышенияПредела4	= СтрокаТаблицы.ЭтоДеньПревышенияПредела1;
				КонецЕсли;
				ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода + СтрокаТаблицы.ОблагаемыйДоход - ПредоставленныеВычеты;
				СтрокаТаблицы.ОблагаемыйДоходСНачалаГода = ОблагаемыйДоходСНачалаГода;
				СтрокаТаблицы.Предел1Превышен = ОблагаемыйДоходСНачалаГода > Предел1;
				Если Предел1 <> Предел2 Тогда
					СтрокаТаблицы.Предел2Превышен = ОблагаемыйДоходСНачалаГода > Предел2;
					Если Предел2 <> Предел3 Тогда
						СтрокаТаблицы.Предел3Превышен = ОблагаемыйДоходСНачалаГода > Предел3;
						Если Предел3 <> Предел4 Тогда
							СтрокаТаблицы.Предел4Превышен = ОблагаемыйДоходСНачалаГода > Предел4;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Запрос.УстановитьПараметр("РасчетНарастающимИтогом", ТаблицаРасчетаНарастающимИтогом); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			Запрос.Текст =
			"ВЫБРАТЬ
			|	РасчетНарастающимИтогом.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасчетНарастающимИтогом.Период КАК ДатаПолученияДохода,
			|	РасчетНарастающимИтогом.НалоговаяБаза КАК НалоговаяБаза,
			|	РасчетНарастающимИтогом.ОблагаемыйДоход КАК ОблагаемыйДоход,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела1 КАК ЭтоДеньПревышенияПредела1,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела2 КАК ЭтоДеньПревышенияПредела2,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела3 КАК ЭтоДеньПревышенияПредела3,
			|	РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела4 КАК ЭтоДеньПревышенияПредела4,
			|	РасчетНарастающимИтогом.Предел1Превышен КАК Предел1Превышен,
			|	РасчетНарастающимИтогом.Предел2Превышен КАК Предел2Превышен,
			|	РасчетНарастающимИтогом.Предел3Превышен КАК Предел3Превышен,
			|	РасчетНарастающимИтогом.Предел4Превышен КАК Предел4Превышен,
			|	РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода
			|ПОМЕСТИТЬ ВТРасчетНарастающимИтогом
			|ИЗ
			|	&РасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоходыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыПоСтавкам.Год КАК Год,
			|	ДоходыПоСтавкам.Месяц КАК Месяц,
			|	ДоходыПоСтавкам.СуммаДохода КАК СуммаДохода,
			|	ДоходыПоСтавкам.СуммаВычета КАК СуммаВычета,
			|	ДоходыПоСтавкам.КодДохода КАК КодДохода,
			|	ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
			|	ДоходыПоСтавкам.КодДоходаКод КАК КодДоходаКод,
			|	ДоходыПоСтавкам.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	ДоходыПоСтавкам.Ставка КАК Ставка,
			|	ДоходыПоСтавкам.СтавкаЧислом КАК СтавкаЧислом,
			|	ДоходыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	ДоходыПоСтавкам.МесяцНачисления КАК МесяцНачисления,
			|	ДоходыПоСтавкам.ДатаВыплаты КАК ДатаВыплаты,
			|	ДоходыПоСтавкам.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДоходыПоСтавкам.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	ДоходыПоСтавкам.ДатаНачисления КАК ДатаНачисления,
			|	ДоходыПоСтавкам.КодВычета КАК КодВычета,
			|	ДоходыПоСтавкам.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыПоСтавкам.ДоходРазделаПо13 КАК ДоходРазделаПо13,
			|	ДоходыПоСтавкам.КатегорияДохода КАК КатегорияДохода,
			|	ДоходыПоСтавкам.ДокументОснование КАК ДокументОснование,
			|	ДоходыПоСтавкам.ДатаПолученияДоходаПеренесена КАК ДатаПолученияДоходаПеренесена,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоходСНачалаГода, 0) КАК ОблагаемыйДоходСНачалаГода,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела1, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела1,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела2, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела2,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела3, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела3,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ЭтоДеньПревышенияПредела4, ЛОЖЬ) КАК ЭтоДеньПревышенияПредела4,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.Предел1Превышен, ЛОЖЬ) КАК Предел1Превышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.Предел2Превышен, ЛОЖЬ) КАК Предел2Превышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.Предел3Превышен, ЛОЖЬ) КАК Предел3Превышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.Предел4Превышен, ЛОЖЬ) КАК Предел4Превышен,
			|	ЕСТЬNULL(РасчетНарастающимИтогом.ОблагаемыйДоход, 0) КАК ОблагаемыйДоходЗаДень
			|ПОМЕСТИТЬ ВТРасширенныеДанныеОДоходах
			|ИЗ
			|	ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРасчетНарастающимИтогом КАК РасчетНарастающимИтогом
			|		ПО ДоходыПоСтавкам.ФизическоеЛицо = РасчетНарастающимИтогом.ФизическоеЛицо
			|			И ДоходыПоСтавкам.ДатаПолученияДохода = РасчетНарастающимИтогом.ДатаПолученияДохода
			|			И ДоходыПоСтавкам.НалоговаяБаза = РасчетНарастающимИтогом.НалоговаяБаза
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК Период,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза
			|ПОМЕСТИТЬ ВТФизлицаБезПереносаДат
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	(РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4)
			|
			|СГРУППИРОВАТЬ ПО
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация
			|
			|ИМЕЮЩИЕ
			|	МАКСИМУМ(РасширенныеДанныеОДоходах.ДатаПолученияДоходаПеренесена) = ЛОЖЬ И
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане) > 1 И
			|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ РасширенныеДанныеОДоходах.ДокументОснование) > 1
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	ФизлицаБезПереносаДат.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ФизлицаБезПереносаДат.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ФизлицаБезПереносаДат.Период КАК Период,
			|	РасширенныеДанныеОДоходах.КатегорияДохода КАК КатегорияДохода,
			|	РасширенныеДанныеОДоходах.ДокументОснование КАК ДокументОснование,
			|	ФизлицаБезПереносаДат.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1 КАК ЭтоДеньПревышенияПредела1,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2 КАК ЭтоДеньПревышенияПредела2,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3 КАК ЭтоДеньПревышенияПредела3,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4 КАК ЭтоДеньПревышенияПредела4
			|ПОМЕСТИТЬ ВТОтборОснований
			|ИЗ
			|	ВТФизлицаБезПереносаДат КАК ФизлицаБезПереносаДат
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|		ПО ФизлицаБезПереносаДат.ФизическоеЛицо = РасширенныеДанныеОДоходах.ФизическоеЛицо
			|			И ФизлицаБезПереносаДат.НалоговаяБаза = РасширенныеДанныеОДоходах.НалоговаяБаза
			|			И ФизлицаБезПереносаДат.Период = РасширенныеДанныеОДоходах.ДатаПолученияДохода
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ОтборОснований.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ОтборОснований.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ОтборОснований.Период КАК ДатаПолученияДохода,
			|	ОтборОснований.НалоговаяБаза КАК НалоговаяБаза,
			|	ОтборОснований.ДокументОснование КАК ДокументОснование,
			|	ВЫБОР
			|		КОГДА ОтборОснований.ЭтоДеньПревышенияПредела1
			|			ТОГДА ВЫБОР
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 1
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.Сумма) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 2
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОГДА ОтборОснований.ЭтоДеньПревышенияПредела2
			|			ТОГДА ВЫБОР
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 1
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышения) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 2
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОГДА ОтборОснований.ЭтоДеньПревышенияПредела3
			|			ТОГДА ВЫБОР
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 1
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке18) = 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 2
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		КОГДА ОтборОснований.ЭтоДеньПревышенияПредела4
			|			ТОГДА ВЫБОР
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) = 0
			|						ТОГДА 1
			|					КОГДА СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке22) <> 0
			|							И СУММА(РасчетыНалогоплательщиковСБюджетомПоНДФЛ.СуммаСПревышенияПоСтавке20) = 0
			|						ТОГДА 2
			|					ИНАЧЕ 0
			|				КОНЕЦ
			|		ИНАЧЕ 0
			|	КОНЕЦ КАК ОписаниеДокумента
			|ПОМЕСТИТЬ ВТОснованияВДниПревышения
			|ИЗ
			|	ВТОтборОснований КАК ОтборОснований
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.РасчетыНалогоплательщиковСБюджетомПоНДФЛ КАК РасчетыНалогоплательщиковСБюджетомПоНДФЛ
			|		ПО ОтборОснований.ФизическоеЛицо = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ФизическоеЛицо
			|			И ОтборОснований.КатегорияДохода = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.КатегорияДохода
			|			И ОтборОснований.Период = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.МесяцНалоговогоПериода
			|			И ОтборОснований.ДокументОснование = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ДокументОснование
			|			И ОтборОснований.ГоловнаяОрганизация = РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ГоловнаяОрганизация
			|ГДЕ
			|	РасчетыНалогоплательщиковСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
			|
			|СГРУППИРОВАТЬ ПО
			|	ОтборОснований.ФизическоеЛицо,
			|	ОтборОснований.Период,
			|	ОтборОснований.НалоговаяБаза,
			|	ОтборОснований.ДокументОснование,
			|	ОтборОснований.ГоловнаяОрганизация,
			|	ОтборОснований.ЭтоДеньПревышенияПредела1,
			|	ОтборОснований.ЭтоДеньПревышенияПредела2,
			|	ОтборОснований.ЭтоДеньПревышенияПредела3,
			|	ОтборОснований.ЭтоДеньПревышенияПредела4
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода) КАК СуммаДохода,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаВычета) КАК СуммаВычета,
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода - РасширенныеДанныеОДоходах.СуммаВычета) КАК ОблагаемаяСумма,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год КАК Год,
			|	РасширенныеДанныеОДоходах.Месяц КАК Месяц,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод КАК КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.Ставка КАК Ставка,
			|	РасширенныеДанныеОДоходах.СтавкаЧислом КАК СтавкаЧислом,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.МесяцНачисления КАК МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты КАК ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК Период,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления КАК ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13 КАК ДоходРазделаПо13,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода КАК ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень КАК ОблагаемыйДоходЗаДень,
			|	РасширенныеДанныеОДоходах.ДокументОснование КАК ДокументОснование,
			|	ЕСТЬNULL(ОснованияВДниПревышения.ОписаниеДокумента, 0) КАК ОписаниеДокументаСПревышением,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1 КАК ЭтоДеньПревышенияПредела1,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2 КАК ЭтоДеньПревышенияПредела2,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3 КАК ЭтоДеньПревышенияПредела3,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4 КАК ЭтоДеньПревышенияПредела4
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОснованияВДниПревышения КАК ОснованияВДниПревышения
			|		ПО РасширенныеДанныеОДоходах.ФизическоеЛицо = ОснованияВДниПревышения.ФизическоеЛицо
			|			И РасширенныеДанныеОДоходах.НалоговаяБаза = ОснованияВДниПревышения.НалоговаяБаза
			|			И РасширенныеДанныеОДоходах.ДокументОснование = ОснованияВДниПревышения.ДокументОснование
			|			И РасширенныеДанныеОДоходах.ДатаПолученияДохода = ОснованияВДниПревышения.ДатаПолученияДохода
			|			И РасширенныеДанныеОДоходах.ГоловнаяОрганизация = ОснованияВДниПревышения.ГоловнаяОрганизация
			|ГДЕ
			|	(РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3
			|			ИЛИ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4)
			|	И РасширенныеДанныеОДоходах.ОблагаетсяУНалоговогоАгента
			|
			|СГРУППИРОВАТЬ ПО
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год,
			|	РасширенныеДанныеОДоходах.Месяц,
			|	РасширенныеДанныеОДоходах.КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.Ставка,
			|	РасширенныеДанныеОДоходах.СтавкаЧислом,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходСНачалаГода,
			|	РасширенныеДанныеОДоходах.ОблагаемыйДоходЗаДень,
			|	РасширенныеДанныеОДоходах.ДокументОснование,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3,
			|	РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4,
			|	ЕСТЬNULL(ОснованияВДниПревышения.ОписаниеДокумента, 0)
			|
			|ИМЕЮЩИЕ
			|	СУММА(РасширенныеДанныеОДоходах.СуммаДохода - РасширенныеДанныеОДоходах.СуммаВычета) <> 0
			|
			|УПОРЯДОЧИТЬ ПО
			|	ФизическоеЛицо,
			|	НалоговаяБаза,
			|	ДатаПолученияДохода,
			|	КодДохода";
			
			ТаблицаРасчетаНарастающимИтогом = Запрос.Выполнить().Выгрузить();
			
			ДоходыСУточненнымиСтавками = УчетНДФЛЗаполнениеОтчетности.ДополнительныеСтрокиПревышения(ТаблицаРасчетаНарастающимИтогом, Ложь, Ложь);
			Для каждого СтрокаТаблицы Из ДоходыСУточненнымиСтавками Цикл
				Если СтрокаТаблицы.Ставка = Перечисления.НДФЛСтавки.Ставка15 Тогда
					СтрокаТаблицы.СтавкаЧислом = 0.15
				ИначеЕсли СтрокаТаблицы.Ставка = Перечисления.НДФЛСтавки.Ставка18 Тогда
					СтрокаТаблицы.СтавкаЧислом = 0.18
				ИначеЕсли СтрокаТаблицы.Ставка = Перечисления.НДФЛСтавки.Ставка20 Тогда
					СтрокаТаблицы.СтавкаЧислом = 0.20
				ИначеЕсли СтрокаТаблицы.Ставка = Перечисления.НДФЛСтавки.Ставка22 Тогда
					СтрокаТаблицы.СтавкаЧислом = 0.22
				Иначе
					
				КонецЕсли;
			КонецЦикла;
			
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ТаблицаРасчетаНарастающимИтогом, ДоходыСУточненнымиСтавками); ТаблицаРасчетаНарастающимИтогом = Неопределено;
			
			Запрос.УстановитьПараметр("ДоходыСУточненнымиСтавками", ДоходыСУточненнымиСтавками); ДоходыСУточненнымиСтавками = Неопределено;
			Запрос.Текст =
			"УНИЧТОЖИТЬ ВТДоходыПоСтавкам
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Год КАК Год,
			|	ДоходыСУточненнымиСтавками.Месяц КАК Месяц,
			|	ДоходыСУточненнымиСтавками.СуммаДохода КАК СуммаДохода,
			|	ДоходыСУточненнымиСтавками.СуммаВычета КАК СуммаВычета,
			|	ДоходыСУточненнымиСтавками.КодДохода КАК КодДохода,
			|	ДоходыСУточненнымиСтавками.КодДоходаКод КАК КодДоходаКод,
			|	ДоходыСУточненнымиСтавками.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.Ставка КАК Ставка,
			|	ДоходыСУточненнымиСтавками.СтавкаЧислом КАК СтавкаЧислом,
			|	ДоходыСУточненнымиСтавками.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	ДоходыСУточненнымиСтавками.МесяцНачисления КАК МесяцНачисления,
			|	ДоходыСУточненнымиСтавками.ДатаВыплаты КАК ДатаВыплаты,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	ДоходыСУточненнымиСтавками.ДатаНачисления КАК ДатаНачисления,
			|	ДоходыСУточненнымиСтавками.КодВычета КАК КодВычета,
			|	ДоходыСУточненнымиСтавками.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза КАК НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.ДоходРазделаПо13 КАК ДоходРазделаПо13
			|ПОМЕСТИТЬ ВТДоходыСУточненнымиСтавками
			|ИЗ
			|	&ДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.Предел4Превышен
			|			ТОГДА 0.22
			|		КОГДА РасширенныеДанныеОДоходах.Предел3Превышен
			|			ТОГДА 0.2
			|		КОГДА РасширенныеДанныеОДоходах.Предел2Превышен
			|			ТОГДА 0.18
			|		КОГДА РасширенныеДанныеОДоходах.Предел1Превышен
			|			ТОГДА 0.15
			|		ИНАЧЕ РасширенныеДанныеОДоходах.СтавкаЧислом
			|	КОНЕЦ КАК СтавкаЧислом,
			|	ВЫБОР
			|		КОГДА РасширенныеДанныеОДоходах.Предел4Превышен
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
			|		КОГДА РасширенныеДанныеОДоходах.Предел3Превышен
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
			|		КОГДА РасширенныеДанныеОДоходах.Предел2Превышен
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
			|		КОГДА РасширенныеДанныеОДоходах.Предел1Превышен
			|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
			|		ИНАЧЕ РасширенныеДанныеОДоходах.Ставка
			|	КОНЕЦ КАК Ставка,
			|	РасширенныеДанныеОДоходах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
			|	РасширенныеДанныеОДоходах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
			|	РасширенныеДанныеОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
			|	РасширенныеДанныеОДоходах.Год КАК Год,
			|	РасширенныеДанныеОДоходах.Месяц КАК Месяц,
			|	РасширенныеДанныеОДоходах.СуммаДохода КАК СуммаДохода,
			|	РасширенныеДанныеОДоходах.СуммаВычета КАК СуммаВычета,
			|	РасширенныеДанныеОДоходах.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
			|	РасширенныеДанныеОДоходах.КодДохода КАК КодДохода,
			|	РасширенныеДанныеОДоходах.КодДоходаКод КАК КодДоходаКод,
			|	РасширенныеДанныеОДоходах.КодДоходаКодДляОтчетности КАК КодДоходаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.МесяцНачисления КАК МесяцНачисления,
			|	РасширенныеДанныеОДоходах.ДатаВыплаты КАК ДатаВыплаты,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
			|	РасширенныеДанныеОДоходах.ДатаПолученияДоходаФиксирована КАК ДатаПолученияДоходаФиксирована,
			|	РасширенныеДанныеОДоходах.ДатаНачисления КАК ДатаНачисления,
			|	РасширенныеДанныеОДоходах.КодВычета КАК КодВычета,
			|	РасширенныеДанныеОДоходах.КодВычетаКодДляОтчетности КАК КодВычетаКодДляОтчетности,
			|	РасширенныеДанныеОДоходах.НалоговаяБаза КАК НалоговаяБаза,
			|	РасширенныеДанныеОДоходах.ДоходРазделаПо13 КАК ДоходРазделаПо13
			|ПОМЕСТИТЬ ВТДоходыПоСтавкам
			|ИЗ
			|	ВТРасширенныеДанныеОДоходах КАК РасширенныеДанныеОДоходах
			|ГДЕ
			|	НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела1
			|	И НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела2
			|	И НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела3
			|	И НЕ РасширенныеДанныеОДоходах.ЭтоДеньПревышенияПредела4
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ДоходыСУточненнымиСтавками.СтавкаЧислом,
			|	ДоходыСУточненнымиСтавками.Ставка,
			|	ДоходыСУточненнымиСтавками.РегистрацияВНалоговомОргане,
			|	ДоходыСУточненнымиСтавками.ГоловнаяОрганизация,
			|	ДоходыСУточненнымиСтавками.ФизическоеЛицо,
			|	ДоходыСУточненнымиСтавками.Год,
			|	ДоходыСУточненнымиСтавками.Месяц,
			|	ДоходыСУточненнымиСтавками.СуммаДохода,
			|	ДоходыСУточненнымиСтавками.СуммаВычета,
			|	ИСТИНА,
			|	ДоходыСУточненнымиСтавками.КодДохода,
			|	ДоходыСУточненнымиСтавками.КодДоходаКод,
			|	ДоходыСУточненнымиСтавками.КодДоходаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.МесяцНачисления,
			|	ДоходыСУточненнымиСтавками.ДатаВыплаты,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДохода,
			|	ДоходыСУточненнымиСтавками.ДатаПолученияДоходаФиксирована,
			|	ДоходыСУточненнымиСтавками.ДатаНачисления,
			|	ДоходыСУточненнымиСтавками.КодВычета,
			|	ДоходыСУточненнымиСтавками.КодВычетаКодДляОтчетности,
			|	ДоходыСУточненнымиСтавками.НалоговаяБаза,
			|	ДоходыСУточненнымиСтавками.ДоходРазделаПо13
			|ИЗ
			|	ВТДоходыСУточненнымиСтавками КАК ДоходыСУточненнымиСтавками";
			Запрос.Выполнить();
		КонецЕсли;
		
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода) КАК ГОД,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогНачислено,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения < НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов
	|						ТОГДА НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов - НДФЛРасчетыСБюджетом.СуммаСПревышения
	|					ИНАЧЕ 0
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогКЗачету,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогУдержано,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				И НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УдержаноКЗачетуПоСтавке13,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА НДФЛРасчетыСБюджетом.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогПереданоНаВзыскание,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА -НДФЛРасчетыСБюджетом.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалогВозвращено,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода КАК Месяц,
	|	НДФЛРасчетыСБюджетом.Период КАК Период,
	|	НДФЛРасчетыСБюджетом.Ставка КАК Ставка,
	|	НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода КАК СтавкаПоИтогамГода,
	|	НДФЛРасчетыСБюджетом.КодДохода КАК КодДохода,
	|	НДФЛРасчетыСБюджетом.НалоговаяБаза КАК НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления КАК СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДанныеОНалогах
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.Сумма <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода),
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов <> 0
	|			ТОГДА ВЫБОР
	|					КОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения < НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов
	|						ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения
	|					ИНАЧЕ НДФЛРасчетыСБюджетом.НалогНаПрибыльДляДивидендов
	|				КОНЕЦ
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				И НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА -НДФЛРасчетыСБюджетом.СуммаСПревышения
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.Период,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Ставка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &НачалоРасчетаНДФЛПоПрогрессивнойШкале
	|	И НДФЛРасчетыСБюджетом.СуммаСПревышения <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода),
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				И НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА -НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.Период,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Ставка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаЗакона176ФЗ
	|	И НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке18 <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода),
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				И НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА -НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.Период,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Ставка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаЗакона176ФЗ
	|	И НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке20 <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДФЛРасчетыСБюджетом.ГоловнаяОрганизация,
	|	НДФЛРасчетыСБюджетом.ФизическоеЛицо,
	|	ГОД(НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода),
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.Удержано)
	|				И НДФЛРасчетыСБюджетом.СтавкаНалогообложенияРезидента = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавкиНалогообложенияРезидента.Ставка13)
	|				И НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				И НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ПереданоНаВзысканиеВНалоговыйОрган)
	|			ТОГДА НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И НДФЛРасчетыСБюджетом.ВариантУдержания = ЗНАЧЕНИЕ(Перечисление.ВариантыУдержанияНДФЛ.ВозвращеноНалоговымАгентом)
	|			ТОГДА -НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода,
	|	НДФЛРасчетыСБюджетом.Период,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.Ставка
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|		ИНАЧЕ НДФЛРасчетыСБюджетом.СтавкаПоИтогамГода
	|	КОНЕЦ,
	|	НДФЛРасчетыСБюджетом.КодДохода,
	|	НДФЛРасчетыСБюджетом.НалоговаяБаза,
	|	НДФЛРасчетыСБюджетом.СрокПеречисления,
	|	НДФЛРасчетыСБюджетом.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТСтрокиНалоговСоСтавками КАК НДФЛРасчетыСБюджетом
	|ГДЕ
	|	НДФЛРасчетыСБюджетом.МесяцНалоговогоПериода >= &ДатаЗакона176ФЗ
	|	И НДФЛРасчетыСБюджетом.СуммаСПревышенияПоСтавке22 <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Авансы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Авансы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ГОД(Авансы.МесяцНалоговогоПериода) КАК ГОД,
	|	Авансы.Сумма КАК Зачтено,
	|	Авансы.МесяцНалоговогоПериода КАК Месяц,
	|	Авансы.Период КАК Период,
	|	Авансы.Ставка КАК Ставка,
	|	Авансы.СтавкаПоИтогамГода КАК СтавкаПоИтогамГода,
	|	Авансы.НалоговаяБаза КАК НалоговаяБаза,
	|	Авансы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДанныеОЗачтенныхАвансах
	|ИЗ
	|	ВТСтрокиАвансов КАК Авансы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходахПоРазделам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СведенияОДоходахПоРазделам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходахПоРазделам.Месяц КАК Месяц,
	|	СУММА(СведенияОДоходахПоРазделам.СуммаДохода) КАК СуммаДохода,
	|	СведенияОДоходахПоРазделам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДоходыПоМесяцамПоСтавке13Итог
	|ИЗ
	|	ВТДоходыПоСтавкам КАК СведенияОДоходахПоРазделам
	|ГДЕ
	|	СведенияОДоходахПоРазделам.ДоходРазделаПо13
	|	И СведенияОДоходахПоРазделам.ОблагаетсяУНалоговогоАгента
	|	И (СведенияОДоходахПоРазделам.Месяц < &ДатаЗакона176ФЗ
	|			ИЛИ СведенияОДоходахПоРазделам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда))
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходахПоРазделам.ГоловнаяОрганизация,
	|	СведенияОДоходахПоРазделам.ФизическоеЛицо,
	|	СведенияОДоходахПоРазделам.Месяц,
	|	СведенияОДоходахПоРазделам.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДоходыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоходыПоСтавкам.Год КАК Год,
	|	ДоходыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
	|	ДоходыПоСтавкам.Месяц КАК Месяц,
	|	ДоходыПоСтавкам.Ставка КАК Ставка,
	|	ЕСТЬNULL(МАКСИМУМ(ПредыдущийМесяц.Месяц), ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ДоходыПоСтавкам.Месяц, ГОД), СЕКУНДА, -1)) КАК ПредыдущийМесяц,
	|	ДоходыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТДоходыПо13
	|ИЗ
	|	ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоСтавкам КАК ПредыдущийМесяц
	|		ПО ДоходыПоСтавкам.ГоловнаяОрганизация = ПредыдущийМесяц.ГоловнаяОрганизация
	|			И ДоходыПоСтавкам.ФизическоеЛицо = ПредыдущийМесяц.ФизическоеЛицо
	|			И ДоходыПоСтавкам.Год = ПредыдущийМесяц.Год
	|			И ДоходыПоСтавкам.НалоговаяБаза = ПредыдущийМесяц.НалоговаяБаза
	|			И ДоходыПоСтавкам.Месяц > ПредыдущийМесяц.Месяц
	|			И ДоходыПоСтавкам.РегистрацияВНалоговомОргане = ПредыдущийМесяц.РегистрацияВНалоговомОргане
	|			И ДоходыПоСтавкам.ДоходРазделаПо13 = ПредыдущийМесяц.ДоходРазделаПо13
	|			И ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента = ПредыдущийМесяц.ОблагаетсяУНалоговогоАгента
	|ГДЕ
	|	ДоходыПоСтавкам.ДоходРазделаПо13
	|	И ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыПоСтавкам.ГоловнаяОрганизация,
	|	ДоходыПоСтавкам.ФизическоеЛицо,
	|	ДоходыПоСтавкам.НалоговаяБаза,
	|	ДоходыПоСтавкам.Год,
	|	ДоходыПоСтавкам.Месяц,
	|	ДоходыПоСтавкам.Ставка,
	|	ДоходыПоСтавкам.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыПо13.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДоходыПо13.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДоходыПо13.Год КАК Год,
	|	ДоходыПо13.Месяц КАК Месяц,
	|	ДоходыПо13.НалоговаяБаза КАК НалоговаяБаза,
	|	ДоходыПо13.Ставка КАК Ставка,
	|	ДоходыПо13.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ДоходыПоСтавкам.СуммаДохода) КАК СуммаДохода,
	|	СУММА(ДоходыПоСтавкам.СуммаВычета) КАК СуммаВычета
	|ПОМЕСТИТЬ ВТДоходыДоПолученияСтатусаРезидента
	|ИЗ
	|	ВТДоходыПо13 КАК ДоходыПо13
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
	|		ПО ДоходыПо13.ГоловнаяОрганизация = ДоходыПоСтавкам.ГоловнаяОрганизация
	|			И ДоходыПо13.ФизическоеЛицо = ДоходыПоСтавкам.ФизическоеЛицо
	|			И (ДоходыПоСтавкам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
	|			И ДоходыПо13.Месяц > ДоходыПоСтавкам.Месяц
	|			И ДоходыПо13.ПредыдущийМесяц < ДоходыПоСтавкам.Месяц
	|			И ДоходыПо13.Год = ДоходыПоСтавкам.Год
	|			И ДоходыПо13.НалоговаяБаза = ДоходыПоСтавкам.НалоговаяБаза
	|			И ДоходыПо13.РегистрацияВНалоговомОргане = ДоходыПоСтавкам.РегистрацияВНалоговомОргане
	|			И (ДоходыПоСтавкам.ОблагаетсяУНалоговогоАгента)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДоходыПо13.Год,
	|	ДоходыПо13.ГоловнаяОрганизация,
	|	ДоходыПо13.ФизическоеЛицо,
	|	ДоходыПо13.Месяц,
	|	ДоходыПо13.НалоговаяБаза,
	|	ДоходыПо13.Ставка,
	|	ДоходыПо13.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период КАК Период,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка КАК Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма КАК Сумма,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПлатежногоПоручения КАК РеквизитыПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация
	|ПОМЕСТИТЬ ВТРасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|ИЗ
	|	РегистрНакопления.РасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбособленныеПодразделения КАК СписокФизЛицОрганизация
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = СписокФизЛицОрганизация.ФизическоеЛицо
	|			И (РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода МЕЖДУ &НачалоНП И &КонецНП)
	|			И (РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход))
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Организация = СписокФизЛицОрганизация.Организация
	|ГДЕ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма <> 0
	|	И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.МесяцНалоговогоПериода КАК Месяц,
	|	МИНИМУМ(ДанныеОНалогах.Период) КАК Дата,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТПерваяСтрокаПеречисленногоНалогаЗаМесяц
	|ИЗ
	|	ВТРасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК ДанныеОНалогах
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	ДанныеОНалогах.МесяцНалоговогоПериода,
	|	ДанныеОНалогах.Ставка,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.ГоловнаяОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.ГОД КАК ГОД,
	|	ДанныеОНалогах.Месяц КАК МесяцНалоговогоПериода,
	|	ДанныеОНалогах.СтавкаПоИтогамГода КАК Ставка,
	|	СУММА(ДанныеОНалогах.НалогУдержано) КАК Налог,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТУдержаноНДФЛПоМесяцам
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|ГДЕ
	|	ДанныеОНалогах.Месяц < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНалогах.ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	ДанныеОНалогах.ГОД,
	|	ДанныеОНалогах.Месяц,
	|	ДанныеОНалогах.СтавкаПоИтогамГода,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ДанныеОНалогах.Сумма) КАК Сумма
	|ПОМЕСТИТЬ ВТПеречисленоНДФЛПоМесяцам
	|ИЗ
	|	ВТРасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК ДанныеОНалогах
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	ДанныеОНалогах.МесяцНалоговогоПериода,
	|	ДанныеОНалогах.Ставка,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.ГоловнаяОрганизация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Перечислено.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Перечислено.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Перечислено.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	Перечислено.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) = 0
	|			ТОГДА 0
	|		КОГДА ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) + ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ Перечислено.Сумма - (ВЫРАЗИТЬ(Перечислено.Сумма * ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) / (ЕСТЬNULL(УдержаноНДФЛПоСтавке30.Налог, 0) + ЕСТЬNULL(УдержаноНДФЛПоСтавке13.Налог, 0)) КАК ЧИСЛО(22, 0)))
	|	КОНЕЦ КАК КЗачетуПоСтавке13
	|ПОМЕСТИТЬ ВТКЗачетуПоПеречислениям
	|ИЗ
	|	ВТПеречисленоНДФЛПоМесяцам КАК Перечислено
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПоМесяцам КАК УдержаноНДФЛПоСтавке13
	|		ПО Перечислено.ФизическоеЛицо = УдержаноНДФЛПоСтавке13.ФизическоеЛицо
	|			И Перечислено.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке13.МесяцНалоговогоПериода
	|			И (УдержаноНДФЛПоСтавке13.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|			И Перечислено.ГоловнаяОрганизация = УдержаноНДФЛПоСтавке13.ГоловнаяОрганизация
	|			И Перечислено.РегистрацияВНалоговомОргане = УдержаноНДФЛПоСтавке13.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТУдержаноНДФЛПоМесяцам КАК УдержаноНДФЛПоСтавке30
	|		ПО Перечислено.ФизическоеЛицо = УдержаноНДФЛПоСтавке30.ФизическоеЛицо
	|			И Перечислено.МесяцНалоговогоПериода = УдержаноНДФЛПоСтавке30.МесяцНалоговогоПериода
	|			И (УдержаноНДФЛПоСтавке30.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
	|			И Перечислено.ГоловнаяОрганизация = УдержаноНДФЛПоСтавке30.ГоловнаяОрганизация
	|			И Перечислено.РегистрацияВНалоговомОргане = УдержаноНДФЛПоСтавке30.РегистрацияВНалоговомОргане
	|ГДЕ
	|	Перечислено.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&КонецНП КАК Период,
	|	СтандартныеВычетыПоМесяцамРезидентства.КодВычетаЛичный КАК КодВычета
	|ПОМЕСТИТЬ ВТСтандартныеВычетыВсе
	|ИЗ
	|	ВТСтандартныеВычетыПоМесяцамРезидентства КАК СтандартныеВычетыПоМесяцамРезидентства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДоходыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВТВсеРегистрации
	|ИЗ
	|	ВТДоходыПоСтавкам КАК ДоходыПоСтавкам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТВычетыПоСтавкам КАК ВычетыПоСтавкам
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТРасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеОЗачтенныхАвансах.РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОЗачтенныхАвансах КАК ДанныеОЗачтенныхАвансах";
	Запрос.Выполнить();
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"РазмерВычетовНДФЛ",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТСтандартныеВычетыВсе",
			"Период,КодВычета"));
			
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗачтенныеАвансы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЗачтенныеАвансы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЗачтенныеАвансы.Месяц КАК Месяц,
	|	ЗачтенныеАвансы.Период КАК Дата,
	|	ЗачтенныеАвансы.Ставка КАК Ставка,
	|	ЗачтенныеАвансы.Зачтено КАК ЗачтеноАвансов,
	|	ЗачтенныеАвансы.НалоговаяБаза КАК НалоговаяБаза,
	|	ЗачтенныеАвансы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЗачтенныеАвансы.СтавкаПоИтогамГода КАК СтавкаПоИтогамГода
	|ИЗ
	|	ВТДанныеОЗачтенныхАвансах КАК ЗачтенныеАвансы
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза,
	|	Месяц,
	|	Дата,
	|	Ставка
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РегистрацииВНалоговомОргане.КодПоОКАТО КАК КодПоОКАТО,
	|	РегистрацииВНалоговомОргане.КодПоОКТМО КАК КодПоОКТМО,
	|	РегистрацииВНалоговомОргане.КПП КАК КПП,
	|	РегистрацииВНалоговомОргане.Ссылка КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	|ГДЕ
	|	РегистрацииВНалоговомОргане.Ссылка В
	|			(ВЫБРАТЬ
	|				ВсеРегистрации.РегистрацияВНалоговомОргане
	|			ИЗ
	|				ВТВсеРегистрации КАК ВсеРегистрации)
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВычетыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВычетыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
	|	ВычетыПоСтавкам.Месяц КАК Месяц,
	|	СУММА(ВычетыПоСтавкам.СуммаВычета) КАК СуммаВычета
	|ИЗ
	|	ВТВычетыПоСтавкам КАК ВычетыПоСтавкам
	|ГДЕ
	|	ВычетыПоСтавкам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыПоСтавкам.ФизическоеЛицо,
	|	ВычетыПоСтавкам.ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.Месяц,
	|	ВычетыПоСтавкам.НалоговаяБаза,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВычетыПоСтавкам.СуммаВычета) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза,
	|	Месяц
	|ИТОГИ
	|	СУММА(СуммаВычета)
	|ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатусФизЛицНаКонецМесяца.ФизическоеЛицо КАК ФизическоеЛицо,
	|	КОНЕЦПЕРИОДА(СтатусФизЛицНаКонецМесяца.Месяц, МЕСЯЦ) КАК Месяц,
	|	СтатусФизЛицНаКонецМесяца.Статус КАК Статус
	|ИЗ
	|	ВТСтатусФизЛицНаКонецМесяца КАК СтатусФизЛицНаКонецМесяца
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	Месяц
	|ИТОГИ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДокументыПодтверждения.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДокументыПодтверждения.ФизическоеЛицо КАК ФизическоеЛицо,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.ДатаУведомления) КАК ДатаУведомления,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.НомерУведомления) КАК Номер,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.КодНалоговогоОргана) КАК КодОрганаУведомление
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВТСписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|		ВТСписокФизЛицОрганизация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		МАКСИМУМ(НДФЛИмущественныеВычетыФизлиц.Регистратор) КАК Регистратор
	|	ИЗ
	|		РегистрНакопления.ИмущественныеВычетыНДФЛ КАК НДФЛИмущественныеВычетыФизлиц
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК ВТСписокФизЛицОрганизация
	|			ПО НДФЛИмущественныеВычетыФизлиц.ФизическоеЛицо = ВТСписокФизЛицОрганизация.ФизическоеЛицо
	|				И НДФЛИмущественныеВычетыФизлиц.ГоловнаяОрганизация = ВТСписокФизЛицОрганизация.ГоловнаяОрганизация
	|				И (ВТСписокФизЛицОрганизация.НеОтбиратьПоОП
	|					ИЛИ НДФЛИмущественныеВычетыФизлиц.Организация = ВТСписокФизЛицОрганизация.Организация)
	|				И (НДФЛИмущественныеВычетыФизлиц.Год = ГОД(&НачалоНП))
	|				И (НДФЛИмущественныеВычетыФизлиц.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход))
	|	
	|	СГРУППИРОВАТЬ ПО
	|		ВТСписокФизЛицОрганизация.ФизическоеЛицо,
	|		ВТСписокФизЛицОрганизация.ГоловнаяОрганизация) КАК ДокументыПодтверждения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ КАК НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации
	|		ПО ДокументыПодтверждения.Регистратор = НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.Ссылка
	|			И ДокументыПодтверждения.ФизическоеЛицо = НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ДокументыПодтверждения.ГоловнаяОрганизация,
	|	ДокументыПодтверждения.ФизическоеЛицо
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МаксимальныеДатыСправок.Дата КАК ДатаСправки,
	|	МАКСИМУМ(СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерСправки) КАК НомерСправки,
	|	МаксимальныеДатыСправок.Сотрудник КАК ФизическоеЛицо,
	|	1 КАК ТипСправки,
	|	ПРЕДСТАВЛЕНИЕ(МаксимальныеДатыСправок.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	(ВЫБРАТЬ
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Дата) КАК Дата,
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|	ИЗ
	|		ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|			ПО СписокФизЛицОрганизация.ФизическоеЛицо = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник
	|				И СписокФизЛицОрганизация.ГоловнаяОрганизация = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.НалоговыйПериод = ГОД(&НачалоНП))
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетностьЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ЕжегоднаяОтчетность)))
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Проведен)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник,
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.РегистрацияВНалоговомОргане) КАК МаксимальныеДатыСправок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|		ПО МаксимальныеДатыСправок.Сотрудник = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник
	|			И МаксимальныеДатыСправок.Дата = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Дата
	|			И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыСправок.Сотрудник,
	|	МаксимальныеДатыСправок.Дата,
	|	ПРЕДСТАВЛЕНИЕ(МаксимальныеДатыСправок.РегистрацияВНалоговомОргане)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МаксимальныеДатыСправок.Дата,
	|	МАКСИМУМ(СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.НомерСправки),
	|	МаксимальныеДатыСправок.Сотрудник,
	|	3,
	|	ПРЕДСТАВЛЕНИЕ(МаксимальныеДатыСправок.РегистрацияВНалоговомОргане)
	|ИЗ
	|	(ВЫБРАТЬ
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник КАК Сотрудник,
	|		МАКСИМУМ(СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Дата) КАК Дата,
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|	ИЗ
	|		ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|			ПО СписокФизЛицОрганизация.ФизическоеЛицо = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник
	|				И СписокФизЛицОрганизация.ГоловнаяОрганизация = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Организация.ГоловнаяОрганизация
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.НалоговыйПериод = ГОД(&НачалоНП))
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.ОснованиеДляПредставленияСправок В (ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛЗаРеорганизованнуюОрганизацию), ЗНАЧЕНИЕ(Перечисление.ОснованияДляПредставленияСправок2НДФЛ.ОНевозможностиУдержанияНДФЛ)))
	|				И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Проведен)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник,
	|		СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.РегистрацияВНалоговомОргане) КАК МаксимальныеДатыСправок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкиНДФЛДляПередачиВНалоговыйОрган.Сотрудники КАК СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации
	|		ПО МаксимальныеДатыСправок.Сотрудник = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Сотрудник
	|			И МаксимальныеДатыСправок.Дата = СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Дата
	|			И (СправкаПоНДФЛВНалоговыйОрганСотрудникиОрганизации.Ссылка.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	МаксимальныеДатыСправок.Сотрудник,
	|	МаксимальныеДатыСправок.Дата,
	|	ПРЕДСТАВЛЕНИЕ(МаксимальныеДатыСправок.РегистрацияВНалоговомОргане)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПоследниеДатыСправок.Дата,
	|	МАКСИМУМ(СправкаПоНДФЛСотруднику.Номер),
	|	ПоследниеДатыСправок.ФизическоеЛицо,
	|	2,
	|	NULL
	|ИЗ
	|	(ВЫБРАТЬ
	|		СписокФизЛицОрганизация.ФизическоеЛицо КАК ФизическоеЛицо,
	|		МАКСИМУМ(СправкаПоНДФЛСотруднику.Дата) КАК Дата
	|	ИЗ
	|		ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкаНДФЛ КАК СправкаПоНДФЛСотруднику
	|			ПО СписокФизЛицОрганизация.ФизическоеЛицо = СправкаПоНДФЛСотруднику.Сотрудник
	|				И СписокФизЛицОрганизация.ГоловнаяОрганизация = СправкаПоНДФЛСотруднику.Организация.ГоловнаяОрганизация
	|				И (СправкаПоНДФЛСотруднику.НалоговыйПериод = ГОД(&НачалоНП))
	|				И (СправкаПоНДФЛСотруднику.Проведен)
	|	
	|	СГРУППИРОВАТЬ ПО
	|		СписокФизЛицОрганизация.ФизическоеЛицо) КАК ПоследниеДатыСправок
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СправкаНДФЛ КАК СправкаПоНДФЛСотруднику
	|		ПО ПоследниеДатыСправок.Дата = СправкаПоНДФЛСотруднику.Дата
	|			И ПоследниеДатыСправок.ФизическоеЛицо = СправкаПоНДФЛСотруднику.Сотрудник
	|			И (СправкаПоНДФЛСотруднику.Проведен)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоследниеДатыСправок.ФизическоеЛицо,
	|	ПоследниеДатыСправок.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ФизическоеЛицо,
	|	ТипСправки
	|ИТОГИ ПО
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтандартныеВычетыФизЛицОрганизации.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СтандартныеВычетыФизЛицОрганизации.Месяц КАК Месяц,
	|	ВЫБОР
	|		КОГДА СтандартныеВычетыФизЛицОрганизации.Месяц < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА СтандартныеВычетыФизЛицОрганизации.Месяц < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА СтандартныеВычетыФизЛицОрганизации.Месяц < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА СтандартныеВычетыФизЛицОрганизации.Месяц < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ ВидыВычетовНДФЛ.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ КАК КодВычета,
	|	СтандартныеВычетыФизЛицОрганизации.КоличествоДетей КАК КоличествоДетей,
	|	СтандартныеВычетыФизЛицОрганизации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ЕСТЬNULL(СтандартныеВычетыФизЛицОрганизации.КоличествоДетей, 1) * ЕСТЬNULL(НДФЛРазмерВычетовСрезПоследних.Размер, 0) КАК Размер,
	|	ВЫРАЗИТЬ(СтандартныеВычетыФизЛицОрганизации.Основание КАК СТРОКА(1000)) КАК Основание
	|ИЗ
	|	ВТСтандартныеВычетыФизЛицОрганизации КАК СтандартныеВычетыФизЛицОрганизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРазмерВычетовНДФЛСрезПоследних КАК НДФЛРазмерВычетовСрезПоследних
	|		ПО СтандартныеВычетыФизЛицОрганизации.КодВычета = НДФЛРазмерВычетовСрезПоследних.КодВычета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСписокФизЛицОрганизация КАК СписокФизЛицОрганизация
	|		ПО СтандартныеВычетыФизЛицОрганизации.ФизическоеЛицо = СписокФизЛицОрганизация.ФизическоеЛицо
	|			И СтандартныеВычетыФизЛицОрганизации.ГоловнаяОрганизация = СписокФизЛицОрганизация.ГоловнаяОрганизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыВычетовНДФЛ КАК ВидыВычетовНДФЛ
	|		ПО СтандартныеВычетыФизЛицОрганизации.КодВычета = ВидыВычетовНДФЛ.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	КодВычета,
	|	Месяц
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоциальныеИИмущественныеВычеты.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СоциальныеИИмущественныеВычеты.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ КАК КодВычетаКод,
	|	СоциальныеИИмущественныеВычеты.Размер КАК Размер,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.ДатаУведомления) КАК ДатаУведомления,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.НомерУведомления) КАК Номер,
	|	МАКСИМУМ(НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.КодНалоговогоОргана) КАК КодОрганаУведомление,
	|	МИНИМУМ(ВЫБОР
	|			КОГДА НАЧАЛОПЕРИОДА(СоциальныеИИмущественныеВычеты.Дата, МЕСЯЦ) = СтатусФизЛицНаКонецМесяца.Месяц
	|				ТОГДА СоциальныеИИмущественныеВычеты.Дата
	|			ИНАЧЕ СтатусФизЛицНаКонецМесяца.Месяц
	|		КОНЕЦ) КАК Дата
	|ИЗ
	|	ВТСтатусФизЛицНаКонецМесяца КАК СтатусФизЛицНаКонецМесяца
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСоциальныеИИмущественныеВычеты КАК СоциальныеИИмущественныеВычеты
	|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОПравеНаИмущественныйВычетДляНДФЛ КАК НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации
	|			ПО СоциальныеИИмущественныеВычеты.Регистратор = НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.Ссылка
	|				И СоциальныеИИмущественныеВычеты.ФизическоеЛицо = НДФЛПодтверждениеПраваНаИмущественныйВычетРаботникиОрганизации.Сотрудник
	|		ПО СтатусФизЛицНаКонецМесяца.ФизическоеЛицо = СоциальныеИИмущественныеВычеты.ФизическоеЛицо
	|			И (КОНЕЦПЕРИОДА(СтатусФизЛицНаКонецМесяца.Месяц, МЕСЯЦ) >= СоциальныеИИмущественныеВычеты.Дата)
	|ГДЕ
	|	СтатусФизЛицНаКонецМесяца.ЯвляетсяРезидентомРФ
	|
	|СГРУППИРОВАТЬ ПО
	|	СоциальныеИИмущественныеВычеты.ФизическоеЛицо,
	|	СоциальныеИИмущественныеВычеты.Размер,
	|	СоциальныеИИмущественныеВычеты.Дата,
	|	СоциальныеИИмущественныеВычеты.ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2011, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2010Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2015, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2011Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2016, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2015Года
	|		КОГДА СоциальныеИИмущественныеВычеты.Дата < ДАТАВРЕМЯ(2023, 1, 1, 0, 0, 0)
	|			ТОГДА СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2016Года
	|		ИНАЧЕ СоциальныеИИмущественныеВычеты.КодВычета.КодПрименяемыйВНалоговойОтчетностиС2023Года
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	КодВычетаКод,
	|	Дата
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Доходы.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Доходы.ФизическоеЛицо КАК ФизическоеЛицо,
	|	Доходы.Раздел КАК Раздел,
	|	Доходы.МесяцНалоговогоПериода КАК МесяцНалоговогоПериода,
	|	МАКСИМУМ(Доходы.СуммаДоходаДоРезидентства) КАК СуммаДоходаДоРезидентства,
	|	МАКСИМУМ(Доходы.СуммаВычетаДоРезидентства) КАК СуммаВычетаДоРезидентства,
	|	МАКСИМУМ(Доходы.ОблагаемаяСуммаДоходаДоРезидентства) КАК ОблагаемаяСуммаДоходаДоРезидентства,
	|	Доходы.ДатаНачисления КАК ДатаНачисления,
	|	Доходы.МесяцНачисления КАК МесяцНачисления,
	|	Доходы.ДатаВыплаты КАК ДатаВыплаты,
	|	Доходы.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|	Доходы.КодДоходаСсылка КАК КодДоходаСсылка,
	|	СУММА(Доходы.СуммаДохода) КАК СуммаДохода,
	|	Доходы.КодВычетаСсылка КАК КодВычетаСсылка,
	|	СУММА(Доходы.СуммаВычета) КАК СуммаВычета,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.ОблагаетсяУНалоговогоАгента
	|				ТОГДА Доходы.ОблагаемаяСуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК ОблагаемаяСуммаДохода,
	|	СУММА(Доходы.НалогНачислено) КАК НалогНачислено,
	|	Доходы.КодДохода КАК КодДохода,
	|	Доходы.КодВычета КАК КодВычета,
	|	Доходы.Ставка КАК Ставка,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
	|			ТОГДА Доходы.НалоговаяБаза
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаОбъединенияНалоговыхБаз
	|			ТОГДА &ОбъединеннаяНалоговаяБазаСтрокой
	|		ИНАЧЕ ОписаниеНалоговыхБаз.ПредставлениеНалоговойБазы
	|	КОНЕЦ КАК НалоговаяБаза,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
	|			ТОГДА ВЫБОР
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|						ТОГДА 1
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.РайонныеСеверныеНадбавки)
	|						ТОГДА 2
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ)
	|						ТОГДА 3
	|					ИНАЧЕ 4
	|				КОНЕЦ
	|		ИНАЧЕ ОписаниеНалоговыхБаз.ПорядокНалоговойБазы
	|	КОНЕЦ КАК ПорядокНалоговойБазы,
	|	Доходы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|				ТОГДА Доходы.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода13,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|				ТОГДА Доходы.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода15,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|				ТОГДА Доходы.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода18,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|				ТОГДА Доходы.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода20,
	|	СУММА(ВЫБОР
	|			КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|				ТОГДА Доходы.СуммаДохода
	|			ИНАЧЕ 0
	|		КОНЕЦ) КАК СуммаДохода22,
	|	СотрудникиСПревышением.ФизическоеЛицо ЕСТЬ НЕ NULL  КАК ЭтоФизическоеЛицоСПревышением,
	|	ВЫБОР
	|		КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА 13
	|		КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА 15
	|		КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|			ТОГДА 18
	|		КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|			ТОГДА 20
	|		КОГДА Доходы.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|			ТОГДА 22
	|		ИНАЧЕ 99
	|	КОНЕЦ КАК ПорядокСтавки
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДоходыПоМесяцам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|		ДоходыПоМесяцам.ФизическоеЛицо КАК ФизическоеЛицо,
	|		""Раздел4_Ставка13"" КАК Раздел,
	|		ДоходыПоМесяцам.Месяц КАК МесяцНалоговогоПериода,
	|		ЕСТЬNULL(ДоходыДоПолученияСтатусаРезидента.СуммаДохода, 0) КАК СуммаДоходаДоРезидентства,
	|		ЕСТЬNULL(ДоходыДоПолученияСтатусаРезидента.СуммаВычета, 0) КАК СуммаВычетаДоРезидентства,
	|		ЕСТЬNULL(ДоходыДоПолученияСтатусаРезидента.СуммаДохода, 0) - ЕСТЬNULL(ДоходыДоПолученияСтатусаРезидента.СуммаВычета, 0) КАК ОблагаемаяСуммаДоходаДоРезидентства,
	|		ДоходыПоМесяцам.ДатаНачисления КАК ДатаНачисления,
	|		ДоходыПоМесяцам.МесяцНачисления КАК МесяцНачисления,
	|		ДоходыПоМесяцам.ДатаВыплаты КАК ДатаВыплаты,
	|		ДоходыПоМесяцам.ДатаПолученияДохода КАК ДатаПолученияДохода,
	|		ДоходыПоМесяцам.ОблагаетсяУНалоговогоАгента КАК ОблагаетсяУНалоговогоАгента,
	|		ДоходыПоМесяцам.КодДохода КАК КодДоходаСсылка,
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) КАК СуммаДохода,
	|		ДоходыПоМесяцам.КодВычета КАК КодВычетаСсылка,
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0) КАК СуммаВычета,
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) - ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0) КАК ОблагаемаяСуммаДохода,
	|		0 КАК НалогНачислено,
	|		ДоходыПоМесяцам.КодДоходаКодДляОтчетности КАК КодДохода,
	|		ДоходыПоМесяцам.КодВычетаКодДляОтчетности КАК КодВычета,
	|		ДоходыПоМесяцам.Ставка КАК Ставка,
	|		ДоходыПоМесяцам.НалоговаяБаза КАК НалоговаяБаза,
	|		ДоходыПоМесяцам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|		ДоходыПоМесяцам.Год КАК Год
	|	ИЗ
	|		ВТДоходыПоСтавкам КАК ДоходыПоМесяцам
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыДоПолученияСтатусаРезидента КАК ДоходыДоПолученияСтатусаРезидента
	|			ПО ДоходыПоМесяцам.ГоловнаяОрганизация = ДоходыДоПолученияСтатусаРезидента.ГоловнаяОрганизация
	|				И ДоходыПоМесяцам.ФизическоеЛицо = ДоходыДоПолученияСтатусаРезидента.ФизическоеЛицо
	|				И ДоходыПоМесяцам.Год = ДоходыДоПолученияСтатусаРезидента.Год
	|				И ДоходыПоМесяцам.Месяц = ДоходыДоПолученияСтатусаРезидента.Месяц
	|				И ДоходыПоМесяцам.РегистрацияВНалоговомОргане = ДоходыДоПолученияСтатусаРезидента.РегистрацияВНалоговомОргане
	|				И ДоходыПоМесяцам.Ставка = ДоходыДоПолученияСтатусаРезидента.Ставка
	|				И ДоходыПоМесяцам.НалоговаяБаза = ДоходыДоПолученияСтатусаРезидента.НалоговаяБаза
	|	ГДЕ
	|		ДоходыПоМесяцам.ДоходРазделаПо13
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДоходыПоМесяцам.ГоловнаяОрганизация,
	|		ДоходыПоМесяцам.ФизическоеЛицо,
	|		ВЫБОР
	|			КОГДА ДоходыПоМесяцам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				ТОГДА ""Раздел4_Ставка13""
	|			КОГДА ДоходыПоМесяцам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|				ТОГДА ""Раздел4_Дивиденды""
	|			КОГДА ДоходыПоМесяцам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|				ТОГДА ""Раздел4_Ставка30""
	|			ИНАЧЕ ""Раздел4_Ставка35_15_9""
	|		КОНЕЦ,
	|		ДоходыПоМесяцам.Месяц,
	|		0,
	|		0,
	|		0,
	|		ДоходыПоМесяцам.ДатаНачисления,
	|		ДоходыПоМесяцам.МесяцНачисления,
	|		ДоходыПоМесяцам.ДатаВыплаты,
	|		ДоходыПоМесяцам.ДатаПолученияДохода,
	|		ДоходыПоМесяцам.ОблагаетсяУНалоговогоАгента,
	|		ДоходыПоМесяцам.КодДохода,
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0),
	|		ДоходыПоМесяцам.КодВычета,
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0),
	|		ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) - ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0),
	|		ВЫБОР
	|			КОГДА ДоходыПоМесяцам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|				ТОГДА 0
	|			КОГДА НЕ ДоходыПоМесяцам.ОблагаетсяУНалоговогоАгента
	|				ТОГДА 0
	|			ИНАЧЕ (ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) - ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0)) * ДоходыПоМесяцам.СтавкаЧислом
	|		КОНЕЦ,
	|		ДоходыПоМесяцам.КодДоходаКодДляОтчетности,
	|		ДоходыПоМесяцам.КодВычетаКодДляОтчетности,
	|		ДоходыПоМесяцам.Ставка,
	|		ДоходыПоМесяцам.НалоговаяБаза,
	|		ДоходыПоМесяцам.РегистрацияВНалоговомОргане,
	|		ДоходыПоМесяцам.Год
	|	ИЗ
	|		ВТДоходыПоСтавкам КАК ДоходыПоМесяцам
	|	ГДЕ
	|		НЕ ДоходыПоМесяцам.ДоходРазделаПо13
	|		И НЕ ДоходыПоМесяцам.ДатаПолученияДоходаФиксирована) КАК Доходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТОписаниеНалоговыхБаз КАК ОписаниеНалоговыхБаз
	|		ПО Доходы.НалоговаяБаза = ОписаниеНалоговыхБаз.КатегорияДохода
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСотрудникиСПревышением КАК СотрудникиСПревышением
	|		ПО Доходы.ФизическоеЛицо = СотрудникиСПревышением.ФизическоеЛицо
	|			И Доходы.НалоговаяБаза = СотрудникиСПревышением.НалоговаяБаза
	|			И Доходы.Год = СотрудникиСПревышением.Год
	|
	|СГРУППИРОВАТЬ ПО
	|	Доходы.ФизическоеЛицо,
	|	Доходы.ГоловнаяОрганизация,
	|	Доходы.Раздел,
	|	Доходы.МесяцНалоговогоПериода,
	|	Доходы.ДатаНачисления,
	|	Доходы.МесяцНачисления,
	|	Доходы.ДатаВыплаты,
	|	Доходы.ДатаПолученияДохода,
	|	Доходы.КодДоходаСсылка,
	|	Доходы.КодВычетаСсылка,
	|	Доходы.Ставка,
	|	Доходы.КодВычета,
	|	Доходы.РегистрацияВНалоговомОргане,
	|	Доходы.КодДохода,
	|	СотрудникиСПревышением.ФизическоеЛицо ЕСТЬ НЕ NULL ,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
	|			ТОГДА Доходы.НалоговаяБаза
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаОбъединенияНалоговыхБаз
	|			ТОГДА &ОбъединеннаяНалоговаяБазаСтрокой
	|		ИНАЧЕ ОписаниеНалоговыхБаз.ПредставлениеНалоговойБазы
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Доходы.ДатаПолученияДохода >= &ДатаЗакона176ФЗ
	|			ТОГДА ВЫБОР
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ОплатаТруда)
	|						ТОГДА 1
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.РайонныеСеверныеНадбавки)
	|						ТОГДА 2
	|					КОГДА Доходы.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.ПрочиеДоходыЦБ)
	|						ТОГДА 3
	|					ИНАЧЕ 4
	|				КОНЕЦ
	|		ИНАЧЕ ОписаниеНалоговыхБаз.ПорядокНалоговойБазы
	|	КОНЕЦ
	|
	|ИМЕЮЩИЕ
	|	(МАКСИМУМ(Доходы.СуммаДоходаДоРезидентства) <> 0
	|		ИЛИ МАКСИМУМ(Доходы.СуммаВычетаДоРезидентства) <> 0
	|		ИЛИ МАКСИМУМ(Доходы.ОблагаемаяСуммаДоходаДоРезидентства) <> 0
	|		ИЛИ СУММА(Доходы.СуммаДохода) <> 0
	|		ИЛИ СУММА(Доходы.СуммаВычета) <> 0
	|		ИЛИ СУММА(Доходы.ОблагаемаяСуммаДохода) <> 0
	|		ИЛИ СУММА(Доходы.НалогНачислено) <> 0)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДоходыПоМесяцам.ГоловнаяОрганизация,
	|	ДоходыПоМесяцам.ФизическоеЛицо,
	|	ВЫБОР
	|		КОГДА ДоходыПоМесяцам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30)
	|			ТОГДА ""Раздел4_Ставка30""
	|		КОГДА ДоходыПоМесяцам.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.КатегорииДоходовНДФЛ.Дивиденды)
	|			ТОГДА ""Раздел4_Дивиденды""
	|		ИНАЧЕ ""Раздел4_Ставка35_15_9""
	|	КОНЕЦ,
	|	ДоходыПоМесяцам.Месяц,
	|	0,
	|	0,
	|	0,
	|	ДоходыПоМесяцам.ДатаНачисления,
	|	ДоходыПоМесяцам.МесяцНачисления,
	|	ДоходыПоМесяцам.ДатаВыплаты,
	|	ДоходыПоМесяцам.ДатаПолученияДохода,
	|	ДоходыПоМесяцам.КодДохода,
	|	ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0),
	|	ДоходыПоМесяцам.КодВычета,
	|	ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0),
	|	ВЫБОР
	|		КОГДА ДоходыПоМесяцам.ОблагаетсяУНалоговогоАгента
	|			ТОГДА ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) - ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0)
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоходыПоМесяцам.ОблагаетсяУНалоговогоАгента
	|			ТОГДА (ЕСТЬNULL(ДоходыПоМесяцам.СуммаДохода, 0) - ЕСТЬNULL(ДоходыПоМесяцам.СуммаВычета, 0)) * ДоходыПоМесяцам.СтавкаЧислом
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ДоходыПоМесяцам.КодДоходаКодДляОтчетности,
	|	ДоходыПоМесяцам.КодВычетаКодДляОтчетности,
	|	ДоходыПоМесяцам.Ставка,
	|	"""",
	|	99,
	|	ДоходыПоМесяцам.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА ДоходыПоМесяцам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА ДоходыПоМесяцам.СуммаДохода
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ДоходыПоМесяцам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА ДоходыПоМесяцам.СуммаДохода
	|		ИНАЧЕ 0
	|	КОНЕЦ,
	|	0,
	|	0,
	|	0,
	|	ЛОЖЬ,
	|	99
	|ИЗ
	|	ВТДоходыПоСтавкам КАК ДоходыПоМесяцам
	|ГДЕ
	|	НЕ ДоходыПоМесяцам.ДоходРазделаПо13
	|	И ДоходыПоМесяцам.ДатаПолученияДоходаФиксирована
	|	И ДоходыПоМесяцам.СуммаДохода <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	Раздел,
	|	ПорядокНалоговойБазы,
	|	МесяцНалоговогоПериода,
	|	МесяцНачисления,
	|	ДатаНачисления,
	|	ДатаВыплаты,
	|	КодДохода,
	|	КодВычета,
	|	ПорядокСтавки
	|ИТОГИ
	|	МАКСИМУМ(СуммаДоходаДоРезидентства),
	|	МАКСИМУМ(СуммаВычетаДоРезидентства),
	|	МАКСИМУМ(ОблагаемаяСуммаДоходаДоРезидентства),
	|	СУММА(СуммаДохода),
	|	СУММА(СуммаВычета),
	|	СУММА(ОблагаемаяСуммаДохода),
	|	МАКСИМУМ(НалогНачислено),
	|	СУММА(СуммаДохода13),
	|	СУММА(СуммаДохода15),
	|	СУММА(СуммаДохода18),
	|	СУММА(СуммаДохода20),
	|	СУММА(СуммаДохода22),
	|	МАКСИМУМ(ЭтоФизическоеЛицоСПревышением)
	|ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	Раздел,
	|	НалоговаяБаза,
	|	МесяцНалоговогоПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВычетыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВычетыПоСтавкам.Месяц КАК Месяц,
	|	ВычетыПоСтавкам.МесяцПериодаПредоставленияВычета КАК МесяцПериодаПредоставленияВычета,
	|	ВычетыПоСтавкам.КодВычета КАК КодВычетаСсылка,
	|	СУММА(ВычетыПоСтавкам.СуммаВычета) КАК СуммаВычета,
	|	МАКСИМУМ(ЕСТЬNULL(ДоходыПоМесяцамПоСтавке13Итог.СуммаДохода, 0)) КАК СуммаДохода,
	|	ВычетыПоСтавкам.КодВычетаКодДляОтчетности КАК КодВычета,
	|	ВычетыПоСтавкам.НалоговаяБаза КАК НалоговаяБаза,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТВычетыПоСтавкам КАК ВычетыПоСтавкам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыПоМесяцамПоСтавке13Итог КАК ДоходыПоМесяцамПоСтавке13Итог
	|		ПО (ДоходыПоМесяцамПоСтавке13Итог.ГоловнаяОрганизация = ВычетыПоСтавкам.ГоловнаяОрганизация)
	|			И (ДоходыПоМесяцамПоСтавке13Итог.ФизическоеЛицо = ВычетыПоСтавкам.ФизическоеЛицо)
	|			И (ДоходыПоМесяцамПоСтавке13Итог.Месяц = ВычетыПоСтавкам.Месяц)
	|			И (ДоходыПоМесяцамПоСтавке13Итог.РегистрацияВНалоговомОргане = ВычетыПоСтавкам.РегистрацияВНалоговомОргане)
	|			И (ВычетыПоСтавкам.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13))
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыПоСтавкам.КодВычета,
	|	ВычетыПоСтавкам.КодВычетаКодДляОтчетности,
	|	ВычетыПоСтавкам.ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.ФизическоеЛицо,
	|	ВычетыПоСтавкам.НалоговаяБаза,
	|	ВычетыПоСтавкам.Месяц,
	|	ВычетыПоСтавкам.МесяцПериодаПредоставленияВычета,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза,
	|	Месяц,
	|	МесяцПериодаПредоставленияВычета,
	|	КодВычета
	|ИТОГИ
	|	СУММА(СуммаВычета),
	|	МАКСИМУМ(СуммаДохода)
	|ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза,
	|	Месяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц КАК Месяц,
	|	ДанныеОНалогах.Период КАК Дата,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ДанныеОНалогах.НалоговаяБаза КАК НалоговаяБаза,
	|	СУММА(ДанныеОНалогах.НалогНачислено) КАК НалогНачислено,
	|	СУММА(ДанныеОНалогах.НалогКЗачету) КАК НалогКЗачету,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.СтавкаПоИтогамГода КАК СтавкаПоИтогамГода,
	|	ВЫБОР
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА 13
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА 15
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|			ТОГДА 18
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|			ТОГДА 20
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|			ТОГДА 22
	|		ИНАЧЕ 99
	|	КОНЕЦ КАК ПорядокСтавки
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц,
	|	ДанныеОНалогах.Период,
	|	ДанныеОНалогах.Ставка,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	ДанныеОНалогах.ГоловнаяОрганизация,
	|	ДанныеОНалогах.СтавкаПоИтогамГода,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	СУММА(ДанныеОНалогах.НалогНачислено) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	Месяц,
	|	Дата,
	|	ПорядокСтавки,
	|	Ставка
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц КАК Месяц,
	|	ДанныеОНалогах.Период КАК Дата,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ВЫБОР
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка13)
	|			ТОГДА 13
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка15)
	|			ТОГДА 15
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка18)
	|			ТОГДА 18
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка20)
	|			ТОГДА 20
	|		КОГДА ДанныеОНалогах.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка22)
	|			ТОГДА 22
	|		ИНАЧЕ 99
	|	КОНЕЦ КАК ПорядокСтавки,
	|	ДанныеОНалогах.НалоговаяБаза КАК НалоговаяБаза,
	|	ВЫБОР
	|		КОГДА ДанныеОНалогах.Период < &ДатаНачалаРасчетаСроковУплатыНалога
	|			ТОГДА ДанныеОНалогах.Период
	|		ИНАЧЕ ДанныеОНалогах.СрокПеречисления
	|	КОНЕЦ КАК СрокПеречисления,
	|	СУММА(ДанныеОНалогах.НалогУдержано) КАК НалогУдержано,
	|	СУММА(ДанныеОНалогах.УдержаноКЗачетуПоСтавке13) КАК КЗачетуПоСтавке13,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|ГДЕ
	|	ДанныеОНалогах.НалогУдержано <> 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОНалогах.ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц,
	|	ДанныеОНалогах.Период,
	|	ДанныеОНалогах.Ставка,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА ДанныеОНалогах.Период < &ДатаНачалаРасчетаСроковУплатыНалога
	|			ТОГДА ДанныеОНалогах.Период
	|		ИНАЧЕ ДанныеОНалогах.СрокПеречисления
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	Месяц,
	|	Дата,
	|	ПорядокСтавки,
	|	Ставка,
	|	СрокПеречисления
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц КАК Месяц,
	|	ДанныеОНалогах.Период КАК Дата,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ДанныеОНалогах.НалоговаяБаза КАК НалоговаяБаза,
	|	ДанныеОНалогах.НалогВозвращено КАК НалогВозвращено,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|ГДЕ
	|	ДанныеОНалогах.НалогВозвращено <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	Месяц,
	|	Дата,
	|	Ставка
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеОНалогах.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ДанныеОНалогах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ДанныеОНалогах.Месяц КАК Месяц,
	|	ДанныеОНалогах.Период КАК Дата,
	|	ДанныеОНалогах.Ставка КАК Ставка,
	|	ДанныеОНалогах.НалоговаяБаза КАК НалоговаяБаза,
	|	ДанныеОНалогах.НалогПереданоНаВзыскание КАК НалогПереданоНаВзыскание,
	|	ДанныеОНалогах.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТДанныеОНалогах КАК ДанныеОНалогах
	|ГДЕ
	|	ДанныеОНалогах.НалогПереданоНаВзыскание <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	ДанныеОНалогах.НалоговаяБаза,
	|	Месяц,
	|	Дата,
	|	Ставка
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	НалоговаяБаза
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо КАК ФизическоеЛицо,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода КАК Месяц,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период КАК Дата,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка КАК Ставка,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Сумма КАК Сумма,
	|	ЕСТЬNULL(ПеречисленоДоПолученияСтатусаРезидента.КЗачетуПоСтавке13, 0) КАК КЗачетуПоСтавке13,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РеквизитыПП КАК РеквизитыПП,
	|	РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТРасчетыНалоговыхАгентовСБюджетомПоНДФЛ КАК РасчетыНалоговыхАгентовСБюджетомПоНДФЛ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПерваяСтрокаПеречисленногоНалогаЗаМесяц КАК ПерваяСтрокаПеречисленногоНалогаЗаМесяц
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКЗачетуПоПеречислениям КАК ПеречисленоДоПолученияСтатусаРезидента
	|			ПО ПерваяСтрокаПеречисленногоНалогаЗаМесяц.ГоловнаяОрганизация = ПеречисленоДоПолученияСтатусаРезидента.ГоловнаяОрганизация
	|				И ПерваяСтрокаПеречисленногоНалогаЗаМесяц.ФизическоеЛицо = ПеречисленоДоПолученияСтатусаРезидента.ФизическоеЛицо
	|				И ПерваяСтрокаПеречисленногоНалогаЗаМесяц.Месяц = ПеречисленоДоПолученияСтатусаРезидента.МесяцНалоговогоПериода
	|				И ПерваяСтрокаПеречисленногоНалогаЗаМесяц.РегистрацияВНалоговомОргане = ПеречисленоДоПолученияСтатусаРезидента.РегистрацияВНалоговомОргане
	|				И (ПерваяСтрокаПеречисленногоНалогаЗаМесяц.Ставка = ЗНАЧЕНИЕ(Перечисление.НДФЛСтавки.Ставка30))
	|		ПО РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ГоловнаяОрганизация = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.ГоловнаяОрганизация
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.ФизическоеЛицо = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.ФизическоеЛицо
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.МесяцНалоговогоПериода = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.Месяц
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Ставка = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.Ставка
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.РегистрацияВНалоговомОргане = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.РегистрацияВНалоговомОргане
	|			И РасчетыНалоговыхАгентовСБюджетомПоНДФЛ.Период = ПерваяСтрокаПеречисленногоНалогаЗаМесяц.Дата
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	Месяц,
	|	Дата,
	|	Ставка
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВычетыПоСтавкам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ВычетыПоСтавкам.КодВычетаКодДляОтчетности КАК КодВычета,
	|	СУММА(ВычетыПоСтавкам.СуммаВычета) КАК СуммаВычета,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ВТВычетыПоСтавкам КАК ВычетыПоСтавкам
	|
	|СГРУППИРОВАТЬ ПО
	|	ВычетыПоСтавкам.ГоловнаяОрганизация,
	|	ВычетыПоСтавкам.ФизическоеЛицо,
	|	ВычетыПоСтавкам.КодВычетаКодДляОтчетности,
	|	ВычетыПоСтавкам.РегистрацияВНалоговомОргане
	|
	|ИМЕЮЩИЕ
	|	СУММА(ВычетыПоСтавкам.СуммаВычета) <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо,
	|	РегистрацияВНалоговомОргане,
	|	КодВычета
	|ИТОГИ ПО
	|	ГоловнаяОрганизация,
	|	ФизическоеЛицо";
		
	Результат = Запрос.ВыполнитьПакет();
	КоличествоРезультатов = Результат.Количество();
	
	ТаблицаРегистрацийВНО = Результат[КоличествоРезультатов - 15].Выгрузить();
	ТаблицаРегистрацийВНО.Колонки.Добавить("ОКАТО_КПП", Новый ОписаниеТипов("Строка"));
	ТаблицаРегистрацийВНО.Колонки.Добавить("ОКТМО_КПП", Новый ОписаниеТипов("Строка"));
	ТаблицаРегистрацийВНО.Индексы.Добавить("РегистрацияВНалоговомОргане");
	Для каждого СтрокаТЗ Из ТаблицаРегистрацийВНО Цикл
		СтрокаТЗ.ОКАТО_КПП = УчетНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКАТО, СтрокаТЗ.КПП);
		СтрокаТЗ.ОКТМО_КПП = УчетНДФЛ.СуммаОКАТОиКПП(СтрокаТЗ.КодПоОКТМО, СтрокаТЗ.КПП);
	КонецЦикла;
	
	ВыборкаАвансыЗачтенныеИтоги		= Результат[КоличествоРезультатов - 16].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаВычетовПоСтавке13		= Результат[КоличествоРезультатов - 14].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаСтатусов					= Результат[КоличествоРезультатов - 13].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаУведомления				= Результат[КоличествоРезультатов - 12].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаСправкиНДФЛ				= Результат[КоличествоРезультатов - 11].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам); 
	ВыборкаСтандартныеВычеты		= Результат[КоличествоРезультатов - 10].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаСоциальныеВычеты			= Результат[КоличествоРезультатов - 9].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДоходовПоМесяцамПоРазделам = Результат[КоличествоРезультатов - 8].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаВычетыПоМесяцамПоВидам   = Результат[КоличествоРезультатов - 7].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНалогиНачисленныеИтоги   = Результат[КоличествоРезультатов - 6].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНалогиУдержанныеИтоги    = Результат[КоличествоРезультатов - 5].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНалогиВозвращенныеИтоги  = Результат[КоличествоРезультатов - 4].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНалогиВзысканиеИтоги     = Результат[КоличествоРезультатов - 3].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаНалогиПеречисленныеИтоги = Результат[КоличествоРезультатов - 2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаВычетыИтоги				= Результат[КоличествоРезультатов - 1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт

КонецПроцедуры

Процедура ПолучитьСпискиФизЛицИСотрудников(СтрокиДеревоДанных, СписокФизЛиц)
	
	Для Каждого СтрокаДанных Из СтрокиДеревоДанных Цикл
		Если СтрокаДанных.ФизическоеЛицо <> Неопределено  //СтрокаДанных.Организация <> Неопределено Тогда
			                                                                                       Тогда
			СтрокаСписка = СписокФизЛиц.Добавить();
			СтрокаСписка.ФизическоеЛицо     = СтрокаДанных.ФизическоеЛицо;
			СтрокаСписка.Организация = СтрокаДанных.Организация;
			СтрокаСписка.ГоловнаяОрганизация = СтрокаДанных.ГоловнаяОрганизация;
			СтрокаСписка.Год = Год(СтрокаДанных.Год);
			СтрокаСписка.НЕОтбиратьПоОП = (СтрокаДанных.ГоловнаяОрганизация = СтрокаДанных.Организация)
			
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Процедура ВывестиКарточки(ДокументРезультат, СтрокиДеревоДанных)
	СтатусРезидент = ОбщегоНазначения.ПредопределенныйЭлемент("Справочник.СтатусыНалогоплательщиковПоНДФЛ.Резидент");
	ВывестиРазделитель = Ложь;
	Для каждого СтрокаДерева Из СтрокиДеревоДанных Цикл
		Если ВывестиРазделитель Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		ВывестиРазделитель = Истина;
		СформироватьМакет(ДокументРезультат, СтрокаДерева.ФизическоеЛицо, СтрокаДерева.Год,  СтрокаДерева.ГоловнаяОрганизация, СтатусРезидент);
	КонецЦикла;
	
КонецПроцедуры

// Заполняет табличный документ
// в соответствии с настройками, заданными значениями реквизитов отчета.
//
// Параметры:
//	ДокументРезультат - табличный документ, формируемый отчетом.
//
Процедура СформироватьМакет(ДокументРезультат, ФизическоеЛицо, Год, ГоловнаяОрганизация, СтатусРезидент) Экспорт
	
	Если Год < УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале().НачалоРасчетаНДФЛПоПрогрессивнойШкале Тогда
		СформироватьМакетДо2021(ДокументРезультат, ФизическоеЛицо, Год, ГоловнаяОрганизация, СтатусРезидент);
		Возврат	
	КонецЕсли;
	
	ДатаЗакона176ФЗ = УчетНДФЛ.ДатаЗакона176ФЗ();
	Если Год < ДатаЗакона176ФЗ Тогда
		СформироватьМакетДо2025(ДокументРезультат, ФизическоеЛицо, Год, ГоловнаяОрганизация, СтатусРезидент);
		Возврат	
	КонецЕсли;
	
	Ответственный = Справочники.Пользователи.ПустаяСсылка();
	
	Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.РегистрНалоговогоУчетаПоНДФЛ.ПФ_MXL_ФормаРегистрНалоговогоУчетаПоНДФЛ_2025");
		
	// Области-разделы
    Раздел1 = Макет.ПолучитьОбласть("Раздел1");									    
	Раздел2 = Макет.ПолучитьОбласть("Раздел2");	
	Раздел3 = Макет.ПолучитьОбласть("Раздел3");
	РасчетыНалогаПоСтавке13Строка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Строка");
	РасчетыНалогаПоСтавке13МесяцГруппа = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13МесяцГруппа");
	РасчетыНалогаПоСтавке13БылоПоСтавке30 = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13БылоПоСтавке30");
	ПредоставленныеВычетыШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапка");
	ПредоставленныеВычетыЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыЗаголовок");
	ПредоставленныеВычетыШапкаМесяцГруппа = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапкаМесяцГруппа");
	ПредоставленныеВычетыСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыСтрока");
	ПредоставленныеВычетыИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтог");
	НалогПоСтавке30Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке30Заголовок");
	НалогПоСтавке30Шапка = Макет.ПолучитьОбласть("НалогПоСтавке30Шапка");
	НалогПоСтавке30Строка = Макет.ПолучитьОбласть("НалогПоСтавке30Строка");
	НалогПоСтавке30Итог = Макет.ПолучитьОбласть("НалогПоСтавке30Итог");
	НалогПоСтавке9Шапка = Макет.ПолучитьОбласть("НалогПоСтавке9Шапка");
	НалогПоСтавке9Строка = Макет.ПолучитьОбласть("НалогПоСтавке9Строка");
	НалогПоСтавке9Итог = Макет.ПолучитьОбласть("НалогПоСтавке9Итог");
	ИсчисленоЗаголовок = Макет.ПолучитьОбласть("ИсчисленоЗаголовок");
	ЗачтеноАвансовЗаголовок = Макет.ПолучитьОбласть("ЗачтеноАвансовЗаголовок");
	ЗачтеноАвансовШапка = Макет.ПолучитьОбласть("ЗачтеноАвансовШапка");
	ЗачтеноАвансовСтрока = Макет.ПолучитьОбласть("ЗачтеноАвансовСтрока");
	УдержаноЗаголовок = Макет.ПолучитьОбласть("УдержаноЗаголовок");
	УдержаноШапка = Макет.ПолучитьОбласть("УдержаноШапка");
	УдержаноСтрока = Макет.ПолучитьОбласть("УдержаноСтрока");
	УдержаноБылоПоСтавке30 = Макет.ПолучитьОбласть("УдержаноБылоПоСтавке30");
	ВозвращеноЗаголовок = Макет.ПолучитьОбласть("ВозвращеноЗаголовок");
	ВозвращеноШапка = Макет.ПолучитьОбласть("ВозвращеноШапка");
	ВозвращеноСтрока = Макет.ПолучитьОбласть("ВозвращеноСтрока");
	ПереданоНаВзысканиеЗаголовок = Макет.ПолучитьОбласть("ПереданоНаВзысканиеЗаголовок");
	ПереданоНаВзысканиеШапка = Макет.ПолучитьОбласть("ПереданоНаВзысканиеШапка");
	ПереданоНаВзысканиеСтрока = Макет.ПолучитьОбласть("ПереданоНаВзысканиеСтрока");
	ПредоставленныеВычетыИтогиЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиЗаголовок");
	ПредоставленныеВычетыИтогиИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиИтог");
	ОбщиеСуммыИтогЗаголовок = Макет.ПолучитьОбласть("ОбщиеСуммыИтогЗаголовок");
	СтандартныеВычетыЗаголовок = Макет.ПолучитьОбласть("СтандартныеВычетыЗаголовок");
	СтандартныеВычетыШапка = Макет.ПолучитьОбласть("СтандартныеВычетыШапка");
	СтандартныеВычетыСтрока = Макет.ПолучитьОбласть("СтандартныеВычетыСтрока");
	СоциальныеВычетыЗаголовок = Макет.ПолучитьОбласть("СоциальныеВычетыЗаголовок");
	СоциальныеВычетыШапка = Макет.ПолучитьОбласть("СоциальныеВычетыШапка");
	СоциальныеВычетыСтрока = Макет.ПолучитьОбласть("СоциальныеВычетыСтрока");
	Подписи = Макет.ПолучитьОбласть("Подписи");
	ОбластьПустыеВычеты = Макет.ПолучитьОбласть("ОбластьПустыеВычеты");
	
	Раздел4 = Макет.ПолучитьОбласть("Раздел4");
	ПредоставленныеВычетыИтогиШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиШапка");
	ПредоставленныеВычетыИтогиСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиСтрока");
	ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка");
	ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки");
	РасчетыНалогаПоСтавке13Заголовок = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Заголовок");
	НалогПоСтавке9Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке9Заголовок");
	НалогДивидендыЗаголовок = Макет.ПолучитьОбласть("НалогДивидендыЗаголовок");
	НалогДивидендыШапка = Макет.ПолучитьОбласть("НалогДивидендыШапка");
	НалогДивидендыСтрока = Макет.ПолучитьОбласть("НалогДивидендыСтрока");
	НалогДивидендыИтог = Макет.ПолучитьОбласть("НалогДивидендыИтог");
	
	// -----------------------------------------------------------------------------                                 
	// РАЗДЕЛ 1 и 2
	
	ТаблицаПоНалогамИтоги = Новый ТаблицаЗначений();	
	ТаблицаПоНалогамИтоги.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("Ставка", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("ОбщаяСуммаДохода", Новый ОписаниеТипов("Число"));
    ТаблицаПоНалогамИтоги.Колонки.Добавить("НалоговаяБаза", Новый ОписаниеТипов("Число"));

	НалоговыйПериод = Год(Год);
	
	СтруктураОтбора = Новый Структура("ФизическоеЛицо, Год, ГоловнаяОрганизация", ФизическоеЛицо, НалоговыйПериод, ГоловнаяОрганизация);
	
	ДанныеОФизЛицеОрганизации.Сбросить();
	
	Если ДанныеОФизЛицеОрганизации.НайтиСледующий(СтруктураОтбора) Тогда

		// Заполнение данных раздела 1.
		Раздел1.Параметры.ГодНП = "" + Формат(Год, "ЧГ=0; ДФ=yyyy");
		Раздел1.Параметры.ИНН = "" + ДанныеОФизЛицеОрганизации.Организация_ИНН +"\" + ДанныеОФизЛицеОрганизации.Организация_КПП;
		Раздел1.Параметры.КодНалоговогоОргана = ДанныеОФизЛицеОрганизации.Организация_КодНалоговогоОргана;
		Раздел1.Параметры.НазваниеОрганизации = ДанныеОФизЛицеОрганизации.Организация_Наименование;
		
		// Заполнение данных раздела 2.
		Раздел2.Параметры.ИНН = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ИНН;
		Раздел2.Параметры.ФИО = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ФИО;
		Раздел2.Параметры.ВидДокумента = ДанныеОФизЛицеОрганизации.ВидДокумента;
		Раздел2.Параметры.КодДокумента = ДанныеОФизЛицеОрганизации.КодДокументаУдЛичн;
		Раздел2.Параметры.СерияНомерДокумента = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_СерияНомерДокументаУдЛичн;
		Раздел2.Параметры.ДатаРождения = Формат(ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДатаРождения, "ДЛФ=D");
		Раздел2.Параметры.КодСтраны = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_КодСтраны;
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(Раздел1);
	
	ВыборкаСтатусов.Сбросить();
	
	СтатусНаКонецПериода = СтатусРезидент;
	Если ВыборкаСтатусов.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
		ВыборкаДетали = ВыборкаСтатусов.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если Год(ВыборкаДетали.Месяц) <> НалоговыйПериод Тогда
				Продолжить;
			КонецЕсли;
			Раздел2.Параметры["Статус" + Строка(Месяц(ВыборкаДетали.Месяц))] = ВыборкаДетали.Статус;	
			СтатусНаКонецПериода = ВыборкаДетали.Статус;
		КонецЦикла;	
	КонецЕсли;	
	
	ДокументРезультат.Вывести(Раздел2);
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	
	Раздел3.Параметры.Доход = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДоходыПредыдущегоМестаРаботы;
	ДокументРезультат.Вывести(Раздел3);
	
	ТаблицаСтандартныхВычетов = Новый ТаблицаЗначений();
	ТаблицаСтандартныхВычетов.Колонки.Добавить("КодВычета");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыРазмер");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодС");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодПо");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыОснование");
	
	ПредыдущийВычет = Неопределено;
	ПредыдущийПериод = '00010101';
	ПредыдущийРазмер = Неопределено;
	ПредыдущаяСтрока = Неопределено;
	СтрокаТаблицы = Неопределено;
		
	ВыводимыеОбласти = Новый Массив;
	ЕстьПравоНаВычеты = Ложь;
	
	ВыборкаСтандартныеВычеты.Сбросить();
	Если ВыборкаСтандартныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаСтандартныеВычетыПоФизЛицу = ВыборкаСтандартныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаСтандартныеВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаСтандартныеВычетыПоФизЛицу.Выбрать();
			Пока ВыборкаДетали.Следующий() Цикл
				Если Год(ВыборкаДетали.Месяц) <> НалоговыйПериод Тогда
					Продолжить;
				КонецЕсли;
				Если ВыборкаДетали.КодВычета = ПредыдущийВычет И (КонецМесяца(ПредыдущийПериод) + 1) = ВыборкаДетали.Месяц И ПредыдущийРазмер = ВыборкаДетали.Размер Тогда
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				Иначе
					Если ПредыдущаяСтрока <> Неопределено Тогда 
						ПредыдущаяСтрока.СтандартныеВычетыПериодПо = ДатаЗавершения;
					КонецЕсли;	
					СтрокаТаблицы = ТаблицаСтандартныхВычетов.Добавить();
					СтрокаТаблицы.КодВычета = ВыборкаДетали.КодВычета;
					СтрокаТаблицы.СтандартныеВычетыПериодС = ВыборкаДетали.Месяц; 
				    СтрокаТаблицы.СтандартныеВычетыРазмер = ВыборкаДетали.Размер;
					СтрокаТаблицы.СтандартныеВычетыОснование = ВыборкаДетали.Основание;
					
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				КонецЕсли;	
				
				ПредыдущаяСтрока = СтрокаТаблицы;
				
				ПредыдущийВычет  = ВыборкаДетали.КодВычета;
				ПредыдущийПериод = ВыборкаДетали.Месяц;
				ПредыдущийРазмер = ВыборкаДетали.Размер;
			КонецЦикла;	
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицы.СтандартныеВычетыПериодПо = ДатаЗавершения;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	Если ТаблицаСтандартныхВычетов.Количество() > 0 Тогда
		ВыводимыеОбласти.Добавить(СтандартныеВычетыЗаголовок);
		ВыводимыеОбласти.Добавить(СтандартныеВычетыШапка);
		ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда 
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		ДокументРезультат.Вывести(СтандартныеВычетыШапка);
		Для Каждого Вычет Из ТаблицаСтандартныхВычетов Цикл
			ВыводимыеОбласти.Очистить();
			СтандартныеВычетыСтрока.Параметры.КодВычета = Вычет.КодВычета;
			СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыРазмер = Вычет.СтандартныеВычетыРазмер;
			СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодС = Формат(Вычет.СтандартныеВычетыПериодС, "ДЛФ=D");
			СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодПо = Формат(Вычет.СтандартныеВычетыПериодПо, "ДЛФ=D");
			СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыОснование = Вычет.СтандартныеВычетыОснование;
			
			ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
	       		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(СтандартныеВычетыШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(СтандартныеВычетыСтрока);
		КонецЦикла;	
		ЕстьПравоНаВычеты = Истина;
	КонецЕсли;
	
	Если ВыборкаСоциальныеВычеты.Количество() > 0 Тогда
		ВыборкаСоциальныеВычеты.Сбросить();
		ВыводимыеОбласти.Очистить();
		Если ВыборкаСоциальныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
			ВыборкаПоФизЛицу = ВыборкаСоциальныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Если ВыборкаПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
				ВыборкаДетали = ВыборкаПоФизЛицу.Выбрать();
				
				ВыводимыеОбласти.Добавить(СоциальныеВычетыЗаголовок);
				ВыводимыеОбласти.Добавить(СоциальныеВычетыШапка);
				ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
	       			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;	
				
				ЗаголовокНеВыводился = Истина;
				Пока ВыборкаДетали.Следующий() Цикл
					Если Год(ВыборкаДетали.Дата) <> НалоговыйПериод Тогда
						Продолжить;
					КонецЕсли;
					ВыводимыеОбласти.Очистить();
					СоциальныеВычетыСтрока.Параметры.Заполнить(ВыборкаДетали);
					СоциальныеВычетыСтрока.Параметры.СоцВычетыКод = ВыборкаДетали.КодВычетаКод;
					СоциальныеВычетыСтрока.Параметры.СоцВычетыРазмер = ВыборкаДетали.Размер;
					СоциальныеВычетыСтрока.Параметры.СоцВычетыДата = Формат(ВыборкаДетали.Дата, "ДЛФ=D");
					Если ЗначениеЗаполнено(ВыборкаДетали.ДатаУведомления) Тогда
						СоциальныеВычетыСтрока.Параметры.ДатаУведомления = Формат(ВыборкаДетали.ДатаУведомления, "ДЛФ=D");
					КонецЕсли;
					
					ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
					
					Если ЗаголовокНеВыводился Тогда
						ДокументРезультат.Вывести(СоциальныеВычетыЗаголовок);
						ДокументРезультат.Вывести(СоциальныеВычетыШапка);
						ЗаголовокНеВыводился = Ложь;
					КонецЕсли;
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
						ДокументРезультат.Вывести(СоциальныеВычетыШапка);
					КонецЕсли;
					
					ДокументРезультат.Вывести(СоциальныеВычетыСтрока);
					ЕстьПравоНаВычеты = Истина;
				КонецЦикла;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;
	
	Если Не ЕстьПравоНаВычеты Тогда
		ДокументРезультат.Вывести(ОбластьПустыеВычеты);
	КонецЕсли;	
	
	ЕстьДанныеПоДоходам = Ложь;
	СоответствиеПараметровНалоговыхБаз = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкалеС2025Года().СоответствиеПараметровНалоговыхБаз;
	ВыборкаДоходовПоМесяцамПоРазделам.Сбросить();
	Если ВыборкаДоходовПоМесяцамПоРазделам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц  = ВыборкаДоходовПоМесяцамПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			
			ЕстьДанныеПоДоходам = Истина;
			ТаблицаПоНалогамИтоги.Очистить();

			ДанныеОНалогахНачисленныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахЗачтенныхПоРегистрации = Новый Соответствие;
			ДанныеОбАвансахЗачтенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахУдержанныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахВозвращенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации = Новый Соответствие;
			
			ВыборкаРегистраций = ВыборкаФизЛиц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРегистраций.Следующий() Цикл
				
				ДанныеОНалогахНачисленныхПоСтавкам = Новый Соответствие;
				ДанныеОНалогахЗачтенныхПоСтавкам = Новый Соответствие;
				ДанныеОбАвансахЗачтенныхПоСтавкам = Новый Соответствие;
				ДанныеОНалогахУдержанныхПоСтавкам = Новый Соответствие;
				ДанныеОНалогахВозвращенныхПоСтавкам = Новый Соответствие;
				ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам = Новый Соответствие;
				
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаРегистраций.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					Раздел4.Параметры.Заполнить(СтрокаРегистрации);
				КонецЕсли;
				
				ВыводимыеОбласти.Очистить();
				
				ВыводимыеОбласти.Добавить(Раздел4);
				ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);				
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				ДокументРезультат.Вывести(Раздел4);
				
				ВыборкаПоРазделам = ВыборкаРегистраций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				СуммаДоходаДоРезидентстваНарастающийИтог = 0;
				ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = 0;
				
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка13", "Раздел") Тогда
					
					ИсчисленоШапка = Макет.ПолучитьОбласть("ИсчисленоШапкаБезДивидендов");
					ИсчисленоСтрока = Макет.ПолучитьОбласть("ИсчисленоСтрокаБезДивидендов");
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ВычетыПоСтавке13 = Новый Соответствие;
						ВыборкаВычетовПоСтавке13.Сбросить();
						Если ВыборкаВычетовПоСтавке13.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаВычетовПоСтавке13ПоФизЛицам = ВыборкаВычетовПоСтавке13.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетовПоСтавке13ПоФизЛицам.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаВычетовПоСтавке13Регистрация = ВыборкаВычетовПоСтавке13ПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаВычетовПоСтавке13Регистрация.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаВычетовПоСтавке13НалоговаяБаза = ВыборкаВычетовПоСтавке13Регистрация.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаВычетовПоСтавке13НалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										ВыборкаДетали = ВыборкаВычетовПоСтавке13НалоговаяБаза.Выбрать();
										СуммаВычетаИтог = 0;
										Пока ВыборкаДетали.Следующий() Цикл 
											Если Год(ВыборкаДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											СуммаВычетаИтог = ВыборкаДетали.СуммаВычета + СуммаВычетаИтог;
											ВычетыПоСтавке13.Вставить(ВыборкаДетали.Месяц, СуммаВычетаИтог);		
										КонецЦикла;	
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;	
						КонецЕсли;	
						
						Если ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением Тогда
							РасчетыНалогаПоСтавке13Шапка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13сПревШапка");
							РасчетыНалогаПоСтавке13Итог = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13сПревышИтогМесяц");
							РасчетыНалогаПоСтавке13Заголовок.Параметры.ОписаниеСтавки = ?(ВыборкаПоНалоговымБазам.НалоговаяБаза = Перечисления.КатегорииДоходовНДФЛ.ОплатаТруда, НСтр("ru = '13% + 15-22% с превышения предела';
																																														|en = '13% + 15-22% с превышения предела'"), НСтр("ru = '13% + 15% с превышения предела';
																																																										|en = '13% + 15% from limit excess'"));
						Иначе
							РасчетыНалогаПоСтавке13Шапка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Шапка");
							РасчетыНалогаПоСтавке13Итог = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13ИтогМесяц");
							РасчетыНалогаПоСтавке13Заголовок.Параметры.ОписаниеСтавки = "13%"	
						КонецЕсли;
						РасчетыНалогаПоСтавке13Заголовок.Параметры.НалоговаяБаза = ВыборкаПоНалоговымБазам.НалоговаяБаза;
						ПределыНалоговойБазы = СоответствиеПараметровНалоговыхБаз[ВыборкаПоНалоговымБазам.НалоговаяБаза];
						Предел1 = ПределыНалоговойБазы.Предел1;
						Предел2 = ПределыНалоговойБазы.Предел2;
						Предел3 = ПределыНалоговойБазы.Предел3;
						Предел4 = ПределыНалоговойБазы.Предел4;
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаНарастающийИтог = 0;
						СуммаВычетовНарастающийИтог = 0;
						ОблагаемаяСуммаДоходаНарастающийИтог = 0;
						СуммаВычетовСНачалаПериода = 0;
						СтавкаНалога = 0.13;
						
						ЗаголовокНеВыводился = Истина;
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							Если Год(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) <> НалоговыйПериод Тогда
								Продолжить;
							КонецЕсли;
							
							НалоговаяБаза = 0;
							НалоговаяБаза13 = 0;
							НалоговаяБаза15 = 0;
							НалоговаяБаза18 = 0;
							НалоговаяБаза20 = 0;
							НалоговаяБаза22 = 0;
							
							ВыводимыеОбласти.Очистить();
							Если ЗаголовокНеВыводился Тогда
								ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);
								ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Шапка);
							КонецЕсли;
							ОбластьНалогПоСтавке13Группа = Новый ТабличныйДокумент;
							Если ЗначениеЗаполнено(ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства) Тогда
								ЗаполнитьЗначенияСвойств(РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры,ВыборкаПоМесяцамНалоговогоПериода);
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалоговаяБазаДоРезидентства = НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалогНачисленоДоРезидентства = Окр((НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства) * СтавкаНалога);
								ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13БылоПоСтавке30);
								СуммаДоходаДоРезидентстваНарастающийИтог = СуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства;
							КонецЕсли;
							
							СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДохода;
							СуммаВычетовНарастающийИтог = СуммаВычетовНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаВычета;
							ОблагаемаяСуммаДоходаНарастающийИтог = ОблагаемаяСуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДохода;
							ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
							СуммаВычетовСНачалаПериода = ?(ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) = Неопределено, СуммаВычетовСНачалаПериода, ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода));
							
							РасчетыНалогаПоСтавке13МесяцГруппа.Параметры.Месяц = Формат(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода, "ДФ=ММММ");
							ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13МесяцГруппа);
							ВыводимыеОбласти.Добавить(ОбластьНалогПоСтавке13Группа);
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								РасчетыНалогаПоСтавке13Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								РасчетыНалогаПоСтавке13Строка.Параметры.Ставка = ?(ВыборкаПоДатамПолученияДохода.ЭтоФизическоеЛицоСПревышением, " по " + ВыборкаПоДатамПолученияДохода.Ставка,"");
								РасчетыНалогаПоСтавке13Строка.Параметры.СуммаДохода = Формат(ВыборкаПоДатамПолученияДохода.СуммаДохода, "ЧДЦ=2");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								
								ОбластьДоходыПоСтавке13 = Новый ТабличныйДокумент;
								ОбластьДоходыПоСтавке13.Вывести(РасчетыНалогаПоСтавке13Строка);
								
								ВыводимыеОбласти.Добавить(ОбластьДоходыПоСтавке13);		
								
							КонецЦикла;	
							
							НалоговаяБаза = ОблагаемаяСуммаДоходаНарастающийИтог - СуммаВычетовСНачалаПериода + ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог;
							
							РасчетыНалогаПоСтавке13Итог.Параметры.Заполнить(ВыборкаПоМесяцамНалоговогоПериода);
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетовНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза = НалоговаяБаза;
							Если ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением Тогда
								НалоговаяБаза13 = Мин(НалоговаяБаза, Предел1);
								Если Предел2 > Предел1 Тогда
									НалоговаяБаза15 = Мин(НалоговаяБаза, Предел2) - НалоговаяБаза13;
									НалоговаяБаза18 = Мин(НалоговаяБаза, Предел3) - НалоговаяБаза13 - НалоговаяБаза15;
									НалоговаяБаза20 = Мин(НалоговаяБаза, Предел4) - НалоговаяБаза13 - НалоговаяБаза15 - НалоговаяБаза18;
									НалоговаяБаза22 = НалоговаяБаза - НалоговаяБаза13 - НалоговаяБаза15 - НалоговаяБаза18 - НалоговаяБаза20;
								Иначе 	
									НалоговаяБаза15 = НалоговаяБаза - НалоговаяБаза13;
								КонецЕсли;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза13 = НалоговаяБаза13;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено13 = Окр(НалоговаяБаза13 * 0.13);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза15 = НалоговаяБаза15;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено15 = Окр(НалоговаяБаза15 * 0.15);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза18 = НалоговаяБаза18;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено18 = Окр(НалоговаяБаза18 * 0.18);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза20 = НалоговаяБаза20;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено20 = Окр(НалоговаяБаза20 * 0.20);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза22 = НалоговаяБаза22;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено22 = Окр(НалоговаяБаза22 * 0.22);
							Иначе 	
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено = Окр(НалоговаяБаза * 0.13);
							КонецЕсли;
							
							ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Итог);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								Если Не ЗаголовокНеВыводился Тогда
									ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Шапка);
								КонецЕсли;
							КонецЕсли;
							
							Для Каждого Область Из ВыводимыеОбласти Цикл
								ДокументРезультат.Вывести(Область);
							КонецЦикла;
							
							ЗаголовокНеВыводился = Ложь;
							
						КонецЦикла;
					
						ВыводимыеОбласти.Очистить();
						ВыборкаВычетыПоМесяцамПоВидам.Сбросить();
						Если ВыборкаВычетыПоМесяцамПоВидам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаВычетыПоФизЛицу = ВыборкаВычетыПоМесяцамПоВидам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаВычетыПоРегистрации = ВыборкаВычетыПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаВычетыПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда 
									ВыборкаВычетыПоНалоговаяБаза = ВыборкаВычетыПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаВычетыПоНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда 
										
										ВыборкаВычетыПоМесяцам = ВыборкаВычетыПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводилиЗаголовок = Ложь;
										
										ДоходИтог = 0;
										СуммаВычетаНарастающийИтог = 0;
										Пока ВыборкаВычетыПоМесяцам.Следующий() Цикл
											Если Год(ВыборкаВычетыПоМесяцам.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											ВыводимыеОбласти.Очистить();
											
											Если Не ВыводилиЗаголовок Тогда
												ВыводимыеОбласти.Добавить(ПредоставленныеВычетыЗаголовок);
												ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапка);
											КонецЕсли;
											
											ДоходИтог = ДоходИтог + ВыборкаВычетыПоМесяцам.СуммаДохода;
											
											ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Месяц = Формат(ВыборкаВычетыПоМесяцам.Месяц, "ДФ=ММММ");	
											ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Доход = Формат(ДоходИтог, "ЧДЦ=2");
											
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапкаМесяцГруппа);
											
											ВыборкаВычетыДетали = ВыборкаВычетыПоМесяцам.Выбрать();
											
											Пока ВыборкаВычетыДетали.Следующий() Цикл
												
												СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог + ВыборкаВычетыДетали.СуммаВычета;
												ПредоставленныеВычетыСтрока.Параметры.Заполнить(ВыборкаВычетыДетали);
												
												ОбластьПредоставленныеВычеты = Новый ТабличныйДокумент;
												ОбластьПредоставленныеВычеты.Вывести(ПредоставленныеВычетыСтрока);
												ВыводимыеОбласти.Добавить(ОбластьПредоставленныеВычеты);	
												
											КонецЦикла;	
											
											ПредоставленныеВычетыИтог.Параметры.СуммаВычета = ВыборкаВычетыПоМесяцам.СуммаВычета;
											ПредоставленныеВычетыИтог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог;
											
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтог);
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												Если ВыводилиЗаголовок Тогда
													ДокументРезультат.Вывести(ПредоставленныеВычетыШапка);
												КонецЕсли;
											КонецЕсли;
											
											Для Каждого Область Из ВыводимыеОбласти Цикл
												ДокументРезультат.Вывести(Область);
											КонецЦикла;
											
											ВыводилиЗаголовок = Истина;
											
										КонецЦикла;	
										
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;		
						КонецЕсли;	
						
						ВыводимыеОбласти.Очистить();
						ВыборкаНалогиНачисленныеИтоги.Сбросить();
						Если ВыборкаНалогиНачисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаНалогиНачисленныеИтогиПоФизЛицу = ВыборкаНалогиНачисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Если ВыборкаНалогиНачисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаНалогиНачисленныеИтогиПоРегистрации = ВыборкаНалогиНачисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиНачисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза = ВыборкаНалогиНачисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										ВыборкаНалогиНачисленныеДетали = ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводимыеОбласти.Добавить(ИсчисленоЗаголовок);
										ВыводимыеОбласти.Добавить(ИсчисленоШапка);
										ВыводимыеОбласти.Добавить(ИсчисленоСтрока);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										КонецЕсли;
										
										ДокументРезультат.Вывести(ИсчисленоЗаголовок);
										ДокументРезультат.Вывести(ИсчисленоШапка);
										Пока ВыборкаНалогиНачисленныеДетали.Следующий() Цикл
											Если Год(ВыборкаНалогиНачисленныеДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											
											ИсчисленоСтрока.Параметры.Месяц = Формат(ВыборкаНалогиНачисленныеДетали.Месяц, "ДЛФ=D");
											ИсчисленоСтрока.Параметры.Дата = Формат(ВыборкаНалогиНачисленныеДетали.Дата, "ДЛФ=D");
											ИсчисленоСтрока.Параметры.Ставка = ВыборкаНалогиНачисленныеДетали.Ставка;
											ИсчисленоСтрока.Параметры.Сумма = ВыборкаНалогиНачисленныеДетали.НалогНачислено;
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ИсчисленоСтрока) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(ИсчисленоШапка);
											КонецЕсли;
											
											ДокументРезультат.Вывести(ИсчисленоСтрока);
											
											Если ВыборкаНалогиНачисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаНалогиНачисленныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
												СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
											Иначе
												СтавкаИтогов = ВыборкаНалогиНачисленныеДетали.Ставка
											КонецЕсли;
											Если ДанныеОНалогахНачисленныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
												ДанныеОНалогахНачисленныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогНачислено);
											Иначе
												ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогНачислено;
											КонецЕсли;	
										КонецЦикла;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;	
						
						ВыводимыеОбласти.Очистить();
						ВыборкаАвансыЗачтенныеИтоги.Сбросить();
						Если ВыборкаАвансыЗачтенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаАвансыЗачтенныеИтогиПоФизЛицу = ВыборкаАвансыЗачтенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Если ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаАвансыЗачтенныеИтогиПоРегистрации = ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаАвансыЗачтенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаАвансыЗачтенныеНалоговаяБаза = ВыборкаАвансыЗачтенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаАвансыЗачтенныеНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										ВыборкаАвансыЗачтенныеДетали = ВыборкаАвансыЗачтенныеНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводимыеОбласти.Добавить(ЗачтеноАвансовЗаголовок);
										ВыводимыеОбласти.Добавить(ЗачтеноАвансовШапка);
										ВыводимыеОбласти.Добавить(ЗачтеноАвансовСтрока);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										КонецЕсли;
										
										ДокументРезультат.Вывести(ЗачтеноАвансовЗаголовок);
										ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
										Пока ВыборкаАвансыЗачтенныеДетали.Следующий() Цикл
											Если Год(ВыборкаАвансыЗачтенныеДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											
											ЗачтеноАвансовСтрока.Параметры.Месяц = Формат(ВыборкаАвансыЗачтенныеДетали.Месяц, "ДФ=ММММ");
											ЗачтеноАвансовСтрока.Параметры.Дата = Формат(ВыборкаАвансыЗачтенныеДетали.Дата, "ДЛФ=D");
											ЗачтеноАвансовСтрока.Параметры.Ставка = ВыборкаАвансыЗачтенныеДетали.Ставка;
											ЗачтеноАвансовСтрока.Параметры.Сумма = ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ЗачтеноАвансовСтрока) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
											КонецЕсли;
											
											ДокументРезультат.Вывести(ЗачтеноАвансовСтрока);
											
											Если ВыборкаАвансыЗачтенныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаАвансыЗачтенныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
												СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
											Иначе
												СтавкаИтогов = ВыборкаАвансыЗачтенныеДетали.Ставка
											КонецЕсли;
											Если ДанныеОбАвансахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
												ДанныеОбАвансахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов);
											Иначе
												ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
											КонецЕсли;	
										КонецЦикла;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;	
						
						ВыводимыеОбласти.Очистить();
						ВыборкаНалогиУдержанныеИтоги.Сбросить();
						Если ВыборкаНалогиУдержанныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаНалогиУдержанныеИтогиПоФизЛицу = ВыборкаНалогиУдержанныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Если ВыборкаНалогиУдержанныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаНалогиУдержанныеИтогиПоРегистрации = ВыборкаНалогиУдержанныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиУдержанныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза = ВыборкаНалогиУдержанныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										
										ВыборкаНалогиУдержанныеДетали = ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводимыеОбласти.Добавить(УдержаноЗаголовок);
										ВыводимыеОбласти.Добавить(УдержаноШапка);
										ВыводимыеОбласти.Добавить(УдержаноСтрока);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										КонецЕсли;
										
										ДокументРезультат.Вывести(УдержаноЗаголовок);
										ДокументРезультат.Вывести(УдержаноШапка);
										КЗачетуПоСтавке13 = 0;
										Пока ВыборкаНалогиУдержанныеДетали.Следующий() Цикл
											Если Год(ВыборкаНалогиУдержанныеДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											
											Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка13 И ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
												УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
												Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
													ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
													ДокументРезультат.Вывести(УдержаноШапка);
												КонецЕсли;
												ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
												КЗачетуПоСтавке13 = 0;
											КонецЕсли;
											
											УдержаноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиУдержанныеДетали.Месяц, "ДЛФ=D");
											УдержаноСтрока.Параметры.Дата = Формат(ВыборкаНалогиУдержанныеДетали.Дата, "ДЛФ=D");
											УдержаноСтрока.Параметры.Ставка = ВыборкаНалогиУдержанныеДетали.Ставка;
											УдержаноСтрока.Параметры.Сумма = ВыборкаНалогиУдержанныеДетали.НалогУдержано;
											УдержаноСтрока.Параметры.СрокПеречисления = ВыборкаНалогиУдержанныеДетали.СрокПеречисления;
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(УдержаноШапка);
											КонецЕсли;
											
											ДокументРезультат.Вывести(УдержаноСтрока);
											
											Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(ВыборкаНалогиУдержанныеДетали.Ставка) = Неопределено Тогда
												ДанныеОНалогахУдержанныхПоСтавкам.Вставить(ВыборкаНалогиУдержанныеДетали.Ставка, ВыборкаНалогиУдержанныеДетали.НалогУдержано);
											Иначе
												ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] = ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] + ВыборкаНалогиУдержанныеДетали.НалогУдержано;
											КонецЕсли;	
											
											Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ЗначениеЗаполнено(ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13) Тогда
												КЗачетуПоСтавке13 = КЗачетуПоСтавке13 + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
												Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка30) <> Неопределено Тогда
													ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] - ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
												КонецЕсли;
												Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка13) = Неопределено Тогда
													ДанныеОНалогахУдержанныхПоСтавкам.Вставить(Перечисления.НДФЛСтавки.Ставка13, ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13);
												Иначе
													ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
												КонецЕсли;	
											КонецЕсли;
										КонецЦикла;
										
										Если ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
											УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(УдержаноШапка);
											КонецЕсли;
											ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
										КонецЕсли;
										
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;		
					
						ВыводимыеОбласти.Очистить();
						ВыборкаНалогиВозвращенныеИтоги.Сбросить();
						Если ВыборкаНалогиВозвращенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаНалогиВозвращенныеИтогиПоФизЛицу = ВыборкаНалогиВозвращенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Если ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаНалогиВозвращенныеИтогиПоРегистрации = ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиВозвращенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаНалогиВозвращенныеИтогиНалоговаяБаза = ВыборкаНалогиВозвращенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаНалогиВозвращенныеИтогиНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										
										ВыборкаНалогиВозвращенныеДетали = ВыборкаНалогиВозвращенныеИтогиНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводимыеОбласти.Добавить(ВозвращеноЗаголовок);
										ВыводимыеОбласти.Добавить(УдержаноШапка);
										ВыводимыеОбласти.Добавить(ВозвращеноСтрока);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										КонецЕсли;
										
										ДокументРезультат.Вывести(ВозвращеноЗаголовок);
										ДокументРезультат.Вывести(ВозвращеноШапка);
										Пока ВыборкаНалогиВозвращенныеДетали.Следующий() Цикл
											Если Год(ВыборкаНалогиВозвращенныеДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											ВозвращеноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВозвращенныеДетали.Месяц, "ДФ=ММММ");
											ВозвращеноСтрока.Параметры.Дата = Формат(ВыборкаНалогиВозвращенныеДетали.Дата, "ДЛФ=D");
											ВозвращеноСтрока.Параметры.Ставка = ВыборкаНалогиВозвращенныеДетали.Ставка;
											ВозвращеноСтрока.Параметры.Сумма = ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВозвращеноСтрока) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(ВозвращеноШапка);
											КонецЕсли;
											
											ДокументРезультат.Вывести(ВозвращеноСтрока);
											
											Если ДанныеОНалогахВозвращенныхПоСтавкам.Получить(ВыборкаНалогиВозвращенныеДетали.Ставка) = Неопределено Тогда
												ДанныеОНалогахВозвращенныхПоСтавкам.Вставить(ВыборкаНалогиВозвращенныеДетали.Ставка, ВыборкаНалогиВозвращенныеДетали.НалогВозвращено);
											Иначе
												ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] = ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] + ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
											КонецЕсли;	
											
										КонецЦикла;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
				
						ВыводимыеОбласти.Очистить();
						ВыборкаНалогиВзысканиеИтоги.Сбросить();
						Если ВыборкаНалогиВзысканиеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
							ВыборкаНалогиВзысканиеИтогиПоФизЛицу = ВыборкаНалогиВзысканиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							Если ВыборкаНалогиВзысканиеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
								ВыборкаНалогиВзысканиеИтогиПоРегистрации = ВыборкаНалогиВзысканиеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиВзысканиеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
									ВыборкаНалогиВзысканиеИтогиНалоговаяБаза = ВыборкаНалогиВзысканиеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Если ВыборкаНалогиВзысканиеИтогиНалоговаяБаза.НайтиСледующий(ВыборкаПоНалоговымБазам.НалоговаяБаза, "НалоговаяБаза") Тогда
										
										ВыборкаНалогиВзысканиеДетали = ВыборкаНалогиВзысканиеИтогиНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
										
										ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеЗаголовок);
										ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеШапка);
										ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеСтрока);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										КонецЕсли;
										
										ДокументРезультат.Вывести(ПереданоНаВзысканиеЗаголовок);
										ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
										Пока ВыборкаНалогиВзысканиеДетали.Следующий() Цикл
											Если Год(ВыборкаНалогиВзысканиеДетали.Месяц) <> НалоговыйПериод Тогда
												Продолжить;
											КонецЕсли;
											ПереданоНаВзысканиеСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВзысканиеДетали.Месяц, "ДФ=ММММ");
											ПереданоНаВзысканиеСтрока.Параметры.Дата = Формат(ВыборкаНалогиВзысканиеДетали.Дата, "ДЛФ=D");
											ПереданоНаВзысканиеСтрока.Параметры.Ставка = ВыборкаНалогиВзысканиеДетали.Ставка;
											ПереданоНаВзысканиеСтрока.Параметры.Сумма = ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
											
											Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПереданоНаВзысканиеСтрока) Тогда
												ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
												ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
											КонецЕсли;
											
											ДокументРезультат.Вывести(ПереданоНаВзысканиеСтрока);
											
											Если ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Получить(ВыборкаНалогиВзысканиеДетали.Ставка) = Неопределено Тогда
												ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Вставить(ВыборкаНалогиВзысканиеДетали.Ставка, ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание);
											Иначе
												ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] = ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] + ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
											КонецЕсли;
										КонецЦикла;
									КонецЕсли;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
						
						СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
						СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
						СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка13;
						СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода13 + СуммаДоходаДоРезидентстваНарастающийИтог;
						СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза;
						Если ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением Тогда
							СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза13;
							Если ВыборкаПоНалоговымБазам.СуммаДохода15 *ВыборкаПоНалоговымБазам.СуммаДохода15 + НалоговаяБаза15 * НалоговаяБаза15 > 0 Тогда
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка15;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода15;
								СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза15;
							КонецЕсли;  
							Если ВыборкаПоНалоговымБазам.СуммаДохода18 *ВыборкаПоНалоговымБазам.СуммаДохода18 + НалоговаяБаза18 * НалоговаяБаза18 > 0 Тогда
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка18;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода18;
								СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза18;
							КонецЕсли;  
							Если ВыборкаПоНалоговымБазам.СуммаДохода20 *ВыборкаПоНалоговымБазам.СуммаДохода20 + НалоговаяБаза20 * НалоговаяБаза20 > 0 Тогда
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка20;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода20;
								СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза20;
							КонецЕсли;  
							Если ВыборкаПоНалоговымБазам.СуммаДохода22 *ВыборкаПоНалоговымБазам.СуммаДохода22 + НалоговаяБаза22 * НалоговаяБаза22 > 0 Тогда
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка22;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода22;
								СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза22;
							КонецЕсли;  
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Дивиденды", "Раздел") Тогда
									
					ИсчисленоШапка = Макет.ПолучитьОбласть("ИсчисленоШапка");
					ИсчисленоСтрока = Макет.ПолучитьОбласть("ИсчисленоСтрока");
					ВыводимыеОбласти.Добавить(НалогДивидендыЗаголовок);
					ВыводимыеОбласти.Добавить(НалогДивидендыШапка);
					ВыводимыеОбласти.Добавить(НалогДивидендыСтрока);
					ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогДивидендыЗаголовок);
						ДокументРезультат.Вывести(НалогДивидендыШапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							Если Год(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) <> НалоговыйПериод Тогда
								Продолжить;
							КонецЕсли;
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								
								НалогДивидендыСтрока.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогДивидендыСтрока.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогДивидендыСтрока.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогДивидендыСтрока.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Очистить();
								ВыводимыеОбласти.Добавить(НалогДивидендыСтрока);
								ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогДивидендыШапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогДивидендыСтрока);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоДатамПолученияДохода.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаПоДатамПолученияДохода.Ставка;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СтрокаТаблицыИтогов.НалоговаяБаза = ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								
							КонецЦикла;	
						КонецЦикла;
						НалогДивидендыИтог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогДивидендыИтог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогДивидендыИтог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогДивидендыИтог) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогДивидендыИтог);
					КонецЦикла;
				
					ВыводимыеОбласти.Очистить();
					ВыборкаНалогиНачисленныеИтоги.Сбросить();
					Если ВыборкаНалогиНачисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаНалогиНачисленныеИтогиПоФизЛицу = ВыборкаНалогиНачисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаНалогиНачисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаНалогиНачисленныеИтогиПоРегистрации = ВыборкаНалогиНачисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиНачисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
								ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза = ВыборкаНалогиНачисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, "НалоговаяБаза") Тогда
									ВыборкаНалогиНачисленныеДетали = ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									
									ВыводимыеОбласти.Добавить(ИсчисленоЗаголовок);
									ВыводимыеОбласти.Добавить(ИсчисленоШапка);
									ВыводимыеОбласти.Добавить(ИсчисленоСтрока);
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									КонецЕсли;
									
									ДокументРезультат.Вывести(ИсчисленоЗаголовок);
									ДокументРезультат.Вывести(ИсчисленоШапка);
									Пока ВыборкаНалогиНачисленныеДетали.Следующий() Цикл
										Если Год(ВыборкаНалогиНачисленныеДетали.Месяц) <> НалоговыйПериод Тогда
											Продолжить;
										КонецЕсли;
										
										ИсчисленоСтрока.Параметры.Месяц = Формат(ВыборкаНалогиНачисленныеДетали.Месяц, "ДЛФ=D");
										ИсчисленоСтрока.Параметры.Дата = Формат(ВыборкаНалогиНачисленныеДетали.Дата, "ДЛФ=D");
										ИсчисленоСтрока.Параметры.Ставка = ВыборкаНалогиНачисленныеДетали.Ставка;
										ИсчисленоСтрока.Параметры.Сумма = ВыборкаНалогиНачисленныеДетали.НалогНачислено;
										ИсчисленоСтрока.Параметры.НалогКЗачету = ВыборкаНалогиНачисленныеДетали.НалогКЗачету;
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ИсчисленоСтрока) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											ДокументРезультат.Вывести(ИсчисленоШапка);
										КонецЕсли;
										
										ДокументРезультат.Вывести(ИсчисленоСтрока);
										
										СтавкаИтогов = ВыборкаНалогиНачисленныеДетали.Ставка;
										Если ДанныеОНалогахНачисленныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
											ДанныеОНалогахНачисленныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогНачислено);
										Иначе
											ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогНачислено;
										КонецЕсли;	
										Если ДанныеОНалогахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
											ДанныеОНалогахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогКЗачету);
										Иначе
											ДанныеОНалогахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогКЗачету;
										КонецЕсли;	
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;	
					
					ВыводимыеОбласти.Очистить();
					ВыборкаНалогиУдержанныеИтоги.Сбросить();
					Если ВыборкаНалогиУдержанныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаНалогиУдержанныеИтогиПоФизЛицу = ВыборкаНалогиУдержанныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаНалогиУдержанныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаНалогиУдержанныеИтогиПоРегистрации = ВыборкаНалогиУдержанныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиУдержанныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза = ВыборкаНалогиУдержанныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, "НалоговаяБаза") Тогда
								
								ВыборкаНалогиУдержанныеДетали = ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(УдержаноЗаголовок);
								ВыводимыеОбласти.Добавить(УдержаноШапка);
								ВыводимыеОбласти.Добавить(УдержаноСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ДокументРезультат.Вывести(УдержаноЗаголовок);
								ДокументРезультат.Вывести(УдержаноШапка);
								Пока ВыборкаНалогиУдержанныеДетали.Следующий() Цикл
									Если Год(ВыборкаНалогиУдержанныеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									
									УдержаноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиУдержанныеДетали.Месяц, "ДЛФ=D");
									УдержаноСтрока.Параметры.Дата = Формат(ВыборкаНалогиУдержанныеДетали.Дата, "ДЛФ=D");
									УдержаноСтрока.Параметры.Ставка = ВыборкаНалогиУдержанныеДетали.Ставка;
									УдержаноСтрока.Параметры.Сумма = ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									УдержаноСтрока.Параметры.СрокПеречисления = ВыборкаНалогиУдержанныеДетали.СрокПеречисления;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(УдержаноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(УдержаноСтрока);
									
									Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(ВыборкаНалогиУдержанныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахУдержанныхПоСтавкам.Вставить(ВыборкаНалогиУдержанныеДетали.Ставка, ВыборкаНалогиУдержанныеДетали.НалогУдержано);
									Иначе
										ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] = ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] + ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									КонецЕсли;	
									
								КонецЦикла;
								
							КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;		
					
					ВыводимыеОбласти.Очистить();
					ВыборкаНалогиВозвращенныеИтоги.Сбросить();
					Если ВыборкаНалогиВозвращенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаНалогиВозвращенныеИтогиПоФизЛицу = ВыборкаНалогиВозвращенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаНалогиВозвращенныеИтогиПоРегистрации = ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиВозвращенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
								ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза = ВыборкаНалогиВозвращенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, "НалоговаяБаза") Тогда
									
									ВыборкаНалогиВозвращенныеДетали = ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									
									ВыводимыеОбласти.Добавить(ВозвращеноЗаголовок);
									ВыводимыеОбласти.Добавить(УдержаноШапка);
									ВыводимыеОбласти.Добавить(ВозвращеноСтрока);
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									КонецЕсли;
									
									ДокументРезультат.Вывести(ВозвращеноЗаголовок);
									ДокументРезультат.Вывести(ВозвращеноШапка);
									Пока ВыборкаНалогиВозвращенныеДетали.Следующий() Цикл
										Если Год(ВыборкаНалогиВозвращенныеДетали.Месяц) <> НалоговыйПериод Тогда
											Продолжить;
										КонецЕсли;
										ВозвращеноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВозвращенныеДетали.Месяц, "ДФ=ММММ");
										ВозвращеноСтрока.Параметры.Дата = Формат(ВыборкаНалогиВозвращенныеДетали.Дата, "ДЛФ=D");
										ВозвращеноСтрока.Параметры.Ставка = ВыборкаНалогиВозвращенныеДетали.Ставка;
										ВозвращеноСтрока.Параметры.Сумма = ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВозвращеноСтрока) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											ДокументРезультат.Вывести(ВозвращеноШапка);
										КонецЕсли;
										
										ДокументРезультат.Вывести(ВозвращеноСтрока);
										
										Если ДанныеОНалогахВозвращенныхПоСтавкам.Получить(ВыборкаНалогиВозвращенныеДетали.Ставка) = Неопределено Тогда
											ДанныеОНалогахВозвращенныхПоСтавкам.Вставить(ВыборкаНалогиВозвращенныеДетали.Ставка, ВыборкаНалогиВозвращенныеДетали.НалогВозвращено);
										Иначе
											ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] = ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] + ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
										КонецЕсли;	
										
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
					ВыводимыеОбласти.Очистить();
					ВыборкаНалогиВзысканиеИтоги.Сбросить();
					Если ВыборкаНалогиВзысканиеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаНалогиВзысканиеИтогиПоФизЛицу = ВыборкаНалогиВзысканиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаНалогиВзысканиеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаНалогиВзысканиеИтогиПоРегистрации = ВыборкаНалогиВзысканиеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиВзысканиеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
								ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза = ВыборкаНалогиВзысканиеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Если ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.Дивиденды, "НалоговаяБаза") Тогда
									
									ВыборкаНалогиВзысканиеДетали = ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									
									ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеЗаголовок);
									ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеШапка);
									ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеСтрока);
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									КонецЕсли;
									
									ДокументРезультат.Вывести(ПереданоНаВзысканиеЗаголовок);
									ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
									Пока ВыборкаНалогиВзысканиеДетали.Следующий() Цикл
										Если Год(ВыборкаНалогиВзысканиеДетали.Месяц) <> НалоговыйПериод Тогда
											Продолжить;
										КонецЕсли;
										ПереданоНаВзысканиеСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВзысканиеДетали.Месяц, "ДФ=ММММ");
										ПереданоНаВзысканиеСтрока.Параметры.Дата = Формат(ВыборкаНалогиВзысканиеДетали.Дата, "ДЛФ=D");
										ПереданоНаВзысканиеСтрока.Параметры.Ставка = ВыборкаНалогиВзысканиеДетали.Ставка;
										ПереданоНаВзысканиеСтрока.Параметры.Сумма = ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПереданоНаВзысканиеСтрока) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
										КонецЕсли;
										
										ДокументРезультат.Вывести(ПереданоНаВзысканиеСтрока);
										
										Если ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Получить(ВыборкаНалогиВзысканиеДетали.Ставка) = Неопределено Тогда
											ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Вставить(ВыборкаНалогиВзысканиеДетали.Ставка, ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание);
										Иначе
											ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] = ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] + ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
										КонецЕсли;
									КонецЦикла;
								КонецЕсли;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
					
				КонецЕсли;	
				
				ИсчисленоШапка = Макет.ПолучитьОбласть("ИсчисленоШапкаБезДивидендов");
				ИсчисленоСтрока = Макет.ПолучитьОбласть("ИсчисленоСтрокаБезДивидендов");
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка30", "Раздел") Тогда
					
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогПоСтавке30Заголовок);
						ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							Если Год(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) <> НалоговыйПериод Тогда
								Продолжить;
							КонецЕсли;
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								
								НалогПоСтавке30Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке30Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								НалогПоСтавке30Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке30Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
								ВыводимыеОбласти.Добавить(НалогПоСтавке30Итог);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке30Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке30Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке30Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						ВыводимыеОбласти.Очистить();
						ВыводимыеОбласти.Добавить(НалогПоСтавке30Итог);
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке30Итог);
						
						Если СуммаДоходаИтог > СуммаДоходаДоРезидентстваНарастающийИтог Тогда
							СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
							СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
							СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка30;
							СтрокаТаблицыИтогов.ОбщаяСуммаДохода = СуммаДоходаИтог - СуммаДоходаДоРезидентстваНарастающийИтог;
							СтрокаТаблицыИтогов.НалоговаяБаза = ОблагаемаяСуммаДоходаИтог - Мин(ОблагаемаяСуммаДоходаИтог,ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка35_15_9", "Раздел") Тогда
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогПоСтавке9Заголовок);
						ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							Если Год(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) <> НалоговыйПериод Тогда
								Продолжить;
							КонецЕсли;
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								НалогПоСтавке9Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке9Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке9Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке9Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
								ВыводимыеОбласти.Добавить(НалогПоСтавке9Итог);
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке9Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоДатамПолученияДохода.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаПоДатамПолученияДохода.Ставка;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СтрокаТаблицыИтогов.НалоговаяБаза = ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке9Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке9Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПоСтавке9Итог) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке9Итог);
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыводимыеОбласти.Очистить();
				ВыборкаНалогиНачисленныеИтоги.Сбросить();
				Если ВыборкаНалогиНачисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиНачисленныеИтогиПоФизЛицу = ВыборкаНалогиНачисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиНачисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиНачисленныеИтогиПоРегистрации = ВыборкаНалогиНачисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиНачисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза = ВыборкаНалогиНачисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.ПустаяСсылка(), "НалоговаяБаза") Тогда
								ВыборкаНалогиНачисленныеДетали = ВыборкаНалогиНачисленныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(ИсчисленоЗаголовок);
								ВыводимыеОбласти.Добавить(ИсчисленоШапка);
								ВыводимыеОбласти.Добавить(ИсчисленоСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ЗаголовокНеВыводился = Истина;
								Пока ВыборкаНалогиНачисленныеДетали.Следующий() Цикл
									Если Год(ВыборкаНалогиНачисленныеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									
									ИсчисленоСтрока.Параметры.Месяц = Формат(ВыборкаНалогиНачисленныеДетали.Месяц, "ДЛФ=D");
									ИсчисленоСтрока.Параметры.Дата = Формат(ВыборкаНалогиНачисленныеДетали.Дата, "ДЛФ=D");
									ИсчисленоСтрока.Параметры.Ставка = ВыборкаНалогиНачисленныеДетали.Ставка;
									ИсчисленоСтрока.Параметры.Сумма = ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									
									Если ЗаголовокНеВыводился Тогда
										ДокументРезультат.Вывести(ИсчисленоЗаголовок);
										ДокументРезультат.Вывести(ИсчисленоШапка);
										ЗаголовокНеВыводился = Ложь;
									КонецЕсли;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ИсчисленоСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ИсчисленоШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ИсчисленоСтрока);
									
									Если ВыборкаНалогиНачисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаНалогиНачисленныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
										СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
									Иначе
										СтавкаИтогов = ВыборкаНалогиНачисленныеДетали.Ставка
									КонецЕсли;
									Если ДанныеОНалогахНачисленныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОНалогахНачисленныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогНачислено);
									Иначе
										ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									КонецЕсли;	
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОНалогахНачисленныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахНачисленныхПоСтавкам); 
				ДанныеОНалогахЗачтенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахЗачтенныхПоСтавкам); 
				
				ВыводимыеОбласти.Очистить();
				ВыборкаАвансыЗачтенныеИтоги.Сбросить();
				Если ВыборкаАвансыЗачтенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаАвансыЗачтенныеИтогиПоФизЛицу = ВыборкаАвансыЗачтенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Если ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаАвансыЗачтенныеИтогиПоРегистрации = ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаАвансыЗачтенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаАвансыЗачтенныеНалоговаяБаза = ВыборкаАвансыЗачтенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаАвансыЗачтенныеНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.ПустаяСсылка(), "НалоговаяБаза") Тогда
								ВыборкаАвансыЗачтенныеДетали = ВыборкаАвансыЗачтенныеНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(ЗачтеноАвансовЗаголовок);
								ВыводимыеОбласти.Добавить(ЗачтеноАвансовШапка);
								ВыводимыеОбласти.Добавить(ЗачтеноАвансовСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ЗаголовокНеВыводился = Истина;
								Пока ВыборкаАвансыЗачтенныеДетали.Следующий() Цикл
									Если Год(ВыборкаАвансыЗачтенныеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									
									ЗачтеноАвансовСтрока.Параметры.Месяц = Формат(ВыборкаАвансыЗачтенныеДетали.Месяц, "ДФ=ММММ");
									ЗачтеноАвансовСтрока.Параметры.Дата = Формат(ВыборкаАвансыЗачтенныеДетали.Дата, "ДЛФ=D");
									ЗачтеноАвансовСтрока.Параметры.Ставка = ВыборкаАвансыЗачтенныеДетали.Ставка;
									ЗачтеноАвансовСтрока.Параметры.Сумма = ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									
									Если ЗаголовокНеВыводился Тогда
										ДокументРезультат.Вывести(ЗачтеноАвансовЗаголовок);
										ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
										ЗаголовокНеВыводился = Ложь;
									КонецЕсли;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ЗачтеноАвансовСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ЗачтеноАвансовСтрока);
									
									СтавкаИтогов = ВыборкаАвансыЗачтенныеДетали.Ставка;
									Если ДанныеОбАвансахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОбАвансахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов);
									Иначе
										ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									КонецЕсли;	
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОбАвансахЗачтенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОбАвансахЗачтенныхПоСтавкам); 
				
				ВыводимыеОбласти.Очистить();
				ВыборкаНалогиУдержанныеИтоги.Сбросить();
				Если ВыборкаНалогиУдержанныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиУдержанныеИтогиПоФизЛицу = ВыборкаНалогиУдержанныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиУдержанныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиУдержанныеИтогиПоРегистрации = ВыборкаНалогиУдержанныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиУдержанныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза = ВыборкаНалогиУдержанныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.ПустаяСсылка(), "НалоговаяБаза") Тогда
								
								ВыборкаНалогиУдержанныеДетали = ВыборкаНалогиУдержанныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(УдержаноЗаголовок);
								ВыводимыеОбласти.Добавить(УдержаноШапка);
								ВыводимыеОбласти.Добавить(УдержаноСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ЗаголовокНеВыводился = Истина;
								Пока ВыборкаНалогиУдержанныеДетали.Следующий() Цикл
									Если Год(ВыборкаНалогиУдержанныеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									
									УдержаноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиУдержанныеДетали.Месяц, "ДЛФ=D");
									УдержаноСтрока.Параметры.Дата = Формат(ВыборкаНалогиУдержанныеДетали.Дата, "ДЛФ=D");
									УдержаноСтрока.Параметры.Ставка = ВыборкаНалогиУдержанныеДетали.Ставка;
									УдержаноСтрока.Параметры.Сумма = ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									УдержаноСтрока.Параметры.СрокПеречисления = ВыборкаНалогиУдержанныеДетали.СрокПеречисления;
									
									Если ЗаголовокНеВыводился Тогда
										ДокументРезультат.Вывести(УдержаноЗаголовок);
										ДокументРезультат.Вывести(УдержаноШапка);
										ЗаголовокНеВыводился = Ложь;
									КонецЕсли;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(УдержаноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(УдержаноСтрока);
									
									Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(ВыборкаНалогиУдержанныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахУдержанныхПоСтавкам.Вставить(ВыборкаНалогиУдержанныеДетали.Ставка, ВыборкаНалогиУдержанныеДетали.НалогУдержано);
									Иначе
										ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] = ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] + ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									КонецЕсли;	
									
								КонецЦикла;
								
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;		
				
				ДанныеОНалогахУдержанныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахУдержанныхПоСтавкам);
				
				ВыводимыеОбласти.Очистить();
				ВыборкаНалогиВозвращенныеИтоги.Сбросить();
				Если ВыборкаНалогиВозвращенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВозвращенныеИтогиПоФизЛицу = ВыборкаНалогиВозвращенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВозвращенныеИтогиПоРегистрации = ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВозвращенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза = ВыборкаНалогиВозвращенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.ПустаяСсылка(), "НалоговаяБаза") Тогда
								
								ВыборкаНалогиВозвращенныеДетали = ВыборкаНалогиВозвращенныеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(ВозвращеноЗаголовок);
								ВыводимыеОбласти.Добавить(УдержаноШапка);
								ВыводимыеОбласти.Добавить(ВозвращеноСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ЗаголовокНеВыводился = Истина;
								Пока ВыборкаНалогиВозвращенныеДетали.Следующий() Цикл
									Если Год(ВыборкаНалогиВозвращенныеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									ВозвращеноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВозвращенныеДетали.Месяц, "ДФ=ММММ");
									ВозвращеноСтрока.Параметры.Дата = Формат(ВыборкаНалогиВозвращенныеДетали.Дата, "ДЛФ=D");
									ВозвращеноСтрока.Параметры.Ставка = ВыборкаНалогиВозвращенныеДетали.Ставка;
									ВозвращеноСтрока.Параметры.Сумма = ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									
									Если ЗаголовокНеВыводился Тогда
										ДокументРезультат.Вывести(ВозвращеноЗаголовок);
										ДокументРезультат.Вывести(ВозвращеноШапка);
										ЗаголовокНеВыводился = Ложь;
									КонецЕсли;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВозвращеноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ВозвращеноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ВозвращеноСтрока);
									
									Если ДанныеОНалогахВозвращенныхПоСтавкам.Получить(ВыборкаНалогиВозвращенныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахВозвращенныхПоСтавкам.Вставить(ВыборкаНалогиВозвращенныеДетали.Ставка, ВыборкаНалогиВозвращенныеДетали.НалогВозвращено);
									Иначе
										ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] = ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] + ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									КонецЕсли;	
									
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахВозвращенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахВозвращенныхПоСтавкам);
				
				ВыводимыеОбласти.Очистить();
				ВыборкаНалогиВзысканиеИтоги.Сбросить();
				Если ВыборкаНалогиВзысканиеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВзысканиеИтогиПоФизЛицу = ВыборкаНалогиВзысканиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВзысканиеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВзысканиеИтогиПоРегистрации = ВыборкаНалогиВзысканиеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВзысканиеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза = ВыборкаНалогиВзысканиеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза.НайтиСледующий(Перечисления.КатегорииДоходовНДФЛ.ПустаяСсылка(), "НалоговаяБаза") Тогда
								
								ВыборкаНалогиВзысканиеДетали = ВыборкаНалогиВзысканиеИтогиПоНалоговаяБаза.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								
								ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеЗаголовок);
								ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеШапка);
								ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеСтрока);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								КонецЕсли;
								
								ЗаголовокНеВыводился = Истина;
								Пока ВыборкаНалогиВзысканиеДетали.Следующий() Цикл
									Если Год(ВыборкаНалогиВзысканиеДетали.Месяц) <> НалоговыйПериод Тогда
										Продолжить;
									КонецЕсли;
									ПереданоНаВзысканиеСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВзысканиеДетали.Месяц, "ДФ=ММММ");
									ПереданоНаВзысканиеСтрока.Параметры.Дата = Формат(ВыборкаНалогиВзысканиеДетали.Дата, "ДЛФ=D");
									ПереданоНаВзысканиеСтрока.Параметры.Ставка = ВыборкаНалогиВзысканиеДетали.Ставка;
									ПереданоНаВзысканиеСтрока.Параметры.Сумма = ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									
									Если ЗаголовокНеВыводился Тогда
										ДокументРезультат.Вывести(ПереданоНаВзысканиеЗаголовок);
										ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
										ЗаголовокНеВыводился = Ложь;
									КонецЕсли;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПереданоНаВзысканиеСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ПереданоНаВзысканиеСтрока);
									
									Если ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Получить(ВыборкаНалогиВзысканиеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Вставить(ВыборкаНалогиВзысканиеДетали.Ставка, ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание);
									Иначе
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] = ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] + ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									КонецЕсли;
								КонецЦикла;
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам);
				
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьДанныеПоДоходам Тогда
		ВыводимыеОбласти.Очистить();
		ВыводимыеОбласти.Добавить(Раздел4);
		
		Если СтатусНаКонецПериода = СтатусРезидент Тогда
			ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);
		Иначе
			ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
		КонецЕсли;	
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Для Каждого Область Из ВыводимыеОбласти Цикл
			ДокументРезультат.Вывести(Область);
		КонецЦикла;	
	КонецЕсли;	

	ВыборкаВычетыИтоги.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиЗаголовок);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиШапка);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиСтрока);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;

	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиЗаголовок);
	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
	
	Если ВыборкаВычетыИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц = ВыборкаВычетыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаФизЛиц.Выбрать();
			СуммаВычетаИтог = 0; 
			Пока ВыборкаДетали.Следующий() Цикл
				
				ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(ВыборкаДетали);	
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаДетали.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(СтрокаРегистрации);	
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиСтрока) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
				КонецЕсли;
				
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
				СуммаВычетаИтог = СуммаВычетаИтог + ВыборкаДетали.СуммаВычета;
			КонецЦикла;
			ПредоставленныеВычетыИтогиИтог.Параметры.СуммаВычета = СуммаВычетаИтог;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиИтог) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиИтог);
		Иначе
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
		КонецЕсли;
	Иначе 
		ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);	
	КонецЕсли;	
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогЗаголовок);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогШапка);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыСтроки);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбщиеСуммыИтогЗаголовок);
	ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
	
	ТаблицаПоНалогамИтоги.Свернуть("РегистрацияВНалоговомОргане, Ставка", "ОбщаяСуммаДохода, НалоговаяБаза");
	ТаблицаПоНалогамИтоги.Сортировать("РегистрацияВНалоговомОргане, Ставка");
	
	Для Каждого НалогиИтоги Из ТаблицаПоНалогамИтоги Цикл
		
		НалогиИсчисленныеПоРегистрации = ДанныеОНалогахНачисленныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиИсчисленныеПоРегистрации = Неопределено Тогда
			СуммаНалогаИсчисленная = 0;
		Иначе
			НалогиИсчисленныеПоСтавкам = НалогиИсчисленныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаИсчисленная = ?(НалогиИсчисленныеПоСтавкам = Неопределено, 0, НалогиИсчисленныеПоСтавкам);
		КонецЕсли;	
		
		НалогиЗачтенныеПоРегистрации = ДанныеОНалогахЗачтенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиЗачтенныеПоРегистрации = Неопределено Тогда
			СуммаНалогаЗачтенная = 0;
		Иначе
			НалогиЗачтенныеПоСтавкам = НалогиЗачтенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаЗачтенная = ?(НалогиЗачтенныеПоСтавкам = Неопределено, 0, НалогиЗачтенныеПоСтавкам);
		КонецЕсли;	
		
		АвансыЗачтенныеПоРегистрации = ДанныеОбАвансахЗачтенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если АвансыЗачтенныеПоРегистрации = Неопределено Тогда
			СуммаАвансовыхПлатежейЗачтенная = 0;
		Иначе
			АвансыЗачтенныеПоСтавкам = АвансыЗачтенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаАвансовыхПлатежейЗачтенная = ?(АвансыЗачтенныеПоСтавкам = Неопределено, 0, АвансыЗачтенныеПоСтавкам);
		КонецЕсли;	
		
		НалогиУдержанныеПоРегистрации = ДанныеОНалогахУдержанныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиУдержанныеПоРегистрации = Неопределено Тогда
			СуммаНалогаУдержанная = 0;
		Иначе
			НалогиУдержанныеПоСтавкам = НалогиУдержанныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаУдержанная = ?(НалогиУдержанныеПоСтавкам = Неопределено, 0, НалогиУдержанныеПоСтавкам);
		КонецЕсли;
		
		НалогиВозвращенныеПоРегистрации = ДанныеОНалогахВозвращенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВозвращенныеПоРегистрации = Неопределено Тогда
			СуммаНалогаВозвращенная = 0;
		Иначе
			НалогиВозвращенныеПоСтавкам = НалогиВозвращенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВозвращенная = ?(НалогиВозвращенныеПоСтавкам = Неопределено, 0, НалогиВозвращенныеПоСтавкам);
		КонецЕсли;
		
		СуммаНалогаУдержанная = СуммаНалогаУдержанная - СуммаНалогаВозвращенная;
		
		НалогиВзысканиеПоРегистрации = ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВзысканиеПоРегистрации = Неопределено Тогда
			СуммаНалогаВзыскание = 0;
		Иначе
			НалогиВзысканиеПоСтавкам = НалогиВзысканиеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВзыскание = ?(НалогиВзысканиеПоСтавкам = Неопределено, 0, НалогиВзысканиеПоСтавкам);
		КонецЕсли;
		
		Если НалогиИтоги.ОбщаяСуммаДохода = 0 И НалогиИтоги.НалоговаяБаза = 0 И СуммаНалогаИсчисленная = 0 И СуммаНалогаУдержанная = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(НалогиИтоги.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
		Если СтрокаРегистрации <> Неопределено Тогда
			ОбщиеСуммыСтроки.Параметры.Заполнить(СтрокаРегистрации);
		КонецЕсли;

		ОбщиеСуммыСтроки.Параметры.Заполнить(НалогиИтоги);
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаИсчисленная = СуммаНалогаИсчисленная;
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаУдержанная = СуммаНалогаУдержанная;
		ОбщиеСуммыСтроки.Параметры.СуммаАвансовыхПлатежейЗачтенная = СуммаАвансовыхПлатежейЗачтенная + СуммаНалогаЗачтенная;
		СальдоПоНалогам = СуммаНалогаИсчисленная - СуммаАвансовыхПлатежейЗачтенная - СуммаНалогаЗачтенная - СуммаНалогаУдержанная - СуммаНалогаВзыскание;
		
		Если СальдоПоНалогам > 0 Тогда 
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = СальдоПоНалогам;	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = 0;
		Иначе	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = -СальдоПоНалогам;
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = 0;
		КонецЕсли;	
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбщиеСуммыСтроки) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбщиеСуммыСтроки);
		
	КонецЦикла;	
		
	Подписи.Параметры.ДатаПодписи = Формат(ДатаПодписи, "ДЛФ=D");
	Подписи.Параметры.ФИООтветственного = ДанныеОФизЛицеОрганизации.Ответственный_ФИО;
	Подписи.Параметры.ДолжностьОтветственного = ДанныеОФизЛицеОрганизации.Ответственный_Должность;
	
	ДокументРезультат.Вывести(Подписи);

КонецПроцедуры


#Область АлгоритмыПрошлыхЛет

Процедура СформироватьМакетДо2025(ДокументРезультат, ФизическоеЛицо, Год, ГоловнаяОрганизация, СтатусРезидент)
	
	Ответственный = Справочники.Пользователи.ПустаяСсылка();
	
	Если Год < '20230101' Тогда
		Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.РегистрНалоговогоУчетаПоНДФЛ.ПФ_MXL_ФормаРегистрНалоговогоУчетаПоНДФЛ_2021");
	Иначе
		Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.РегистрНалоговогоУчетаПоНДФЛ.ПФ_MXL_ФормаРегистрНалоговогоУчетаПоНДФЛ_2023");
	КонецЕсли;
	
	// Области-разделы
	Раздел1 = Макет.ПолучитьОбласть("Раздел1");									    
	Раздел2 = Макет.ПолучитьОбласть("Раздел2");	
	Раздел3 = Макет.ПолучитьОбласть("Раздел3");
	Раздел7 = Макет.ПолучитьОбласть("Раздел7");
	РасчетыНалогаПоСтавке13Шапка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Шапка");
	РасчетыНалогаПоСтавке13Строка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Строка");
	РасчетыНалогаПоСтавке13МесяцГруппа = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13МесяцГруппа");
	РасчетыНалогаПоСтавке13БылоПоСтавке30 = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13БылоПоСтавке30");
	РасчетыНалогаПоСтавке13Итог = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13ИтогМесяц");
	ПредоставленныеВычетыШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапка");
	ПредоставленныеВычетыЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыЗаголовок");
	ПредоставленныеВычетыШапкаМесяцГруппа = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапкаМесяцГруппа");
	ПредоставленныеВычетыСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыСтрока");
	ПредоставленныеВычетыИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтог");
	НалогПоСтавке30Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке30Заголовок");
	НалогПоСтавке30Шапка = Макет.ПолучитьОбласть("НалогПоСтавке30Шапка");
	НалогПоСтавке30Строка = Макет.ПолучитьОбласть("НалогПоСтавке30Строка");
	НалогПоСтавке30Итог = Макет.ПолучитьОбласть("НалогПоСтавке30Итог");
	НалогПоСтавке9Шапка = Макет.ПолучитьОбласть("НалогПоСтавке9Шапка");
	НалогПоСтавке9Строка = Макет.ПолучитьОбласть("НалогПоСтавке9Строка");
	НалогПоСтавке9Итог = Макет.ПолучитьОбласть("НалогПоСтавке9Итог");
	ИсчисленоЗаголовок = Макет.ПолучитьОбласть("ИсчисленоЗаголовок");
	ИсчисленоШапка = Макет.ПолучитьОбласть("ИсчисленоШапка");
	ИсчисленоСтрока = Макет.ПолучитьОбласть("ИсчисленоСтрока");
	ЗачтеноАвансовЗаголовок = Макет.ПолучитьОбласть("ЗачтеноАвансовЗаголовок");
	ЗачтеноАвансовШапка = Макет.ПолучитьОбласть("ЗачтеноАвансовШапка");
	ЗачтеноАвансовСтрока = Макет.ПолучитьОбласть("ЗачтеноАвансовСтрока");
	УдержаноЗаголовок = Макет.ПолучитьОбласть("УдержаноЗаголовок");
	УдержаноШапка = Макет.ПолучитьОбласть("УдержаноШапка");
	УдержаноСтрока = Макет.ПолучитьОбласть("УдержаноСтрока");
	УдержаноБылоПоСтавке30 = Макет.ПолучитьОбласть("УдержаноБылоПоСтавке30");
	ВозвращеноЗаголовок = Макет.ПолучитьОбласть("ВозвращеноЗаголовок");
	ВозвращеноШапка = Макет.ПолучитьОбласть("ВозвращеноШапка");
	ВозвращеноСтрока = Макет.ПолучитьОбласть("ВозвращеноСтрока");
	ПереданоНаВзысканиеЗаголовок = Макет.ПолучитьОбласть("ПереданоНаВзысканиеЗаголовок");
	ПереданоНаВзысканиеШапка = Макет.ПолучитьОбласть("ПереданоНаВзысканиеШапка");
	ПереданоНаВзысканиеСтрока = Макет.ПолучитьОбласть("ПереданоНаВзысканиеСтрока");
	НалогПеречисленныйЗаголовок = Макет.ПолучитьОбласть("НалогПеречисленныйЗаголовок");
	НалогПеречисленныйШапка = Макет.ПолучитьОбласть("НалогПеречисленныйШапка");
	НалогПеречисленныйСтрока = Макет.ПолучитьОбласть("НалогПеречисленныйСтрока");
	НалогПеречисленныйБылоПоСтавке30 = Макет.ПолучитьОбласть("НалогПеречисленныйБылоПоСтавке30");
	ПредоставленныеВычетыИтогиЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиЗаголовок");
	ПредоставленныеВычетыИтогиИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиИтог");
	ОбщиеСуммыИтогЗаголовок = Макет.ПолучитьОбласть("ОбщиеСуммыИтогЗаголовок");
	СтандартныеВычетыЗаголовок = Макет.ПолучитьОбласть("СтандартныеВычетыЗаголовок");
	СтандартныеВычетыШапка = Макет.ПолучитьОбласть("СтандартныеВычетыШапка");
	СтандартныеВычетыСтрока = Макет.ПолучитьОбласть("СтандартныеВычетыСтрока");
	СоциальныеВычетыЗаголовок = Макет.ПолучитьОбласть("СоциальныеВычетыЗаголовок");
	СоциальныеВычетыШапка = Макет.ПолучитьОбласть("СоциальныеВычетыШапка");
	СоциальныеВычетыСтрока = Макет.ПолучитьОбласть("СоциальныеВычетыСтрока");
	Подписи = Макет.ПолучитьОбласть("Подписи");
	ОбластьПустыеВычеты = Макет.ПолучитьОбласть("ОбластьПустыеВычеты");
	Раздел7Шапка = Макет.ПолучитьОбласть("Раздел7Шапка");
	Раздел7Справка = Макет.ПолучитьОбласть("Раздел7Справка");
	
	Раздел4 = Макет.ПолучитьОбласть("Раздел4");
	ПредоставленныеВычетыИтогиШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиШапка");
	ПредоставленныеВычетыИтогиСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиСтрока");
	ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка");
	ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки");
	РасчетыНалогаПоСтавке13Заголовок = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Заголовок");
	НалогПоСтавке9Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке9Заголовок");
	НалогДивидендыЗаголовок = Макет.ПолучитьОбласть("НалогДивидендыЗаголовок");
	НалогДивидендыШапка = Макет.ПолучитьОбласть("НалогДивидендыШапка");
	НалогДивидендыСтрока = Макет.ПолучитьОбласть("НалогДивидендыСтрока");
	НалогДивидендыИтог = Макет.ПолучитьОбласть("НалогДивидендыИтог");
	
	// -----------------------------------------------------------------------------                                 
	// РАЗДЕЛ 1 и 2
	
	ТаблицаПоНалогамИтоги = Новый ТаблицаЗначений();	
	ТаблицаПоНалогамИтоги.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("Ставка", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("ОбщаяСуммаДохода", Новый ОписаниеТипов("Число"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("НалоговаяБаза", Новый ОписаниеТипов("Число"));
	
	НалоговыйПериод = Год(Год);
	ДатаЗакона176ФЗ = УчетНДФЛ.ДатаЗакона176ФЗ();
	
	СтруктураОтбора = Новый Структура("ФизическоеЛицо, Год, ГоловнаяОрганизация", ФизическоеЛицо, НалоговыйПериод, ГоловнаяОрганизация);
	
	ДанныеОФизЛицеОрганизации.Сбросить();
	
	Если ДанныеОФизЛицеОрганизации.НайтиСледующий(СтруктураОтбора) Тогда
		
		// Заполнение данных раздела 1.
		Раздел1.Параметры.ГодНП = "" + Формат(Год, "ЧГ=0; ДФ=yyyy");
		Раздел1.Параметры.ИНН = "" + ДанныеОФизЛицеОрганизации.Организация_ИНН +"\" + ДанныеОФизЛицеОрганизации.Организация_КПП;
		Раздел1.Параметры.КодНалоговогоОргана = ДанныеОФизЛицеОрганизации.Организация_КодНалоговогоОргана;
		Раздел1.Параметры.НазваниеОрганизации = ДанныеОФизЛицеОрганизации.Организация_Наименование;
		
		// Заполнение данных раздела 2.
		Раздел2.Параметры.ИНН = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ИНН;
		Раздел2.Параметры.ФИО = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ФИО;
		Раздел2.Параметры.ВидДокумента = ДанныеОФизЛицеОрганизации.ВидДокумента;
		Раздел2.Параметры.КодДокумента = ДанныеОФизЛицеОрганизации.КодДокументаУдЛичн;
		Раздел2.Параметры.СерияНомерДокумента = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_СерияНомерДокументаУдЛичн;
		Раздел2.Параметры.ДатаРождения = Формат(ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДатаРождения, "ДЛФ=D");
		Раздел2.Параметры.КодСтраны = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_КодСтраны;
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(Раздел1);
	
	ВыборкаСтатусов.Сбросить();
	
	СтатусНаКонецПериода = СтатусРезидент;
	Если ВыборкаСтатусов.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
		ВыборкаДетали = ВыборкаСтатусов.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Если ВыборкаДетали.Месяц >= ДатаЗакона176ФЗ Тогда
				Прервать;
			КонецЕсли;
			Раздел2.Параметры["Статус" + Строка(Месяц(ВыборкаДетали.Месяц))] = ВыборкаДетали.Статус;	
			СтатусНаКонецПериода = ВыборкаДетали.Статус;
		КонецЦикла;	
	КонецЕсли;	
	
	ДокументРезультат.Вывести(Раздел2);
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	
	Раздел3.Параметры.Доход = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДоходыПредыдущегоМестаРаботы;
	ДокументРезультат.Вывести(Раздел3);
	
	ВыводимыеОбласти = Новый Массив;
	
	ТаблицаСтандартныхВычетов = Новый ТаблицаЗначений();
	ТаблицаСтандартныхВычетов.Колонки.Добавить("КодВычета");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыРазмер");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодС");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодПо");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыОснование");
	
	ПредыдущийВычет = Неопределено;
	ПредыдущийПериод = '00010101';
	ПредыдущийРазмер = Неопределено;
	ПредыдущаяСтрока = Неопределено;
	СтрокаТаблицы = Неопределено;
	
	ВыборкаСтандартныеВычеты.Сбросить();
	
	Если ВыборкаСтандартныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		
		ВыборкаСтандартныеВычетыПоФизЛицу = ВыборкаСтандартныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаСтандартныеВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаСтандартныеВычетыПоФизЛицу.Выбрать();
			
			Пока ВыборкаДетали.Следующий() Цикл
				Если ВыборкаДетали.Месяц >= ДатаЗакона176ФЗ Тогда
					Продолжить;
				КонецЕсли;
				Если ВыборкаДетали.КодВычета = ПредыдущийВычет И (КонецМесяца(ПредыдущийПериод) + 1) = ВыборкаДетали.Месяц И ПредыдущийРазмер = ВыборкаДетали.Размер Тогда
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				Иначе
					Если ПредыдущаяСтрока <> Неопределено Тогда 
						ПредыдущаяСтрока.СтандартныеВычетыПериодПо = ДатаЗавершения;
					КонецЕсли;	
					СтрокаТаблицы = ТаблицаСтандартныхВычетов.Добавить();
					СтрокаТаблицы.КодВычета = ВыборкаДетали.КодВычета;
					СтрокаТаблицы.СтандартныеВычетыПериодС = ВыборкаДетали.Месяц; 
					СтрокаТаблицы.СтандартныеВычетыРазмер = ВыборкаДетали.Размер;
					СтрокаТаблицы.СтандартныеВычетыОснование = ВыборкаДетали.Основание;
					
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				КонецЕсли;	
				
				ПредыдущаяСтрока = СтрокаТаблицы;
				
				ПредыдущийВычет  = ВыборкаДетали.КодВычета;
				ПредыдущийПериод = ВыборкаДетали.Месяц;
				ПредыдущийРазмер = ВыборкаДетали.Размер;
			КонецЦикла;	
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицы.СтандартныеВычетыПериодПо = ДатаЗавершения;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	ЕстьПравоНаВычеты = Ложь;
	Если ТаблицаСтандартныхВычетов.Количество() > 0 Тогда
		ВыводимыеОбласти.Добавить(СтандартныеВычетыЗаголовок);
		ВыводимыеОбласти.Добавить(СтандартныеВычетыШапка);
		ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда 
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;	
		ДокументРезультат.Вывести(СтандартныеВычетыШапка);
		ЕстьПравоНаВычеты = Истина;
	КонецЕсли;
	Для Каждого Вычет Из ТаблицаСтандартныхВычетов Цикл
		ВыводимыеОбласти.Очистить();
		СтандартныеВычетыСтрока.Параметры.КодВычета = Вычет.КодВычета;
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыРазмер = Вычет.СтандартныеВычетыРазмер;
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодС = Формат(Вычет.СтандартныеВычетыПериодС, "ДЛФ=D");
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодПо = Формат(Вычет.СтандартныеВычетыПериодПо, "ДЛФ=D");
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыОснование = Вычет.СтандартныеВычетыОснование;
		
		ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(СтандартныеВычетыШапка);
		КонецЕсли;
		
		ДокументРезультат.Вывести(СтандартныеВычетыСтрока);
	КонецЦикла;	
	
	ВыборкаСоциальныеВычеты.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	Если ВыборкаСоциальныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		
		ВыборкаПоФизЛицу = ВыборкаСоциальныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаПоФизЛицу.Выбрать();
			
			ВыводимыеОбласти.Добавить(СоциальныеВычетыЗаголовок);
			ВыводимыеОбласти.Добавить(СоциальныеВычетыШапка);
			ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	
			
			ЗаголовокНеВыводился = Истина;
			Пока ВыборкаДетали.Следующий() Цикл
				Если ВыборкаДетали.Дата >= ДатаЗакона176ФЗ Тогда
					Продолжить;
				КонецЕсли;
				ВыводимыеОбласти.Очистить();
				СоциальныеВычетыСтрока.Параметры.Заполнить(ВыборкаДетали);
				СоциальныеВычетыСтрока.Параметры.СоцВычетыКод = ВыборкаДетали.КодВычетаКод;
				СоциальныеВычетыСтрока.Параметры.СоцВычетыРазмер = ВыборкаДетали.Размер;
				СоциальныеВычетыСтрока.Параметры.СоцВычетыДата = Формат(ВыборкаДетали.Дата, "ДЛФ=D");
				Если ЗначениеЗаполнено(ВыборкаДетали.ДатаУведомления) Тогда
					СоциальныеВычетыСтрока.Параметры.ДатаУведомления = Формат(ВыборкаДетали.ДатаУведомления, "ДЛФ=D");
				КонецЕсли;
				
				ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
				
				Если ЗаголовокНеВыводился Тогда
					ДокументРезультат.Вывести(СоциальныеВычетыЗаголовок);
					ДокументРезультат.Вывести(СоциальныеВычетыШапка);
					ЗаголовокНеВыводился = Ложь;
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(СоциальныеВычетыШапка);
				КонецЕсли;
				
				ДокументРезультат.Вывести(СоциальныеВычетыСтрока);
				ЕстьПравоНаВычеты = Истина;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не ЕстьПравоНаВычеты Тогда
		ДокументРезультат.Вывести(ОбластьПустыеВычеты);
	КонецЕсли;	
	
	ВыборкаДоходовПоМесяцамПоРазделам.Сбросить();
	
	ПараметрыРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();		
	СтавкаЧисломСПревышения = ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом;
	
	ЕстьДанныеПоДоходам = Ложь;
	Если ВыборкаДоходовПоМесяцамПоРазделам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц  = ВыборкаДоходовПоМесяцамПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			
			ЕстьДанныеПоДоходам = Истина;
			ТаблицаПоНалогамИтоги.Очистить();
			
			ДанныеОНалогахНачисленныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахЗачтенныхПоРегистрации = Новый Соответствие;
			ДанныеОбАвансахЗачтенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахУдержанныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахВозвращенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации = Новый Соответствие;
			ДанныеОНалогахПеречисленныхПоРегистрации = Новый Соответствие;
			
			ВыборкаРегистраций = ВыборкаФизЛиц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРегистраций.Следующий() Цикл
				
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаРегистраций.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					Раздел4.Параметры.Заполнить(СтрокаРегистрации);
				КонецЕсли;
				
				ВыводимыеОбласти.Очистить();
				
				ВыводимыеОбласти.Добавить(Раздел4);
				ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);				
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				ДокументРезультат.Вывести(Раздел4);
				
				ВыборкаПоРазделам = ВыборкаРегистраций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				СуммаДоходаДоРезидентстваНарастающийИтог = 0;
				ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = 0;
				
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка13", "Раздел") Тогда
					
					ВычетыПоСтавке13 = Новый Соответствие;
					ВыборкаВычетовПоСтавке13.Сбросить();
					Если ВыборкаВычетовПоСтавке13.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаВычетовПоСтавке13ПоФизЛицам = ВыборкаВычетовПоСтавке13.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаВычетовПоСтавке13ПоФизЛицам.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаВычетовПоСтавке13Регистрация = ВыборкаВычетовПоСтавке13ПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетовПоСтавке13Регистрация.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
								ВыборкаДетали = ВыборкаВычетовПоСтавке13Регистрация.Выбрать();
								СуммаВычетаИтог = 0;
								Пока ВыборкаДетали.Следующий() Цикл 
									СуммаВычетаИтог = ВыборкаДетали.СуммаВычета + СуммаВычетаИтог;
									ВычетыПоСтавке13.Вставить(ВыборкаДетали.Месяц, СуммаВычетаИтог);		
								КонецЦикла;	
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;	
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						РасчетыНалогаПоСтавке13Заголовок.Параметры.ОписаниеСтавки = ?(ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением, НСтр("ru = '13% + 15% с превышения предела';
																																					|en = '13% + 15% с превышения предела'"), "13%");
						РасчетыНалогаПоСтавке13Заголовок.Параметры.НалоговаяБаза = ВыборкаПоНалоговымБазам.НалоговаяБаза;
						ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Заголовок);
						ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаНарастающийИтог = 0;
						СуммаВычетовНарастающийИтог = 0;
						ОблагаемаяСуммаДоходаНарастающийИтог = 0;
						ОблагаемаяСуммаДоходаНарастающийИтог13 = 0;
						ОблагаемаяСуммаДоходаНарастающийИтог15 = 0;
						НалоговаяБаза = 0;
						НалоговаяБаза13 = 0;
						НалоговаяБаза15 = 0;
						СуммаВычетовСНачалаПериода = 0;
						СтавкаНалога = 0.13;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							ВыводимыеОбласти.Очистить();
							
							ОбластьНалогПоСтавке13Группа = Новый ТабличныйДокумент;
							Если ЗначениеЗаполнено(ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства) Тогда
								ЗаполнитьЗначенияСвойств(РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры,ВыборкаПоМесяцамНалоговогоПериода);
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалоговаяБазаДоРезидентства = НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалогНачисленоДоРезидентства = Окр((НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства) * СтавкаНалога);
								ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13БылоПоСтавке30);
								СуммаДоходаДоРезидентстваНарастающийИтог = СуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства;
							КонецЕсли;
							
							СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДохода;
							СуммаВычетовНарастающийИтог = СуммаВычетовНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаВычета;
							ОблагаемаяСуммаДоходаНарастающийИтог = ОблагаемаяСуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДохода;
							ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
							СуммаВычетовСНачалаПериода = ?(ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) = Неопределено, СуммаВычетовСНачалаПериода, ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода));
							
							РасчетыНалогаПоСтавке13МесяцГруппа.Параметры.Месяц = Формат(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода, "ДФ=ММММ");
							ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13МесяцГруппа);
							ВыводимыеОбласти.Добавить(ОбластьНалогПоСтавке13Группа);
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								РасчетыНалогаПоСтавке13Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								РасчетыНалогаПоСтавке13Строка.Параметры.Ставка = ?(ВыборкаПоДатамПолученияДохода.ЭтоФизическоеЛицоСПревышением, " по " + ВыборкаПоДатамПолученияДохода.Ставка,"");
								РасчетыНалогаПоСтавке13Строка.Параметры.СуммаДохода = Формат(ВыборкаПоДатамПолученияДохода.СуммаДохода, "ЧДЦ=2");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								
								ОбластьДоходыПоСтавке13 = Новый ТабличныйДокумент;
								ОбластьДоходыПоСтавке13.Вывести(РасчетыНалогаПоСтавке13Строка);
								
								ВыводимыеОбласти.Добавить(ОбластьДоходыПоСтавке13);		
								
								Если ВыборкаПоДатамПолученияДохода.ЭтоФизическоеЛицоСПревышением И ВыборкаПоДатамПолученияДохода.Ставка = Перечисления.НДФЛСтавки.Ставка15 Тогда
									ОблагаемаяСуммаДоходаНарастающийИтог15 = ОблагаемаяСуммаДоходаНарастающийИтог15 + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								Иначе
									ОблагаемаяСуммаДоходаНарастающийИтог13 = ОблагаемаяСуммаДоходаНарастающийИтог13 + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								КонецЕсли;
							КонецЦикла;	
							
							НалоговаяБаза = ОблагаемаяСуммаДоходаНарастающийИтог - СуммаВычетовСНачалаПериода + ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог;
							Если ОблагаемаяСуммаДоходаНарастающийИтог13 = 0 Тогда
								НалоговаяБаза13 = 0;
								НалоговаяБаза15 = ОблагаемаяСуммаДоходаНарастающийИтог15 - СуммаВычетовСНачалаПериода;
							Иначе
								НалоговаяБаза13 = ОблагаемаяСуммаДоходаНарастающийИтог13 - СуммаВычетовСНачалаПериода + ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог;
								НалоговаяБаза15 = ОблагаемаяСуммаДоходаНарастающийИтог15;
							КонецЕсли;
							
							РасчетыНалогаПоСтавке13Итог.Параметры.Заполнить(ВыборкаПоМесяцамНалоговогоПериода);
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетовНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза = НалоговаяБаза;
							Если ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением И ОблагаемаяСуммаДоходаНарастающийИтог15 > 0 Тогда
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено = Окр(НалоговаяБаза13 * СтавкаНалога);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБазаСвышеПредела = НалоговаяБаза15;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено15 = Окр(НалоговаяБаза15 * СтавкаЧисломСПревышения);
							Иначе 	
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено = Окр(НалоговаяБаза * СтавкаНалога);
								РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБазаСвышеПредела = 0;
								РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено15 = 0;
							КонецЕсли;
							
							ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Итог);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Шапка);
							КонецЕсли;
							
							Для Каждого Область Из ВыводимыеОбласти Цикл
								ДокументРезультат.Вывести(Область);
							КонецЦикла;	
							
						КонецЦикла;
						
						СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
						СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
						СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка13;
						СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода13 + СуммаДоходаДоРезидентстваНарастающийИтог;
						СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза;
						Если ВыборкаПоНалоговымБазам.ЭтоФизическоеЛицоСПревышением И ОблагаемаяСуммаДоходаНарастающийИтог15 > 0 Тогда
							СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза13;
							СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
							СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоНалоговымБазам.РегистрацияВНалоговомОргане;
							СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка15;
							СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоНалоговымБазам.СуммаДохода15;
							СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза15;
						КонецЕсли;
						
					КонецЦикла;
					
					ВыборкаВычетыПоМесяцамПоВидам.Сбросить();
					
					ВыводимыеОбласти.Очистить();
					Если ВыборкаВычетыПоМесяцамПоВидам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаВычетыПоФизЛицу = ВыборкаВычетыПоМесяцамПоВидам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаВычетыПоРегистрации = ВыборкаВычетыПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетыПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда 
								
								ВыводилиЗаголовок = Ложь;
								
								ДоходИтог = 0;
								СуммаВычетаНарастающийИтог = 0;
								
								ВыборкаПоНалоговымБазам = ВыборкаВычетыПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
									ВыборкаВычетыПоМесяцам = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаВычетыПоМесяцам.Следующий() Цикл
										ВыводимыеОбласти.Очистить();
										
										Если Не ВыводилиЗаголовок Тогда
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыЗаголовок);
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапка);
										КонецЕсли;
										
										ДоходИтог = ДоходИтог + ВыборкаВычетыПоМесяцам.СуммаДохода;
										
										ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Месяц = Формат(ВыборкаВычетыПоМесяцам.Месяц, "ДФ=ММММ");	
										ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Доход = Формат(ДоходИтог, "ЧДЦ=2");
										
										ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапкаМесяцГруппа);
										
										ВыборкаВычетыДетали = ВыборкаВычетыПоМесяцам.Выбрать();
										
										Пока ВыборкаВычетыДетали.Следующий() Цикл
											
											СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог + ВыборкаВычетыДетали.СуммаВычета;
											ПредоставленныеВычетыСтрока.Параметры.Заполнить(ВыборкаВычетыДетали);
											
											ОбластьПредоставленныеВычеты = Новый ТабличныйДокумент;
											ОбластьПредоставленныеВычеты.Вывести(ПредоставленныеВычетыСтрока);
											ВыводимыеОбласти.Добавить(ОбластьПредоставленныеВычеты);	
											
										КонецЦикла;	
										
										ПредоставленныеВычетыИтог.Параметры.СуммаВычета = ВыборкаВычетыПоМесяцам.СуммаВычета;
										ПредоставленныеВычетыИтог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог;
										
										ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтог);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											Если ВыводилиЗаголовок Тогда
												ДокументРезультат.Вывести(ПредоставленныеВычетыШапка);
											КонецЕсли;
										КонецЕсли;
										
										Для Каждого Область Из ВыводимыеОбласти Цикл
											ДокументРезультат.Вывести(Область);
										КонецЦикла;
										
										ВыводилиЗаголовок = Истина;
										
									КонецЦикла;	
								КонецЦикла;	
								
							КонецЕсли;
						КонецЕсли;		
					КонецЕсли;	
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Дивиденды", "Раздел") Тогда
					
					ВыводимыеОбласти.Добавить(НалогДивидендыЗаголовок);
					ВыводимыеОбласти.Добавить(НалогДивидендыШапка);
					ВыводимыеОбласти.Добавить(НалогДивидендыСтрока);
					ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогДивидендыЗаголовок);
						ДокументРезультат.Вывести(НалогДивидендыШапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								
								НалогДивидендыСтрока.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогДивидендыСтрока.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогДивидендыСтрока.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогДивидендыСтрока.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Очистить();
								ВыводимыеОбласти.Добавить(НалогДивидендыСтрока);
								ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогДивидендыШапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогДивидендыСтрока);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоДатамПолученияДохода.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаПоДатамПолученияДохода.Ставка;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СтрокаТаблицыИтогов.НалоговаяБаза = ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								
							КонецЦикла;	
						КонецЦикла;
						НалогДивидендыИтог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогДивидендыИтог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогДивидендыИтог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогДивидендыИтог) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ВыводимыеОбласти.Добавить(НалогДивидендыИтог);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогДивидендыИтог);
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка30", "Раздел") Тогда
					
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогПоСтавке30Заголовок);
						ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								
								НалогПоСтавке30Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке30Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								НалогПоСтавке30Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке30Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
								ВыводимыеОбласти.Добавить(НалогПоСтавке30Итог);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке30Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке30Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке30Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						ВыводимыеОбласти.Очистить();
						ВыводимыеОбласти.Добавить(НалогПоСтавке30Итог);
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке30Итог);
						
						Если СуммаДоходаИтог > СуммаДоходаДоРезидентстваНарастающийИтог Тогда
							СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
							СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
							СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка30;
							СтрокаТаблицыИтогов.ОбщаяСуммаДохода = СуммаДоходаИтог - СуммаДоходаДоРезидентстваНарастающийИтог;
							СтрокаТаблицыИтогов.НалоговаяБаза = ОблагаемаяСуммаДоходаИтог - Мин(ОблагаемаяСуммаДоходаИтог,ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог);
						КонецЕсли;
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка35_15_9", "Раздел") Тогда
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						ДокументРезультат.Вывести(НалогПоСтавке9Заголовок);
						ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								НалогПоСтавке9Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке9Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке9Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке9Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
								ВыводимыеОбласти.Добавить(НалогПоСтавке9Итог);
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке9Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаПоДатамПолученияДохода.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаПоДатамПолученияДохода.Ставка;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СтрокаТаблицыИтогов.НалоговаяБаза = ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке9Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке9Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПоСтавке9Итог) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке9Итог);
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаНалогиНачисленныеИтоги.Сбросить();
				
				ДанныеОНалогахНачисленныхПоСтавкам = Новый Соответствие;
				ДанныеОНалогахЗачтенныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиНачисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиНачисленныеИтогиПоФизЛицу = ВыборкаНалогиНачисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиНачисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиНачисленныеИтогиПоРегистрации = ВыборкаНалогиНачисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиНачисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ИсчисленоЗаголовок);
							ВыводимыеОбласти.Добавить(ИсчисленоШапка);
							ВыводимыеОбласти.Добавить(ИсчисленоСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ИсчисленоЗаголовок);
							ДокументРезультат.Вывести(ИсчисленоШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиНачисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиНачисленныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиНачисленныеДетали.Следующий() Цикл
									
									ИсчисленоСтрока.Параметры.Месяц = Формат(ВыборкаНалогиНачисленныеДетали.Месяц, "ДЛФ=D");
									ИсчисленоСтрока.Параметры.Дата = Формат(ВыборкаНалогиНачисленныеДетали.Дата, "ДЛФ=D");
									ИсчисленоСтрока.Параметры.Ставка = ВыборкаНалогиНачисленныеДетали.Ставка;
									ИсчисленоСтрока.Параметры.Сумма = ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									ИсчисленоСтрока.Параметры.НалогКЗачету = ВыборкаНалогиНачисленныеДетали.НалогКЗачету;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ИсчисленоСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ИсчисленоШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ИсчисленоСтрока);
									
									Если ВыборкаНалогиНачисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаНалогиНачисленныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
										СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
									Иначе
										СтавкаИтогов = ВыборкаНалогиНачисленныеДетали.Ставка
									КонецЕсли;
									Если ДанныеОНалогахНачисленныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОНалогахНачисленныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогНачислено);
									Иначе
										ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									КонецЕсли;	
									Если ДанныеОНалогахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОНалогахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогКЗачету);
									Иначе
										ДанныеОНалогахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогКЗачету;
									КонецЕсли;	
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОНалогахНачисленныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахНачисленныхПоСтавкам); 
				ДанныеОНалогахЗачтенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахЗачтенныхПоСтавкам); 
				
				ВыборкаАвансыЗачтенныеИтоги.Сбросить();
				
				ДанныеОбАвансахЗачтенныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаАвансыЗачтенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаАвансыЗачтенныеИтогиПоФизЛицу = ВыборкаАвансыЗачтенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаАвансыЗачтенныеИтогиПоРегистрации = ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаАвансыЗачтенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовЗаголовок);
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовШапка);
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ЗачтеноАвансовЗаголовок);
							ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаАвансыЗачтенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаАвансыЗачтенныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаАвансыЗачтенныеДетали.Следующий() Цикл
									
									ЗачтеноАвансовСтрока.Параметры.Месяц = Формат(ВыборкаАвансыЗачтенныеДетали.Месяц, "ДФ=ММММ");
									ЗачтеноАвансовСтрока.Параметры.Дата = Формат(ВыборкаАвансыЗачтенныеДетали.Дата, "ДЛФ=D");
									ЗачтеноАвансовСтрока.Параметры.Ставка = ВыборкаАвансыЗачтенныеДетали.Ставка;
									ЗачтеноАвансовСтрока.Параметры.Сумма = ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ЗачтеноАвансовСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ЗачтеноАвансовСтрока);
									
									Если ВыборкаАвансыЗачтенныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаАвансыЗачтенныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
										СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
									Иначе
										СтавкаИтогов = ВыборкаАвансыЗачтенныеДетали.Ставка
									КонецЕсли;
									Если ДанныеОбАвансахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОбАвансахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов);
									Иначе
										ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									КонецЕсли;	
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОбАвансахЗачтенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОбАвансахЗачтенныхПоСтавкам); 
				
				ВыборкаНалогиУдержанныеИтоги.Сбросить();
				
				ДанныеОНалогахУдержанныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиУдержанныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиУдержанныеИтогиПоФизЛицу = ВыборкаНалогиУдержанныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиУдержанныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиУдержанныеИтогиПоРегистрации = ВыборкаНалогиУдержанныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиУдержанныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							
							ВыводимыеОбласти.Добавить(УдержаноЗаголовок);
							ВыводимыеОбласти.Добавить(УдержаноШапка);
							ВыводимыеОбласти.Добавить(УдержаноСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(УдержаноЗаголовок);
							ДокументРезультат.Вывести(УдержаноШапка);
							КЗачетуПоСтавке13 = 0;
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиУдержанныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиУдержанныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиУдержанныеДетали.Следующий() Цикл
									
									Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка13 И ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
										УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											ДокументРезультат.Вывести(УдержаноШапка);
										КонецЕсли;
										ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
										КЗачетуПоСтавке13 = 0;
									КонецЕсли;
									
									УдержаноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиУдержанныеДетали.Месяц, "ДЛФ=D");
									УдержаноСтрока.Параметры.Дата = Формат(ВыборкаНалогиУдержанныеДетали.Дата, "ДЛФ=D");
									УдержаноСтрока.Параметры.Ставка = ВыборкаНалогиУдержанныеДетали.Ставка;
									УдержаноСтрока.Параметры.Сумма = ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									УдержаноСтрока.Параметры.СрокПеречисления = ВыборкаНалогиУдержанныеДетали.СрокПеречисления;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(УдержаноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(УдержаноСтрока);
									
									Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(ВыборкаНалогиУдержанныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахУдержанныхПоСтавкам.Вставить(ВыборкаНалогиУдержанныеДетали.Ставка, ВыборкаНалогиУдержанныеДетали.НалогУдержано);
									Иначе
										ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] = ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] + ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									КонецЕсли;	
									
									Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ЗначениеЗаполнено(ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13) Тогда
										КЗачетуПоСтавке13 = КЗачетуПоСтавке13 + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка30) <> Неопределено Тогда
											ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] - ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										КонецЕсли;
										Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка13) = Неопределено Тогда
											ДанныеОНалогахУдержанныхПоСтавкам.Вставить(Перечисления.НДФЛСтавки.Ставка13, ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13);
										Иначе
											ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										КонецЕсли;	
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
							
							Если ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
								УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(УдержаноШапка);
								КонецЕсли;
								ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;		
				
				ДанныеОНалогахУдержанныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахУдержанныхПоСтавкам);
				
				ВыборкаНалогиВозвращенныеИтоги.Сбросить();
				
				ДанныеОНалогахВозвращенныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиВозвращенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВозвращенныеИтогиПоФизЛицу = ВыборкаНалогиВозвращенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВозвращенныеИтогиПоРегистрации = ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВозвращенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ВозвращеноЗаголовок);
							ВыводимыеОбласти.Добавить(УдержаноШапка);
							ВыводимыеОбласти.Добавить(ВозвращеноСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ВозвращеноЗаголовок);
							ДокументРезультат.Вывести(ВозвращеноШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиВозвращенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиВозвращенныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиВозвращенныеДетали.Следующий() Цикл
									ВозвращеноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВозвращенныеДетали.Месяц, "ДФ=ММММ");
									ВозвращеноСтрока.Параметры.Дата = Формат(ВыборкаНалогиВозвращенныеДетали.Дата, "ДЛФ=D");
									ВозвращеноСтрока.Параметры.Ставка = ВыборкаНалогиВозвращенныеДетали.Ставка;
									ВозвращеноСтрока.Параметры.Сумма = ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВозвращеноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ВозвращеноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ВозвращеноСтрока);
									
									Если ДанныеОНалогахВозвращенныхПоСтавкам.Получить(ВыборкаНалогиВозвращенныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахВозвращенныхПоСтавкам.Вставить(ВыборкаНалогиВозвращенныеДетали.Ставка, ВыборкаНалогиВозвращенныеДетали.НалогВозвращено);
									Иначе
										ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] = ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] + ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									КонецЕсли;	
									
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахВозвращенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахВозвращенныхПоСтавкам);
				
				ВыборкаНалогиВзысканиеИтоги.Сбросить();
				
				ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиВзысканиеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВзысканиеИтогиПоФизЛицу = ВыборкаНалогиВзысканиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВзысканиеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВзысканиеИтогиПоРегистрации = ВыборкаНалогиВзысканиеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВзысканиеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеЗаголовок);
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеШапка);
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ПереданоНаВзысканиеЗаголовок);
							ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиВзысканиеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиВзысканиеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиВзысканиеДетали.Следующий() Цикл
									ПереданоНаВзысканиеСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВзысканиеДетали.Месяц, "ДФ=ММММ");
									ПереданоНаВзысканиеСтрока.Параметры.Дата = Формат(ВыборкаНалогиВзысканиеДетали.Дата, "ДЛФ=D");
									ПереданоНаВзысканиеСтрока.Параметры.Ставка = ВыборкаНалогиВзысканиеДетали.Ставка;
									ПереданоНаВзысканиеСтрока.Параметры.Сумма = ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПереданоНаВзысканиеСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ПереданоНаВзысканиеСтрока);
									
									Если ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Получить(ВыборкаНалогиВзысканиеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Вставить(ВыборкаНалогиВзысканиеДетали.Ставка, ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание);
									Иначе
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] = ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] + ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам);
				
				ВыборкаНалогиПеречисленныеИтоги.Сбросить();
				
				ДанныеОНалогахПеречисленныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиПеречисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиПеречисленныеИтогиПоФизЛицу = ВыборкаНалогиПеречисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Если ВыборкаНалогиПеречисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиПеречисленныеИтогиПоРегистрации = ВыборкаНалогиПеречисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиПеречисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(НалогПеречисленныйЗаголовок);
							ВыводимыеОбласти.Добавить(НалогПеречисленныйШапка);
							ВыводимыеОбласти.Добавить(НалогПеречисленныйСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(НалогПеречисленныйЗаголовок);
							ДокументРезультат.Вывести(НалогПеречисленныйШапка);
							КЗачетуПоСтавке13 = 0;
							ПредыдущийМесяц = "";
							
							ВыборкаНалогиПеречисленныеДетали = ВыборкаНалогиПеречисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаНалогиПеречисленныеДетали.Следующий() Цикл
								
								Если ВыборкаНалогиПеречисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка13 И ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
									НалогПеречисленныйБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйБылоПоСтавке30) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(НалогПеречисленныйШапка);
									КонецЕсли;
									ДокументРезультат.Вывести(НалогПеречисленныйБылоПоСтавке30);
									КЗачетуПоСтавке13 = 0;
								КонецЕсли;
								
								НалогПеречисленныйСтрока.Параметры.Месяц = Формат(ВыборкаНалогиПеречисленныеДетали.Месяц, "ДФ=ММММ");
								НалогПеречисленныйСтрока.Параметры.Дата = Формат(ВыборкаНалогиПеречисленныеДетали.Дата, "ДЛФ=D");
								НалогПеречисленныйСтрока.Параметры.Ставка = ВыборкаНалогиПеречисленныеДетали.Ставка;
								НалогПеречисленныйСтрока.Параметры.Сумма = ВыборкаНалогиПеречисленныеДетали.Сумма;
								НалогПеречисленныйСтрока.Параметры.РеквизитыПП = ВыборкаНалогиПеречисленныеДетали.РеквизитыПП;
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйСтрока) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПеречисленныйШапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПеречисленныйСтрока);
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаНалогиПеречисленныеДетали.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаНалогиПеречисленныеДетали.Ставка;
								
								Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(ВыборкаНалогиПеречисленныеДетали.Ставка) = Неопределено Тогда
									ДанныеОНалогахПеречисленныхПоСтавкам.Вставить(ВыборкаНалогиПеречисленныеДетали.Ставка, ВыборкаНалогиПеречисленныеДетали.Сумма);
								Иначе
									ДанныеОНалогахПеречисленныхПоСтавкам[ВыборкаНалогиПеречисленныеДетали.Ставка] = ДанныеОНалогахПеречисленныхПоСтавкам[ВыборкаНалогиПеречисленныеДетали.Ставка] + ВыборкаНалогиПеречисленныеДетали.Сумма;
								КонецЕсли;
								
								Если ПредыдущийМесяц <> ВыборкаНалогиПеречисленныеДетали.Месяц И ВыборкаНалогиПеречисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ЗначениеЗаполнено(ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13) Тогда
									ПредыдущийМесяц = ВыборкаНалогиПеречисленныеДетали.Месяц;
									КЗачетуПоСтавке13 = КЗачетуПоСтавке13 + ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка30) <> Неопределено Тогда
										ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] = ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] - ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									КонецЕсли;
									Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка13) = Неопределено Тогда
										ДанныеОНалогахПеречисленныхПоСтавкам.Вставить(Перечисления.НДФЛСтавки.Ставка13, ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13);
									Иначе
										ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] = ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] + ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									КонецЕсли;	
								КонецЕсли;
								
							КонецЦикла;
							
							Если ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
								НалогПеречисленныйБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйБылоПоСтавке30) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПеречисленныйШапка);
								КонецЕсли;
								ДокументРезультат.Вывести(НалогПеречисленныйБылоПоСтавке30);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахПеречисленныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахПеречисленныхПоСтавкам);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьДанныеПоДоходам Тогда
		ВыводимыеОбласти.Очистить();
		ВыводимыеОбласти.Добавить(Раздел4);
		
		Если СтатусНаКонецПериода = СтатусРезидент Тогда
			ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);
		Иначе
			ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
		КонецЕсли;	
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Для Каждого Область Из ВыводимыеОбласти Цикл
			ДокументРезультат.Вывести(Область);
		КонецЦикла;	
	КонецЕсли;	
	
	ВыборкаВычетыИтоги.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиЗаголовок);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиШапка);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиСтрока);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиЗаголовок);
	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
	
	Если ВыборкаВычетыИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц = ВыборкаВычетыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаФизЛиц.Выбрать();
			СуммаВычетаИтог = 0; 
			Пока ВыборкаДетали.Следующий() Цикл
				
				ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(ВыборкаДетали);	
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаДетали.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(СтрокаРегистрации);	
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиСтрока) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
				КонецЕсли;
				
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
				СуммаВычетаИтог = СуммаВычетаИтог + ВыборкаДетали.СуммаВычета;
			КонецЦикла;
			ПредоставленныеВычетыИтогиИтог.Параметры.СуммаВычета = СуммаВычетаИтог;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиИтог) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиИтог);
		Иначе
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
		КонецЕсли;
	Иначе 
		ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);	
	КонецЕсли;	
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогЗаголовок);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогШапка);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыСтроки);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбщиеСуммыИтогЗаголовок);
	ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
	
	ТаблицаПоНалогамИтоги.Свернуть("РегистрацияВНалоговомОргане, Ставка", "ОбщаяСуммаДохода, НалоговаяБаза");
	ТаблицаПоНалогамИтоги.Сортировать("РегистрацияВНалоговомОргане, Ставка");
	
	Для Каждого НалогиИтоги Из ТаблицаПоНалогамИтоги Цикл
		
		НалогиИсчисленныеПоРегистрации = ДанныеОНалогахНачисленныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиИсчисленныеПоРегистрации = Неопределено Тогда
			СуммаНалогаИсчисленная = 0;
		Иначе
			НалогиИсчисленныеПоСтавкам = НалогиИсчисленныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаИсчисленная = ?(НалогиИсчисленныеПоСтавкам = Неопределено, 0, НалогиИсчисленныеПоСтавкам);
		КонецЕсли;	
		
		НалогиЗачтенныеПоРегистрации = ДанныеОНалогахЗачтенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиЗачтенныеПоРегистрации = Неопределено Тогда
			СуммаНалогаЗачтенная = 0;
		Иначе
			НалогиЗачтенныеПоСтавкам = НалогиЗачтенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаЗачтенная = ?(НалогиЗачтенныеПоСтавкам = Неопределено, 0, НалогиЗачтенныеПоСтавкам);
		КонецЕсли;	
		
		АвансыЗачтенныеПоРегистрации = ДанныеОбАвансахЗачтенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если АвансыЗачтенныеПоРегистрации = Неопределено Тогда
			СуммаАвансовыхПлатежейЗачтенная = 0;
		Иначе
			АвансыЗачтенныеПоСтавкам = АвансыЗачтенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаАвансовыхПлатежейЗачтенная = ?(АвансыЗачтенныеПоСтавкам = Неопределено, 0, АвансыЗачтенныеПоСтавкам);
		КонецЕсли;	
		
		НалогиУдержанныеПоРегистрации = ДанныеОНалогахУдержанныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиУдержанныеПоРегистрации = Неопределено Тогда
			СуммаНалогаУдержанная = 0;
		Иначе
			НалогиУдержанныеПоСтавкам = НалогиУдержанныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаУдержанная = ?(НалогиУдержанныеПоСтавкам = Неопределено, 0, НалогиУдержанныеПоСтавкам);
		КонецЕсли;
		
		НалогиВозвращенныеПоРегистрации = ДанныеОНалогахВозвращенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВозвращенныеПоРегистрации = Неопределено Тогда
			СуммаНалогаВозвращенная = 0;
		Иначе
			НалогиВозвращенныеПоСтавкам = НалогиВозвращенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВозвращенная = ?(НалогиВозвращенныеПоСтавкам = Неопределено, 0, НалогиВозвращенныеПоСтавкам);
		КонецЕсли;
		
		СуммаНалогаУдержанная = СуммаНалогаУдержанная - СуммаНалогаВозвращенная;
		
		НалогиВзысканиеПоРегистрации = ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВзысканиеПоРегистрации = Неопределено Тогда
			СуммаНалогаВзыскание = 0;
		Иначе
			НалогиВзысканиеПоСтавкам = НалогиВзысканиеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВзыскание = ?(НалогиВзысканиеПоСтавкам = Неопределено, 0, НалогиВзысканиеПоСтавкам);
		КонецЕсли;
		
		НалогиПеречисленныеПоРегистрации = ДанныеОНалогахПеречисленныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиПеречисленныеПоРегистрации = Неопределено Тогда
			СуммаНалогаПеречисленная = 0;
		Иначе
			НалогиПеречисленныеПоСтавкам = НалогиПеречисленныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаПеречисленная = ?(НалогиПеречисленныеПоСтавкам = Неопределено, 0, НалогиПеречисленныеПоСтавкам);
		КонецЕсли;
		
		Если НалогиИтоги.ОбщаяСуммаДохода = 0 И НалогиИтоги.НалоговаяБаза = 0 И СуммаНалогаИсчисленная = 0 И СуммаНалогаУдержанная = 0 И СуммаНалогаПеречисленная = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(НалогиИтоги.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
		Если СтрокаРегистрации <> Неопределено Тогда
			ОбщиеСуммыСтроки.Параметры.Заполнить(СтрокаРегистрации);
		КонецЕсли;
		
		ОбщиеСуммыСтроки.Параметры.Заполнить(НалогиИтоги);
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаИсчисленная = СуммаНалогаИсчисленная;
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаУдержанная = СуммаНалогаУдержанная;
		Если Год < '20230101' Тогда
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаПеречисленная = СуммаНалогаПеречисленная;
		КонецЕсли;
		ОбщиеСуммыСтроки.Параметры.СуммаАвансовыхПлатежейЗачтенная = СуммаАвансовыхПлатежейЗачтенная + СуммаНалогаЗачтенная;
		СальдоПоНалогам = СуммаНалогаИсчисленная - СуммаАвансовыхПлатежейЗачтенная - СуммаНалогаЗачтенная - СуммаНалогаУдержанная - СуммаНалогаВзыскание;
		
		Если СальдоПоНалогам > 0 Тогда 
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = СальдоПоНалогам;	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = 0;
		Иначе	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = -СальдоПоНалогам;
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = 0;
		КонецЕсли;	
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбщиеСуммыСтроки) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбщиеСуммыСтроки);
		
	КонецЦикла;	
	
	// Данные о справках не выводим из-за отмены передачи справок как отдельного документа.
	
	Подписи.Параметры.ДатаПодписи = Формат(ДатаПодписи, "ДЛФ=D");
	Подписи.Параметры.ФИООтветственного = ДанныеОФизЛицеОрганизации.Ответственный_ФИО;
	Подписи.Параметры.ДолжностьОтветственного = ДанныеОФизЛицеОрганизации.Ответственный_Должность;
	
	ДокументРезультат.Вывести(Подписи);
	
КонецПроцедуры

Процедура СформироватьМакетДо2021(ДокументРезультат, ФизическоеЛицо, Год, ГоловнаяОрганизация, СтатусРезидент)
	
	Ответственный = Справочники.Пользователи.ПустаяСсылка();
	
	Макет =	УправлениеПечатью.МакетПечатнойФормы("Отчет.РегистрНалоговогоУчетаПоНДФЛ.ПФ_MXL_ФормаРегистрНалоговогоУчетаПоНДФЛ");
	
	НалогПоСтавке13ИсчисленПомесячно = Год < УчетНДФЛ.ДатаИзмененияПорядкаИсчисленияНалогаДляИностранцев();
	
	// Области-разделы
	Раздел1 = Макет.ПолучитьОбласть("Раздел1");									    
	Раздел2 = Макет.ПолучитьОбласть("Раздел2");	
	Раздел3 = Макет.ПолучитьОбласть("Раздел3");
	Раздел7 = Макет.ПолучитьОбласть("Раздел7");
	РасчетыНалогаПоСтавке13Шапка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Шапка");
	РасчетыНалогаПоСтавке13Строка = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Строка");
	РасчетыНалогаПоСтавке13МесяцГруппа = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13МесяцГруппа");
	РасчетыНалогаПоСтавке13БылоПоСтавке30 = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13БылоПоСтавке30");
	РасчетыНалогаПоСтавке13Итог = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13ИтогМесяц");
	ПредоставленныеВычетыШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапка");
	ПредоставленныеВычетыЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыЗаголовок");
	ПредоставленныеВычетыШапкаМесяцГруппа = Макет.ПолучитьОбласть("ПредоставленныеВычетыШапкаМесяцГруппа");
	ПредоставленныеВычетыСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыСтрока");
	ПредоставленныеВычетыИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтог");
	НалогПоСтавке30Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке30Заголовок");
	НалогПоСтавке30Шапка = Макет.ПолучитьОбласть("НалогПоСтавке30Шапка");
	НалогПоСтавке30Строка = Макет.ПолучитьОбласть("НалогПоСтавке30Строка");
	НалогПоСтавке30Итог = Макет.ПолучитьОбласть("НалогПоСтавке30Итог");
	НалогПоСтавке9Шапка = Макет.ПолучитьОбласть("НалогПоСтавке9Шапка");
	НалогПоСтавке9Строка = Макет.ПолучитьОбласть("НалогПоСтавке9Строка");
	НалогПоСтавке9Итог = Макет.ПолучитьОбласть("НалогПоСтавке9Итог");
	ИсчисленоЗаголовок = Макет.ПолучитьОбласть("ИсчисленоЗаголовок");
	ИсчисленоШапка = Макет.ПолучитьОбласть("ИсчисленоШапка" + ?(НалогПоСтавке13ИсчисленПомесячно,"","2015"));
	ИсчисленоСтрока = Макет.ПолучитьОбласть("ИсчисленоСтрока");
	ЗачтеноАвансовЗаголовок = Макет.ПолучитьОбласть("ЗачтеноАвансовЗаголовок");
	ЗачтеноАвансовШапка = Макет.ПолучитьОбласть("ЗачтеноАвансовШапка");
	ЗачтеноАвансовСтрока = Макет.ПолучитьОбласть("ЗачтеноАвансовСтрока");
	УдержаноЗаголовок = Макет.ПолучитьОбласть("УдержаноЗаголовок");
	УдержаноШапка = Макет.ПолучитьОбласть("УдержаноШапка" + ?(НалогПоСтавке13ИсчисленПомесячно,"","2015"));
	УдержаноСтрока = Макет.ПолучитьОбласть("УдержаноСтрока" + ?(НалогПоСтавке13ИсчисленПомесячно,"","2015"));
	УдержаноБылоПоСтавке30 = Макет.ПолучитьОбласть("УдержаноБылоПоСтавке30");
	ВозвращеноЗаголовок = Макет.ПолучитьОбласть("ВозвращеноЗаголовок");
	ВозвращеноШапка = Макет.ПолучитьОбласть("ВозвращеноШапка");
	ВозвращеноСтрока = Макет.ПолучитьОбласть("ВозвращеноСтрока");
	ПереданоНаВзысканиеЗаголовок = Макет.ПолучитьОбласть("ПереданоНаВзысканиеЗаголовок");
	ПереданоНаВзысканиеШапка = Макет.ПолучитьОбласть("ПереданоНаВзысканиеШапка");
	ПереданоНаВзысканиеСтрока = Макет.ПолучитьОбласть("ПереданоНаВзысканиеСтрока");
	НалогПеречисленныйЗаголовок = Макет.ПолучитьОбласть("НалогПеречисленныйЗаголовок");
	НалогПеречисленныйШапка = Макет.ПолучитьОбласть("НалогПеречисленныйШапка");
	НалогПеречисленныйСтрока = Макет.ПолучитьОбласть("НалогПеречисленныйСтрока");
	НалогПеречисленныйБылоПоСтавке30 = Макет.ПолучитьОбласть("НалогПеречисленныйБылоПоСтавке30");
	ПредоставленныеВычетыИтогиЗаголовок = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиЗаголовок");
	ПредоставленныеВычетыИтогиИтог = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиИтог");
	ОбщиеСуммыИтогЗаголовок = Макет.ПолучитьОбласть("ОбщиеСуммыИтогЗаголовок");
	СтандартныеВычетыЗаголовок = Макет.ПолучитьОбласть("СтандартныеВычетыЗаголовок");
	СтандартныеВычетыШапка = Макет.ПолучитьОбласть("СтандартныеВычетыШапка");
	СтандартныеВычетыСтрока = Макет.ПолучитьОбласть("СтандартныеВычетыСтрока");
	СоциальныеВычетыЗаголовок = Макет.ПолучитьОбласть("СоциальныеВычетыЗаголовок");
	СоциальныеВычетыШапка = Макет.ПолучитьОбласть("СоциальныеВычетыШапка");
	СоциальныеВычетыСтрока = Макет.ПолучитьОбласть("СоциальныеВычетыСтрока");
	ИмущественныйВычетУведомление = Макет.ПолучитьОбласть("ИмущественныйВычетУведомление");
	Подписи = Макет.ПолучитьОбласть("Подписи");
	ОбластьПустыеВычеты = Макет.ПолучитьОбласть("ОбластьПустыеВычеты");
	Раздел7Шапка = Макет.ПолучитьОбласть("Раздел7Шапка");
	Раздел7Справка = Макет.ПолучитьОбласть("Раздел7Справка");
	
	ДатаПереходаНаКодыОКТМО = УчетНДФЛ.ДатаПереходаНаКодыОКТМО();
	ДатаИзмененияНалогообложенияДивидендов = УчетНДФЛ.ДатаИзмененияНалогообложенияДивидендов();
	Если Год < ДобавитьМесяц(ДатаПереходаНаКодыОКТМО, -12) Тогда
		Раздел4 = Макет.ПолучитьОбласть("Раздел4");
		ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка");
		ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки");
		ПредоставленныеВычетыИтогиШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиШапка");
		ПредоставленныеВычетыИтогиСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиСтрока");
	ИначеЕсли Год < ДатаПереходаНаКодыОКТМО Тогда
		Раздел4 = Макет.ПолучитьОбласть("Раздел4_2013");
		ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка2013");
		ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки2013");
		ПредоставленныеВычетыИтогиШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиШапка2013");
		ПредоставленныеВычетыИтогиСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиСтрока2013");
	Иначе 
		Раздел4 = Макет.ПолучитьОбласть("Раздел4_2014");
		ПредоставленныеВычетыИтогиШапка = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиШапка2014");
		ПредоставленныеВычетыИтогиСтрока = Макет.ПолучитьОбласть("ПредоставленныеВычетыИтогиСтрока2014");
		Если Год < ДатаИзмененияНалогообложенияДивидендов Тогда
			ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка2014");
			ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки2014");
		Иначе	
			ОбщиеСуммыИтогШапка = Макет.ПолучитьОбласть("ОбщиеСуммыИтогШапка2015");
			ОбщиеСуммыСтроки = Макет.ПолучитьОбласть("ОбщиеСуммыСтроки2015");
		КонецЕсли;
	КонецЕсли;
	
	Если Год < ДатаИзмененияНалогообложенияДивидендов Тогда
		РасчетыНалогаПоСтавке13Заголовок = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Заголовок");
		НалогПоСтавке9Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке9Заголовок");
	Иначе
		РасчетыНалогаПоСтавке13Заголовок = Макет.ПолучитьОбласть("РасчетыНалогаПоСтавке13Заголовок2015");
		НалогПоСтавке9Заголовок = Макет.ПолучитьОбласть("НалогПоСтавке9Заголовок2015");
	КонецЕсли;
	
	// -----------------------------------------------------------------------------                                 
	// РАЗДЕЛ 1 и 2
	
	ТаблицаПоНалогамИтоги = Новый ТаблицаЗначений();	
	ТаблицаПоНалогамИтоги.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("Ставка", Новый ОписаниеТипов("ПеречислениеСсылка.НДФЛСтавки"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("ОбщаяСуммаДохода", Новый ОписаниеТипов("Число"));
	ТаблицаПоНалогамИтоги.Колонки.Добавить("НалоговаяБаза", Новый ОписаниеТипов("Число"));
	
	НалоговыйПериод = Год(Год);
	
	СтруктураОтбора = Новый Структура("ФизическоеЛицо, Год, ГоловнаяОрганизация", ФизическоеЛицо, НалоговыйПериод, ГоловнаяОрганизация);
	
	ДанныеОФизЛицеОрганизации.Сбросить();
	
	Если ДанныеОФизЛицеОрганизации.НайтиСледующий(СтруктураОтбора) Тогда
		
		АдресПоКлассификатору = Ложь;
		Если Не ПустаяСтрока(ДанныеОФизЛицеОрганизации.АдресРегистрации) Тогда
			
			СтруктураАдреса = КонтактнаяИнформацияБЗК.СвернутьСведенияОбАдресе(КонтактнаяИнформацияБЗК.СведенияОбАдресеСТипами(ДанныеОФизЛицеОрганизации.АдресРегистрации), 
			"Индекс, Регион, Район, Город, НаселенныйПункт, Улица, Дом, Корпус, Квартира");
			АдресПоКлассификатору = СтруктураАдреса.Свойство("Индекс");
			
		Иначе
			СтруктураАдреса = Неопределено;
		КонецЕсли;
		
		// Заполнение данных раздела 1.
		Раздел1.Параметры.ГодНП = "" + Формат(Год, "ЧГ=0; ДФ=yyyy");
		Раздел1.Параметры.ИНН = "" + ДанныеОФизЛицеОрганизации.Организация_ИНН +"\" + ДанныеОФизЛицеОрганизации.Организация_КПП;
		Раздел1.Параметры.КодНалоговогоОргана = ДанныеОФизЛицеОрганизации.Организация_КодНалоговогоОргана;
		Раздел1.Параметры.НазваниеОрганизации = ДанныеОФизЛицеОрганизации.Организация_Наименование;
		
		// Заполнение данных раздела 2.
		Раздел2.Параметры.ИНН = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ИНН;
		Раздел2.Параметры.ФИО = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ФИО;
		Раздел2.Параметры.ВидДокумента = ДанныеОФизЛицеОрганизации.ВидДокумента;
		Раздел2.Параметры.КодДокумента = ДанныеОФизЛицеОрганизации.КодДокументаУдЛичн;
		Раздел2.Параметры.СерияНомерДокумента = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_СерияНомерДокументаУдЛичн;
		Раздел2.Параметры.ДатаРождения = Формат(ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДатаРождения, "ДЛФ=D");
		Раздел2.Параметры.КодСтраны = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_КодСтраны;
		Раздел2.Параметры.СтранаПроживания = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_АдресКодСтраны;
		Если АдресПоКлассификатору Тогда
			Раздел2.Параметры.Индекс = СтруктураАдреса.Индекс;
			Раздел2.Параметры.Регион = АдресныйКлассификатор.КодРегионаПоНаименованию(СтруктураАдреса.Регион);
			Раздел2.Параметры.Район = СтруктураАдреса.Район;
			Раздел2.Параметры.Город = СтруктураАдреса.Город;
			Раздел2.Параметры.НаселенныйПункт =  СтруктураАдреса.НаселенныйПункт;
			Раздел2.Параметры.Улица = СтруктураАдреса.Улица;
			Раздел2.Параметры.Дом = СтруктураАдреса.Дом;
			Раздел2.Параметры.Корпус = СтруктураАдреса.Корпус;
			Раздел2.Параметры.Квартира = СтруктураАдреса.Квартира;
		КонецЕсли;	
		Раздел2.Параметры.СтранаПроживания = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_АдресКодСтраны;
		ПредставлениеАдресаПоСтруктуреПолей = "";
		Если ЗначениеЗаполнено(ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ИностранныйАдрес) Тогда
			СтруктураПолейАдреса = КонтактнаяИнформацияБЗК.СведенияОбАдресеСТипами(ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ИностранныйАдрес);
			Раздел2.Параметры.СтранаПроживания = ?(ЗначениеЗаполнено(СтруктураПолейАдреса.КодСтраны), СтруктураПолейАдреса.КодСтраны, Раздел2.Параметры.СтранаПроживания);
			Раздел2.Параметры.Адрес = СтруктураПолейАдреса.Представление;
		КонецЕсли; 
		
	КонецЕсли;
	
	ДокументРезультат.Вывести(Раздел1);
	
	ВыборкаСтатусов.Сбросить();
	
	СтатусНаКонецПериода = СтатусРезидент;
	Если ВыборкаСтатусов.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
		ВыборкаДетали = ВыборкаСтатусов.Выбрать();
		Пока ВыборкаДетали.Следующий() Цикл
			Раздел2.Параметры["Статус" + Строка(Месяц(ВыборкаДетали.Месяц))] = ВыборкаДетали.Статус;	
			СтатусНаКонецПериода = ВыборкаДетали.Статус;
		КонецЦикла;	
	КонецЕсли;	
	
	ДокументРезультат.Вывести(Раздел2);
	
	ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	
	Раздел3.Параметры.Доход = ДанныеОФизЛицеОрганизации.ФизическоеЛицо_ДоходыПредыдущегоМестаРаботы;
	ДокументРезультат.Вывести(Раздел3);
	
	ВыводимыеОбласти = Новый Массив;
	
	ТаблицаСтандартныхВычетов = Новый ТаблицаЗначений();
	ТаблицаСтандартныхВычетов.Колонки.Добавить("КодВычета");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыРазмер");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодС");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыПериодПо");
	ТаблицаСтандартныхВычетов.Колонки.Добавить("СтандартныеВычетыОснование");
	
	ПредыдущийВычет = Неопределено;
	ПредыдущийПериод = '00010101';
	ПредыдущийРазмер = Неопределено;
	ПредыдущаяСтрока = Неопределено;
	СтрокаТаблицы = Неопределено;
	
	ВыборкаСтандартныеВычеты.Сбросить();
	
	Если ВыборкаСтандартныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		
		ВыборкаСтандартныеВычетыПоФизЛицу = ВыборкаСтандартныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаСтандартныеВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаСтандартныеВычетыПоФизЛицу.Выбрать();
			
			ВыводимыеОбласти.Добавить(СтандартныеВычетыЗаголовок);
			ВыводимыеОбласти.Добавить(СтандартныеВычетыШапка);
			ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда 
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	
			
			ДокументРезультат.Вывести(СтандартныеВычетыШапка);
			
			Пока ВыборкаДетали.Следующий() Цикл
				Если ВыборкаДетали.КодВычета = ПредыдущийВычет И (КонецМесяца(ПредыдущийПериод) + 1) = ВыборкаДетали.Месяц И ПредыдущийРазмер = ВыборкаДетали.Размер Тогда
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				Иначе
					Если ПредыдущаяСтрока <> Неопределено Тогда 
						ПредыдущаяСтрока.СтандартныеВычетыПериодПо = ДатаЗавершения;
					КонецЕсли;	
					СтрокаТаблицы = ТаблицаСтандартныхВычетов.Добавить();
					СтрокаТаблицы.КодВычета = ВыборкаДетали.КодВычета;
					СтрокаТаблицы.СтандартныеВычетыПериодС = ВыборкаДетали.Месяц; 
					СтрокаТаблицы.СтандартныеВычетыРазмер = ВыборкаДетали.Размер;
					СтрокаТаблицы.СтандартныеВычетыОснование = ВыборкаДетали.Основание;
					
					ДатаЗавершения = КонецМесяца(ВыборкаДетали.Месяц);
				КонецЕсли;	
				
				ПредыдущаяСтрока = СтрокаТаблицы;
				
				ПредыдущийВычет  = ВыборкаДетали.КодВычета;
				ПредыдущийПериод = ВыборкаДетали.Месяц;
				ПредыдущийРазмер = ВыборкаДетали.Размер;
			КонецЦикла;	
			Если СтрокаТаблицы <> Неопределено Тогда
				СтрокаТаблицы.СтандартныеВычетыПериодПо = ДатаЗавершения;
			КонецЕсли;	
		КонецЕсли;	
	КонецЕсли;	
	
	ЕстьПравоНаВычеты = Ложь;
	Для Каждого Вычет Из ТаблицаСтандартныхВычетов Цикл
		ВыводимыеОбласти.Очистить();
		СтандартныеВычетыСтрока.Параметры.КодВычета = Вычет.КодВычета;
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыРазмер = Вычет.СтандартныеВычетыРазмер;
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодС = Формат(Вычет.СтандартныеВычетыПериодС, "ДЛФ=D");
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыПериодПо = Формат(Вычет.СтандартныеВычетыПериодПо, "ДЛФ=D");
		СтандартныеВычетыСтрока.Параметры.СтандартныеВычетыОснование = Вычет.СтандартныеВычетыОснование;
		
		ВыводимыеОбласти.Добавить(СтандартныеВычетыСтрока);
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(СтандартныеВычетыШапка);
		КонецЕсли;
		
		ДокументРезультат.Вывести(СтандартныеВычетыСтрока);
		ЕстьПравоНаВычеты = Истина;
	КонецЦикла;	
	
	ВыборкаСоциальныеВычеты.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	Если ВыборкаСоциальныеВычеты.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		
		ВыборкаПоФизЛицу = ВыборкаСоциальныеВычеты.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаПоФизЛицу.Выбрать();
			
			ВыводимыеОбласти.Добавить(СоциальныеВычетыЗаголовок);
			ВыводимыеОбласти.Добавить(СоциальныеВычетыШапка);
			ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
			
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			КонецЕсли;	
			
			ДокументРезультат.Вывести(СоциальныеВычетыЗаголовок);
			ДокументРезультат.Вывести(СоциальныеВычетыШапка);
			
			Пока ВыборкаДетали.Следующий() Цикл
				ВыводимыеОбласти.Очистить();
				СоциальныеВычетыСтрока.Параметры.СоцВычетыКод = ВыборкаДетали.КодВычетаКод;
				СоциальныеВычетыСтрока.Параметры.СоцВычетыРазмер = ВыборкаДетали.Размер;
				СоциальныеВычетыСтрока.Параметры.СоцВычетыДата = Формат(ВыборкаДетали.Дата, "ДЛФ=D");
				
				ВыводимыеОбласти.Добавить(СоциальныеВычетыСтрока);
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(СоциальныеВычетыШапка);
				КонецЕсли;
				
				ДокументРезультат.Вывести(СоциальныеВычетыСтрока);
				ЕстьПравоНаВычеты = Истина;
			КонецЦикла;
		КонецЕсли;	
	КонецЕсли;	
	
	Если Не ЕстьПравоНаВычеты Тогда
		ДокументРезультат.Вывести(ОбластьПустыеВычеты);
	КонецЕсли;	
	
	Если ВыборкаУведомления.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		
		ВыводимыеОбласти.Очистить();
		
		ВыводимыеОбласти.Добавить(ИмущественныйВычетУведомление);
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		ВыборкаПоФизЛицу = ВыборкаУведомления.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Если ВыборкаПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаПоФизЛицу.Выбрать();
			
			Если ВыборкаДетали.Следующий() Тогда
				ИмущественныйВычетУведомление.Параметры.Заполнить(ВыборкаДетали);
				ИмущественныйВычетУведомление.Параметры.ДатаУведомления = Формат(ВыборкаДетали.ДатаУведомления, "ДЛФ=D");
				ДокументРезультат.Вывести(ИмущественныйВычетУведомление);
			КонецЕсли;
		КонецЕсли;	
	КонецЕсли;	
	
	ВыборкаДоходовПоМесяцамПоРазделам.Сбросить();
	
	ЕстьДанныеПоДоходам = Ложь;
	Если ВыборкаДоходовПоМесяцамПоРазделам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц  = ВыборкаДоходовПоМесяцамПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			
			ЕстьДанныеПоДоходам = Истина;
			ТаблицаПоНалогамИтоги.Очистить();
			
			ДанныеОНалогахНачисленныхПоРегистрации = Новый Соответствие;
			ДанныеОбАвансахЗачтенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахУдержанныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахВозвращенныхПоРегистрации = Новый Соответствие;
			ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации = Новый Соответствие;
			ДанныеОНалогахПеречисленныхПоРегистрации = Новый Соответствие;
			
			ВыборкаРегистраций = ВыборкаФизЛиц.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаРегистраций.Следующий() Цикл
				
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаРегистраций.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					Раздел4.Параметры.Заполнить(СтрокаРегистрации);
				КонецЕсли;
				
				ВыводимыеОбласти.Очистить();
				
				ВыводимыеОбласти.Добавить(Раздел4);
				ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);				
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				КонецЕсли;
				
				ДокументРезультат.Вывести(Раздел4);
				
				ВыборкаПоРазделам = ВыборкаРегистраций.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
				
				СуммаДоходаДоРезидентстваНарастающийИтог = 0;
				ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = 0;
				
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка13", "Раздел") Тогда
					
					ВычетыПоСтавке13 = Новый Соответствие;
					ВыборкаВычетовПоСтавке13.Сбросить();
					Если ВыборкаВычетовПоСтавке13.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаВычетовПоСтавке13ПоФизЛицам = ВыборкаВычетовПоСтавке13.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаВычетовПоСтавке13ПоФизЛицам.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаВычетовПоСтавке13Регистрация = ВыборкаВычетовПоСтавке13ПоФизЛицам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетовПоСтавке13Регистрация.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
								ВыборкаДетали = ВыборкаВычетовПоСтавке13Регистрация.Выбрать();
								СуммаВычетаИтог = 0;
								Пока ВыборкаДетали.Следующий() Цикл 
									СуммаВычетаИтог = ВыборкаДетали.СуммаВычета + СуммаВычетаИтог;
									ВычетыПоСтавке13.Вставить(ВыборкаДетали.Месяц, СуммаВычетаИтог);		
								КонецЦикла;	
							КонецЕсли;
						КонецЕсли;	
					КонецЕсли;	
					
					ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Заголовок);
					ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Шапка);
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						
						СуммаДоходаНарастающийИтог = 0;
						СуммаВычетовНарастающийИтог = 0;
						ОблагаемаяСуммаДоходаНарастающийИтог = 0;
						НалоговаяБаза = 0;
						СуммаВычетовСНачалаПериода = 0;
						СтавкаНалога = 0.13;
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							ВыводимыеОбласти.Очистить();
							
							ОбластьНалогПоСтавке13Группа = Новый ТабличныйДокумент;
							Если ЗначениеЗаполнено(ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства) Тогда
								ЗаполнитьЗначенияСвойств(РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры,ВыборкаПоМесяцамНалоговогоПериода);
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалоговаяБазаДоРезидентства = НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
								РасчетыНалогаПоСтавке13БылоПоСтавке30.Параметры.НалогНачисленоДоРезидентства = Окр((НалоговаяБаза + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства) * СтавкаНалога);
								ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13БылоПоСтавке30);
								СуммаДоходаДоРезидентстваНарастающийИтог = СуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДоходаДоРезидентства;
							КонецЕсли;
							
							СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаДохода;
							СуммаВычетовНарастающийИтог = СуммаВычетовНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.СуммаВычета;
							ОблагаемаяСуммаДоходаНарастающийИтог = ОблагаемаяСуммаДоходаНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДохода;
							ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог = ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог + ВыборкаПоМесяцамНалоговогоПериода.ОблагаемаяСуммаДоходаДоРезидентства;
							
							СуммаВычетовСНачалаПериода = ?(ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода) = Неопределено, СуммаВычетовСНачалаПериода, ВычетыПоСтавке13.Получить(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода));
							
							НалоговаяБаза = ОблагаемаяСуммаДоходаНарастающийИтог -  СуммаВычетовСНачалаПериода + ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог;
							
							РасчетыНалогаПоСтавке13МесяцГруппа.Параметры.Месяц = Формат(ВыборкаПоМесяцамНалоговогоПериода.МесяцНалоговогоПериода, "ДФ=ММММ");
							
							ОбластьНалогПоСтавке13Группа.Вывести(РасчетыНалогаПоСтавке13МесяцГруппа);
							
							ВыводимыеОбласти.Добавить(ОбластьНалогПоСтавке13Группа);
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								РасчетыНалогаПоСтавке13Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								РасчетыНалогаПоСтавке13Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								
								ОбластьДоходыПоСтавке13 = Новый ТабличныйДокумент;
								ОбластьДоходыПоСтавке13.Вывести(РасчетыНалогаПоСтавке13Строка);
								
								ВыводимыеОбласти.Добавить(ОбластьДоходыПоСтавке13);		
								
							КонецЦикла;	
							
							РасчетыНалогаПоСтавке13Итог.Параметры.Заполнить(ВыборкаПоМесяцамНалоговогоПериода);
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаДоходаНарастающийИтог = СуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетовНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаНарастающийИтог;
							РасчетыНалогаПоСтавке13Итог.Параметры.НалоговаяБаза = НалоговаяБаза;
							РасчетыНалогаПоСтавке13Итог.Параметры.НалогНачислено = Окр(НалоговаяБаза * СтавкаНалога);
							
							ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Итог);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
								ДокументРезультат.Вывести(РасчетыНалогаПоСтавке13Шапка);
							КонецЕсли;
							
							Для Каждого Область Из ВыводимыеОбласти Цикл
								ДокументРезультат.Вывести(Область);
							КонецЦикла;	
							
						КонецЦикла;
						
						СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
						СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
						СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка13;
						СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоРазделам.СуммаДохода + СуммаДоходаДоРезидентстваНарастающийИтог;
						СтрокаТаблицыИтогов.НалоговаяБаза = НалоговаяБаза;
						
					КонецЦикла;
					
					ВыборкаВычетыПоМесяцамПоВидам.Сбросить();
					
					ВыводимыеОбласти.Очистить();
					Если ВыборкаВычетыПоМесяцамПоВидам.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
						ВыборкаВычетыПоФизЛицу = ВыборкаВычетыПоМесяцамПоВидам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						Если ВыборкаВычетыПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
							ВыборкаВычетыПоРегистрации = ВыборкаВычетыПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Если ВыборкаВычетыПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда 
								
								ВыводилиЗаголовок = Ложь;
								
								ДоходИтог = 0;
								СуммаВычетаНарастающийИтог = 0;
								
								ВыборкаПоНалоговымБазам = ВыборкаВычетыПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
									ВыборкаВычетыПоМесяцам = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
									Пока ВыборкаВычетыПоМесяцам.Следующий() Цикл
										ВыводимыеОбласти.Очистить();
										
										Если Не ВыводилиЗаголовок Тогда
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыЗаголовок);
											ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапка);
										КонецЕсли;
										
										ДоходИтог = ДоходИтог + ВыборкаВычетыПоМесяцам.СуммаДохода;
										
										ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Месяц = Формат(ВыборкаВычетыПоМесяцам.Месяц, "ДФ=ММММ");	
										ПредоставленныеВычетыШапкаМесяцГруппа.Параметры.Доход = Формат(ДоходИтог, "ЧДЦ=2");
										
										ВыводимыеОбласти.Добавить(ПредоставленныеВычетыШапкаМесяцГруппа);
										
										ВыборкаВычетыДетали = ВыборкаВычетыПоМесяцам.Выбрать();
										
										Пока ВыборкаВычетыДетали.Следующий() Цикл
											
											СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог + ВыборкаВычетыДетали.СуммаВычета;
											ПредоставленныеВычетыСтрока.Параметры.Заполнить(ВыборкаВычетыДетали);
											
											ОбластьПредоставленныеВычеты = Новый ТабличныйДокумент;
											ОбластьПредоставленныеВычеты.Вывести(ПредоставленныеВычетыСтрока);
											ВыводимыеОбласти.Добавить(ОбластьПредоставленныеВычеты);	
											
										КонецЦикла;	
										
										ПредоставленныеВычетыИтог.Параметры.СуммаВычета = ВыборкаВычетыПоМесяцам.СуммаВычета;
										ПредоставленныеВычетыИтог.Параметры.СуммаВычетаНарастающийИтог = СуммаВычетаНарастающийИтог;
										
										ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтог);
										
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											Если ВыводилиЗаголовок Тогда
												ДокументРезультат.Вывести(ПредоставленныеВычетыШапка);
											КонецЕсли;
										КонецЕсли;
										
										Для Каждого Область Из ВыводимыеОбласти Цикл
											ДокументРезультат.Вывести(Область);
										КонецЦикла;
										
										ВыводилиЗаголовок = Истина;
										
									КонецЦикла;	
								КонецЦикла;	
								
							КонецЕсли;
						КонецЕсли;		
					КонецЕсли;	
					
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка30", "Раздел") Тогда
					
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ДокументРезультат.Вывести(НалогПоСтавке30Заголовок);
					ДокументРезультат.Вывести(НалогПоСтавке30Шапка);
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								
								НалогПоСтавке30Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке30Строка.Параметры.ДатаПолученияДохода = Формат(ВыборкаПоДатамПолученияДохода.ДатаПолученияДохода, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке30Строка.Параметры.МесяцНачисления = Формат(ВыборкаПоДатамПолученияДохода.МесяцНачисления, "ДФ=ММММ");
								НалогПоСтавке30Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке30Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке30Строка);
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ВыводимыеОбласти.Добавить(НалогПоСтавке30Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке30Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке30Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке30Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке30Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						ВыводимыеОбласти.Очистить();
						ВыводимыеОбласти.Добавить(НалогПоСтавке30Итог);
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ВыводимыеОбласти.Добавить(НалогПоСтавке30Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке30Итог);
					КонецЦикла;
					
					Если СуммаДоходаИтог > СуммаДоходаДоРезидентстваНарастающийИтог Тогда
						СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
						СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
						СтрокаТаблицыИтогов.Ставка = Перечисления.НДФЛСтавки.Ставка30;
						СтрокаТаблицыИтогов.ОбщаяСуммаДохода = СуммаДоходаИтог - СуммаДоходаДоРезидентстваНарастающийИтог;
						СтрокаТаблицыИтогов.НалоговаяБаза = ОблагаемаяСуммаДоходаИтог - Мин(ОблагаемаяСуммаДоходаИтог,ОблагаемаяСуммаДоходаДоРезидентстваНарастающийИтог);
					КонецЕсли;
				КонецЕсли;	
				
				ВыборкаПоРазделам.Сбросить();
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаПоРазделам.НайтиСледующий("Раздел4_Ставка35_15_9", "Раздел") Тогда
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Заголовок);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Шапка);
					ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
					
					Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
						ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					КонецЕсли;
					
					ВыборкаПоНалоговымБазам = ВыборкаПоРазделам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
						ДокументРезультат.Вывести(НалогПоСтавке9Заголовок);
						ДокументРезультат.Вывести(НалогПоСтавке9Шапка);
						
						ВыборкаПоМесяцамНалоговогоПериода = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						
						СуммаДоходаИтог = 0;
						СуммаВычетовИтог = 0;
						ОблагаемаяСуммаДоходаИтог = 0;
						НалогНачисленоИтог = 0;
						
						Пока ВыборкаПоМесяцамНалоговогоПериода.Следующий() Цикл
							
							ВыборкаПоДатамПолученияДохода = ВыборкаПоМесяцамНалоговогоПериода.Выбрать();
							
							Пока ВыборкаПоДатамПолученияДохода.Следующий() Цикл
								ВыводимыеОбласти.Очистить();
								НалогПоСтавке9Строка.Параметры.Заполнить(ВыборкаПоДатамПолученияДохода);
								НалогПоСтавке9Строка.Параметры.ДатаНачисления = Формат(ВыборкаПоДатамПолученияДохода.ДатаНачисления, "ДЛФ=D");
								НалогПоСтавке9Строка.Параметры.ДатаВыплаты = Формат(ВыборкаПоДатамПолученияДохода.ДатаВыплаты, "ДЛФ=D");
								
								НалогНачислено = Окр(ВыборкаПоДатамПолученияДохода.НалогНачислено); 
								НалогПоСтавке9Строка.Параметры.НалогНачислено = НалогНачислено;
								
								ВыводимыеОбласти.Добавить(НалогПоСтавке9Строка);
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ВыводимыеОбласти.Добавить(НалогПоСтавке9Шапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПоСтавке9Строка);	
								
								СуммаДоходаИтог = СуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СуммаВычетовИтог = СуммаВычетовИтог + ВыборкаПоДатамПолученияДохода.СуммаВычета;
								ОблагаемаяСуммаДоходаИтог = ОблагаемаяСуммаДоходаИтог + ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								НалогНачисленоИтог = НалогНачисленоИтог + НалогНачислено;
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаПоДатамПолученияДохода.Ставка;
								СтрокаТаблицыИтогов.ОбщаяСуммаДохода = ВыборкаПоДатамПолученияДохода.СуммаДохода;
								СтрокаТаблицыИтогов.НалоговаяБаза = ВыборкаПоДатамПолученияДохода.ОблагаемаяСуммаДохода;
								
							КонецЦикла;	
						КонецЦикла;
						НалогПоСтавке9Итог.Параметры.СуммаДохода = СуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.СуммаВычета = СуммаВычетовИтог;
						НалогПоСтавке9Итог.Параметры.ОблагаемаяСуммаДохода = ОблагаемаяСуммаДоходаИтог;
						НалогПоСтавке9Итог.Параметры.НалогНачислено = НалогНачисленоИтог;
						
						Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПоСтавке9Итог) Тогда
							ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							ВыводимыеОбласти.Добавить(НалогПоСтавке9Шапка);
						КонецЕсли;
						
						ДокументРезультат.Вывести(НалогПоСтавке9Итог);
					КонецЦикла;
					
				КонецЕсли;	
				
				ВыборкаНалогиНачисленныеИтоги.Сбросить();
				
				ДанныеОНалогахНачисленныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиНачисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиНачисленныеИтогиПоФизЛицу = ВыборкаНалогиНачисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиНачисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиНачисленныеИтогиПоРегистрации = ВыборкаНалогиНачисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиНачисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ИсчисленоЗаголовок);
							ВыводимыеОбласти.Добавить(ИсчисленоШапка);
							ВыводимыеОбласти.Добавить(ИсчисленоСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ИсчисленоЗаголовок);
							ДокументРезультат.Вывести(ИсчисленоШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиНачисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиНачисленныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиНачисленныеДетали.Следующий() Цикл
									
									ИсчисленоСтрока.Параметры.Месяц = Формат(ВыборкаНалогиНачисленныеДетали.Месяц, ?(НалогПоСтавке13ИсчисленПомесячно,"ДФ=ММММ","ДЛФ=D"));
									ИсчисленоСтрока.Параметры.Дата = Формат(ВыборкаНалогиНачисленныеДетали.Дата, "ДЛФ=D");
									ИсчисленоСтрока.Параметры.Ставка = ВыборкаНалогиНачисленныеДетали.Ставка;
									ИсчисленоСтрока.Параметры.Сумма =  ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ИсчисленоСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ИсчисленоШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ИсчисленоСтрока);
									
									Если ВыборкаНалогиНачисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаНалогиНачисленныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
										СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
									Иначе
										СтавкаИтогов = ВыборкаНалогиНачисленныеДетали.Ставка
									КонецЕсли;
									Если ДанныеОНалогахНачисленныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОНалогахНачисленныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаНалогиНачисленныеДетали.НалогНачислено);
									Иначе
										ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] = ДанныеОНалогахНачисленныхПоСтавкам[СтавкаИтогов] + ВыборкаНалогиНачисленныеДетали.НалогНачислено;
									КонецЕсли;	
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОНалогахНачисленныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахНачисленныхПоСтавкам); 
				
				ВыборкаАвансыЗачтенныеИтоги.Сбросить();
				
				ДанныеОбАвансахЗачтенныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаАвансыЗачтенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаАвансыЗачтенныеИтогиПоФизЛицу = ВыборкаАвансыЗачтенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаАвансыЗачтенныеИтогиПоРегистрации = ВыборкаАвансыЗачтенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаАвансыЗачтенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовЗаголовок);
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовШапка);
							ВыводимыеОбласти.Добавить(ЗачтеноАвансовСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ЗачтеноАвансовЗаголовок);
							ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаАвансыЗачтенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаАвансыЗачтенныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаАвансыЗачтенныеДетали.Следующий() Цикл
									
									ЗачтеноАвансовСтрока.Параметры.Месяц = Формат(ВыборкаАвансыЗачтенныеДетали.Месяц, "ДФ=ММММ");
									ЗачтеноАвансовСтрока.Параметры.Дата = Формат(ВыборкаАвансыЗачтенныеДетали.Дата, "ДЛФ=D");
									ЗачтеноАвансовСтрока.Параметры.Ставка = ВыборкаАвансыЗачтенныеДетали.Ставка;
									ЗачтеноАвансовСтрока.Параметры.Сумма =  ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ЗачтеноАвансовСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ЗачтеноАвансовШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ЗачтеноАвансовСтрока);
									
									Если ВыборкаАвансыЗачтенныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ВыборкаАвансыЗачтенныеДетали.СтавкаПоИтогамГода = Перечисления.НДФЛСтавки.Ставка13 Тогда
										СтавкаИтогов = Перечисления.НДФЛСтавки.Ставка13
									Иначе
										СтавкаИтогов = ВыборкаАвансыЗачтенныеДетали.Ставка
									КонецЕсли;
									Если ДанныеОбАвансахЗачтенныхПоСтавкам.Получить(СтавкаИтогов) = Неопределено Тогда
										ДанныеОбАвансахЗачтенныхПоСтавкам.Вставить(СтавкаИтогов, ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов);
									Иначе
										ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] = ДанныеОбАвансахЗачтенныхПоСтавкам[СтавкаИтогов] + ВыборкаАвансыЗачтенныеДетали.ЗачтеноАвансов;
									КонецЕсли;	
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;	
				
				ДанныеОбАвансахЗачтенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОбАвансахЗачтенныхПоСтавкам); 
				
				ВыборкаНалогиУдержанныеИтоги.Сбросить();
				
				ДанныеОНалогахУдержанныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиУдержанныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиУдержанныеИтогиПоФизЛицу = ВыборкаНалогиУдержанныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиУдержанныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиУдержанныеИтогиПоРегистрации = ВыборкаНалогиУдержанныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиУдержанныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(УдержаноЗаголовок);
							ВыводимыеОбласти.Добавить(УдержаноШапка);
							ВыводимыеОбласти.Добавить(УдержаноСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(УдержаноЗаголовок);
							ДокументРезультат.Вывести(УдержаноШапка);
							КЗачетуПоСтавке13 = 0;
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиУдержанныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиУдержанныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиУдержанныеДетали.Следующий() Цикл
									
									Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка13 И ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
										УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
										Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
											ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
											ДокументРезультат.Вывести(УдержаноШапка);
										КонецЕсли;
										ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
										КЗачетуПоСтавке13 = 0;
									КонецЕсли;
									
									УдержаноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиУдержанныеДетали.Месяц, ?(НалогПоСтавке13ИсчисленПомесячно,"ДФ=ММММ","ДЛФ=D"));
									УдержаноСтрока.Параметры.Дата = Формат(ВыборкаНалогиУдержанныеДетали.Дата, "ДЛФ=D");
									УдержаноСтрока.Параметры.Ставка = ВыборкаНалогиУдержанныеДетали.Ставка;
									УдержаноСтрока.Параметры.Сумма =  ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									Если Не НалогПоСтавке13ИсчисленПомесячно Тогда
										УдержаноСтрока.Параметры.СрокПеречисления =  ВыборкаНалогиУдержанныеДетали.СрокПеречисления;
									КонецЕсли;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(УдержаноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(УдержаноСтрока);
									
									Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(ВыборкаНалогиУдержанныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахУдержанныхПоСтавкам.Вставить(ВыборкаНалогиУдержанныеДетали.Ставка, ВыборкаНалогиУдержанныеДетали.НалогУдержано);
									Иначе
										ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] = ДанныеОНалогахУдержанныхПоСтавкам[ВыборкаНалогиУдержанныеДетали.Ставка] + ВыборкаНалогиУдержанныеДетали.НалогУдержано;
									КонецЕсли;	
									
									Если ВыборкаНалогиУдержанныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ЗначениеЗаполнено(ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13) Тогда
										КЗачетуПоСтавке13 = КЗачетуПоСтавке13 + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка30) <> Неопределено Тогда
											ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] - ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										КонецЕсли;
										Если ДанныеОНалогахУдержанныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка13) = Неопределено Тогда
											ДанныеОНалогахУдержанныхПоСтавкам.Вставить(Перечисления.НДФЛСтавки.Ставка13, ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13);
										Иначе
											ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] = ДанныеОНалогахУдержанныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] + ВыборкаНалогиУдержанныеДетали.КЗачетуПоСтавке13;
										КонецЕсли;	
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
							
							Если ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
								УдержаноБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноБылоПоСтавке30) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(УдержаноШапка);
								КонецЕсли;
								ДокументРезультат.Вывести(УдержаноБылоПоСтавке30);
							КонецЕсли;
							
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;		
				
				ДанныеОНалогахУдержанныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахУдержанныхПоСтавкам);
				
				ВыборкаНалогиВозвращенныеИтоги.Сбросить();
				
				ДанныеОНалогахВозвращенныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиВозвращенныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВозвращенныеИтогиПоФизЛицу = ВыборкаНалогиВозвращенныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВозвращенныеИтогиПоРегистрации = ВыборкаНалогиВозвращенныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВозвращенныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ВозвращеноЗаголовок);
							ВыводимыеОбласти.Добавить(УдержаноШапка);
							ВыводимыеОбласти.Добавить(ВозвращеноСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ВозвращеноЗаголовок);
							ДокументРезультат.Вывести(ВозвращеноШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиВозвращенныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиВозвращенныеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиВозвращенныеДетали.Следующий() Цикл
									ВозвращеноСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВозвращенныеДетали.Месяц, "ДФ=ММММ");
									ВозвращеноСтрока.Параметры.Дата = Формат(ВыборкаНалогиВозвращенныеДетали.Дата, "ДЛФ=D");
									ВозвращеноСтрока.Параметры.Ставка = ВыборкаНалогиВозвращенныеДетали.Ставка;
									ВозвращеноСтрока.Параметры.Сумма =  ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВозвращеноСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ВозвращеноШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ВозвращеноСтрока);
									
									Если ДанныеОНалогахВозвращенныхПоСтавкам.Получить(ВыборкаНалогиВозвращенныеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахВозвращенныхПоСтавкам.Вставить(ВыборкаНалогиВозвращенныеДетали.Ставка, ВыборкаНалогиВозвращенныеДетали.НалогВозвращено);
									Иначе
										ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] = ДанныеОНалогахВозвращенныхПоСтавкам[ВыборкаНалогиВозвращенныеДетали.Ставка] + ВыборкаНалогиВозвращенныеДетали.НалогВозвращено;
									КонецЕсли;	
									
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахВозвращенныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахВозвращенныхПоСтавкам);
				
				ВыборкаНалогиВзысканиеИтоги.Сбросить();
				
				ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиВзысканиеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиВзысканиеИтогиПоФизЛицу = ВыборкаНалогиВзысканиеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					
					Если ВыборкаНалогиВзысканиеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиВзысканиеИтогиПоРегистрации = ВыборкаНалогиВзысканиеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиВзысканиеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеЗаголовок);
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеШапка);
							ВыводимыеОбласти.Добавить(ПереданоНаВзысканиеСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(ПереданоНаВзысканиеЗаголовок);
							ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
							
							ВыборкаПоНалоговымБазам = ВыборкаНалогиВзысканиеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							Пока ВыборкаПоНалоговымБазам.Следующий() Цикл
								ВыборкаНалогиВзысканиеДетали = ВыборкаПоНалоговымБазам.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
								Пока ВыборкаНалогиВзысканиеДетали.Следующий() Цикл
									ПереданоНаВзысканиеСтрока.Параметры.Месяц = Формат(ВыборкаНалогиВзысканиеДетали.Месяц, "ДФ=ММММ");
									ПереданоНаВзысканиеСтрока.Параметры.Дата = Формат(ВыборкаНалогиВзысканиеДетали.Дата, "ДЛФ=D");
									ПереданоНаВзысканиеСтрока.Параметры.Ставка = ВыборкаНалогиВзысканиеДетали.Ставка;
									ПереданоНаВзысканиеСтрока.Параметры.Сумма =  ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПереданоНаВзысканиеСтрока) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(ПереданоНаВзысканиеШапка);
									КонецЕсли;
									
									ДокументРезультат.Вывести(ПереданоНаВзысканиеСтрока);
									
									Если ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Получить(ВыборкаНалогиВзысканиеДетали.Ставка) = Неопределено Тогда
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам.Вставить(ВыборкаНалогиВзысканиеДетали.Ставка, ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание);
									Иначе
										ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] = ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам[ВыборкаНалогиВзысканиеДетали.Ставка] + ВыборкаНалогиВзысканиеДетали.НалогПереданоНаВзыскание;
									КонецЕсли;
								КонецЦикла;
							КонецЦикла;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахПереданныхНаВзысканиеПоСтавкам);
				
				ВыборкаНалогиПеречисленныеИтоги.Сбросить();
				
				ДанныеОНалогахПеречисленныхПоСтавкам = Новый Соответствие;
				
				ВыводимыеОбласти.Очистить();
				Если ВыборкаНалогиПеречисленныеИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
					ВыборкаНалогиПеречисленныеИтогиПоФизЛицу = ВыборкаНалогиПеречисленныеИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
					Если ВыборкаНалогиПеречисленныеИтогиПоФизЛицу.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
						ВыборкаНалогиПеречисленныеИтогиПоРегистрации = ВыборкаНалогиПеречисленныеИтогиПоФизЛицу.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
						Если ВыборкаНалогиПеречисленныеИтогиПоРегистрации.НайтиСледующий(ВыборкаРегистраций.РегистрацияВНалоговомОргане, "РегистрацияВНалоговомОргане") Тогда
							
							ВыборкаНалогиПеречисленныеДетали = ВыборкаНалогиПеречисленныеИтогиПоРегистрации.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
							
							ВыводимыеОбласти.Добавить(НалогПеречисленныйЗаголовок);
							ВыводимыеОбласти.Добавить(НалогПеречисленныйШапка);
							ВыводимыеОбласти.Добавить(НалогПеречисленныйСтрока);
							
							Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
								ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
							КонецЕсли;
							
							ДокументРезультат.Вывести(НалогПеречисленныйЗаголовок);
							ДокументРезультат.Вывести(НалогПеречисленныйШапка);
							КЗачетуПоСтавке13 = 0;
							ПредыдущийМесяц = "";
							Пока ВыборкаНалогиПеречисленныеДетали.Следующий() Цикл
								
								Если ВыборкаНалогиПеречисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка13 И ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
									НалогПеречисленныйБылоПоСтавке30.Параметры.Сумма =  КЗачетуПоСтавке13;
									Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйБылоПоСтавке30) Тогда
										ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
										ДокументРезультат.Вывести(НалогПеречисленныйШапка);
									КонецЕсли;
									ДокументРезультат.Вывести(НалогПеречисленныйБылоПоСтавке30);
									КЗачетуПоСтавке13 = 0;
								КонецЕсли;
								
								НалогПеречисленныйСтрока.Параметры.Месяц = Формат(ВыборкаНалогиПеречисленныеДетали.Месяц, "ДФ=ММММ");
								НалогПеречисленныйСтрока.Параметры.Дата = Формат(ВыборкаНалогиПеречисленныеДетали.Дата, "ДЛФ=D");
								НалогПеречисленныйСтрока.Параметры.Ставка = ВыборкаНалогиПеречисленныеДетали.Ставка;
								НалогПеречисленныйСтрока.Параметры.Сумма =  ВыборкаНалогиПеречисленныеДетали.Сумма;
								НалогПеречисленныйСтрока.Параметры.РеквизитыПП = ВыборкаНалогиПеречисленныеДетали.РеквизитыПП;
								
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйСтрока) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПеречисленныйШапка);
								КонецЕсли;
								
								ДокументРезультат.Вывести(НалогПеречисленныйСтрока);
								
								СтрокаТаблицыИтогов = ТаблицаПоНалогамИтоги.Добавить();
								СтрокаТаблицыИтогов.РегистрацияВНалоговомОргане = ВыборкаРегистраций.РегистрацияВНалоговомОргане;
								СтрокаТаблицыИтогов.Ставка = ВыборкаНалогиПеречисленныеДетали.Ставка;
								
								Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(ВыборкаНалогиПеречисленныеДетали.Ставка) = Неопределено Тогда
									ДанныеОНалогахПеречисленныхПоСтавкам.Вставить(ВыборкаНалогиПеречисленныеДетали.Ставка, ВыборкаНалогиПеречисленныеДетали.Сумма);
								Иначе
									ДанныеОНалогахПеречисленныхПоСтавкам[ВыборкаНалогиПеречисленныеДетали.Ставка] = ДанныеОНалогахПеречисленныхПоСтавкам[ВыборкаНалогиПеречисленныеДетали.Ставка] + ВыборкаНалогиПеречисленныеДетали.Сумма;
								КонецЕсли;
								
								Если ПредыдущийМесяц <> ВыборкаНалогиПеречисленныеДетали.Месяц И ВыборкаНалогиПеречисленныеДетали.Ставка = Перечисления.НДФЛСтавки.Ставка30 И ЗначениеЗаполнено(ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13) Тогда
									ПредыдущийМесяц = ВыборкаНалогиПеречисленныеДетали.Месяц;
									КЗачетуПоСтавке13 = КЗачетуПоСтавке13 + ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка30) <> Неопределено Тогда
										ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] = ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка30] - ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									КонецЕсли;
									Если ДанныеОНалогахПеречисленныхПоСтавкам.Получить(Перечисления.НДФЛСтавки.Ставка13) = Неопределено Тогда
										ДанныеОНалогахПеречисленныхПоСтавкам.Вставить(Перечисления.НДФЛСтавки.Ставка13, ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13);
									Иначе
										ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] = ДанныеОНалогахПеречисленныхПоСтавкам[Перечисления.НДФЛСтавки.Ставка13] + ВыборкаНалогиПеречисленныеДетали.КЗачетуПоСтавке13;
									КонецЕсли;	
								КонецЕсли;
								
							КонецЦикла;
							
							Если ЗначениеЗаполнено(КЗачетуПоСтавке13) Тогда
								НалогПеречисленныйБылоПоСтавке30.Параметры.Сумма = КЗачетуПоСтавке13;
								Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, НалогПеречисленныйБылоПоСтавке30) Тогда
									ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
									ДокументРезультат.Вывести(НалогПеречисленныйШапка);
								КонецЕсли;
								ДокументРезультат.Вывести(НалогПеречисленныйБылоПоСтавке30);
							КонецЕсли;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
				
				ДанныеОНалогахПеречисленныхПоРегистрации.Вставить(ВыборкаРегистраций.РегистрацияВНалоговомОргане, ДанныеОНалогахПеречисленныхПоСтавкам);
			КонецЦикла;
			
		КонецЕсли;
	КонецЕсли;
	
	Если Не ЕстьДанныеПоДоходам Тогда
		ВыводимыеОбласти.Очистить();
		ВыводимыеОбласти.Добавить(Раздел4);
		
		Если СтатусНаКонецПериода = СтатусРезидент Тогда
			ВыводимыеОбласти.Добавить(РасчетыНалогаПоСтавке13Заголовок);
		Иначе
			ВыводимыеОбласти.Добавить(НалогПоСтавке30Заголовок);
		КонецЕсли;	
		
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, УдержаноСтрока) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		
		Для Каждого Область Из ВыводимыеОбласти Цикл
			ДокументРезультат.Вывести(Область);
		КонецЦикла;	
	КонецЕсли;	
	
	ВыборкаВычетыИтоги.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиЗаголовок);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиШапка);
	ВыводимыеОбласти.Добавить(ПредоставленныеВычетыИтогиСтрока);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиЗаголовок);
	ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
	
	Если ВыборкаВычетыИтоги.НайтиСледующий(ГоловнаяОрганизация, "ГоловнаяОрганизация") Тогда
		ВыборкаФизЛиц  = ВыборкаВычетыИтоги.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Если ВыборкаФизЛиц.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
			ВыборкаДетали = ВыборкаФизЛиц.Выбрать();
			СуммаВычетаИтог = 0; 
			Пока ВыборкаДетали.Следующий() Цикл
				
				ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(ВыборкаДетали);	
				СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(ВыборкаДетали.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
				Если СтрокаРегистрации <> Неопределено Тогда
					ПредоставленныеВычетыИтогиСтрока.Параметры.Заполнить(СтрокаРегистрации);	
				КонецЕсли;
				
				Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиСтрока) Тогда
					ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
					ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
				КонецЕсли;
				
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
				СуммаВычетаИтог = СуммаВычетаИтог + ВыборкаДетали.СуммаВычета;
			КонецЦикла;
			ПредоставленныеВычетыИтогиИтог.Параметры.СуммаВычета = СуммаВычетаИтог;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ПредоставленныеВычетыИтогиИтог) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиШапка);
			КонецЕсли;
			
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиИтог);
		Иначе
			ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);
		КонецЕсли;
	Иначе 
		ДокументРезультат.Вывести(ПредоставленныеВычетыИтогиСтрока);	
	КонецЕсли;	
	
	ВыводимыеОбласти.Очистить();
	
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогЗаголовок);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыИтогШапка);
	ВыводимыеОбласти.Добавить(ОбщиеСуммыСтроки);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(ОбщиеСуммыИтогЗаголовок);
	ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
	
	ТаблицаПоНалогамИтоги.Свернуть("РегистрацияВНалоговомОргане, Ставка", "ОбщаяСуммаДохода, НалоговаяБаза");
	ТаблицаПоНалогамИтоги.Сортировать("РегистрацияВНалоговомОргане, Ставка");
	
	Для Каждого НалогиИтоги Из ТаблицаПоНалогамИтоги Цикл
		
		НалогиИсчисленныеПоРегистрации = ДанныеОНалогахНачисленныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиИсчисленныеПоРегистрации = Неопределено Тогда
			СуммаНалогаИсчисленная = 0;
		Иначе
			НалогиИсчисленныеПоСтавкам = НалогиИсчисленныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаИсчисленная = ?(НалогиИсчисленныеПоСтавкам = Неопределено, 0, НалогиИсчисленныеПоСтавкам);
		КонецЕсли;	
		
		АвансыЗачтенныеПоРегистрации = ДанныеОбАвансахЗачтенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если АвансыЗачтенныеПоРегистрации = Неопределено Тогда
			СуммаАвансовыхПлатежейЗачтенная = 0;
		Иначе
			АвансыЗачтенныеПоСтавкам = АвансыЗачтенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаАвансовыхПлатежейЗачтенная = ?(АвансыЗачтенныеПоСтавкам = Неопределено, 0, АвансыЗачтенныеПоСтавкам);
		КонецЕсли;	
		
		НалогиУдержанныеПоРегистрации = ДанныеОНалогахУдержанныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиУдержанныеПоРегистрации = Неопределено Тогда
			СуммаНалогаУдержанная = 0;
		Иначе
			НалогиУдержанныеПоСтавкам = НалогиУдержанныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаУдержанная = ?(НалогиУдержанныеПоСтавкам = Неопределено, 0, НалогиУдержанныеПоСтавкам);
		КонецЕсли;
		
		НалогиВозвращенныеПоРегистрации = ДанныеОНалогахВозвращенныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВозвращенныеПоРегистрации = Неопределено Тогда
			СуммаНалогаВозвращенная = 0;
		Иначе
			НалогиВозвращенныеПоСтавкам = НалогиВозвращенныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВозвращенная = ?(НалогиВозвращенныеПоСтавкам = Неопределено, 0, НалогиВозвращенныеПоСтавкам);
		КонецЕсли;
		
		СуммаНалогаУдержанная = СуммаНалогаУдержанная - СуммаНалогаВозвращенная;
		
		НалогиВзысканиеПоРегистрации = ДанныеОНалогахПереданныхНаВзысканиеПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиВзысканиеПоРегистрации = Неопределено Тогда
			СуммаНалогаВзыскание = 0;
		Иначе
			НалогиВзысканиеПоСтавкам = НалогиВзысканиеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаВзыскание = ?(НалогиВзысканиеПоСтавкам = Неопределено, 0, НалогиВзысканиеПоСтавкам);
		КонецЕсли;
		
		НалогиПеречисленныеПоРегистрации = ДанныеОНалогахПеречисленныхПоРегистрации.Получить(НалогиИтоги.РегистрацияВНалоговомОргане);
		
		Если НалогиПеречисленныеПоРегистрации = Неопределено Тогда
			СуммаНалогаПеречисленная = 0;
		Иначе
			НалогиПеречисленныеПоСтавкам = НалогиПеречисленныеПоРегистрации.Получить(НалогиИтоги.Ставка);
			СуммаНалогаПеречисленная = ?(НалогиПеречисленныеПоСтавкам = Неопределено, 0, НалогиПеречисленныеПоСтавкам);
		КонецЕсли;
		
		Если НалогиИтоги.ОбщаяСуммаДохода = 0 И НалогиИтоги.НалоговаяБаза = 0 И СуммаНалогаИсчисленная = 0 И СуммаНалогаУдержанная = 0 И СуммаНалогаПеречисленная = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтрокаРегистрации = ТаблицаРегистрацийВНО.Найти(НалогиИтоги.РегистрацияВНалоговомОргане,"РегистрацияВНалоговомОргане");
		Если СтрокаРегистрации <> Неопределено Тогда
			ОбщиеСуммыСтроки.Параметры.Заполнить(СтрокаРегистрации);
		КонецЕсли;
		
		ОбщиеСуммыСтроки.Параметры.Заполнить(НалогиИтоги);
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаИсчисленная = СуммаНалогаИсчисленная;
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаУдержанная = СуммаНалогаУдержанная;
		ОбщиеСуммыСтроки.Параметры.СуммаНалогаПеречисленная = СуммаНалогаПеречисленная;
		Если Год >= ДатаИзмененияНалогообложенияДивидендов Тогда
			ОбщиеСуммыСтроки.Параметры.СуммаАвансовыхПлатежейЗачтенная = СуммаАвансовыхПлатежейЗачтенная;
		КонецЕсли;
		СальдоПоНалогам = СуммаНалогаИсчисленная - СуммаАвансовыхПлатежейЗачтенная - СуммаНалогаУдержанная - СуммаНалогаВзыскание;
		
		Если СальдоПоНалогам > 0 Тогда 
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = СальдоПоНалогам;	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = 0;
		Иначе	
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаИзлишнеУдержанная = -СальдоПоНалогам;
			ОбщиеСуммыСтроки.Параметры.СуммаНалогаНеУдержанная = 0;
		КонецЕсли;	
		Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбщиеСуммыСтроки) Тогда
			ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
			ДокументРезультат.Вывести(ОбщиеСуммыИтогШапка);
		КонецЕсли;
		
		ДокументРезультат.Вывести(ОбщиеСуммыСтроки);
		
	КонецЦикла;	
	
	ВыборкаСправкиНДФЛ.Сбросить();
	
	ВыводимыеОбласти.Очистить();
	ВыводимыеОбласти.Добавить(Раздел7);
	ВыводимыеОбласти.Добавить(Раздел7Шапка);
	ВыводимыеОбласти.Добавить(Раздел7Справка);
	ВыводимыеОбласти.Добавить(Подписи);
	
	Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ВыводимыеОбласти) Тогда
		ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
	КонецЕсли;
	
	ДокументРезультат.Вывести(Раздел7);
	
	НаименованиеСправок = Новый Соответствие;
	НаименованиеСправок.Вставить(1, НСтр("ru = 'Налоговому органу о доходах';
										|en = 'Tax authority about income'"));
	НаименованиеСправок.Вставить(2, НСтр("ru = 'Налогоплательщику о доходах';
										|en = 'Taxpayer about income'"));
	НаименованиеСправок.Вставить(3, НСтр("ru = 'Налоговому органу о сумме задолженности, переданной на взыскание';
										|en = 'Tax authority about amount of debt transferred for collection'"));
	
	Если ВыборкаСправкиНДФЛ.НайтиСледующий(ФизическоеЛицо, "ФизическоеЛицо") Тогда
		ДокументРезультат.Вывести(Раздел7Шапка);
		ВыборкаПоСправкам = ВыборкаСправкиНДФЛ.Выбрать();
		Пока ВыборкаПоСправкам.Следующий() Цикл
			Раздел7Справка.Параметры.Заполнить(ВыборкаПоСправкам);
			Если ЗначениеЗаполнено(ВыборкаПоСправкам.РегистрацияВНалоговомОргане)Тогда
				Раздел7Справка.Параметры["ТипСправки"] = 
				СтрШаблон("%1 (%2)", НаименованиеСправок[ВыборкаПоСправкам.ТипСправки], 
				ВыборкаПоСправкам.РегистрацияВНалоговомОргане);
			Иначе
				Раздел7Справка.Параметры["ТипСправки"] = НаименованиеСправок[ВыборкаПоСправкам.ТипСправки];
			КонецЕсли;
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбщиеСуммыСтроки) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(Раздел7Шапка);
			КонецЕсли;
			ДокументРезультат.Вывести(Раздел7Справка);
		КонецЦикла;
	Иначе
		ДокументРезультат.Вывести(Раздел7Шапка);
		Для ТипСправки = 1 По 3 Цикл
			Раздел7Справка.Параметры["ТипСправки"] = НаименованиеСправок[ТипСправки];
			Если Не ОбщегоНазначения.ПроверитьВыводТабличногоДокумента(ДокументРезультат, ОбщиеСуммыСтроки) Тогда
				ДокументРезультат.ВывестиГоризонтальныйРазделительСтраниц();
				ДокументРезультат.Вывести(Раздел7Шапка);
			КонецЕсли;
			ДокументРезультат.Вывести(Раздел7Справка);
		КонецЦикла;
	КонецЕсли;
	
	Подписи.Параметры.ДатаПодписи = Формат(ДатаПодписи, "ДЛФ=D");
	Подписи.Параметры.ФИООтветственного = ДанныеОФизЛицеОрганизации.Ответственный_ФИО;
	Подписи.Параметры.ДолжностьОтветственного = ДанныеОФизЛицеОрганизации.Ответственный_Должность;
	
	ДокументРезультат.Вывести(Подписи);
	
КонецПроцедуры

Процедура ВыделитьСуммыПревышенияПредела(Знач ОблагаемыйДоходДоПредела, СтрокиРаспределения, СтрокиДоходовПревышающихПредел) 

	Если ОблагаемыйДоходДоПредела = 0 Или СтрокиРаспределения.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	ПараметрыРасчетаНДФЛПоПрогрессивнойШкале = УчетНДФЛ.ПараметрыРасчетаНДФЛПоПрогрессивнойШкале();
	ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.Вставить("СтавкаНалога", ПараметрыРасчетаНДФЛПоПрогрессивнойШкале.СтавкаЧислом * 100);
	
	ОблагаемыйДоходЗаДень = СтрокиРаспределения[0].ОблагаемыйДоходЗаДень;
	
	СтрокиДляРаспределения = Новый Массив;
	Для Каждого СтрокаТаблицы Из СтрокиРаспределения Цикл
		Если СтрокаТаблицы.ОписаниеДокументаСПревышением = 1 Тогда
			ОблагаемыйДоходЗаДень = ОблагаемыйДоходЗаДень - СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
			ОблагаемыйДоходДоПредела = ОблагаемыйДоходДоПредела - СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
		ИначеЕсли СтрокаТаблицы.ОписаниеДокументаСПревышением = 2 Тогда
			ОблагаемыйДоходЗаДень = ОблагаемыйДоходЗаДень - СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
		Иначе
			СтрокиДляРаспределения.Добавить(СтрокаТаблицы)
		КонецЕсли;
	КонецЦикла;
	
	Если ОблагаемыйДоходДоПредела = 0 Или ОблагаемыйДоходЗаДень = 0 Или СтрокиДляРаспределения.Количество() = 0 Тогда
		Возврат
	КонецЕсли;
	
	Если СтрокиДляРаспределения.Количество() = 1 Тогда
		СтрокаТаблицы = СтрокиДляРаспределения[0];
		СтрокаПревышения = СтрокиДоходовПревышающихПредел.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаПревышения, СтрокаТаблицы);
		СтрокаТаблицы.СуммаДохода = ОблагаемыйДоходДоПредела;
		Если СтрокаТаблицы.СуммаВычета <> 0 Тогда
			СтрокаТаблицы.СуммаВычета = Окр(СтрокаТаблицы.СуммаВычета * ОблагаемыйДоходДоПредела / ОблагаемыйДоходЗаДень, 2);
			СтрокаТаблицы.СуммаДохода = СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(СтрокаПревышения, ПараметрыРасчетаНДФЛПоПрогрессивнойШкале);
		СтрокаПревышения.СуммаДохода = СтрокаПревышения.СуммаДохода - СтрокаТаблицы.СуммаДохода;
		Если СтрокаПревышения.СуммаВычета <> 0 Тогда
			СтрокаПревышения.СуммаВычета = СтрокаПревышения.СуммаВычета - СтрокаТаблицы.СуммаВычета;
		КонецЕсли;
	Иначе
		
		МаксимальныйКоэффициент = 0;
		РаспределеннаяСумма = 0;
		РаспределенныеДоходы = Новый Соответствие;
		Для Каждого СтрокаТаблицы Из СтрокиДляРаспределения Цикл
			АбсолютноеЗначениеКоэффициента = (СтрокаТаблицы.СуммаДохода - СтрокаТаблицы.СуммаВычета) * (СтрокаТаблицы.СуммаДохода - СтрокаТаблицы.СуммаВычета);
			Если МаксимальныйКоэффициент < АбсолютноеЗначениеКоэффициента Тогда
				МаксимальныйКоэффициент = АбсолютноеЗначениеКоэффициента;
				СтрокаМаксимальногоКоэффициента = СтрокаТаблицы;
			КонецЕсли;
			СуммаСтроки = Окр(ОблагаемыйДоходДоПредела * (СтрокаТаблицы.СуммаДохода - СтрокаТаблицы.СуммаВычета) / ОблагаемыйДоходЗаДень, 2, 1);
			РаспределенныеДоходы.Вставить(СтрокаТаблицы, СуммаСтроки);
			РаспределеннаяСумма = РаспределеннаяСумма + СуммаСтроки;
		КонецЦикла;
		Если Не РаспределеннаяСумма = ОблагаемыйДоходДоПредела Тогда
			РаспределенныеДоходы.Вставить(СтрокаМаксимальногоКоэффициента, РаспределенныеДоходы[СтрокаМаксимальногоКоэффициента] + ОблагаемыйДоходДоПредела - РаспределеннаяСумма)
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из СтрокиДляРаспределения Цикл
			Если СтрокаТаблицы.СуммаДохода = СтрокаТаблицы.СуммаВычета Тогда
				 Продолжить;
			КонецЕсли;
			СтрокаПревышения = СтрокиДоходовПревышающихПредел.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаПревышения, СтрокаТаблицы);
			Если СтрокаТаблицы.СуммаВычета <> 0 И СтрокаТаблицы.СуммаДохода <> 0 Тогда
				СтрокаТаблицы.СуммаВычета = Окр(СтрокаТаблицы.СуммаВычета * РаспределенныеДоходы[СтрокаТаблицы] / (СтрокаТаблицы.СуммаДохода - СтрокаТаблицы.СуммаВычета), 2);
			КонецЕсли;
			СтрокаТаблицы.СуммаДохода = РаспределенныеДоходы[СтрокаТаблицы];
			Если СтрокаТаблицы.СуммаВычета <> 0 И СтрокаТаблицы.СуммаДохода <> 0 Тогда
				СтрокаТаблицы.СуммаДохода = СтрокаТаблицы.СуммаДохода + СтрокаТаблицы.СуммаВычета;
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(СтрокаПревышения, ПараметрыРасчетаНДФЛПоПрогрессивнойШкале);
			СтрокаПревышения.СуммаДохода = СтрокаПревышения.СуммаДохода - СтрокаТаблицы.СуммаДохода;
			Если СтрокаПревышения.СуммаВычета <> 0 Тогда
				СтрокаПревышения.СуммаВычета = СтрокаПревышения.СуммаВычета - СтрокаТаблицы.СуммаВычета;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли