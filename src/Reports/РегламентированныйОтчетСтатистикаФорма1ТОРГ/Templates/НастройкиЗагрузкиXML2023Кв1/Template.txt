// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
// * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
// * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//   поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//   нужно всегда использовать схему по умолчанию - указываем значение "null".
// * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
// Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
// поэтому обработчики используются для получения значений показателей, не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : false,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

#Область ПредОбработкаСхемыЗагрузки
	Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("02,07,17,41,71,77,93", ",") Цикл 
		УзлыСтрок = УзлыПоXPath(П.ДеревоДляЗагрузки, "//sections/section[@code='1']/row[@code='" + Элт + "']/@s1");
		
		ПрототипДобавляемогоУзла = УзлыСтрок[0].Родитель;
		ПрототипДобавляемогоУзла.Многострочность = Ложь;
		Для Каждого УзелСтроки Из ПрототипДобавляемогоУзла.Строки Цикл
			УзелСтроки.ЗначениеПоУмолчанию = "";
		КонецЦикла;
		Для НомУзла = 2 По 100 Цикл
			НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла.Родитель, ПрототипДобавляемогоУзла);
		КонецЦикла
	КонецЦикла;
	
	Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("02,84", ",") Цикл 
		УзлыСтрок = УзлыПоXPath(П.ДеревоДляЗагрузки, "//sections/section[@code='2']/row[@code='" + Элт + "']/@s1");
		
		ПрототипДобавляемогоУзла = УзлыСтрок[0].Родитель;
		ПрототипДобавляемогоУзла.Многострочность = Ложь;
		Для Каждого УзелСтроки Из ПрототипДобавляемогоУзла.Строки Цикл
			УзелСтроки.ЗначениеПоУмолчанию = "";
		КонецЦикла;
		Для НомУзла = 2 По 100 Цикл
			НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла.Родитель, ПрототипДобавляемогоУзла);
		КонецЦикла
	КонецЦикла;
	
	ПрототипДобавляемогоУзла = УзлыПоXPath(П.ДеревоДляЗагрузки, "//sections/section[@code='5']/row[@code='01']")[0];
	ПрототипДобавляемогоУзла.Многострочность = Ложь;
	Для Каждого УзелСтроки Из ПрототипДобавляемогоУзла.Строки Цикл
		УзелСтроки.ЗначениеПоУмолчанию = "";
	КонецЦикла;
	Для НомУзла = 2 По 100 Цикл
		НовыйУзелИзПрототипа = СкопированныйУзел(ПрототипДобавляемогоУзла.Родитель, ПрототипДобавляемогоУзла);
	КонецЦикла;
#КонецОбласти

#Область ПостОбработкаДокументаОтчета
	ДанныеРаздела = Неопределено;
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаФормаОтчета", ДанныеРаздела);
	
	Если ДанныеРаздела <> Неопределено Тогда
		ПолученныеДанные = "";
		ОО = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета("Отчет." + П.ДанныеОтчета.ДокументОтчетаОбъект.ИсточникОтчета + ".Форма." + П.ДанныеОтчета.ДокументОтчетаОбъект.ВыбраннаяФорма);
		МакетСоотв = ОО.ПолучитьМакет("Списки2019Кв1");
		Мкт = ОО.ПолучитьМакет("ФормаОтчета2019Кв1_ФормаОтчета");
		ТЗ = Новый Соответствие;
		ТЗИ = Новый Соответствие;
		Для Стр = 1 По МакетСоотв.ВысотаТаблицы Цикл 
			ТЗ.Вставить(МакетСоотв.Область(Стр, 1, Стр, 1).Текст, МакетСоотв.Область(Стр, 2, Стр, 2).Текст);
		КонецЦикла;
		
		Для Стр = 1 По Мкт.ВысотаТаблицы Цикл
			Если ЗначениеЗаполнено(ТЗ[Мкт.Область(Стр, 5, Стр, 5).Текст]) Тогда 
				ТЗИ[Мкт.Область(Стр, 5, Стр, 5).Текст] = Мкт.Область(Стр, 6, Стр, 6).Имя;
			КонецЕсли;
		КонецЦикла;
		
		Ключи = "ПД00101000102,ПД00201000102,ПД00301000102,ПД00401000102,ПД00501000102,
				|ПД00601000102,ПД00701000102,ПД00102000102,ПД00202000102";
		Для Каждого Элт Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Ключи, ",") Цикл 
			Для Каждого Стр Из П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", Элт), Истина) Цикл 
				РодительСтроки = Стр.Родитель.Строки;
				ОКПД2 = РодительСтроки[1].Значение;
				НомСтр = РодительСтроки[2].Значение;
				ЗначениеСтр = РодительСтроки[3].Значение;
				
				Если ЗначениеЗаполнено(ОКПД2) 
					И ЗначениеЗаполнено(НомСтр) 
					И ЗначениеЗаполнено(ЗначениеСтр) 
					И ТЗ[ОКПД2] = НомСтр 
					И ЗначениеЗаполнено(ТЗИ[ОКПД2]) Тогда
					
					П.ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаФормаОтчета[ТЗИ[ОКПД2]] = ЗначениеСтр;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Инд = 0;
		Для Каждого Стр Из П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П000004000102"), Истина) Цикл 
			РодительСтроки = Стр.Родитель.Строки;
			Если Не ЗначениеЗаполнено(РодительСтроки[1].Значение) Тогда 
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(РодительСтроки[2].Значение) 
				Или ЗначениеЗаполнено(РодительСтроки[3].Значение) 
				Или ЗначениеЗаполнено(РодительСтроки[4].Значение) Тогда 
				
				Инд = Инд + 1;
				ИндСтр = Формат(Инд, "ЧГ=");
				П.ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаФормаОтчета.Вставить("П000004000102_" + ИндСтр, РодительСтроки[1].Значение);
				П.ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаФормаОтчета.Вставить("П000004000103_" + ИндСтр, РодительСтроки[2].Значение);
				П.ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаФормаОтчета.Вставить("П000004000104_" + ИндСтр, РодительСтроки[3].Значение);
				П.ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаФормаОтчета.Вставить("П000004000105_" + ИндСтр, РодительСтроки[4].Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
#КонецОбласти