#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Возвращает универсальный набор документов со статусом проверки РНПТ.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ПустыеПараметрыКомпоновкиОтчета().
//  МакетКомпоновки - МакетКомпоновкиДанных - сформированный макет компоновки данных.
//
// Возвращаемое значение:
//  Структура - структура с ключом
//  *НаборДокументыСоСтатусомПроверкиРНПТ - ТаблицаЗначений - см. ПроверкаРНПТПереопределяемый.ДокументыСоСтатусомПроверкиРНПТ()
//
Функция ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	СтруктураВнешнихНаборовДанных = Новый Структура();
	
	ПараметрыПоискаДокументов = ПараметрыПоискаДокументов(ПараметрыОтчета);
	Результат = ПроверкаРНПТПереопределяемый.ДокументыСоСтатусомПроверкиРНПТ(ПараметрыПоискаДокументов);
	
	СтруктураВнешнихНаборовДанных.Вставить("НаборДокументыСоСтатусомПроверкиРНПТ", Результат);
	
	Возврат СтруктураВнешнихНаборовДанных;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьВнешниеНаборыДанных",    Истина);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Истина);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт 
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		НСтр("ru = 'Анализ РНПТ документов%1';
			|en = 'Analyze document RNPT%1'"),
		БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода));
		
КонецФункции

Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	// Дополнительные данные
	БухгалтерскиеОтчетыВызовСервера.ДобавитьДополнительныеПоля(ПараметрыОтчета, КомпоновщикНастроек);
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
КонецПроцедуры

// Возвращает набор параметров, которые необходимо сохранять в рассылке отчетов.
// Значения параметров используются при формировании отчета в рассылке.
//
// Возвращаемое значение:
//   Структура - структура настроек, сохраняемых в рассылке с неинициализированными значениями.
//
Функция НастройкиОтчетаСохраняемыеВРассылке() Экспорт
	
	КоллекцияНастроек = Новый Структура;
	КоллекцияНастроек.Вставить("Организация"                      , Справочники.Организации.ПустаяСсылка());
	КоллекцияНастроек.Вставить("ВключатьОбособленныеПодразделения", Ложь);
	КоллекцияНастроек.Вставить("РазмещениеДополнительныхПолей"    , 0);
	КоллекцияНастроек.Вставить("Группировка"                      , Неопределено);
	КоллекцияНастроек.Вставить("ДополнительныеПоля"               , Неопределено);
	КоллекцияНастроек.Вставить("ВыводитьЗаголовок"                , Ложь);
	КоллекцияНастроек.Вставить("ВыводитьПодвал"                   , Ложь);
	КоллекцияНастроек.Вставить("МакетОформления"                  , Неопределено);
	КоллекцияНастроек.Вставить("НастройкиКомпоновкиДанных"        , Неопределено);
	
	Возврат КоллекцияНастроек;
	
КонецФункции

// Возвращает структуру параметров, наличие которых требуется для успешного формирования отчета.
//
// Возвращаемое значение:
//   Структура - структура параметров для формирования отчета.
//
Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация",      Справочники.Организации.ПустаяСсылка());
	ПараметрыОтчета.Вставить("НачалоПериода",    Дата(1,1,1));
	ПараметрыОтчета.Вставить("КонецПериода",     Дата(1,1,1));
	ПараметрыОтчета.Вставить("ВключатьОбособленныеПодразделения", Ложь);
	ПараметрыОтчета.Вставить("НастройкаОтображенияДокументов", 0); // 0 - все, 1 - с ошибками, 2 - без ошибок
	ПараметрыОтчета.Вставить("Контрагент"           , Справочники.Контрагенты.ПустаяСсылка());
	ПараметрыОтчета.Вставить("РежимРасшифровки"     , Ложь);
	ПараметрыОтчета.Вставить("ВыводитьЗаголовок" ,                Ложь);
	ПараметрыОтчета.Вставить("ВыводитьПодвал",                    Ложь);
	ПараметрыОтчета.Вставить("МакетОформления",                   Неопределено);
	ПараметрыОтчета.Вставить("СхемаКомпоновкиДанных",             Неопределено);
	ПараметрыОтчета.Вставить("ИдентификаторОтчета",               "");
	ПараметрыОтчета.Вставить("НастройкиКомпоновкиДанных",         Неопределено);
	ПараметрыОтчета.Вставить("ДанныеРасшифровки",                 Неопределено);
	ПараметрыОтчета.Вставить("ДополнительныеПоля",                Неопределено);
	ПараметрыОтчета.Вставить("Группировка",                       Неопределено);
	ПараметрыОтчета.Вставить("РазмещениеДополнительныхПолей",     0);
	ПараметрыОтчета.Вставить("БыстрыйОтбор",                      "");
	
	Возврат ПараметрыОтчета;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыПоискаДокументов(ПараметрыОтчета)
	
	ПараметрыПоискаДокументов = Новый Структура;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		ПараметрыПоискаДокументов.Вставить("НачалоПериода", НачалоДня(ПараметрыОтчета.НачалоПериода));
	Иначе
		ПараметрыПоискаДокументов.Вставить("НачалоПериода", Дата(1,1,1));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		ПараметрыПоискаДокументов.Вставить("КонецПериода", КонецДня(ПараметрыОтчета.КонецПериода));
	Иначе
		ПараметрыПоискаДокументов.Вставить("КонецПериода", Дата(1,1,1));
	КонецЕсли;
	
	СписокДоступныхОрганизаций = Неопределено;
	Если ЗначениеЗаполнено(ПараметрыОтчета.Организация) Тогда
		СписокДоступныхОрганизаций = ОбщегоНазначенияБП.СписокДоступныхОрганизаций(
			ПараметрыОтчета.Организация,
			ПараметрыОтчета.ВключатьОбособленныеПодразделения);
	КонецЕсли;
	ПараметрыПоискаДокументов.Вставить("Организация", СписокДоступныхОрганизаций);
	
	ПараметрыПоискаДокументов.Вставить("НастройкаОтображенияДокументов", ПараметрыОтчета.НастройкаОтображенияДокументов);
	
	Возврат ПараметрыПоискаДокументов;
	
КонецФункции

#КонецОбласти

#КонецЕсли