#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Получает данные, необходимые для вывода структуры заказа на производство.
//
// Параметры:
//  Параметры - Структура - параметры чтения данных. Содержит:
//               * Дерево - ДеревоЗначений - 
//  АдресХранилища - Строка - адрес хранилища, в которое будет помещен результат.
//
Процедура Сформировать(Параметры, АдресХранилища) Экспорт
	
	Дерево = Параметры.Дерево;
	Дерево.Строки.Очистить();
	
	Данные = ДанныеСтруктурыЗаказов(Параметры.Заказы);
	
	Для каждого Заказ Из Параметры.Заказы Цикл
		
		Строка = Дерево.Строки.Добавить();
		Строка.Заказ = Заказ;
		Строка.ПредставлениеСтроки = Документы.ЗаказНаПроизводство2_2.ПолноеПредставлениеЗаказа(Заказ);
		Строка.ТипСтроки = ТипСтрокиЗаказ();
		Строка.Развернута = Истина;
		
		ДобавитьНоменклатуру(Данные, Заказ, Строка);
		
	КонецЦикла;
	
	НастроитьОтборСтрок(Дерево, Параметры.Отбор);
	
	ПоместитьВоВременноеХранилище(Дерево, АдресХранилища);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДобавитьНоменклатуру(Данные, Документ, Родитель)
	
	ЗаказБезСпецификации = Родитель.Уровень() = 0
		И Данные.ЗаказыБезСпецификаций.Найти(Документ) <> Неопределено;
	
	СтруктураПоиска = Новый Структура("Документ", Документ);
	Изделия = Данные.Потребности.НайтиСтроки(СтруктураПоиска);
	
	Для каждого Изделие Из Изделия Цикл
		
		Обеспечение = ОбеспечениеПотребности(Данные, Изделие);
		
		ЕстьОбеспечениеОтРодителя = ЕстьОбеспечениеВыполняемоеРодителем(Изделие, Обеспечение, Родитель);
		Если Изделие.КоличествоПлан = 0
				ИЛИ Изделие.КоличествоПлан = Изделие.КоличествоОтменено
				ИЛИ ЕстьОбеспечениеОтРодителя Тогда // исключение избыточных данных в ремонтном процессе
			Продолжить;
		КонецЕсли;
		
		НоваяСтрока = Родитель.Строки.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Изделие);
		НоваяСтрока.ПредставлениеСтроки = НоменклатураКлиентСервер.ПредставлениеНоменклатуры(
			Изделие.НоменклатураПредставление,
			Изделие.ХарактеристикаПредставление);
		
		Если Родитель.Уровень() = 0 Тогда
			НоваяСтрока.ТипСтроки = ТипСтрокиПродукция();
		ИначеЕсли Изделие.Заказ = Родитель.Заказ Тогда
			НоваяСтрока.ТипСтроки = ТипСтрокиПолуфабрикат();
		Иначе
			НоваяСтрока.ТипСтроки = ТипСтрокиПолуфабрикатДругогоЗаказа();
			НоваяСтрока.ИнформационнаяСтрока = Документы.ЗаказНаПроизводство2_2.ПолноеПредставлениеЗаказа(Изделие.Заказ);
		КонецЕсли;
		
		ДатаОкончанияФакт = '00010101';
		ПартияПроизводства = Справочники.ПартииПроизводства.ПустаяСсылка();
		
		Для каждого Строка Из Обеспечение Цикл
			
			НоваяСтрока.КоличествоФакт = НоваяСтрока.КоличествоФакт + Строка.КоличествоФакт;
			НоваяСтрока.КоличествоСоздано = НоваяСтрока.КоличествоСоздано + Строка.КоличествоПлан;
			НоваяСтрока.ДатаОкончанияПлан = МАКС(НоваяСтрока.ДатаОкончанияПлан, Строка.ДатаОкончанияПлан);
			ДатаОкончанияФакт = МАКС(ДатаОкончанияФакт, Строка.ДатаОкончанияФакт);
			
			Если Изделие.Заказ = Строка.Заказ Тогда
				
				СтруктураПоиска = Новый Структура("Номенклатура, Характеристика, Заказ, Этап");
				ЗаполнитьЗначенияСвойств(СтруктураПоиска, Строка);
				Для каждого СтрокаИтого Из Данные.Обеспечение.НайтиСтроки(СтруктураПоиска) Цикл
					НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПланИтого + СтрокаИтого.КоличествоПлан;
					НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФактИтого + СтрокаИтого.КоличествоФакт;
				КонецЦикла;
				
				Если ЗаказБезСпецификации Тогда
					ДобавитьЭтапыПоНомеру(Данные, Документ, Строка.Этап, Строка.ТипПроцесса, НоваяСтрока);
				Иначе
					ДобавитьЭтапыПоИД(Данные, Строка.ПартияПроизводства, Строка.ТипПроцесса, НоваяСтрока);
				КонецЕсли;
				
			КонецЕсли;
			
			Если ПартияПроизводства <> Неопределено Тогда
				Если ПартияПроизводства.Пустая() Тогда
					ПартияПроизводства = Строка.ПартияПроизводства;
				ИначеЕсли ПартияПроизводства <> Строка.ПартияПроизводства Тогда
					ПартияПроизводства = Неопределено;
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
		Если (НоваяСтрока.КоличествоПлан - НоваяСтрока.КоличествоОтменено) <= НоваяСтрока.КоличествоФакт Тогда
			НоваяСтрока.ДатаОкончанияФакт = ДатаОкончанияФакт;
		КонецЕсли;
		Если НоваяСтрока.КоличествоПланИтого = 0 Тогда
			НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПлан;
		Иначе
			НоваяСтрока.КоличествоПланИтого = НоваяСтрока.КоличествоПланИтого + НоваяСтрока.КоличествоОтменено;
		КонецЕсли;
		Если НоваяСтрока.КоличествоФактИтого = 0 Тогда
			НоваяСтрока.КоличествоФактИтого = НоваяСтрока.КоличествоФакт;
		КонецЕсли;
		НоваяСтрока.КоличествоОтмененоИтого = НоваяСтрока.КоличествоОтменено;
		НоваяСтрока.ПартияПроизводства = ПартияПроизводства;
		
		ЗаполнитьРассчитываемыеРеквизитыДерева(НоваяСтрока);
		
		Если НоваяСтрока.МожноСоздаватьЭтапы
			И НоваяСтрока.Спецификация.Пустая()
			И (НоваяСтрока.КоличествоПлан - НоваяСтрока.КоличествоОтменено) > НоваяСтрока.КоличествоСоздано Тогда
			
			СтрокаСоздатьЭтапы = НоваяСтрока.Строки.Вставить(0);
			СтрокаСоздатьЭтапы.ТипСтроки = ТипСтрокиСоздатьЭтапы();
			СтрокаСоздатьЭтапы.Заказ = НоваяСтрока.Заказ;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаказБезСпецификации Тогда
		
		Строки = Данные.Этапы.НайтиСтроки(Новый Структура("Заказ, Обработан", Документ, Ложь));
		Если Строки.ВГраница() <> -1 Тогда
			
			НоваяСтрока = Родитель.Строки.Добавить();
			НоваяСтрока.Заказ = Документ;
			НоваяСтрока.ПредставлениеСтроки = НСтр("ru = '<Прочее>';
													|en = '<Other>'");
			НоваяСтрока.ТипСтроки = ТипСтрокиПрочиеИзделия();
			ЗаполнитьРассчитываемыеРеквизитыДерева(НоваяСтрока);
			
			ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Сборка;
			
			ДобавитьЭтапы(Данные, Строки, ТипПроцесса, НоваяСтрока);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭтапыПоНомеру(Данные, Заказ, Этап, ТипПроцесса, Родитель)
	
	Строка = Данные.Этапы.Найти(Этап, "Этап");
	Если Строка = Неопределено Тогда

		Возврат;
	КонецЕсли;
	
	Строки = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Строка);
	СтрокиПоИндексам = Новый Массив;
	
	СтруктураПоиска = Новый Структура("Заказ, НомерСледующегоЭтапа", Заказ);
	
	Для каждого Строка Из Строки Цикл
		
		Индекс = Данные.Этапы.Индекс(Строка);
		Если Индекс > СтрокиПоИндексам.ВГраница() Тогда
			СтрокиПоИндексам.Вставить(Индекс, Строка);
		Иначе
			СтрокиПоИндексам.Установить(Индекс, Строка);
		КонецЕсли;
		
		СтруктураПоиска.НомерСледующегоЭтапа = Строка.НомерЭтапа;
		
		НСтроки = Данные.Этапы.НайтиСтроки(СтруктураПоиска);
		Для каждого НСтрока Из НСтроки Цикл
			Строки.Добавить(НСтрока);
		КонецЦикла;
		
	КонецЦикла;
	
	Строки.Очистить();
	
	Для Индекс = 0 По СтрокиПоИндексам.ВГраница() Цикл
		
		Если СтрокиПоИндексам[Индекс] <> Неопределено Тогда
			
			Строки.Добавить(СтрокиПоИндексам[Индекс]);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ДобавитьЭтапы(Данные, Строки, ТипПроцесса, Родитель);
	
КонецПроцедуры

Процедура ДобавитьЭтапыПоИД(Данные, ПартияПроизводства, ТипПроцесса, Родитель)
	
	Строки = Данные.Этапы.НайтиСтроки(Новый Структура("ПартияПроизводства", ПартияПроизводства));
	
	Если Строки.ВГраница() <> -1 Тогда
		
		ДобавитьЭтапы(Данные, Строки, ТипПроцесса, Родитель);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьЭтапы(Данные, Строки, ТипПроцесса, Родитель)
	
	Если ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Разборка Тогда
		
		// Прямой обход
		Начало = 0;
		Конец = Строки.ВГраница();
		Коэф = 1;
		
	Иначе
		
		// Обратный обход
		Начало = -Строки.ВГраница();
		Конец = 0;
		Коэф = -1;
		
	КонецЕсли;
	
	Для Сч = Начало По Конец Цикл
		
		ДанныеЭтапа = Строки[Сч*Коэф];
		
		НоваяСтрока = Родитель.Строки.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ДанныеЭтапа);
		
		НоваяСтрока.ПредставлениеСтроки = ДанныеЭтапа.НаименованиеЭтапа;
		НоваяСтрока.ТипСтроки = ТипСтрокиЭтап();
		НоваяСтрока.КоличествоПланИтого = ДанныеЭтапа.КоличествоПлан;
		НоваяСтрока.КоличествоФактИтого = ДанныеЭтапа.КоличествоФакт;
		НоваяСтрока.КоличествоОтмененоИтого = ДанныеЭтапа.КоличествоОтменено;
		
		ЗаполнитьРассчитываемыеРеквизитыДерева(НоваяСтрока);
		
		ДанныеЭтапа.Обработан = Истина;
		
		ДобавитьНоменклатуру(Данные, ДанныеЭтапа.Этап, НоваяСтрока);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура НастроитьОтборСтрок(Дерево, Отбор) Экспорт
	
	СтруктураПоиска = Новый Структура("Отбор", Истина);
	Для каждого Строка Из Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина) Цикл
		Строка.Отбор = Ложь;
	КонецЦикла;
	
	ОчередьОтбор = Новый Массив;
	Если Не Отбор.Номенклатура.Пустая() Тогда
		СтруктураПоиска = Новый Структура("Номенклатура", Отбор.Номенклатура);
		Для каждого Строка Из Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина) Цикл
			ОчередьОтбор.Добавить(Строка);
		КонецЦикла;
	КонецЕсли;
	Если Не Отбор.Этап.Пустая() Тогда
		СтруктураПоиска = Новый Структура("Этап", Отбор.Этап);
		Для каждого Строка Из Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина) Цикл
			ОчередьОтбор.Добавить(Строка);
		КонецЦикла;
	КонецЕсли;
	
	Если ОчередьОтбор.ВГраница() <> -1 Тогда
		
		СтруктураПоиска = Новый Структура("Развернута", Истина);
		Для каждого Строка Из Дерево.Строки.НайтиСтроки(СтруктураПоиска, Истина) Цикл
			Строка.Развернута = Ложь;
		КонецЦикла;
		
		ОчередьРодители = Новый Массив;
		ОчередьПотомки = Новый Массив;
		
		Для каждого Строка Из ОчередьОтбор Цикл
			Строка.Отбор = Истина;
			Если Строка.Родитель <> Неопределено Тогда
				ОчередьРодители.Добавить(Строка.Родитель);
			КонецЕсли;
			Для каждого СтрокаПотомок Из Строка.Строки Цикл
				ОчередьПотомки.Добавить(СтрокаПотомок);
			КонецЦикла;
		КонецЦикла;
		
		Пока ОчередьРодители.ВГраница() <> -1 Цикл
			Строка = ОчередьРодители[0];
			Если Не Строка.Отбор ИЛИ Не Строка.Развернута Тогда
				Строка.Отбор = Истина;
				Строка.Развернута = Истина;
				Если Строка.Родитель <> Неопределено Тогда
					ОчередьРодители.Добавить(Строка.Родитель);
				КонецЕсли;
			КонецЕсли;
			ОчередьРодители.Удалить(0);
		КонецЦикла;
		
		Пока ОчередьПотомки.ВГраница() <> -1 Цикл
			Строка = ОчередьПотомки[0];
			Если Не Строка.Отбор Тогда
				Строка.Отбор = Истина;
				Для каждого СтрокаПотомок Из Строка.Строки Цикл
					ОчередьПотомки.Добавить(СтрокаПотомок);
				КонецЦикла;
			КонецЕсли;
			ОчередьПотомки.Удалить(0);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

// Поиск данных
Функция ОбеспечениеПотребности(Данные, Потребность)
	
	СтруктураПоиска = Новый Структура;
	СтруктураПоиска.Вставить("Номенклатура",     Потребность.Номенклатура);
	СтруктураПоиска.Вставить("Характеристика",   Потребность.Характеристика);
	СтруктураПоиска.Вставить("Назначение",       Потребность.Назначение);
	СтруктураПоиска.Вставить("СписатьНаРасходы", Потребность.СписатьНаРасходы);
	
	Если Потребность.ТипПроцесса = Перечисления.ТипыПроизводственныхПроцессов.Сборка Тогда
		
		ПолеПоиска      = "Получатель";
		ПолеПоискаЗаказ = "ПолучательЗаказ"; 
		ПолеЗначения    = "Отправитель";
		
	Иначе
		
		ПолеПоиска      = "Отправитель";
		ПолеПоискаЗаказ = "ОтправительЗаказ";
		ПолеЗначения    = "Получатель";
		
	КонецЕсли;
	
	СтруктураПоиска.Вставить(ПолеПоиска, Потребность.Документ);
	Связи = Данные.СвязиНоменклатуры.НайтиСтроки(СтруктураПоиска);
	СтруктураПоиска.Удалить(ПолеПоиска);
	
	СтруктураПоиска.Вставить("Этап");
	СтруктураПоиска.Вставить("Заказ");
	
	Обеспечение = Новый Массив;
	ОбеспечениеПоСпецификации = Новый Массив;
	КоличествоПоСпецификации = 0;
	
	Для Индекс = 0 По Связи.ВГраница() Цикл
		
		Связь = Связи[Индекс];
		
		// Исключение повторной обработки идентичных строк
		ЭтоДубль = Ложь;
		
		Для ИндексПред = 1-Индекс По 0 Цикл
			
			ЭтоДубль = Связь[ПолеЗначения] = Связи[-ИндексПред][ПолеЗначения]
				И Связь.Назначение = Связи[-ИндексПред].Назначение;
				
			Если ЭтоДубль Тогда
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЭтоДубль Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПоиска.Этап       = Связь[ПолеЗначения];
		СтруктураПоиска.Заказ      = Связь[ПолеПоискаЗаказ];
		СтруктураПоиска.Назначение = Связь.Назначение;
		
		НайденныеСтроки = Данные.Обеспечение.НайтиСтроки(СтруктураПоиска);
		Для каждого Строка Из НайденныеСтроки Цикл
			Обеспечение.Добавить(Строка);
			
			Если Не Потребность.Спецификация.Пустая()
				И Потребность.Спецификация = Строка.Спецификация Тогда
				ОбеспечениеПоСпецификации.Добавить(Строка);
				КоличествоПоСпецификации = КоличествоПоСпецификации + Строка.КоличествоПлан;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
	Если ОбеспечениеПоСпецификации.ВГраница() <> -1
		И КоличествоПоСпецификации >= (Потребность.КоличествоПлан - Потребность.КоличествоОтменено) Тогда
		Возврат ОбеспечениеПоСпецификации;
	Иначе
		Возврат Обеспечение;
	КонецЕсли;
	
КонецФункции

Функция ЕстьОбеспечениеВыполняемоеРодителем(Потребность, Обеспечение, Родитель)
	
	Если Родитель.Уровень() < 4 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Результат = Ложь;
	ПартияРодитель = Родитель.Родитель.Родитель.ПартияПроизводства;
	
	Для каждого Строка Из Обеспечение Цикл
		Если Строка.ПартияПроизводства = ПартияРодитель Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

// Выборка данных
Функция ДанныеСтруктурыЗаказов(Заказы)
	
	Запрос = Новый Запрос(ТекстЗапросаДанныеСтруктурыЗаказов());
	
	Запрос.УстановитьПараметр("Заказы", Заказы);
	Запрос.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойЭтап", Документы.ЭтапПроизводства2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяСпецификация", Справочники.РесурсныеСпецификации.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустоеРаспоряжение", Документы.ЗаказНаПроизводство2_2.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустаяПартия", Справочники.ПартииПроизводства.ПустаяСсылка());
	Запрос.УстановитьПараметр("Разборка", Перечисления.ТипыПроизводственныхПроцессов.Разборка);
	Запрос.УстановитьПараметр("Сборка", Перечисления.ТипыПроизводственныхПроцессов.Сборка);
	Запрос.УстановитьПараметр("БезСпецификаций", Перечисления.ТипыПроизводственныхПроцессов.БезСпецификаций);
	Запрос.УстановитьПараметр("СтатусГрафика", РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	Запрос.УстановитьПараметр("СтатусЭтапВыполнен", Перечисления.СтатусыЭтаповПроизводства2_2.Завершен);
	Запрос.УстановитьПараметр("СтатусЗаказаМожноСоздаватьЭтапы",
		Перечисления.СтатусыЗаказовНаПроизводство2_2.КПроизводству);
	
	МассивРезультатов = Запрос.ВыполнитьПакет();  
	ВГраница = МассивРезультатов.ВГраница();
	
	Результат = Новый Структура;
	
	Результат.Вставить("СвязиНоменклатуры", МассивРезультатов[ВГраница - 4].Выгрузить());
	Результат.Вставить("Потребности", МассивРезультатов[ВГраница - 3].Выгрузить());
	Результат.Вставить("Обеспечение", МассивРезультатов[ВГраница - 2].Выгрузить());
	Результат.Вставить("Этапы", МассивРезультатов[ВГраница - 1].Выгрузить());
	Результат.Вставить("ЗаказыБезСпецификаций", МассивРезультатов[ВГраница].Выгрузить().ВыгрузитьКолонку("Ссылка"));
	
	// Индексация таблиц
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Назначение, СписатьНаРасходы, Отправитель");
	Результат.СвязиНоменклатуры.Индексы.Добавить("Номенклатура, Характеристика, Назначение, СписатьНаРасходы, Получатель");
	
	Результат.Потребности.Индексы.Добавить("Документ");
	
	Результат.Обеспечение.Индексы.Добавить("Номенклатура, Характеристика, Заказ, Этап");
	Результат.Обеспечение.Индексы.Добавить("Номенклатура, Характеристика, Заказ, Этап, Назначение, СписатьНаРасходы");
	
	Результат.Этапы.Индексы.Добавить("ПартияПроизводства");
	Результат.Этапы.Индексы.Добавить("Этап");
	Результат.Этапы.Индексы.Добавить("Заказ, НомерСледующегоЭтапа");
	
	Возврат Результат;
	
КонецФункции

Функция ТекстЗапросаДанныеСтруктурыЗаказов()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТабличнаяЧасть.Ссылка                              КАК Заказ,
		|	ТабличнаяЧасть.Номенклатура                        КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика                      КАК Характеристика,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса = &БезСпецификаций
		|				И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ЗаказНаПроизводство.НазначениеПродукция
		|		ИНАЧЕ ТабличнаяЧасть.Назначение
		|	КОНЕЦ                                              КАК Назначение,
		|	ВЫБОР
		|		КОГДА &ОбеспечиватьОбособленно
		|			ТОГДА  ВЫБОР
		|						КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса В (
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт))
		|							ТОГДА ТабличнаяЧасть.Назначение
		|						ИНАЧЕ ЗаказНаПроизводство.НазначениеПродукция
		|					КОНЕЦ
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ                                              КАК НазначениеПродукция,
		|	ТабличнаяЧасть.Спецификация                        КАК Спецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы                    КАК СписатьНаРасходы,
		|	ТабличнаяЧасть.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ТабличнаяЧасть.АналитикаРасходов                   КАК АналитикаРасходов,
		|	ТабличнаяЧасть.АналитикаАктивовПассивов            КАК АналитикаАктивовПассивов,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса = &Разборка
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ                                              КАК ТипПроцесса,
		|	ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы КАК МожноСоздаватьЭтапы,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			ИЛИ ТабличнаяЧасть.СписатьНаРасходы
		|		ТОГДА ВЫБОР
		|				КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТабличнаяЧасть.Подразделение) = 1
		|					ТОГДА МИНИМУМ(ТабличнаяЧасть.Подразделение)
		|				ИНАЧЕ НЕОПРЕДЕЛЕНО
		|			КОНЕЦ
		|		ИНАЧЕ
		|			ВЫБОР
		|				КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ТабличнаяЧасть.Склад) = 1
		|					ТОГДА МИНИМУМ(ТабличнаяЧасть.Склад)
		|				ИНАЧЕ НЕОПРЕДЕЛЕНО
		|			КОНЕЦ
		|	КОНЕЦ                                              КАК Склад,
		|	ТабличнаяЧасть.Отменено                            КАК Отменено,
		|	МИНИМУМ(ТабличнаяЧасть.НомерСтроки)                КАК НомерСтроки,
		|	СУММА(ТабличнаяЧасть.Количество)                   КАК Количество
		|ПОМЕСТИТЬ ВТЗаказано
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2.Продукция КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|		ПО ТабличнаяЧасть.Ссылка = ЗаказНаПроизводство.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка В(&Заказы)
		|	И ЗаказНаПроизводство.Проведен
		|
		|СГРУППИРОВАТЬ ПО
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Спецификация,
		|	ТабличнаяЧасть.СтатьяРасходов,
		|	ТабличнаяЧасть.АналитикаАктивовПассивов,
		|	ТабличнаяЧасть.Ссылка,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса = &Разборка
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ,
		|	ТабличнаяЧасть.Характеристика,
		|	ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ВЫБОР
		|		КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса = &БезСпецификаций
		|				И НЕ ТабличнаяЧасть.СписатьНаРасходы
		|			ТОГДА ЗаказНаПроизводство.НазначениеПродукция
		|		ИНАЧЕ ТабличнаяЧасть.Назначение
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА &ОбеспечиватьОбособленно
		|			ТОГДА  ВЫБОР
		|						КОГДА ЗаказНаПроизводство.ТипПроизводственногоПроцесса В (
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Сборка),
		|								ЗНАЧЕНИЕ(Перечисление.ТипыПроизводственныхПроцессов.Ремонт))
		|							ТОГДА ТабличнаяЧасть.Назначение
		|						ИНАЧЕ ЗаказНаПроизводство.НазначениеПродукция
		|					КОНЕЦ
		|		ИНАЧЕ
		|			ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|	КОНЕЦ,
		|	ТабличнаяЧасть.АналитикаРасходов,
		|	ТабличнаяЧасть.Отменено
    	|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Распоряжение           КАК Заказ,
		|	Документ.Ссылка                 КАК Этап,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ                           КАК ТипПроцесса,
		|	Документ.ПартияПроизводства     КАК ПартияПроизводства,
		|	ТабличнаяЧасть.ЭтапПотребитель  КАК ЭтапПотребитель,
		|
		|	ЕСТЬNULL(ДокументПотребитель.ПартияПроизводства, &ПустаяПартия)  КАК ПартияПроизводстваПотребитель,
		|	ЕСТЬNULL(ДокументПотребитель.Распоряжение, &ПустоеРаспоряжение)  КАК ЗаказПотребитель,
		|
		|	ТабличнаяЧасть.Номенклатура     КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика   КАК Характеристика,
		|	ТабличнаяЧасть.Назначение       КАК Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ                           КАК Склад,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ                           КАК Спецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы КАК СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки        КАК КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки      КАК НомерСтроки,
		|	ТабличнаяЧасть.Количество       КАК Количество,
		|	ТабличнаяЧасть.Произведено      КАК Произведено,
		|	ТабличнаяЧасть.Отменено         КАК Отменено
		|ПОМЕСТИТЬ ВТВыпуск
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ПО ТабличнаяЧасть.ЭтапПотребитель = ДокументПотребитель.Ссылка
		|ГДЕ
		|	Документ.Распоряжение В(&Заказы)
		|	И Документ.Проведен
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА &Разборка
		|		ИНАЧЕ &Сборка
		|	КОНЕЦ,
		|	Документ.ПартияПроизводства,
		|	ТабличнаяЧасть.ЭтапПотребитель,
		|
		|	ЕСТЬNULL(ДокументПотребитель.ПартияПроизводства, &ПустаяПартия),
		|	ЕСТЬNULL(ДокументПотребитель.Распоряжение, &ПустоеРаспоряжение),
		|
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.ОбработатьПоСпецификации
		|			ТОГДА ТабличнаяЧасть.Спецификация
		|		ИНАЧЕ Документ.Спецификация
		|	КОНЕЦ,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Произведено,
		|	ТабличнаяЧасть.Отменено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ПО ТабличнаяЧасть.ЭтапПотребитель = ДокументПотребитель.Ссылка
		|ГДЕ
		|	Документ.Распоряжение В(&Заказы)
		|	И Документ.Проведен
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Этап,
		|	ЭтапПотребитель,
		|	ТипПроцесса,
		|	Спецификация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Документ.Распоряжение                  КАК Заказ,
		|	Документ.Ссылка                        КАК Этап,
		|	&Сборка                                КАК ТипПроцесса,
		|	Документ.ПартияПроизводства            КАК ПартияПроизводства,
		|	ДокументПотребитель.Ссылка             КАК ЭтапПотребитель,
		|	ДокументПотребитель.ПартияПроизводства КАК ПартияПроизводстваПотребитель,
		|	ДокументПотребитель.Распоряжение       КАК ЗаказПотребитель,
		|	ТабличнаяЧасть.Номенклатура            КАК Номенклатура,
		|	ТабличнаяЧасть.Характеристика          КАК Характеристика,
		|	ТабличнаяЧасть.Назначение              КАК Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ                                  КАК Склад,
		|	&ПустаяСпецификация                    КАК Спецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы        КАК СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки               КАК КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки             КАК НомерСтроки,
		|	ТабличнаяЧасть.Количество              КАК Количество,
		|	ТабличнаяЧасть.Произведено             КАК Произведено,
		|	ТабличнаяЧасть.Отменено                КАК Отменено
		|ПОМЕСТИТЬ ВТВыпускРазныеЗаказы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ВыходныеИзделия КАК ТабличнаяЧасть
		|		ПО ДокументПотребитель.Назначение = ТабличнаяЧасть.Назначение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ДокументПотребитель.Распоряжение В(&Заказы)
		|	И ДокументПотребитель.Распоряжение <> Документ.Распоряжение
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.ОбработатьПоСпецификации
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	&Сборка,
		|	Документ.ПартияПроизводства,
		|	ДокументПотребитель.Ссылка,
		|	ДокументПотребитель.ПартияПроизводства,
		|	ДокументПотребитель.Распоряжение,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ТабличнаяЧасть.Назначение,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
		|			И ТабличнаяЧасть.СписатьНаРасходы
		|			И ТабличнаяЧасть.Получатель = ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
		|			ТОГДА ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ ТабличнаяЧасть.Получатель
		|	КОНЕЦ,
		|	&ПустаяСпецификация,
		|	ТабличнаяЧасть.СписатьНаРасходы,
		|	ТабличнаяЧасть.КодСтроки,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество,
		|	ТабличнаяЧасть.Произведено,
		|	ТабличнаяЧасть.Отменено
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ДокументПотребитель
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2.ПобочныеИзделия КАК ТабличнаяЧасть
		|		ПО ДокументПотребитель.Назначение = ТабличнаяЧасть.Назначение
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ДокументПотребитель.Распоряжение В(&Заказы)
		|	И ДокументПотребитель.Распоряжение <> Документ.Распоряжение
		|	И Документ.Проведен
		|	И НЕ ТабличнаяЧасть.ОбработатьПоСпецификации
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ЭтапПроизводства2_2.Ссылка КАК Этап
		|ПОМЕСТИТЬ ВТВсеЭтапы
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|ГДЕ
		|	ЭтапПроизводства2_2.Распоряжение В(&Заказы)
		|	И ЭтапПроизводства2_2.Проведен = ИСТИНА
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТВыпуск.Этап
		|ИЗ
		|	ВТВыпуск КАК ВТВыпуск
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТВыпуск.ЭтапПотребитель
		|ИЗ
		|	ВТВыпуск КАК ВТВыпуск
		|ГДЕ
		|	ВТВыпуск.ЭтапПотребитель <> &ПустойЭтап
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.Заказ                КАК Заказ,
		|	ВложенныйЗапрос.Этап                 КАК Этап,
		|	ВложенныйЗапрос.ПартияПроизводства   КАК ПартияПроизводства,
		|	&Сборка                              КАК ТипПроцесса,
		|	ВложенныйЗапрос.Номенклатура         КАК Номенклатура,
		|	ВложенныйЗапрос.Характеристика       КАК Характеристика,
		|	ВложенныйЗапрос.Назначение           КАК Назначение,
		|	ВложенныйЗапрос.Склад                КАК Склад,
		|	ВложенныйЗапрос.Спецификация         КАК Спецификация,
		|	ВложенныйЗапрос.СписатьНаРасходы     КАК СписатьНаРасходы,
		|	ВложенныйЗапрос.Отменено             КАК Отменено,
		|	МИНИМУМ(ВложенныйЗапрос.НомерСтроки) КАК НомерСтроки,
		|	СУММА(ВложенныйЗапрос.Количество)    КАК Количество
		|ПОМЕСТИТЬ ВТОбеспечение
		|ИЗ
		|	(ВЫБРАТЬ
		|		Документ.Распоряжение         КАК Заказ,
		|		Документ.Ссылка               КАК Этап,
		|		Документ.ПартияПроизводства   КАК ПартияПроизводства,
		|		ТабличнаяЧасть.Номенклатура   КАК Номенклатура,
		|		ТабличнаяЧасть.Характеристика КАК Характеристика,
		|		ТабличнаяЧасть.Назначение     КАК Назначение,
		|		ВЫБОР КОГДА ТабличнаяЧасть.Номенклатура.ТипНоменклатуры = ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа) ТОГДА
		|			ТабличнаяЧасть.Подразделение
		|		ИНАЧЕ
		|			ТабличнаяЧасть.Склад
		|		КОНЕЦ                         КАК Склад,
		|		ТабличнаяЧасть.Спецификация   КАК Спецификация,
		|		ЛОЖЬ                          КАК СписатьНаРасходы,
		|		ТабличнаяЧасть.Отменено       КАК Отменено,
		|		ТабличнаяЧасть.НомерСтроки    КАК НомерСтроки,
		|		ТабличнаяЧасть.Количество     КАК Количество
		|	ИЗ
		|		Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|			ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|	ГДЕ
		|		ТабличнаяЧасть.Ссылка В
		|				(ВЫБРАТЬ
		|					ВсеЭтапы.Этап КАК Ссылка
		|				ИЗ
		|					ВТВсеЭтапы КАК ВсеЭтапы)
		|		И Документ.Проведен
		|		И ТабличнаяЧасть.Производится
		|		И НЕ (
		|				Документ.ТипПроизводственногоПроцесса = &Разборка
		|				И ТабличнаяЧасть.Номенклатура = Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура
		|				И ТабличнаяЧасть.Характеристика = Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика
		|			)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.ЭтапПотребитель,
		|		ВТВыпуск.ПартияПроизводства,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВТВыпуск.Склад,
		|		&ПустаяСпецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		ВТВыпуск.Отменено,
		|		10000,
		|		-ВТВыпуск.Количество
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|		И ВТВыпуск.ЭтапПотребитель <> &ПустойЭтап
		|		И ВТВыпуск.ПартияПроизводства = ВТВыпуск.ПартияПроизводстваПотребитель) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.Характеристика,
		|	ВложенныйЗапрос.Склад,
		|	ВложенныйЗапрос.Номенклатура,
		|	ВложенныйЗапрос.Назначение,
		|	ВложенныйЗапрос.Этап,
		|	ВложенныйЗапрос.ПартияПроизводства,
		|	ВложенныйЗапрос.Спецификация,
		|	ВложенныйЗапрос.СписатьНаРасходы,
		|	ВложенныйЗапрос.Заказ,
		|	ВложенныйЗапрос.Отменено
		|
		|ИМЕЮЩИЕ
		|	СУММА(ВложенныйЗапрос.Количество) > 0
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Документ.Распоряжение,
		|	Документ.Ссылка,
		|	Документ.ПартияПроизводства,
		|	&Разборка,
		|	ТабличнаяЧасть.Номенклатура,
		|	ТабличнаяЧасть.Характеристика,
		|	ВЫБОР
		|		КОГДА ТабличнаяЧасть.Производится 
		|			ТОГДА ТабличнаяЧасть.Назначение
		|		ИНАЧЕ &ПустоеНазначение
		|	КОНЕЦ,
		|	ТабличнаяЧасть.Склад,
		|	Документ.Спецификация,
		|	ЛОЖЬ,
		|	ТабличнаяЧасть.Отменено,
		|	ТабличнаяЧасть.НомерСтроки,
		|	ТабличнаяЧасть.Количество
		|ИЗ
		|	Документ.ЭтапПроизводства2_2.ОбеспечениеМатериаламиИРаботами КАК ТабличнаяЧасть
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК Документ
		|		ПО ТабличнаяЧасть.Ссылка = Документ.Ссылка
		|ГДЕ
		|	ТабличнаяЧасть.Ссылка В
		|			(ВЫБРАТЬ
		|				ВсеЭтапы.Этап КАК Ссылка
		|			ИЗ
		|				ВТВсеЭтапы КАК ВсеЭтапы)
		|	И Документ.Проведен
		|	И Документ.ТипПроизводственногоПроцесса = &Разборка
		|	И ТабличнаяЧасть.Номенклатура = Документ.ПартияПроизводства.ОсновноеИзделиеНоменклатура
		|	И ТабличнаяЧасть.Характеристика = Документ.ПартияПроизводства.ОсновноеИзделиеХарактеристика
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Заказ,
		|	Этап,
		|	ТипПроцесса
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Этапы.ПартияПроизводства                                      КАК ПартияПроизводства,
		|	МИНИМУМ(ВЫБОР
		|			КОГДА Этапы.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
		|				ТОГДА ИСТИНА
		|			ИНАЧЕ ЛОЖЬ
		|		КОНЕЦ)                                                    КАК ЭтапыЗавершены,
		|	МАКСИМУМ(Этапы.ФактическоеОкончаниеЭтапа)                     КАК ДатаОкончанияФакт,
		|	МАКСИМУМ(ЕСТЬNULL(График.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1))) КАК ДатаОкончанияПлан
		|ПОМЕСТИТЬ ВТСрокиРазборки
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК График
		|		ПО Этапы.Распоряжение = График.Распоряжение
		|			И Этапы.Ссылка = График.ЭтапПроизводства
		|			И (График.СтатусГрафика = &СтатусГрафика)
		|ГДЕ
		|	Этапы.Ссылка В
		|			(ВЫБРАТЬ
		|				ВсеЭтапы.Этап КАК Ссылка
		|			ИЗ
		|				ВТВсеЭтапы КАК ВсеЭтапы)
		|	И Этапы.Проведен
		|	И Этапы.ТипПроизводственногоПроцесса = &Разборка
		|
		|СГРУППИРОВАТЬ ПО
		|	Этапы.ПартияПроизводства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изделия.Номенклатура     КАК Номенклатура,
		|	Изделия.Характеристика   КАК Характеристика,
		|	Изделия.Назначение       КАК Назначение,
		|	Изделия.Спецификация     КАК Спецификация,
		|	Изделия.СписатьНаРасходы КАК СписатьНаРасходы,
		|	Изделия.Этап             КАК Отправитель,
		|	Изделия.ЭтапПотребитель  КАК Получатель,
		|	Изделия.Заказ            КАК ОтправительЗаказ,
		|	Изделия.ЗаказПотребитель КАК ПолучательЗаказ
		|ИЗ
		|	ВТВыпуск КАК Изделия
		|ГДЕ
		|	Изделия.ЭтапПотребитель <> &ПустойЭтап
		|	И Изделия.ПартияПроизводства <> Изделия.ПартияПроизводстваПотребитель
		|	И НЕ Изделия.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Изделия.Номенклатура     КАК Номенклатура,
		|	Изделия.Характеристика   КАК Характеристика,
		|	Изделия.Назначение       КАК Назначение,
		|	Изделия.Спецификация     КАК Спецификация,
		|	Изделия.СписатьНаРасходы КАК СписатьНаРасходы,
		|	Изделия.Этап             КАК Отправитель,
		|	Изделия.ЭтапПотребитель  КАК Получатель,
		|	Изделия.Заказ            КАК ОтправительЗаказ,
		|	Изделия.ЗаказПотребитель КАК ПолучательЗаказ
		|ИЗ
		|	ВТВыпускРазныеЗаказы КАК Изделия
		|ГДЕ
		|	НЕ Изделия.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗаказано.Номенклатура,
		|	ВТЗаказано.Характеристика,
		|	ВТЗаказано.Назначение,
		|	ВТЗаказано.Спецификация,
		|	ВТЗаказано.СписатьНаРасходы,
		|	ВТВыпуск.Этап,
		|	ВТЗаказано.Заказ,
		|	ВТЗаказано.Заказ,
		|	ВТЗаказано.Заказ
		|ИЗ
		|	ВТЗаказано КАК ВТЗаказано
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТВыпуск КАК ВТВыпуск
		|		ПО ВТЗаказано.Заказ = ВТВыпуск.Заказ
		|			И ВТЗаказано.Номенклатура = ВТВыпуск.Номенклатура
		|			И ВТЗаказано.Характеристика = ВТВыпуск.Характеристика
		|			И ВТЗаказано.Назначение = ВТВыпуск.Назначение
		|			И ВТЗаказано.ТипПроцесса = ВТВыпуск.ТипПроцесса
		|ГДЕ
		|	ВТЗаказано.ТипПроцесса = &Сборка
		|	И НЕ ВТЗаказано.Отменено
		|	И НЕ ВТВыпуск.Отменено
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ВТЗаказано.Номенклатура,
		|	ВТЗаказано.Характеристика,
		|	ВТЗаказано.Назначение,
		|	ВТЗаказано.Спецификация,
		|	ВТЗаказано.СписатьНаРасходы,
		|	ВТЗаказано.Заказ,
		|	ВТОбеспечение.Этап,
		|	ВТЗаказано.Заказ,
		|	ВТЗаказано.Заказ
		|ИЗ
		|	ВТЗаказано КАК ВТЗаказано
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТОбеспечение КАК ВТОбеспечение
		|		ПО ВТЗаказано.Заказ = ВТОбеспечение.Заказ
		|			И ВТЗаказано.Номенклатура = ВТОбеспечение.Номенклатура
		|			И ВТЗаказано.Характеристика = ВТОбеспечение.Характеристика
		|			И ВТЗаказано.ТипПроцесса = ВТОбеспечение.ТипПроцесса
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВыпуск КАК ВТВыпуск
		|		ПО (ВТОбеспечение.Номенклатура = ВТВыпуск.Номенклатура)
		|			И (ВТОбеспечение.Характеристика = ВТВыпуск.Характеристика)
		|			И (ВТОбеспечение.Этап = ВТВыпуск.ЭтапПотребитель)
		|ГДЕ
		|	ВТЗаказано.ТипПроцесса = &Разборка
		|	И НЕ ВТЗаказано.Отменено
		|	И НЕ ВТОбеспечение.Отменено
		|	И ВТВыпуск.Номенклатура ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Потребности.Заказ                         КАК Заказ,
		|	Потребности.Документ                      КАК Документ,
		|	Потребности.Номенклатура                  КАК Номенклатура,
		|	Потребности.Характеристика                КАК Характеристика,
		|	Потребности.Назначение                    КАК Назначение,
		|	Потребности.НазначениеПродукция           КАК НазначениеПродукция,
		|	Потребности.Спецификация                  КАК Спецификация,
		|	Потребности.СписатьНаРасходы              КАК СписатьНаРасходы,
		|	Потребности.СтатьяРасходов                КАК СтатьяРасходов,
		|	Потребности.АналитикаРасходов             КАК АналитикаРасходов,
		|	Потребности.АналитикаАктивовПассивов      КАК АналитикаАктивовПассивов,
		|	Потребности.Номенклатура.Представление    КАК НоменклатураПредставление,
		|	Потребности.Номенклатура.ЕдиницаИзмерения КАК ЕдиницаИзмерения,
		|	Потребности.Характеристика.Представление  КАК ХарактеристикаПредставление,
		|	Потребности.ТипПроцесса                   КАК ТипПроцесса,
		|	Потребности.ПартияПроизводства            КАК ПартияПроизводства,
		|	Потребности.МожноСоздаватьЭтапы           КАК МожноСоздаватьЭтапы,
		|	ВЫБОР
		|		КОГДА КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Потребности.Склад) = 1
		|			ТОГДА МИНИМУМ(Потребности.Склад)
		|		ИНАЧЕ НЕОПРЕДЕЛЕНО
		|	КОНЕЦ                                     КАК Склад,
		|	МИНИМУМ(Потребности.НомерСтроки)          КАК НомерСтроки,
		|	СУММА(Потребности.КоличествоПлан)         КАК КоличествоПлан,
		|	СУММА(Потребности.КоличествоОтменено)     КАК КоличествоОтменено
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТЗаказано.Заказ                    КАК Заказ,
		|		ВТЗаказано.Заказ                    КАК Документ,
		|		ВТЗаказано.Номенклатура             КАК Номенклатура,
		|		ВТЗаказано.Характеристика           КАК Характеристика,
		|		ВТЗаказано.Назначение               КАК Назначение,
		|		ВТЗаказано.НазначениеПродукция      КАК НазначениеПродукция,
		|		ВТЗаказано.Склад                    КАК Склад,
		|		ВТЗаказано.Спецификация             КАК Спецификация,
		|		ВТЗаказано.СписатьНаРасходы         КАК СписатьНаРасходы,
		|		ВТЗаказано.СтатьяРасходов           КАК СтатьяРасходов,
		|		ВТЗаказано.АналитикаРасходов        КАК АналитикаРасходов,
		|		ВТЗаказано.АналитикаАктивовПассивов КАК АналитикаАктивовПассивов,
		|		ВТЗаказано.ТипПроцесса              КАК ТипПроцесса,
		|		ВТЗаказано.НомерСтроки              КАК НомерСтроки,
		|		ВТЗаказано.Количество               КАК КоличествоПлан,
		|		ВЫБОР
		|			КОГДА ВТЗаказано.Отменено
		|				ТОГДА ВТЗаказано.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ                               КАК КоличествоОтменено,
		|		НЕОПРЕДЕЛЕНО                        КАК ПартияПроизводства,
		|		ВТЗаказано.МожноСоздаватьЭтапы      КАК МожноСоздаватьЭтапы
		|	ИЗ
		|		ВТЗаказано КАК ВТЗаказано
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОбеспечение.Заказ,
		|		ВТОбеспечение.Этап,
		|		ВТОбеспечение.Номенклатура,
		|		ВТОбеспечение.Характеристика,
		|		ВТОбеспечение.Назначение,
		|		ВЫБОР
		|			КОГДА &ОбеспечиватьОбособленно
		|				ТОГДА ВТОбеспечение.Этап.НазначениеПродукция
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВТОбеспечение.Склад,
		|		ВТОбеспечение.Спецификация,
		|		ВТОбеспечение.СписатьНаРасходы,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ВТОбеспечение.ТипПроцесса,
		|		ВТОбеспечение.НомерСтроки,
		|		ВТОбеспечение.Количество,
		|		ВЫБОР
		|			КОГДА ВТОбеспечение.Отменено
		|				ТОГДА ВТОбеспечение.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВТОбеспечение.Этап.ПартияПроизводства,
		|		ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы
		|	ИЗ
		|		ВТОбеспечение КАК ВТОбеспечение
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|			ПО ВТОбеспечение.Заказ = ЗаказНаПроизводство.Ссылка
		|	ГДЕ
		|		ВТОбеспечение.ТипПроцесса = &Сборка
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВТВыпускРазныеЗаказы.Заказ,
		|		ВТВыпускРазныеЗаказы.ЭтапПотребитель,
		|		ВТВыпускРазныеЗаказы.Номенклатура,
		|		ВТВыпускРазныеЗаказы.Характеристика,
		|		ВТВыпускРазныеЗаказы.Назначение,
		|		ВЫБОР
		|			КОГДА &ОбеспечиватьОбособленно
		|				ТОГДА ВТВыпускРазныеЗаказы.ЭтапПотребитель.НазначениеПродукция
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВТВыпускРазныеЗаказы.Склад,
		|		ВТВыпускРазныеЗаказы.Спецификация,
		|		ВТВыпускРазныеЗаказы.СписатьНаРасходы,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ВТВыпускРазныеЗаказы.ТипПроцесса,
		|		0,
		|		ВТВыпускРазныеЗаказы.Количество,
		|		ВЫБОР
		|			КОГДА ВТВыпускРазныеЗаказы.Отменено
		|				ТОГДА ВТВыпускРазныеЗаказы.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВТВыпускРазныеЗаказы.ЭтапПотребитель.ПартияПроизводства,
		|		ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы
		|	ИЗ
		|		ВТВыпускРазныеЗаказы КАК ВТВыпускРазныеЗаказы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|			ПО ВТВыпускРазныеЗаказы.ЗаказПотребитель = ЗаказНаПроизводство.Ссылка
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.Этап,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВЫБОР
		|			КОГДА &ОбеспечиватьОбособленно
		|				ТОГДА ЭтапПроизводства.НазначениеПродукция
		|			ИНАЧЕ
		|				ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
		|		КОНЕЦ,
		|		ВТВыпуск.Склад,
		|		ВТВыпуск.Спецификация,
		|		ВТВыпуск.СписатьНаРасходы,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		НЕОПРЕДЕЛЕНО,
		|		ВТВыпуск.ТипПроцесса,
		|		ВТВыпуск.НомерСтроки,
		|		ВТВыпуск.Количество,
		|		ВЫБОР
		|			КОГДА ВТВыпуск.Отменено
		|				ТОГДА ВТВыпуск.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВТВыпуск.ПартияПроизводства,
		|		ЗаказНаПроизводство.Статус = &СтатусЗаказаМожноСоздаватьЭтапы
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЗаказНаПроизводство2_2 КАК ЗаказНаПроизводство
		|			ПО ВТВыпуск.Заказ = ЗаказНаПроизводство.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства.Ссылка
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Разборка) КАК Потребности
		|
		|СГРУППИРОВАТЬ ПО
		|	Потребности.ТипПроцесса,
		|	Потребности.Спецификация,
		|	Потребности.Номенклатура,
		|	Потребности.Документ,
		|	Потребности.Заказ,
		|	Потребности.Характеристика,
		|	Потребности.Назначение,
		|	Потребности.НазначениеПродукция,
		|	Потребности.СписатьНаРасходы,
		|	Потребности.СтатьяРасходов,
		|	Потребности.АналитикаРасходов,
		|	Потребности.АналитикаАктивовПассивов,
		|	Потребности.Номенклатура.Представление,
		|	Потребности.Номенклатура.ЕдиницаИзмерения,
		|	Потребности.Характеристика.Представление,
		|	Потребности.ПартияПроизводства,
		|	Потребности.МожноСоздаватьЭтапы
		|
		|УПОРЯДОЧИТЬ ПО
		|	Документ,
		|	НомерСтроки,
		|	Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Обеспечение.Заказ                       КАК Заказ,
		|	Обеспечение.Этап                        КАК Этап,
		|	Обеспечение.Номенклатура                КАК Номенклатура,
		|	Обеспечение.Характеристика              КАК Характеристика,
		|	Обеспечение.Назначение                  КАК Назначение,
		|	Обеспечение.СписатьНаРасходы            КАК СписатьНаРасходы,
		|	Обеспечение.ДатаОкончанияПлан           КАК ДатаОкончанияПлан,
		|	МАКСИМУМ(Обеспечение.ДатаОкончанияФакт) КАК ДатаОкончанияФакт,
		|	Обеспечение.ТипПроцесса                 КАК ТипПроцесса,
		|	Обеспечение.ПартияПроизводства КАК ПартияПроизводства,
		|	СУММА(Обеспечение.КоличествоПлан)       КАК КоличествоПлан,
		|	СУММА(Обеспечение.КоличествоФакт)       КАК КоличествоФакт,
		|	МАКСИМУМ(Обеспечение.Спецификация)      КАК Спецификация
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТВыпуск.Заказ КАК Заказ,
		|		ВТВыпуск.Этап КАК Этап,
		|		ВТВыпуск.Номенклатура КАК Номенклатура,
		|		ВТВыпуск.Характеристика КАК Характеристика,
		|		ВТВыпуск.Назначение КАК Назначение,
		|		ВТВыпуск.СписатьНаРасходы КАК СписатьНаРасходы,
		|		ВТВыпуск.Количество КАК КоличествоПлан,
		|		ВЫБОР
		|			КОГДА ВТВыпуск.Произведено
		|				ТОГДА ВТВыпуск.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ КАК КоличествоФакт,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОкончанияПлан,
		|		ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа КАК ДатаОкончанияФакт,
		|		ВТВыпуск.ТипПроцесса КАК ТипПроцесса,
		|		ВТВыпуск.ПартияПроизводства КАК ПартияПроизводства,
		|		ВТВыпуск.Спецификация КАК Спецификация
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТВыпуск.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|			ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|				И ВТВыпуск.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|				И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|		И НЕ ВТВыпуск.Отменено
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВТВыпускРазныеЗаказы.ЗаказПотребитель,
		|		ВТВыпускРазныеЗаказы.Этап,
		|		ВТВыпускРазныеЗаказы.Номенклатура,
		|		ВТВыпускРазныеЗаказы.Характеристика,
		|		ВТВыпускРазныеЗаказы.Назначение,
		|		ВТВыпускРазныеЗаказы.СписатьНаРасходы,
		|		ВТВыпускРазныеЗаказы.Количество,
		|		ВЫБОР
		|			КОГДА ВТВыпускРазныеЗаказы.Произведено
		|				ТОГДА ВТВыпускРазныеЗаказы.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)),
		|		ЭтапПроизводства2_2.ФактическоеОкончаниеЭтапа,
		|		ВТВыпускРазныеЗаказы.ТипПроцесса,
		|		ВТВыпускРазныеЗаказы.ПартияПроизводства,
		|		ВТВыпускРазныеЗаказы.Спецификация
		|	ИЗ
		|		ВТВыпускРазныеЗаказы КАК ВТВыпускРазныеЗаказы
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТВыпускРазныеЗаказы.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|			ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|				И ВТВыпускРазныеЗаказы.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|				И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|	ГДЕ
		|		НЕ ВТВыпускРазныеЗаказы.Отменено
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТВыпуск.Заказ,
		|		ВТВыпуск.Этап,
		|		ВТВыпуск.Номенклатура,
		|		ВТВыпуск.Характеристика,
		|		ВТВыпуск.Назначение,
		|		ВТВыпуск.СписатьНаРасходы,
		|		0,
		|		ВыпущеноПереработчиком.КОформлениюРасход,
		|		ЕСТЬNULL(ГрафикЭтаповПроизводства2_2.ОкончаниеЭтапа, ДАТАВРЕМЯ(1, 1, 1)),
		|		ВыпущеноПереработчиком.Период,
		|		ВТВыпуск.ТипПроцесса,
		|		ВТВыпуск.ПартияПроизводства,
		|		ВТВыпуск.Спецификация
		|	ИЗ
		|		ВТВыпуск КАК ВТВыпуск
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|		ПО ВТВыпуск.Этап = ЭтапПроизводства2_2.Ссылка
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК ГрафикЭтаповПроизводства2_2
		|		ПО (ЭтапПроизводства2_2.Распоряжение = ГрафикЭтаповПроизводства2_2.Распоряжение)
		|		И ВТВыпуск.Этап = ГрафикЭтаповПроизводства2_2.ЭтапПроизводства
		|		И (ГрафикЭтаповПроизводства2_2.СтатусГрафика = &СтатусГрафика)
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ЗаказыПоставщикам.Обороты(,,
		|									Регистратор,
		|									ТИПЗНАЧЕНИЯ(ЗаказПоставщику) В(
		//++ Устарело_Переработка24
		|										ТИП(Документ.ЗаказПереработчику),
		//-- Устарело_Переработка24
		|										ТИП(Документ.ЗаказПереработчику2_5))
		|			) КАК ВыпущеноПереработчиком
		|		ПО ЭтапПроизводства2_2.ЗаказПереработчику = ВыпущеноПереработчиком.ЗаказПоставщику
		|		И ВТВыпуск.КодСтроки = ВыпущеноПереработчиком.КодСтроки
		|
		|	ГДЕ
		|		ВТВыпуск.ТипПроцесса = &Сборка
		|		И НЕ ВТВыпуск.Отменено
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТОбеспечение.Заказ,
		|		ВТОбеспечение.Этап,
		|		ВТОбеспечение.Номенклатура,
		|		ВТОбеспечение.Характеристика,
		|		ВТОбеспечение.Назначение,
		|		ВТОбеспечение.СписатьНаРасходы,
		|		ВТОбеспечение.Количество,
		|		ВЫБОР
		|			КОГДА ВТСрокиРазборки.ЭтапыЗавершены
		|				ТОГДА ВТОбеспечение.Количество
		|			ИНАЧЕ 0
		|		КОНЕЦ,
		|		ВТСрокиРазборки.ДатаОкончанияПлан,
		|		ВЫБОР
		|			КОГДА ВТСрокиРазборки.ЭтапыЗавершены
		|				ТОГДА ВТСрокиРазборки.ДатаОкончанияФакт
		|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
		|		КОНЕЦ,
		|		ВТОбеспечение.ТипПроцесса,
		|		ЭтапПроизводства2_2.ПартияПроизводства,
		|		ВТОбеспечение.Спецификация
		|	ИЗ
		|		ВТОбеспечение КАК ВТОбеспечение
		|			ЛЕВОЕ СОЕДИНЕНИЕ Документ.ЭтапПроизводства2_2 КАК ЭтапПроизводства2_2
		|			ПО ВТОбеспечение.Этап = ЭтапПроизводства2_2.Ссылка
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТСрокиРазборки КАК ВТСрокиРазборки
		|			ПО (ЭтапПроизводства2_2.ПартияПроизводства = ВТСрокиРазборки.ПартияПроизводства)
		|	ГДЕ
		|		ВТОбеспечение.ТипПроцесса = &Разборка
		|		И НЕ ВТОбеспечение.Отменено
		|	) КАК Обеспечение
		|
		|СГРУППИРОВАТЬ ПО
		|	Обеспечение.Этап,
		|	Обеспечение.Назначение,
		|	Обеспечение.Номенклатура,
		|	Обеспечение.ДатаОкончанияПлан,
		|	Обеспечение.Характеристика,
		|	Обеспечение.ТипПроцесса,
		|	Обеспечение.Заказ,
		|	Обеспечение.СписатьНаРасходы,
		|	Обеспечение.ПартияПроизводства
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|ВЫБРАТЬ
		|	Этапы.Распоряжение                 КАК Заказ,
		|	Этапы.Ссылка                       КАК Этап,
		|	Этапы.ПартияПроизводства           КАК ПартияПроизводства,
		|	Этапы.НаименованиеЭтапа            КАК НаименованиеЭтапа,
		|	Этапы.Подразделение                КАК Подразделение,
		|	ВЫБОР
		|		КОГДА Этапы.Статус = &СтатусЭтапВыполнен
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ                              КАК Выполнен,
		|	ВЫБОР
		|		КОГДА Этапы.УпаковкаПлан = Этапы.УпаковкаФакт
		|				И Этапы.УпаковкаПлан = Этапы.УпаковкаОтменено
		|			ТОГДА Этапы.КоличествоУпаковокПлан
		|		ИНАЧЕ Этапы.КоличествоУпаковокПлан * ЕСТЬNULL(&КоэффициентУпаковкиПлан, 1)
		|	КОНЕЦ                              КАК КоличествоПлан,
		|	ВЫБОР
		|		КОГДА Этапы.УпаковкаПлан = Этапы.УпаковкаФакт
		|				И Этапы.УпаковкаПлан = Этапы.УпаковкаОтменено
		|			ТОГДА Этапы.КоличествоУпаковокФакт
		|		ИНАЧЕ Этапы.КоличествоУпаковокФакт * ЕСТЬNULL(&КоэффициентУпаковкиФакт, 1)
		|	КОНЕЦ                              КАК КоличествоФакт,
		|	ВЫБОР
		|		КОГДА Этапы.УпаковкаПлан = Этапы.УпаковкаФакт
		|				И Этапы.УпаковкаПлан = Этапы.УпаковкаОтменено
		|			ТОГДА Этапы.КоличествоУпаковокОтменено
		|		ИНАЧЕ Этапы.КоличествоУпаковокОтменено * ЕСТЬNULL(&КоэффициентУпаковкиОтменено, 1)
		|	КОНЕЦ                              КАК КоличествоОтменено,
		|	ВЫБОР
		|		КОГДА Этапы.УпаковкаПлан = Этапы.УпаковкаФакт
		|				И Этапы.УпаковкаПлан = Этапы.УпаковкаОтменено
		|				И Этапы.УпаковкаПлан <> ЗНАЧЕНИЕ(Справочник.УпаковкиЕдиницыИзмерения.ПустаяСсылка)
		|			ТОГДА Этапы.УпаковкаПлан
		|		ИНАЧЕ Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура.ЕдиницаИзмерения
		|	КОНЕЦ                              КАК ЕдиницаИзмерения,
		|	Этапы.НомерЭтапа                   КАК НомерЭтапа,
		|	Этапы.НомерСледующегоЭтапа         КАК НомерСледующегоЭтапа,
		|	График.ОкончаниеЭтапа              КАК ДатаОкончанияПлан,
		|	Этапы.ФактическоеОкончаниеЭтапа    КАК ДатаОкончанияФакт,
		|	Этапы.ТипПроизводственногоПроцесса КАК ТипПроцесса,
		|	Этапы.Распоряжение.ТипПроизводственногоПроцесса = &БезСпецификаций КАК ЭтапПроизводствоБезСпецификации,
		|	Этапы.ПроизводствоНаСтороне        КАК ЭтапПроизводствоНаСтороне,
		|	ЛОЖЬ КАК Обработан
		|ИЗ
		|	Документ.ЭтапПроизводства2_2 КАК Этапы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикЭтаповПроизводства2_2 КАК График
		|		ПО Этапы.Распоряжение = График.Распоряжение
		|			И Этапы.Ссылка = График.ЭтапПроизводства
		|			И (График.СтатусГрафика = &СтатусГрафика)
		|ГДЕ
		|	Этапы.Распоряжение В(&Заказы)
		|	И Этапы.Проведен
		|
		|УПОРЯДОЧИТЬ ПО
		|	ПартияПроизводства,
		|	НомерЭтапа,
		|	НомерСледующегоЭтапа,
		|	Этапы.Ссылка
		|	
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|
		|// ЗаказыБезСпецификаций
		|ВЫБРАТЬ
		|	Заказы.Ссылка
		|ИЗ
		|	Документ.ЗаказНаПроизводство2_2 КАК Заказы
		|ГДЕ
		|	Заказы.Ссылка В (&Заказы)
		|	И Заказы.Проведен
		|	И Заказы.ТипПроизводственногоПроцесса = &БезСпецификаций";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
		"&ОбеспечиватьОбособленно",
		Документы.ЗаказНаПроизводство2_2.ТекстЗапросаПолеОбособленно("ЗаказНаПроизводство"));
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиПлан",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаПлан",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
			
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиФакт",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаФакт",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиОтменено",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"Этапы.УпаковкаОтменено",
			"Этапы.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Константы
Функция ТипСтрокиЗаказ()
	
	Возврат 3;
	
КонецФункции

Функция ТипСтрокиПродукция()
	
	Возврат 1;
	
КонецФункции

Функция ТипСтрокиПолуфабрикат()
	
	Возврат 2;
	
КонецФункции

Функция ТипСтрокиЭтап()
	
	Возврат 4;
	
КонецФункции

Функция ТипСтрокиПолуфабрикатДругогоЗаказа()
	
	Возврат 5;
	
КонецФункции

Функция ТипСтрокиПрочиеИзделия()
	
	Возврат 7;
	
КонецФункции

Функция ТипСтрокиСоздатьЭтапы()
	
	Возврат 6;
	
КонецФункции

Процедура ЗаполнитьРассчитываемыеРеквизитыДерева(СтрокаДерева)
	
	СтрокаДерева.НомерКартинки = НомерКартинки(СтрокаДерева.ТипСтроки, СтрокаДерева.ТипПроцесса);
	
	Если СтрокаДерева.ТипСтроки = ТипСтрокиЭтап()
		ИЛИ СтрокаДерева.ТипСтроки = ТипСтрокиПолуфабрикат()
		ИЛИ СтрокаДерева.ТипСтроки = ТипСтрокиПолуфабрикатДругогоЗаказа() Тогда
		
		СтрокаДерева.ВыполненПроизведен = ?(СтрокаДерева.ТипСтроки = ТипСтрокиЭтап(),
			СтрокаДерева.Выполнен,
			(СтрокаДерева.КоличествоПлан - СтрокаДерева.КоличествоОтменено) <= СтрокаДерева.КоличествоФакт);
		
		СтрокаДерева.ВыполненПроизведенРодитель = СтрокаДерева.Родитель.ВыполненПроизведен;
		
	Иначе
		
		СтрокаДерева.ВыполненПроизведен = Ложь;
		
	КонецЕсли;
	
	Если Не (СтрокаДерева.ТипСтроки = ТипСтрокиЭтап()
				И (СтрокаДерева.ЭтапПроизводствоНаСтороне Или СтрокаДерева.ЭтапПроизводствоБезСпецификации)) Тогда
		
		СтрокаДерева.КоличествоДефицит = СтрокаДерева.КоличествоПлан
			- СтрокаДерева.КоличествоОтменено
			- СтрокаДерева.КоличествоФакт;
		
		СтрокаДерева.КоличествоДефицитИтого = СтрокаДерева.КоличествоПланИтого
			- СтрокаДерева.КоличествоОтмененоИтого
			- СтрокаДерева.КоличествоФактИтого;
		
	КонецЕсли;
	
КонецПроцедуры

Функция НомерКартинки(ТипСтроки, ТипПроцесса)
	
	Если ТипСтроки = ТипСтрокиПолуфабрикат()
		ИЛИ ТипСтроки = ТипСтрокиПолуфабрикатДругогоЗаказа() Тогда
		
		Если ТипПроцесса = ПредопределенноеЗначение("Перечисление.ТипыПроизводственныхПроцессов.Сборка") Тогда
			
			Результат = 3;
			
		Иначе
			
			Результат = 2;
			
		КонецЕсли;
		
	ИначеЕсли ТипСтроки = ТипСтрокиЭтап() Тогда
		
		Результат = 1;
		
	Иначе
		
		Результат = 0;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#КонецЕсли
