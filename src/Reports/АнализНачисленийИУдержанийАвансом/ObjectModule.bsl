#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ПараметрИсчисленныеНалоги = КомпоновщикНастроек.Настройки.ПараметрыДанных.НайтиЗначениеПараметра(Новый ПараметрКомпоновкиДанных("ИсчисленныеНалоги"));
	Если ПараметрИсчисленныеНалоги <> Неопределено Тогда
		ПараметрИсчисленныеНалоги.Значение = 
			Перечисления.ВидыОсобыхНачисленийИУдержаний.СтрокиИсчисленныхНалогов();
	КонецЕсли;

	УчетНачисленнойЗарплаты.ПриКомпоновкеОтчетаАнализНачисленийИУдержаний(
		ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	
	ПриКомпоновкеОтчета(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ИнициализироватьОтчет(КлючВарианта = "") Экспорт
	
	ЗаполнитьОбщиеИсточникиДанных = Ложь;
	
	Для Каждого НаборДанных Из СхемаКомпоновкиДанных.НаборыДанных Цикл
		
		Если ТипЗнч(НаборДанных) = Тип("НаборДанныхЗапросСхемыКомпоновкиДанных")
			И (СтрНайти(НаборДанных.Запрос, "ОбщиеЗапросы_") > 0
				Или СтрНайти(НаборДанных.Запрос, "Представления_") > 0) Тогда
			
			ЗаполнитьОбщиеИсточникиДанных = Истина;
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если ЗаполнитьОбщиеИсточникиДанных Тогда
		
		ДополнительныеПоляПредставлений = ДополнительныеПоляПредставлений();
		Если ДополнительныеПоляПредставлений.Свойство("Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний") Тогда
			
			РазрядыКатегории =
				ДополнительныеПоляПредставлений.Представления_КадровыеДанныеСотрудниковАнализНачисленийИУдержаний.НайтиСтроки(
					Новый Структура("ИмяПоля", "РазрядКатегория"));
				
			Если РазрядыКатегории.Количество() = 0 Тогда
				
				НаборДанных.Запрос = СтрЗаменить(НаборДанных.Запрос, "Данные.РазрядКатегория КАК", "НЕОПРЕДЕЛЕНО КАК");
				НаборДанных.Запрос = СтрЗаменить(НаборДанных.Запрос, "Данные.РазрядКатегорияНаКонецПериода КАК", "НЕОПРЕДЕЛЕНО КАК");
				НаборДанных.Запрос = СтрЗаменить(НаборДанных.Запрос, "Данные.РазрядКатегорияГоловногоСотрудникаНаКонецПериода КАК", "НЕОПРЕДЕЛЕНО КАК");
				
			КонецЕсли;
			
		КонецЕсли;
		ЗарплатаКадрыОбщиеНаборыДанных.ЗаполнитьОбщиеИсточникиДанныхОтчета(ЭтотОбъект, ДополнительныеПоляПредставлений);
	КонецЕсли;
	
	Если Не ПустаяСтрока(КлючВарианта) Тогда
		
		Отбор = КомпоновщикНастроек.Настройки.Отбор;
		Отбор.Элементы.Очистить();
		
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "Организация", ВидСравненияКомпоновкиДанных.Равно, Справочники.Организации.ПустаяСсылка());
		ОбщегоНазначенияКлиентСервер.ДобавитьЭлементКомпоновки(Отбор, "ФизическоеЛицо", ВидСравненияКомпоновкиДанных.ВСписке, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Справочники.ФизическиеЛица.ПустаяСсылка()));
		
	КонецЕсли;
	
КонецПроцедуры

// Для общей формы "Форма отчета" подсистемы "Варианты отчетов".
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	Если КлючСхемы <> КлючВарианта Тогда
		
		ЗарплатаКадрыОтчеты.ИнициализироватьНастройкиОтчета(ЭтотОбъект, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
		
		ЗарплатаКадрыОтчеты.ОтчетАнализНачисленийИУдержанийПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД);
		
		ЗарплатаКадрыОтчеты.ПодключитьСхему(Контекст, ЭтотОбъект, КлючСхемы, КлючВарианта, НовыеПользовательскиеНастройкиКД);
		
	КонецЕсли;
	
КонецПроцедуры

// Компоновка вариантов отчета.
Процедура ПриКомпоновкеОтчета(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	Если Не СтандартнаяОбработка Тогда
		Возврат
	КонецЕсли;
	
	КлючВарианта = ЗарплатаКадрыОтчеты.КлючВарианта(КомпоновщикНастроек);
	
	Если КлючВарианта = "Т51ПерваяПоловинаМесяца" Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаТ51(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	ИначеЕсли КлючВарианта = "Т49ПерваяПоловинаМесяца" Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаТ49(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	ИначеЕсли ЗарплатаКадрыОтчеты.ЭтоКлючВариантаОтчетаРасчетныйЛисток(КлючВарианта) Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаРасчетныйЛисток(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда
		ЗарплатаКадрыОтчеты.ПриКомпоновкеРезультатаВТабличныйДокумент(ЭтотОбъект, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	КонецЕсли;
	
КонецПроцедуры

Функция ДополнительныеПоляПредставлений() Экспорт
	
	ДополнительныеПоля = Новый Структура;
	УчетНачисленнойЗарплаты.ЗаполнитьДополнительныеПоляОтчетаАнализНачисленийИУдержаний(ЭтотОбъект, ДополнительныеПоля);
	
	Возврат ДополнительныеПоля;
	
КонецФункции

 

#КонецОбласти

#Иначе
ВызватьИсключение НСтр("ru = 'Недопустимый вызов объекта на клиенте.';
						|en = 'Invalid object call on the client.'");
#КонецЕсли