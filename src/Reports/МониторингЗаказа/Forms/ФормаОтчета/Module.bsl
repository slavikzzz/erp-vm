
#Область ОписаниеПеременных

&НаКлиенте
Перем Этапы;

&НаКлиенте
Перем Изделия;

&НаКлиенте
Перем ПараметрыОбработчикаОжидания;

&НаКлиенте
Перем ФормаДлительнойОперации;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("ПараметрКоманды")
		И ТипЗнч(Параметры.ПараметрКоманды) = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
		ЗаказНаПроизводство = Параметры.ПараметрКоманды;
	Иначе
		ЗаказНаПроизводство = Параметры.ЗаказНаПроизводство;
	КонецЕсли;
	
	ДиаграммаГанта.АвтоОпределениеПолногоИнтервала = Истина;
	ДиаграммаГанта.ПоддержкаМасштаба = ПоддержкаМасштабаДиаграммыГанта.Авто;
	ДиаграммаГанта.ОтображатьЛегенду = Ложь;
	ДиаграммаГанта.ВертикальнаяПрокрутка = Истина;
	ДиаграммаГанта.ОтображатьПустыеЗначения = Ложь;
	ДиаграммаГанта.ОтображатьЗаголовок = Ложь;
	ДиаграммаГанта.ОтображениеТекстаЗначения = ОтображениеТекстаЗначенияДиаграммыГанта.Право;
	
	РабочаяДата = ОбщегоНазначения.ТекущаяДатаПользователя();
	
	ТолькоПродукция = Истина;
	
	ПараметрыВывода = Новый Структура();
	ПараметрыВывода.Вставить("ПоказыватьЭтапы", Истина);
	ПараметрыВывода.Вставить("ПоказыватьПеремещения", Истина);
	ПараметрыВывода.Вставить("ПоказыватьМатериалы", Истина);
	ПараметрыВывода.Вставить("РазворачиватьПервыйУровеньПослеЗагрузки", Ложь);
	ПараметрыВывода.Вставить("РабочаяДата", РабочаяДата);
	
	УстановитьЖелаемуюДатуВыпуска();
	
	НастроитьДиаграммуГанта();
	
	ИнициализироватьКэшДанныхТекущейСтроки();
	
	// 60003872
	ПереопределитьПоляКлючаДинамическогоСпискаСписок();
	
	Список.Параметры.УстановитьЗначениеПараметра("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	УстановитьОтборПоВидуСтроки();
	
	НастроитьВидимостьДоступностьЭлементов();
	
	РассчитатьИтогиИЗакэшироватьГрафикПроизводства();
	
	ОбновитьФормуПоЗаказу();
	
КонецПроцедуры

&НаСервере
Процедура ИнициализироватьКэшДанныхТекущейСтроки()
	
	ПустойКлючСвязи = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	ТекущаяСтрокаКэшДанных = Новый Структура("КлючПартия,КлючНоменклатура", ПустойКлючСвязи, ПустойКлючСвязи);

КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	СмещениеВремени = СтандартныеПодсистемыКлиент.ПараметрыРаботыКлиента().СмещениеСтандартногоВремени;
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		
		ПодключитьОбработчикОжидания("НачатьОжиданиеДлительнойОперации", 0.1, Истина);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ЗаказНаПроизводствоПриИзменении(Элемент)
	
	ЗаказНаПроизводствоПриИзмененииНаСервере();
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		
		НачатьОжиданиеДлительнойОперации();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаказНаПроизводствоПриИзмененииНаСервере()
	
	Точки.Очистить();
	ДиаграммаГанта.Очистить();
	
	УстановитьЖелаемуюДатуВыпуска();
	
	ИнициализироватьКэшДанныхТекущейСтроки();
	
	Список.Параметры.УстановитьЗначениеПараметра("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	РассчитатьИтогиИЗакэшироватьГрафикПроизводства(); // по результату выводит первый уровень диаграммы
	
	ОбновитьФормуПоЗаказу();
	
КонецПроцедуры

&НаКлиенте
Процедура ТолькоПродукцияПриИзменении(Элемент)
	
	УстановитьОтборПоВидуСтроки();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьЭтапыПриИзменении(Элемент)
	
	ПараметрыВывода.ПоказыватьЭтапы = ПоказыватьЭтапы;
	
	ЗагрузитьПервыйУровень();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьПеремещенияПриИзменении(Элемент)
	
	ПараметрыВывода.ПоказыватьПеремещения = ПоказыватьПеремещения;
	
	ЗагрузитьПервыйУровень();
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказыватьМатериалыПриИзменении(Элемент)
	
	ПараметрыВывода.ПоказыватьМатериалы = ПоказыватьМатериалы;
	
	ЗагрузитьПервыйУровень();
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаПриИзменении(Элемент)
	
	Если Не ЗначениеЗаполнено(Точки) Тогда
		Возврат;
	КонецЕсли;
	
	ОценкаПроизводительностиКлиент.ЗамерВремени(
		"Отчет.МониторингЗаказа.ФормаОтчета.ДостроитьДерево");
	
	СерияДиаграммы = СерияДиаграммы();
	
	Для ИндексТочки = -Точки.Количество() + 1 По 0 Цикл
		
		Точка = Точки[-ИндексТочки];
		
		ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
		
		Развернута = ДиаграммаГанта.РазвернутаТочка(ТочкаДиаграммы);
		
		Если Не Точка.Загружена И Развернута Тогда
			ЗагрузитьТочку(Точка, ТочкаДиаграммы)
		КонецЕсли;
		
		Если Точка.Развернута <> Развернута Тогда
			РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Развернута, СерияДиаграммы);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура ДиаграммаГантаОбработкаРасшифровки(Элемент, Расшифровки, СтандартнаяОбработка, Дата)
	
	
	СтандартнаяОбработка = Ложь;
	
	СписокДействий = Новый СписокЗначений();
	
	Если ТипЗнч(Расшифровки) = Тип("Массив") Тогда
		СписокРасшифровок = Расшифровки;
	Иначе
		СписокРасшифровок = Новый Массив();
		СписокРасшифровок.Добавить(Расшифровки);
	КонецЕсли;
	
	Для каждого Расшифровка Из СписокРасшифровок Цикл
		
		Если Не ТипЗнч(Расшифровка) = Тип("Структура")Тогда
			Продолжить;
		КонецЕсли;
		
		ТипСтроки = Расшифровка.Тип;
		
		Если ТипСтроки = "Этап" Тогда
			ДобавитьДействие(СписокДействий, "ПоказатьЗначение", Расшифровка.Значение.Этап);
		КонецЕсли;
		
		Если ТипСтроки = "Изделие" Тогда
			ДобавитьДействие(СписокДействий, "ПоказатьЗначение", Расшифровка.Значение.Номенклатура);
		КонецЕсли;
		
		Состояние = Расшифровка.Состояние;
		
		Если ТипСтроки = "Этап" И Не Состояние = 3 Тогда
		
			СтруктураОтбора = Новый Структура();
			
			СтруктураОтбора.Вставить("ЗаказНаПроизводство", ЗаказНаПроизводство);
			СтруктураОтбора.Вставить("Этап", Расшифровка.Значение.Этап);
			СтруктураОтбора.Вставить("КлючПартия", Расшифровка.Значение.КлючПартия);
			
			ДобавитьДействие(СписокДействий, "ПоказатьОбеспечение", СтруктураОтбора);
			
		КонецЕсли;
		
		Если ТипСтроки = "Этап" И Состояние = 4 Тогда
			
			СписокОбъектов = Новый Массив;
			СписокОбъектов.Добавить(Расшифровка.Значение.Этап);
			
			ДобавитьДействие(СписокДействий, "ПоказатьПроблемы", СписокОбъектов);
			
		КонецЕсли;
		
		Если (ТипСтроки = "Изделие" И Состояние = 2)
			И ЗначениеЗаполнено(Расшифровка.Значение.ЗаказНаПоступление) Тогда
			
			ДобавитьДействие(СписокДействий, "ПоказатьЗначение", Расшифровка.Значение.ЗаказНаПоступление);
			
		КонецЕсли;
		
		Если (ТипСтроки = "Изделие" И Состояние = 2)
			И ТипЗнч(Расшифровка.Значение.ЗаказНаПоступление) = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
			
			ДобавитьДействие(СписокДействий, "ПерейтиВМониторинг", Расшифровка.Значение.ЗаказНаПоступление);
			
		КонецЕсли;
		
		Прервать;
		
	КонецЦикла;
	
	Если СписокДействий.Количество() > 0 Тогда
		ОписаниеОповещенияВыбораИзСписка = Новый ОписаниеОповещения("ВыборИзСпискаДействийЗавершение", ЭтотОбъект);
		ПоказатьВыборИзСписка(ОписаниеОповещенияВыбораИзСписка, СписокДействий);
	КонецЕсли;

КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	ПараметрыВывода.ПоказыватьЭтапы = ПоказыватьЭтапы;
	ПараметрыВывода.ПоказыватьПеремещения = ПоказыватьПеремещения;
	ПараметрыВывода.ПоказыватьМатериалы = ПоказыватьМатериалы;
	
КонецПроцедуры

&НаКлиенте
Процедура СписокПриАктивизацииСтроки(Элемент)
	
	ТекущиеДанные = Элементы.Список.ТекущиеДанные;
	
	Если Не ТекущиеДанные = Неопределено Тогда
		ЗаполнитьЗначенияСвойств(ТекущаяСтрокаКэшДанных, Элементы.Список.ТекущиеДанные);
	Иначе
		Возврат;
	КонецЕсли;
	
	ПодключитьОбработчикОжидания("ЗагрузитьПервыйУровень", 0.1, Истина);
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяСтрокаОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)

	МониторингЗаказаКлиент.ИнформационнаяСтрокаОбработкаНавигационнойСсылки(ЗаказНаПроизводство, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка);

КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	
	Точки.Очистить();
	ДиаграммаГанта.Очистить();
	
	Список.Параметры.УстановитьЗначениеПараметра("ЗаказНаПроизводство", ЗаказНаПроизводство);
	
	РассчитатьИтогиИЗакэшироватьГрафикПроизводства(Истина); // по результату выводит первый уровень диаграммы
	
	Если НачатьОжиданиеДлительнойОперации Тогда
		
		НачатьОжиданиеДлительнойОперации();
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсе(Команда)
	
	Готово = ЗагрузитьВсеНаСервере(500);
	
	Если Не Готово Тогда
		ПоказатьВопросРазвернутьВсеПродолжитьВывод();
	КонецЕсли;
	
	РазвернутьВсеТочки();
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсе(Команда)
	
	СвернутьВсеТочки();
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Кэш

&НаСервере
Процедура РассчитатьИтогиИЗакэшироватьГрафикПроизводства(ПолныйРасчет = Ложь)
	
	ГрафикЗагружен = Ложь;
	
	ОтменитьДлительнуюОперацию();
	
	Результат = МониторингЗаказа.ЗапуститьРасчетИтоговПоЗаказуНаПроизводство(ЗаказНаПроизводство, ПолныйРасчет);
	
	ИдентификаторЗадания = Результат.ИдентификаторЗадания;
	
	Если Результат.ДатаАктуальности > '00010101' Или ПроверитьВыполнениеЗадания(ИдентификаторЗадания) Тогда
		
		ЗагрузитьПервыйУровеньПослеРасчетаНаСервере();
		
		НачатьОжиданиеДлительнойОперации = Ложь;
		
	Иначе
		
		НачатьОжиданиеДлительнойОперации = Истина;
		
		ИмяОбработчикаОжидания = ОбработчикРасчетИтоговГрафикаПроизводстваОтложенно();
		
	КонецЕсли;
	
	Элементы.АктуальностьТекст.Заголовок = СтрШаблон(НСтр("ru = 'на дату: %1';
															|en = 'as of date: %1'"), Результат.ДатаАктуальности + СмещениеВремени);
	Элементы.АктуальностьТекст.Видимость = Результат.ДатаАктуальности > '00010101';
	
	МониторингЗаказа.ЗаполнитьИнформационнуюСтроку(ЗаказНаПроизводство, ИнформационнаяСтрока, ПараметрыВывода);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ОбработчикРасчетИтоговГрафикаПроизводстваОтложенно()
	
	Возврат "ЗагрузитьПервыйУровеньПослеРасчетаНаСервере";
	
КонецФункции

#КонецОбласти

#Область ДинамическийВывод

&НаСервереБезКонтекста
Процедура ЗагрузитьСледующийУровень(Отбор, Этапы, Изделия, РабочаяДата, ЖелаемаяДата, ПараметрыВывода)
	
	ПоказыватьЭтапы = ПараметрыВывода.ПоказыватьЭтапы;
	ПоказыватьПеремещения = ПараметрыВывода.ПоказыватьПеремещения;
	ПоказыватьМатериалы = ПараметрыВывода.ПоказыватьМатериалы;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ПустойКлючСвязи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	Запрос.УстановитьПараметр("ПоказыватьПеремещения", ПоказыватьПеремещения);
	Запрос.УстановитьПараметр("ПоказыватьЭтапы", ПоказыватьЭтапы);
	Запрос.УстановитьПараметр("ПоказыватьМатериалы", ПоказыватьМатериалы);
	Запрос.УстановитьПараметр("ЖелаемаяДата", ЖелаемаяДата);
	Запрос.УстановитьПараметр("РабочаяДата", РабочаяДата);
	Запрос.УстановитьПараметр("ОсновнойКалендарь", Константы.ОсновнойКалендарьПредприятия.Получить());
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	
	|	Изделия.Номенклатура        КАК Номенклатура,
	|	Изделия.Характеристика      КАК Характеристика,
	|	Изделия.Склад               КАК Склад,
	|	Изделия.Назначение          КАК Назначение,
	|	Изделия.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура    КАК КлючНоменклатура,
	|	Изделия.КлючПартия          КАК КлючПартия,
	|
	|	МИНИМУМ(Изделия.Этап) КАК Этап,
	|	МИНИМУМ(Изделия.Этап) КАК ЭтапПроизводства,
	|
	|	СУММА(Изделия.Требуется) КАК Требуется,
	|	СУММА(Изделия.Готово)    КАК Готово
	|
	|ПОМЕСТИТЬ ИзделияПромежуточнаяТаблица
	|ИЗ
	|	РегистрСведений.СтруктураЗаказа КАК Изделия
	|
	|ГДЕ
	|	&Отбор
	|	И Изделия.ВидСтроки В (
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Продукция),
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
	|
	|СГРУППИРОВАТЬ ПО
	|	Изделия.Номенклатура,
	|	Изделия.Характеристика,
	|	Изделия.Склад,
	|	Изделия.Назначение,
	|	Изделия.ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура,
	|	Изделия.КлючПартия
	|
	|ИМЕЮЩИЕ
	|	СУММА(Изделия.Требуется) > 0 ИЛИ СУММА(Изделия.Готово) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство,
	|	КлючНоменклатура,
	|	КлючПартия
	|;";
	
	Если Не ПоказыватьПеремещения Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПОМЕСТИТЬ ИзделияПромежуточнаяТаблица", "ПОМЕСТИТЬ ИзделияВременнаяТаблица");
		Запрос.Текст = Запрос.Текст +
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	
		|	Изделия.Номенклатура        КАК Номенклатура,
		|	Изделия.Характеристика      КАК Характеристика,
		|	ДД.Склад                    КАК Склад,
		|	Изделия.Назначение          КАК Назначение,
		|	Изделия.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	Изделия.КлючНоменклатура    КАК КлючНоменклатура
		|
		|ПОМЕСТИТЬ ИзделияИСкладыДляРасчетаЦепочкиПеремещений
		|ИЗ
		|	ИзделияВременнаяТаблица КАК Изделия
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КэшНСИСтруктурыЗаказа КАК ДД
		|	ПО Изделия.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство
		|	 И Изделия.Номенклатура        = ДД.Номенклатура
		|	 И Изделия.Характеристика      = ДД.Характеристика
		|	 И Изделия.Назначение          = ДД.Назначение
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.КэшНСИСтруктурыЗаказа КАК КэшНСИ
		|	ПО Изделия.Номенклатура        = КэшНСИ.Номенклатура
		|	 И Изделия.Характеристика      = КэшНСИ.Характеристика
		|	 И Изделия.Склад               = КэшНСИ.Склад
		|	 И Изделия.Назначение          = КэшНСИ.Назначение
		|	 И Изделия.ЗаказНаПроизводство = КэшНСИ.ЗаказНаПроизводство
		|	 И КэшНСИ.Запланировать
		|	 И КэшНСИ.ТипОбеспечения = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаПроизводство,
		|	КлючНоменклатура
		|;
		|
		|ВЫБРАТЬ
		|	
		|	Изделия.Номенклатура        КАК Номенклатура,
		|	Изделия.Характеристика      КАК Характеристика,
		|	Изделия.Склад               КАК Склад,
		|	Изделия.Назначение          КАК Назначение,
		|	Изделия.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	Изделия.КлючНоменклатура    КАК КлючНоменклатура,
		|	Изделия.КлючПартия          КАК КлючПартия,
		|	Изделия.КлючСвязиПеремещение КАК КлючСвязиПеремещение,
		|
		|	МИНИМУМ(Изделия.Этап) КАК Этап,
		|
		|	СУММА(Изделия.Требуется) КАК Требуется,
		|	СУММА(Изделия.Готово)    КАК Готово
		|	
		|ПОМЕСТИТЬ ЦепочкиПеремещений
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК Изделия
		|
		|ГДЕ
		|	ИСТИНА В
		|		(ВЫБРАТЬ ПЕРВЫЕ 1
		|			ИСТИНА
		|		ИЗ
		|			ИзделияИСкладыДляРасчетаЦепочкиПеремещений КАК ДД
		|		ГДЕ
		|			ДД.Номенклатура = Изделия.Номенклатура
		|			И ДД.Характеристика = Изделия.Характеристика
		|			И ДД.Склад = Изделия.Склад
		|			И ДД.Назначение = Изделия.Назначение
		|			И ДД.ЗаказНаПроизводство = Изделия.ЗаказНаПроизводство
		|			И ДД.КлючНоменклатура = Изделия.КлючСвязиПеремещение)
		|
		|	И Изделия.ВидСтроки В (
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление))
		|
		|СГРУППИРОВАТЬ ПО
		|
		|	Изделия.Номенклатура,
		|	Изделия.Характеристика,
		|	Изделия.Склад,
		|	Изделия.Назначение,
		|	Изделия.ЗаказНаПроизводство,
		|	Изделия.КлючСвязиПеремещение,
		|	Изделия.КлючНоменклатура,
		|	Изделия.КлючПартия
		|
		|ИМЕЮЩИЕ
		|	СУММА(Изделия.Требуется) > 0 ИЛИ СУММА(Изделия.Готово) > 0
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаПроизводство,
		|	КлючСвязиПеремещение
		|;
		|
		|ВЫБРАТЬ
		|
		|	Изделия.Номенклатура        КАК Номенклатура,
		|	Изделия.Характеристика      КАК Характеристика,
		|	Изделия.Склад               КАК Склад,
		|	Изделия.Назначение          КАК Назначение,
		|	Изделия.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|	Изделия.КлючНоменклатура    КАК КлючНоменклатура,
		|	Изделия.КлючПартия          КАК КлючПартия,
		|	Изделия.Этап                КАК Этап,
		|	Изделия.ЭтапПроизводства    КАК ЭтапПроизводства,
		|	Изделия.Требуется           КАК Требуется,
		|	Изделия.Готово              КАК Готово
		|
		|ПОМЕСТИТЬ ИзделияПромежуточнаяТаблица
		|ИЗ
		|	ИзделияВременнаяТаблица КАК Изделия
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|
		|	Изделия.Номенклатура           КАК Номенклатура,
		|	Изделия.Характеристика         КАК Характеристика,
		|	Перемещения.Склад              КАК Склад,
		|	Изделия.Назначение             КАК Назначение,
		|	Изделия.ЗаказНаПроизводство    КАК ЗаказНаПроизводство,
		|	Перемещения.КлючНоменклатура   КАК КлючНоменклатура,
		|	Перемещения.КлючПартия         КАК КлючПартия,
		|	Перемещения.Этап               КАК Этап,
		|	Изделия.ЭтапПроизводства       КАК ЭтапПроизводства,
		|	Перемещения.Требуется          КАК Требуется,
		|	Перемещения.Готово             КАК Готово
		|
		|ИЗ
		|	ИзделияВременнаяТаблица КАК Изделия
		|
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЦепочкиПеремещений КАК Перемещения
		|	ПО Изделия.КлючНоменклатура = Перемещения.КлючСвязиПеремещение
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаПроизводство,
		|	КлючНоменклатура,
		|	КлючПартия
		|;
		|УНИЧТОЖИТЬ ИзделияИСкладыДляРасчетаЦепочкиПеремещений; УНИЧТОЖИТЬ ЦепочкиПеремещений;
		|";
		
	КонецЕсли;

	Запрос.Текст = Запрос.Текст +
	"ВЫБРАТЬ
	|
	|	Изделия.Номенклатура        КАК Номенклатура,
	|	Изделия.Характеристика      КАК Характеристика,
	|	Изделия.Склад               КАК Склад,
	|	Изделия.Назначение          КАК Назначение,
	|	Изделия.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура    КАК КлючНоменклатура,
	|	Изделия.КлючПартия          КАК КлючПартия,
	|	Изделия.ЭтапПроизводства    КАК Этап,
	|
	|	ISNULL(График.Начало, &ЖелаемаяДата) КАК ЖелаемаяДата,
	|	НАЧАЛОПЕРИОДА(ISNULL(График.Начало, &ЖелаемаяДата), ДЕНЬ) КАК ДатаОтсчета,
	|
	|	ВЫБОР
	|		КОГДА ИСТИНА В
	|			(ВЫБРАТЬ ПЕРВЫЕ 1
	|				ИСТИНА
	|			ИЗ
	|				РегистрСведений.КэшНСИСтруктурыЗаказа КАК КэшНСИ
	|			ГДЕ
	|				КэшНСИ.ЗаказНаПроизводство = Изделия.ЗаказНаПроизводство
	|				И КэшНСИ.Номенклатура = Изделия.Номенклатура
	|				И КэшНСИ.Характеристика = Изделия.Характеристика
	|				И КэшНСИ.Запланировать
	|				И КэшНСИ.ТипОбеспечения = ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Производство))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоПолуфабрикат,
	|
	|	ISNULL(КэшНСИ.СпособОбеспечения.ГарантированныйСрокОбеспечения, 1) КАК СрокИсполненияЗаказа,
	|	ISNULL(КэшНСИ.Спецификация, ЗНАЧЕНИЕ(Справочник.РесурсныеСпецификации.ПустаяСсылка)) КАК Спецификация,
	|
	|	Изделия.Требуется КАК Требуется,
	|	Изделия.Готово    КАК Готово
	|	
	|ПОМЕСТИТЬ Изделия
	|ИЗ
	|	ИзделияПромежуточнаяТаблица КАК Изделия
	| 
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК График
	|	ПО Изделия.ЗаказНаПроизводство = График.ЗаказНаПроизводство
	|	 И Изделия.КлючПартия          = График.КлючПартия
	|	 И Изделия.Этап                = График.Этап
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.КэшНСИСтруктурыЗаказа КАК КэшНСИ
	|	ПО Изделия.Номенклатура        = КэшНСИ.Номенклатура
	|	 И Изделия.Характеристика      = КэшНСИ.Характеристика
	|	 И Изделия.Склад               = КэшНСИ.Склад
	|	 И Изделия.Назначение          = КэшНСИ.Назначение
	|	 И Изделия.ЗаказНаПроизводство = КэшНСИ.ЗаказНаПроизводство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство,
	|	КлючНоменклатура,
	|	КлючПартия,
	|	Этап
	|;
	|
	|ВЫБРАТЬ
	|	
	|	План.Номенклатура           КАК Номенклатура,
	|	План.Характеристика         КАК Характеристика,
	|	План.Склад                  КАК Склад,
	|	План.Назначение             КАК Назначение,
	|	План.ЗаказНаПроизводство    КАК ЗаказНаПроизводство,
	|	План.КлючНоменклатура       КАК КлючНоменклатура,
	|	План.КлючПартия             КАК КлючПартия,
	|	План.ВидСтроки              КАК ВидСтроки,
	|	&ВыразитьЗаказНаПоступление КАК ЗаказНаПоступление,
	|	&ВыразитьДатаПоступления    КАК ДатаПоступления,
	|
	|	СУММА(План.Запланировано
	|			+ План.РаспределеноИзЗапасов
	|			+ План.РаспределеноИзЗапасовОбособленно
	|			+ План.РаспределеноИзПартий
	|			+ План.РаспределеноИзПартийОбособленно) КАК Количество
	|
	|ПОМЕСТИТЬ План
	|ИЗ
	|
	|	Изделия КАК Изделия
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтруктураЗаказа КАК План
	|	ПО Изделия.Номенклатура        = План.Номенклатура
	|	 И Изделия.Характеристика      = План.Характеристика
	|	 И Изделия.Склад               = План.Склад
	|	 И Изделия.Назначение          = План.Назначение
	|	 И Изделия.ЗаказНаПроизводство = План.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = План.КлючНоменклатура
	|
	|СГРУППИРОВАТЬ ПО
	|	План.Номенклатура,
	|	План.Характеристика,
	|	План.Склад,
	|	План.Назначение,
	|	План.ЗаказНаПроизводство,
	|	План.КлючНоменклатура,
	|	План.КлючПартия,
	|	План.ВидСтроки,
	|	План.ЗаказНаПоступление,
	|	План.ДатаПоступления
	|
	|ИМЕЮЩИЕ
	|	СУММА(План.Запланировано) > 0
	|		Или СУММА(План.РаспределеноИзЗапасов + План.РаспределеноИзЗапасовОбособленно) > 0
	|		Или СУММА(План.РаспределеноИзПартий  + План.РаспределеноИзПартийОбособленно)  > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство,
	|	КлючНоменклатура
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|
	|	Изделия.КлючПартия КАК КлючПартия,
	|	Изделия.Этап       КАК Этап
	|
	|ПОМЕСТИТЬ НетОбеспечения
	|ИЗ
	|	Изделия КАК Изделия
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ План КАК План
	|	ПО Изделия.Номенклатура        = План.Номенклатура
	|	 И Изделия.Характеристика      = План.Характеристика
	|	 И Изделия.Склад               = План.Склад
	|	 И Изделия.Назначение          = План.Назначение
	|	 И Изделия.ЗаказНаПроизводство = План.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = План.КлючНоменклатура
	|
	|ГДЕ
	|	&ПоказыватьЭтапы
	|
	|СГРУППИРОВАТЬ ПО
	|	Изделия.Номенклатура,
	|	Изделия.Характеристика,
	|	Изделия.Склад,
	|	Изделия.Назначение,
	|	Изделия.ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура,
	|	Изделия.КлючПартия,
	|	Изделия.Этап
	|
	|ИМЕЮЩИЕ
	|
	|	МАКСИМУМ(План.ДатаПоступления) > МИНИМУМ(Изделия.ЖелаемаяДата)
	|	 ИЛИ СУММА(Изделия.Требуется) > СУММА(
	|		  ВЫБОР
	|			КОГДА (План.ЗаказНаПоступление = Неопределено Или План.ДатаПоступления > &РабочаяДата)
	|				И План.ВидСтроки В (
	|					ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано))
	|				ТОГДА План.Количество
	|			ИНАЧЕ 0
	|		  КОНЕЦ)
	|		И МАКСИМУМ(ДОБАВИТЬКДАТЕ(&РабочаяДата, ДЕНЬ, Изделия.СрокИсполненияЗаказа) > Изделия.ЖелаемаяДата)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючПартия, Этап
	|
	|;
	|
	|ВЫБРАТЬ
	|	План.Номенклатура        КАК Номенклатура,
	|	План.Характеристика      КАК Характеристика,
	|	План.Склад               КАК Склад,
	|	План.Назначение          КАК Назначение,
	|	План.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	План.КлючНоменклатура    КАК КлючНоменклатура,
	|	СУММА(План.Количество)   КАК Количество
	|ПОМЕСТИТЬ ОбеспечениеМатериалов
	|ИЗ
	|	План КАК План
	|ГДЕ
	|	&ПоказыватьМатериалы
	|	И План.ВидСтроки В (
	|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано),
	|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))
	|
	|СГРУППИРОВАТЬ ПО
	|	План.Номенклатура,
	|	План.Характеристика,
	|	План.Склад,
	|	План.Назначение,
	|	План.ЗаказНаПроизводство,
	|	План.КлючНоменклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство,
	|	КлючНоменклатура
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&ОсновнойКалендарь           КАК Календарь,
	|	Изделия.СрокИсполненияЗаказа КАК ЧислоДней,
	|	Изделия.ДатаОтсчета          КАК ДатаОтсчета
	|ПОМЕСТИТЬ ВтПараметрыПоиска
	|ИЗ
	|	Изделия КАК Изделия
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ План КАК План
	|	ПО Изделия.Номенклатура        = План.Номенклатура
	|	 И Изделия.Характеристика      = План.Характеристика
	|	 И Изделия.Склад               = План.Склад
	|	 И Изделия.Назначение          = План.Назначение
	|	 И Изделия.ЗаказНаПроизводство = План.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = План.КлючНоменклатура
	|
	|ГДЕ
	|	(План.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
	|		И План.ЗаказНаПоступление <> НЕОПРЕДЕЛЕНО)
	|	ИЛИ (&ПоказыватьМатериалы И НЕ Изделия.ЭтоПолуфабрикат)
	|
	|;
	|"
	+ ПроизводствоСервер.ТекстЗапросаДатПоКалендарю(Ложь) + "
	|
	|ВЫБРАТЬ
	|	График.Этап КАК Этап,
	|	График.КлючПартия КАК КлючПартия,
	|	График.Начало КАК Начало,
	|	График.Окончание КАК Окончание,
	|	График.ЛеваяГраница КАК ЛеваяГраница,
	|	ВЫБОР 
	|		КОГДА График.Этап ССЫЛКА Справочник.ЭтапыПроизводства ТОГДА
	|			ВЫРАЗИТЬ(График.Этап КАК Справочник.ЭтапыПроизводства).НомерЭтапа
	|		КОГДА График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2 ТОГДА
	|			ВЫРАЗИТЬ(График.Этап КАК Документ.ЭтапПроизводства2_2).НомерЭтапа
	|		ИНАЧЕ
	|			0
	|	КОНЕЦ КАК НомерЭтапа,
	|	ВЫБОР 
	|		КОГДА График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2 ТОГДА
	|			ИСТИНА
	|		ИНАЧЕ
	|			ЛОЖЬ
	|	КОНЕЦ КАК ЭтапСоздан,
	|	ВЫБОР
	|		КОГДА График.ЭтоПеремещение ТОГДА
	|			ЗНАЧЕНИЕ(Перечисление.ТипыОбеспечения.Перемещение)
	|		КОГДА График.Этап ССЫЛКА Справочник.ЭтапыПроизводства ТОГДА
	|			ВЫРАЗИТЬ(График.Этап КАК Справочник.ЭтапыПроизводства).Наименование
	|		КОГДА График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2 ТОГДА
	|			ВЫРАЗИТЬ(График.Этап КАК Документ.ЭтапПроизводства2_2).НаименованиеЭтапа
	|				 + "" ("" + ВЫРАЗИТЬ(График.Этап КАК Документ.ЭтапПроизводства2_2).Номер + "")""
	|		ИНАЧЕ
	|			""-""
	|	КОНЕЦ КАК ЭтапПредставление,
	|	ВЫБОР
	|		КОГДА (График.КлючПартия,
	|				 График.Этап) В
	|			(ВЫБРАТЬ
	|				ДД.КлючПартия,
	|				ДД.Этап
	|			ИЗ
	|				НетОбеспечения КАК ДД)
	|			ТОГДА 4
	|		КОГДА График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2
	|		  И ВЫРАЗИТЬ(График.Этап КАК
	|			Документ.ЭтапПроизводства2_2).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Завершен)
	|			ТОГДА 3
	|		КОГДА График.Этап ССЫЛКА Документ.ЭтапПроизводства2_2
	|		  И ВЫРАЗИТЬ(График.Этап КАК
	|			Документ.ЭтапПроизводства2_2).Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЭтаповПроизводства2_2.Начат)
	|			ТОГДА 2
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК Состояние
	|ИЗ
	|	РегистрСведений.МониторингЗаказаПолныйИнтервалНормативногоГрафика КАК График
	|
	|ГДЕ
	|	График.КлючПартия = &КлючПартия
	|	И (График.ЭтоПеремещение И График.Этап = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|		 ИЛИ НЕ График.ЭтоПеремещение И График.Этап <> ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка))
	|	И &ПоказыватьЭтапы
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерЭтапа УБЫВ
	|
	|;
	|
	|// Производство и перемещение
	|
	|ВЫБРАТЬ
	|
	|	&ПредставлениеСтроки,
	|
	|	Изделия.Этап                 КАК Этап,
	|
	|	Изделия.Номенклатура         КАК Номенклатура,
	|	Изделия.Характеристика       КАК Характеристика,
	|	Изделия.Склад                КАК Склад,
	|	Изделия.Назначение           КАК Назначение,
	|	Изделия.ЗаказНаПроизводство  КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура     КАК КлючНоменклатура,
	|
	|	План.КлючПартия              КАК КлючПартия,
	|
	|	ВЫБОР
	|		КОГДА График.ЛеваяГраница ЕСТЬ НЕ NULL
	|		ТОГДА
	|			График.ЛеваяГраница
	|		ИНАЧЕ
	|			ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)
	|	КОНЕЦ КАК ЛеваяГраница,
	|	ВЫБОР
	|		КОГДА График.Начало ЕСТЬ НЕ NULL
	|		ТОГДА
	|			График.Начало
	|		ИНАЧЕ
	|			ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)
	|	КОНЕЦ КАК Начало,
	|	ВЫБОР
	|		КОГДА График.Окончание ЕСТЬ НЕ NULL
	|		ТОГДА
	|			График.Окончание
	|		ИНАЧЕ
	|			Изделия.ЖелаемаяДата
	|	КОНЕЦ КАК Окончание,
	|
	|	NULL                    КАК ЗаказНаПоступление,
	|	1                       КАК Состояние,
	|	ИСТИНА                  КАК ВыводитьЭтап,
	|	Изделия.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	План.Количество         КАК Количество
	|
	|ИЗ
	|	Изделия КАК Изделия
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ План КАК План
	|	ПО Изделия.Номенклатура        = План.Номенклатура
	|	 И Изделия.Характеристика      = План.Характеристика
	|	 И Изделия.Склад               = План.Склад
	|	 И Изделия.Назначение          = План.Назначение
	|	 И Изделия.ЗаказНаПроизводство = План.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = План.КлючНоменклатура
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МониторингЗаказаПолныйИнтервалНормативногоГрафика КАК График
	|	ПО График.КлючПартия = План.КлючПартия
	|	 И График.Этап       = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|
	|ГДЕ
	|	План.ВидСтроки В (
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПродукции),
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката))
	|	ИЛИ &ПоказыватьПеремещения
	|			И План.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение)
	|			И (Изделия.ЭтоПолуфабрикат ИЛИ &ПоказыватьМатериалы)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Резерв из остатка и графика поступления
	|
	|ВЫБРАТЬ
	|
	|	&ПредставлениеСтроки,
	|
	|	Изделия.Этап                 КАК Этап,
	|
	|	Изделия.Номенклатура         КАК Номенклатура,
	|	Изделия.Характеристика       КАК Характеристика,
	|	Изделия.Склад                КАК Склад,
	|	Изделия.Назначение           КАК Назначение,
	|	Изделия.ЗаказНаПроизводство  КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура     КАК КлючНоменклатура,
	|
	|	NULL                         КАК КлючПартия,
	|
	|	ВЫБОР
	|		КОГДА План.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -1)
	|		КОГДА График.Начало ЕСТЬ НЕ NULL
	|			ТОГДА График.Начало
	|		КОГДА ДатыГрафика.Дата ЕСТЬ НЕ NULL
	|			ТОГДА ДатыГрафика.Дата
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)
	|	КОНЕЦ КАК ЛеваяГраница,
	|	ВЫБОР
	|		КОГДА План.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
	|			ТОГДА ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -1)
	|		КОГДА График.Начало ЕСТЬ НЕ NULL
	|			ТОГДА График.Начало
	|		КОГДА ДатыГрафика.Дата ЕСТЬ НЕ NULL
	|			ТОГДА ДатыГрафика.Дата
	|		ИНАЧЕ ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)
	|	КОНЕЦ КАК Начало,
	|	ВЫБОР
	|		КОГДА План.ЗаказНаПоступление = НЕОПРЕДЕЛЕНО
	|		ТОГДА
	|			Изделия.ЖелаемаяДата
	|		ИНАЧЕ
	|			ISNULL(График.Окончание, Изделия.ЖелаемаяДата)
	|	КОНЕЦ КАК Окончание,
	|
	|	План.ЗаказНаПоступление КАК ЗаказНаПоступление,
	|
	|	ВЫБОР
	|		КОГДА План.ЗаказНаПоступление <> НЕОПРЕДЕЛЕНО
	|		ТОГДА 2
	|		ИНАЧЕ 3
	|	КОНЕЦ                   КАК Состояние,
	|
	|	ЛОЖЬ                    КАК ВыводитьЭтап,
	|	Изделия.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	План.Количество         КАК Количество
	|
	|ИЗ
	|	Изделия КАК Изделия
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ План КАК План
	|	ПО Изделия.Номенклатура        = План.Номенклатура
	|	 И Изделия.Характеристика      = План.Характеристика
	|	 И Изделия.Склад               = План.Склад
	|	 И Изделия.Назначение          = План.Назначение
	|	 И Изделия.ЗаказНаПроизводство = План.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = План.КлючНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НормативныйГрафикСтруктурыЗаказа КАК График
	|	ПО План.ЗаказНаПоступление = График.ЗаказНаПроизводство
	|	 И График.КлючПартия       = &ПустойКлючСвязи
	|	 И График.Этап             = ЗНАЧЕНИЕ(Справочник.ЭтапыПроизводства.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыГрафика КАК ДатыГрафика
	|	ПО Изделия.СрокИсполненияЗаказа = ДатыГрафика.ЧислоДней
	|	 И Изделия.ДатаОтсчета = ДатыГрафика.ДатаОтсчета
	|
	|ГДЕ
	|	План.ВидСтроки В (
	|			ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано))
	|	И (&ПоказыватьПеремещения
	|		ИЛИ НЕ (План.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПеремещение
	|				ИЛИ План.ЗаказНаПоступление ССЫЛКА Документ.ЗаказМатериаловВПроизводство))
	|	И (Изделия.ЭтоПолуфабрикат ИЛИ &ПоказыватьМатериалы)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Материалы к обеспечению
	|
	|ВЫБРАТЬ
	|
	|	&ПредставлениеСтроки,
	|
	|	Изделия.Этап                 КАК Этап,
	|
	|	Изделия.Номенклатура         КАК Номенклатура,
	|	Изделия.Характеристика       КАК Характеристика,
	|	Изделия.Склад                КАК Склад,
	|	Изделия.Назначение           КАК Назначение,
	|	Изделия.ЗаказНаПроизводство  КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура     КАК КлючНоменклатура,
	|
	|	NULL                         КАК КлючПартия,
	|
	|	ЕСТЬNULL(ДатыГрафика.Дата,
	|		ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)) КАК ЛеваяГраница,
	|	ЕСТЬNULL(ДатыГрафика.Дата,
	|		ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -Изделия.СрокИсполненияЗаказа)) КАК Начало,
	|	Изделия.ЖелаемаяДата КАК Окончание,
	|
	|	NULL КАК ЗаказНаПоступление,
	|	1    КАК Состояние,
	|	ЛОЖЬ КАК ВыводитьЭтап,
	|	ЛОЖЬ КАК ЭтоПолуфабрикат,
	|
	|	Изделия.Требуется - ISNULL(ОбеспечениеМатериалов.Количество, 0) КАК Количество
	|
	|ИЗ
	|	Изделия КАК Изделия
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ОбеспечениеМатериалов КАК ОбеспечениеМатериалов
	|	ПО Изделия.Номенклатура        = ОбеспечениеМатериалов.Номенклатура
	|	 И Изделия.Характеристика      = ОбеспечениеМатериалов.Характеристика
	|	 И Изделия.Склад               = ОбеспечениеМатериалов.Склад
	|	 И Изделия.Назначение          = ОбеспечениеМатериалов.Назначение
	|	 И Изделия.ЗаказНаПроизводство = ОбеспечениеМатериалов.ЗаказНаПроизводство
	|	 И Изделия.КлючНоменклатура    = ОбеспечениеМатериалов.КлючНоменклатура
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВтДатыГрафика КАК ДатыГрафика
	|	ПО Изделия.СрокИсполненияЗаказа = ДатыГрафика.ЧислоДней
	|	 И Изделия.ДатаОтсчета = ДатыГрафика.ДатаОтсчета
	|
	|ГДЕ
	|	&ПоказыватьМатериалы
	|	И НЕ Изделия.ЭтоПолуфабрикат
	|	И Изделия.Требуется - ISNULL(ОбеспечениеМатериалов.Количество, 0) > 0
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|// Выпущеная продукция или материал зарезервированный на складе
	|
	|ВЫБРАТЬ
	|
	|	&ПредставлениеСтроки,
	|
	|	Изделия.Этап                 КАК Этап,
	|
	|	Изделия.Номенклатура         КАК Номенклатура,
	|	Изделия.Характеристика       КАК Характеристика,
	|	Изделия.Склад                КАК Склад,
	|	Изделия.Назначение           КАК Назначение,
	|	Изделия.ЗаказНаПроизводство  КАК ЗаказНаПроизводство,
	|	Изделия.КлючНоменклатура     КАК КлючНоменклатура,
	|
	|	NULL                         КАК КлючПартия,
	|
	|	ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -1) КАК ЛеваяГраница,
	|	ДОБАВИТЬКДАТЕ(Изделия.ЖелаемаяДата, ДЕНЬ, -1) КАК Начало,
	|	Изделия.ЖелаемаяДата                          КАК Окончание,
	|
	|	НЕОПРЕДЕЛЕНО            КАК ЗаказНаПоступление,
	|
	|	3                       КАК Состояние,
	|
	|	ЛОЖЬ                    КАК ВыводитьЭтап,
	|	Изделия.ЭтоПолуфабрикат КАК ЭтоПолуфабрикат,
	|	Изделия.Готово          КАК Количество
	|
	|ИЗ
	|	Изделия КАК Изделия
	|
	|ГДЕ
	|	Изделия.Готово > 0
	|		И (Изделия.ЭтоПолуфабрикат ИЛИ &ПоказыватьМатериалы)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ЭтоПолуфабрикат УБЫВ, Номенклатура, Характеристика, Склад, Состояние, Окончание, Количество УБЫВ
	|	АВТОУПОРЯДОЧИВАНИЕ
	|";
	
	Если ТипЗнч(Отбор) = Тип("УникальныйИдентификатор") Тогда
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Отбор", "Изделия.КлючПартия = &КлючПартия");
		Запрос.УстановитьПараметр("КлючПартия", Отбор);
		
	Иначе
		
		ТекстОтбора = "";
		
		Для каждого КлючЗначение Из Отбор Цикл
			
			ТекстОтбора = 
				ТекстОтбора
				+ ?(ПустаяСтрока(ТекстОтбора), "", " И ")
				+ "Изделия."
				+ КлючЗначение.Ключ
				+ " В(&"
				+ КлючЗначение.Ключ
				+ ")";
			Запрос.УстановитьПараметр(КлючЗначение.Ключ, КлючЗначение.Значение);
			
		КонецЦикла;
		
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "&Отбор", ?(ПустаяСтрока(ТекстОтбора), "ЛОЖЬ", ТекстОтбора));
		
	КонецЕсли;
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыразитьЗаказНаПоступление", "
		|МИНИМУМ(ВЫБОР
		|		КОГДА План.ЗаказНаПоступление ССЫЛКА Документ.ЭтапПроизводства2_2
		|				И План.ЗаказНаПроизводство <> ВЫРАЗИТЬ(План.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение
		|			ТОГДА ВЫРАЗИТЬ(План.ЗаказНаПоступление КАК Документ.ЭтапПроизводства2_2).Распоряжение
		|		ИНАЧЕ План.ЗаказНаПоступление
		|	КОНЕЦ)");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ВыразитьДатаПоступления", "
		|МИНИМУМ(ВЫБОР
		|		КОГДА План.ДатаПоступления = ДАТАВРЕМЯ(1,1,1) И План.ЗаказНаПоступление ССЫЛКА Документ.ЗаказНаПроизводство2_2
		|				И План.ЗаказНаПроизводство <> План.ЗаказНаПоступление
		|			ТОГДА ВЫРАЗИТЬ(План.ЗаказНаПоступление КАК Документ.ЗаказНаПроизводство2_2).ДатаПотребности
		|		ИНАЧЕ План.ДатаПоступления
		|	КОНЕЦ)");
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПредставлениеСтроки,", "
		|ПРЕДСТАВЛЕНИЕ(Изделия.Номенклатура)                  КАК НоменклатураПредставление,
		|ПРЕДСТАВЛЕНИЕ(Изделия.Характеристика)                КАК ХарактеристикаПредставление,
		|ПРЕДСТАВЛЕНИЕ(Изделия.Номенклатура.ЕдиницаИзмерения) КАК ЕдиницаИзмеренияПредставление,
		|");
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	КоличествоПакетов = РезультатЗапроса.Количество();
	ЗагрузитьВМассивРезультатЗапроса(РезультатЗапроса[КоличествоПакетов-2], Этапы);
	ЗагрузитьВМассивРезультатЗапроса(РезультатЗапроса[КоличествоПакетов-1], Изделия);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьТочку(Точка, ТочкаДиаграммы)
	
	КлючПартия = Новый УникальныйИдентификатор(Лев(Точка.Значение, 36));
	ЗагрузитьСледующийУровень(КлючПартия, Этапы, Изделия, РабочаяДата, ЖелаемаяДатаВыпуска, ПараметрыВывода);
	МониторингЗаказаКлиентСервер.ВывестиТочки(ДиаграммаГанта, Этапы, Изделия, ТочкаДиаграммы, Точки, ПараметрыВывода);
	Точка.Загружена = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьТочкуНаСервере(Точка, ТочкаДиаграммы, Этапы, Изделия)
	
	КлючПартия = Новый УникальныйИдентификатор(Лев(Точка.Значение, 36));
	ЗагрузитьСледующийУровень(КлючПартия, Этапы, Изделия, РабочаяДата, ЖелаемаяДатаВыпуска, ПараметрыВывода);
	МониторингЗаказаКлиентСервер.ВывестиТочки(ДиаграммаГанта, Этапы, Изделия, ТочкаДиаграммы, Точки, ПараметрыВывода);
	Точка.Загружена = Истина;
	
КонецПроцедуры

&НаСервере
Функция ЗагрузитьВсеНаСервере(Порция = -1)
	
	Этапы = Новый Массив();
	Изделия = Новый Массив();
	
	НачальноеКоличествоТочек = Точки.Количество();
	
	НеЗагруженныеТочки = Точки.НайтиСтроки(Новый Структура("Загружена", Ложь));
	
	Граница = НеЗагруженныеТочки.ВГраница();
	
	Пока Граница >= 0 Цикл

		Точка = НеЗагруженныеТочки[0];
		
		ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
		
		ЗагрузитьТочкуНаСервере(Точка, ТочкаДиаграммы, Этапы, Изделия);
		
		НеЗагруженныеТочки.Удалить(0);
		
		Граница = Граница - 1;
		
		Если Граница = -1 Тогда
			НеЗагруженныеТочки = Точки.НайтиСтроки(Новый Структура("Загружена", Ложь));
			Граница = НеЗагруженныеТочки.ВГраница();
		КонецЕсли;
		
		Если Порция > 0 И Точки.Количество() - НачальноеКоличествоТочек > Порция Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Граница = -1;
	
КонецФункции

&НаКлиенте
Процедура РазвернутьТочку(Индекс)
	
	СерияДиаграммы = СерияДиаграммы();
	
	Точка = Точки[Индекс];
	
	ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
	
	ДиаграммаГанта.РазвернутьТочку(ТочкаДиаграммы, Ложь);
	
	ЗагрузитьТочку(Точка, ТочкаДиаграммы);
	
	РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Истина, СерияДиаграммы);
	
КонецПроцедуры

&НаСервере
Процедура РазвернутьТочкуНаСервере(Индекс)
	
	Этапы = Новый Массив();
	Изделия = Новый Массив();
	
	СерияДиаграммы = СерияДиаграммыНаСервере();
	
	Точка = Точки[Индекс];
	
	ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
	
	ДиаграммаГанта.РазвернутьТочку(ТочкаДиаграммы, Ложь);
	
	ЗагрузитьТочкуНаСервере(Точка, ТочкаДиаграммы, Этапы, Изделия);
	
	РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Истина, СерияДиаграммы);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьПервыйУровень()
	
	Точки.Очистить();
	ДиаграммаГанта.Очистить();
	
	ПараметрыВыводаКопия = ОбщегоНазначенияКлиент.СкопироватьРекурсивно(ПараметрыВывода);
	ПараметрыВыводаКопия.ПоказыватьЭтапы = Ложь;
	
	Если ГрафикЗагружен Тогда
		ЗагрузитьСледующийУровень(ТекущаяСтрокаКэшДанных, Этапы, Изделия, РабочаяДата, ЖелаемаяДатаВыпуска, ПараметрыВыводаКопия);
		МониторингЗаказаКлиентСервер.ВывестиТочки(ДиаграммаГанта, Этапы, Изделия, ДиаграммаГанта, Точки, ПараметрыВывода);
	КонецЕсли;
	
	Если Точки.Количество() > 0 И ПараметрыВывода.РазворачиватьПервыйУровеньПослеЗагрузки Тогда
		РазвернутьТочку(0);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьПервыйУровеньПослеРасчетаНаСервере()
	
	КлючеваяОперация = "Отчет.МониторингЗаказа.ФормаОтчета.Формирование";
	ВремяНачала = ОценкаПроизводительности.НачатьЗамерВремени();
	
	ГрафикЗагружен = Истина;
	
	Этапы = Новый Массив();
	Изделия = Новый Массив();
	
	НастроитьДиаграммуГанта();
	
	ПараметрыВыводаКопия = ОбщегоНазначения.СкопироватьРекурсивно(ПараметрыВывода);
	ПараметрыВыводаКопия.ПоказыватьЭтапы = Ложь;
	
	ЗагрузитьСледующийУровень(ТекущаяСтрокаКэшДанных, Этапы, Изделия, РабочаяДата, ЖелаемаяДатаВыпуска, ПараметрыВыводаКопия);
	МониторингЗаказаКлиентСервер.ВывестиТочки(ДиаграммаГанта, Этапы, Изделия, ДиаграммаГанта, Точки, ПараметрыВывода);
	
	Если Точки.Количество() > 0 И ПараметрыВывода.РазворачиватьПервыйУровеньПослеЗагрузки Тогда
		РазвернутьТочкуНаСервере(0);
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерВремени(КлючеваяОперация, ВремяНачала);
	
КонецПроцедуры

#КонецОбласти

#Область Расшифровка

&НаКлиенте
Процедура ДобавитьДействие(СписокДействий, ИмяДействия, ДанныеДействия)
	
	Если ИмяДействия = "ПоказатьЗначение" Тогда
		СписокДействий.Добавить(Новый Структура("ИмяДействия, ДанныеДействия", ИмяДействия, ДанныеДействия), "" + ДанныеДействия);
	КонецЕсли;
	
	Если ИмяДействия = "ПоказатьПроблемы" Тогда
		СписокДействий.Добавить(Новый Структура("ИмяДействия, ДанныеДействия", ИмяДействия, ДанныеДействия), НСтр("ru = 'Показать проблемы...';
																													|en = 'Show issues...'"));
	КонецЕсли;
	
	Если ИмяДействия = "ПоказатьОбеспечение" Тогда
		СписокДействий.Добавить(Новый Структура("ИмяДействия, ДанныеДействия", ИмяДействия, ДанныеДействия), НСтр("ru = 'Показать обеспечение...';
																													|en = 'Show supply...'"));
	КонецЕсли;
	
	Если ИмяДействия = "ПерейтиВМониторинг" Тогда
		СписокДействий.Добавить(Новый Структура("ИмяДействия, ДанныеДействия", ИмяДействия, ДанныеДействия), НСтр("ru = 'Мониторинг заказа';
																													|en = 'Monitor order'") + " " + КраткоеПредставление(ДанныеДействия));
	КонецЕсли;

КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаДействийЗавершение(ВыбранныйЭлемент, ДополнительныеПараметры) Экспорт
	
	Если ВыбранныйЭлемент = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Результат = ВыбранныйЭлемент.Значение;
	
	Если Результат.ИмяДействия = "ПоказатьЗначение" Тогда
		
		ПоказатьЗначение(,Результат.ДанныеДействия);
		
	КонецЕсли;
	
	Если Результат.ИмяДействия = "ПоказатьОбеспечение" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
		ПараметрыФормы.Вставить("КлючВарианта"			 , "ПоЗаказу");
		ПараметрыФормы.Вставить("Отбор"					 , Новый Структура);
		Если Не ЗначениеЗаполнено(Результат.ДанныеДействия.Этап) Тогда
			ПараметрыФормы.Вставить("КлючПартия"			 , Результат.ДанныеДействия.КлючПартия);
		КонецЕсли;
		
		ПараметрыФормы.Отбор.Вставить("ЗаказНаПроизводство", Результат.ДанныеДействия.ЗаказНаПроизводство);
		ПараметрыФормы.Отбор.Вставить("Этап",				 Результат.ДанныеДействия.Этап);
		
		ОткрытьФорму("Отчет.УкомплектованностьЗаказов.Форма", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
	Если Результат.ИмяДействия = "ПерейтиВМониторинг" Тогда
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("ЗаказНаПроизводство", Результат.ДанныеДействия);
		
		ОткрытьФорму("Отчет.МониторингЗаказа.Форма", ПараметрыФормы, ЭтотОбъект);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция КраткоеПредставление(Знач Ссылка)
	
	ТипЗнч = ТипЗнч(Ссылка);
	
	Если ТипЗнч = Тип("ДокументСсылка.ЗаказНаПроизводство2_2") Тогда
		
		Представление = Документы.ЗаказНаПроизводство2_2.ПредставлениеЗаказа(Ссылка, "");
		
	ИначеЕсли ТипЗнч = Тип("ДокументСсылка.ЭтапПроизводства2_2") Тогда
		
		Представление = Документы.ЭтапПроизводства2_2.ПредставлениеЭтапа(Ссылка);
		
	Иначе
		
		Представление = "" + Ссылка;
		
	КонецЕсли;
	
	Возврат Представление;
	
КонецФункции

#КонецОбласти

#Область РазвернутьВсе

&НаКлиенте
Процедура ПоказатьВопросРазвернутьВсеПродолжитьВывод()
	
	ПоказатьВопрос(
		 Новый ОписаниеОповещения("ВопросРазвернутьВсеПродолжитьВыводЗавершение", ЭтаФорма),
		 СтрШаблон(НСтр("ru = 'Выведено %1 элементов. Продолжить вывод?';
						|en = '%1 items are displayed. Continue?'"), 500),
		 РежимДиалогаВопрос.ДаНет,,
		 КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросРазвернутьВсеПродолжитьВыводЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		ЗагрузитьВсеНаСервере();
	КонецЕсли;
	
	РазвернутьВсеТочки();
	
КонецПроцедуры

&НаКлиенте
Процедура РазвернутьВсеТочки()
	
	ЗагруженныеТочки = Точки.НайтиСтроки(Новый Структура("Загружена", Истина));
	
	СерияДиаграммы = СерияДиаграммы();
	
	Для каждого Точка Из ЗагруженныеТочки Цикл
		
		ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
		
		ДиаграммаГанта.РазвернутьТочку(ТочкаДиаграммы, Ложь);
		
		РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Истина, СерияДиаграммы);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиенте
Процедура СвернутьВсеТочки()
	
	СерияДиаграммы = СерияДиаграммы();
	
	Для каждого Точка Из Точки Цикл
		
		ТочкаДиаграммы = ДиаграммаГанта.УстановитьТочку(Точка.Значение);
		
		ДиаграммаГанта.СвернутьТочку(ТочкаДиаграммы, Ложь);
		
		РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Ложь, СерияДиаграммы);
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РазвернутьИлиСвернутьТочку(ДиаграммаГанта, Точка, ТочкаДиаграммы, Развернута, Серия)

	Интервалы = ДиаграммаГанта.ПолучитьЗначение(ТочкаДиаграммы, Серия);
	
	Если Интервалы.Количество() > 1 Тогда
		
		Интервал1 = Неопределено; // ИнтервалДиаграммыГанта
		Интервал2 = Неопределено; // ИнтервалДиаграммыГанта
		
		Для каждого Интервал Из Интервалы Цикл
			
			Интервал1 = ?(Интервал1 <> Неопределено И Интервал1.Начало < Интервал.Начало, Интервал1, Интервал);
			Интервал2 = ?(Интервал2 <> Неопределено И Интервал2.Начало > Интервал.Начало, Интервал2, Интервал);
			
		КонецЦикла;
		
		Интервал1.Конец = ?(Развернута, '00010101', Интервал2.Начало - 1);
		
	КонецЕсли;
	
	Точка.Развернута = Развернута;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

&НаСервере
Процедура НастроитьВидимостьДоступностьЭлементов()
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

&НаСервере
Процедура НастроитьДиаграммуГанта()
	
	// Период
	Период = МониторингЗаказа.ПолныйИнтервалГрафикаПроизводства(ЗаказНаПроизводство);
	
	НачалоПериода = НачалоДня(?(Период.ЛеваяГраница = '00010101', РабочаяДата, Период.ЛеваяГраница)) - 86400;
	КонецПериода = КонецДня(?(Период.Окончание = '00010101', РабочаяДата, Период.Окончание)) + 86400;
	
	// Шкала времени
	МониторингЗаказаКлиентСервер.НастроитьШкалуВремени(ДиаграммаГанта, НачалоПериода, КонецПериода);
	
	Если ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы[0].Единица = ТипЕдиницыШкалыВремени.Месяц Тогда
		НачалоПериода = НачалоМесяца(НачалоПериода);
		КонецПериода  = КонецМесяца(КонецПериода);
	Иначе
		НачалоПериода = НачалоНедели(НачалоПериода);
		КонецПериода  = КонецНедели(КонецПериода);
	КонецЕсли;
	
	// Выделение выходных
	Графики= Новый Массив();
	Графики.Добавить(Константы.ОсновнойКалендарьПредприятия.Получить());
	
	РасписанияРаботы = ПланированиеПроизводства.РасписаниеРаботыПоГрафику(Графики, НачалоПериода, КонецПериода);
	РасписанияРаботы.Свернуть("ДатаГрафика");
	РасписанияРаботы.Индексы.Добавить("ДатаГрафика");
	
	ТаблицаПериодыНедоступности = Новый ТаблицаЗначений();
	ТаблицаПериодыНедоступности.Колонки.Добавить("Начало",    Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	ТаблицаПериодыНедоступности.Колонки.Добавить("Окончание", Новый ОписаниеТипов("Дата",,, Новый КвалификаторыДаты(ЧастиДаты.ДатаВремя)));
	
	ТекущийПериод = НачалоПериода;
	Пока ТекущийПериод <= КонецПериода Цикл
		
		Если РасписанияРаботы.Найти(ТекущийПериод, "ДатаГрафика") = Неопределено Тогда
			НовыйПериод = ТаблицаПериодыНедоступности.Добавить();
			НовыйПериод.Начало = ТекущийПериод;
			НовыйПериод.Окончание = КонецДня(НовыйПериод.Начало);
		КонецЕсли;
		
		ТекущийПериод = ТекущийПериод + 86400;
	КонецЦикла;
	
	МониторингЗаказаКлиентСервер.ВывестиПериодыНедоступности(ДиаграммаГанта, ТаблицаПериодыНедоступности);
	
КонецПроцедуры

// Загрузить в массив результат запроса.
// 
// Параметры:
//  Результат - РезультатЗапроса - Результат
//  Массив - Массив - Массив
&НаСервереБезКонтекста
Процедура ЗагрузитьВМассивРезультатЗапроса(Результат, Массив)
	
	Массив.Очистить();
	
	Если Не
		Результат.Пустой() Тогда
		
		Выборка = Результат.Выбрать();
		
		СтруктураСтрокой = "";
		НужнаЗапятая = Ложь;
		Для Каждого Колонка Из Результат.Колонки Цикл
			Если НужнаЗапятая Тогда
				СтруктураСтрокой = СтруктураСтрокой + ",";
			КонецЕсли;
			СтруктураСтрокой = СтруктураСтрокой + Колонка.Имя;
			НужнаЗапятая = Истина;
		КонецЦикла;
		
		Пока Выборка.Следующий() Цикл
			НоваяСтрока = Новый Структура(СтруктураСтрокой);
			ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
			Массив.Добавить(НоваяСтрока);
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОтменитьДлительнуюОперацию()
	
	ДлительныеОперации.ОтменитьВыполнениеЗадания(ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура НачатьОжиданиеДлительнойОперации()
	
	НачатьОжиданиеДлительнойОперации = Ложь;
	
	ДлительныеОперацииКлиент.ИнициализироватьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", 1, Истина);
	ФормаДлительнойОперации = ДлительныеОперацииКлиент.ОткрытьФормуДлительнойОперации(ЭтаФорма, ИдентификаторЗадания);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ПроверитьВыполнениеЗадания()
	
	Попытка
		
		Если ПроверитьВыполнениеЗадания(ИдентификаторЗадания) Тогда
			
			ВыполнитьОбработчикОжидания();
			
			ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
			
			Возврат;
			
		КонецЕсли;
		
	Исключение
		
		ДлительныеОперацииКлиент.ЗакрытьФормуДлительнойОперации(ФормаДлительнойОперации);
		
		ВызватьИсключение;
		
	КонецПопытки;
	
	ДлительныеОперацииКлиент.ОбновитьПараметрыОбработчикаОжидания(ПараметрыОбработчикаОжидания);
	
	ПодключитьОбработчикОжидания("Подключаемый_ПроверитьВыполнениеЗадания", ПараметрыОбработчикаОжидания.ТекущийИнтервал, Истина);
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ПроверитьВыполнениеЗадания(ИдентификаторЗадания)
	
	Если Не ЗначениеЗаполнено(ИдентификаторЗадания) Тогда
		
		Возврат Истина;
		
	КонецЕсли;

	Если ДлительныеОперации.ЗаданиеВыполнено(ИдентификаторЗадания) Тогда
		
		Возврат Истина;
		
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

&НаКлиенте
Процедура ВыполнитьОбработчикОжидания()

	Если ИмяОбработчикаОжидания = ОбработчикРасчетИтоговГрафикаПроизводстваОтложенно() Тогда

		ЗагрузитьПервыйУровеньПослеРасчетаНаСервере();
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьЖелаемуюДатуВыпуска()

	ЖелаемаяДатаВыпуска = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ЗаказНаПроизводство, "ДатаПотребности");
	
	Список.Параметры.УстановитьЗначениеПараметра("ЖелаемаяДатаВыпуска", ЖелаемаяДатаВыпуска);
	
КонецПроцедуры

&НаСервере
Процедура УстановитьОтборПоВидуСтроки()

	СписокСтрок = Новый Массив();
	
	Если ТолькоПродукция Тогда
		СписокСтрок.Добавить(Перечисления.ВидыСтрокСтруктурыЗаказаНаПроизводство.Продукция);
		СписокСтрок.Добавить(Перечисления.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПродукции);
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(Список, "ВидСтроки", СписокСтрок, ВидСравненияКомпоновкиДанных.ВСписке,, СписокСтрок.Количество() > 0);
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьФормуПоЗаказу()
	
	РеквизитыЗаказа = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ЗаказНаПроизводство, "Номер,Дата,Статус");
	
#Область ЗаголовокФормы
	
	АвтоЗаголовок = Ложь;
	
	Если ЗаказНаПроизводство.Пустая() Тогда
		Заголовок = НСтр("ru = 'Мониторинг заказа на производство';
						|en = 'Production order monitoring'");
	Иначе
		Заголовок = СтрШаблон(НСтр("ru = 'Мониторинг заказа %1';
									|en = '%1 order monitoring'"), Документы.ЗаказНаПроизводство2_2.ПредставлениеЗаказа(ЗаказНаПроизводство, "", РеквизитыЗаказа));
	КонецЕсли;
	
#КонецОбласти

#Область СтатусЗакрыт

	Элементы.ГруппаИнформацияЗаказЗакрыт.Видимость = РеквизитыЗаказа.Статус = Перечисления.СтатусыЗаказовНаПроизводство2_2.Закрыт;
	
#КонецОбласти

КонецПроцедуры

&НаКлиенте
Функция СерияДиаграммы()
	Серия = ДиаграммаГанта.УстановитьСерию("Занятость");
	Возврат Серия;
КонецФункции

&НаСервере
Функция СерияДиаграммыНаСервере()
	Серия = ДиаграммаГанта.УстановитьСерию("Занятость");
	Возврат Серия;
КонецФункции

// 60003872
&НаСервере
Процедура ПереопределитьПоляКлючаДинамическогоСпискаСписок()
	
	Если ПолучитьФункциональнуюОпцию("ИспользоватьХарактеристикиНоменклатуры") Тогда
		Возврат;
	КонецЕсли;
	
	ПоляКлюча = Новый Массив;
	
	КоличествоПолей = Список.ПоляКлюча.Количество();
	ИндексПоле      = 0;
	Пока ИндексПоле < КоличествоПолей Цикл
		
		ПолеКлюча = Список.ПоляКлюча.Получить(ИндексПоле);
		Если ПолеКлюча <> "Характеристика" Тогда
			ПоляКлюча.Добавить(ПолеКлюча);
		КонецЕсли;
		
		ИндексПоле = ИндексПоле + 1;
		
	КонецЦикла;
	
	Список.ПоляКлюча = Новый ФиксированныйМассив(ПоляКлюча);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Инициализация

Этапы = Новый Массив();
Изделия = Новый Массив();

#КонецОбласти
