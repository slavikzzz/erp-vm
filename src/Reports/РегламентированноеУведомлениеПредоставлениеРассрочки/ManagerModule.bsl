#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "Заявление о предоставлении отсрочки (рассрочки) в соответствии с приказом СФР 05.06.2023 № 980";
	Стр.ДатаНачала = '20230701';
	Стр.ДатаКонца = '20990101';
	
	Возврат Результат;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	НомСтр = 1;
	
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		ИмяМакета = Стр.ИмяМакета;
		Попытка
			МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(Стр.МакетыПФ);
		Исключение
			Продолжить;
		КонецПопытки;
	
		Если ИмяМакета = "График" Тогда 
			О1 = МакетПФ.ПолучитьОбласть("ОсновнаяЧасть1");
			О2 = МакетПФ.ПолучитьОбласть("ОсновнаяЧасть2");
			Заголовок = МакетПФ.ПолучитьОбласть("Header_МнгСтр");
			Строка = МакетПФ.ПолучитьОбласть("Str_МнгСтр");
			Для Каждого Обл Из О2.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
					СтруктураПараметров.ДанныеУведомления[ИмяМакета].Свойство(Обл.Имя, Обл.Значение);
				КонецЕсли;
			КонецЦикла;
			ПечатнаяФорма.Вывести(О1);
			ПечатнаяФорма.Вывести(Заголовок);
			
			МассивПроверки = Новый Массив;
			МассивПроверки.Вставить(0, Неопределено);
			МассивПроверки.Вставить(1, О2);
			Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр Цикл 
				Для Каждого Обл Из Строка.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
						Обл.Значение = Стр[Обл.Имя];
					КонецЕсли;
				КонецЦикла;
				МассивПроверки[0] = Строка;
				
				Если Не ПечатнаяФорма.ПроверитьВывод(МассивПроверки) Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
					НомСтр = НомСтр + 1;
					ПечатнаяФорма.Вывести(Заголовок);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Строка);
			КонецЦикла;
			ПечатнаяФорма.Вывести(О2);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
		Иначе
			Для Каждого Обл Из МакетПФ.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
					СтруктураПараметров.ДанныеУведомления[ИмяМакета].Свойство(Обл.Имя, Обл.Значение);
				КонецЕсли;
			КонецЦикла;
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	НомСтр = 1;
	
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		ИмяМакета = Стр.ИДНаименования;
		Попытка
			МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет(Стр.МакетыПФ);
		Исключение
			Продолжить;
		КонецПопытки;
	
		Если ИмяМакета = "График" Тогда 
			О1 = МакетПФ.ПолучитьОбласть("ОсновнаяЧасть1");
			О2 = МакетПФ.ПолучитьОбласть("ОсновнаяЧасть2");
			Заголовок = МакетПФ.ПолучитьОбласть("Header_МнгСтр");
			Строка = МакетПФ.ПолучитьОбласть("Str_МнгСтр");
			Для Каждого Обл Из О2.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
					СтруктураПараметров.ДанныеУведомления[ИмяМакета].Свойство(Обл.Имя, Обл.Значение);
				КонецЕсли;
			КонецЦикла;
			ПечатнаяФорма.Вывести(О1);
			ПечатнаяФорма.Вывести(Заголовок);
			
			МассивПроверки = Новый Массив;
			МассивПроверки.Вставить(0, Неопределено);
			МассивПроверки.Вставить(1, О2);
			Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр Цикл 
				Для Каждого Обл Из Строка.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
						Обл.Значение = Стр[Обл.Имя];
					КонецЕсли;
				КонецЦикла;
				МассивПроверки[0] = Строка;
				
				Если Не ПечатнаяФорма.ПроверитьВывод(МассивПроверки) Тогда 
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
					НомСтр = НомСтр + 1;
					ПечатнаяФорма.Вывести(Заголовок);
				КонецЕсли;
				ПечатнаяФорма.Вывести(Строка);
			КонецЦикла;
			ПечатнаяФорма.Вывести(О2);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
		Иначе
			Для Каждого Обл Из МакетПФ.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
					СтруктураПараметров.ДанныеУведомления[ИмяМакета].Свойство(Обл.Имя, Обл.Значение);
				КонецЕсли;
			КонецЦикла;
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
