#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "Форму уведомления о контролируемых иностранных компаниях в соответствии с приказом ФНС России от 27.12.2016 № ММВ-7-3/719@";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "NO_ZVRIP";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННЮЛ", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	Если Не ЗначениеЗаполнено(Титульная.ОтчетГод) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан отчетный год", "Титульная", "ОтчетГод"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПоМесту) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код по месту нахождения(учета)", "Титульная", "ПоМесту"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПризЗаяв) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан отчетный код декларации", "Титульная", "ПризЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Период) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан отчетный период", "Титульная", "Период"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата составления", "Титульная", "ДатаДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПрПодп"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Фамилия) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана фамилия подписанта", "Титульная", "Фамилия"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Имя) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано имя подписанта", "Титульная", "Имя"));
	КонецЕсли;
	Если Титульная.ПрПодп = "2" И (Не ЗначениеЗаполнено(Титульная.НаимДок)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Для Каждого ДопЛист Из Данные.ДанныеМногостраничныхРазделов.ДопЛист Цикл 
		ДопЛистЗначение = ДопЛист.Значение;
		Если Не ЗначениеЗаполнено(ДопЛистЗначение.НаимИП) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование инвеститицонного проекта ", "ДопЛист", "НаимИП", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДопЛистЗначение.ОбщСтоимУслугР) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан объем вложений", "ДопЛист", "ОбщСтоимУслугР", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ДопЛистЗначение.ДатаНачКапВл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата начала капитальных вложений", "ДопЛист", "ДатаНачКапВл", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если (ТипЗнч(ДопЛистЗначение.СрокГод) = Тип("Число") 
				И (ДопЛистЗначение.СрокГод < 1 Или ДопЛистЗначение.СрокГод > 5)) Или ДопЛистЗначение.СрокГод = Неопределено Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(	
			"Неправильно указан срок", "ДопЛист", "СрокГод", ДопЛистЗначение.УИД));
		ИначеЕсли ДопЛистЗначение.СрокГод = Неопределено Тогда 
			ДопЛистЗначение.СрокГод = 0;
		КонецЕсли;
		Если ТипЗнч(ДопЛистЗначение.СрокМес) = Тип("Число") И ДопЛистЗначение.СрокМес > 12 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан срок", "ДопЛист", "СрокМес", ДопЛистЗначение.УИД));
		ИначеЕсли ДопЛистЗначение.СрокМес = Неопределено Тогда 
			ДопЛистЗначение.СрокМес = 0;
		КонецЕсли;
	КонецЦикла;
	
	ПризЗаяв = Титульная.ПризЗаяв;
	Для Каждого Регионы Из Данные.ДанныеМногостраничныхРазделов.Регионы Цикл 
		РегионыЗначение = Регионы.Значение;
		Если Не ЗначениеЗаполнено(РегионыЗначение.КодСубъект) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код субъекта РФ", "Регионы", "КодСубъект", РегионыЗначение.УИД));
		КонецЕсли;
		Если ПризЗаяв = "2" Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКТМО(РегионыЗначение, ТаблицаОшибок, "Регионы", "ОКТМО", Истина);
		КонецЕсли;
		
		ДопСтроки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", РегионыЗначение.УИД));
		ИндДС = 0;
		Для Каждого ДопСтрока Из ДопСтроки Цикл 
			ИндДС = ИндДС + 1;
			Если Не ЗначениеЗаполнено(ДопСтрока.НаимТов) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование товара", "Регионы", "НаимТов___" + ИндДС, РегионыЗначение.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ДопСтрока.ОКПД2) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код ОКПД2", "Регионы", "ОКПД2___" + ИндДС, РегионыЗначение.УИД));
			КонецЕсли;
			Если ПризЗаяв = "2" И Не ЗначениеЗаполнено(ДопСтрока.КодДПИ) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код полезного ископаемого", "Регионы", "КодДПИ___" + ИндДС, РегионыЗначение.УИД));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПрПодп);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ПризЗаяв", Данные.ДанныеУведомления.Титульная.ПризЗаяв);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	ДополнитьПараметры(ДанныеУведомления);
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ДополнитьПараметры(Параметры)
	ОТЧ = Новый ОписаниеТипов("Число");
	Параметры.ДанныеУведомления.Титульная.Вставить("НомКоррВыгр", Формат(ОТЧ.ПривестиЗначение(Параметры.ДанныеУведомления.Титульная.НомКорр), "ЧН=0"));
	Для Каждого ДопЛист Из Параметры.ДанныеМногостраничныхРазделов.ДопЛист Цикл 
		ДопЛистЗначение = ДопЛист.Значение;
		ДопЛистЗначение.Вставить("СрокМесВыгр", Формат(ОТЧ.ПривестиЗначение(ДопЛистЗначение.СрокМес), "ЧН=0"));
	КонецЦикла;
КонецПроцедуры

Процедура ПоложитьВОбласти(Макет, Данные)
	ЗначОбл = Неопределено;
	Для Каждого Обл Из Макет.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Если Данные.Свойство(Обл.Имя, ЗначОбл) Тогда 
				Обл.Значение = ЗначОбл;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИННЮЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ИННЮЛ);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 1;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_Титульная");
	ПоложитьВОбласти(МакетПФ, СтруктураПараметров.ДанныеУведомления.Титульная);
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Для Каждого Л1 Из СтруктураПараметров.ДанныеМногостраничныхРазделов.ДопЛист Цикл 
		Если Не ЗначениеЗаполнено(Л1.Значение.НаимИП) Тогда 
			Прервать;
		КонецЕсли;
		
		Для Каждого Л2 Из СтруктураПараметров.ДанныеМногостраничныхРазделов.Регионы Цикл 
			Если Л2.Значение.УИДРодителя <> Л1.Значение.УИД Тогда 
				Продолжить;
			КонецЕсли;
			
			МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_ДопЛист");
			ПоложитьВОбласти(МакетПФ, ИННКПП);
			ПоложитьВОбласти(МакетПФ, Л1.Значение);
			ПоложитьВОбласти(МакетПФ, Л2.Значение);
			МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=3; ЧВН=");
			НомСтр = НомСтр + 1;
			
			ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Л2.Значение.УИД));
			Инд = 0;
			НеобходимаПечать = Истина;
			Для Каждого ДопСтрока из ДопСтроки Цикл
				Если Не ЗначениеЗаполнено(ДопСтрока.НаимТов) Тогда 
					Продолжить;
				КонецЕсли;
				
				Инд = Инд + 1;
				МакетПФ.Области["НаимТов_" + Инд].Значение = ДопСтрока.НаимТов;
				МакетПФ.Области["ОКПД2_" + Инд].Значение = ДопСтрока.ОКПД2;
				МакетПФ.Области["КодДПИ_" + Инд].Значение = ДопСтрока.КодДПИ;
				НеобходимаПечать = Ложь;
				
				Если Инд = 5 Тогда
					ПечатнаяФорма.Вывести(МакетПФ);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
					МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_ДопЛист");
					ПоложитьВОбласти(МакетПФ, ИННКПП);
					ПоложитьВОбласти(МакетПФ, Л1.Значение);
					ПоложитьВОбласти(МакетПФ, Л2.Значение);
					МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=3; ЧВН=");
					НомСтр = НомСтр + 1;
					Инд = 0;
				КонецЕсли;
			КонецЦикла;
			
			Если Инд > 0 Или НеобходимаПечать Тогда 
				ПечатнаяФорма.Вывести(МакетПФ);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
