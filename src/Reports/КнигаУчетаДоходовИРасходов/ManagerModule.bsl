#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Формирует отчет по книге учета доходов и расходов:
//	- подготовливает данные по служебным регистрам подсистемы УСН;
//	- заполняет табличные документы по ранее подготовленным данным.
//
//	Параметры:
//		ПараметрыОтчета - Структура - см. метод "ПодготовитьПараметрыОтчета" формы отчета;
//		АдресХранилища - Строка - адрес временного хранилища, куда будут сохранены данные отчета.
//
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища) Экспорт
	
	ПараметрыОтчета = ПодготовитьЛистыОтчета(ПараметрыОтчета);
	
	Если АдресХранилища <> Неопределено Тогда
		ПоместитьВоВременноеХранилище(ПараметрыОтчета.СписокСформированныхЛистов, АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ЗаполнитьСведенияОНалоговомПериоде(ОписаниеОбъекта) Экспорт
	
	Если ЗначениеЗаполнено(ОписаниеОбъекта.Отчет.Организация) Тогда
		ДатаРегистрации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОписаниеОбъекта.Отчет.Организация, "ДатаРегистрации");
	Иначе
		ДатаРегистрации = '0001-01-01';
	КонецЕсли;
	
	ОписаниеОбъекта.МинимальныйПериод = НачалоКвартала(ДатаРегистрации);
	
	Если ОписаниеОбъекта.Отчет.КонецПериода < ОписаниеОбъекта.МинимальныйПериод Тогда
		// Если при смене организации, восстановлении периода из настроек или инициализации из рабочей даты
		// период отчета оказался в запрещенном интервале, нужно сдвинуть его вперед до ближайшего доступного.
		ПериодНарастающимИтогом = НачалоГода(ОписаниеОбъекта.Отчет.НачалоПериода) =
			НачалоКвартала(ОписаниеОбъекта.Отчет.НачалоПериода);
		
		ОписаниеОбъекта.Отчет.КонецПериода  = КонецКвартала(ОписаниеОбъекта.МинимальныйПериод);
		ОписаниеОбъекта.Отчет.НачалоПериода = 
			?(ПериодНарастающимИтогом, НачалоГода(ОписаниеОбъекта.Отчет.КонецПериода),
				НачалоКвартала(ОписаниеОбъекта.Отчет.КонецПериода));
	КонецЕсли;
	
	ОписаниеОбъекта.НалоговыйПериодРасширен = УчетУСНПСНСервер.НалоговыйПериодРасширен(ОписаниеОбъекта.Отчет.Организация,
		ОписаниеОбъекта.Отчет.КонецПериода, ДатаРегистрации);
	ОписаниеОбъекта.НалоговыйПериодПропущен = УчетУСНПСНСервер.НалоговыйПериодПропущен(ОписаниеОбъекта.Отчет.Организация,
		ОписаниеОбъекта.Отчет.КонецПериода, ДатаРегистрации);
	
	Если ОписаниеОбъекта.НалоговыйПериодПропущен Тогда
		ОписаниеОбъекта.Отчет.НачалоПериода = НачалоГода(ОписаниеОбъекта.Отчет.НачалоПериода);
	КонецЕсли;
	
	ОписаниеОбъекта.НачалоНалоговогоПериода = 
		?(ОписаниеОбъекта.НалоговыйПериодРасширен, НачалоДня(ДатаРегистрации),
			НачалоГода(ОписаниеОбъекта.Отчет.КонецПериода));
	
КонецПроцедуры

Функция ОписаниеОбъекта(Отчет) Экспорт
	
	ОписаниеОбъекта = Новый Структура();
	ОписаниеОбъекта.Вставить("Отчет",                            Отчет);
	ОписаниеОбъекта.Вставить("ПрименяетсяУСНДоходыМинусРасходы", Ложь);
	ОписаниеОбъекта.Вставить("ДатаПрекращенияПримененияУСНДоходыМинусРасходы", '00010101');
	ОписаниеОбъекта.Вставить("РасходыНаНДСПоОплатеПоставщику",   Истина);
	ОписаниеОбъекта.Вставить("НалоговыйПериодРасширен",          Ложь);
	ОписаниеОбъекта.Вставить("НалоговыйПериодПропущен",          Ложь);
	ОписаниеОбъекта.Вставить("НачалоНалоговогоПериода",          Отчет.КонецПериода);
	ОписаниеОбъекта.Вставить("МинимальныйПериод",                '00010101');
	ОписаниеОбъекта.Вставить("РежимРасшифровкиНалоговойБазы",    Ложь);
	
	Возврат ОписаниеОбъекта;
	
КонецФункции

Процедура ПолучитьНастройкиОтчета(ОписаниеОбъекта) Экспорт
	
	Перем ДатаИзменения;
	
	ПрименяетсяУСНДоходыМинусРаходыЗаПериод = УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходыЗаПериод(
		ОписаниеОбъекта.Отчет.Организация, ОписаниеОбъекта.Отчет.НачалоПериода, ОписаниеОбъекта.Отчет.КонецПериода);

	ПрекращеноПрименениеУСНДоходыМинусРасходы = ПрименяетсяУСНДоходыМинусРаходыЗаПериод 
		И Не УчетнаяПолитика.ПрименяетсяУСНДоходыМинусРасходы(
			ОписаниеОбъекта.Отчет.Организация, ОписаниеОбъекта.Отчет.КонецПериода);
	
	ОписаниеОбъекта.ПрименяетсяУСНДоходыМинусРасходы = ПрименяетсяУСНДоходыМинусРаходыЗаПериод;
	
	Если ПрекращеноПрименениеУСНДоходыМинусРасходы Тогда // Прекращено применение УСН (Д-Р)
		ОписаниеОбъекта.ДатаПрекращенияПримененияУСНДоходыМинусРасходы = Дата(1, 1, 1); // Пока не умеем определять
	Иначе
		ОписаниеОбъекта.ДатаПрекращенияПримененияУСНДоходыМинусРасходы = Дата(1, 1, 1);
	КонецЕсли;
	
	ОписаниеОбъекта.РасходыНаНДСПоОплатеПоставщику = Ложь;
	
	Если (ОписаниеОбъекта.Отчет.РежимПечатиНДС = 1)
		И (НЕ ОписаниеОбъекта.ПрименяетсяУСНДоходыМинусРасходы ИЛИ ОписаниеОбъекта.РасходыНаНДСПоОплатеПоставщику) Тогда
		ОписаниеОбъекта.Отчет.РежимПечатиНДС = 2;
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыОтчета(ОписаниеОбъекта) Экспорт
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ВыводитьРасшифровки",              ОписаниеОбъекта.Отчет.ВыводитьРасшифровки);
	ПараметрыОтчета.Вставить("Организация",                      ОписаниеОбъекта.Отчет.Организация);
	ПараметрыОтчета.Вставить("НачалоПериода",                    ОписаниеОбъекта.Отчет.НачалоПериода);
	ПараметрыОтчета.Вставить("КонецПериода",                     ОписаниеОбъекта.Отчет.КонецПериода);
	ПараметрыОтчета.Вставить("РежимПечатиГраф4и6",               ОписаниеОбъекта.Отчет.РежимПечатиГраф4и6);
	ПараметрыОтчета.Вставить("РежимПечатиНДС",                   ОписаниеОбъекта.Отчет.РежимПечатиНДС);
	ПараметрыОтчета.Вставить("СписокСформированныхЛистов",       ОписаниеОбъекта.Отчет.СписокСформированныхЛистов);
	
	ПараметрыОтчета.Вставить("ПрименяетсяУСНДоходыМинусРасходы", ОписаниеОбъекта.ПрименяетсяУСНДоходыМинусРасходы);
	ПараметрыОтчета.Вставить("ДатаПрекращенияПримененияУСНДоходыМинусРасходы",
		ОписаниеОбъекта.ДатаПрекращенияПримененияУСНДоходыМинусРасходы);
	ПараметрыОтчета.Вставить("РасходыНаНДСПоОплатеПоставщику",   ОписаниеОбъекта.РасходыНаНДСПоОплатеПоставщику);
	ПараметрыОтчета.Вставить("НалоговыйПериодРасширен",          ОписаниеОбъекта.НалоговыйПериодРасширен);
	ПараметрыОтчета.Вставить("НачалоНалоговогоПериода",          ОписаниеОбъекта.НачалоНалоговогоПериода);
	
	// В режиме расшифровки налоговой базы справка к Разделу I формируется за любой период и активизируется после формирования.
	ПараметрыОтчета.Вставить("РежимРасшифровкиНалоговойБазы",    ОписаниеОбъекта.РежимРасшифровкиНалоговойБазы);
	
	ПараметрыОтчета.Вставить("РежимИнтеграцииСБанком",           Ложь);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

// Заполняет структуру настроек универсального формата из реквизитов формы.
//
// Параметры:
//  ПараметрыОтчета - Структура
//  Форма - ФормаКлиентскогоПриложения - содержит основновной реквизит Отчет.
//
Процедура ЗаполнитьПараметрыИзФормы(ПараметрыОтчета, Форма) Экспорт
	
	Отчет = Форма.Отчет;
	
	ОписаниеОбъекта = ОписаниеОбъекта(ПараметрыОтчета);
	ОписаниеОбъекта.Удалить("Отчет");
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОтчета, ОписаниеОбъекта);
	
	ПараметрыОтчета.ВыводитьРасшифровки = Отчет.ВыводитьРасшифровки;
	
	ПараметрыОтчета.Организация   = Отчет.Организация;
	ПараметрыОтчета.НачалоПериода = Отчет.НачалоПериода;
	ПараметрыОтчета.КонецПериода  = Отчет.КонецПериода;
	
	ПараметрыОтчета.РежимПечатиГраф4и6 = Отчет.РежимПечатиГраф4и6;
	ПараметрыОтчета.РежимПечатиНДС     = Отчет.РежимПечатиНДС;
	
	ПараметрыОтчета.СписокСформированныхЛистов = Отчет.СписокСформированныхЛистов;
	
	ПараметрыОтчета.ПрименяетсяУСНДоходыМинусРасходы               = Форма.ПрименяетсяУСНДоходыМинусРасходы;
	ПараметрыОтчета.ДатаПрекращенияПримененияУСНДоходыМинусРасходы = Форма.ДатаПрекращенияПримененияУСНДоходыМинусРасходы;
	ПараметрыОтчета.РасходыНаНДСПоОплатеПоставщику                 = Форма.РасходыНаНДСПоОплатеПоставщику;
	ПараметрыОтчета.НалоговыйПериодРасширен                        = Форма.НалоговыйПериодРасширен;
	ПараметрыОтчета.НачалоНалоговогоПериода                        = Форма.НачалоНалоговогоПериода;
	
	ПараметрыОтчета.Расширение = Форма.Расширение;
	ПараметрыОтчета.ТипФайла   = Форма.ТипФайла;
	
КонецПроцедуры

Функция ЗаполнитьПараметрыОтчета(ДанныеОбъекта) Экспорт
	
	ПараметрыОтчета = ОписаниеОбъекта(ДанныеОбъекта);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ПараметрыОтчета, ДанныеОбъекта);
	ПолучитьНастройкиОтчета(ПараметрыОтчета);
	ЗаполнитьСведенияОНалоговомПериоде(ПараметрыОтчета);
	
	ПараметрыОтчета.Удалить("Отчет");
	
	ПараметрыОтчета.Вставить("РежимИнтеграцииСБанком", Ложь);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

// Функция-конструктор для хранения настроек отчета в универсальном формате.
//
// Возвращаемое значение:
//  Структура
//
Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	// Общая структура настроек.
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ИдентификаторОтчета", "КнигаУчетаДоходовИРасходов"); // имя объекта метаданных
	ПараметрыОтчета.Вставить("РежимРасшифровки", Ложь); // Истина - если настройки сгенерированы автоматически
	
	// Отборы из шапки отчета.
	ПараметрыОтчета.Вставить("ВыводитьРасшифровки", Ложь);
	
	ПараметрыОтчета.Вставить("Организация", Справочники.Организации.ПустаяСсылка()); // по организации
	
	ПараметрыОтчета.Вставить("НачалоПериода", '00010101');
	ПараметрыОтчета.Вставить("КонецПериода",  '00010101');
	
	ПараметрыОтчета.Вставить("РежимПечатиГраф4и6", 3);
	ПараметрыОтчета.Вставить("РежимПечатиНДС",     2);
	
	ПараметрыОтчета.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
	
	ПараметрыОтчета.Вставить("Заголовок", "");
	ПараметрыОтчета.Вставить("ТипФайла");
	ПараметрыОтчета.Вставить("Расширение", "");
	
	Возврат ПараметрыОтчета;
	
КонецФункции

Функция ПодготовитьОбщийФайлОтчета(ПараметрыОтчета) Экспорт
	
	ПараметрыОтчета = ПодготовитьЛистыОтчета(ПараметрыОтчета);
	
	ВозвращаемыеПараметры = ЗаполнениеФинОтчетностиВБанки.ПодготовитьДвоичныеДанныеПакетаОтображаемыхДокументов(
		ПараметрыОтчета);
	
	Возврат ВозвращаемыеПараметры;

	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПодготовитьЛистыОтчета(ПараметрыОтчета)
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	// Подготовка данных отчета
	ДанныеОтчета = ПодготовитьДанныеОтчета(ПараметрыОтчета);
	ПараметрыОтчета.Вставить("ДанныеОтчета", ДанныеОтчета);
	
	// Вывод печатной формы
	
	ПечатьТитульногоЛиста(ПараметрыОтчета);
	
	ПечатьРаздела1(ПараметрыОтчета);
	
	Если ПараметрыОтчета.ПрименяетсяУСНДоходыМинусРасходы
		И НЕ ПараметрыОтчета.РежимИнтеграцииСБанком Тогда
		
		ПечатьРаздела2(ПараметрыОтчета);
		
		ПечатьРаздела3(ПараметрыОтчета);
		
	КонецЕсли;
	
	ПечатьРазделаУменьшенияНалога(ПараметрыОтчета);
	
	ПечатьРазделаТорговогоСбора(ПараметрыОтчета);
	
	Возврат ПараметрыОтчета;
	
КонецФункции

Процедура ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет)
	
	Секция = Макет.ПолучитьОбласть("Шапка|Основная");
	ТабличныйДокумент.Вывести(Секция);
	Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Шапка|Режим3","Шапка|Режим12"));
	Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
		Секция = Макет.ПолучитьОбласть("Шапка|Режим3");
		Заголовок4 = НСтр("ru = 'Доходы, учитываемые при исчислении налоговой базы';
							|en = 'Income taken into account when calculating the tax base'");
		Заголовок6 = НСтр("ru = 'Расходы, учитываемые при исчислении налоговой базы';
							|en = 'Expenses taken into account when calculating the tax base'");
		
		Если ПараметрыОтчета.КонецПериода >= УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
			ПредставлениеРублей = НСтр("ru = '(рублей)';
										|en = '(rubles)'");
			Заголовок4 = Заголовок4 + Символы.ПС + ПредставлениеРублей;
			Заголовок6 = Заголовок6 + Символы.ПС + ПредставлениеРублей;
		КонецЕсли;
		
		Секция.Параметры.Заголовок4 = Заголовок4;
		Секция.Параметры.Заголовок6 = Заголовок6;
	Иначе
		Секция = Макет.ПолучитьОбласть("Шапка|Режим12");
		Секция.Параметры.Заголовок5 = НСтр("ru = 'в т.ч. доходы, учитываемые при исчислении налоговой базы';
											|en = 'including income taking into account while calculating the tax base'");
		Секция.Параметры.Заголовок7 = НСтр("ru = 'в т.ч. расходы, учитываемые при исчислении налоговой базы';
											|en = 'including expenses taking into account while calculating the tax base'");
	КонецЕсли;
	
	ТабличныйДокумент.Присоединить(Секция);
	
КонецПроцедуры

Процедура ПечатьТитульногоЛиста(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_ТитульныйЛист";
	
	Секция = МакетТитульногоЛиста(ПараметрыОтчета.КонецПериода);
	
	Секция.Параметры.НаПериод = СтрШаблон(НСтр("ru = 'на %1 год';
												|en = 'for %1'"), Формат(Год(ПараметрыОтчета.КонецПериода), "ЧГ="));
	
	Сведения = БухгалтерскийУчетПереопределяемый.СведенияОЮрФизЛице(
		ПараметрыОтчета.Организация,
		ПараметрыОтчета.КонецПериода);
	
	ЭтоЮрЛицо = ОбщегоНазначенияБПВызовСервераПовтИсп.ЭтоЮрЛицо(ПараметрыОтчета.Организация);
	
	Если ЭтоЮрЛицо Тогда
		Секция.Параметры.ПолноеНаименованиеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			Сведения, "НаименованиеДляПечатныхФорм");
	Иначе
		Секция.Параметры.ПолноеНаименованиеОрганизации = ОбщегоНазначенияБПВызовСервера.ОписаниеОрганизации(
			Сведения, "ФИОФизлица");
	КонецЕсли;
	
	Секция.Параметры.КодОКПО = Сведения.КодПоОКПО;
	
	// Соберем банковские счета
	Счета = "";
	
	Данные = ПараметрыОтчета.ДанныеОтчета;
	Если Данные.БанковскиеСчета <> Неопределено Тогда
		БанковскиеСчетаВыборка = Данные.БанковскиеСчета.Выбрать();
		Пока БанковскиеСчетаВыборка.Следующий() Цикл
			НомСч = СокрЛП(БанковскиеСчетаВыборка.Номер);
			Банк  = СокрЛП(БанковскиеСчетаВыборка.Банк);
			Счета = Счета+"№ "+НомСч+" " + НСтр("ru = 'в';
												|en = 'in'") + " "+Банк+", ";
		КонецЦикла;
		Счета = Лев(Счета,СтрДлина(Счета)-2);
	КонецЕсли;
	Секция.Параметры.Счета = Счета;
	
	Если УчетнаяПолитика.Существует(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода, Истина) Тогда
		Секция.Параметры.ОбъектНалогообложения =
			УчетнаяПолитика.ОбъектНалогообложенияУСН(ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода);
	КонецЕсли;
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		
		//Проверим длину адреса
		СтрокаАдреса = СокрЛП(Сведения.ЮридическийАдрес);
		Если СтрДлина(СтрокаАдреса) > 45 Тогда
			
			ПозицияПереноса = 0;
			СтрокаПоиска = СтрокаАдреса;
			РезультатПоиска = СтрНайти(СтрокаПоиска, ",");
			
			Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
				ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
				СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
				РезультатПоиска = СтрНайти(СтрокаПоиска, ",");
			КонецЦикла;
			
			Если Не ПозицияПереноса = 0 Тогда
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);
			Иначе
				СтрокаПоиска = СтрокаАдреса;
				РезультатПоиска = СтрНайти(СтрокаПоиска, " ");
				Пока (РезультатПоиска + ПозицияПереноса < 45) И (РезультатПоиска > 0) Цикл
					ПозицияПереноса = ПозицияПереноса + РезультатПоиска;
					СтрокаПоиска = Прав(СтрокаПоиска, СтрДлина(СтрокаПоиска) - РезультатПоиска);
					РезультатПоиска = СтрНайти(СтрокаПоиска, " ");
				КонецЦикла;
				ПозицияПереноса = ?(ПозицияПереноса = 0, 45, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации = Лев(СтрокаАдреса, ПозицияПереноса);
				Секция.Параметры.АдресОрганизации2 = Прав(СтрокаАдреса, СтрДлина(СтрокаАдреса) - ПозицияПереноса);
			КонецЕсли;
			
		Иначе
			Секция.Параметры.АдресОрганизации = Сведения.ЮридическийАдрес;
		КонецЕсли;   
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Секция);
	
	ИНН = СокрЛП(Сведения.ИНН);
	КПП = СокрЛП(Сведения.КПП);
	
	Если СтрДлина(ИНН) <> 12 Тогда
		// Налогоплательщик - юр. лицо
		ИНН = "00" + ИНН;
	Иначе
		// Налогоплательщик - физ. лицо
		КПП = "";
	КонецЕсли;
	
	ИмяОбластиИНН = ?(ЭтоЮрЛицо, "ИНН", "ПрИНН");
	
	Для НомерСимвола = 1 По 12 Цикл
		
		ТабличныйДокумент.Область(ИмяОбластиИНН + НомерСимвола).Текст = ?(Число(ИНН) > 0, Сред(ИНН, НомерСимвола, 1), "");
		
		Если НомерСимвола <= 9 Тогда
			ТабличныйДокумент.Область("КПП" + НомерСимвола).Текст = Сред(КПП, НомерСимвола, 1);
		КонецЕсли;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, НСтр("ru = 'Титульный лист';
																				|en = 'Cover page'"));
	
КонецПроцедуры

Процедура ПечатьРаздела1(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел1";
	Макет = ПолучитьМакет("Раздел1");
	
	ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет);
	
	ВыделятьНДС = ВыделятьНДС(ПараметрыОтчета);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	
	НПП = 1;
	
	ВыборкаКоличествоЗаписей = 
		ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "КоличествоЗаписейРаздела1ДоНачалаОтчета");
	
	Если ВыборкаКоличествоЗаписей <> Неопределено Тогда
		Пока ВыборкаКоличествоЗаписей.Следующий() Цикл
			НПП = НПП + ВыборкаКоличествоЗаписей.КоличествоСтрок + ВыборкаКоличествоЗаписей.КоличествоСтрокНДС;
		КонецЦикла;
	КонецЕсли;
	
	ТекКвартал              = НомерКвартала(НачДата);
	ПоследнийКварталПериода = НомерКвартала(ПараметрыОтчета.КонецПериода);
	
	ВыборкаЗаписей = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ЗаписиРаздел1");
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = КварталЗаписи(ВыборкаЗаписей.Период, ПараметрыОтчета);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка|Основная");
		Секция.Параметры.НомерПП         = НПП;
		Секция.Параметры.ТекРасшифровка  = Новый Структура("Период, Регистратор, ДокументВозникновенияДоходовРасходов, ВидРасходов, РеквизитыПервичногоДокумента");
		Если ВыборкаЗаписей.КоличествоЗаписей = 1 Тогда
			Секция.Параметры.ТекРасшифровка.Вставить("НомерСтроки");
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Секция.Параметры.ТекРасшифровка, ВыборкаЗаписей);
		Если ЗначениеЗаполнено(ВыборкаЗаписей.СторнирующийДокумент) Тогда
			Секция.Параметры.ТекРасшифровка.Регистратор = ВыборкаЗаписей.СторнирующийДокумент;
		КонецЕсли;
		Секция.Параметры.ПечДатаНомерДок = ВыборкаЗаписей.РеквизитыПервичногоДокумента;
		Секция.Параметры.ПечСодержОпер   = ВыборкаЗаписей.Содержание;
		
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			// Выводим все строки
		ИначеЕсли НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа5) И НЕ ЗначениеЗаполнено(ВыборкаЗаписей.Графа7) Тогда
			Продолжить;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
		
		НДСрасходовБУ = 0;
		
		Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ВыборкаЗаписей.Графа4;
			Если ПараметрыОтчета.РежимПечатиНДС = 2 И ВыборкаЗаписей.Графа6 > 0
				И ВыборкаЗаписей.Графа7 > 0 И ВыборкаЗаписей.НДС > 0
					И НЕ ВыделятьНДС Тогда
				НДСрасходовБУ = ?(ВыборкаЗаписей.Графа6 >= ВыборкаЗаписей.Графа7, Окр(ВыборкаЗаписей.НДС, 2),
					Окр(ВыборкаЗаписей.НДС, 2)*ВыборкаЗаписей.Графа6/ВыборкаЗаписей.Графа7);
				Секция.Параметры.ПечРасходыБУ = ВыборкаЗаписей.Графа6 - НДСрасходовБУ;
			Иначе
				Секция.Параметры.ПечРасходыБУ = ВыборкаЗаписей.Графа6;
			КонецЕсли;
		КонецЕсли;
		
		Секция.Параметры.ПечДоходы = ВыборкаЗаписей.Графа5;
		
		Если ВыборкаЗаписей.НДС = 0 ИЛИ ВыделятьНДС Тогда
			
			Секция.Параметры.ПечРасходы = ВыборкаЗаписей.Графа7;
			ТабличныйДокумент.Присоединить(Секция);
			
		ИначеЕсли ПараметрыОтчета.РежимПечатиНДС = 1 Тогда
			
			Секция.Параметры.ПечРасходы = "" + Формат(ВыборкаЗаписей.Графа7, "ЧДЦ=2")
			+ Символы.ПС + НСтр("ru = 'в т.ч. НДС';
								|en = 'Including VAT'") + Символы.ПС
			+ Формат(Окр(ВыборкаЗаписей.НДС, 2), "ЧДЦ=2");
			ТабличныйДокумент.Присоединить(Секция);
			
		Иначе // ПараметрыОтчета.РежимПечатиНДС = 2
			
			Секция.Параметры.ПечРасходы = ВыборкаЗаписей.Графа7 - Окр(ВыборкаЗаписей.НДС, 2);
			ТабличныйДокумент.Присоединить(Секция);
			
		КонецЕсли;
		
		// Выведем строку НДС
		Если ПараметрыОтчета.РежимПечатиНДС = 2 И ВыборкаЗаписей.НДС <> 0 И НЕ ВыделятьНДС Тогда
			
			НПП = НПП + 1;
			
			Секция = Макет.ПолучитьОбласть("Строка|Основная");
			Секция.Параметры.НомерПП         = НПП;
			Секция.Параметры.ТекРасшифровка		= Новый Структура("Регистратор, ДокументВозникновенияДоходовРасходов, ВидРасходов");
			Если ВыборкаЗаписей.КоличествоЗаписей = 1 Тогда
				Секция.Параметры.ТекРасшифровка.Вставить("НомерСтроки");
			КонецЕсли;
			ЗаполнитьЗначенияСвойств(Секция.Параметры.ТекРасшифровка, ВыборкаЗаписей);
			Если ЗначениеЗаполнено(ВыборкаЗаписей.СторнирующийДокумент) Тогда
				Секция.Параметры.ТекРасшифровка.Регистратор = ВыборкаЗаписей.СторнирующийДокумент;
			КонецЕсли;
			Секция.Параметры.ПечДатаНомерДок = ВыборкаЗаписей.РеквизитыПервичногоДокумента;
			Секция.Параметры.ПечСодержОпер   = ВыборкаЗаписей.Содержание +" " + НСтр("ru = '(НДС)';
																					|en = '(VAT)'");
			ТабличныйДокумент.Вывести(Секция);
			Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Строка|Режим3","Строка|Режим12"));
			Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
				Секция.Параметры.ПечРасходыБУ = НДСрасходовБУ;
			КонецЕсли;
			Секция.Параметры.ПечРасходы = Окр(ВыборкаЗаписей.НДС, 2);
			ТабличныйДокумент.Присоединить(Секция);
		
		КонецЕсли;
		
		НПП = НПП + 1;
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	// Выведем подвал
	Если НомерКвартала(ПараметрыОтчета.КонецПериода) = 4 Или ПараметрыОтчета.РежимРасшифровкиНалоговойБазы Тогда
		Секция = Макет.ПолучитьОбласть("Справка");
		
		П010 = 0;
		П020 = 0;
		
		ВыборкаОбороты = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ОборотыРаздела1ПоКварталам", Истина);
		Пока ВыборкаОбороты.Следующий() Цикл
			П010 = П010 + ВыборкаОбороты.Графа5;
			П020 = П020 + ВыборкаОбороты.Графа7;
		КонецЦикла;
		
		П030 = 0;
		
		ТаблицаУбытков = ПолучитьТаблицуДанных(ПараметрыОтчета.ДанныеОтчета, "УбыткиРаздел3", Истина);
		Если ЗначениеЗаполнено(ТаблицаУбытков) Тогда
			П030 = ТаблицаУбытков[0].УбытокОтУплатыМинимальногоНалога;
		КонецЕсли;
		
		Секция.Параметры.ПечДоходы = П010;
		Секция.Параметры.ПечРасходы = П020;
		Секция.Параметры.Убыток030 = П030;
		
		Если П010 - П020 - П030 >= 0 Тогда
			Секция.Параметры.ИтогоДоходы = П010 - П020 - П030;
		Иначе
			Секция.Параметры.ИтогоРасходы = П020 + П030 - П010;
		КонецЕсли;
		
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
	УстановитьШиринуКолонкиСодержание(ПараметрыОтчета, Макет, ТабличныйДокумент);
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(6,,6,);
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент,
		СтрШаблон(НСтр("ru = 'Раздел I. Доходы и расходы за %1 кв.';
						|en = 'Section I. Income and expenses for Q%1'"), ПоследнийКварталПериода));
	
КонецПроцедуры

Процедура ПечатьРаздела2(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел2";
	
	Макет = МакетРаздела2(ПараметрыОтчета.КонецПериода);
	
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		Секция.Параметры.ЗаПериод = ЗаголовокПериодНарастающимИтогом(ПараметрыОтчета.КонецПериода);
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
	ТаблицаРезультата = ПолучитьТаблицуДанных(ПараметрыОтчета.ДанныеОтчета, "ЗаписиРаздел2");
	ТаблицаОтчета = Неопределено;
	
	Если ЗначениеЗаполнено(ТаблицаРезультата) Тогда
	
		ТаблицаОтчета = ТаблицаРезультата.Скопировать();
		ТаблицаОтчета.Очистить();
		ТаблицаОтчета.Колонки.Добавить("ПечДатаОплаты");
		СтрокаТаблицыОтчета = Неопределено;
		СписокДат = "";
		Для Каждого СтрокаТаблицы Из ТаблицаРезультата Цикл
			Если СтрокаТаблицыОтчета = Неопределено Тогда
				СтрокаТаблицыОтчета = ТаблицаОтчета.Добавить();
			КонецЕсли;
			Если (СтрокаТаблицыОтчета.ОсновноеСредство					 = СтрокаТаблицы.ОсновноеСредство) И
				(СтрокаТаблицыОтчета.ДокументМодернизации 				 = СтрокаТаблицы.ДокументМодернизации) И
				(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		 = СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию) И
				(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования   = СтрокаТаблицы.Графа7_СрокПолезногоИспользования) И
				(СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде) И
				(СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 	 = СтрокаТаблицы.Графа9_КолКварталовВНалПериоде) И
				(СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	 = СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод) И
				(СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		 = СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал) Тогда
				
				СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость
					+ СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
				СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость 			= СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость
					+ СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
				СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод
					+ СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
				СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал
					+ СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
				СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов
					+ СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
				СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицыОтчета.Графа15_ОстатокРасходов
					+ СтрокаТаблицы.Графа15_ОстатокРасходов;
				
				СписокДат = СписокДат + Формат(СтрокаТаблицы.ДатаОплаты, "ДЛФ=D") + ", ";
			Иначе
				СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
				
				СтрокаТаблицыОтчета 									= ТаблицаОтчета.Добавить();
				СтрокаТаблицыОтчета.ОсновноеСредство 					= СтрокаТаблицы.ОсновноеСредство;
				СтрокаТаблицыОтчета.ДокументМодернизации 				= СтрокаТаблицы.ДокументМодернизации;
				СтрокаТаблицыОтчета.ИнвентарныйНомер 					= СтрокаТаблицы.ИнвентарныйНомер;
				СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию 		= СтрокаТаблицы.Графа3_ДатаВводаВЭксплуатацию;
				СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицы.Графа4_ГосударственнаяРегистрация;
				СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования 	= СтрокаТаблицы.Графа7_СрокПолезногоИспользования;
				СтрокаТаблицыОтчета.Графа8_КолКварталовВОтчетномПериоде = СтрокаТаблицы.Графа8_КолКварталовВОтчетномПериоде;
				СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде 		= СтрокаТаблицы.Графа9_КолКварталовВНалПериоде;
				СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод 	= СтрокаТаблицы.Графа10_ДоляРасходовЗаНалПериод;
				СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал 		= СтрокаТаблицы.Графа11_ДоляРасходовЗаКвартал;
				
				СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость 		= СтрокаТаблицы.Графа5_ПервоначальнаяСтоимость;
				СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость			= СтрокаТаблицы.Графа6_ОстаточнаяСтоимость;
				СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод = СтрокаТаблицы.Графа12_СуммаРасходовЗаОтчетнПериод;
				СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал 		= СтрокаТаблицы.Графа13_СуммаРасходовЗаКвартал;
				СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов 		= СтрокаТаблицы.Графа14_РасходыПрошлыхПериодов;
				СтрокаТаблицыОтчета.Графа15_ОстатокРасходов 			= СтрокаТаблицы.Графа15_ОстатокРасходов;
				
				СписокДат = Формат(СтрокаТаблицы.ДатаОплаты, "ДЛФ=D") + ", ";
			КонецЕсли;
		КонецЦикла;
		Если НЕ СтрокаТаблицыОтчета = Неопределено Тогда
			СтрокаТаблицыОтчета.ПечДатаОплаты = ?(Прав(СписокДат,2)=", ",Лев(СписокДат,СтрДлина(СписокДат)-2),СписокДат);
			ТаблицаОтчета.Удалить(0);
		КонецЕсли;
		
		НПП = 1;
		Для Каждого СтрокаТаблицыОтчета Из ТаблицаОтчета Цикл
			
			Секция = Макет.ПолучитьОбласть("Строка");
			Секция.Параметры.ПорядковыйНомер  = НПП;
			Секция.Параметры.ОсновноеСредство = СтрокаТаблицыОтчета.ОсновноеСредство;
			Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.ДокументМодернизации) Тогда
				СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование
					+ ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", " + НСтр("ru = 'инв.№';
																									|en = 'inv No.'")
					+ СтрокаТаблицыОтчета.ИнвентарныйНомер) + " (" + СтрокаТаблицыОтчета.ДокументМодернизации.СобытиеОС.Наименование
					+ " " + НСтр("ru = 'от';
								|en = 'dated'") + " " + Формат(СтрокаТаблицыОтчета.ДокументМодернизации.Дата,"ДЛФ=D") + ")";
			Иначе
				СтрокаСодержания = СтрокаТаблицыОтчета.ОсновноеСредство.Наименование
					+ ?(НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.ИнвентарныйНомер), "", ", " + НСтр("ru = 'инв.№';
																									|en = 'inv No.'") + СтрокаТаблицыОтчета.ИнвентарныйНомер);
			КонецЕсли;
			Секция.Параметры.НаименованиеОС            = СтрокаСодержания;
			Секция.Параметры.ПечДатаВводаВЭксплуатацию = Формат(СтрокаТаблицыОтчета.Графа3_ДатаВводаВЭксплуатацию,
				"ДЛФ=D");
			Секция.Параметры.ДатаОплаты                = СтрокаТаблицыОтчета.ПечДатаОплаты;
			Секция.Параметры.ПервоначальнаяСтоимость   = СтрокаТаблицыОтчета.Графа5_ПервоначальнаяСтоимость;
			
			Если НомерКвартала(ПараметрыОтчета.КонецПериода) = 4 Тогда
				Секция.Параметры.СуммаРасходовЗаОтчетныйПериод = СтрокаТаблицыОтчета.Графа12_СуммаРасходовЗаОтчетнПериод;
			КонецЕсли;
			Если НЕ ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования) Тогда
				СтрокаТаблицыОтчета.Графа15_ОстатокРасходов = 0;
			КонецЕсли;
			Если ЗначениеЗаполнено(СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация) Тогда
				Секция.Параметры.Графа4_ГосударственнаяРегистрация	= СтрокаТаблицыОтчета.Графа4_ГосударственнаяРегистрация;
			КонецЕсли;
			
			Секция.Параметры.ОстаточнаяСтоимость        = СтрокаТаблицыОтчета.Графа6_ОстаточнаяСтоимость;
			Секция.Параметры.СрокПолезногоИспользования = СтрокаТаблицыОтчета.Графа7_СрокПолезногоИспользования;
			
			Секция.Параметры.КоличествоКварталовВНалоговомПериоде     = СтрокаТаблицыОтчета.Графа9_КолКварталовВНалПериоде;
			Секция.Параметры.ПроцентПринятыхРасходов                  = СтрокаТаблицыОтчета.Графа10_ДоляРасходовЗаНалПериод;
			Секция.Параметры.ПроцентПринятыхРасходовЗаКвартал         = СтрокаТаблицыОтчета.Графа11_ДоляРасходовЗаКвартал;
			Секция.Параметры.СуммаРасходовЗаПоследнийКвартал          = СтрокаТаблицыОтчета.Графа13_СуммаРасходовЗаКвартал;
			Секция.Параметры.СуммаРасходовПредыдущихПериодов          = СтрокаТаблицыОтчета.Графа14_РасходыПрошлыхПериодов;
			Секция.Параметры.СуммаРасходовНеВключенныхВСоставРасходов = СтрокаТаблицыОтчета.Графа15_ОстатокРасходов;
			
			ДокументСнятоСУчетаБУ = Неопределено;
			ДатаВыбытия           = Неопределено;
			Если ТипЗнч(СтрокаТаблицыОтчета.ОсновноеСредство) = Тип("СправочникСсылка.НематериальныеАктивы") Тогда
				УчетНМА.СведенияОВыбытииНМА(СтрокаТаблицыОтчета.ОсновноеСредство,
					ПараметрыОтчета.Организация, ДокументСнятоСУчетаБУ, ДатаВыбытия);
			Иначе
				УчетОСВызовСервера.СведенияОВыбытииОС(СтрокаТаблицыОтчета.ОсновноеСредство,
					ПараметрыОтчета.Организация, ДокументСнятоСУчетаБУ, ДатаВыбытия);
			КонецЕсли;
			ДатаВыбытия = ?(ДатаВыбытия > КонецДня(ПараметрыОтчета.КонецПериода),"", ДатаВыбытия);
			Секция.Параметры.ПечДатаВыбытия = Формат(ДатаВыбытия, "ДЛФ=D");
			
			ТабличныйДокумент.Вывести(Секция);
			НПП = НПП + 1;
		КонецЦикла;
	
	КонецЕсли;
	
	Секция = Макет.ПолучитьОбласть("Итог");
	
	Если ЗначениеЗаполнено(ТаблицаОтчета) Тогда
		
		Секция.Параметры.ИтогоПервоначальнаяСтоимость = ТаблицаОтчета.Итог("Графа5_ПервоначальнаяСтоимость");
		Секция.Параметры.ИтогоОстаточнаяСтоимость     = ТаблицаОтчета.Итог("Графа6_ОстаточнаяСтоимость");
		
		Если НомерКвартала(ПараметрыОтчета.КонецПериода) = 4 Тогда
			Секция.Параметры.ИтогоСуммаРасходовЗаОтчетныйПериод = ТаблицаОтчета.Итог("Графа12_СуммаРасходовЗаОтчетнПериод");
		КонецЕсли;
		
		Секция.Параметры.ИтогоСуммаРасходовЗаПоследнийКвартал          = ТаблицаОтчета.Итог("Графа13_СуммаРасходовЗаКвартал");
		Секция.Параметры.ИтогоСуммаРасходовПредыдущихПериодов          = ТаблицаОтчета.Итог("Графа14_РасходыПрошлыхПериодов");
		Секция.Параметры.ИтогоСуммаРасходовНеВключенныхВСоставРасходов = ТаблицаОтчета.Итог("Графа15_ОстатокРасходов");
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Секция);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, НСтр("ru = 'Раздел II. Расходы на ОС и НМА';
																				|en = 'Section II. FA and IA expenses'"));
	
КонецПроцедуры

Процедура ПечатьРаздела3(ПараметрыОтчета)
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел3";
	
	Секция = МакетРаздела3(ПараметрыОтчета.КонецПериода);
	
	ТаблицаУбытков = ПолучитьТаблицуДанных(ПараметрыОтчета.ДанныеОтчета, "УбыткиРаздел3");
	
	Если ЗначениеЗаполнено(ТаблицаУбытков) Тогда
		
		Раздел1_П010 = 0;
		Раздел1_П020 = 0;
		
		ВыборкаОбороты = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ОборотыРаздела1ПоКварталам", Истина);
		Пока ВыборкаОбороты.Следующий() Цикл
			Раздел1_П010 = Раздел1_П010 + ВыборкаОбороты.Графа5;
			Раздел1_П020 = Раздел1_П020 + ВыборкаОбороты.Графа7;
		КонецЦикла;
		
		Раздел1_П030 = ТаблицаУбытков[0].УбытокОтУплатыМинимальногоНалога;
		Раздел1_П040 = ?(Раздел1_П010 - Раздел1_П020 - Раздел1_П030 >= 0, Раздел1_П010 - Раздел1_П020 - Раздел1_П030, 0);
		Раздел1_П041 = ?(Раздел1_П010 - Раздел1_П020 - Раздел1_П030 >= 0, 0, Раздел1_П020 + Раздел1_П030 - Раздел1_П010);
		
		П010 = ТаблицаУбытков.Итог("СуммаНеПеренесенныхУбытков");
		П120 = Раздел1_П040;
		П130 = Мин(Раздел1_П040, П010);
		П140 = Раздел1_П041;
		П150 = П010 - П130 + П140;
		
		СуммаКРаспределениюПоСтрокам = П130;
		
		Для Каждого СтрокаУбытка Из ТаблицаУбытков Цикл
			ПараметрСтроки1 = Формат(1+СтрокаУбытка.НомерСтроки, "ЧЦ=2; ЧВН=");
			ПараметрСтроки2 = Формат(14+СтрокаУбытка.НомерСтроки, "ЧЦ=2; ЧВН=");
			Секция.Области["П"+ПараметрСтроки1+"01"].Текст = Прав(СтрокаУбытка.Год, 2);
			Секция.Области["П"+ПараметрСтроки1+"03"].Текст = СтрокаУбытка.СуммаНеПеренесенныхУбытков;
			
			СуммаУбыткаПоСтроке = Мин(СуммаКРаспределениюПоСтрокам, СтрокаУбытка.СуммаНеПеренесенныхУбытков);
			СуммаКРаспределениюПоСтрокам = СуммаКРаспределениюПоСтрокам - СуммаУбыткаПоСтроке;
			
			Если СтрокаУбытка.НомерСтроки > 1 Тогда
				Секция.Области["П"+ПараметрСтроки2+"01"].Текст = Прав(СтрокаУбытка.Год, 2);
				Секция.Области["П"+ПараметрСтроки2+"03"].Текст = СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке;
			Иначе
				// Убыток "сгорел" - прошло больше 10 лет
				Если СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке > 0 Тогда
					П150 = П150 - СтрокаУбытка.СуммаНеПеренесенныхУбытков - СуммаУбыткаПоСтроке
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
		
		Секция.Области["П2501"].Текст = Формат(ПараметрыОтчета.КонецПериода, "ДФ=yy");
		Секция.Области["П2503"].Текст = Раздел1_П041;
		
		Секция.Области["П0103"].Текст = П010;
		Секция.Области["П1203"].Текст = П120;
		Секция.Области["П1303"].Текст = П130;
		Секция.Области["П1403"].Текст = П140;
		Секция.Области["П1503"].Текст = П150;
		
	КонецЕсли;
	
	ТабличныйДокумент.Вывести(Секция);
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, НСтр("ru = 'Раздел III. Расчет убытка';
																				|en = 'Section III. Loss calculation'"));
	
КонецПроцедуры


Процедура ПечатьРазделаТорговогоСбора(ПараметрыОтчета)
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР() Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел5";
	
	Макет  = МакетРазделаТорговогоСбора(ПараметрыОтчета.КонецПериода);
	Секция = Макет.ПолучитьОбласть("Шапка");
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		Секция.Параметры.ЗаПериод = ЗаголовокПериодНарастающимИтогом(ПараметрыОтчета.КонецПериода);
		ИмяЛиста = НСтр("ru = 'Раздел V. Уплаченный торговый сбор';
						|en = 'Section V. Paid sales charge'");
	Иначе
		ИмяЛиста = НСтр("ru = 'Раздел IV. Уплаченный торговый сбор';
						|en = 'Section IV. Paid sales charge'");
	КонецЕсли;
	ТабличныйДокумент.Вывести(Секция);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	
	ПрименяетсяЕНП = НачДата >= УчетУСНПСНСервер.ДатаПримененияЕНП();
	
	НПП = 1;
	
	ВыборкаКоличествоЗаписей = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "КоличествоЗаписейРазделаТорговогоСбораДоНачалаОтчета");
	Если ВыборкаКоличествоЗаписей <> Неопределено Тогда
		Пока ВыборкаКоличествоЗаписей.Следующий() Цикл
			НПП = НПП + ВыборкаКоличествоЗаписей.КоличествоСтрок;
		КонецЦикла;
	КонецЕсли;
	
	ТекКвартал              = НомерКвартала(НачДата);
	ПоследнийКварталПериода = НомерКвартала(ПараметрыОтчета.КонецПериода);
	
	ВыборкаЗаписей = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ЗаписиРазделТорговогоСбора");
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = КварталЗаписи(ВыборкаЗаписей.ПериодЗаписи, ПараметрыОтчета);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекКвартал, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.Заполнить(ВыборкаЗаписей);
		
		Если ПрименяетсяЕНП Тогда
			Секция.Параметры.ПериодНачисленияПредставление = ПредставлениеПериода(
			НачалоКвартала(ВыборкаЗаписей.ПериодНачисления), КонецКвартала(ВыборкаЗаписей.ПериодНачисления), "ФП=Истина");  
		Иначе
			Секция.Параметры.ПериодНачисленияПредставление = Формат(ВыборкаЗаписей.ПериодНачисления, "ДФ='ММММ гггг'");
		КонецЕсли;
		
		НПП = НПП + 1;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекКвартал, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, ИмяЛиста);
	
КонецПроцедуры


Процедура ПечатьРазделаУменьшенияНалога(ПараметрыОтчета)
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования4РазделаКУДиР()
		Или ПараметрыОтчета.КонецПериода > УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		Возврат;
	КонецЕсли;
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.Автомасштаб         = Истина;
	ТабличныйДокумент.КлючПараметровПечати= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел4";
	
	Макет = ПолучитьМакет("Раздел4");
	Секция = Макет.ПолучитьОбласть("Шапка");
	Секция.Параметры.ЗаПериод = ЗаголовокПериодНарастающимИтогом(ПараметрыОтчета.КонецПериода);
	ТабличныйДокумент.Вывести(Секция);
	
	НачДата = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	
	НПП = 1;
	
	ВыборкаКоличествоЗаписей = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "КоличествоЗаписейРазделаУменьшенияНалогаДоНачалаОтчета");
	Если ВыборкаКоличествоЗаписей <> Неопределено Тогда
		Пока ВыборкаКоличествоЗаписей.Следующий() Цикл
			НПП = НПП + ВыборкаКоличествоЗаписей.КоличествоСтрок;
		КонецЦикла;
	КонецЕсли;
	
	ТекКвартал              = НомерКвартала(НачДата);
	ПоследнийКварталПериода = НомерКвартала(ПараметрыОтчета.КонецПериода);
	
	ВыборкаЗаписей = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ЗаписиРазделУменьшенияНалога");
	
	Пока ВыборкаЗаписей.Следующий() Цикл
		
		КварталЗаписи = КварталЗаписи(ВыборкаЗаписей.ПериодЗаписи, ПараметрыОтчета);
		
		Пока КварталЗаписи <> ТекКвартал Цикл
			
			ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
			ТекКвартал = ТекКвартал + 1;
			
		КонецЦикла;
		
		Секция = Макет.ПолучитьОбласть("Строка");
		Секция.Параметры.НомерПП = НПП;
		Секция.Параметры.Заполнить(ВыборкаЗаписей);
		
		Если Не ЗначениеЗаполнено(ВыборкаЗаписей.ПериодНачисленияПредставление) Тогда
			Секция.Параметры.ПериодНачисленияПредставление = Формат(ВыборкаЗаписей.ПериодНачисления, "ДФ='ММММ гггг'");
		КонецЕсли;
		
		Секция.Параметры.ИтогоВзносов = ВыборкаЗаписей.ПФР + ВыборкаЗаписей.ФСС
			+ ВыборкаЗаписей.ФОМС + ВыборкаЗаписей.ФСС_НС
			+ ВыборкаЗаписей.Больничные + ВыборкаЗаписей.Дстрах;
		
		НПП = НПП + 1;
		ТабличныйДокумент.Вывести(Секция);
		
	КонецЦикла;
	
	Пока ПоследнийКварталПериода >= ТекКвартал Цикл
		
		ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент);
		ТекКвартал = ТекКвартал + 1;
		
	КонецЦикла;
	
	ТабличныйДокумент.ТолькоПросмотр = Истина;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, НСтр("ru = 'Раздел IV. Уменьшение налога';
																				|en = 'Section IV. Tax reduction'"));
	
КонецПроцедуры

Функция РедакцияПриказаМинфина135н(Период)
	
	Если Период >= УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР() Тогда
		// На титульном листе требуется указать дату и номер приказа, добавившего 5 раздел.
		Возврат НСтр("ru = '(в ред. Приказа Минфина России от 07.12.2016 № 227н)';
					|en = '(in the edition of the order of the Ministry of Finance of the Russian Federation of December 7, 2016 No. 227n)'");
	КонецЕсли;
	
	Возврат "";
	
КонецФункции

Процедура ВывестиИтогиЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итого|Основная");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПечТекстИтогов = СтрШаблон(
		НСтр("ru = 'Итого за %1 квартал';
			|en = 'Total for %1 quarter'"),
		СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь));
	ТабличныйДокумент.Вывести(Секция);
	
	Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));
	
	ИтогПечДоходыБУ  = 0;
	ИтогПечРасходыБУ = 0;
	ИтогПечДоходы    = 0;
	ИтогПечРасходы   = 0;
	ПечДоходыБУ      = 0;
	ПечРасходыБУ     = 0;
	ПечДоходы        = 0;
	ПечРасходы       = 0;
	
	ВыборкаОбороты = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ОборотыРаздела1ПоКварталам", Истина);
	
	Пока ВыборкаОбороты.Следующий() Цикл
		Если НомерКвартала(ВыборкаОбороты.Период) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		ИтогПечДоходыБУ  = ИтогПечДоходыБУ + ВыборкаОбороты.Графа4;
		ИтогПечРасходыБУ = ИтогПечРасходыБУ + ВыборкаОбороты.Графа6;
		ИтогПечДоходы    = ИтогПечДоходы + ВыборкаОбороты.Графа5;
		ИтогПечРасходы   = ИтогПечРасходы + ВыборкаОбороты.Графа7;
		Если НомерКвартала(ВыборкаОбороты.Период) = ТекКвартал Тогда
			ПечДоходыБУ  = ВыборкаОбороты.Графа4;
			ПечРасходыБУ = ВыборкаОбороты.Графа6;
			ПечДоходы    = ВыборкаОбороты.Графа5;
			ПечРасходы   = ВыборкаОбороты.Графа7;
		КонецЕсли;
	КонецЦикла;
	
	Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
		Секция.Параметры.ПечДоходыБУ = ПечДоходыБУ;
		Секция.Параметры.ПечРасходыБУ = ПечРасходыБУ;
	КонецЕсли;
	Секция.Параметры.ПечДоходы  = ПечДоходы;
	Секция.Параметры.ПечРасходы = ПечРасходы;
	ТабличныйДокумент.Присоединить(Секция);
	
	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итого|Основная");
		Секция.Параметры.ПечТекстИтогов = СтрШаблон(
			НСтр("ru = 'Итого за %1';
				|en = 'Total for %1'"),
			НазваниеПериодаНарастающимИтогом(ТекКвартал));
		ТабличныйДокумент.Вывести(Секция);
		
		Секция = Макет.ПолучитьОбласть(?(ПараметрыОтчета.РежимПечатиГраф4и6 = 3, "Итого|Режим3","Итого|Режим12"));
		Если ПараметрыОтчета.РежимПечатиГраф4и6 < 2 Тогда
			Секция.Параметры.ПечДоходыБУ = ИтогПечДоходыБУ;
			Секция.Параметры.ПечРасходыБУ = ИтогПечРасходыБУ;
		КонецЕсли;
		Секция.Параметры.ПечДоходы = ИтогПечДоходы;
		Секция.Параметры.ПечРасходы = ИтогПечРасходы;
		ТабличныйДокумент.Присоединить(Секция);
	КонецЕсли;
	
	Если ТекКвартал <> ПоследнийКварталПериода Тогда
		
		УстановитьШиринуКолонкиСодержание(ПараметрыОтчета, Макет, ТабличныйДокумент);
		
		ТабличныйДокумент.ТолькоПросмотр = Истина;
		ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(6,,6,);
		
		ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент,
			СтрШаблон(НСтр("ru = 'Раздел I. Доходы и расходы за %1 кв.';
							|en = 'Section I. Income and expenses for Q%1'"), ТекКвартал));
		
		ТабличныйДокумент = Новый ТабличныйДокумент;
		ТабличныйДокумент.ОриентацияСтраницы  = ОриентацияСтраницы.Портрет;
		ТабличныйДокумент.Автомасштаб         = Истина;
		ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_Раздел1";
		
		ВывестиШапкуРаздела1(ПараметрыОтчета, ТабличныйДокумент, Макет);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиУменьшенияНалогаЗаКвартал(ПараметрыОтчета, ТекКвартал, ПоследнийКварталПериода, Макет, ТабличныйДокумент)
	
	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = СтрШаблон(
		НСтр("ru = 'Итого за %1 квартал';
			|en = 'Total for %1 quarter'"),
		СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь));
	
	ТекущийКвартал    = ПараметрыКвартала();
	НарастающимИтогом = ПараметрыКвартала();
	
	ВыборкаИтоги = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ОборотыРазделаУменьшенияНалогаПоКварталам", Истина);
	
	Пока ВыборкаИтоги.Следующий() Цикл
	
		Если НомерКвартала(ВыборкаИтоги.Квартал) > ТекКвартал Тогда
			Прервать;
		КонецЕсли;
		НарастающимИтогом.ПФР        = НарастающимИтогом.ПФР + ВыборкаИтоги.ПФР;
		НарастающимИтогом.ФСС        = НарастающимИтогом.ФСС + ВыборкаИтоги.ФСС;
		НарастающимИтогом.ФОМС       = НарастающимИтогом.ФОМС + ВыборкаИтоги.ФОМС;
		НарастающимИтогом.ФСС_НС     = НарастающимИтогом.ФСС_НС + ВыборкаИтоги.ФСС_НС;
		НарастающимИтогом.Больничные = НарастающимИтогом.Больничные + ВыборкаИтоги.Больничные;
		НарастающимИтогом.Дстрах     = НарастающимИтогом.Дстрах + ВыборкаИтоги.Дстрах;
		
		НарастающимИтогом.ИтогоВзносов = НарастающимИтогом.ИтогоВзносов
			+ ВыборкаИтоги.ПФР + ВыборкаИтоги.ФСС
			+ ВыборкаИтоги.ФОМС + ВыборкаИтоги.ФСС_НС
			+ ВыборкаИтоги.Больничные + ВыборкаИтоги.Дстрах;
		
		Если НомерКвартала(ВыборкаИтоги.Квартал) = ТекКвартал Тогда
			ЗаполнитьЗначенияСвойств(ТекущийКвартал, ВыборкаИтоги);
			ТекущийКвартал.ИтогоВзносов = ВыборкаИтоги.ПФР + ВыборкаИтоги.ФСС
			+ ВыборкаИтоги.ФОМС + ВыборкаИтоги.ФСС_НС
			+ ВыборкаИтоги.Больничные + ВыборкаИтоги.Дстрах;
		КонецЕсли;
	КонецЦикла;
	
	Секция.Параметры.Заполнить(ТекущийКвартал);
	ТабличныйДокумент.Вывести(Секция);

	Если ТекКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = СтрШаблон(
			НСтр("ru = 'Итого за %1';
				|en = 'Total for %1'"),
			НазваниеПериодаНарастающимИтогом(ТекКвартал));
		Секция.Параметры.Заполнить(НарастающимИтогом);
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиУплаченныйТорговыйСборЗаКвартал(ПараметрыОтчета, ТекущийКвартал, Макет, ТабличныйДокумент)

	Секция = Макет.ПолучитьОбласть("Итог");
	РимскоеЧисло = ТекущийКвартал;
	Секция.Параметры.ПредставлениеПериодаИтогов = СтрШаблон(
		НСтр("ru = 'Итого за %1 квартал';
			|en = 'Total for %1 quarter'"),
		СтроковыеФункцииКлиентСервер.ПреобразоватьЧислоВРимскуюНотацию(РимскоеЧисло, Ложь));
		
	УплаченныйСборЗаКвартал         = 0;
	УплаченныйСборНарастающимИтогом = 0;
	
	ВыборкаИтоги = ПолучитьВыборкуДанных(ПараметрыОтчета.ДанныеОтчета, "ОборотыРазделаТорговогоСбораПоКварталам", Истина);
	
	Пока ВыборкаИтоги.Следующий() Цикл
	
		Если НомерКвартала(ВыборкаИтоги.Квартал) > ТекущийКвартал Тогда
			Прервать;
		КонецЕсли;
		
		УплаченныйСборНарастающимИтогом = УплаченныйСборНарастающимИтогом + ВыборкаИтоги.СуммаТорговогоСбора;
		
		Если НомерКвартала(ВыборкаИтоги.Квартал) = ТекущийКвартал Тогда
			УплаченныйСборЗаКвартал = УплаченныйСборЗаКвартал + ВыборкаИтоги.СуммаТорговогоСбора;
		КонецЕсли;
	КонецЦикла;
	
	Секция.Параметры.СуммаТорговогоСбора = УплаченныйСборЗаКвартал;
	ТабличныйДокумент.Вывести(Секция);
	
	Если ТекущийКвартал <> 1 Тогда
		Секция = Макет.ПолучитьОбласть("Итог");
		Секция.Параметры.ПредставлениеПериодаИтогов = СтрШаблон(
			НСтр("ru = 'Итого за %1';
				|en = 'Total for %1'"),
			НазваниеПериодаНарастающимИтогом(ТекущийКвартал));
		Секция.Параметры.СуммаТорговогоСбора = УплаченныйСборНарастающимИтогом;
		ТабличныйДокумент.Вывести(Секция);
	КонецЕсли;

КонецПроцедуры

Процедура УстановитьШиринуКолонкиСодержание(ПараметрыОтчета, Макет, ТабличныйДокумент)

	// Если графы 4 и 6 скрыты - можно за их счет расширить Содержание
	Если ПараметрыОтчета.РежимПечатиГраф4и6 = 3 Тогда
		
		ШиринаСодержания = Макет.Область(,4,,4).ШиринаКолонки;
		ШиринаГраф4и6 = ШиринаОбласти(Макет.ПолучитьОбласть("Шапка|Режим12"))
			- ШиринаОбласти(Макет.ПолучитьОбласть("Шапка|Режим3"));
			
		ТабличныйДокумент.Область(,4,,4).ШиринаКолонки = ШиринаСодержания + ШиринаГраф4и6;
		
		// Заголовок раздела нужно сдвинуть в центр
		ТабличныйДокумент.Область(2,2,2,2).Отступ = 20;
		
	КонецЕсли;

КонецПроцедуры

// Возвращает суммарную ширину всех колонок переданного табличного документа
// в так называемых средних символах шрифта
// (см. также описание свойства ШиринаКолонки объекта ОбластьЯчеекТабличногоДокумента).
//
Функция ШиринаОбласти(ТабличныйДокумент)
	
	Если ТипЗнч(ТабличныйДокумент) <> Тип("ТабличныйДокумент")
		Или ТабличныйДокумент.ШиринаТаблицы = 0 Тогда
		Возврат 0;
	КонецЕсли;
	
	Ширина = 0;
	
	Индекс = 0;
	Для Индекс = 1 По ТабличныйДокумент.ШиринаТаблицы Цикл
		Ширина = Ширина + ТабличныйДокумент.Область(,Индекс,,Индекс).ШиринаКолонки;
	КонецЦикла;
	
	Возврат Ширина;
	
КонецФункции

Функция ВыделятьНДС(ПараметрыОтчета)
	
	Возврат ПараметрыОтчета.ПрименяетсяУСНДоходыМинусРасходы
		И ПараметрыОтчета.РасходыНаНДСПоОплатеПоставщику;
	
КонецФункции

Функция НомерКвартала(ДатаВКвартале)
	
	Возврат Цел(Месяц(КонецКвартала(ДатаВКвартале))/3);
	
КонецФункции

Функция КварталЗаписи(ПериодЗаписи, ПараметрыОтчета)
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен И ПериодЗаписи < НачалоГода(ПараметрыОтчета.КонецПериода) Тогда
		// Записи месяца регистрации (декабря) в случае расширенного налогового периода
		// отражаются в КУДиР первым кварталом следующего года.
		Возврат 1;
	Иначе
		Возврат НомерКвартала(ПериодЗаписи);
	КонецЕсли;
	
КонецФункции

Функция ЗаголовокПериодНарастающимИтогом(Период)
	
	Возврат СтрШаблон(НСтр("ru = 'за %1';
							|en = 'for %1'"),
		ПредставлениеПериода(НачалоГода(Период), КонецКвартала(Период), "ФП = Истина"));
	
КонецФункции

Функция НазваниеПериодаНарастающимИтогом(НомерКвартала)

	ПредставлениеПериода = "";
	
	Если НомерКвартала = 2 Тогда
		ПредставлениеПериода = НСтр("ru = 'полугодие';
									|en = 'half-year'");
	ИначеЕсли НомерКвартала = 3 Тогда
		ПредставлениеПериода = НСтр("ru = '9 месяцев';
									|en = '9 months'");
	ИначеЕсли НомерКвартала = 4 Тогда
		ПредставлениеПериода = НСтр("ru = 'год';
									|en = 'year'");
	КонецЕсли;
	
	Возврат ПредставлениеПериода;

КонецФункции

Функция ПолучитьВыборкуДанных(ДанныеОтчета, ИмяРезультатаЗапроса, Сохранять = Ложь)
	
	Если Не ДанныеОтчета.Свойство(ИмяРезультатаЗапроса) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверное имя таблицы результата запроса: %1';
				|en = 'Incorrect name of request result table: %1'"),
			ИмяРезультатаЗапроса);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Выборка = Неопределено;
	
	Если ДанныеОтчета.Свойство("Выборка" + ИмяРезультатаЗапроса) Тогда // Выборка получена
		Выборка = ДанныеОтчета["Выборка" + ИмяРезультатаЗапроса];
		Выборка.Сбросить();
	ИначеЕсли ДанныеОтчета[ИмяРезультатаЗапроса] <> Неопределено Тогда // Выборка не получена, есть результат запроса
		Выборка = ДанныеОтчета[ИмяРезультатаЗапроса].Выбрать();
		Если Сохранять Тогда
			ДанныеОтчета.Вставить("Выборка" + ИмяРезультатаЗапроса, Выборка);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Выборка;
	
КонецФункции

Функция ПолучитьТаблицуДанных(ДанныеОтчета, ИмяРезультатаЗапроса, Сохранять = Ложь)
	
	Если Не ДанныеОтчета.Свойство(ИмяРезультатаЗапроса) Тогда
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Неверное имя таблицы результата запроса: %1';
				|en = 'Incorrect name of request result table: %1'"),
			ИмяРезультатаЗапроса);
		ВызватьИсключение ТекстСообщения;
	КонецЕсли;
	
	Таблица = Неопределено;
	
	Если ДанныеОтчета.Свойство("Таблица" + ИмяРезультатаЗапроса) Тогда // Таблица получена
		Таблица = ДанныеОтчета["Таблица" + ИмяРезультатаЗапроса];
	ИначеЕсли ДанныеОтчета[ИмяРезультатаЗапроса] <> Неопределено Тогда // Таблица не получена, есть результат запроса
		Таблица = ДанныеОтчета[ИмяРезультатаЗапроса].Выгрузить();
		Если Сохранять Тогда
			ДанныеОтчета.Вставить("Таблица" + ИмяРезультатаЗапроса, Таблица);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Таблица;
	
КонецФункции

Функция ПодготовитьДанныеОтчета(ПараметрыОтчета)
	
	ДанныеОтчета = Новый Структура;
	
	НомераТаблиц = Новый Структура;
	
	Запрос = Новый Запрос;
	
	НачалоНалоговогоПериода = ПараметрыОтчета.НачалоНалоговогоПериода;
	
	Если НачалоКвартала(ПараметрыОтчета.НачалоПериода) = НачалоГода(ПараметрыОтчета.КонецПериода) Тогда
		НачалоПериодаОтчета = НачалоНалоговогоПериода;
	Иначе
		НачалоПериодаОтчета = НачалоКвартала(ПараметрыОтчета.НачалоПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода",            НачалоПериодаОтчета);
	Запрос.УстановитьПараметр("КонецПериода",             КонецКвартала(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация",              ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода",  НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("КонецГода",                КонецГода(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("КонецПредыдущегоКвартала", НачалоКвартала(ПараметрыОтчета.КонецПериода) - 1);
	Запрос.УстановитьПараметр("НалоговыйПериодРасширен",  ПараметрыОтчета.НалоговыйПериодРасширен);
	
	// Данные Раздела 2 рассчитываются ежеквартально, но в случае прекращения применения УСН (Д-Р),
	// записи за выбранный квартал могут отсутствовать.
	// В таком случае получаем данные раздела 2 посчитанные за квартал, предшествующий дате перехода.
	Если ЗначениеЗаполнено(ПараметрыОтчета.ДатаПрекращенияПримененияУСНДоходыМинусРасходы) Тогда
		Запрос.УстановитьПараметр("НачалоКварталаОтчета", 
			НачалоКвартала(ДобавитьМесяц(ПараметрыОтчета.ДатаПрекращенияПримененияУСНДоходыМинусРасходы, -3)));
	Иначе
		Запрос.УстановитьПараметр("НачалоКварталаОтчета", НачалоКвартала(ПараметрыОтчета.КонецПериода));
	КонецЕсли;
	
	ВыделятьНДС = ВыделятьНДС(ПараметрыОтчета);
	
	Запрос.УстановитьПараметр("СчетчикСтрокНДС",
		?(НЕ ВыделятьНДС И ПараметрыОтчета.РежимПечатиНДС = 2, 1, 0));
		
	МассивТекстовЗапроса = Новый Массив;
	МассивТекстовЗапроса.Добавить(ТекстЗапросаБанковскиеСчета(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПодсчетСтрокРаздела1ДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПодсчетСтрокРазделаУменьшенияНалогаДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаПодсчетСтрокРазделаТорговогоСбораДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаОборотыРаздела1ПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаОборотыРазделаУменьшенияНалогаПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаОборотыРазделаТорговогоСбораПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаЗаписиРаздел1(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаЗаписиРаздел2(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаУбыткиРаздел3(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаЗаписиРазделУменьшенияНалога(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	МассивТекстовЗапроса.Добавить(ТекстЗапросаЗаписиРазделТорговогоСбора(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета));
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса);
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	ДобавитьВременнуюТаблицуКнигиУчетаДоходовИРасходов(Запрос.МенеджерВременныхТаблиц, Запрос.Параметры);
	ДобавитьВременныеТаблицыОС(Запрос.МенеджерВременныхТаблиц, Запрос.Параметры,
		ПараметрыОтчета.ПрименяетсяУСНДоходыМинусРасходы);
	ДобавитьВременнуюТаблицуУплатыТорговогоСбора(Запрос.МенеджерВременныхТаблиц, Запрос.Параметры,
		НЕ ПараметрыОтчета.ПрименяетсяУСНДоходыМинусРасходы);
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатыЗапроса = Запрос.ВыполнитьПакет();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Для Каждого НомерТаблицы Из НомераТаблиц Цикл
		ДанныеОтчета.Вставить(НомерТаблицы.Ключ, РезультатыЗапроса[НомерТаблицы.Значение]);
	КонецЦикла;
	
	Возврат ДанныеОтчета;
	
КонецФункции

Процедура ДобавитьВременнуюТаблицуКнигиУчетаДоходовИРасходов(ВременныеТаблицы, ПараметрыЗапроса)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	МассивТекстовЗапроса = Новый Массив;
	
	#Область ДанныеПоДоходам
	// Анализируем обороты в целом для принятия решения об отражении, детальные записи берем связью с регистром.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот > 0 И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот < 0 И КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот > 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК Период,
	|	КнигаУчетаДоходовИРасходовОбороты.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот КАК Графа4,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот - КнигаУчетаДоходовИРасходовОбороты.НДСОборот КАК Графа5,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа6Оборот КАК Графа6,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот КАК Графа7,
	|	0 КАК НДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот > 0 И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот < 0 И КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот > 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК Регистратор,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот > 0 И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот < 0 И КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот > 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Содержание
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК Содержание,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот > 0 И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот < 0 И КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот > 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа5 > 0
	|					ИЛИ КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот < 0 И КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот = 0
	|						И КнигаУчетаДоходовИРасходов.Графа4 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходовОбороты.ВидРасходов КАК ВидРасходов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Графа5 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Регистратор
	|			ИНАЧЕ Неопределено
	|		КОНЕЦ) КАК СторнирующийДокумент,
	|	КОЛИЧЕСТВО(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК КоличествоЗаписей,
	|	МАКСИМУМ(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК НомерСтроки
	|ПОМЕСТИТЬ ДанныеКнигиУчетаДоходовИРасходов
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоНалоговогоПериода, &КонецПериода, Квартал, Организация = &Организация
	|		И ДокументВозникновенияДоходовРасходов <> НЕОПРЕДЕЛЕНО И ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ПустаяСсылка)
	|		И НЕ ДокументВозникновенияДоходовРасходов ССЫЛКА Документ.ЗаписьКУДИР) КАК КнигаУчетаДоходовИРасходовОбороты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|		ПО КнигаУчетаДоходовИРасходовОбороты.Организация = КнигаУчетаДоходовИРасходов.Организация
	|			И КнигаУчетаДоходовИРасходовОбороты.ДокументВозникновенияДоходовРасходов = КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов
	|			И КнигаУчетаДоходовИРасходовОбороты.ВидРасходов = КнигаУчетаДоходовИРасходов.ВидРасходов
	|			И КнигаУчетаДоходовИРасходовОбороты.Партия = КнигаУчетаДоходовИРасходов.Партия
	|			И КнигаУчетаДоходовИРасходовОбороты.Статья = КнигаУчетаДоходовИРасходов.Статья
	|			И (КнигаУчетаДоходовИРасходов.Период >= &НачалоНалоговогоПериода)
	|			И (КнигаУчетаДоходовИРасходов.Период <= &КонецПериода)
	|			И (КнигаУчетаДоходовИРасходов.Активность)
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаУчетаДоходовИРасходовОбороты.ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа4Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа5Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа6Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.Графа7Оборот,
	|	КнигаУчетаДоходовИРасходовОбороты.НДСОборот,
	|	КнигаУчетаДоходовИРасходовОбороты.ВидРасходов";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеПоРасходам
	// Запрос аналогичен предыдущему, только необходимо принимать во внимание отражение расходов нескольими записями и аналогичное сторнирование, добавляется связь с таблицей сторно.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КУДиРОбороты.Графа7Оборот > 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 >= 0
	|					ИЛИ КУДиРОбороты.Графа7Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа6 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот > 0
	|						И (КУДиРОбороты.Графа7Оборот = 0 ИЛИ КУДиРОбороты.ВидРасходов В (&ВидыРасходовСоСтатьями))
	|						И КнигаУчетаДоходовИРасходов.Графа6 > 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|		КОНЕЦ) КАК Период,
	|	КУДиРОбороты.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|	0 КАК Графа4,
	|	0 КАК Графа5,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа6 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, КнигаУчетаДоходовИРасходов.Графа6)) >= КнигаУчетаДоходовИРасходов.Графа6
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа6 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, КнигаУчетаДоходовИРасходов.Графа6)) <= КнигаУчетаДоходовИРасходов.Графа6
	|			ТОГДА КнигаУчетаДоходовИРасходов.Графа6
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа6 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0)) > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа6 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0)) < 0
	|			ТОГДА СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Графа6,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) >= КнигаУчетаДоходовИРасходов.Графа7
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) <= КнигаУчетаДоходовИРасходов.Графа7
	|			ТОГДА КнигаУчетаДоходовИРасходов.Графа7
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) < 0
	|			ТОГДА СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Графа7,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) >= КнигаУчетаДоходовИРасходов.Графа7
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) <= КнигаУчетаДоходовИРасходов.Графа7
	|			ТОГДА КнигаУчетаДоходовИРасходов.НДС
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) < 0
	|			ТОГДА СУММА(ЕСТЬNULL(ДанныеСторно.НДС, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НДС,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КУДиРОбороты.Графа7Оборот > 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 >= 0
	|					ИЛИ КУДиРОбороты.Графа7Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа6 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот > 0
	|						И (КУДиРОбороты.Графа7Оборот = 0 ИЛИ КУДиРОбороты.ВидРасходов В (&ВидыРасходовСоСтатьями))
	|						И КнигаУчетаДоходовИРасходов.Графа6 > 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК Регистратор,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КУДиРОбороты.Графа7Оборот > 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 >= 0
	|					ИЛИ КУДиРОбороты.Графа7Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа6 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот > 0
	|						И (КУДиРОбороты.Графа7Оборот = 0 ИЛИ КУДиРОбороты.ВидРасходов В (&ВидыРасходовСоСтатьями))
	|						И КнигаУчетаДоходовИРасходов.Графа6 > 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Содержание
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК Содержание,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КУДиРОбороты.Графа7Оборот > 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 >= 0
	|					ИЛИ КУДиРОбороты.Графа7Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа7 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот < 0
	|						И КнигаУчетаДоходовИРасходов.Графа6 < 0
	|					ИЛИ КУДиРОбороты.Графа6Оборот > 0
	|						И (КУДиРОбороты.Графа7Оборот = 0 ИЛИ КУДиРОбороты.ВидРасходов В (&ВидыРасходовСоСтатьями))
	|						И КнигаУчетаДоходовИРасходов.Графа6 > 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК РеквизитыПервичногоДокумента,
	|	КУДиРОбороты.ВидРасходов КАК ВидРасходов,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0
	|				ТОГДА КнигаУчетаДоходовИРасходов.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК СторнирующийДокумент,
	|	КОЛИЧЕСТВО(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК КоличествоЗаписей,
	|	МАКСИМУМ(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК НомерСтроки
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(&НачалоНалоговогоПериода, &КонецПериода,
	|		Квартал, Организация = &Организация И ДокументВозникновенияДоходовРасходов <> НЕОПРЕДЕЛЕНО
	|			И НЕ ДокументВозникновенияДоходовРасходов ССЫЛКА Документ.ЗаписьКУДиР) КАК КУДиРОбороты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|	ПО КУДиРОбороты.Организация = КнигаУчетаДоходовИРасходов.Организация
	|		И КУДиРОбороты.ДокументВозникновенияДоходовРасходов = КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов
	|		И КУДиРОбороты.ВидРасходов = КнигаУчетаДоходовИРасходов.ВидРасходов
	|		И КУДиРОбороты.Партия = КнигаУчетаДоходовИРасходов.Партия
	|		И (НАЧАЛОПЕРИОДА(КУДиРОбороты.Период, КВАРТАЛ) = НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходов.Период, КВАРТАЛ))
	|		И (КнигаУчетаДоходовИРасходов.Период >= &НачалоНалоговогоПериода)
	|		И (КнигаУчетаДоходовИРасходов.Период <= &КонецПериода)
	|		И (КнигаУчетаДоходовИРасходов.Активность)
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК ДанныеСторно
	|	ПО КнигаУчетаДоходовИРасходов.Организация = ДанныеСторно.Организация
	|		И КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов = ДанныеСторно.ДокументВозникновенияДоходовРасходов
	|		И КнигаУчетаДоходовИРасходов.ВидРасходов = ДанныеСторно.ВидРасходов
	|		И ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.ВидРасходов В (&ВидыРасходовСоСтатьями) ТОГДА КнигаУчетаДоходовИРасходов.Статья = ДанныеСторно.Статья ИНАЧЕ ИСТИНА КОНЕЦ
	|		И ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.ВидРасходов = ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.Налоги)
	|			ТОГДА КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента = ДанныеСторно.РеквизитыПервичногоДокумента ИНАЧЕ ИСТИНА КОНЕЦ
	|		И КнигаУчетаДоходовИРасходов.Партия = ДанныеСторно.Партия
	|		И (НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходов.Период, КВАРТАЛ) = НАЧАЛОПЕРИОДА(ДанныеСторно.Период, КВАРТАЛ))
	|		И (ДанныеСторно.Период >= &НачалоНалоговогоПериода)
	|		И (ДанныеСторно.Период <= КнигаУчетаДоходовИРасходов.Период
	|			ИЛИ ДанныеСторно.Графа6 < 0 И КнигаУчетаДоходовИРасходов.Графа6 >= 0 И КУДиРОбороты.Графа6Оборот >= 0
	|			ИЛИ ДанныеСторно.Графа7 < 0 И КнигаУчетаДоходовИРасходов.Графа7 >= 0 И КУДиРОбороты.Графа7Оборот >= 0
	|			ИЛИ ДанныеСторно.Графа6 > 0 И КнигаУчетаДоходовИРасходов.Графа6 < 0 И КУДиРОбороты.Графа6Оборот < 0
	|			ИЛИ ДанныеСторно.Графа7 > 0 И КнигаУчетаДоходовИРасходов.Графа7 < 0 И КУДиРОбороты.Графа7Оборот < 0)
	|		И (ДанныеСторно.Активность)
	|
	|СГРУППИРОВАТЬ ПО
	|	КУДиРОбороты.ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходов.Графа6,
	|	КнигаУчетаДоходовИРасходов.НДС,
	|	КнигаУчетаДоходовИРасходов.Графа7,
	|	КУДиРОбороты.Графа6Оборот,
	|	КУДиРОбороты.Графа7Оборот,
	|	КУДиРОбороты.НДСОборот,
	|	КУДиРОбороты.ВидРасходов,
	|	НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходов.Период, КВАРТАЛ),
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И КУДиРОбороты.Графа7Оборот > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И КУДиРОбороты.Графа7Оборот < 0
	|			ТОГДА КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И КУДиРОбороты.Графа7Оборот > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И КУДиРОбороты.Графа7Оборот < 0
	|			ТОГДА КнигаУчетаДоходовИРасходов.Содержание
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.ВидРасходов В (ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.ОС), ЗНАЧЕНИЕ(Перечисление.ВидыРасходовУСН.НМА))
	|			ТОГДА КнигаУчетаДоходовИРасходов.НомерСтроки
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ
	|ИМЕЮЩИЕ
	|	(ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа6 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, КнигаУчетаДоходовИРасходов.Графа6)) >= КнигаУчетаДоходовИРасходов.Графа6
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа6 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, КнигаУчетаДоходовИРасходов.Графа6)) <= КнигаУчетаДоходовИРасходов.Графа6
	|			ТОГДА КнигаУчетаДоходовИРасходов.Графа6
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа6 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0)) > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа6 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0)) < 0
	|			ТОГДА СУММА(ЕСТЬNULL(ДанныеСторно.Графа6, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ <> 0
	|	ИЛИ ВЫБОР
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) >= КнигаУчетаДоходовИРасходов.Графа7
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, КнигаУчетаДоходовИРасходов.Графа7)) <= КнигаУчетаДоходовИРасходов.Графа7
	|			ТОГДА КнигаУчетаДоходовИРасходов.Графа7
	|		КОГДА КнигаУчетаДоходовИРасходов.Графа7 > 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) > 0
	|			ИЛИ КнигаУчетаДоходовИРасходов.Графа7 < 0 И СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0)) < 0
	|			ТОГДА СУММА(ЕСТЬNULL(ДанныеСторно.Графа7, 0))
	|		ИНАЧЕ 0
	|	КОНЕЦ <> 0)";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ДанныеПоДоходамБезДокументовВозникновенияДоходовИЗаписиКУДиР
	// Необходимо поддержать старый механизм, когда документ возникновения для доходов не заполняелся:
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА КнигаУчетаДоходовИРасходов.Период = ДАТАВРЕМЯ(1,1,1) ТОГДА КнигаУчетаДоходовИРасходов.ДатаДокументаСторно ИНАЧЕ КнигаУчетаДоходовИРасходов.Период КОНЕЦ КАК Период,
	|	КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходов.Графа4 КАК Графа4,
	|	КнигаУчетаДоходовИРасходов.Графа5 КАК Графа5,
	|	КнигаУчетаДоходовИРасходов.Графа6 КАК Графа6,
	|	КнигаУчетаДоходовИРасходов.Графа7 КАК Графа7,
	|	КнигаУчетаДоходовИРасходов.НДС КАК НДС,
	|	КнигаУчетаДоходовИРасходов.Регистратор КАК Регистратор,
	|	КнигаУчетаДоходовИРасходов.Содержание КАК Содержание,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента КАК РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.ВидРасходов КАК ВидРасходов,
	|	КнигаУчетаДоходовИРасходов.СторнирующийДокумент КАК СторнирующийДокумент,
	|	КнигаУчетаДоходовИРасходов.КоличествоЗаписей КАК КоличествоЗаписей,
	|	КнигаУчетаДоходовИРасходов.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	(ВЫБРАТЬ
	|		МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ЗаписьКУДиР
	|				ТОГДА ДАТАВРЕМЯ(1,1,1)
	|			ИНАЧЕ КнигаУчетаДоходовИРасходов.Период
	|		КОНЕЦ) КАК Период,
	|		МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ЗаписьКУДиР
	|					И НЕ КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов ССЫЛКА Документ.ЗаписьКУДиР
	|				ТОГДА НЕОПРЕДЕЛЕНО
	|			ИНАЧЕ КнигаУчетаДоходовИРасходов.Регистратор
	|		КОНЕЦ) КАК Регистратор,
	|		ВЫБОР КОГДА СУММА(КнигаУчетаДоходовИРасходов.Графа7) = 0 ИЛИ СУММА(КнигаУчетаДоходовИРасходов.Графа6) = 0
	|			ТОГДА 0
	|			КОГДА СУММА(КнигаУчетаДоходовИРасходов.РасходЕНВД) <> 0
	|			ТОГДА СУММА(КнигаУчетаДоходовИРасходов.НДС) * СУММА(КнигаУчетаДоходовИРасходов.Графа7) / СУММА(КнигаУчетаДоходовИРасходов.Графа6)
	|			ИНАЧЕ СУММА(КнигаУчетаДоходовИРасходов.НДС)
	|		КОНЕЦ КАК НДС,
	|		КнигаУчетаДоходовИРасходов.Содержание КАК Содержание,
	|		КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента КАК РеквизитыПервичногоДокумента,
	|		КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	|		КнигаУчетаДоходовИРасходов.ВидРасходов КАК ВидРасходов,
	|		СУММА(КнигаУчетаДоходовИРасходов.Графа4) КАК Графа4,
	|		СУММА(КнигаУчетаДоходовИРасходов.Графа5) КАК Графа5,
	|		СУММА(КнигаУчетаДоходовИРасходов.Графа6) КАК Графа6,
	|		СУММА(КнигаУчетаДоходовИРасходов.Графа7) КАК Графа7,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Графа5 < 0
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер
	|					И НЕ КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ЗаписьКУДиР
	|				ТОГДА КнигаУчетаДоходовИРасходов.Период
	|			ИНАЧЕ ДАТАВРЕМЯ(1,1,1)
	|		КОНЕЦ) КАК ДатаДокументаСторно,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА КнигаУчетаДоходовИРасходов.Регистратор ССЫЛКА Документ.ЗаписьКУДиР
	|					И НЕ КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов ССЫЛКА Документ.ЗаписьКУДиР
	|				ТОГДА КнигаУчетаДоходовИРасходов.Регистратор
	|			ИНАЧЕ НЕОПРЕДЕЛЕНО
	|		КОНЕЦ) КАК СторнирующийДокумент,
	|	МАКСИМУМ(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК НомерСтроки,
	|	КОЛИЧЕСТВО(КнигаУчетаДоходовИРасходов.НомерСтроки) КАК КоличествоЗаписей
	|	ИЗ
	|		РегистрНакопления.КнигаУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Организация = &Организация
	|	И (КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов = НЕОПРЕДЕЛЕНО
	|		ИЛИ КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов ССЫЛКА Документ.ЗаписьКУДИР)
	|	И КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходов.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходов.ВидРасходов,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.Содержание
	|
	|ИМЕЮЩИЕ
	|	(СУММА(КнигаУчетаДоходовИРасходов.Графа4) <> 0
	|		ИЛИ СУММА(КнигаУчетаДоходовИРасходов.Графа5) <> 0
	|		ИЛИ СУММА(КнигаУчетаДоходовИРасходов.Графа6) <> 0
	|		ИЛИ СУММА(КнигаУчетаДоходовИРасходов.Графа7) <> 0)) КАК КнигаУчетаДоходовИРасходов";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыЗапроса.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыЗапроса.КонецПериода);
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода", ПараметрыЗапроса.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("ВидыРасходовСоСтатьями", Перечисления.ВидыРасходовУСН.ВидыРасходовПрочие());
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДобавитьВременныеТаблицыОС(ВременныеТаблицы, ПараметрыЗапроса, ПрименяетсяУСНДоходыМинусРасходы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Если ПрименяетсяУСНДоходыМинусРасходы Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПараметрыНачисленияЗемельногоНалогаСрезПоследних.Организация КАК Организация,
		|	ПараметрыНачисленияЗемельногоНалогаСрезПоследних.ОсновноеСредство КАК ОсновноеСредство,
		|	ПараметрыНачисленияЗемельногоНалогаСрезПоследних.Период КАК ДатаРегистрации
		|ПОМЕСТИТЬ ДанныеРегистрацииОС
		|ИЗ
		|	РегистрСведений.ПараметрыНачисленияЗемельногоНалога.СрезПоследних(
		|		&КонецПериода,
		|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|			И Организация = &Организация) КАК ПараметрыНачисленияЗемельногоНалогаСрезПоследних
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ПараметрыНачисленияТранспортногоНалога.Организация,
		|	ПараметрыНачисленияТранспортногоНалога.ОсновноеСредство,
		|	ПараметрыНачисленияТранспортногоНалога.Период
		|ИЗ
		|	РегистрСведений.ПараметрыНачисленияТранспортногоНалога.СрезПоследних(
		|		&КонецПериода, 
		|		ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
		|			И Организация = &Организация) КАК ПараметрыНачисленияТранспортногоНалога
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	ОсновноеСредство";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ОсновноеСредство,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаРегистрации
		|ПОМЕСТИТЬ ДанныеРегистрацииОС
		|ГДЕ ЛОЖЬ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Организация,
		|	НЕОПРЕДЕЛЕНО КАК ОсновноеСредство,
		|	"""" КАК ИнвентарныйНомер
		|ПОМЕСТИТЬ ИнвентарныеНомераОС
		|ГДЕ ЛОЖЬ";
	КонецЕсли;
		
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыЗапроса.КонецПериода);
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура ДобавитьВременнуюТаблицуУплатыТорговогоСбора(ВременныеТаблицы, ПараметрыЗапроса, ПрименяетсяУСНДоходы)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	Если ПрименяетсяУСНДоходы Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ТаблицаОплатыТорговогоСбора.Регистратор,
		|	ТаблицаОплатыТорговогоСбора.ДатаНомер КАК РеквизитыПервичногоДокумента,
		|	ТаблицаОплатыТорговогоСбора.Период,
		|	ТаблицаОплатыТорговогоСбора.ПериодНачисления,
		|	ТаблицаОплатыТорговогоСбора.ДатаДокумента,
		|	ТаблицаОплатыТорговогоСбора.НомерДокумента,
		|	СУММА(ТаблицаОплатыТорговогоСбора.СуммаТорговогоСбора) КАК СуммаТорговогоСбора
		|ПОМЕСТИТЬ КнигаУчетаДоходовИРасходовРаздел5
		|ИЗ
		|	(ВЫБРАТЬ
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка КАК Регистратор,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.ДатаНомер КАК ДатаНомер,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Дата КАК Период,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.ПериодНачисления КАК ПериодНачисления,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Дата КАК ДатаДокумента,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Номер КАК НомерДокумента,
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.СуммаТорговогоСбора КАК СуммаТорговогоСбора
		|	ИЗ
		|		Документ.ЗаписьКУДиР.УплаченныйТорговыйСбор КАК ЗаписьКУДиРУплаченныйТорговыйСбор
		|	ГДЕ
		|		ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Организация = &Организация
		|		И ЗаписьКУДиРУплаченныйТорговыйСбор.Ссылка.Проведен
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДвиженияДенежныеСредстваДоходыРасходы.Регистратор,
		|		"""",
		|		ДвиженияДенежныеСредстваДоходыРасходы.Период,
		|		ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходы.Регистратор КАК Документ.СписаниеБезналичныхДенежныхСредств).ПоказательПериода, ДАТАВРЕМЯ(1, 1, 1)),
		|		ВЫБОР
		|			КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА ДанныеПервичныхДокументов.Дата
		|			КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА ДанныеПервичныхДокументов.ДатаРегистратора
		|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходы.Регистратор КАК Документ.СписаниеБезналичныхДенежныхСредств).Дата, ДАТАВРЕМЯ(1, 1, 1)) КОНЕЦ,
		|		ВЫБОР
		|			КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА ДанныеПервичныхДокументов.Номер
		|			КОГДА ЕСТЬNULL(ДанныеПервичныхДокументов.НомерРегистратора, ДАТАВРЕМЯ(1, 1, 1)) <> ДАТАВРЕМЯ(1, 1, 1) ТОГДА ДанныеПервичныхДокументов.НомерРегистратора
		|			ИНАЧЕ ЕСТЬNULL(ВЫРАЗИТЬ(ДвиженияДенежныеСредстваДоходыРасходы.Регистратор КАК Документ.СписаниеБезналичныхДенежныхСредств).Номер, ДАТАВРЕМЯ(1, 1, 1)) КОНЕЦ,
		|		ДвиженияДенежныеСредстваДоходыРасходы.СуммаРегл
		|	ИЗ
		|		РегистрНакопления.ДвиженияДенежныеСредстваДоходыРасходы КАК ДвиженияДенежныеСредстваДоходыРасходы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
		|		ПО ДвиженияДенежныеСредстваДоходыРасходы.Регистратор = ДанныеПервичныхДокументов.Документ
		|			И ДвиженияДенежныеСредстваДоходыРасходы.Организация = ДанныеПервичныхДокументов.Организация
		|	ГДЕ
		|		ДвиженияДенежныеСредстваДоходыРасходы.Организация = &Организация
		|		И ДвиженияДенежныеСредстваДоходыРасходы.Активность
		|		И ДвиженияДенежныеСредстваДоходыРасходы.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПеречислениеВБюджет)
		|		И ДвиженияДенежныеСредстваДоходыРасходы.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Безналичные)
		|		И ДвиженияДенежныеСредстваДоходыРасходы.СтатьяДоходовРасходов = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.Налоги)
		|		И ДвиженияДенежныеСредстваДоходыРасходы.АналитикаАктивовПассивов = ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ТорговыйСбор)) КАК ТаблицаОплатыТорговогоСбора
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОплатыТорговогоСбора.Период,
		|	ТаблицаОплатыТорговогоСбора.ПериодНачисления,
		|	ТаблицаОплатыТорговогоСбора.ДатаДокумента,
		|	ТаблицаОплатыТорговогоСбора.НомерДокумента,
		|	ТаблицаОплатыТорговогоСбора.Регистратор,
		|	ТаблицаОплатыТорговогоСбора.ДатаНомер";
	Иначе
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	НЕОПРЕДЕЛЕНО КАК Регистратор,
		|	"""" КАК РеквизитыПервичногоДокумента,
		|	ДАТАВРЕМЯ(1,1,1) КАК Период,
		|	"""" КАК ПериодНачисления,
		|	ДАТАВРЕМЯ(1,1,1) КАК ДатаДокумента,
		|	"""" КАК НомерДокумента,
		|	0 КАК СуммаТорговогоСбора
		|ПОМЕСТИТЬ КнигаУчетаДоходовИРасходовРаздел5
		|ГДЕ ЛОЖЬ";
	КонецЕсли;
	
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыЗапроса.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыЗапроса.КонецПериода);	
	Запрос.УстановитьПараметр("Организация", ПараметрыЗапроса.Организация);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ТекстЗапросаБанковскиеСчета(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	НомераТаблиц.Вставить("БанковскиеСчета", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета КАК Номер,
	|	БанковскиеСчета.Банк.Наименование КАК Банк
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Организация
	|	И НЕ БанковскиеСчета.ПометкаУдаления
	|	И НЕ БанковскиеСчета.Закрыт
	|
	|ОБЪЕДИНИТЬ
	|
	|ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета,
	|	БанковскиеСчета.Банк.Наименование
	|ИЗ
	|	РегистрНакопления.ДвиженияДенежныхСредств.Обороты(&НачалоПериода, &КонецПериода, Квартал, Организация = &Организация
	|		И ДенежныеСредства ССЫЛКА Справочник.БанковскиеСчетаОрганизаций) КАК ДвиженияДенежныхСредствОбороты
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|		ПО ДвиженияДенежныхСредствОбороты.ДенежныеСредства = БанковскиеСчета.Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПодсчетСтрокРаздела1ДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если НачалоКвартала(ПараметрыОтчета.НачалоПериода) = НачалоГода(ПараметрыОтчета.НачалоПериода) Тогда
		// Не нужно подсчитывать предыдущие записи
		ДанныеОтчета.Вставить("КоличествоЗаписейРаздела1ДоНачалаОтчета", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("КоличествоЗаписейРаздела1ДоНачалаОтчета", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок,
	|	ЕСТЬNULL(СУММА(ВЫБОР
	|				КОГДА КнигаУчетаДоходовИРасходов.НДС <> 0
	|					ТОГДА &СчетчикСтрокНДС
	|				ИНАЧЕ 0
	|			КОНЕЦ), 0) КАК КоличествоСтрокНДС
	|ИЗ
	|	ДанныеКнигиУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПредыдущегоКвартала
	|	И &УсловиеНенулевыеДоходыРасходыНУ";
	
	Если ПараметрыОтчета.РежимПечатиГраф4и6 = 1 Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеНенулевыеДоходыРасходыНУ", "ИСТИНА");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса,
			"&УсловиеНенулевыеДоходыРасходыНУ",
			"(КнигаУчетаДоходовИРасходов.Графа5 <> 0 ИЛИ КнигаУчетаДоходовИРасходов.Графа7 <> 0)");
	КонецЕсли;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПодсчетСтрокРазделаУменьшенияНалогаДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования4РазделаКУДиР()
		Или ПараметрыОтчета.КонецПериода > УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		ДанныеОтчета.Вставить("КоличествоЗаписейРазделаУменьшенияНалогаДоНачалаОтчета", Неопределено);
		Возврат "";
	КонецЕсли;
	
	Если НачалоКвартала(ПараметрыОтчета.НачалоПериода) = НачалоГода(ПараметрыОтчета.НачалоПериода) Тогда
		// Не нужно подсчитывать предыдущие записи
		ДанныеОтчета.Вставить("КоличествоЗаписейРазделаУменьшенияНалогаДоНачалаОтчета", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("КоличествоЗаписейРазделаУменьшенияНалогаДоНачалаОтчета", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК КнигаУчетаДоходовИРасходовРаздел4
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецПредыдущегоКвартала
	|	И КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Проведен";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаПодсчетСтрокРазделаТорговогоСбораДоТекущегоКвартала(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.НачалоПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР()
		ИЛИ НачалоКвартала(ПараметрыОтчета.НачалоПериода) = НачалоГода(ПараметрыОтчета.НачалоПериода) Тогда
		// Не нужно подсчитывать предыдущие записи
		ДанныеОтчета.Вставить("КоличествоЗаписейРазделаТорговогоСбораДоНачалаОтчета", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("КоличествоЗаписейРазделаТорговогоСбораДоНачалаОтчета", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КОЛИЧЕСТВО(*) КАК КоличествоСтрок
	|ИЗ
	|	КнигаУчетаДоходовИРасходовРаздел5 КАК КнигаУчетаДоходовИРасходовРаздел5
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел5.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПредыдущегоКвартала";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОборотыРаздела1ПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	НомераТаблиц.Вставить("ОборотыРаздела1ПоКварталам", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(КнигаУчетаДоходовИРасходовОбороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ)
	|	КОНЕЦ КАК Период,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа4) КАК Графа4,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа5) КАК Графа5,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа6) КАК Графа6,
	|	СУММА(КнигаУчетаДоходовИРасходовОбороты.Графа7) КАК Графа7
	|ИЗ
	|	ДанныеКнигиУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходовОбороты
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовОбороты.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(КнигаУчетаДоходовИРасходовОбороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовОбороты.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОборотыРазделаУменьшенияНалогаПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.КонецПериода < Дата(2013, 1, 1) 
		Или ПараметрыОтчета.КонецПериода > УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		ДанныеОтчета.Вставить("ОборотыРазделаУменьшенияНалогаПоКварталам", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ОборотыРазделаУменьшенияНалогаПоКварталам", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СУММА(УменьшениеНалога.ПФР) КАК ПФР,
	|	СУММА(УменьшениеНалога.ФСС) КАК ФСС,
	|	СУММА(УменьшениеНалога.ФОМС) КАК ФОМС,
	|	СУММА(УменьшениеНалога.ФСС_НС) КАК ФСС_НС,
	|	СУММА(УменьшениеНалога.Больничные) КАК Больничные,
	|	СУММА(УменьшениеНалога.ДобровольноеСтрахование) КАК ДСтрах,
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(УменьшениеНалога.Ссылка.Дата) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
	|	КОНЕЦ КАК Квартал
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК УменьшениеНалога
	|ГДЕ
	|	УменьшениеНалога.Ссылка.Дата МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|	И УменьшениеНалога.Ссылка.Организация = &Организация
	|	И УменьшениеНалога.Ссылка.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(УменьшениеНалога.Ссылка.Дата) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(УменьшениеНалога.Ссылка.Дата, КВАРТАЛ)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал"
	;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаОборотыРазделаТорговогоСбораПоКварталам(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.НачалоПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР() Тогда
		ДанныеОтчета.Вставить("ОборотыРазделаТорговогоСбораПоКварталам", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ОборотыРазделаТорговогоСбораПоКварталам", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период, КВАРТАЛ)
	|	КОНЕЦ КАК Квартал,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел5Обороты.СуммаТорговогоСбора) КАК СуммаТорговогоСбора
	|ИЗ
	|	КнигаУчетаДоходовИРасходовРаздел5 КАК КнигаУчетаДоходовИРасходовРаздел5Обороты
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел5Обороты.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ВЫБОР
	|		КОГДА &НалоговыйПериодРасширен
	|				И ГОД(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период) < ГОД(&КонецПериода)
	|			ТОГДА НАЧАЛОПЕРИОДА(&КонецПериода, ГОД)
	|		ИНАЧЕ НАЧАЛОПЕРИОДА(КнигаУчетаДоходовИРасходовРаздел5Обороты.Период, КВАРТАЛ)
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Квартал"
	;
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗаписиРаздел1(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	НомераТаблиц.Вставить("ЗаписиРаздел1", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	КнигаУчетаДоходовИРасходов.Период КАК Период,
	|	КнигаУчетаДоходовИРасходов.Регистратор,
	|	КнигаУчетаДоходовИРасходов.НДС,
	|	КнигаУчетаДоходовИРасходов.Содержание,
	|	КнигаУчетаДоходовИРасходов.РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовИРасходов.ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовИРасходов.ВидРасходов,
	|	КнигаУчетаДоходовИРасходов.Графа4,
	|	КнигаУчетаДоходовИРасходов.Графа5,
	|	КнигаУчетаДоходовИРасходов.Графа6,
	|	КнигаУчетаДоходовИРасходов.Графа7,
	|	КнигаУчетаДоходовИРасходов.СторнирующийДокумент,
	|	КнигаУчетаДоходовИРасходов.НомерСтроки,
	|	КнигаУчетаДоходовИРасходов.КоличествоЗаписей
	|ИЗ
	|	ДанныеКнигиУчетаДоходовИРасходов КАК КнигаУчетаДоходовИРасходов
	|ГДЕ
	|	КнигаУчетаДоходовИРасходов.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И НЕ(КнигаУчетаДоходовИРасходов.Графа4 = 0
	|			И КнигаУчетаДоходовИРасходов.Графа5 = 0
	|			И КнигаУчетаДоходовИРасходов.Графа6 = 0
	|			И КнигаУчетаДоходовИРасходов.Графа7 = 0
	|			И КнигаУчетаДоходовИРасходов.НДС = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	НомерСтроки,
	|	ДокументВозникновенияДоходовРасходов";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗаписиРаздел2(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	НомераТаблиц.Вставить("ЗаписиРаздел2", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовРаздел2.ЭлементРасходов КАК ОсновноеСредство,
	|	КнигаУчетаДоходовИРасходовРаздел2.ДокументМодернизации КАК ДокументМодернизации,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа3_ДатаВводаВЭксплуатацию,
	|	КнигаУчетаДоходовИРасходовРаздел2.ДатаОплаты КАК ДатаОплаты,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел2.Графа5_ПервоначальнаяСтоимость) КАК Графа5_ПервоначальнаяСтоимость,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел2.Графа6_ОстаточнаяСтоимость) КАК Графа6_ОстаточнаяСтоимость,
	|	ЕСТЬNULL(ДанныеРегистрацииОС.ДатаРегистрации, ДАТАВРЕМЯ(1, 1, 1)) КАК Графа4_ГосударственнаяРегистрация,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа7_СрокПолезногоИспользования КАК Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа8_КолКварталовВОтчетномПериоде КАК Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа9_КолКварталовВНалПериоде КАК Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа10_ДоляРасходовЗаНалПериод КАК Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа11_ДоляРасходовЗаКвартал КАК Графа11_ДоляРасходовЗаКвартал,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел2.Графа12_СуммаРасходовЗаОтчетнПериод) КАК Графа12_СуммаРасходовЗаОтчетнПериод,
	|	СУММА(ВЫБОР КОГДА КнигаУчетаДоходовИРасходовРаздел2.Период < &НачалоКварталаОтчета ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовРаздел2.Графа13_СуммаРасходовЗаКвартал КОНЕЦ) КАК Графа13_СуммаРасходовЗаКвартал,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел2.Графа14_РасходыПрошлыхПериодов) КАК Графа14_РасходыПрошлыхПериодов,
	|	СУММА(КнигаУчетаДоходовИРасходовРаздел2.Графа15_ОстатокРасходов) КАК Графа15_ОстатокРасходов,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходовРаздел2.ЭлементРасходов.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
	|ИЗ
	|	РегистрНакопления.КнигаУчетаДоходовИРасходовРаздел2 КАК КнигаУчетаДоходовИРасходовРаздел2
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеРегистрацииОС КАК ДанныеРегистрацииОС
	|		ПО КнигаУчетаДоходовИРасходовРаздел2.ЭлементРасходов = ДанныеРегистрацииОС.ОсновноеСредство
	|			И КнигаУчетаДоходовИРасходовРаздел2.Организация = ДанныеРегистрацииОС.Организация
	|
	|ГДЕ
	|	((КнигаУчетаДоходовИРасходовРаздел2.Период МЕЖДУ &НачалоКварталаОтчета И &КонецПериода) ИЛИ
	|	((ВЫБОР КОГДА (КнигаУчетаДоходовИРасходовРаздел2.Графа15_ОстатокРасходов) ЕСТЬ NULL  ТОГДА 0 ИНАЧЕ КнигаУчетаДоходовИРасходовРаздел2.Графа15_ОстатокРасходов КОНЕЦ) = 0) И 
	|	(КнигаУчетаДоходовИРасходовРаздел2.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода)) И
	|	КнигаУчетаДоходовИРасходовРаздел2.Организация = &Организация И
	|	КнигаУчетаДоходовИРасходовРаздел2.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаУчетаДоходовИРасходовРаздел2.ЭлементРасходов,
	|	КнигаУчетаДоходовИРасходовРаздел2.ДокументМодернизации,
	|	КнигаУчетаДоходовИРасходовРаздел2.ДатаОплаты,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа3_ДатаВводаВЭксплуатацию,
	|	ЕСТЬNULL(ДанныеРегистрацииОС.ДатаРегистрации, ДАТАВРЕМЯ(1, 1, 1)),
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа7_СрокПолезногоИспользования,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа8_КолКварталовВОтчетномПериоде,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа9_КолКварталовВНалПериоде,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа10_ДоляРасходовЗаНалПериод,
	|	КнигаУчетаДоходовИРасходовРаздел2.Графа11_ДоляРасходовЗаКвартал,
	|	ЕСТЬNULL(КнигаУчетаДоходовИРасходовРаздел2.ЭлементРасходов.ИнвентарныйНомер, """")
	|
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ДокументМодернизации,
	|	Графа7_СрокПолезногоИспользования,
	|	Графа8_КолКварталовВОтчетномПериоде УБЫВ,
	|	Графа9_КолКварталовВНалПериоде УБЫВ,
	|	Графа10_ДоляРасходовЗаНалПериод,
	|	Графа11_ДоляРасходовЗаКвартал,
	|	ДатаОплаты";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаУбыткиРаздел3(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	НомераТаблиц.Вставить("УбыткиРаздел3", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НЕОПРЕДЕЛЕНО КАК Ссылка,
	|	0 КАК НомерСтроки,
	|	НЕОПРЕДЕЛЕНО КАК Год,
	|	0 КАК СуммаНеПеренесенныхУбытков,
	|	0 КАК УбытокОтУплатыМинимальногоНалога,
	|	ИСТИНА КАК Проведен
	|ГДЕ
	|	ЛОЖЬ
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗаписиРазделУменьшенияНалога(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования4РазделаКУДиР() 
		Или ПараметрыОтчета.КонецПериода > УчетУСНКлиентСервер.ДатаОтменыФормирования4РазделаКУДиР() Тогда
		ДанныеОтчета.Вставить("ЗаписиРазделУменьшенияНалога", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ЗаписиРазделУменьшенияНалога", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовРаздел4.ДатаНомер КАК ДатаНомер,
	|	КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Дата КАК ПериодЗаписи,
	|	КнигаУчетаДоходовИРасходовРаздел4.ПериодНачисления КАК ПериодНачисления,
	|	"""" КАК ПериодНачисленияПредставление,
	|	КнигаУчетаДоходовИРасходовРаздел4.ПФР КАК ПФР,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФСС КАК ФСС,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФОМС КАК ФОМС,
	|	КнигаУчетаДоходовИРасходовРаздел4.ФСС_НС КАК ФСС_НС,
	|	КнигаУчетаДоходовИРасходовРаздел4.Больничные КАК Больничные,
	|	КнигаУчетаДоходовИРасходовРаздел4.ДобровольноеСтрахование КАК ДСтрах
	|ИЗ
	|	Документ.ЗаписьКУДиР.УменьшениеНалога КАК КнигаУчетаДоходовИРасходовРаздел4
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Организация = &Организация
	|	И КнигаУчетаДоходовИРасходовРаздел4.Ссылка.Проведен
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодЗаписи,
	|	ПериодНачисления,
	|	КнигаУчетаДоходовИРасходовРаздел4.НомерСтроки";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаЗаписиРазделТорговогоСбора(НомераТаблиц, ДанныеОтчета, ПараметрыОтчета)
	
	Если ПараметрыОтчета.НачалоПериода < УчетУСНКлиентСервер.ДатаНачалаФормирования5РазделаКУДиР() Тогда
		ДанныеОтчета.Вставить("ЗаписиРазделТорговогоСбора", Неопределено);
		Возврат "";
	КонецЕсли;
	
	НомераТаблиц.Вставить("ЗаписиРазделТорговогоСбора", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовИРасходовРаздел5.Регистратор,
	|	КнигаУчетаДоходовИРасходовРаздел5.РеквизитыПервичногоДокумента КАК ДатаНомер,
	|	КнигаУчетаДоходовИРасходовРаздел5.Период КАК ПериодЗаписи,
	|	КнигаУчетаДоходовИРасходовРаздел5.ПериодНачисления КАК ПериодНачисления,
	|	КнигаУчетаДоходовИРасходовРаздел5.ДатаДокумента КАК ДатаДокумента,
	|	КнигаУчетаДоходовИРасходовРаздел5.НомерДокумента КАК НомерДокумента,
	|	КнигаУчетаДоходовИРасходовРаздел5.СуммаТорговогоСбора
	|ИЗ
	|	КнигаУчетаДоходовИРасходовРаздел5 КАК КнигаУчетаДоходовИРасходовРаздел5
	|ГДЕ
	|	КнигаУчетаДоходовИРасходовРаздел5.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПериодЗаписи,
	|	ПериодНачисления,
	|	Регистратор";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();

КонецФункции

Функция ПараметрыКвартала()
	
	СтруктураВозврата = Новый Структура;
	СтруктураВозврата.Вставить("ПФР", 0);
	СтруктураВозврата.Вставить("ФСС", 0);
	СтруктураВозврата.Вставить("ФОМС", 0);
	СтруктураВозврата.Вставить("ФСС_НС", 0);
	СтруктураВозврата.Вставить("Больничные", 0);
	СтруктураВозврата.Вставить("Дстрах", 0);
	СтруктураВозврата.Вставить("ИтогоВзносов", 0);
	
	Возврат СтруктураВозврата;
	
КонецФункции

Функция МакетТитульногоЛиста(Период)
	
	Если Период >= Дата("20240101") Тогда
		Макет = ПолучитьМакет("ТитульныйЛист_178н");
	ИначеЕсли Период >= Дата("20130101") Тогда
		Макет = ПолучитьМакет("ТитульныйЛист_135н");
		Макет.Параметры.РедакцияПриказаМинфина = РедакцияПриказаМинфина135н(Период);
	Иначе
		Макет = ПолучитьМакет("ТитульныйЛист_154н");
	КонецЕсли;
	
	Возврат Макет;
	
КонецФункции

Функция МакетРаздела2(Период)
	
	Если Период >= Дата("20240101") Тогда
		Макет = ПолучитьМакет("Раздел2_178н");
	ИначеЕсли Период >= Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел2_135н");
	Иначе
		Макет = ПолучитьМакет("Раздел2_154н");
	КонецЕсли;
	
	Возврат Макет;
	
КонецФункции

Функция МакетРаздела3(Период)
	
	Если Период >= Дата("20240101") Тогда
		Макет = ПолучитьМакет("Раздел3_178н");
	ИначеЕсли Период >= Дата("20130101") Тогда
		Макет = ПолучитьМакет("Раздел3_135н");
		Макет.Параметры.ЗаПериод = ЗаголовокПериодНарастающимИтогом(Период);
	Иначе
		Макет = ПолучитьМакет("Раздел3_154н");
		Макет.Параметры.ЗаПериод = ЗаголовокПериодНарастающимИтогом(Период);
	КонецЕсли;
	
	Возврат Макет;
	
КонецФункции

Функция МакетРазделаТорговогоСбора(Период)
	
	Если Период >= Дата("20240101") Тогда
		Макет = ПолучитьМакет("Раздел4_178н");
	Иначе
		Макет = ПолучитьМакет("Раздел5");
	КонецЕсли;
	
	Возврат Макет;
	
КонецФункции


#КонецОбласти

#КонецЕсли