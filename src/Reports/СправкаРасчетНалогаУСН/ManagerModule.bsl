#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Процедура используется подсистемой варианты отчетов
//
Процедура НастройкиОтчета(Настройки) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		Настройки.ОписаниеВариантов.Вставить(Вариант.Имя,Вариант.Представление);
	КонецЦикла;
	
КонецПроцедуры

// См. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчета(Настройки, ОписаниеОтчета) Экспорт
	
	ВариантыНастроек = ВариантыНастроек();
	Для Каждого Вариант Из ВариантыНастроек Цикл
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.РегламентированнаяОтчетность.Подсистемы.Справки, "");
		ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, Вариант.Имя).Размещение.Вставить(
			Метаданные.Подсистемы.РегламентированныйУчет.Подсистемы.СпециальныеРежимыНалогообложения.Подсистемы.УчетПоУСН, "");
	КонецЦикла;
	
КонецПроцедуры

// Процедура используется подсистемой варианты отчетов
// 
// Возвращаемое значение:
//  Массив  из Структура
//
Функция ВариантыНастроек() Экспорт
	
	Массив = Новый Массив;
	
	Массив.Добавить(Новый Структура("Имя, Представление","РасчетНалогаУСН", "Расчет налога УСН"));
	
	Возврат Массив;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ИспользоватьПередКомпоновкойМакета", Истина);
	Результат.Вставить("ИспользоватьПослеКомпоновкиМакета",  Ложь);
	Результат.Вставить("ИспользоватьПослеВыводаРезультата",  Истина);
	Результат.Вставить("ИспользоватьДанныеРасшифровки",      Ложь);
	Результат.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	
	Возврат Результат;
	
КонецФункции

Функция ПолучитьНаборПоказателей() Экспорт
	
	НаборПоказателей = Новый Массив;
	НаборПоказателей.Добавить("БУ");
	НаборПоказателей.Добавить("НУ");
	НаборПоказателей.Добавить("ПР");
	НаборПоказателей.Добавить("ВР");
	
	Возврат НаборПоказателей;
	
КонецФункции

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета) Экспорт
	
	НачалоПериода = НачалоГода(ПараметрыОтчета.НачалоПериода);
	КонецПериода  = КонецКвартала(ПараметрыОтчета.КонецПериода);
	
	ЧастиЗаголовка = Новый Массив;
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		ЧастиЗаголовка.Добавить(
			НСтр("ru = 'Расчет торгового сбора, уменьшающего налог УСН за';
				|en = 'Calculation of the sales charge reducing STS tax for'"));
	Иначе
		ЭтоКонецГода = КонецПериода = КонецГода(КонецПериода);
		
		ЧастиЗаголовка.Добавить(НСтр("ru = 'Справка-расчет';
									|en = 'Detailed calculation'"));
		ЧастиЗаголовка.Добавить(?(ЭтоКонецГода, НСтр("ru = 'налога УСН';
													|en = 'STS tax'"), НСтр("ru = 'авансового платежа по налогу УСН';
																				|en = 'advance payment by STS tax'")));
		ЧастиЗаголовка.Добавить(НСтр("ru = 'за';
									|en = 'for'"));
	КонецЕсли;
	
	ЧастиЗаголовка.Добавить(
		БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(НачалоПериода, КонецПериода, Истина));
	
	ТекстЗаголовка = СтрСоединить(ЧастиЗаголовка, " ");
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен Тогда
		СправкиРасчеты.ДополнитьСловоСсылкойНаПримечание(ТекстЗаголовка);
	КонецЕсли;
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		СправкиРасчеты.ДополнитьСловоСсылкойНаПримечание(ТекстЗаголовка);
	КонецЕсли;
	
	Возврат ТекстЗаголовка;
	
КонецФункции

Процедура ПриВыводеЗаголовка(ПараметрыОтчета, КомпоновщикНастроек, Результат) Экспорт
	
	Макет = ПолучитьОбщийМакет("ОбщиеОбластиСтандартногоОтчета");
	ОбластьЗаголовок        = Макет.ПолучитьОбласть("ОбластьЗаголовок");
	ОбластьОрганизация      = Макет.ПолучитьОбласть("Организация");
	
	//Организация
	ТекстОрганизация = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ПараметрыОтчета.Организация);
	ОбластьОрганизация.Параметры.НазваниеОрганизации = ТекстОрганизация;
	Результат.Вывести(ОбластьОрганизация);
	
	//Заголовок
	ОбластьЗаголовок.Параметры.ЗаголовокОтчета = "" + ПолучитьТекстЗаголовка(ПараметрыОтчета);
	Результат.Вывести(ОбластьЗаголовок);
	
	Результат.Область("R1:R" + Результат.ВысотаТаблицы).Имя = "Заголовок";
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		
		// Раздвинем заголовок
		Результат.Область("R1:R" + Результат.ВысотаТаблицы).ШиринаКолонки = 140;
		
		// Добавим отступ таблицы
		ОбластьЗаголовок.Параметры.ЗаголовокОтчета = "";
		Результат.Вывести(ОбластьЗаголовок);
		
	КонецЕсли;
	
КонецПроцедуры

// В процедуре можно доработать компоновщик перед выводом в отчет
// Изменения сохранены не будут.
Процедура ПередКомпоновкойМакета(ПараметрыОтчета, Схема, КомпоновщикНастроек) Экспорт
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.НачалоПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "НачалоПериода", НачалоКвартала(ПараметрыОтчета.НачалоПериода));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.КонецПериода) Тогда
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "КонецПериода", КонецКвартала(ПараметрыОтчета.КонецПериода));
		
		ПредставлениеПериода = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоГода(ПараметрыОтчета.КонецПериода), ПараметрыОтчета.КонецПериода);
		БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПредставлениеПериода", ПредставлениеПериода);
	КонецЕсли;
	
	ПредставлениеПериодаПревышения = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
		НачалоГода(ПараметрыОтчета.ПериодПревышенияЛимитов),
		НачалоКвартала(ПараметрыОтчета.ПериодПревышенияЛимитов) - 1,
		Истина);
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"НалоговаяБазаДоПревышенияПредставление",
		СтрШаблон(НСтр("ru = '3.1. Налоговая база за %1';
						|en = '3.1. Tax base in %1'"), ПредставлениеПериодаПревышения));
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"НалогДоПревышенияПредставление",
		СтрШаблон(НСтр("ru = '3.2. Налог за %1';
						|en = '3.2. Tax in %1'"), ПредставлениеПериодаПревышения));
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ПустаяДата", Дата(1, 1, 1));
	
	НачалоНалоговогоПериода = ИнтерфейсыВзаимодействияБРО.НачалоНалоговогоПериода(
		ПараметрыОтчета.Организация,
		ПараметрыОтчета.КонецПериода,
		Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре, , ,
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыОтчета.Организация, "ДатаРегистрации"));
	
	КонецПервогоОтчетногоПериода =
		КонецКвартала(Макс(НачалоГода(ПараметрыОтчета.НачалоПериода), НачалоНалоговогоПериода));
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(КомпоновщикНастроек,
		"КонецПервогоОтчетногоПериода", КонецПервогоОтчетногоПериода);
	
	ПовышеннаяСтавкаСПервогоОтчетногоПериода =
		(КонецКвартала(ПараметрыОтчета.ПериодПревышенияЛимитов) = КонецПервогоОтчетногоПериода);
	
	// Заполняем параметры с примечаниями.
	НомерПримечания = 0;
	Если ПараметрыОтчета.НалоговыйПериодРасширен Тогда
		НомерПримечания = НомерПримечания + 1;
	КонецЕсли;
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		НомерПримечания = НомерПримечания + 1;
	КонецЕсли;
	
	// Заголовок поля "Налоговая ставка"
	НалоговаяСтавкаЗаголовок = НСтр("ru = '2. Налоговая ставка';
									|en = '2. Tax rate'") + " ";
	Если ПараметрыОтчета.ПрименяетсяПовышеннаяСтавкаНалога Тогда
		НомерПримечания = НомерПримечания + 1;
		СправкиРасчеты.ДополнитьСловоСсылкойНаПримечание(НалоговаяСтавкаЗаголовок, НомерПримечания);
	КонецЕсли;
	
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек, "НалоговаяСтавкаЗаголовок", НалоговаяСтавкаЗаголовок);
	
	// Заголовок таблицы "Расчет торгового сбора".
	ВычитаемыйТорговыйСборЗаголовок = СтрШаблон(
		НСтр("ru = 'Приложение. Расчет суммы торгового сбора, уменьшающей налог%1';
			|en = 'Annex. Calculation of sales charge amount reducing the tax%1'"), ПредставлениеПериода);
	
	НомерПримечания = НомерПримечания + 1;
	
	СправкиРасчеты.ДополнитьСловоСсылкойНаПримечание(ВычитаемыйТорговыйСборЗаголовок, НомерПримечания);
	БухгалтерскиеОтчетыКлиентСервер.УстановитьПараметр(
		КомпоновщикНастроек, "ВычитаемыйТорговыйСборЗаголовок", ВычитаемыйТорговыйСборЗаголовок);
	
	БухгалтерскиеОтчетыВызовСервера.ДобавитьОтборПоОрганизации(ПараметрыОтчета, КомпоновщикНастроек);
	
	ПараметрыОтчета.ПоказательНУ = Истина;
	
	ОтображатьТорговыйСбор = ПараметрыОтчета.УменьшатьНалогНаТорговыйСбор;
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетНалогаУСН" Тогда
	
		ИмяГруппировки = ?(ПараметрыОтчета.ОбъектНалогообложения = Перечисления.ОбъектыНалогообложенияПоУСН.Доходы,
			"Доходы", "ДоходыМинусРасходы");
		Если ОтображатьТорговыйСбор Тогда
			ИмяГруппировки = ИмяГруппировки + "ПлательщикТорговогоСбора";
		КонецЕсли;
		
		Если ПараметрыОтчета.ПрименяетсяПовышеннаяСтавкаНалога И Не ПовышеннаяСтавкаСПервогоОтчетногоПериода Тогда
			ИмяГруппировки = СтрШаблон("%1ПовышеннаяСтавка", ИмяГруппировки);
		КонецЕсли;
		
		ГруппировкаОбъектНалогообложения = НайтиПоИмени(
			КомпоновщикНастроек.Настройки.Структура, СтрШаблон("Объект%1", ИмяГруппировки));
		
		ГруппировкаОбъектНалогообложения.Использование = Истина;
		
	КонецЕсли;
	
	// Для плательщика торгового сбора на УСН-доходы выведем расчет суммы вычитаемого из налога сбора
	Если ОтображатьТорговыйСбор Или ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		
		// Заголовок таблицы
		ГруппировкаВычитаемыйСборЗаголовок = НайтиПоИмени(
			КомпоновщикНастроек.Настройки.Структура, "ВычитаемыйТорговыйСборЗаголовок");
		
		ГруппировкаВычитаемыйСборЗаголовок.Использование = (ПараметрыОтчета.КлючТекущегоВарианта = "РасчетНалогаУСН");
		
		Если ПараметрыОтчета.ПрименяетсяПовышеннаяСтавкаНалога И Не ПовышеннаяСтавкаСПервогоОтчетногоПериода Тогда
			ИмяГруппировки = "ВычитаемыйТорговыйСборПовышеннаяСтавка";
		Иначе
			ИмяГруппировки = "ВычитаемыйТорговыйСбор";
		КонецЕсли;
		
		ГруппировкаВычитаемыйСбор = НайтиПоИмени(КомпоновщикНастроек.Настройки.Структура, ИмяГруппировки);
		
		ГруппировкаВычитаемыйСбор.Использование = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ПослеВыводаРезультата(ПараметрыОтчета, Результат) Экспорт
	
	БухгалтерскиеОтчетыВызовСервера.ОбработкаРезультатаОтчета(ПараметрыОтчета.ИдентификаторОтчета, Результат);
	
	// Добавим примечания, если требуются.
	СчетчикПримечаний = 0;
	
	Если ПараметрыОтчета.НалоговыйПериодРасширен Тогда
		
		СправкиРасчеты.ДобавитьПримечание(
			Результат,
			ПояснениеРасширенныйНалоговыйПериод(ПараметрыОтчета.ДатаНачалаДеятельности, ПараметрыОтчета.КонецПериода),
			СчетчикПримечаний);
		
	КонецЕсли;
	
	Если ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		
		СправкиРасчеты.ДобавитьПримечание(Результат, ПояснениеУменьшениеНалогаНаТорговыйСбор(), СчетчикПримечаний);
			
	КонецЕсли;
	
	Если ПараметрыОтчета.ПрименяетсяПовышеннаяСтавкаНалога Тогда
		
		ПараметрыОтчета.Вставить("СтавкаЗаПериод", СтавкаЗаПериод(ПараметрыОтчета.Организация, ПараметрыОтчета.НачалоПериода));
		СправкиРасчеты.ДобавитьПримечание(Результат, ПояснениеПовышеннаяСтавкаНалога(ПараметрыОтчета), СчетчикПримечаний);
		
	КонецЕсли;
	
	Если ПараметрыОтчета.УменьшатьНалогНаТорговыйСбор
		И Не ПараметрыОтчета.КлючТекущегоВарианта = "РасчетТорговогоСбораУменьшающегоНалог" Тогда
		
		СправкиРасчеты.ДобавитьПримечание(Результат, ПояснениеУменьшениеНалогаНаТорговыйСбор(), СчетчикПримечаний);
		
	КонецЕсли;
	
	// Установим параметры таблицы.
	Результат.ФиксацияСверху = 0;
	Результат.ФиксацияСлева  = 0;
	
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	
КонецПроцедуры

Функция ДанныеПревышенияГраницыПримененияОсновнойСтавкиУСН(Организация, ОтчетныйПериод) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("ПрименяетсяПовышеннаяСтавкаНалога", Ложь);
	Результат.Вставить("ПериодПревышенияЛимитов", Дата(1, 1, 1));
	Результат.Вставить("ПревышенЛимитДоходов", Ложь);
	Результат.Вставить("ПревышенЛимитРаботников", Ложь);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(ОтчетныйПериод));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(ОтчетныйПериод));
	Запрос.УстановитьПараметр("КонецПериода", КонецКвартала(ОтчетныйПериод));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	РасчетНалогаУСН.Организация КАК Организация,
	|	РасчетНалогаУСН.Доходы,
	|	РасчетНалогаУСН.СредняяЧисленностьРаботников,
	|	НАЧАЛОПЕРИОДА(РасчетНалогаУСН.ПериодРасчета, КВАРТАЛ) КАК ПериодРасчета,
	|	НАЧАЛОПЕРИОДА(РасчетНалогаУСН.ПериодПревышенияЛимитов, КВАРТАЛ) КАК ПериодПревышенияЛимитов
	|ПОМЕСТИТЬ РасчетНалогаУСН
	|ИЗ
	|	РегистрСведений.РасчетНалогаУСН КАК РасчетНалогаУСН
	|ГДЕ
	|	РасчетНалогаУСН.Организация = &Организация
	|	И РасчетНалогаУСН.ПериодРасчета МЕЖДУ &НачалоГода И &КонецПериода
	|	И НЕ РасчетНалогаУСН.ДеятельностьНаТорговомСборе
	|	И РасчетНалогаУСН.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПериодРасчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетНалогаЗаТекущийПериод.Организация,
	|	РасчетНалогаЗаТекущийПериод.ПериодПревышенияЛимитов,
	|	ЕСТЬNULL(РасчетыНалогаЗаНалоговыйПериод.Доходы, 0) КАК Доходы,
	|	ЕСТЬNULL(РасчетыНалогаЗаНалоговыйПериод.СредняяЧисленностьРаботников, 0) КАК СредняяЧисленностьРаботников
	|ИЗ
	|	РасчетНалогаУСН КАК РасчетНалогаЗаТекущийПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетНалогаУСН КАК РасчетыНалогаЗаНалоговыйПериод
	|		ПО РасчетНалогаЗаТекущийПериод.Организация = РасчетыНалогаЗаНалоговыйПериод.Организация
	|		И РасчетНалогаЗаТекущийПериод.ПериодПревышенияЛимитов = РасчетыНалогаЗаНалоговыйПериод.ПериодРасчета
	|ГДЕ
	|	РасчетНалогаЗаТекущийПериод.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ГраницаДоходов =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияОсновнойСтавкиУСН(ОтчетныйПериод);
		ГраницаЧисленностиРаботников =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН(ОтчетныйПериод);
		
		Результат.ПрименяетсяПовышеннаяСтавкаНалога = ЗначениеЗаполнено(Выборка.ПериодПревышенияЛимитов);
		Результат.ПериодПревышенияЛимитов = Выборка.ПериодПревышенияЛимитов;
		Результат.ПревышенЛимитДоходов = Выборка.Доходы > ГраницаДоходов;
		Результат.ПревышенЛимитРаботников = Выборка.СредняяЧисленностьРаботников > ГраницаЧисленностиРаботников;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция НайтиПоИмени(Структура, Имя)
	Перем Группировка;
	
	Для каждого Элемент Из Структура Цикл

		Если Элемент.Имя = Имя Тогда
			Группировка = Элемент;
			Прервать;
		КонецЕсли;
		
		Если ТипЗнч(Элемент) = Тип("ТаблицаКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;

		Для каждого Поле Из Элемент.ПоляГруппировки.Элементы Цикл

			Если ТипЗнч(Поле) <> Тип("АвтоПолеГруппировкиКомпоновкиДанных")
				И Поле.Поле = Новый ПолеКомпоновкиДанных(Имя) Тогда
				Группировка = Элемент;
				Прервать;
			КонецЕсли;

		КонецЦикла;
		
		Если Группировка = Неопределено
			И Элемент.Структура.Количество() > 0 Тогда
			Группировка = НайтиПоИмени(Элемент.Структура, Имя);
		КонецЕсли;
		
		Если Группировка <> Неопределено Тогда
			Прервать;
		КонецЕсли;

	КонецЦикла;

	Возврат Группировка;
	
КонецФункции

Функция СтавкаЗаПериод(Организация, ОтчетныйПериод)
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	РасчетНалогаУСН.СтавкаНалогаУСН КАК СтавкаНалогаУСН
		|ИЗ
		|	РегистрСведений.РасчетНалогаУСН КАК РасчетНалогаУСН
		|ГДЕ
		|	РасчетНалогаУСН.Организация = &Организация
		|	И РасчетНалогаУСН.Активность
		|	И РасчетНалогаУСН.ПериодРасчета МЕЖДУ &НачалоПериода И &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода",  КонецКвартала(ОтчетныйПериод));
	Запрос.УстановитьПараметр("НачалоПериода", НачалоКвартала(ОтчетныйПериод));
	Запрос.УстановитьПараметр("Организация",   Организация);
	
	Результат = Запрос.Выполнить().Выбрать();
	
	Если Результат.Следующий() Тогда
		Возврат Результат.СтавкаНалогаУСН;
	Иначе
		Возврат 0;
	КонецЕсли;
	
КонецФункции

Функция ПояснениеРасширенныйНалоговыйПериод(ДатаРегистрации, КонецПериодаОтчета)
	
	ШаблонПояснения = НСтр("ru = '%1 рассчитывается за %2 период с даты регистрации %3 по %4 (п.2 ст. 55 НК РФ)';
							|en = '%1 is calculated for %2 period from the registration date %3 to %4 (cl.2 art. 55 of RF TC)'");
	
	ЭтоНалоговыйПериод = КонецКвартала(КонецПериодаОтчета) = КонецГода(КонецПериодаОтчета);
	
	ФорматнаяСтрокаПериода = "ДЛФ=D";
	
	Возврат СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонПояснения,
		?(ЭтоНалоговыйПериод, НСтр("ru = 'Налог';
									|en = 'Tax'"), НСтр("ru = 'Авансовый платеж';
														|en = 'Advance payment'")),
		?(ЭтоНалоговыйПериод, НСтр("ru = 'налоговый';
									|en = 'tax'"), НСтр("ru = 'отчетный';
															|en = 'reporting'")),
		Формат(ДатаРегистрации, ФорматнаяСтрокаПериода),
		Формат(КонецКвартала(КонецПериодаОтчета), ФорматнаяСтрокаПериода));
	
КонецФункции

Функция ПояснениеУменьшениеНалогаНаТорговыйСбор()
	
	Возврат НСтр("ru = 'Торговый сбор уменьшает только налог, рассчитанный по облагаемой торговым сбором деятельности (п. 8 ст. 346.21 НК РФ)';
				|en = 'The sales charge reduces only the tax calculated on the activity subject to the sales charge (clause 8 of article 346.21 of the Tax Code of the Russian Federation)'");
	
КонецФункции

Функция ПояснениеПовышеннаяСтавкаНалога(ПараметрыОтчета)
	
	НомерКвартала = Цел(Месяц(КонецКвартала(ПараметрыОтчета.ПериодПревышенияЛимитов))/3);

	ГраницаДоходов = КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаДоходовДляПримененияОсновнойСтавкиУСН(
		ПараметрыОтчета.ПериодПревышенияЛимитов);
	
	ГраницаЧисленностиРаботников =
			КонтрольПраваПримененияСпецрежимаКлиентСервер.ГраницаЧисленностиРаботниковДляПримененияОсновнойСтавкиУСН(КонецКвартала(ПараметрыОтчета.ПериодПревышенияЛимитов));
	
	ДоходыМинусРасходы = ПараметрыОтчета.ОбъектНалогообложения <> Перечисления.ОбъектыНалогообложенияПоУСН.Доходы;
	ОсновнаяСтавка = УчетУСНПСНКлиентСервер.НалоговаяСтавкаПоУмолчанию(ДоходыМинусРасходы);
	
	Если ПараметрыОтчета.ПрименяетсяПовышеннаяСтавкаНалога И ПараметрыОтчета.СтавкаЗаПериод = ОсновнаяСтавка Тогда
		Если НомерКвартала = 2 Тогда
			ПояснениеПовышеннаяСтавка = НСтр("ru = 'Во %1 квартале %2.
				|Доходы, полученные с начала %1 квартала, облагаются по ставке %3%%
				|Применяется основная ставка в связи со снижением налоговой базы в текущем периоде.';
				|en = 'In quarter %1 %2.
				|Income received since the beginning of quarter %1 is taxed at a rate of %3%%
				|Basic tax rate is applied due to the tax base reduction in the current period.'");
		Иначе
			ПояснениеПовышеннаяСтавка = НСтр("ru = 'В %1 квартале %2.
				|Доходы, полученные с начала %1 квартала, облагаются по ставке %3%%
				|Применяется основная ставка в связи со снижением налоговой базы в текущем периоде.';
				|en = 'In quarter %1 %2.
				|Income received since the beginning of quarter %1 is taxed at a rate of %3%%
				|Basic tax rate is applied due to the tax base reduction in the current period.'");
		КонецЕсли;
	Иначе
		Если НомерКвартала = 2 Тогда
			ПояснениеПовышеннаяСтавка = НСтр("ru = 'Во %1 квартале %2.
				|Доходы, полученные с начала %1 квартала, облагаются по повышенной ставке %3%%';
				|en = 'In quarter %1 of %2.
				|Income received from the beginning of the quarter %1 is taxed at an increased rate %3%%'");
		Иначе
			ПояснениеПовышеннаяСтавка = НСтр("ru = 'В %1 квартале %2.
				|Доходы, полученные с начала %1 квартала, облагаются по повышенной ставке %3%%';
				|en = 'In quarter %1 of %2.
				|Income received from the beginning of the quarter %1 is taxed at an increased rate %3%%'");
		КонецЕсли;
	КонецЕсли;
	
	Если ПараметрыОтчета.ПревышенЛимитДоходов
		И ПараметрыОтчета.ПревышенЛимитРаботников Тогда
		ПояснениеПревышенныйПоказатель = СтрШаблон(
			НСтр("ru = 'сумма доходов превысила %1 млн. рублей и средняя численность наемных работников превысила %2 человек';
				|en = 'the amount of income exceeded %1 million rubles and the average number of employees exceeded %2 people'"),
			ГраницаДоходов / 1000000, // в млн. рублей
			ГраницаЧисленностиРаботников);
	ИначеЕсли ПараметрыОтчета.ПревышенЛимитДоходов Тогда
		ПояснениеПревышенныйПоказатель =
			СтрШаблон(НСтр("ru = 'сумма доходов превысила %1 млн. рублей';
							|en = 'the amount of income exceeded %1 million rubles'"),
			ГраницаДоходов / 1000000); // в млн. рублей
	ИначеЕсли ПараметрыОтчета.ПревышенЛимитРаботников Тогда
		ПояснениеПревышенныйПоказатель = СтрШаблон(
			НСтр("ru = 'средняя численность наемных работников превысила %1 человек';
				|en = 'average number of employees exceeded %1 people'"), ГраницаЧисленностиРаботников);
	КонецЕсли;
	
	ПояснениеПовышеннаяСтавка = СтрШаблон(
		ПояснениеПовышеннаяСтавка, НомерКвартала, ПояснениеПревышенныйПоказатель, ПараметрыОтчета.СтавкаЗаПериод);
	
	Возврат ПояснениеПовышеннаяСтавка;
	
КонецФункции

#КонецОбласти

#КонецЕсли