
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	Если Параметры.Свойство("АвтоТест") Тогда // Возврат при получении формы для анализа.
		Возврат;
	КонецЕсли;

	ВосстановитьНастройки();
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	УстановитьТекстПримечания();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовФормы

&НаКлиенте
Процедура ГруппировкиПриИзменении(Элемент)
	
	УстановитьТекстПримечания();
	УправлениеФормой();

КонецПроцедуры

&НаКлиенте
Процедура МодельБюджетированияПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

&НаКлиенте
Процедура ВидПериодаПриИзменении(Элемент)
	
	ПривестиЗначениеПериода(ВидПериода);
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПериодНачалоВыбораЗавершение", ЭтотОбъект);
	
	ОбщегоНазначенияУТКлиент.ВыбратьПериодИзСписка(
				ЭтаФорма,
				Элемент,
				ВидПериода,
				НачалоПериода,
				ОписаниеОповещения);

КонецПроцедуры

&НаКлиенте
Процедура ТипОтчетаПриИзменении(Элемент)
	
	УправлениеФормой();
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СохранитьНастройкиИСформировать(Команда)

    СписокПараметров = ПолучитьТекущиеНастройки();
	СписокПараметров.Вставить("Сформировать", Истина);

    Закрыть(СписокПараметров);

КонецПроцедуры

&НаКлиенте
Процедура СохранитьНастройки(Команда)
	
	СписокПараметров = ПолучитьТекущиеНастройки();
	
    Закрыть(СписокПараметров);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьТекстПримечания()
	
	Если Группировки = "Вариант1" Тогда
		ТекстПримечания = НСтр("ru = 'В отчете отображаются все задачи, период планирования которых 
			|входит в период отчета. На диаграмму будут выведены задачи, 
			|которые начинаются до периода планирования или заканчиваются после.
			|Вариант отчета предназначен для обзора всех задач бюджетного процесса';
			|en = 'The report displays all tasks whose planning period is included
			|in the report period. Tasks starting before the planning period or ending after the planning period
			|will be displayed in the dashboard.
			|The report option is used to overview all budget process tasks'");
	Иначе
		ТекстПримечания = НСтр("ru = 'В отчете отображаются все задачи, период выполнения которых 
			|входит в период отчета.
			|Вариант отчета предназначен для контроля исполнения задач бюджетного процесса';
			|en = 'The report displays all tasks which performance period
			|is included in the report period.
			|The report option is used to control execution of the budget process tasks'");
	КонецЕсли;
	
	Элементы.ПримечаниеКВариантуОтчета.Заголовок = ТекстПримечания;
	
КонецПроцедуры

&НаСервере
Процедура ВосстановитьНастройки() 
	
	Реквизиты = ЭтаФорма.ПолучитьРеквизиты();
	Для Каждого Реквизит Из Реквизиты Цикл
		
		Если Не Параметры.Свойство(Реквизит.Имя) Тогда
			Продолжить;
		КонецЕсли;
		ЭтаФорма[Реквизит.Имя] = Параметры[Реквизит.Имя];

	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьТекущиеНастройки()
	
	ТекущиеНастройки = Новый Структура;
	Реквизиты = ЭтаФорма.ПолучитьРеквизиты();
	
	Для Каждого Реквизит Из Реквизиты Цикл
		
		ТекущиеНастройки.Вставить(Реквизит.Имя,ЭтаФорма[Реквизит.Имя]);

	КонецЦикла;
	
	Возврат ТекущиеНастройки;

КонецФункции

&НаСервере
Процедура УправлениеФормой()
		
	Если Группировки = "Вариант1" И ЗначениеЗаполнено(МодельБюджетирования) Тогда
		ПериодичностьМодели = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(МодельБюджетирования, "Периодичность");
		ИмяПериодичности = ОбщегоНазначения.ИмяЗначенияПеречисления(ПериодичностьМодели);
		НовыйВидПериода = Перечисления.ДоступныеПериодыОтчета[ИмяПериодичности];
		Если ВидПериода <> НовыйВидПериода Тогда
			ВидПериода = НовыйВидПериода;
			ПривестиЗначениеПериода(ВидПериода);
		КонецЕсли;
	КонецЕсли;
	
	Элементы.ВидПериода.Доступность = Группировки <> "Вариант1";
	Элементы.ПоказатьПланВыполненияПроцесса.Видимость = ТипОтчета > 0;
	
КонецПроцедуры

&НаСервере
Процедура ПривестиЗначениеПериода(ВидПериода)
	
	НачалоПериода = ОбщегоНазначенияУТКлиентСервер.НачалоПериодаОтчета(ВидПериода, НачалоПериода);
	КонецПериода =  ОбщегоНазначенияУТКлиентСервер.КонецПериодаОтчета(ВидПериода, НачалоПериода);
	
	СписокПериодов = ОбщегоНазначенияУТКлиентСервер.ДоступныеЗначенияПериодаПоВидуПериода(НачалоПериода, ВидПериода);
	ЭлементСписка = СписокПериодов.НайтиПоЗначению(НачалоПериода);
	
	Если ЭлементСписка = Неопределено Тогда
		Период = "";
	Иначе
		Период = ЭлементСписка.Представление;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПериодНачалоВыбораЗавершение(ВыбранныйПериод, ДополнительныеПараметры) Экспорт

	Если ВыбранныйПериод <> Неопределено Тогда
		
		Период = ВыбранныйПериод.Представление;
		
		НачалоПериода = ВыбранныйПериод.Значение;
		КонецПериода = ОбщегоНазначенияУТКлиентСервер.КонецПериодаОтчета(ВидПериода, ВыбранныйПериод.Значение);
		
	КонецЕсли; 
	
КонецПроцедуры

#КонецОбласти



