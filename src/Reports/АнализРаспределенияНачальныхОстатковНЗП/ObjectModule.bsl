#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры;
	
	Если Параметры.Свойство("ПараметрКоманды") Тогда
		ЭтаФорма.ФормаПараметры.Отбор.Вставить("Регистратор", Параметры.ПараметрКоманды);
	Иначе
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Отчет предназначен только для открытия в документе ""Начальные остатки НЗП по подразделениям"".';
								|en = 'The report is used only to be opened in the document ""WIP opening balances by business units"".'") ;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	// Подготовка макета компоновки
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;

	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	// Подготовка данных отчета
	ПараметрРегистратор	= КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(НастройкиОтчета, "Регистратор");
	Регистратор			= ПараметрРегистратор.Значение;
	ВнешниеНаборыДанных	= Документы.НачальныеОстаткиНЗППоПодразделениям.РаспределитьНачальныеОстаткиПоПартиямПроизводства(Регистратор);
	
	// Построение отчета
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, ВнешниеНаборыДанных, ДанныеРасшифровки);
	
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
	// Постобработка отчета
	ТабличныйДокумент = ПроцессорВывода.ЗакончитьВывод();
	
	// Установка заголовка отчета
	Область = ТабличныйДокумент.НайтиТекст("%1%");
	Если Область <> Неопределено Тогда
		
		Подразделение = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Регистратор, "Подразделение");
		ЗаголовокОтчета = НСтр("ru = 'Распределение остатков НЗП в подразделении ""%1""';
								|en = 'Allocation of WIP balances in the business unit ""%1""'");
		ЗаголовокОтчета =
			СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ЗаголовокОтчета,
				Подразделение);
		
		Область.Текст = СтрЗаменить(Область.Текст, "%1%", ЗаголовокОтчета);
		
	КонецЕсли;
	
	// Установка заголовков валют.
	ВалютаУпр = Константы.ВалютаУправленческогоУчета.Получить();
	
	Область = ТабличныйДокумент.НайтиТекст("%2%");
	Пока Не Область = Неопределено Цикл
		Область.Текст = СтрЗаменить(Область.Текст, "%2%", ВалютаУпр);
		Область = ТабличныйДокумент.НайтиТекст("%2%");
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - см. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
