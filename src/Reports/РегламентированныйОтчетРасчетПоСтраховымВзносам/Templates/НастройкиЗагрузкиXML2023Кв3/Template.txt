// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/РасчетСВ");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
			
			Если ТекущийУзел.Код = "УплПерДСО" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П"; // пропустить при автоматической загрузке
			КонецЕсли;
			
		КонецЦикла;
		
		УзлыПоXPath(НайденныйУзел, "ПерсСвСтрахЛиц/ДанФЛПолуч/@СерНомДок")[0].Ключ = "П000310011002";
		
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если П.ПараметрыОтчета.Свойство("СрЧисл") И ЗначениеЗаполнено(П.ПараметрыОтчета.СрЧисл) Тогда
			Титульный.СрСпЧисленность = ЧислоИзСтроки(П.ПараметрыОтчета.СрЧисл);
		КонецЕсли;
			
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	УзлыРаздел1Мн2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/РасчетСВ/ОбязПлатСВ/УплПерДСО"); // многоуровневый раздел 1 (многострочная часть 2)
	
	НомСтраницы = Новый Массив(1);
	НомСтраницы[0] = 1;
	Для НомСтр = 1 По УзлыРаздел1Мн2.Количество() Цикл
		
		УзелРаздел1Мн2 = УзлыРаздел1Мн2[НомСтр - 1];
		
		НомСтроки = Новый Массив(1);
		НомСтроки[0] = НомСтр;
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел1Мн2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		
	КонецЦикла;
	
	Раздел3 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел3", Раздел3);
	Если Раздел3 <> Неопределено Тогда
		
		Для Каждого СтраницаПервогоУровня Из Раздел3.Строки Цикл
			
			СерНомДок = Неопределено;
			Если СтраницаПервогоУровня.Данные.Свойство("П000310011002", СерНомДок) Тогда
				ЧастиСерНомДок = СтрРазделить(СерНомДок, " ");
				СтраницаПервогоУровня.Данные.Вставить("П000310011002", ЧастиСерНомДок[ЧастиСерНомДок.ВГраница()]);
				ЧастиСерНомДок.Удалить(ЧастиСерНомДок.ВГраница());
				Если ЧастиСерНомДок.Количество() > 0 Тогда
					СтраницаПервогоУровня.Данные.Вставить("П000310011001", СтрСоединить(ЧастиСерНомДок, " "));
				КонецЕсли;
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
#КонецОбласти