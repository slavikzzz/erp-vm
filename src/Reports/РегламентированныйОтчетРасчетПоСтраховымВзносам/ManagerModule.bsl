#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2017Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 10.10.2016 № ММВ-7-11/551@.";
	НоваяФорма.РедакцияФормы      = "от 10.10.2016 № ММВ-7-11/551@.";
	НоваяФорма.ДатаНачалоДействия = '20170101';
	НоваяФорма.ДатаКонецДействия  = '20191231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 18.09.2019 № ММВ-7-11/470@ (в ред. приказа ФНС России от 15.10.2020 № ЕД-7-11/751@).";
	НоваяФорма.РедакцияФормы      = "от 15.10.2020 № ЕД-7-11/751@.";
	НоваяФорма.ДатаНачалоДействия = '20201001';
	НоваяФорма.ДатаКонецДействия  = '20211231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 18.09.2019 № ММВ-7-11/470@.";
	НоваяФорма.РедакцияФормы      = "от 18.09.2019 № ММВ-7-11/470@.";
	НоваяФорма.ДатаНачалоДействия = '20200101';
	НоваяФорма.ДатаКонецДействия  = '20201231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2022Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 06.10.2021 № ЕД-7-11/875@ (в редакции приказа ФНС России от 19.05.2022 № ЕД-7-11/413@).";
	НоваяФорма.РедакцияФормы      = "от 19.05.2022 № ЕД-7-11/413@.";
	НоваяФорма.ДатаНачалоДействия = '20220101';
	НоваяФорма.ДатаКонецДействия  = '20221231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2025Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Утверждена приказом ФНС России от 29.09.2022 № ЕД-7-11/878@ (в ред. приказа ФНС России от 13.09.2024 № ЕД-7-11/739@).";
	НоваяФорма.РедакцияФормы      = "от 13.09.2024 № ЕД-7-11/739@.";
	НоваяФорма.ДатаНачалоДействия = '20250101';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2023Кв3";
	НоваяФорма.ОписаниеОтчета
	= "Утверждена приказом ФНС России от 29.09.2022 № ЕД-7-11/878@ (в ред. приказа ФНС России от 29.09.2023 № ЕА-7-11/696@).";
	НоваяФорма.РедакцияФормы      = "от 29.09.2023 № ЕА-7-11/696@.";
	НоваяФорма.ДатаНачалоДействия = '20230101';
	НоваяФорма.ДатаКонецДействия  = '20241231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2023Кв1";
	НоваяФорма.ОписаниеОтчета     = "Утверждена приказом ФНС России от 29.09.2022 № ЕД-7-11/878@.";
	НоваяФорма.РедакцияФормы      = "от 29.09.2022 № ЕД-7-11/878@.";
	НоваяФорма.ДатаНачалоДействия = '20230101';
	НоваяФорма.ДатаКонецДействия  = '20231231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2023Кв3";
	НоваяФорма.ОписаниеОтчета     = "Рекомендована письмом ФНС России от 26.09.2023 № БС-4-11/12322@.";
	НоваяФорма.РедакцияФормы      = "от 26.09.2023 № БС-4-11/12322@.";
	НоваяФорма.ДатаНачалоДействия = '20230101';
	НоваяФорма.ДатаКонецДействия  = '20231231';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	ФормаОтчета2017Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2016-10-10', "ММВ-7-11/551@", "ФормаОтчета2017Кв1");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2017Кв1, "5.01");
	
	ФормаОтчета2020Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2019-09-18', "ММВ-7-11/470@", "ФормаОтчета2020Кв1");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2020Кв1, "5.02");
	
	ФормаОтчета2020Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2020-10-15', "ЕД-7-11/751@", "ФормаОтчета2020Кв4");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2020Кв4, "5.03");
	
	ФормаОтчета2022Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2021-10-06', "ЕД-7-11/875@", "ФормаОтчета2022Кв1");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2022Кв1, "5.04");
	
	ФормаОтчета2023Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2022-09-29', "ЕД-7-11/878@", "ФормаОтчета2023Кв1");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2023Кв1, "5.05");
	
	ФормаОтчета2023Кв3 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2023-09-26', "БС-4-11/12322@", "ФормаОтчета2023Кв3");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2023Кв3, "5.06");
	
	ФормаОтчета2023Кв3 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2023-09-29', "ЕА-7-11/696@", "ФормаОтчета2023Кв3");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2023Кв3, "5.06");
	
	ФормаОтчета2025Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151111", '2024-09-13', "ЕД-7-11/739@", "ФормаОтчета2025Кв1");
	ОпределитьФорматВДеревеФормИФорматов(ФормаОтчета2025Кв1, "5.07");
	
	Возврат ФормыИФорматы;
	
КонецФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "",
			ИмяОбъекта = "", ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ПерсонифицированныеСведенияОЗастрахованныхЛицахИзРасчетовПоСтраховымВзносам(СтруктураПараметров) Экспорт
	
	МассивДанныхОтчетов = Новый Массив;
	
	ИсточникОтчета = "РегламентированныйОтчетРасчетПоСтраховымВзносам";
	
	ДатаОкончания = НачалоДня(КонецКвартала(СтруктураПараметров.ДатаОкончания));
	
	ИмяФормы = Неопределено;
	СтруктураПараметров.Свойство("ИмяФормыОтчета", ИмяФормы);
	
	Если ИмяФормы = Неопределено Тогда
		ИмяФормы = РегламентированнаяОтчетностьВызовСервера.ИмяФормыРеглОтчетаДействующейВОтчетномПериоде(
		ИсточникОтчета, ДатаОкончания);
	КонецЕсли;
	
	Если ИмяФормы = Неопределено Тогда
		Возврат МассивДанныхОтчетов;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИсточникОтчета", ИсточникОтчета);
	Запрос.УстановитьПараметр("ДатаОкончания",  ДатаОкончания);
	Запрос.УстановитьПараметр("Организация",    СтруктураПараметров.Организация);
	Запрос.УстановитьПараметр("ИмяФормы",       ИмяФормы);
	
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	РегламентированныйОтчет.Ссылка,
	|	РегламентированныйОтчет.Вид КАК Вид
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК РегламентированныйОтчет
	|ГДЕ
	|	РегламентированныйОтчет.ИсточникОтчета = &ИсточникОтчета
	|	И РегламентированныйОтчет.Организация = &Организация
	|	И РегламентированныйОтчет.ДатаОкончания = &ДатаОкончания
	|	И НЕ РегламентированныйОтчет.ПометкаУдаления
	|	И ВЫРАЗИТЬ(РегламентированныйОтчет.ВыбраннаяФорма КАК СТРОКА(18)) = &ИмяФормы
	|
	|УПОРЯДОЧИТЬ ПО
	|	Вид ВОЗР";
	
	Результат = Запрос.Выполнить();
	
	Если НЕ Результат.Пустой() Тогда
		
		ИмяРаздела = "Раздел3";
		Выборка = Результат.Выбрать();
		
		Если ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2025Кв1")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2023Кв3")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2023Кв1")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2022Кв1")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв4")
			ИЛИ ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2020Кв1") Тогда
			
			Пока Выборка.Следующий() Цикл
				
				ДанныеОтчета = Выборка.Ссылка.ДанныеОтчета.Получить();
				
				Если НЕ ДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
					
					СтруктураДанныхОтчета = Новый Структура;
					СтруктураДанныхОтчета.Вставить("НомерКорректировки", Выборка.Вид);
					СтруктураДанныхОтчета.Вставить("ПерсонифицированныеСведенияОЗастрахованныхЛицах",
					ДанныеОтчета.ДанныеМногоуровневыхРазделов[ИмяРаздела]);
					
					МассивДанныхОтчетов.Добавить(СтруктураДанныхОтчета);
					
				КонецЕсли;
				
			КонецЦикла;
			
		ИначеЕсли ВРег(СокрЛП(ИмяФормы)) = ВРег("ФормаОтчета2017Кв1") Тогда
			
			ИмяГруппы1 = "П00321М1";
			ИменаГраф1 = Новый Массив;
			ИменаГраф1.Добавить("П00321М119001");
			ИменаГраф1.Добавить("П00321М120001");
			ИменаГраф1.Добавить("П00321М121001");
			ИменаГраф1.Добавить("П00321М122001");
			ИменаГраф1.Добавить("П00321М123001");
			ИменаГраф1.Добавить("П00321М124001");
			
			ИмяГруппы2 = "П00322М1";
			ИменаГраф2 = Новый Массив;
			ИменаГраф2.Добавить("П00322М126001");
			ИменаГраф2.Добавить("П00322М127001");
			ИменаГраф2.Добавить("П00322М128001");
			ИменаГраф2.Добавить("П00322М129001");
			
			Пока Выборка.Следующий() Цикл
				
				ДанныеОтчета = Выборка.Ссылка.ДанныеОтчета.Получить();
				
				Если ДанныеОтчета.Свойство("ОкружениеСохранения") Тогда
					
					ИмяРаздела = "Раздел3";
					
					ИмяГруппы1 = "П00321М1";
					ИменаГраф1 = Новый Массив;
					ИменаГраф1.Добавить("П00321М119001");
					ИменаГраф1.Добавить("П00321М120001");
					ИменаГраф1.Добавить("П00321М121001");
					ИменаГраф1.Добавить("П00321М122001");
					ИменаГраф1.Добавить("П00321М123001");
					ИменаГраф1.Добавить("П00321М124001");
					
					ИмяГруппы2 = "П00322М1";
					ИменаГраф2 = Новый Массив;
					ИменаГраф2.Добавить("П00322М126001");
					ИменаГраф2.Добавить("П00322М127001");
					ИменаГраф2.Добавить("П00322М128001");
					ИменаГраф2.Добавить("П00322М129001");
					
					СтарТаблица = ДанныеОтчета.ДанныеМногостраничныхРазделов[ИмяРаздела];
					
					ДеревоРаздела = Новый ДеревоЗначений;
					ДеревоРаздела.Колонки.Добавить("Данные");
					ДеревоРаздела.Колонки.Добавить("ДанныеМногострочныхЧастей");
					
					Для Инд = 0 По СтарТаблица.Количество() - 1 Цикл
						
						СтарСтраница = СтарТаблица[Инд];
						СтарДанные = СтарСтраница.Данные;
						
						ДеревоРаздела.Строки.Добавить();
						ДеревоРаздела.Строки[Инд].Данные = Новый Структура;
						ДеревоДопСтрок1 = Новый ДеревоЗначений;
						ДеревоДопСтрок1.Колонки.Добавить("Данные");
						ДеревоДопСтрок1.Колонки.Добавить("ДанныеМногострочныхЧастей");
						ДеревоДопСтрок2 = Новый ДеревоЗначений;
						ДеревоДопСтрок2.Колонки.Добавить("Данные");
						ДеревоДопСтрок2.Колонки.Добавить("ДанныеМногострочныхЧастей");
						ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей = Новый Структура;
						ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы1, ДеревоДопСтрок1);
						ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей.Вставить(ИмяГруппы2, ДеревоДопСтрок2);
						
						// Немногострочные данные.
						Для каждого Пок Из СтарДанные Цикл
							Если Пок.Ключ = "П000030002001" ИЛИ Пок.Ключ = "П000030003001" ИЛИ Пок.Ключ = "П000030005001"
								ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы1) ИЛИ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы2) Тогда
								Продолжить;
							КонецЕсли;
							ДеревоРаздела.Строки[Инд].Данные.Вставить(Пок.Ключ, Пок.Значение);
						КонецЦикла;
						
						// Многострочные данные 190-240.
						НомСтр = 1;
						_НомСтр = "_1";
						Пока СтарДанные.Свойство(ИменаГраф1[0] + _НомСтр) Цикл
							СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы1].Строки.Добавить();
							СтрокаМнЧ.Данные = Новый Структура;
							СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
							Для каждого ИмяГрафы Из ИменаГраф1 Цикл
								СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
							КонецЦикла;
							НомСтр = НомСтр + 1;
							_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
						КонецЦикла;
						
						// Многострочные данные 260-290.
						НомСтр = 1;
						_НомСтр = "_1";
						Пока СтарДанные.Свойство(ИменаГраф2[0] + _НомСтр) Цикл
							СтрокаМнЧ = ДеревоРаздела.Строки[Инд].ДанныеМногострочныхЧастей[ИмяГруппы2].Строки.Добавить();
							СтрокаМнЧ.Данные = Новый Структура;
							СтрокаМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
							Для каждого ИмяГрафы Из ИменаГраф2 Цикл
								СтрокаМнЧ.Данные.Вставить(ИмяГрафы, СтарДанные[ИмяГрафы + _НомСтр]);
							КонецЦикла;
							НомСтр = НомСтр + 1;
							_НомСтр = "_" + Формат(НомСтр, "ЧГ=");
						КонецЦикла;
						
					КонецЦикла;
					
					ПерсонифицированныеСведенияОЗастрахованныхЛицах = ДеревоРаздела;
					
				Иначе
					
					ДеревоРаздела = ДанныеОтчета.ДанныеМногоуровневыхРазделов[ИмяРаздела];
					
					Если НЕ ДеревоРаздела.Строки[0].Данные.Свойство("П000030004001") Тогда
						
						ЗаполненРаздел = Ложь;
						
						Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
							
							Данные = СтраницаРаздела.Данные;
							Для каждого Пок Из Данные Цикл
								ЗаполненРаздел = (ЗаполненРаздел ИЛИ ЗначениеЗаполнено(Пок.Значение));
								Если ЗаполненРаздел Тогда
									Прервать;
								КонецЕсли;
							КонецЦикла;
							
							Если ЗаполненРаздел Тогда
								Прервать;
							КонецЕсли;
							
							ИменаГруппМнЧ = Новый Массив;
							ИменаГруппМнЧ.Добавить(ИмяГруппы1);
							ИменаГруппМнЧ.Добавить(ИмяГруппы2);
							
							Для каждого ИмяГруппы Из ИменаГруппМнЧ Цикл
								
								ДанныеМнЧ = СтраницаРаздела.ДанныеМногострочныхЧастей[ИмяГруппы];
								МассивИменГраф = ?(ИмяГруппы = ИмяГруппы1, ИменаГраф1, ИменаГраф2);
								
								Для Каждого СтрокаМнЧ Из ДанныеМнЧ.Строки Цикл
									
									Для каждого ИмяГрафы Из МассивИменГраф Цикл
										ЗаполненРаздел = (ЗаполненРаздел ИЛИ ЗначениеЗаполнено(СтрокаМнЧ.Данные[ИмяГрафы]));
										Если ЗаполненРаздел Тогда
											Прервать;
										КонецЕсли;
									КонецЦикла;
									
									Если ЗаполненРаздел Тогда
										Прервать;
									КонецЕсли;
									
								КонецЦикла;
								
								Если ЗаполненРаздел Тогда
									Прервать;
								КонецЕсли;
								
							КонецЦикла;
							
						КонецЦикла;
						
						// Заполнение строки 040 (случай сохраненных данных отчета предыдущей версии).
						Для Инд = 0 По ДеревоРаздела.Строки.Количество() - 1 Цикл
							Если ЗаполненРаздел Тогда
								ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", Формат(Инд + 1, "ЧГ="));
							Иначе
								ДеревоРаздела.Строки[Инд].Данные.Вставить("П000030004001", "");
							КонецЕсли;
						КонецЦикла;
						
					КонецЕсли;
					
					ПерсонифицированныеСведенияОЗастрахованныхЛицах = ДеревоРаздела;
					
				КонецЕсли;
				
				СтруктураДанныхОтчета = Новый Структура;
				СтруктураДанныхОтчета.Вставить("НомерКорректировки", Выборка.Вид);
				СтруктураДанныхОтчета.Вставить("ПерсонифицированныеСведенияОЗастрахованныхЛицах",
				ПерсонифицированныеСведенияОЗастрахованныхЛицах);
				
				МассивДанныхОтчетов.Добавить(СтруктураДанныхОтчета);
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивДанныхОтчетов;
	
КонецФункции

#КонецОбласти

#КонецЕсли