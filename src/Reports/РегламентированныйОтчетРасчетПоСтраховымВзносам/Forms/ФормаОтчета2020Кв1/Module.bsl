
#Область Переменные

&НаСервере
Перем мОбъектОтчета;

#Область ПеременныеКC2020

&НаКлиенте
Перем ОбработкаКС Экспорт;

&НаСервере
Перем ДанныеКС;

&НаСервере
Перем Документирование;

&НаСервере
Перем ТаблицаОписаний;

&НаСервере
Перем СписокРасшифровкиПоказателей;

&НаСервере
Перем СписокРасшифровкиформулы;

#КонецОбласти

#КонецОбласти

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	// Обход ошибки платформы Параметр сеанса отсутствует или удален.
	ТабличныйДокумент.Очистить();
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.СформироватьСтруктуруРеквизитовФормы(Параметры.мВыбраннаяФорма, СтруктураРеквизитовФормы);
	
	ОбъектОтчета.ЗаполнитьКодОтчетногоПериода(СтруктураРеквизитовФормы.мВыбраннаяФорма, СтруктураРеквизитовФормы);
	
	СтруктураРеквизитовФормы.мСохраненныйДок = Параметры.мСохраненныйДок;
	
	СтруктураРеквизитовФормы.мВыбраннаяФорма          = Параметры.мВыбраннаяФорма;
	СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета  = Параметры.мДатаКонцаПериодаОтчета;
	СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета = Параметры.мДатаНачалаПериодаОтчета;
	СтруктураРеквизитовФормы.мПериодичность           = Параметры.мПериодичность;
	СтруктураРеквизитовФормы.мСкопированаФорма        = Параметры.мСкопированаФорма;
	СтруктураРеквизитовФормы.Организация              = Параметры.Организация;
	СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417
	= Параметры.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417;
	СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически
	= Параметры.СформироватьФормуОтчетаАвтоматически;
	СтруктураРеквизитовФормы.СправочникиВидыКонтактнойИнформацииФактАдресОрганизации
	= Справочники.ВидыКонтактнойИнформации.АдресПоПропискеФизическиеЛица;
	
	мСтруктураЦветовРаскраски = Новый Структура;
	мСтруктураЦветовРаскраски.Вставить("_0", Новый Цвет(255, 255, 192));
	мСтруктураЦветовРаскраски.Вставить("_1", Новый Цвет(192, 192, 192));
	мСтруктураЦветовРаскраски.Вставить("_3", Новый Цвет(230, 240, 220));
	мСтруктураЦветовРаскраски.Вставить("_4", Новый Цвет(192, 220, 192));
	мСтруктураЦветовРаскраски.Вставить("_5", Новый Цвет(255, 255, 255));
	
	ПорядкиОкругленияОтчетности = Новый Структура;
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1",
	Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000",
	Перечисления.ПорядкиОкругленияОтчетности.Окр1000);
	ПорядкиОкругленияОтчетности.Вставить("ПеречислениеПорядкиОкругленияОтчетностиОкр1000000",
	Перечисления.ПорядкиОкругленияОтчетности.Окр1000000);
	
	СоответствиеЕдиницыИзмеренияДелителю = Новый Структура;
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1", 1);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000", 1000);
	СоответствиеЕдиницыИзмеренияДелителю.Вставить("Окр1000000", 1000000);
	
	ДатаПодписи = ТекущаяДатаСеанса();
	
	Инициализация(Параметры.БезОткрытияФормы);
	
	// ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	Если ОбщегоНазначения.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		Элементы.ФормаОткрытьФормуКонтекстныхНовостей.Видимость = Истина;
		
		ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
		
		МодульОбработкаНовостей = ОбщегоНазначения.ОбщийМодуль("ОбработкаНовостей");
		
		МодульОбработкаНовостей.КонтекстныеНовости_ПриСозданииНаСервере(
			ЭтотОбъект,
			"БП.Отчет.РО_РасчетПоСтраховымВзносам",
			ИмяФормы(ИмяФормы),
			,
			НСтр("ru = 'Новости: Расчет по страховым взносам';
				|en = 'Новости: Расчет по страховым взносам'"),
			Ложь,
			Новый Структура("ПолучатьНовостиНаСервере, ХранитьМассивНовостейТолькоНаСервере", Истина, Ложь),
			ИдентификаторыСобытийПриОткрытии);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.КонтекстныеНовости_ПриСозданииНаСервере
	
КонецПроцедуры

#Область Инициализация

&НаСервере
Процедура Инициализация(БезОткрытияФормы = Ложь) Экспорт
	
	Перем ИсходноеКоличествоСтрокГруппы;
	
	СтруктураРеквизитовФормы.мБезОткрытияФормы = БезОткрытияФормы;
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный";
	
	// Очистка для случая повторного запуска инициализации,
	// например, при загрузке отчета из файла выгрузки.
	ТабличныйДокумент.Очистить();
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(ИмяФормы,
	СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + СтруктураРеквизитовФормы.НаимТекущегоРаздела));
	
	ОбъектОтчета.ИнициализироватьМногострочныеЧасти(СтруктураРеквизитовФормы.мВыбраннаяФорма, СтруктураРеквизитовФормы);
	
	ОбъектОтчета.ИнициализироватьМногоуровневыеРазделы(СтруктураРеквизитовФормы.мВыбраннаяФорма,
													   СтруктураРеквизитовФормы,
													   мСтруктураМногоуровневыхРазделов);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.ИнициализироватьОбычныеРазделы(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												СтруктураРеквизитовФормы,
								 				мСтруктураМногоуровневыхРазделов,
								 				СтруктураДанныхРазделов);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета();
	
	ЗначениеВДанныеФормы(
		ОбъектОтчета.СтруктураСтраницОтчета(СтруктураРеквизитовФормы.мВыбраннаяФорма), мДеревоСтраницОтчета);
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	
	СтруктураРеквизитовФормы.СписокПечатаемыхЛистов = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мПечатныеформы = Новый СписокЗначений;
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
	СтруктураРеквизитовФормы.ВидДокумента = 0;
	НомерКорректировки = 1;
	
	ЗаполнитьЗначенияПоУмолчанию = Ложь;
	ОтчетСкопированОрганизацияНеИзменилась = Ложь;
	ИсходныйОтчетЗаПервыйКвартал = Ложь;
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			ВосстановитьСохраненныеДанные();
		Иначе
			СтруктураРеквизитовФормы.ЕдиницаИзмерения = Перечисления.ПорядкиОкругленияОтчетности.Окр1;
			СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = 0;
			СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Ложь;
			ЗаполнитьЗначенияПоУмолчанию = Истина;
			КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
		КонецЕсли;
		Модифицированность = Истина;
	Иначе
		ВосстановитьСохраненныеДанные();
		Если СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			ИсходныйОтчетЗаПервыйКвартал
			= (Месяц(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания) = 3);
			Если СтруктураРеквизитовФормы.мСохраненныйДок.Организация
				= СтруктураРеквизитовФормы.Организация Тогда
				ОтчетСкопированОрганизацияНеИзменилась = Истина;
			КонецЕсли;
			СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено;
			Модифицированность = Истина;
		КонецЕсли;
		Если НЕ БезОткрытияФормы И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
			ЗаблокироватьДанныеДляРедактирования(
				СтруктураРеквизитовФормы.мСохраненныйДок, , УникальныйИдентификатор);
		КонецЕсли;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ИП
	= НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(СтруктураРеквизитовФормы.Организация);
	
	Если ЗаполнитьЗначенияПоУмолчанию Тогда
		ОбъектОтчета.ЗаполнитьЗначенияПоУмолчанию(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												  СтруктураРеквизитовФормы,
												  СтруктураДанныхРазделов);
		ТабличныйДокумент.Области.ПоМесту.Значение = СтруктураДанныхРазделов.СтруктураДанныхТитульный.ПоМесту;
		МесяцОкончания = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ТабличныйДокумент.Области.Период.Значение = СтруктураРеквизитовФормы.КодОтчетногоПериода[
		"НеЗаполненКодФормыРеорганизации_" + МесяцОкончания];
	КонецЕсли;
	
	ПолучитьСведенияОПоказателяхОтчета();
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить Тогда
		Элементы.Заполнить.Видимость = Ложь;
	КонецЕсли;
	
	Если НЕ СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать Тогда
		Элементы.Расшифровать.Видимость = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Видимость = Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации = НачальноеЗначениеНаименованияОрганизации();
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма) Тогда
		Если СтруктураРеквизитовФормы.ИП
			И ЗначениеЗаполнено(ТабличныйДокумент.Области.КодФормыРеорганизации.Значение)
			И ТабличныйДокумент.Области.КодФормыРеорганизации.Значение <> "0" Тогда
			ТабличныйДокумент.Области.КодФормыРеорганизации.Значение = "";
		КонецЕсли;
	КонецЕсли;
	
	ПоказатьПериод();
	
	Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено
		ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено
		ИЛИ СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		
		ЗаполнитьПериодОтчета(ЭтотОбъект);
		
		Если ОтчетСкопированОрганизацияНеИзменилась Тогда
			Если НЕ СтруктураРеквизитовФормы.ИП
				И ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСкопированаФорма)
				И ЗначениеЗаполнено(ТабличныйДокумент.Области.КодФормыРеорганизации.Значение)
				И ТабличныйДокумент.Области.КодФормыРеорганизации.Значение <> "0" Тогда
				НаимОргВосстановленное = ТабличныйДокумент.Области.НаимОрг.Значение;
				ОбъектОтчета.ЗаполнитьСведенияОбОрганизации(СтруктураРеквизитовФормы.мВыбраннаяФорма,
															СтруктураРеквизитовФормы,
															ДатаПодписи,
															ТабличныйДокумент);
				ТабличныйДокумент.Области.НаимОрг.Значение = НаимОргВосстановленное;
			Иначе
				РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
			КонецЕсли;
		Иначе
			ОбъектОтчета.ЗаполнитьСведенияОбОрганизации(СтруктураРеквизитовФормы.мВыбраннаяФорма,
														СтруктураРеквизитовФормы,
														ДатаПодписи,
														ТабличныйДокумент);
		КонецЕсли;
		
		Если ТабличныйДокумент.Области.ПоМесту.Значение = "124"
			ИЛИ ТабличныйДокумент.Области.ПоМесту.Значение = "240" Тогда
			ИзменитьНастройкиРазделаВДеревеРазделов("Раздел2", 1, Ложь);
		Иначе
			ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел("Раздел2", 0, Ложь);
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.НаимОрганизации = СтруктураРеквизитовФормы.Организация.Наименование;
	
	Если НЕ БезОткрытияФормы Тогда
		СформироватьСпискиВыбора();
		РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтотОбъект);
	КонецЕсли;
	
	ОтобразитьНомерКорректировки(ЭтотОбъект);
	
	СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
	НомерКорректировки = ?(СтруктураРеквизитовФормы.ВидДокумента = 0, 0, НомерКорректировки);
	ТабличныйДокумент.Области.НомерКорректировки.Значение = Строка(НомерКорректировки);
	
	ТабличныйДокумент.Области.ДатаПодписи.Значение = ДатаПодписи;
	
	РегламентированнаяОтчетность.ДобавитьКнопкуПрисоединенныеФайлы(ЭтотОбъект);
	
	РегламентированнаяОтчетностьКлиентСервер.ПриИнициализацииФормыРегламентированногоОтчета(ЭтотОбъект);
	
	Если СтруктураРеквизитовФормы.СформироватьФормуОтчетаАвтоматически Тогда
		РезультатЗапуска = ЗаполнитьАвтоНаСервере();
		СтруктураРеквизитовФормы.Вставить("РезультатЗапускаАвтозаполненияПриСоздании", РезультатЗапуска);
	КонецЕсли;
	
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПриИнициализации(ЭтотОбъект,
		?(ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок),
			СтруктураРеквизитовФормы.мСохраненныйДок,
			СтруктураРеквизитовФормы.ПустаяСсылкаНаРегламентированныйОтчет));
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов)
	
	Если СтруктураДанныхРазделов.СтруктураДанныхТитульный.Количество() > 0 Тогда
		СтруктураДанныхТитульный = СтруктураДанныхРазделов.СтруктураДанныхТитульный;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьСведенияОПоказателяхОтчета()
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация",              СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("мДатаНачалаПериодаОтчета", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("мДатаКонцаПериодаОтчета",  СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	АвтозаполняемыеПоказатели = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОПоказателяхОтчета(
	ИмяОтчета(ИмяФормы), ИмяФормы(ИмяФормы), ПараметрыОтчета);
	
	Если АвтозаполняемыеПоказатели.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Для каждого Показатель Из АвтозаполняемыеПоказатели Цикл
		Если Показатель.Значение[0] Тогда
			СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить = Истина;
			Если СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
		Если Показатель.Значение[1] Тогда
			СтруктураРеквизитовФормы.ОтображатьКнопкуРасшифровать = Истина;
			Если СтруктураРеквизитовФормы.ОтображатьКнопкуЗаполнить Тогда
				Прервать;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	СтруктураРеквизитовФормы.Вставить("АвтозаполняемыеПоказатели", АвтозаполняемыеПоказатели);
	
КонецПроцедуры

&НаСервере
Функция НачальноеЗначениеНаименованияОрганизации()
	
	Если НЕ СтруктураРеквизитовФормы.ИП Тогда
		
		СтрокаСведений = "НаимЮЛПол";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		СтруктураРеквизитовФормы.Организация, ДатаПодписи, СтрокаСведений);
		
		НаимОрганизации = "";
		СведенияОбОрганизации.Свойство("НаимЮлПол", НаимОрганизации);
		
		Возврат СокрЛП(НаимОрганизации);
		
	Иначе
		
		Возврат "";
		
	КонецЕсли;
	
КонецФункции

&НаСервере
Процедура СформироватьСпискиВыбора()
	
	МакетСоставаПоказателей = ОбъектОтчета(ИмяФормы).ПолучитьМакет("СпискиВыбора2020Кв1");
	
	КоллекцияСписковВыбора = Новый Соответствие;
	Для Каждого Область Из МакетСоставаПоказателей.Области Цикл
		Если Область.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Строки Тогда
			ВерхОбласти = Область.Верх;
			НизОбласти = Область.Низ;
			ТаблСписка = Новый ТаблицаЗначений;
			ТаблСписка.Колонки.Добавить("Код",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 1, ВерхОбласти, 1).ШиринаКолонки);
			ТаблСписка.Колонки.Добавить("Название",,,
				МакетСоставаПоказателей.Область(ВерхОбласти, 2, ВерхОбласти, 2).ШиринаКолонки);
			Для НомСтр = ВерхОбласти По НизОбласти Цикл
				КодПоказателя = СокрП(МакетСоставаПоказателей.Область(НомСтр, 1).Текст);
				Если КодПоказателя <> "###" Тогда
					НовСтрока = ТаблСписка.Добавить();
					НовСтрока.Код = КодПоказателя;
					НовСтрока.Название = СокрП(МакетСоставаПоказателей.Область(НомСтр, 2).Текст);
				КонецЕсли;
			КонецЦикла;
			КоллекцияСписковВыбора.Вставить(Область.Имя, ТаблСписка);
		КонецЕсли;
	КонецЦикла;
	
	СвойстваПоказателей.Очистить();
	
	//Титульный.
	ИмяСекции_КодыПериода_ПоМесту120_124
	= "КодыПериода_ПоМесту120_124_" + Формат(Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) / 3, "ЧГ=");
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "Период", 2, ,
	"Выбор расчетного периода", КоллекцияСписковВыбора[ИмяСекции_КодыПериода_ПоМесту120_124]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "ПоМесту", 3, ,
	"Выбор места представления", КоллекцияСписковВыбора["МестаПредставления"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "КодФормыРеорганизации", 1, ,
	"Выбор кода формы реорганизации (ликвидации, лишения полномочий, пр.)", КоллекцияСписковВыбора["ФормыРеорганизации"]);
	
	//Разд. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010000101", 0, ,
	"Выбор кода типа плательщика", КоллекцияСписковВыбора["КодыТипаПлательщика"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010002001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр020"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010004001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр040"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М106001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр060"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00001М208001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр080"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000010010001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел1_Стр100"]);
	
	//Прил. 1 к разд. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000110000101", 0, ,
	"Выбор кода тарифа плательщика", КоллекцияСписковВыбора["КодыТарифаПлательщика"]);
	//Подр. 1.3.1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11131М100101", 1, ,
	"Выбор признака основания исчисления", КоллекцияСписковВыбора["ПризнакиОснованияИсчисления"]);
	//Подр. 1.3.2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11132М100101", 1, ,
	"Выбор кода основания исчисления", КоллекцияСписковВыбора["КодыОснованияИсчисления"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П11132М100201", 1, ,
	"Выбор кода класса условий труда", КоллекцияСписковВыбора["КодыКлассаУсловийТруда"]);
	
	//Прил. 1.1 к разд. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00111М100101", 1, ,
	"Выбор кода основания исчисления", КоллекцияСписковВыбора["КодыОснованияИсчисленияНаДСО"]);
	
	//Прил. 2 к разд. 1.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00012М100101", 0, ,
	"Выбор кода тарифа плательщика", КоллекцияСписковВыбора["КодыТарифаПлательщика"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00012М100201", 1, ,
	"Выбор признака выплат", КоллекцияСписковВыбора["ПризнакиВыплат"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009001", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр090Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009003", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр090Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009005", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр090Прил2Разд1"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000120009007", 1, ,
	"Выбор признака", КоллекцияСписковВыбора["ПризнакиСтр090Прил2Разд1"]);
	
	//Разд. 2.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020002001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел2_Стр020"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000020004001", 20, ,
	"Выбор кода бюджетной классификации", КоллекцияСписковВыбора["КБК_Раздел2_Стр040"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00021М106301", 1, ,
	"Выбор пола", КоллекцияСписковВыбора["ПризнакиМЖ"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00021М106501", 2, ,
	"Выбор кода вида документа", КоллекцияСписковВыбора["КодыВидовДокументов"]);
	
	//Разд. 3.
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000030001001", 1, ,
	"Выбор признака аннулирования сведений", КоллекцияСписковВыбора["ПризнакиАннулирования"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310009001", 1, ,
	"Выбор пола", КоллекцияСписковВыбора["ПризнакиМЖ"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П000310010001", 2, ,
	"Выбор кода вида документа", КоллекцияСписковВыбора["КодыВидовДокументов"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00321М113001", 0, ,
	"Выбор кода категории застрахованного лица", КоллекцияСписковВыбора["КодыКатегорииЗастрахованногоЛица"]);
	РегламентированнаяОтчетность.ДобавитьСтрокуОписанияВвода(СвойстваПоказателей, "П00322М119001", 0, ,
	"Выбор кода застрахованного лица", КоллекцияСписковВыбора["КодыЗастрахованногоЛица"]);
	
КонецПроцедуры

&НаСервере
Процедура ПоказатьПериод()
	
	СтруктураРеквизитовФормы.СтрПериодОтчета = ПредставлениеПериода(
	НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
	КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗаполнитьПериодОтчета(Форма)
	
	КодФормыРеорганизации = СокрЛП(Форма.ТабличныйДокумент.Области.КодФормыРеорганизации.Значение);
	МесяцОкончания = Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПоМесту = СокрЛП(Форма.ТабличныйДокумент.Области.ПоМесту.Значение);
	
	КодПериода = Неопределено;
	
	Если ПоМесту = "120" ИЛИ ПоМесту = "124" Тогда
		КодПериода = СокрЛП(Форма.ТабличныйДокумент.Области.Период.Значение);
		ВозможныеКодыПериода = СтрРазделить("21,31,33,34,83,84,85,86", ",", Ложь);
		ТекВозмКодыПериода = Новый Массив;
		ТекВозмКодыПериода.Добавить(ВозможныеКодыПериода[МесяцОкончания / 3 - 1]);
		ТекВозмКодыПериода.Добавить(ВозможныеКодыПериода[МесяцОкончания / 3 + 3]);
		Если ЗначениеЗаполнено(КодПериода) И ТекВозмКодыПериода.Найти(КодПериода) = Неопределено Тогда
			КодПериода = Форма.СтруктураРеквизитовФормы.КодОтчетногоПериода[
			"НеЗаполненКодФормыРеорганизации_" + МесяцОкончания];
		КонецЕсли;
	Иначе
		Если (ЗначениеЗаполнено(КодФормыРеорганизации) И КодФормыРеорганизации <> "9") Тогда
			КодПериода = Форма.СтруктураРеквизитовФормы.КодОтчетногоПериода[
			"ЗаполненКодФормыРеорганизации_" + МесяцОкончания];
		Иначе
			КодПериода = Форма.СтруктураРеквизитовФормы.КодОтчетногоПериода[
			"НеЗаполненКодФормыРеорганизации_" + МесяцОкончания];
		КонецЕсли;
	КонецЕсли;
	
	Если КодПериода <> Неопределено Тогда
		Форма.ТабличныйДокумент.Области.Период.Значение = КодПериода;
	КонецЕсли;
	
	Форма.ТабличныйДокумент.Области.ОтчетГод.Значение
	= Формат(Год(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ЧГ=");
	
КонецПроцедуры

#КонецОбласти

#Область СохранениеДанныхОтчета

&НаКлиенте
Процедура СохранитьОтчет(Команда)
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь, ВыполняемоеОповещение = Неопределено) Экспорт
	
	Вариант = СтруктураРеквизитовФормы.ВидДокумента * НомерКорректировки;
	
	Если СтруктураДанныхТитульный.Количество() = 0
	 ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		
		СтруктураДанныхТитульный.Вставить("НалоговыйОрган", ТабличныйДокумент.Области.НалоговыйОрган.Значение);
		СтруктураДанныхТитульный.Вставить("КПП", ТабличныйДокумент.Области.КПП.Значение);
		
	КонецЕсли;
	
	КодИФНС = СтруктураДанныхТитульный.НалоговыйОрган;
	КПП = СтруктураДанныхТитульный.КПП;
	
	Если НЕ РегламентированнаяОтчетностьКлиент.ПриЗаписиРегламентированногоОтчетаНаКлиенте(ЭтотОбъект, КодИФНС, Автосохранение, Вариант) Тогда
		Возврат;
	КонецЕсли;
	
	ПодобныйОтчетСуществует = Ложь;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Ложь;
	
	Если Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		НаименованиеТекущегоРаздела = СтруктураРеквизитовФормы.НаимТекущегоРаздела;
	Иначе
		НаименованиеТекущегоРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	КонецЕсли;
	
	РезультатСохранения = ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует,
										   Вариант,
										   ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,
										   Автосохранение, НаименованиеТекущегоРаздела);
	
	ВидДокументаНомерКорректировкиИзменен = Неопределено;
	
	Если ПодобныйОтчетСуществует И Автосохранение Тогда
		Возврат;
	КонецЕсли;
	
	НуженВопросПередСохранением = (ПодобныйОтчетСуществует ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки);
	
	Если НуженВопросПередСохранением Тогда
		
		СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП);
		
	Иначе
		
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросом(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, ПодобныйОтчетСуществует, КодИФНС, КПП)
	
	Если ПодобныйОтчетСуществует Тогда
		
		Кнопки = Новый СписокЗначений;
		Кнопки.Добавить(КодВозвратаДиалога.Да, "Сохранить");
		Кнопки.Добавить(КодВозвратаДиалога.Нет, "Отмена");
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?';
			|en = 'Отчет с видом %1 уже существует.
			|Сохранить отчет с таким же видом?'"), ?(Вариант = 0, """Первичный""", """Корректирующий/" + Вариант + """"));
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП);
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросСохранитьОтчетСТакимЖеВидомЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, Кнопки, , Кнопки.Получить(1).Значение);
		
	Иначе
		
		СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросСохранитьОтчетСТакимЖеВидомЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = ДополнительныеПараметры.ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки;
	
	Ответ = РезультатВопроса;
	Если Ответ = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки,КодИФНС, КПП);
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиентеСВопросомПродолжение(Автосохранение, Вариант, ВыполняемоеОповещение, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, КодИФНС, КПП)
	
	Если ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
		ПараметрыФормы = Новый Структура();
		ПараметрыФормы.Вставить("ВидОтчета", Вариант);
		
		ФормаВопроса = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени("ВопросПриИзмененииВидаДокументаНомераКорректировки", ПараметрыФормы);
		ФормаВопроса.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ДополнительныеПараметры = Новый Структура("Автосохранение, Вариант, ВыполняемоеОповещение, КодИФНС, КПП", Автосохранение, Вариант, ВыполняемоеОповещение,КодИФНС, КПП );
		ОписаниеОповещения = Новый ОписаниеОповещения("ВопросПриИзмененииВидаДокументаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВопроса.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВопроса.Открыть();
	Иначе
		Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сохраняется %1...';
																				|en = 'Сохраняется %1...'"), Заголовок), , , БиблиотекаКартинок.Записать);
		РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, Неопределено, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПриИзмененииВидаДокументаЗавершение(КодВозврата, ДополнительныеПараметры) Экспорт
	
	Автосохранение = ДополнительныеПараметры.Автосохранение;
	Вариант = ДополнительныеПараметры.Вариант;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	КодИФНС = ДополнительныеПараметры.КодИФНС;
	КПП = ДополнительныеПараметры.КПП;
	Если КодВозврата = КодВозвратаДиалога.Да
		ИЛИ КодВозврата = КодВозвратаДиалога.Нет Тогда
		ВидДокументаНомерКорректировкиИзменен = ?(КодВозврата = КодВозвратаДиалога.Да, Истина, Ложь);
	Иначе
		Возврат;
	КонецЕсли;
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Сохраняется %1...';
																			|en = 'Сохраняется %1...'"), Заголовок), , , БиблиотекаКартинок.Записать);
	РезультатСохранения = Сохранить(Автосохранение, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен, Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
	ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияНаКлиенте(ВыполняемоеОповещение, РезультатСохранения)
	
	КлючУникальности = СтруктураРеквизитовФормы.мСохраненныйДок;
	
	Если РезультатСохранения Тогда
		
		РегламентированнаяОтчетностьКлиент.ПослеЗаписиРегламентированногоОтчета(ЭтотОбъект);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПередСохранением(КодИФНС, КПП, ПодобныйОтчетСуществует, Вариант, ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки, Автосохранение, НаимТекРаздела)
	
	Если РегламентированнаяОтчетность.БылиИзмененыКлючевыеРеквизитыОтчета(ЭтотОбъект, КодИФНС, КПП)
	   И РегламентированнаяОтчетность.СуществуетДокументСАналогичнымиРеквизитами(ЭтотОбъект, КодИФНС, КПП) Тогда
		
		ПодобныйОтчетСуществует = Истина;
		
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мЗаписываетсяНовыйДокумент = (СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено);
	
	Если Вариант <> Неопределено И ((СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено) ИЛИ (СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено) ИЛИ (Вариант <> СтруктураРеквизитовФормы.мВариант)) Тогда
		
		Если СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено ИЛИ СтруктураРеквизитовФормы.мСкопированаФорма <> Неопределено Тогда
			
		ИначеЕсли Вариант <> СтруктураРеквизитовФормы.мВариант Тогда
			
			ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки = Истина;
			
		КонецЕсли;

	КонецЕсли;
	
	Если ПодобныйОтчетСуществует
	 ИЛИ ОткрытьФормуВопросаПриИзмененииВидаДокументаНомераКорректировки Тогда
	 
	 	Возврат Ложь;
		
 	КонецЕсли;
		
	Возврат Сохранить(Автосохранение, КодИФНС, КПП, Вариант, , НаимТекРаздела);
		
КонецФункции

&НаСервере
Функция Сохранить(Автосохранение = Ложь, КодИФНС, КПП, Вариант, ВидДокументаНомерКорректировкиИзменен = Неопределено, НаимТекРаздела) Экспорт
	
	ДанныеДляРазблокирования = Неопределено;
	
	Если НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы Тогда
			ДанныеДляРазблокирования = Новый Структура("Ключ,ИдФормы",
				СтруктураРеквизитовФормы.мСохраненныйДок, УникальныйИдентификатор);
		КонецЕсли;
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.ПолучитьОбъект();
	КонецЕсли;
	
	Если НЕ РегламентированнаяОтчетность.ПриЗаписиРегламентированногоОтчетаНаСервере(
		ЭтотОбъект, КодИФНС, Автосохранение, Вариант, ВидДокументаНомерКорректировкиИзменен,
		СтруктураРеквизитовФормы.мСохраненныйДок) Тогда
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		Возврат Ложь;
	КонецЕсли;
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										НаимТекРаздела);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	РазделыРеглОтчета = ОбъектОтчета.РазделыРеглОтчета(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	РазделыРеглОтчета.Титульный = СтруктураДанныхТитульный;
	
	СтруктураРеквизитовФормы.мВариант = Вариант;
	
	ПараметрыЗаписи = Новый Структура;
	ПараметрыЗаписи.Вставить("ИсточникОтчета", ИмяОтчета(ИмяФормы));
	ПараметрыЗаписи.Вставить("ИмяФормыОтчета", СтруктураРеквизитовФормы.мВыбраннаяФорма);
	ПараметрыЗаписи.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыЗаписи.Вставить("ДатаНачала", СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыЗаписи.Вставить("ДатаОкончания", СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыЗаписи.Вставить("СохраняемыйРеглОтчет", СтруктураРеквизитовФормы.мСохраненныйДок);
	ПараметрыЗаписи.Вставить("ДатаПодписи", ДатаПодписи);
	ПараметрыЗаписи.Вставить("ЕдиницаИзмерения", СтруктураРеквизитовФормы.ЕдиницаИзмерения);
	ПараметрыЗаписи.Вставить("ТочностьЕдиницыИзмерения", СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения);
	ПараметрыЗаписи.Вставить("Комментарий", Комментарий);
	ПараметрыЗаписи.Вставить("КодИФНС", КодИФНС);
	ПараметрыЗаписи.Вставить("КПП", КПП);
	ПараметрыЗаписи.Вставить("СтруктураМногоуровневыхРазделов", мСтруктураМногоуровневыхРазделов);
	ПараметрыЗаписи.Вставить("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы);
	ПараметрыЗаписи.Вставить("ВерсияФормы", СтруктураРеквизитовФормы.мВерсияФормы);
	ПараметрыЗаписи.Вставить("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыЗаписи.Вставить("Автозаполнение", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыЗаписи.Вставить("ПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	ПараметрыЗаписи.Вставить("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыЗаписи.Вставить("ДеревоСтраницОтчета", РеквизитФормыВЗначение("мДеревоСтраницОтчета"));
	ПараметрыЗаписи.Вставить("Вариант", СтруктураРеквизитовФормы.мВариант);
	ПараметрыЗаписи.Вставить("РазделыОтчета", РазделыРеглОтчета);
	ПараметрыЗаписи.Вставить("НаименованиеОтчета", СтруктураРеквизитовФормы.НаименованиеОтчета);
	ПараметрыЗаписи.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", 
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
		
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПередЗаписьюНаСервере(ЭтотОбъект,
		СтруктураРеквизитовФормы.мСохраненныйДок, Новый Структура);
	//
	// ПроцессыОбработкиДокументов
	
	Если ОбъектОтчета.ЗаписатьДокумент(СтруктураРеквизитовФормы.мВыбраннаяФорма, ПараметрыЗаписи) = Ложь Тогда
		
		Если НЕ Автосохранение Тогда
			ОбщегоНазначения.СообщитьПользователю(ПараметрыЗаписи.Ошибки[0]);
		КонецЕсли;
		
		СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	// ПроцессыОбработкиДокументов
	//
	РегламентированнаяОтчетность.ПослеЗаписиНаСервере(ЭтотОбъект,
		СтруктураРеквизитовФормы.мСохраненныйДок, Новый Структура);
	//
	// ПроцессыОбработкиДокументов
	
	РегламентированнаяОтчетность.СохранитьСтатусОтправкиРеглОтчета(ЭтотОбъект);
	
	Модифицированность = Ложь;
	
	СтруктураРеквизитовФормы.мСохраненныйДок = СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка;
	
	Если НЕ СтруктураРеквизитовФормы.мБезОткрытияФормы
		И НЕ СтруктураРеквизитовФормы.мСохраненныйДок = Неопределено Тогда
		ЗаблокироватьДанныеДляРедактирования(СтруктураРеквизитовФормы.мСохраненныйДок, , УникальныйИдентификатор);
	КонецЕсли;
	
	Если ДанныеДляРазблокирования <> Неопределено Тогда
		РазблокироватьДанныеДляРедактирования(ДанныеДляРазблокирования.Ключ, ДанныеДляРазблокирования.ИдФормы);
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область ВосстановлениеСохраненныхДанныхОтчета

&НаСервере
Процедура ВосстановитьСохраненныеДанные()
	Перем ДанныеМногоуровневыхРазделов;
	Перем ПоказателиОтчета;
	Перем Автозаполнение;
	Перем ТаблицаМногостраничногоДокумента;
	
	// В случае, если формы была скопирована по F9, то проверим, не изменилась ли организация.
	Если НЕ ЗначениеЗаполнено(СтруктураРеквизитовФормы.Организация) Тогда
		СтруктураРеквизитовФормы.Организация = СтруктураРеквизитовФормы.мСохраненныйДок.Организация;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ЕдиницаИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ЕдиницаИзмерения;
	СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения = СтруктураРеквизитовФормы.мСохраненныйДок.ТочностьЕдиницыИзмерения;
	ДатаПодписи = СтруктураРеквизитовФормы.мСохраненныйДок.ДатаПодписи;
	Комментарий = СтруктураРеквизитовФормы.мСохраненныйДок.Комментарий;
	
	СписокСохранения = ОбъектОтчета(ИмяФормы).СохраненныеДанныеОтчета(
	СтруктураРеквизитовФормы.мВыбраннаяФорма, СтруктураРеквизитовФормы, мСтруктураМногоуровневыхРазделов);
	
	ДеревоНастройкиСтраниц = СтруктураРеквизитовФормы.мСохраненныйДок.ДеревоНастройкиСтраниц.Получить();
	ЗначениеВРеквизитФормы(ДеревоНастройкиСтраниц.Скопировать(), "мДеревоСтраницОтчета");
	
	СписокСохранения.Свойство("ПоказателиОтчета", ПоказателиОтчета);
	
	Если СписокСохранения.Свойство("ДанныеМногоуровневыхРазделов", ДанныеМногоуровневыхРазделов) Тогда
		Для Каждого ЭлементСтруктуры Из ДанныеМногоуровневыхРазделов Цикл
			Если НЕ СтруктураРеквизитовФормы.Свойство("АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ) Тогда
				СтруктураРеквизитовФормы.Вставить("АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ, Неопределено);
			КонецЕсли;
			РегламентированнаяОтчетность.ПоместитьВКэш(ЭлементСтруктуры.Значение, УникальныйИдентификатор,
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ЭлементСтруктуры.Ключ]);
		КонецЦикла;
	КонецЕсли;
	
	СписокСохранения.Свойство("ФлОтклВыборЗначений", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	Если СтруктураРеквизитовФормы.мАвтоВыборКодов = Неопределено Тогда
		СтруктураРеквизитовФормы.мАвтоВыборКодов = Ложь;
	КонецЕсли;
	
	СписокСохранения.Свойство("ФлПроверятьСоотношенияПриПечатиИВыгрузки", 
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = 
		?(СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Неопределено, Ложь, 
		СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	
	СписокСохранения.Свойство("Автозаполнение", Автозаполнение);
	СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Автозаполнение;
	
	Если НЕ СписокСохранения.Свойство("ПечатьБезШтрихкодаРазрешена",
		СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена) Тогда
		СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена = Ложь;
	КонецЕсли;
	
	Если НЕ СписокСохранения.Свойство("ФлПодсчетСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц) Тогда
		СтруктураРеквизитовФормы.мСчетчикСтраниц = Ложь;
	КонецЕсли;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураДанныхТитульный = ПоказателиОтчета["ПолеТабличногоДокументаТитульный"];
	
	Для Каждого ЭлСтруктуры Из СтруктураДанныхТитульный Цикл
		Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
		Если Обл <> Неопределено Тогда
			Обл.Значение = ЭлСтруктуры.Значение;
		КонецЕсли;
	КонецЦикла;
	
	РегламентированнаяОтчетность.ОперацииПриВосстановленииРегламентированногоОтчета(ЭтотОбъект);
	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработкаСобытийВТабличномДокументе

&НаКлиенте
Процедура ТабличныйДокументВыбор(Элемент, Область, СтандартнаяОбработка)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	Если СтрЧислоВхождений(Область.Имя, "ДобавитьСтроку") = 1 И Область.Текст <> "" Тогда
		ДобавитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтроку") = 1 И Область.Текст <> "" Тогда
		УдалитьСтроку("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "ДобавитьСтраницу") > 0 И Область.Текст <> "" Тогда
		ДобавитьСтраницу("");
	ИначеЕсли СтрЧислоВхождений(Область.Имя, "УдалитьСтраницу") > 0 И Область.Текст <> "" Тогда
		УдалитьСтраницу("");
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "ПечататьСтраницуРаздела3") Тогда
		Печать("ПоказатьБланкСтраницыРаздела3");
	ИначеЕсли Область.Имя = "СобратьДанные" Тогда
		СобратьДанные();
	КонецЕсли;
	
	Если РегламентированнаяОтчетностьКлиент.ВыбраннаяОбластьРегламентированногоОтчетаНеВерна(
		ЭтотОбъект, Область, СтандартнаяОбработка) Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "НалоговыйОрган" Тогда
		
		СтандартнаяОбработка = Ложь;
		ОбработкаВыбораИФНС();
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00018М107001")
		ИЛИ Область.Имя = "П000310008001" Тогда
		
		СтандартнаяОбработка = Ложь;
		ФормаВыбора = ПолучитьФорму("Справочник.СтраныМира.ФормаВыбора", Новый Структура("РежимВыбора", Истина), ЭтотОбъект);
		ФормаВыбора.Заголовок = "Выбор кода страны";
		ДополнительныеПараметры = Новый Структура("Область", Область);
		ФормаВыбора.ОписаниеОповещенияОЗакрытии
		= Новый ОписаниеОповещения("ОткрытьФормуВыбораСтраныЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ФормаВыбора.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбора.Открыть();
		
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00321М112001")
		ИЛИ СтрНачинаетсяС(Область.Имя, "П00322М118001") Тогда
		
		СтандартнаяОбработка = Ложь;
		
		ПоследнееЧисло = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ПервоеЧисло = ПоследнееЧисло - 2;
		
		СписокМесяцев = Новый СписокЗначений;
		СписокМесяцев.Добавить("", "Пустое значение");
		СписокМесяцев.Добавить("1", ПредставлениеМесяцаОтчетногоПериода("1"));
		СписокМесяцев.Добавить("2", ПредставлениеМесяцаОтчетногоПериода("2"));
		СписокМесяцев.Добавить("3", ПредставлениеМесяцаОтчетногоПериода("3"));
		
		ПоказатьВыборИзСписка(Новый ОписаниеОповещения("ВыбратьЧислоИзСпискаЗавершение", ЭтотОбъект, Область),
		СписокМесяцев, Элементы.ТабличныйДокумент.ТекущаяОбласть, СписокМесяцев.НайтиПоЗначению(СокрЛП(Область.Значение)));
		
	Иначе
		
		ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтотОбъект, Область.Имя);
		Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
			КодПоказателя = ПараметрВводаПоля.Показатель;
			КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
			ВвестиПоказатель(
			Элемент, Область, КодПоказателя, Ложь, ПараметрВводаПоля.ТекстПриВыборе, ТЗВыбора, СтандартнаяОбработка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	ИмяПоказателя = Область.Имя;
	ЗначПоказателя = Область.Значение;
	
	Если ИмяПоказателя = "ДатаПодписи" Тогда
		ДатаПодписи = Область.Значение;
		ЗаполнитьСведенияОбОрганизации(Истина);
		Модифицированность = Истина;
	ИначеЕсли ИмяПоказателя = "НомерКорректировки" Тогда
		ОписаниеТипа = Новый ОписаниеТипов("Число");
		НомерКорректировки = ОписаниеТипа.ПривестиЗначение(Область.Значение);
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Область.Значение = Строка(НомерКорректировки);
		РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(
		ДатаПодписи, СтруктураРеквизитовФормы, ТабличныйДокумент.Области.ОКВЭД.Значение);
		Модифицированность = Истина;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000010001001" ИЛИ ИмяПоказателя = "П000020001001" Тогда
		ОКТМО = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаОКТМО = СтрДлина(ОКТМО);
		Если ДлинаОКТМО = 11 ИЛИ ДлинаОКТМО = 8 ИЛИ ДлинаОКТМО = 0 Тогда
			Область.Значение = ОКТМО;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Код по ОКТМО должен состоять из 8 или 11 цифр. Значение очищено';
				|en = 'Код по ОКТМО должен состоять из 8 или 11 цифр. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000010002001" ИЛИ ИмяПоказателя = "П000010004001"
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00001М106001") ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00001М208001")
		ИЛИ ИмяПоказателя = "П000010010001" ИЛИ ИмяПоказателя = "П000020002001" ИЛИ ИмяПоказателя = "П000020004001" Тогда
		КБК = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКБК = СтрДлина(КБК);
		Если ДлинаКБК = 20 ИЛИ ДлинаКБК = 0 Тогда
			Область.Значение = КБК;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Код бюджетной классификации должен состоять из 20 цифр. Значение очищено';
				|en = 'Код бюджетной классификации должен состоять из 20 цифр. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000110000101" ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00012М100101") Тогда
		КодТарифа = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКодТарифа = СтрДлина(КодТарифа);
		Если ДлинаКодТарифа = 2 ИЛИ ДлинаКодТарифа = 0 Тогда
			Область.Значение = КодТарифа;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Код тарифа должен состоять из 2 цифр. Значение очищено';
															|en = 'Код тарифа должен состоять из 2 цифр. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00018М105001")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00021М104001") ИЛИ ИмяПоказателя = "П000310002001" Тогда
		ИННФЛ = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаИННФЛ = СтрДлина(ИННФЛ);
		Если ДлинаИННФЛ = 12 ИЛИ ДлинаИННФЛ = 0 Тогда
			Область.Значение = ИННФЛ;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'ИНН физического лица должен состоять из 12 цифр. Значение очищено';
				|en = 'ИНН физического лица должен состоять из 12 цифр. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00018М106001")
		ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00021М105001") ИЛИ ИмяПоказателя = "П000310003001" Тогда
		СНИЛС = СокрЛП(ЗначПоказателя);
		ДлинаСНИЛС = СтрДлина(СНИЛС);
		Символ4 = "";
		Символ8 = "";
		Символ12 = "";
		Если ДлинаСНИЛС = 14 Тогда
			Символ4 = Сред(СНИЛС, 4, 1);
			Символ8 = Сред(СНИЛС, 8, 1);
			Символ12 = Сред(СНИЛС, 12, 1);
		КонецЕсли;
		Если ДлинаСНИЛС = 0 ИЛИ (ДлинаСНИЛС = 14
			И Символ4 = "-" И Символ8 = "-" И (Символ12 = " " ИЛИ Символ12 = "-")) Тогда
			Область.Значение = СНИЛС;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'СНИЛС должен состоять из 14 символов и соответствовать одному из шаблонов: ""ХХХ-ХХХ-ХХХ-ХХ"", ""ХХХ-ХХХ-ХХХ ХХ"" (X - любая цифра). Значение очищено';
				|en = 'СНИЛС должен состоять из 14 символов и соответствовать одному из шаблонов: ""ХХХ-ХХХ-ХХХ-ХХ"", ""ХХХ-ХХХ-ХХХ ХХ"" (X - любая цифра). Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00021М106501") ИЛИ ИмяПоказателя = "П000310010001" Тогда
		КодВидаДокумента = СтрЗаменить(ЗначПоказателя, " ", "");
		ДлинаКодВидаДокумента = СтрДлина(КодВидаДокумента);
		Если ДлинаКодВидаДокумента = 2 ИЛИ ДлинаКодВидаДокумента = 0 Тогда
			Область.Значение = КодВидаДокумента;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Код вида документа должен состоять из 2 цифр. Значение очищено';
				|en = 'Код вида документа должен состоять из 2 цифр. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П00021М106701") ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П00021М106702") Тогда
		ВведенноеЗначение = СтрЗаменить(СокрЛП(ЗначПоказателя), "№", "");
		_Постфикс = Сред(ИмяПоказателя, СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
		СерияДокумента = СтрЗаменить(СокрЛП(ТабличныйДокумент.Области.Найти("П00021М106701" + _Постфикс).Значение), "№", "");
		НомерДокумента = СтрЗаменить(СокрЛП(ТабличныйДокумент.Области.Найти("П00021М106702" + _Постфикс).Значение), "№", "");
		Если СтрДлина(СерияДокумента) + СтрДлина(НомерДокумента) <= 24 Тогда
			Область.Значение = ВведенноеЗначение;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено';
				|en = 'Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000310011001" ИЛИ ИмяПоказателя = "П000310011002" Тогда
		ВведенноеЗначение = СтрЗаменить(СокрЛП(ЗначПоказателя), "№", "");
		СерияДокумента = СтрЗаменить(СокрЛП(ТабличныйДокумент.Области.Найти("П000310011001").Значение), "№", "");
		НомерДокумента = СтрЗаменить(СокрЛП(ТабличныйДокумент.Области.Найти("П000310011002").Значение), "№", "");
		Если СтрДлина(СерияДокумента) + СтрДлина(НомерДокумента) <= 24 Тогда
			Область.Значение = ВведенноеЗначение;
		Иначе
			Область.Значение = "";
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено';
				|en = 'Общее количество символов в серии и номере документа не должно превышать 24. Значение очищено'"));
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П000010011") ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П000010012") Тогда
		ИмяПарногоПоказателя = ?(Лев(ИмяПоказателя, 10) = "П000010011",
		"П000010012", "П000010011") + Сред(ИмяПоказателя, 11);
		ОблПарногоПоказателя = ТабличныйДокумент.Области.Найти(ИмяПарногоПоказателя);
		Если ОблПарногоПоказателя <> Неопределено Тогда
			ЗначПарногоПоказателя = ОблПарногоПоказателя.Значение;
			Если ЗначениеЗаполнено(ЗначПоказателя) И ЗначениеЗаполнено(ЗначПарногоПоказателя) Тогда
				ОблПарногоПоказателя.Очистить();
				Стр1 = Сред(ИмяПоказателя, 9, 3);
				Стр2 = Сред(ИмяПарногоПоказателя, 9, 3);
				ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
					"ru = 'Не допускается одновременное заполнение строк %1 и %2. Значение в строке %2 очищено';
					|en = 'Не допускается одновременное заполнение строк %1 и %2. Значение в строке %2 очищено'"), Стр1, Стр2));
				РасчетНаКлиенте(ИмяРаздела, ИмяПарногоПоказателя);
				Мофицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ИмяПоказателя, "П000150005") ИЛИ СтрНачинаетсяС(ИмяПоказателя, "П000150006") Тогда
		Если Лев(ИмяПоказателя, 10) = "П000150005" Тогда
			ОблПарногоПоказателя1 = ТабличныйДокумент.Области.Найти("П000150006002");
			ОблПарногоПоказателя2 = ТабличныйДокумент.Области.Найти("П000150006003");
		Иначе
			ОблПарногоПоказателя1 = ТабличныйДокумент.Области.Найти("П000150005002");
			ОблПарногоПоказателя2 = ТабличныйДокумент.Области.Найти("П000150005003");
		КонецЕсли;
		Если ОблПарногоПоказателя1 <> Неопределено И ОблПарногоПоказателя2 <> Неопределено Тогда
			Если ЗначениеЗаполнено(ЗначПоказателя)
				И (ЗначениеЗаполнено(ОблПарногоПоказателя1.Значение) ИЛИ ЗначениеЗаполнено(ОблПарногоПоказателя2.Значение))Тогда
				Если ЗначениеЗаполнено(ОблПарногоПоказателя1.Значение) И ЗначениеЗаполнено(ОблПарногоПоказателя2.Значение) Тогда
					ТекстСообщения = "ru='Не допускается одновременное заполнение строк %1 и %2. Значения в строке %2 очищены'";
				Иначе
					ТекстСообщения = "ru='Не допускается одновременное заполнение строк %1 и %2. Значение в строке %2 очищено'";
				КонецЕсли;
				ОблПарногоПоказателя1.Очистить();
				ОблПарногоПоказателя2.Очистить();
				Стр1 = Сред(ИмяПоказателя, 9, 3);
				Стр2 = Сред(ОблПарногоПоказателя1.Имя, 9, 3);
				ОбщегоНазначенияКлиент.СообщитьПользователю(
					СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(ТекстСообщения), Стр1, Стр2));
				Мофицированность = Истина;
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000310004001"
		ИЛИ ИмяПоказателя = "П000310005001"
		ИЛИ ИмяПоказателя = "П000310006001"
		ИЛИ ИмяПоказателя = "П000310007001" Тогда
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("Фам", ТабличныйДокумент.Область("П000310004001").Значение);
		СтруктПарам.Вставить("Имя", ТабличныйДокумент.Область("П000310005001").Значение);
		СтруктПарам.Вставить("Отч", ТабличныйДокумент.Область("П000310006001").Значение);
		СтруктПарам.Вставить("ДатаРожд", ТабличныйДокумент.Область("П000310007001").Значение);
		СтруктПарам.Вставить("НомерСтраницы",
		Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьЭлементы()[0].КолонкаРазделыОтчета
			= РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
		Иначе
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
		КонецЕсли;
	КонецЕсли;
	
	Если ИмяПоказателя = "П000110000101" Тогда
		СтруктПарам = Новый Структура;
		СтруктПарам.Вставить("КодТарифа", ТабличныйДокумент.Область("П000110000101").Значение);
		СтруктПарам.Вставить("НомерСтраницы",
		Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьЭлементы()[0].КолонкаРазделыОтчета
			= ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		Иначе
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета = ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрВводаПоля = РегламентированнаяОтчетностьКлиентСервер.НайтиСвойстваПоказателя(ЭтотОбъект, ИмяПоказателя);
	
	Если ПараметрВводаПоля <> Неопределено И ПараметрВводаПоля.ТаблицаЗначений.Количество() > 0 Тогда
		КопироватьДанныеФормы(ПараметрВводаПоля.ТаблицаЗначений, ТЗВыбора);
		ЭлТЗВыбора = ТЗВыбора.НайтиСтроки(Новый Структура("Код", ЗначПоказателя));
	КонецЕсли;
	
	ИмяОбласти = Область.Имя;
	Если ИмяРаздела <> "Титульный" Тогда
		ПозицияПодстроки = СтрНайти(ИмяОбласти, "_");
		Если ПозицияПодстроки > 0 Тогда
			ИмяОбласти = Лев(ИмяОбласти, ПозицияПодстроки - 1);
		КонецЕсли;
	КонецЕсли;
	
	ПараметрыВводаПоля = СвойстваПоказателей.НайтиСтроки(Новый Структура("Показатель", ИмяОбласти));
	Если ПараметрыВводаПоля.Количество() > 0 Тогда
		ПараметрВводаПоля = ПараметрыВводаПоля[0];
		Если СтрДлина(СокрЛП(ЗначПоказателя)) <> 0 И ПараметрВводаПоля.Длина <> 0
			И СтрДлина(СокрЛП(ЗначПоказателя)) <> ПараметрВводаПоля.Длина Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru='Длина значения показателя должна быть равна " + ПараметрВводаПоля.Длина + "'"));
		КонецЕсли;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	Если ИмяРаздела = "Титульный" И (Область.Имя = "КодФормыРеорганизации" ИЛИ Область.Имя = "ПоМесту") Тогда
		ЗаполнитьПериодОтчета(ЭтотОбъект);
	КонецЕсли;
	
	// Особая обработка для подраздела 3.2 раздела 3.
	Если Область.Имя = "П000030001001" И СокрЛП(Область.Значение) = "1" Тогда
		УдалитьДополнительныеСтрокиВРазделе3();
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ИмяРаздела);
	
	Если СтруктураЗависимыхЯчеекДляАвторасчета.Свойство(ИмяРаздела) Тогда
		РасчетНаКлиенте(ИмяРаздела, Область.Имя);
	КонецЕсли;
	
	Если СтрНачинаетсяС(Область.Имя, "П00018М108003") Тогда
		СтруктураРеквизитовФормы.Вставить("БезПереходаВТабличномДокументе");
		Элемент.ТекущаяОбласть = ТабличныйДокумент.Область(СтрЗаменить(Область.Имя, "П00018М108003", "П00018М108004"));
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00018М108004") Тогда
		ИмяОбл = "П00018М102001" + РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(
		РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(Область.Имя) + 1);
		Обл = ТабличныйДокумент.Области.Найти(ИмяОбл);
		Если Обл <> Неопределено Тогда
			СтруктураРеквизитовФормы.Вставить("БезПереходаВТабличномДокументе");
			Элемент.ТекущаяОбласть = Обл;
		КонецЕсли;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "П00018М102001") Тогда
		ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ТабличныйДокументПриАктивизации(Элемент)
	
	// ПроцессыОбработкиДокументов
	//
	Если Элементы.ТабличныйДокумент.Защита Тогда
		
		Возврат;
		
	КонецЕсли;
	//
	// ПроцессыОбработкиДокументов
	
	Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Ложь;
	Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Ложь;
	
	ИмяГруппы = РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(
	СтруктураРеквизитовФормы, Элемент.ТекущаяОбласть.Имя);
	
	Если ЗначениеЗаполнено(ИмяГруппы) Тогда
		
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Истина;
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"][0];
		ИсхКолСтрок = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИсхКолСтрок"];
		Координаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(Элемент.ТекущаяОбласть.Имя);
		
		ТестИмя = ИмяПервойГрафы + Координаты
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ИсхКолСтрок + 1);
		
		Если СтрЧислоВхождений(Элемент.ТекущаяОбласть.Имя, "ДобавитьСтроку") = 0
			И ТабличныйДокумент.Области.Найти(ТестИмя) <> Неопределено Тогда
			Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Истина;
		КонецЕсли;
		
		// Особая обработка для подраздела 3.2 раздела 3.
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел3" Тогда
			Обл = ТабличныйДокумент.Области.Найти("П000030001001");
			Если Обл <> Неопределено И СокрЛП(Обл.Значение) = "1" Тогда
				Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Доступность = Ложь;
				Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Доступность = Ложь;
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		Элементы.ТабличныйДокументКонтекстноеМенюДобавитьСтроку.Заголовок = ДопТекст.ЗаголовокКонтекстногоМенюДобавитьСтроку;
		Элементы.ТабличныйДокументКонтекстноеМенюУдалитьСтроку.Заголовок = ДопТекст.ЗаголовокКонтекстногоМенюУдалитьСтроку;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.Свойство("БезПереходаВТабличномДокументе") Тогда
		ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.БезПерехода;
		СтруктураРеквизитовФормы.Удалить("БезПереходаВТабличномДокументе");
	Иначе
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы18М1 ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1
			ИЛИ ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы21М1 Тогда
			ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоСтрокам;
		Иначе
			ТабличныйДокумент.НаправлениеПерехода = ТипНаправленияПереходаТабличногоДокумента.ПоКолонкам;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНС()
	
	КодИМНС = СокрЛП(ТабличныйДокумент.Области.НалоговыйОрган.Значение);
	КПП = СокрЛП(ТабличныйДокумент.Области.КПП.Значение);
	ЗначенияДляОтбора = Новый Массив;
	ЗначенияДляОтбора.Добавить(Новый Структура("КодНО, КПП", КодИМНС, КПП));
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыФормы.Вставить("ЗначенияДляОтбора", ЗначенияДляОтбора);
	
	ФормаВыбораНалоговогоОргана = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
	"ФормаВыбораНалоговогоОргана", ПараметрыФормы, ЭтотОбъект);
	
	Если ФормаВыбораНалоговогоОргана.ТаблицаНО.Количество() <> 0 Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ОбработкаВыбораИФНСЗавершение", ЭтотОбъект);
		ФормаВыбораНалоговогоОргана.ОписаниеОповещенияОЗакрытии = ОписаниеОповещения;
		ФормаВыбораНалоговогоОргана.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
		ФормаВыбораНалоговогоОргана.Открыть();
	ИначеЕсли НЕ ЗначениеЗаполнено(КодИМНС) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Код налогового органа необходимо задать в справочнике ""Организации""';
			|en = 'Код налогового органа необходимо задать в справочнике ""Организации""'"));
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
	Иначе
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
			"ru = 'Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе""';
			|en = 'Для выбора инспекции, необходимо завести соответствующую запись в справочнике ""Регистрации в налоговом органе""'"));
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
			УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаВыбораИФНСЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	Если РезультатВыбора <> Неопределено Тогда
		ВыбранныйКодНО = РезультатВыбора.КодНО;
		ДлинаКодаНО = СтрДлина(ВыбранныйКодНО);
		
		Для Инд = ДлинаКодаНО + 1 По 4 Цикл
			ВыбранныйКодНО = "0" + ВыбранныйКодНО;
		КонецЦикла;
		
		ТабличныйДокумент.Области["НалоговыйОрган"].Значение = ВыбранныйКодНО;
		ТабличныйДокумент.Области["КПП"].Значение = РезультатВыбора.КПП;
		
		УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте_ЗаполнитьСведенияОПодписантах(РезультатВыбора.Ссылка);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте_ЗаполнитьСведенияОПодписантах(СсылкаНаРегистрациюВНО)
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПоМесту", СокрЛП(ТабличныйДокумент.Области.ПоМесту.Значение));
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																			   СсылкаНаРегистрациюВНО,
																			   СтруктураРеквизитовФормы,
																			   ДополнительныеПараметры);
	
	ОбъектОтчета.ЗаполнитьСведенияОПодписантах(СтруктураРеквизитовФормы.мВыбраннаяФорма,
											   СтруктураРеквизитовФормы,
											   ТабличныйДокумент,
											   ДатаПодписи,
											   СсылкаНаРегистрациюВНО);
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраныЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Область = ДополнительныеПараметры.Область;
	
	Если Результат <> Неопределено Тогда
		РеквизитыЭлемента = РеквизитыЭлементаСправочника(Результат);
		Если Область.Значение = РеквизитыЭлемента.ЦифровойКод Тогда
			Область.Очистить();
		Иначе
			Область.Значение = РеквизитыЭлемента.ЦифровойКод;
		КонецЕсли;
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция РеквизитыЭлементаСправочника(Результат)
	
	Возврат Новый Структура("ЦифровойКод", Результат.Код);
	
КонецФункции

&НаКлиенте
Процедура ВыбратьЧислоИзСпискаЗавершение(ВыбЭлемент, ДополнительныйПараметр) Экспорт
	
	Если ВыбЭлемент <> Неопределено Тогда
		Если ВыбЭлемент.Значение <> ДополнительныйПараметр.Значение Тогда
			ДополнительныйПараметр.Значение = ВыбЭлемент.Значение;
			Модифицированность = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПредставлениеМесяцаОтчетногоПериода(НомерМесяцаСтрокой)
	
	ПоследнийМесяцОтчетногоПериода = Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	
	Если ПоследнийМесяцОтчетногоПериода = 3 Тогда
		Если НомерМесяцаСтрокой = "1" Тогда
			Возврат НСтр("ru = '1 - январь';
						|en = '1 - январь'");
		ИначеЕсли НомерМесяцаСтрокой = "2" Тогда
			Возврат НСтр("ru = '2 - февраль';
						|en = '2 - февраль'");
		ИначеЕсли НомерМесяцаСтрокой = "3" Тогда
			Возврат НСтр("ru = '3 - март';
						|en = '3 - март'");
		КонецЕсли;
	ИначеЕсли ПоследнийМесяцОтчетногоПериода = 6 Тогда
		Если НомерМесяцаСтрокой = "1" Тогда
			Возврат НСтр("ru = '1 - апрель';
						|en = '1 - апрель'");
		ИначеЕсли НомерМесяцаСтрокой = "2" Тогда
			Возврат НСтр("ru = '2 - май';
						|en = '2 - май'");
		ИначеЕсли НомерМесяцаСтрокой = "3" Тогда
			Возврат НСтр("ru = '3 - июнь';
						|en = '3 - июнь'");
		КонецЕсли;
	ИначеЕсли ПоследнийМесяцОтчетногоПериода = 9 Тогда
		Если НомерМесяцаСтрокой = "1" Тогда
			Возврат НСтр("ru = '1 - июль';
						|en = '1 - июль'");
		ИначеЕсли НомерМесяцаСтрокой = "2" Тогда
			Возврат НСтр("ru = '2 - август';
						|en = '2 - август'");
		ИначеЕсли НомерМесяцаСтрокой = "3" Тогда
			Возврат НСтр("ru = '3 - сентябрь';
						|en = '3 - сентябрь'");
		КонецЕсли;
	ИначеЕсли ПоследнийМесяцОтчетногоПериода = 12 Тогда
		Если НомерМесяцаСтрокой = "1" Тогда
			Возврат НСтр("ru = '1 - октябрь';
						|en = '1 - октябрь'");
		ИначеЕсли НомерМесяцаСтрокой = "2" Тогда
			Возврат НСтр("ru = '2 - ноябрь';
						|en = '2 - ноябрь'");
		ИначеЕсли НомерМесяцаСтрокой = "3" Тогда
			Возврат НСтр("ru = '3 - декабрь';
						|en = '3 - декабрь'");
		КонецЕсли;
	КонецЕсли;
	
КонецФункции

&НаКлиенте
Функция ДополнительныйТекстПриДобавленииУдаленииСтрок(Знач ИмяГруппы)
	
	Если НЕ ЗначениеЗаполнено(ИмяГруппы) Тогда
		Возврат Неопределено;
	ИначеЕсли НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Подстрока = "строку";
	ТекстВопроса = НСтр("ru = 'Удалить выбранную строку?';
						|en = 'Удалить выбранную строку?'");
	
	ДопТекст = Новый Структура;
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюДобавитьСтроку", "Добавить " + Подстрока);
	ДопТекст.Вставить("ЗаголовокКонтекстногоМенюУдалитьСтроку", "Удалить " + Подстрока);
	ДопТекст.Вставить("ТекстВопросаПередУдалениемСтроки", ТекстВопроса);
	
	Возврат ДопТекст;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьДоступностьОбластей(Форма, ИмяРаздела)
	
	АвтоРасчПоказатели = Новый Массив;
	
	Если ИмяРаздела = "Титульный" Тогда
		
		ОблНаимОрг       = Форма.ТабличныйДокумент.Области.НаимОрг;
		ОблКодФормыРеорг = Форма.ТабличныйДокумент.Области.КодФормыРеорганизации;
		ОблКодИННРеорг   = Форма.ТабличныйДокумент.Области.ИННРеорганизованнойОрганизации;
		ОблКодКППРеорг   = Форма.ТабличныйДокумент.Области.КППРеорганизованнойОрганизации;
		
		ЗначПоМесту = СокрЛП(Форма.ТабличныйДокумент.Области.ПоМесту.Значение);
		
		Если НЕ Форма.СтруктураРеквизитовФормы.ИП Тогда
			
			РазрешитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			
			ЗначКодФормыРеорг = СокрЛП(ОблКодФормыРеорг.Значение);
			
			Если ЗначениеЗаполнено(ЗначКодФормыРеорг) И ЗначКодФормыРеорг <> "0" Тогда
				
				Если ЗначПоМесту = "217" Тогда
					РазрешитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				Иначе
					ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
					Форма.ТабличныйДокумент.Области.НаимОрг.Значение
					= Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				КонецЕсли;
				
				РазрешитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				РазрешитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			Иначе
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблНаимОрг);
				Форма.ТабличныйДокумент.Области.НаимОрг.Значение = Форма.СтруктураРеквизитовФормы.НачальноеЗначениеНаимОрганизации;
				
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
				ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
				
			КонецЕсли;
			
		Иначе
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодФормыРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодИННРеорг);
			ЗапретитьВводДанныхВОбласть(Форма, ОблКодКППРеорг);
		КонецЕсли;
		
		Если Форма.СтруктураРеквизитовФормы.ИП И (ЗначПоМесту = "120" ИЛИ ЗначПоМесту = "124") Тогда
			РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Период);
		Иначе
			ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Период, Ложь);
		КонецЕсли;
		
		Форма.ТабличныйДокумент.Области["СекцияПояснение_НомерКорректировки"].Видимость
		= Форма.ТабличныйДокумент.Области.НомерКорректировки.Значение > 0;
		
	ИначеЕсли ИмяРаздела = "Раздел1" Тогда
		
		ТипПлательщика = СокрЛП(Форма.ТабличныйДокумент.Области.П000010000101.Значение);
		
		Если ТипПлательщика = "2" Тогда
			
			Для каждого Обл Из Форма.ТабличныйДокумент.Области Цикл
				Если Обл.Имя = "П000010003101" ИЛИ Обл.Имя = "П000010003201" ИЛИ Обл.Имя = "П000010003301"
					ИЛИ Обл.Имя = "П000010005101" ИЛИ Обл.Имя = "П000010005201" ИЛИ Обл.Имя = "П000010005301"
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107101") ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107201")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107301")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209101") ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209201")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209301")
					ИЛИ Обл.Имя = "П000010012101" ИЛИ Обл.Имя = "П000010012201" ИЛИ Обл.Имя = "П000010012301" Тогда
					ЗапретитьВводДанныхВОбласть(Форма, Обл);
				ИначеЕсли Обл.Имя = "П000010003001" ИЛИ Обл.Имя = "П000010005001"
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107001") ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209001")
					ИЛИ Обл.Имя = "П000010011001" ИЛИ Обл.Имя = "П000010012001" Тогда
					РазрешитьВводДанныхВОбласть(Форма, Обл);
				КонецЕсли;
			КонецЦикла;
			
		Иначе
			
			Для каждого Обл Из Форма.ТабличныйДокумент.Области Цикл
				Если Обл.Имя = "П000010003101" ИЛИ Обл.Имя = "П000010003201" ИЛИ Обл.Имя = "П000010003301"
					ИЛИ Обл.Имя = "П000010005101" ИЛИ Обл.Имя = "П000010005201" ИЛИ Обл.Имя = "П000010005301"
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107101") ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107201")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М107301")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209101") ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209201")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "П00001М209301")
					ИЛИ Обл.Имя = "П000010012101" ИЛИ Обл.Имя = "П000010012201" ИЛИ Обл.Имя = "П000010012301" Тогда
					РазрешитьВводДанныхВОбласть(Форма, Обл);
				КонецЕсли;
			КонецЦикла;
			
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если НЕ СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М1)
					И НЕ СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ);
				КонецЕсли;
			КонецЦикла;
			
			Инд = 1;
			Инд_Строка = "_1";
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М107101" + Инд_Строка);
			Пока Обл <> Неопределено Цикл
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Если СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М1) Тогда
						АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
					КонецЕсли;
				КонецЦикла;
				Инд = Инд + 1;
				Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
				Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М107101" + Инд_Строка);
			КонецЦикла;
			
			Инд = 1;
			Инд_Строка = "_1";
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М209101" + Инд_Строка);
			Пока Обл <> Неопределено Цикл
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Если СтрНачинаетсяС(Пок.Ключ, Форма.СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
						АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
					КонецЕсли;
				КонецЦикла;
				Инд = Инд + 1;
				Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
				Обл = Форма.ТабличныйДокумент.Области.Найти("П00001М209101" + Инд_Строка);
			КонецЦикла;
			
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" ИЛИ ИмяРаздела = "Раздел1Прил3" ИЛИ ИмяРаздела = "Раздел1Прил4"
		ИЛИ ИмяРаздела = "Раздел1Прил5" ИЛИ ИмяРаздела = "Раздел1Прил6" ИЛИ ИмяРаздела = "Раздел1Прил7" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			АвтоРасчПоказатели.Добавить(Пок.Ключ);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил2" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		ИмяГруппы = Форма.СтруктураРеквизитовФормы.мИдГруппы12М1;
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если НЕ СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00012М101001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если СтрНачинаетсяС(Пок.Ключ, ИмяГруппы) Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00012М101001" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П11131М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П11131М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П11132М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П11132М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1_1" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00111М101002" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
			КонецЦикла;
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00111М101002" + Инд_Строка);
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М108001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого" И Пок.Значение <> "Итог" Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00018М108001" + Инд_Строка);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		Инд = 1;
		Инд_Строка = "_1";
		Обл = Форма.ТабличныйДокумент.Области.Найти("П00019М108001" + Инд_Строка);
		Пока Обл <> Неопределено Цикл
			
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Если Пок.Ключ <> "Итого" И Пок.Значение <> "Итог" Тогда
					АвтоРасчПоказатели.Добавить(Пок.Ключ + Инд_Строка);
				КонецЕсли;
			КонецЦикла;
			
			Инд = Инд + 1;
			Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
			Обл = Форма.ТабличныйДокумент.Области.Найти("П00019М108001" + Инд_Строка);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
		
		Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
			Если Пок.Значение = "Итог" Тогда
				АвтоРасчПоказатели.Добавить(Пок.Ключ);
			КонецЕсли;
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ОблПрАннулирования = Форма.ТабличныйДокумент.Области.Найти("П000030001001");
		
		Если ОблПрАннулирования <> Неопределено Тогда
			
			ПрАннулирования = СокрЛП(ОблПрАннулирования.Значение);
			
			Форма.ТабличныйДокумент.Области["СекцияПояснение_Подраздел32"].Видимость = ПрАннулирования = "1";
			
			Ном = 1;
			Постфикс = "_1";
			Обл = Форма.ТабличныйДокумент.Области["П00321М112001_1"];
			Пока Обл <> Неопределено Цикл
				Если ПрАннулирования = "1" Тогда
					ЗапретитьВводДанныхВОбласть(Форма, Обл);
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М113001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М114001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М115001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М116001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М117001" + Постфикс));
				Иначе
					РазрешитьВводДанныхВОбласть(Форма, Обл);
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М113001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М114001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М115001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М116001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00321М117001" + Постфикс));
				КонецЕсли;
				Ном = Ном + 1;
				Постфикс = "_" + Формат(Ном, "ЧГ=");
				Обл = Форма.ТабличныйДокумент.Области.Найти("П00321М112001" + Постфикс);
			КонецЦикла;
			
			Ном = 1;
			Постфикс = "_1";
			Обл = Форма.ТабличныйДокумент.Области["П00322М118001_1"];
			Пока Обл <> Неопределено Цикл
				Если ПрАннулирования = "1" Тогда
					ЗапретитьВводДанныхВОбласть(Форма, Обл);
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М119001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М120001" + Постфикс));
					ЗапретитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М121001" + Постфикс));
				Иначе
					РазрешитьВводДанныхВОбласть(Форма, Обл);
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М119001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М120001" + Постфикс));
					РазрешитьВводДанныхВОбласть(Форма, Форма.ТабличныйДокумент.Области.Найти("П00322М121001" + Постфикс));
				КонецЕсли;
				Ном = Ном + 1;
				Постфикс = "_" + Формат(Ном, "ЧГ=");
				Обл = Форма.ТабличныйДокумент.Области.Найти("П00322М118001" + Постфикс);
			КонецЦикла;
			
			Ном = 0;
			Для каждого Обл Из Форма.ТабличныйДокумент.Области Цикл
				Если СтрНачинаетсяС(Обл.Имя, "ДобавлениеСтрокиП00321М1")
					ИЛИ СтрНачинаетсяС(Обл.Имя, "ДобавлениеСтрокиП00322М1") Тогда
					Если ПрАннулирования = "1" Тогда
						Обл.Видимость = Ложь;
					Иначе
						Обл.Видимость = Истина;
					КонецЕсли;
					Ном = Ном + 1;
					Если Ном = 2 Тогда
						Прервать;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Для каждого ИмяПок Из АвтоРасчПоказатели Цикл
		Обл = Форма.ТабличныйДокумент.Область(ИмяПок);
		Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
			Обл.Защита = Ложь;
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_0"];
		Иначе
			Обл.Защита = Истина;
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"];
		КонецЕсли;
	КонецЦикла;
	
	ПереопределитьЗначенияСвойствЯчеекТабличногоДокумента(Форма, ИмяРаздела);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ЗапретитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть, ОчищатьЗначение = Истина)
	
	ЦветНедоступнойОбласти = Форма.мСтруктураЦветовРаскраски["_5"];
	ОбрабатываемаяОбласть.Защита = Истина;
	ОбрабатываемаяОбласть.ЦветФона = ЦветНедоступнойОбласти;
	Если ОчищатьЗначение Тогда
		ОбрабатываемаяОбласть.Очистить();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РазрешитьВводДанныхВОбласть(Форма, ОбрабатываемаяОбласть)
	
	ЦветОбластиРучногоВвода = Форма.мСтруктураЦветовРаскраски["_0"];
	ОбрабатываемаяОбласть.Защита = Ложь;
	ОбрабатываемаяОбласть.ЦветФона = ЦветОбластиРучногоВвода;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ПереопределитьЗначенияСвойствЯчеекТабличногоДокумента(Форма, ИмяРаздела)
	
	Для каждого Обл Из Форма.ТабличныйДокумент.Области Цикл
		
		Если НЕ (СтрЧислоВхождений(Тип(Обл), "Рисунок") = 0
			И Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение = Истина И НЕ Обл.Защита) Тогда
			Продолжить;
		КонецЕсли;
		
		Если Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_4"]
			ИЛИ Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_5"] Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяГруппы = РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(
		Форма.СтруктураРеквизитовФормы, Обл.Имя);
		Если ИмяГруппы = Неопределено Тогда
			ИмяПоиска = Обл.Имя;
		Иначе
			ИмяПоиска = Лев(Обл.Имя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
		КонецЕсли;
		
		Если Форма.СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели.Свойство(ИмяПоиска)
			И Форма.СтруктураРеквизитовФормы.АвтозаполняемыеПоказатели[ИмяПоиска][0] Тогда
			Обл.ЦветФона = Форма.мСтруктураЦветовРаскраски["_3"];
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПомещениеДанныхИзМестХраненияВТабличныйДокумент

&НаСервере
Процедура ВывестиДанныеВТабличныйДокументНаСервере(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела);
	
	СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяТекРаздела;
	
КонецПроцедуры

&НаСервере
Процедура ВывестиДанныеВТабличныйДокумент(ИмяТекРаздела, НовыеНомераСтрокМногоуровнегоРаздела = Неопределено)
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
	ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяТекРаздела));
	
	// Многоуровневые разделы.
	//
	Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяТекРаздела) Тогда
		
		СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяТекРаздела];
		
		ИмяГлРаздела = Неопределено;
		СтруктураРаздела.Свойство("ИмяГлавногоРаздела", ИмяГлРаздела);
		ИмяГлРаздела = ?(ИмяГлРаздела = Неопределено, ИмяТекРаздела, ИмяГлРаздела);
		
		ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
		СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		ТекВетка = ДеревоДанныхРаздела;
		
		Для каждого НомерСтроки Из НовыеНомераСтрокМногоуровнегоРаздела Цикл
			ТекВетка = ТекВетка.Строки[НомерСтроки - 1];
		КонецЦикла;
		
		// Вывод немногострочных данных.
		Для Каждого ЭлСтруктуры Из ТекВетка.Данные Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
		// Отображение данных других разделов.
		Обл = ТабличныйДокумент.Области.Найти("П000110000101");
		Если Обл <> Неопределено И ИмяТекРаздела <> "Раздел1Прил1" Тогда
			Обл.Текст = ДеревоДанныхРаздела.Строки[НовыеНомераСтрокМногоуровнегоРаздела[0] - 1].Данные.П000110000101;
		КонецЕсли;
		
		// Добавление в многострочную часть необходимого количества дополнительных строк, вывод многострочных данных.
		ВывестиМногострочныеДанныеВТабличныйДокумент(ТекВетка);
		
		ДеревоДанныхРаздела = Неопределено;
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = НовыеНомераСтрокМногоуровнегоРаздела;
		
	// Обычные разделы.
	//
	Иначе
		
		Для Каждого ЭлСтруктуры Из ЭтотОбъект["СтруктураДанных" + ИмяТекРаздела] Цикл
			Обл = ТабличныйДокумент.Области.Найти(ЭлСтруктуры.Ключ);
			Если Обл <> Неопределено Тогда
				Обл.Значение = ЭлСтруктуры.Значение;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ИмяТекРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ВывестиМногострочныеДанныеВТабличныйДокумент(Ветка, Координаты = "")
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ДанныеМнЧ = Ветка.ДанныеМногострочныхЧастей;
	
	Для каждого ЭлемСтруктуры Из ДанныеМнЧ Цикл
		
		ДеревоМнЧ = ЭлемСтруктуры.Значение;
		
		Для Инд_Число = 0 По ДеревоМнЧ.Строки.Количество() - 1 Цикл
			
			// Добавление необходимого количества доп. строк.
			Если Инд_Число > 0 Тогда
				Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число);
				ИмяОбластиПреемника = "ДобавлениеСтроки" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				ОбъектОтчета.ВставитьДопСтроку(ИмяФормы,
											   СтруктураРеквизитовФормы,
											   ТабличныйДокумент,
											   ЭлемСтруктуры.Ключ,
											   ИмяОбластиПреемника);
				Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.ТекущаяОбласть;
			КонецЕсли;
			
			// Обработка гиперссылок удаления строки, если эта строка единственная.
			Если ДеревоМнЧ.Строки.Количество() = 1 Тогда
				Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(1);
				ИмяИскомойОбласти = "УдалитьСтроку" + ЭлемСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Гиперссылка = Ложь;
					Обл.Текст = "";
				КонецЕсли;
			КонецЕсли;
			
			// Вывод многострочных данных.
			Данные = ДеревоМнЧ.Строки[Инд_Число].Данные;
			Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число + 1);
			Для Каждого ЭлСтруктуры Из Данные Цикл
				ИмяИскомойОбласти = ЭлСтруктуры.Ключ + Координаты + Инд;
				Обл = ТабличныйДокумент.Области.Найти(ИмяИскомойОбласти);
				Если Обл <> Неопределено Тогда
					Обл.Значение = ЭлСтруктуры.Значение;
				КонецЕсли;
			КонецЦикла;
			
			// Добавление необходимого количества подчиненных доп. строк.
			ПодчВетка = ДеревоМнЧ.Строки[Инд_Число];
			ПодчКоординаты = Координаты + Инд;
			ВывестиМногострочныеДанныеВТабличныйДокумент(ПодчВетка, ПодчКоординаты);
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеСтраницМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтраницу(Команда)
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел1Прил1" ИЛИ ИмяРаздела = "Раздел3" Тогда
		ДобавитьСтраницуУровня0(ИмяРаздела);
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ИмяРаздела = "Раздел3" Тогда
		Обл = ТабличныйДокумент.Области.Найти("СекцияУдалитьСтраницу");
		Если Обл <> Неопределено Тогда
			Обл.Видимость = Истина;
		КонецЕсли;
	Иначе
		Обл = ТабличныйДокумент.Области["УдалитьСтраницуЗначок"];
		Обл.Гиперссылка = Истина;
		Обл.Текст = "х";
		Обл = ТабличныйДокумент.Области["УдалитьСтраницу"];
		Обл.Гиперссылка = Истина;
		Обл.Текст = "Удалить страницу";
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуУровня0(ИмяРаздела)
	
	ДеревоРаздела = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	// Нахождение строки в дереве значений, соответствующей текущей странице.
	ТекВетка = ДеревоРаздела.Строки[СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	// Помещение данных текущей страницы в структуры найденной строки.
	ДанныеТаблДокумента = ОбъектОтчета.ДанныеТабличногоДокумента(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																 ИмяРаздела,
																 мСтруктураМногоуровневыхРазделов,
																 ТабличныйДокумент,
																 СтруктураРеквизитовФормы);
	ТекВетка.Данные = ДанныеТаблДокумента.Данные;
	ТекВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Добавление новой страницы (добавляется строка в конец коллекции строк дерева значений).
	НовВетка = ДеревоРаздела.Строки.Добавить();
	// Добавление разделов, подчиненных новой странице.
	ОбъектОтчета.ИнициализироватьПодчиненныеРазделы(СтруктураРеквизитовФормы.мВыбраннаяФорма,
													ИмяРаздела,
													НовВетка,
													мСтруктураМногоуровневыхРазделов,
													ТабличныйДокумент,
													СтруктураРеквизитовФормы);
	НомерНовВетки = ДеревоРаздела.Строки.Количество();
	
	// Вывод и помещение начальных данных новой страницы в структуры вновь добавленной строки дерева значений.
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
	ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяРаздела));
	ДанныеТаблДокумента = ОбъектОтчета.ДанныеТабличногоДокумента(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																 ИмяРаздела,
																 мСтруктураМногоуровневыхРазделов,
																 ТабличныйДокумент,
																 СтруктураРеквизитовФормы);
	НовВетка.Данные = ДанныеТаблДокумента.Данные;
	НовВетка.ДанныеМногострочныхЧастей = ДанныеТаблДокумента.ДанныеМногострочныхЧастей;
	
	// Сохранение изменений в дереве значений.
	РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРаздела, УникальныйИдентификатор,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоРаздела = Неопределено;
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомерНовВетки;
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета
					= СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда)
	
	ИндексыВыделенныхСтраницРаздела = ИндексыВыделенныхСтраницРаздела();
	
	Если ИндексыВыделенныхСтраницРаздела <> Неопределено Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("ИндексыВыделенныхСтраницРаздела", ИндексыВыделенныхСтраницРаздела);
		
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		ТекстВопроса = НСтр("ru = 'Удалить выделенные страницы?';
							|en = 'Удалить выделенные страницы?'");
		
	Иначе
		
		ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтраницуЗавершение", ЭтотОбъект);
		ТекстВопроса = НСтр("ru = 'Удалить текущую страницу?';
							|en = 'Удалить текущую страницу?'");
		
	КонецЕсли;
	
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Нет Тогда
		Возврат;
	КонецЕсли;
	
	ИмяРаздела = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ИмяРаздела = "Раздел1Прил1" ИЛИ ИмяРаздела = "Раздел3" Тогда
		УдалитьСтраницуУровня0(ИмяРаздела, ДополнительныеПараметры);
	Иначе
		Возврат;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуУровня0(ИмяРаздела, ДополнительныеПараметры)
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
		И ДополнительныеПараметры.Свойство("ИндексыВыделенныхСтраницРаздела") Тогда
		
		СписокИндексовУдаляемыхСтраниц = Новый СписокЗначений;
		СписокИндексовУдаляемыхСтраниц.ЗагрузитьЗначения(ДополнительныеПараметры["ИндексыВыделенныхСтраницРаздела"]);
		СписокИндексовУдаляемыхСтраниц.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
		
		ИндексыУдаляемыхСтраниц = СписокИндексовУдаляемыхСтраниц.ВыгрузитьЗначения();
		
		ИндексПоследнейУдаляемойСтраницы = ИндексыУдаляемыхСтраниц[0];
		ИндексПоследнейСтраницы = ДеревоДанных.Строки.Количество() - 1;
		
		Если ИндексПоследнейУдаляемойСтраницы = ИндексПоследнейСтраницы Тогда
			СтраницаДляФокусированияПослеУдаления = Неопределено;
		Иначе
			СтраницаДляФокусированияПослеУдаления = ДеревоДанных.Строки[ИндексПоследнейУдаляемойСтраницы + 1];
		КонецЕсли;
		
		Для каждого ИндексУдаляемойСтраницы Из ИндексыУдаляемыхСтраниц Цикл
			ДеревоДанных.Строки.Удалить(ИндексУдаляемойСтраницы);
		КонецЦикла;
		
		Если СтраницаДляФокусированияПослеУдаления = Неопределено Тогда
			Если ДеревоДанных.Строки.Количество() = 0 Тогда
				ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыйРаздел(СтруктураРеквизитовФормы.мВыбраннаяФорма,
				СтруктураРеквизитовФормы, мСтруктураМногоуровневыхРазделов, ИмяРаздела);
				ДеревоДанных = ПолучитьИзВременногоХранилища(
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
				СтраницаДляФокусированияПослеУдаления = ДеревоДанных.Строки[0];
			Иначе
				СтраницаДляФокусированияПослеУдаления = ДеревоДанных.Строки[ДеревоДанных.Строки.Количество() - 1];
			КонецЕсли;
		КонецЕсли;
		
		НомСтраницыПослеУдаления = ДеревоДанных.Строки.Индекс(СтраницаДляФокусированияПослеУдаления) + 1;
		
	Иначе
		
		НомПоследнейСтраницы = ДеревоДанных.Строки.Количество();
		НомУдаляемойСтраницы = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0];
		
		НомСтраницыПослеУдаления
		= ?(НомУдаляемойСтраницы = НомПоследнейСтраницы, НомУдаляемойСтраницы - 1, НомУдаляемойСтраницы);
		
		ДеревоДанных.Строки.Удалить(НомУдаляемойСтраницы - 1);
		
	КонецЕсли;
	
	// Сохранение изменений в дереве значений.
	РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоДанных, УникальныйИдентификатор,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
	
	ДеревоДанных = Неопределено;
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] = НомСтраницыПослеУдаления;
	
	// Вывод данных строки дерева значений после удаления страницы.
	ВывестиДанныеВТабличныйДокумент(ИмяРаздела, СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
		Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
			Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
				Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = НомСтраницыПослеУдаления Тогда
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Функция ИндексыВыделенныхСтраницРаздела()
	
	ИндексыВыделенныхСтраниц = Неопределено;
	
	Если ТипЗнч(Элементы.РазделыОтчета.ВыделенныеСтроки) = Тип("Массив")
		И Элементы.РазделыОтчета.ВыделенныеСтроки.Количество() > 1 Тогда
		
		ИндексыВыделенныхСтраниц = Новый Массив;
		Для каждого ИдентификаторСтроки Из Элементы.РазделыОтчета.ВыделенныеСтроки Цикл
			
			ЭлементДерева = РазделыОтчета.НайтиПоИдентификатору(ИдентификаторСтроки);
			
			Если ЭлементДерева.КолонкаРазделыОтчетаСокрНаим <> СтруктураРеквизитовФормы.НаимТекущегоРаздела
				ИЛИ ЭлементДерева.ПолучитьРодителя() = Неопределено
				ИЛИ ЭлементДерева.ПолучитьРодителя().ПолучитьЭлементы().Количество() <= 1 Тогда
				
				Возврат Неопределено;
				
			КонецЕсли;
			
			ИндексыВыделенныхСтраниц.Добавить(ЭлементДерева.КолонкаНомерСтраницыРазделаОтчета - 1);
			
		КонецЦикла;
		
	КонецЕсли;
	
	Возврат ИндексыВыделенныхСтраниц;
	
КонецФункции

&НаКлиенте
Процедура СпрятатьСсылкуУдалитьСтраницу()
	
	Если Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() <> Неопределено Тогда
		ЭлементыРодителя = Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы();
		Если (ЭлементыРодителя.Количество() > 1)
			И (ЭлементыРодителя[0].КолонкаРазделыОтчетаСокрНаим = ЭлементыРодителя[1].КолонкаРазделыОтчетаСокрНаим) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел3" Тогда
		Обл = ТабличныйДокумент.Области.Найти("СекцияУдалитьСтраницу");
		Если Обл <> Неопределено Тогда
			Обл.Видимость = Ложь;
		КонецЕсли;
	Иначе
		ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницуЗначок");
		Если ОблУдалитьСтраницу <> Неопределено Тогда
			ОблУдалитьСтраницу.Текст = "";
			ОблУдалитьСтраницу.Гиперссылка = Ложь;
		КонецЕсли;
		ОблУдалитьСтраницу = ТабличныйДокумент.Области.Найти("УдалитьСтраницу");
		Если ОблУдалитьСтраницу <> Неопределено Тогда
			ОблУдалитьСтраницу.Текст = "";
			ОблУдалитьСтраницу.Гиперссылка = Ложь;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ДобавлениеУдалениеДополнительныхСтрокМногострочныхЧастейМногоуровневыхРазделов

&НаКлиенте
Процедура ДобавитьСтроку(Команда)
	
	ТекстПредупреждения = "";
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		
		ИмяОбласти = ТабличныйДокумент.ТекущаяОбласть.Имя;
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтрокуЗначок", "");
		ИмяОбласти = СтрЗаменить(ИмяОбласти, "ДобавитьСтроку", "");
		
		Если СтрНачинаетсяС(ИмяОбласти, СтруктураРеквизитовФормы.мИдГруппы1М1) Тогда
			ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М1]["ИменаГраф"][0];
			Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_4") <> Неопределено Тогда
				ТекстПредупреждения = НСтр(
				"ru = 'Возможно не более четырех групп строк 060-073 в разделе 1';
				|en = 'Возможно не более четырех групп строк 060-073 в разделе 1'");
			КонецЕсли;
		ИначеЕсли СтрНачинаетсяС(ИмяОбласти, СтруктураРеквизитовФормы.мИдГруппы1М2) Тогда
			ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			СтруктураРеквизитовФормы.мИдГруппы1М2]["ИменаГраф"][0];
			Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
				ТекстПредупреждения = НСтр(
				"ru = 'Возможно не более двух групп строк 080-093 в разделе 1';
				|en = 'Возможно не более двух групп строк 080-093 в разделе 1'");
			КонецЕсли;
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11131М1]["ИменаГраф"][0];
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Возможно не более двух групп строк 001-050 в подразделе 1.3.1 приложения 1 к разделу 1';
			|en = 'Возможно не более двух групп строк 001-050 в подразделе 1.3.1 приложения 1 к разделу 1'");
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы11132М1]["ИменаГраф"][0];
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_10") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Возможно не более десяти групп строк 001-050 в подразделе 1.3.2 приложения 1 к разделу 1';
			|en = 'Возможно не более десяти групп строк 001-050 в подразделе 1.3.2 приложения 1 к разделу 1'");
		КонецЕсли;
		
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1_1" Тогда
		
		ИмяПервойГрафы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
		СтруктураРеквизитовФормы.мИдГруппы111М1]["ИменаГраф"][0];
		Если ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + "_2") <> Неопределено Тогда
			ТекстПредупреждения = НСтр(
			"ru = 'Возможно не более двух групп строк 001-050 в приложении 1.1 к разделу 1';
			|en = 'Возможно не более двух групп строк 001-050 в приложении 1.1 к разделу 1'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ТекстПредупреждения) Тогда
		ПоказатьПредупреждение(, ТекстПредупреждения);
		Возврат;
	КонецЕсли;
	
	ВставитьДополнительнуюСтроку();
	
КонецПроцедуры

&НаСервере
Процедура ВставитьДополнительнуюСтроку()
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	Если СтрНайти(ИмяТекОбласти, "ДобавитьСтроку") Тогда
		ИмяОбластиПреемника = СтрЗаменить(ИмяТекОбласти, "ДобавитьСтроку", "");
		ИмяОбластиПреемника = СтрЗаменить(ИмяОбластиПреемника, "Значок", "");
		ИмяГруппы = Лев(ИмяОбластиПреемника, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяОбластиПреемника;
	Иначе
		ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
		ИмяГрафы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГрафы);
		МаксИнд = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяТекОбласти);
		Координаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(ИмяТекОбласти);
		Пока ТабличныйДокумент.Области.Найти(ИмяГрафы + Координаты
			+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(МаксИнд + 1)) <> Неопределено Цикл
			МаксИнд = МаксИнд + 1;
		КонецЦикла;
		ИмяОбластиПреемника = "ДобавлениеСтроки" + ИмяГруппы + Координаты
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(МаксИнд);
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		
		ОбъектОтчета.ВставитьДопСтроку(ИмяФормы,
									   СтруктураРеквизитовФормы,
									   ТабличныйДокумент,
									   ИмяГруппы,
									   ИмяОбластиПреемника);
		
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.ТекущаяОбласть;
		
		// Особая обработка текста в строке 020 Приложения 9 к Разделу 1.
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1 Тогда
			
			Инд020 = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяОбластиПреемника) + 1;
			Инд020_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд020);
			
			ИмяПокСтр020 = "П00019М102001" + Инд020_Строка;
			Обл020 = ТабличныйДокумент.Области.Найти(ИмяПокСтр020);
			Обл020.Значение = Формат(Инд020, "ЧЦ=5; ЧВН=; ЧГ=");
			
		КонецЕсли;
		
		ОбъектОтчета = ОбъектОтчета(ИмяФормы);
		
		СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
		
		ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
											СтруктураРеквизитовФормы,
											мСтруктураМногоуровневыхРазделов,
											СтруктураДанныхРазделов,
											ТабличныйДокумент,
											СтруктураРеквизитовФормы.НаимТекущегоРаздела);
		
		ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
		
		Модифицированность = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтроку(Команда)
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	ИмяТекОбласти = СтрЗаменить(ИмяТекОбласти, "УдалитьСтроку", "");
	
	ИмяГруппы = Лев(ИмяТекОбласти, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	Если НЕ СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей.Свойство(ИмяГруппы) Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не выбрана удаляемая строка многострочного раздела';
														|en = 'Не выбрана удаляемая строка многострочного раздела'"));
		Возврат;
	КонецЕсли;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("УдалитьСтрокуЗавершение", ЭтотОбъект);
	ДопТекст = ДополнительныйТекстПриДобавленииУдаленииСтрок(ИмяГруппы);
	Если ДопТекст <> Неопределено Тогда
		ТекстВопроса = ДопТекст.ТекстВопросаПередУдалениемСтроки;
	Иначе
		ТекстВопроса = НСтр("ru = 'Удалить выбранную строку?';
							|en = 'Удалить выбранную строку?'");
	КонецЕсли;
	ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Да);
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	УдалитьДопСтрокуНаСервере();
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтрокуНаСервере()
	
	ИмяТекОбласти = Элементы.ТабличныйДокумент.ТекущаяОбласть.Имя;
	
	УдалитьДопСтроку(ИмяТекОбласти);
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	Расчет(ЭтотОбъект, СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
КонецПроцедуры

&НаСервере
Процедура УдалитьДопСтроку(ИмяОбласти)
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ИмяГруппы = СтрЗаменить(ИмяОбласти, "УдалитьСтроку", "");
	ИмяГруппы = Лев(ИмяГруппы, СтруктураРеквизитовФормы.ДлинаИмениГруппы);
	
	ТекКоординаты = РегламентированнаяОтчетностьКлиентСервер.СтрокаСКоординатамиПоказателя(ИмяОбласти);
	
	ТекИндекс_Число = РегламентированнаяОтчетностьКлиентСервер.ИндексПоказателя(ИмяОбласти);
	
	ТекИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ТекИндекс_Число);
	ТекПостфикс = ИмяГруппы + ТекКоординаты + ТекИндекс;
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	ОблПервУдаляемогоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + ТекИндекс);
	ОблУдалитьСтроку = ТабличныйДокумент.Область("УдалитьСтроку" + ИмяГруппы + ТекКоординаты + ТекИндекс);
	СмещениеОтВерхаМнЧ = ОблПервУдаляемогоПоказателя.Верх - ОблУдалитьСтроку.Верх;
	
	ОблДобавлениеСтроки = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
	
	// Удаляется последняя строка.
	//
	Если ОблДобавлениеСтроки <> Неопределено Тогда
		
		ПреИндекс_Число = ТекИндекс_Число - 1;
		ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(ПреИндекс_Число);
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблДобавлениеСтроки.Верх - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ТекПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтроку" + ПреПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ТекПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + ПреПостфикс;
		
		Если ПреИндекс_Число = 1 Тогда
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + ПреПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		// Изменения в оформлении ячеек в случае задания номеров специальных колонок.
		НомераСпецКолонок = Неопределено;
		СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы].Свойство(
		"КолонкиСИзмНижнГраницей", НомераСпецКолонок);
		Если НомераСпецКолонок <> Неопределено Тогда
			Для каждого НомКолонки Из НомераСпецКолонок Цикл
				// Установка линии в определенных колонках последней (после удаления) строки.
				Обл = ТабличныйДокумент.Область(ВерхУдОбласти - 1, НомКолонки, ВерхУдОбласти - 1, НомКолонки);
				Если Обл <> Неопределено Тогда
					Обл.ГраницаСнизу = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ПреИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	// Удаляемая строка не последняя.
	//
	Иначе
		
		НовИндекс_Число = ТекИндекс_Число + 1;
		НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
		
		ОблСледующегоПоказателя = ТабличныйДокумент.Область(ИмяПервойГрафы + ТекКоординаты + НовИндекс);
		
		ВерхУдОбласти = ОблПервУдаляемогоПоказателя.Верх - СмещениеОтВерхаМнЧ;
		НизУдОбласти  = ОблСледующегоПоказателя.Верх - СмещениеОтВерхаМнЧ - 1;
		
		УдаляемаяОбласть = ТабличныйДокумент.Область(ВерхУдОбласти, , НизУдОбласти, );
		
		// Сохранение свойств "эталонных" областей для последующего восстановления.
		СпОбластейДляВосстановленияПослеУдаления = Новый СписокЗначений;
		ВремТаблДок = ТабличныйДокумент.ПолучитьОбласть(УдаляемаяОбласть.Имя);
		Для каждого ЭлемСтруктуры Из СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей Цикл
			ИмяИскомойобласти = "МногострочнаяЧасть" + ЭлемСтруктуры.Ключ;
			Искомаяобласть = ВремТаблДок.Области.Найти(ИмяИскомойобласти);
			Если Искомаяобласть <> Неопределено Тогда
				ВысотаОбл = Искомаяобласть.Низ - Искомаяобласть.Верх + 1;
				СпОбластейДляВосстановленияПослеУдаления.Добавить(ВысотаОбл, ЭлемСтруктуры.Ключ);
			КонецЕсли;
		КонецЦикла;
		
		ТабличныйДокумент.УдалитьОбласть(УдаляемаяОбласть, ТипСмещенияТабличногоДокумента.ПоВертикали);
		
		НовИндекс_Число = ТекИндекс_Число;
		
		// Реиндексация имен областей текущей многострочной части после удаления строки.
		Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + ТекКоординаты
			+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число + 1)) <> Неопределено Цикл
			
			ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число + 1);
			НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
			
			Для каждого ИмяГрафы Из МассивИменГраф Цикл
				ПреИмяОбл = ИмяГрафы + ТекКоординаты + ПреИндекс;
				НовИмяОбл = ИмяГрафы + ТекКоординаты + НовИндекс;
				
				ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
				ОбластьЯчейки.Имя = НовИмяОбл;
			КонецЦикла;
			
			ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
			НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
			
			Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
			Обл.Имя = "УдалитьСтроку" + НовПостфикс;
			
			// Обновление координат в именах областей подчиненных многострочных частей.
			ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
			Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
				ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
				ИмяПодчГруппы, ТекКоординаты + ПреИндекс, ТекКоординаты + НовИндекс);
				РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
			КонецЦикла;
			
			НовИндекс_Число = НовИндекс_Число + 1;
			
		КонецЦикла;
		
		ПреИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число);
		НовИндекс = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НовИндекс_Число - 1);
		
		ПреПостфикс = ИмяГруппы + ТекКоординаты + ПреИндекс;
		НовПостфикс = ИмяГруппы + ТекКоординаты + НовИндекс;
		
		Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
		Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
		Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
		Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
		
		// Восстановление удаленных "эталонных" областей по предварительно сохраненным свойствам.
		НачИндекс = "_1";
		Для каждого ЭлемСписка Из СпОбластейДляВосстановленияПослеУдаления Цикл
			НачКоординаты = "";
			УровеньПодчиненияГруппы = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			ЭлемСписка.Представление]["УровеньПодчинения"];
			
			Для НомУр = 1 По УровеньПодчиненияГруппы Цикл
				НачКоординаты = НачКоординаты + НачИндекс;
			КонецЦикла;
			
			ИмяГрафыДляПозиционирования = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[
			ЭлемСписка.Представление]["ИменаГраф"][0];
			
			ИмяОбластиДляПозиционирования = ИмяГрафыДляПозиционирования + НачКоординаты + НачИндекс;
			ОбластьДляПозиционирования = ТабличныйДокумент.Область(ИмяОбластиДляПозиционирования);
			
			Если ЭлемСписка.Представление = ИмяГруппы Тогда
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх - СмещениеОтВерхаМнЧ;
			Иначе
				ВосстОбластьВерх = ОбластьДляПозиционирования.Верх;
			КонецЕсли;
			ВосстОбластьНиз = ВосстОбластьВерх + ЭлемСписка.Значение - 1;
			
			ВосстОбласть = ТабличныйДокумент.Область(ВосстОбластьВерх, , ВосстОбластьНиз, );
			ВосстОбласть.Имя = "МногострочнаяЧасть" + ЭлемСписка.Представление;
		КонецЦикла;
		
		Если НовИндекс = НачИндекс Тогда // после удаления осталась единственная строка
			Обл = ТабличныйДокумент.Область("УдалитьСтроку" + НовПостфикс);
			Обл.Гиперссылка = Ложь;
			Обл.Текст = "";
		КонецЕсли;
		
		// Особая обработка текста в строке 020 Приложения 9 к Разделу 1.
		Если ИмяГруппы = СтруктураРеквизитовФормы.мИдГруппы19М1 Тогда
			
			Инд020 = ТекИндекс_Число;
			Инд020_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд020);
			Обл020 = ТабличныйДокумент.Области.Найти("П00019М102001" + Инд020_Строка);
			
			Пока Обл020 <> Неопределено Цикл
				Обл020.Значение = Формат(Инд020, "ЧЦ=5; ЧВН=; ЧГ=");
				
				Инд020 = Инд020 + 1;
				Инд020_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд020);
				Обл020 = ТабличныйДокумент.Области.Найти("П00019М102001" + Инд020_Строка);
			КонецЦикла;
			
		КонецЕсли;
		
		НовИмяТекОбл = ИмяПервойГрафы + ТекКоординаты + ТекИндекс;
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Области[НовИмяТекОбл];
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДополнительныеСтрокиВРазделе3()
	
	СохрТекОбл = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	
	Обл = ТабличныйДокумент.Области.Найти("УдалитьСтрокуП00321М1_2");
	Пока Обл <> Неопределено Цикл
		Элементы.ТабличныйДокумент.ТекущаяОбласть = Обл;
		УдалитьДопСтрокуНаСервере();
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтрокуП00321М1_2");
	КонецЦикла;
	
	Обл = ТабличныйДокумент.Области.Найти("УдалитьСтрокуП00322М1_2");
	Пока Обл <> Неопределено Цикл
		Элементы.ТабличныйДокумент.ТекущаяОбласть = Обл;
		УдалитьДопСтрокуНаСервере();
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтрокуП00322М1_2");
	КонецЦикла;
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = СохрТекОбл;
	
КонецПроцедуры

&НаСервере
Процедура РеиндексироватьПодчиненныеДопСтроки(ПараметрыРеиндексации)
	
	ИмяГруппы = ПараметрыРеиндексации["ИмяГруппы"];
	ПреКоординаты = ПараметрыРеиндексации["ПреКоординаты"];
	НовКоординаты = ПараметрыРеиндексации["НовКоординаты"];
	
	МассивИменГраф = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаГраф"];
	ИмяПервойГрафы = МассивИменГраф[0];
	
	Инд_Число = 1;
	Пока ТабличныйДокумент.Области.Найти(ИмяПервойГрафы + ПреКоординаты
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число)) <> Неопределено Цикл
		
		Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число);
		
		Для каждого ИмяГрафы Из МассивИменГраф Цикл
			ПреИмяОбл = ИмяГрафы + ПреКоординаты + Инд;
			НовИмяОбл = ИмяГрафы + НовКоординаты + Инд;
			
			ОбластьЯчейки = ТабличныйДокумент.Области[ПреИмяОбл];
			ОбластьЯчейки.Имя = НовИмяОбл;
		КонецЦикла;
		
		ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
		НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
		
		Обл = ТабличныйДокумент.Области.Найти("УдалитьСтроку" + ПреПостфикс);
		Обл.Имя = "УдалитьСтроку" + НовПостфикс;
		
		ИменаПодчиненныхГрупп = СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппы]["ИменаПодчиненныхГрупп"];
		Для каждого ИмяПодчГруппы Из ИменаПодчиненныхГрупп Цикл
			ПарамРеинд = Новый Структура("ИмяГруппы,ПреКоординаты,НовКоординаты",
			ИмяПодчГруппы, ПреКоординаты + Инд, НовКоординаты + Инд);
			РеиндексироватьПодчиненныеДопСтроки(ПарамРеинд);
		КонецЦикла;
		
		Инд_Число = Инд_Число + 1;
		
	КонецЦикла;
	
	Инд = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд_Число - 1);
	
	ПреПостфикс = ИмяГруппы + ПреКоординаты + Инд;
	НовПостфикс = ИмяГруппы + НовКоординаты + Инд;
	
	Обл = ТабличныйДокумент.Области.Найти("ДобавлениеСтроки" + ПреПостфикс);
	Обл.Имя = "ДобавлениеСтроки" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтроку" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтроку" + НовПостфикс;
	Обл = ТабличныйДокумент.Области.Найти("ДобавитьСтрокуЗначок" + ПреПостфикс);
	Обл.Имя = "ДобавитьСтрокуЗначок" + НовПостфикс;
	
КонецПроцедуры

#КонецОбласти

#Область Авторасчет

&НаКлиенте
Процедура РасчетНаКлиенте(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтотОбъект, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаСервере
Процедура РасчетНаСервере(ИмяТекущейСтраницыПанели = "", ОбластьИмя = "") Экспорт
	
	Расчет(ЭтотОбъект, ИмяТекущейСтраницыПанели, ОбластьИмя);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура Расчет(Форма, ИмяРаздела = "", ОбластьИмя = "") Экспорт
	
	Перем ТаблицаБлока;
	
	Если Форма.СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Возврат;
	КонецЕсли;
	
	РасчетЗаПервыйКвартал = Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3;
	
	ТДО = Форма.ТабличныйДокумент.Области;
	
	Если ИмяРаздела = "Раздел1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				ТипПлательщика = СокрЛП(ТДО.П000010000101.Значение);
				
				Если ТипПлательщика = "2" Тогда
					
					ТДО["П000010003101"].Значение = 0;
					ТДО["П000010003201"].Значение = 0;
					ТДО["П000010003301"].Значение = 0;
					
					ТДО["П000010005101"].Значение = 0;
					ТДО["П000010005201"].Значение = 0;
					ТДО["П000010005301"].Значение = 0;
					
					Инд = 1;
					Инд_Строка = "_1";
					Обл = ТДО.Найти("П00001М107101" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Обл.Значение = 0;
						ТДО["П00001М107201" + Инд_Строка].Значение = 0;
						ТДО["П00001М107301" + Инд_Строка].Значение = 0;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00001М107101" + Инд_Строка);
					КонецЦикла;
					
					Инд = 1;
					Инд_Строка = "_1";
					Обл = ТДО.Найти("П00001М209101" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Обл.Значение = 0;
						ТДО["П00001М209201" + Инд_Строка].Значение = 0;
						ТДО["П00001М209301" + Инд_Строка].Значение = 0;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00001М209101" + Инд_Строка);
					КонецЦикла;
					
					ТДО["П000010012101"].Значение = 0;
					ТДО["П000010012201"].Значение = 0;
					ТДО["П000010012301"].Значение = 0;
					
				ИначеЕсли РасчетЗаПервыйКвартал Тогда
					
					ТДО["П000010003001"].Значение
					= ТДО["П000010003101"].Значение + ТДО["П000010003201"].Значение + ТДО["П000010003301"].Значение;
					
					ТДО["П000010005001"].Значение
					= ТДО["П000010005101"].Значение + ТДО["П000010005201"].Значение + ТДО["П000010005301"].Значение;
					
					Инд = 1;
					Инд_Строка = "_1";
					Обл = ТДО.Найти("П00001М107001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Обл.Значение = ТДО["П00001М107101" + Инд_Строка].Значение
						+ ТДО["П00001М107201" + Инд_Строка].Значение + ТДО["П00001М107301" + Инд_Строка].Значение;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00001М107001" + Инд_Строка);
					КонецЦикла;
					
					Инд = 1;
					Инд_Строка = "_1";
					Обл = ТДО.Найти("П00001М209001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Обл.Значение = ТДО["П00001М209101" + Инд_Строка].Значение
						+ ТДО["П00001М209201" + Инд_Строка].Значение + ТДО["П00001М209301" + Инд_Строка].Значение;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00001М209001" + Инд_Строка);
					КонецЦикла;
					
					ПромежуточнаяСумма
					= ТДО["П000010011101"].Значение + ТДО["П000010011201"].Значение + ТДО["П000010011301"].Значение
					- ТДО["П000010012101"].Значение - ТДО["П000010012201"].Значение - ТДО["П000010012301"].Значение;
					
					ТДО["П000010011001"].Значение = Макс(ПромежуточнаяСумма, 0);
					
					ТДО["П000010012001"].Значение = - Мин(ПромежуточнаяСумма, 0);
					
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110003001, ОбластьИмя) > 0 Тогда
						ТДО["П011110003001"].Значение = ТДО["П011110003002"].Значение
						+ ТДО["П011110003003"].Значение + ТДО["П011110003004"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110004001, ОбластьИмя) > 0 Тогда
						ТДО["П011110004001"].Значение = ТДО["П011110004002"].Значение
						+ ТДО["П011110004003"].Значение + ТДО["П011110004004"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110004501, ОбластьИмя) > 0 Тогда
						ТДО["П011110004501"].Значение = ТДО["П011110004502"].Значение
						+ ТДО["П011110004503"].Значение + ТДО["П011110004504"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005101, ОбластьИмя) > 0 Тогда
						ТДО["П011110005101"].Значение = ТДО["П011110005102"].Значение
						+ ТДО["П011110005103"].Значение + ТДО["П011110005104"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006101, ОбластьИмя) > 0 Тогда
						ТДО["П011110006101"].Значение = ТДО["П011110006102"].Значение
						+ ТДО["П011110006103"].Значение + ТДО["П011110006104"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006201, ОбластьИмя) > 0 Тогда
						ТДО["П011110006201"].Значение = ТДО["П011110006202"].Значение
						+ ТДО["П011110006203"].Значение + ТДО["П011110006204"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120003001, ОбластьИмя) > 0 Тогда
						ТДО["П011120003001"].Значение = ТДО["П011120003002"].Значение
						+ ТДО["П011120003003"].Значение + ТДО["П011120003004"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120004001, ОбластьИмя) > 0 Тогда
						ТДО["П011120004001"].Значение = ТДО["П011120004002"].Значение
						+ ТДО["П011120004003"].Значение + ТДО["П011120004004"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120004501, ОбластьИмя) > 0 Тогда
						ТДО["П011120004501"].Значение = ТДО["П011120004502"].Значение
						+ ТДО["П011120004503"].Значение + ТДО["П011120004504"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120006001, ОбластьИмя) > 0 Тогда
						ТДО["П011120006001"].Значение = ТДО["П011120006002"].Значение
						+ ТДО["П011120006003"].Значение + ТДО["П011120006004"].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005001, ОбластьИмя) > 0 Тогда
					ТДО["П011110005001"].Значение = ТДО["П011110003001"].Значение
					- ТДО["П011110004001"].Значение - ТДО["П011110004501"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005002, ОбластьИмя) > 0 Тогда
					ТДО["П011110005002"].Значение = ТДО["П011110003002"].Значение
					- ТДО["П011110004002"].Значение - ТДО["П011110004502"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005003, ОбластьИмя) > 0 Тогда
					ТДО["П011110005003"].Значение = ТДО["П011110003003"].Значение
					- ТДО["П011110004003"].Значение - ТДО["П011110004503"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110005004, ОбластьИмя) > 0 Тогда
					ТДО["П011110005004"].Значение = ТДО["П011110003004"].Значение
					- ТДО["П011110004004"].Значение - ТДО["П011110004504"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006001, ОбластьИмя) > 0 Тогда
					ТДО["П011110006001"].Значение = ТДО["П011110006101"].Значение + ТДО["П011110006201"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006002, ОбластьИмя) > 0 Тогда
					ТДО["П011110006002"].Значение = ТДО["П011110006102"].Значение + ТДО["П011110006202"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006003, ОбластьИмя) > 0 Тогда
					ТДО["П011110006003"].Значение = ТДО["П011110006103"].Значение + ТДО["П011110006203"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011110006004, ОбластьИмя) > 0 Тогда
					ТДО["П011110006004"].Значение = ТДО["П011110006104"].Значение + ТДО["П011110006204"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005001, ОбластьИмя) > 0 Тогда
					ТДО["П011120005001"].Значение = ТДО["П011120003001"].Значение
					- ТДО["П011120004001"].Значение - ТДО["П011120004501"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005002, ОбластьИмя) > 0 Тогда
					ТДО["П011120005002"].Значение = ТДО["П011120003002"].Значение
					- ТДО["П011120004002"].Значение - ТДО["П011120004502"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005003, ОбластьИмя) > 0 Тогда
					ТДО["П011120005003"].Значение = ТДО["П011120003003"].Значение
					- ТДО["П011120004003"].Значение - ТДО["П011120004503"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П011120005004, ОбластьИмя) > 0 Тогда
					ТДО["П011120005004"].Значение = ТДО["П011120003004"].Значение
					- ТДО["П011120004004"].Значение - ТДО["П011120004504"].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М102001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11131М102001" + _Инд].Значение = ТДО["П11131М102002" + _Инд].Значение
						+ ТДО["П11131М102003" + _Инд].Значение + ТДО["П11131М102004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М103001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11131М103001" + _Инд].Значение = ТДО["П11131М103002" + _Инд].Значение
						+ ТДО["П11131М103003" + _Инд].Значение + ТДО["П11131М103004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М105001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11131М105001" + _Инд].Значение = ТДО["П11131М105002" + _Инд].Значение
						+ ТДО["П11131М105003" + _Инд].Значение + ТДО["П11131М105004" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104001, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11131М104001" + _Инд].Значение = ТДО["П11131М102001" + _Инд].Значение
					- ТДО["П11131М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104002, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11131М104002" + _Инд].Значение = ТДО["П11131М102002" + _Инд].Значение
					- ТДО["П11131М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104003, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11131М104003" + _Инд].Значение = ТДО["П11131М102003" + _Инд].Значение
					- ТДО["П11131М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11131М104004, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11131М104004" + _Инд].Значение = ТДО["П11131М102004" + _Инд].Значение
					- ТДО["П11131М103004" + _Инд].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М102001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11132М102001" + _Инд].Значение = ТДО["П11132М102002" + _Инд].Значение
						+ ТДО["П11132М102003" + _Инд].Значение + ТДО["П11132М102004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М103001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11132М103001" + _Инд].Значение = ТДО["П11132М103002" + _Инд].Значение
						+ ТДО["П11132М103003" + _Инд].Значение + ТДО["П11132М103004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М105001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П11132М105001" + _Инд].Значение = ТДО["П11132М105002" + _Инд].Значение
						+ ТДО["П11132М105003" + _Инд].Значение + ТДО["П11132М105004" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104001, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11132М104001" + _Инд].Значение = ТДО["П11132М102001" + _Инд].Значение
					- ТДО["П11132М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104002, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11132М104002" + _Инд].Значение = ТДО["П11132М102002" + _Инд].Значение
					- ТДО["П11132М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104003, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11132М104003" + _Инд].Значение = ТДО["П11132М102003" + _Инд].Значение
					- ТДО["П11132М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П11132М104004, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П11132М104004" + _Инд].Значение = ТДО["П11132М102004" + _Инд].Значение
					- ТДО["П11132М103004" + _Инд].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1_1" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М102001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00111М102001" + _Инд].Значение = ТДО["П00111М102002" + _Инд].Значение
						+ ТДО["П00111М102003" + _Инд].Значение + ТДО["П00111М102004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М103001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00111М103001" + _Инд].Значение = ТДО["П00111М103002" + _Инд].Значение
						+ ТДО["П00111М103003" + _Инд].Значение + ТДО["П00111М103004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М105001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00111М105001" + _Инд].Значение = ТДО["П00111М105002" + _Инд].Значение
						+ ТДО["П00111М105003" + _Инд].Значение + ТДО["П00111М105004" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М104001, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00111М104001" + _Инд].Значение = ТДО["П00111М102001" + _Инд].Значение
					- ТДО["П00111М103001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М104002, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00111М104002" + _Инд].Значение = ТДО["П00111М102002" + _Инд].Значение
					- ТДО["П00111М103002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М104003, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00111М104003" + _Инд].Значение = ТДО["П00111М102003" + _Инд].Значение
					- ТДО["П00111М103003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00111М104004, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00111М104004" + _Инд].Значение = ТДО["П00111М102004" + _Инд].Значение
					- ТДО["П00111М103004" + _Инд].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М102001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00012М102001" + _Инд].Значение = ТДО["П00012М102002" + _Инд].Значение
						+ ТДО["П00012М102003" + _Инд].Значение + ТДО["П00012М102004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М103001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00012М103001" + _Инд].Значение = ТДО["П00012М103002" + _Инд].Значение
						+ ТДО["П00012М103003" + _Инд].Значение + ТДО["П00012М103004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М104001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00012М104001" + _Инд].Значение = ТДО["П00012М104002" + _Инд].Значение
						+ ТДО["П00012М104003" + _Инд].Значение + ТДО["П00012М104004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М105501, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00012М105501" + _Инд].Значение = ТДО["П00012М105502" + _Инд].Значение
						+ ТДО["П00012М105503" + _Инд].Значение + ТДО["П00012М105504" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М106001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00012М106001" + _Инд].Значение = ТДО["П00012М106002" + _Инд].Значение
						+ ТДО["П00012М106003" + _Инд].Значение + ТДО["П00012М106004" + _Инд].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120007001, ОбластьИмя) > 0 Тогда
						ТДО["П000120007001"].Значение = ТДО["П000120007002"].Значение
						+ ТДО["П000120007003"].Значение + ТДО["П000120007004"].Значение;
					КонецЕсли;
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000120008001, ОбластьИмя) > 0 Тогда
						ТДО["П000120008001"].Значение = ТДО["П000120008002"].Значение
						+ ТДО["П000120008003"].Значение + ТДО["П000120008004"].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М105001, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00012М105001" + _Инд].Значение = ТДО["П00012М102001" + _Инд].Значение
					- ТДО["П00012М103001" + _Инд].Значение - ТДО["П00012М104001" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М105002, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00012М105002" + _Инд].Значение = ТДО["П00012М102002" + _Инд].Значение
					- ТДО["П00012М103002" + _Инд].Значение - ТДО["П00012М104002" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М105003, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00012М105003" + _Инд].Значение = ТДО["П00012М102003" + _Инд].Значение
					- ТДО["П00012М103003" + _Инд].Значение - ТДО["П00012М104003" + _Инд].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00012М105004, ОбластьИмяБезИнд) > 0 Тогда
					ТДО["П00012М105004" + _Инд].Значение = ТДО["П00012М102004" + _Инд].Значение
					- ТДО["П00012М103004" + _Инд].Значение - ТДО["П00012М104004" + _Инд].Значение;
				КонецЕсли;
				
				Сумма060_Гр1 = 0;
				Сумма060_Гр2 = 0;
				Сумма060_Гр3 = 0;
				Сумма060_Гр4 = 0;
				ТекИнд = 1;
				_ТекИнд = "_1";
				ТекОбл = ТДО.Найти("П00012М106001_1");
				Пока ТекОбл <> Неопределено Цикл
					Сумма060_Гр1 = Сумма060_Гр1 + ТекОбл.Значение;
					Сумма060_Гр2 = Сумма060_Гр2 + ТДО["П00012М106002" + _ТекИнд].Значение;
					Сумма060_Гр3 = Сумма060_Гр3 + ТДО["П00012М106003" + _ТекИнд].Значение;
					Сумма060_Гр4 = Сумма060_Гр4 + ТДО["П00012М106004" + _ТекИнд].Значение;
					ТекИнд = ТекИнд + 1;
					_ТекИнд = "_" + Формат(ТекИнд, "ЧГ=");
					ТекОбл = ТДО.Найти("П00012М106001" + _ТекИнд);
				КонецЦикла;
				Сумма090 = Сумма060_Гр1 - ТДО["П000120007001"].Значение + ТДО["П000120008001"].Значение;
				ТДО["П000120009001"].Значение = ?(Сумма090 < 0, "2", "1");
				ТДО["П000120009002"].Значение = ?(Сумма090 < 0, - Сумма090, Сумма090);
				Сумма090 = Сумма060_Гр2 - ТДО["П000120007002"].Значение + ТДО["П000120008002"].Значение;
				ТДО["П000120009003"].Значение = ?(Сумма090 < 0, "2", "1");
				ТДО["П000120009004"].Значение = ?(Сумма090 < 0, - Сумма090, Сумма090);
				Сумма090 = Сумма060_Гр3 - ТДО["П000120007003"].Значение + ТДО["П000120008003"].Значение;
				ТДО["П000120009005"].Значение = ?(Сумма090 < 0, "2", "1");
				ТДО["П000120009006"].Значение = ?(Сумма090 < 0, - Сумма090, Сумма090);
				Сумма090 = Сумма060_Гр4 - ТДО["П000120007004"].Значение + ТДО["П000120008004"].Значение;
				ТДО["П000120009007"].Значение = ?(Сумма090 < 0, "2", "1");
				ТДО["П000120009008"].Значение = ?(Сумма090 < 0, - Сумма090, Сумма090);
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил3" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006002, ОбластьИмя) > 0 Тогда
					ТДО["П000130006002"].Значение = ТДО["П000130006102"].Значение + ТДО["П000130006202"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006003, ОбластьИмя) > 0 Тогда
					ТДО["П000130006003"].Значение = ТДО["П000130006103"].Значение + ТДО["П000130006203"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130006004, ОбластьИмя) > 0 Тогда
					ТДО["П000130006004"].Значение = ТДО["П000130006104"].Значение + ТДО["П000130006204"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130010003, ОбластьИмя) > 0 Тогда
					ТДО["П000130010003"].Значение = ТДО["П000130001003"].Значение + ТДО["П000130002003"].Значение
					+ ТДО["П000130003003"].Значение + ТДО["П000130004003"].Значение + ТДО["П000130005003"].Значение
					+ ТДО["П000130006003"].Значение + ТДО["П000130007003"].Значение + ТДО["П000130008003"].Значение
					+ ТДО["П000130009003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000130010004, ОбластьИмя) > 0 Тогда
					ТДО["П000130010004"].Значение = ТДО["П000130001004"].Значение + ТДО["П000130003004"].Значение
					+ ТДО["П000130006004"].Значение + ТДО["П000130007004"].Значение + ТДО["П000130008004"].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил4" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140004003, ОбластьИмя) > 0 Тогда
					ТДО["П000140004003"].Значение = ТДО["П000140005003"].Значение + ТДО["П000140006003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140004004, ОбластьИмя) > 0 Тогда
					ТДО["П000140004004"].Значение = ТДО["П000140005004"].Значение + ТДО["П000140006004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140001002, ОбластьИмя) > 0 Тогда
					ТДО["П000140001002"].Значение = ТДО["П000140002002"].Значение + ТДО["П000140003002"].Значение
					+ ТДО["П000140004002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140001004, ОбластьИмя) > 0 Тогда
					ТДО["П000140001004"].Значение = ТДО["П000140002004"].Значение + ТДО["П000140003004"].Значение
					+ ТДО["П000140004004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140010003, ОбластьИмя) > 0 Тогда
					ТДО["П000140010003"].Значение = ТДО["П000140011003"].Значение + ТДО["П000140012003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140010004, ОбластьИмя) > 0 Тогда
					ТДО["П000140010004"].Значение = ТДО["П000140011004"].Значение + ТДО["П000140012004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140007002, ОбластьИмя) > 0 Тогда
					ТДО["П000140007002"].Значение = ТДО["П000140008002"].Значение + ТДО["П000140009002"].Значение
					+ ТДО["П000140010002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140007004, ОбластьИмя) > 0 Тогда
					ТДО["П000140007004"].Значение = ТДО["П000140008004"].Значение + ТДО["П000140009004"].Значение
					+ ТДО["П000140010004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140013002, ОбластьИмя) > 0 Тогда
					ТДО["П000140013002"].Значение = ТДО["П000140014002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140013004, ОбластьИмя) > 0 Тогда
					ТДО["П000140013004"].Значение = ТДО["П000140014004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140018003, ОбластьИмя) > 0 Тогда
					ТДО["П000140018003"].Значение = ТДО["П000140019003"].Значение + ТДО["П000140020003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140018004, ОбластьИмя) > 0 Тогда
					ТДО["П000140018004"].Значение = ТДО["П000140019004"].Значение + ТДО["П000140020004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140015002, ОбластьИмя) > 0 Тогда
					ТДО["П000140015002"].Значение = ТДО["П000140016002"].Значение + ТДО["П000140017002"].Значение
					+ ТДО["П000140018002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140015004, ОбластьИмя) > 0 Тогда
					ТДО["П000140015004"].Значение = ТДО["П000140016004"].Значение + ТДО["П000140017004"].Значение
					+ ТДО["П000140018004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140021002, ОбластьИмя) > 0 Тогда
					ТДО["П000140021002"].Значение = ТДО["П000140022002"].Значение + ТДО["П000140023002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140021004, ОбластьИмя) > 0 Тогда
					ТДО["П000140021004"].Значение = ТДО["П000140022004"].Значение + ТДО["П000140023004"].Значение;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029002, ОбластьИмя) > 0 Тогда
					ТДО["П000140029002"].Значение = ТДО["П000140006002"].Значение + ТДО["П000140012002"].Значение
					+ ТДО["П000140020002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029003, ОбластьИмя) > 0 Тогда
					ТДО["П000140029003"].Значение = ТДО["П000140006003"].Значение + ТДО["П000140012003"].Значение
					+ ТДО["П000140020003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140029004, ОбластьИмя) > 0 Тогда
					ТДО["П000140029004"].Значение = ТДО["П000140006004"].Значение + ТДО["П000140012004"].Значение
					+ ТДО["П000140020004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028002, ОбластьИмя) > 0 Тогда
					ТДО["П000140028002"].Значение = ТДО["П000140005002"].Значение + ТДО["П000140011002"].Значение
					+ ТДО["П000140019002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028003, ОбластьИмя) > 0 Тогда
					ТДО["П000140028003"].Значение = ТДО["П000140005003"].Значение + ТДО["П000140011003"].Значение
					+ ТДО["П000140019003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140028004, ОбластьИмя) > 0 Тогда
					ТДО["П000140028004"].Значение = ТДО["П000140005004"].Значение + ТДО["П000140011004"].Значение
					+ ТДО["П000140019004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027002, ОбластьИмя) > 0 Тогда
					ТДО["П000140027002"].Значение = ТДО["П000140004002"].Значение + ТДО["П000140010002"].Значение
					+ ТДО["П000140018002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027003, ОбластьИмя) > 0 Тогда
					ТДО["П000140027003"].Значение = ТДО["П000140028003"].Значение + ТДО["П000140029003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140027004, ОбластьИмя) > 0 Тогда
					ТДО["П000140027004"].Значение = ТДО["П000140028004"].Значение + ТДО["П000140029004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026002, ОбластьИмя) > 0 Тогда
					ТДО["П000140026002"].Значение = ТДО["П000140003002"].Значение + ТДО["П000140009002"].Значение
					+ ТДО["П000140017002"].Значение + ТДО["П000140023002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026003, ОбластьИмя) > 0 Тогда
					ТДО["П000140026003"].Значение = ТДО["П000140003003"].Значение + ТДО["П000140009003"].Значение
					+ ТДО["П000140017003"].Значение + ТДО["П000140023003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140026004, ОбластьИмя) > 0 Тогда
					ТДО["П000140026004"].Значение = ТДО["П000140003004"].Значение + ТДО["П000140009004"].Значение
					+ ТДО["П000140017004"].Значение + ТДО["П000140023004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025002, ОбластьИмя) > 0 Тогда
					ТДО["П000140025002"].Значение = ТДО["П000140002002"].Значение + ТДО["П000140008002"].Значение
					+ ТДО["П000140014002"].Значение + ТДО["П000140016002"].Значение + ТДО["П000140022002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025003, ОбластьИмя) > 0 Тогда
					ТДО["П000140025003"].Значение = ТДО["П000140002003"].Значение + ТДО["П000140008003"].Значение
					+ ТДО["П000140014003"].Значение + ТДО["П000140016003"].Значение + ТДО["П000140022003"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140025004, ОбластьИмя) > 0 Тогда
					ТДО["П000140025004"].Значение = ТДО["П000140002004"].Значение + ТДО["П000140008004"].Значение
					+ ТДО["П000140014004"].Значение + ТДО["П000140016004"].Значение + ТДО["П000140022004"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140024002, ОбластьИмя) > 0 Тогда
					ТДО["П000140024002"].Значение = ТДО["П000140025002"].Значение + ТДО["П000140026002"].Значение
					+ ТДО["П000140027002"].Значение + ТДО["П000140030002"].Значение;
				КонецЕсли;
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000140024004, ОбластьИмя) > 0 Тогда
					ТДО["П000140024004"].Значение = ТДО["П000140025004"].Значение + ТДО["П000140026004"].Значение
					+ ТДО["П000140027004"].Значение + ТДО["П000140030004"].Значение + ТДО["П000140031004"].Значение;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил5" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000150004002, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000150002002"].Значение;
					ТДО["П000150004002"].Значение = ?(Знаменатель = 0, 0, ТДО["П000150003002"].Значение / Знаменатель * 100);
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000150004003, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000150002003"].Значение;
					ТДО["П000150004003"].Значение = ?(Знаменатель = 0, 0, ТДО["П000150003003"].Значение / Знаменатель * 100);
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил6" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000160005001, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000160001001"].Значение;
					ТДО["П000160005001"].Значение = ?(Знаменатель = 0, 0, (ТДО["П000160002001"].Значение
					+ ТДО["П000160003001"].Значение + ТДО["П000160004001"].Значение) / Знаменатель * 100);
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000160005002, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000160001002"].Значение;
					ТДО["П000160005002"].Значение = ?(Знаменатель = 0, 0, (ТДО["П000160002002"].Значение
					+ ТДО["П000160003002"].Значение + ТДО["П000160004002"].Значение) / Знаменатель * 100);
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил7" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000170004002, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000170002002"].Значение;
					ТДО["П000170004002"].Значение = ?(Знаменатель = 0, 0, ТДО["П000170003002"].Значение / Знаменатель * 100);
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П000170004003, ОбластьИмя) > 0 Тогда
					Знаменатель = ТДО["П000170002003"].Значение;
					ТДО["П000170004003"].Значение = ?(Знаменатель = 0, 0, ТДО["П000170003003"].Значение / Знаменатель * 100);
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00018М108001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00018М108001" + _Инд].Значение = ТДО["П00018М108002" + _Инд].Значение
						+ ТДО["П00018М108003" + _Инд].Значение + ТДО["П00018М108004" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					Итог010_Гр1 = 0;
					Итог010_Гр2 = 0;
					Итог010_Гр3 = 0;
					Итог010_Гр4 = 0;
					Инд = 1;
					Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
					Обл = ТДО.Найти("П00018М108001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Итог010_Гр1 = Итог010_Гр1 + Обл.Значение;
						Итог010_Гр2 = Итог010_Гр2 + ТДО.Найти("П00018М108002" + Инд_Строка).Значение;
						Итог010_Гр3 = Итог010_Гр3 + ТДО.Найти("П00018М108003" + Инд_Строка).Значение;
						Итог010_Гр4 = Итог010_Гр4 + ТДО.Найти("П00018М108004" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00018М108001" + Инд_Строка);
					КонецЦикла;
					ТДО.Найти("П000180001001").Значение = Итог010_Гр1;
					ТДО.Найти("П000180001002").Значение = Итог010_Гр2;
					ТДО.Найти("П000180001003").Значение = Итог010_Гр3;
					ТДО.Найти("П000180001004").Значение = Итог010_Гр4;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				_Инд = Сред(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы + 1);
				
				Если РасчетЗаПервыйКвартал Тогда
					Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.П00019М108001, ОбластьИмяБезИнд) > 0 Тогда
						ТДО["П00019М108001" + _Инд].Значение = ТДО["П00019М108002" + _Инд].Значение
						+ ТДО["П00019М108003" + _Инд].Значение + ТДО["П00019М108004" + _Инд].Значение;
					КонецЕсли;
				КонецЕсли;
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					Итог010_Гр1 = 0;
					Итог010_Гр2 = 0;
					Итог010_Гр3 = 0;
					Итог010_Гр4 = 0;
					Инд = 1;
					Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
					Обл = ТДО.Найти("П00019М108001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Итог010_Гр1 = Итог010_Гр1 + Обл.Значение;
						Итог010_Гр2 = Итог010_Гр2 + ТДО.Найти("П00019М108002" + Инд_Строка).Значение;
						Итог010_Гр3 = Итог010_Гр3 + ТДО.Найти("П00019М108003" + Инд_Строка).Значение;
						Итог010_Гр4 = Итог010_Гр4 + ТДО.Найти("П00019М108004" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00019М108001" + Инд_Строка);
					КонецЦикла;
					ТДО.Найти("П000190001001").Значение = Итог010_Гр1;
					ТДО.Найти("П000190001002").Значение = Итог010_Гр2;
					ТДО.Найти("П000190001003").Значение = Итог010_Гр3;
					ТДО.Найти("П000190001004").Значение = Итог010_Гр4;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			
			Если ЗначениеЗаполнено(ОбластьИмя) Тогда
				
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				
				ОбластьИмяБезИнд = Лев(ОбластьИмя, Форма.СтруктураРеквизитовФормы.ДлинаИмениГрафы);
				
				Если СтрЧислоВхождений(СтруктЗависимыхЯчеек.Итого, ОбластьИмяБезИнд) > 0 Тогда
					Сумма030 = 0;
					Сумма050 = 0;
					Инд = 1;
					Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
					Обл = ТДО.Найти("П00021М109001" + Инд_Строка);
					Пока Обл <> Неопределено Цикл
						Сумма030 = Сумма030 + Обл.Значение;
						Сумма050 = Сумма050 + ТДО.Найти("П00021М109002" + Инд_Строка).Значение;
						Инд = Инд + 1;
						Инд_Строка = РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(Инд);
						Обл = ТДО.Найти("П00021М109001" + Инд_Строка);
					КонецЦикла;
					ТДО.Найти("П000020003001").Значение = Сумма030;
					ТДО.Найти("П000020005001").Значение = Сумма050;
				КонецЕсли;
				
			ИначеЕсли НЕ ЗначениеЗаполнено(ОбластьИмя) Тогда
				РасчетВДеревеЗначений(Форма, ИмяРаздела);
			КонецЕсли;
		Иначе
			РасчетВДеревеЗначений(Форма, ИмяРаздела);
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "" Тогда
		
		Для каждого Раздел Из Форма.СтруктураЗависимыхЯчеекДляАвторасчета Цикл
			Расчет(Форма, Раздел.Ключ);
		КонецЦикла;
		
	КонецЕсли;
	
	Форма.Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура РасчетВДеревеЗначений(Форма, ИмяРаздела)
	
	РасчетЗаПервыйКвартал = Месяц(Форма.СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3;
	
	ИмяГлРаздела = ИмяРаздела;
	СтруктураРаздела = Форма.мСтруктураМногоуровневыхРазделов[ИмяРаздела];
	Если СтруктураРаздела.Свойство("ИмяГлавногоРаздела") Тогда
		ИмяГлРаздела = СтруктураРаздела["ИмяГлавногоРаздела"];
	КонецЕсли;
	
	ДеревоДанных = Неопределено;
	
	ТДО = Форма.ТабличныйДокумент.Области;
	
	Если ИмяРаздела = "Раздел1" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ1 = Форма.СтруктураРеквизитовФормы.мИдГруппы1М1;
		СтруктураГруппыМнЧ1 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ1];
		ИменаГрафМнЧ1 = СтруктураГруппыМнЧ1["ИменаГраф"];
		
		ИмяГруппыМнЧ2 = Форма.СтруктураРеквизитовФормы.мИдГруппы1М2;
		СтруктураГруппыМнЧ2 = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ2];
		ИменаГрафМнЧ2 = СтруктураГруппыМнЧ2["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ1 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ1];
		ДеревоМнЧ2 = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ2];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТипПлательщика = СокрЛП(Данные["П000010000101"]);
		
		Если ТипПлательщика = "2" Тогда
			
			Данные.Вставить("П000010003101", 0);
			Данные.Вставить("П000010003201", 0);
			Данные.Вставить("П000010003301", 0);
			Данные.Вставить("П000010005101", 0);
			Данные.Вставить("П000010005201", 0);
			Данные.Вставить("П000010005301", 0);
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М107101", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М107201", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М107301", 0);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М209101", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М209201", 0);
				СтрокаМнЧ.Данные.Вставить("П00001М209301", 0);
			КонецЦикла;
			Данные.Вставить("П000010012101", 0);
			Данные.Вставить("П000010012201", 0);
			Данные.Вставить("П000010012301", 0);
			
		ИначеЕсли РасчетЗаПервыйКвартал Тогда
			
			Данные.Вставить("П000010003001", Данные["П000010003101"] + Данные["П000010003201"] + Данные["П000010003301"]);
			Данные.Вставить("П000010005001", Данные["П000010005101"] + Данные["П000010005201"] + Данные["П000010005301"]);
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М107001",
				СтрокаМнЧ.Данные["П00001М107101"] + СтрокаМнЧ.Данные["П00001М107201"] + СтрокаМнЧ.Данные["П00001М107301"]);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				СтрокаМнЧ.Данные.Вставить("П00001М209001",
				СтрокаМнЧ.Данные["П00001М209101"] + СтрокаМнЧ.Данные["П00001М209201"] + СтрокаМнЧ.Данные["П00001М209301"]);
			КонецЦикла;
			ПромежуточнаяСумма
			= Данные["П000010011101"] + Данные["П000010011201"] + Данные["П000010011301"]
			- Данные["П000010012101"] - Данные["П000010012201"] - Данные["П000010012301"];
			Данные.Вставить("П000010011001", Макс(ПромежуточнаяСумма, 0));
			Данные.Вставить("П000010012001", - Мин(ПромежуточнаяСумма, 0));
			
		КонецЕсли;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				ТДО[Пок.Ключ].Значение = Пок.Значение;
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ1.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ1.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ1 Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ2.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ2.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ2 Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[0].Строки[0];
			Данные = Ветка.Данные;
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого Пок Из Данные Цикл
					Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
				КонецЦикла;
			КонецЕсли;
			
			Если РасчетЗаПервыйКвартал Тогда
				Данные.Вставить("П011110003001", Данные["П011110003002"] + Данные["П011110003003"] + Данные["П011110003004"]);
				Данные.Вставить("П011110004001", Данные["П011110004002"] + Данные["П011110004003"] + Данные["П011110004004"]);
				Данные.Вставить("П011110004501", Данные["П011110004502"] + Данные["П011110004503"] + Данные["П011110004504"]);
				Данные.Вставить("П011110005101", Данные["П011110005102"] + Данные["П011110005103"] + Данные["П011110005104"]);
				Данные.Вставить("П011110006101", Данные["П011110006102"] + Данные["П011110006103"] + Данные["П011110006104"]);
				Данные.Вставить("П011110006201", Данные["П011110006202"] + Данные["П011110006203"] + Данные["П011110006204"]);
				Данные.Вставить("П011120003001", Данные["П011120003002"] + Данные["П011120003003"] + Данные["П011120003004"]);
				Данные.Вставить("П011120004001", Данные["П011120004002"] + Данные["П011120004003"] + Данные["П011120004004"]);
				Данные.Вставить("П011120004501", Данные["П011120004502"] + Данные["П011120004503"] + Данные["П011120004504"]);
				Данные.Вставить("П011120006001", Данные["П011120006002"] + Данные["П011120006003"] + Данные["П011120006004"]);
			КонецЕсли;
			
			Данные.Вставить("П011110005001", Данные["П011110003001"] - Данные["П011110004001"] - Данные["П011110004501"]);
			Данные.Вставить("П011110005002", Данные["П011110003002"] - Данные["П011110004002"] - Данные["П011110004502"]);
			Данные.Вставить("П011110005003", Данные["П011110003003"] - Данные["П011110004003"] - Данные["П011110004503"]);
			Данные.Вставить("П011110005004", Данные["П011110003004"] - Данные["П011110004004"] - Данные["П011110004504"]);
			Данные.Вставить("П011110006001", Данные["П011110006101"] + Данные["П011110006201"]);
			Данные.Вставить("П011110006002", Данные["П011110006102"] + Данные["П011110006202"]);
			Данные.Вставить("П011110006003", Данные["П011110006103"] + Данные["П011110006203"]);
			Данные.Вставить("П011110006004", Данные["П011110006104"] + Данные["П011110006204"]);
			Данные.Вставить("П011120005001", Данные["П011120003001"] - Данные["П011120004001"] - Данные["П011120004501"]);
			Данные.Вставить("П011120005002", Данные["П011120003002"] - Данные["П011120004002"] - Данные["П011120004502"]);
			Данные.Вставить("П011120005003", Данные["П011120003003"] - Данные["П011120004003"] - Данные["П011120004503"]);
			Данные.Вставить("П011120005004", Данные["П011120003004"] - Данные["П011120004004"] - Данные["П011120004504"]);
			
			Если Ветка = АктивнаяВетка Тогда
				СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
				Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
					Обл = ТДО.Найти(Пок.Ключ);
					Если Обл <> Неопределено Тогда
						Обл.Значение = Данные[Пок.Ключ];
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_1" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы11131М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[1].Строки[0];
			ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ДанСтр = СтрокаМнЧ.Данные;
				Если РасчетЗаПервыйКвартал Тогда
					ДанСтр.Вставить("П11131М102001", ДанСтр["П11131М102002"] + ДанСтр["П11131М102003"] + ДанСтр["П11131М102004"]);
					ДанСтр.Вставить("П11131М103001", ДанСтр["П11131М103002"] + ДанСтр["П11131М103003"] + ДанСтр["П11131М103004"]);
					ДанСтр.Вставить("П11131М105001", ДанСтр["П11131М105002"] + ДанСтр["П11131М105003"] + ДанСтр["П11131М105004"]);
				КонецЕсли;
				ДанСтр.Вставить("П11131М104001", ДанСтр["П11131М102001"] - ДанСтр["П11131М103001"]);
				ДанСтр.Вставить("П11131М104002", ДанСтр["П11131М102002"] - ДанСтр["П11131М103002"]);
				ДанСтр.Вставить("П11131М104003", ДанСтр["П11131М102003"] - ДанСтр["П11131М103003"]);
				ДанСтр.Вставить("П11131М104004", ДанСтр["П11131М102004"] - ДанСтр["П11131М103004"]);
			КонецЦикла;
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1Подр1_3_2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[1] - 1].Строки[
			Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[2] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы11132М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Для каждого ВеткаР1Пр1 Из ДеревоДанных.Строки Цикл
			
			Ветка = ВеткаР1Пр1.Строки[2].Строки[0];
			ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ДанСтр = СтрокаМнЧ.Данные;
				Если РасчетЗаПервыйКвартал Тогда
					ДанСтр.Вставить("П11132М102001", ДанСтр["П11132М102002"] + ДанСтр["П11132М102003"] + ДанСтр["П11132М102004"]);
					ДанСтр.Вставить("П11132М103001", ДанСтр["П11132М103002"] + ДанСтр["П11132М103003"] + ДанСтр["П11132М103004"]);
					ДанСтр.Вставить("П11132М105001", ДанСтр["П11132М105002"] + ДанСтр["П11132М105003"] + ДанСтр["П11132М105004"]);
				КонецЕсли;
				ДанСтр.Вставить("П11132М104001", ДанСтр["П11132М102001"] - ДанСтр["П11132М103001"]);
				ДанСтр.Вставить("П11132М104002", ДанСтр["П11132М102002"] - ДанСтр["П11132М103002"]);
				ДанСтр.Вставить("П11132М104003", ДанСтр["П11132М102003"] - ДанСтр["П11132М103003"]);
				ДанСтр.Вставить("П11132М104004", ДанСтр["П11132М102004"] - ДанСтр["П11132М103004"]);
			КонецЦикла;
			
			Если Ветка = АктивнаяВетка Тогда
				Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
					Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
						ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
					КонецЦикла;
				КонецЦикла;
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил1_1" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы111М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00111М102001", ДанСтр["П00111М102002"] + ДанСтр["П00111М102003"] + ДанСтр["П00111М102004"]);
				ДанСтр.Вставить("П00111М103001", ДанСтр["П00111М103002"] + ДанСтр["П00111М103003"] + ДанСтр["П00111М103004"]);
				ДанСтр.Вставить("П00111М105001", ДанСтр["П00111М105002"] + ДанСтр["П00111М105003"] + ДанСтр["П00111М105004"]);
			КонецЕсли;
			ДанСтр.Вставить("П00111М104001", ДанСтр["П00111М102001"] - ДанСтр["П00111М103001"]);
			ДанСтр.Вставить("П00111М104002", ДанСтр["П00111М102002"] - ДанСтр["П00111М103002"]);
			ДанСтр.Вставить("П00111М104003", ДанСтр["П00111М102003"] - ДанСтр["П00111М103003"]);
			ДанСтр.Вставить("П00111М104004", ДанСтр["П00111М102004"] - ДанСтр["П00111М103004"]);
		КонецЦикла;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы12М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Сумма060_Гр1 = 0;
		Сумма060_Гр2 = 0;
		Сумма060_Гр3 = 0;
		Сумма060_Гр4 = 0;
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00012М102001", ДанСтр["П00012М102002"] + ДанСтр["П00012М102003"] + ДанСтр["П00012М102004"]);
				ДанСтр.Вставить("П00012М103001", ДанСтр["П00012М103002"] + ДанСтр["П00012М103003"] + ДанСтр["П00012М103004"]);
				ДанСтр.Вставить("П00012М104001", ДанСтр["П00012М104002"] + ДанСтр["П00012М104003"] + ДанСтр["П00012М104004"]);
				ДанСтр.Вставить("П00012М105501", ДанСтр["П00012М105502"] + ДанСтр["П00012М105503"] + ДанСтр["П00012М105504"]);
				ДанСтр.Вставить("П00012М106001", ДанСтр["П00012М106002"] + ДанСтр["П00012М106003"] + ДанСтр["П00012М106004"]);
			КонецЕсли;
			ДанСтр.Вставить("П00012М105001", ДанСтр["П00012М102001"] - ДанСтр["П00012М103001"] - ДанСтр["П00012М104001"]);
			ДанСтр.Вставить("П00012М105002", ДанСтр["П00012М102002"] - ДанСтр["П00012М103002"] - ДанСтр["П00012М104002"]);
			ДанСтр.Вставить("П00012М105003", ДанСтр["П00012М102003"] - ДанСтр["П00012М103003"] - ДанСтр["П00012М104003"]);
			ДанСтр.Вставить("П00012М105004", ДанСтр["П00012М102004"] - ДанСтр["П00012М103004"] - ДанСтр["П00012М104004"]);
			Сумма060_Гр1 = Сумма060_Гр1 + ДанСтр["П00012М106001"];
			Сумма060_Гр2 = Сумма060_Гр2 + ДанСтр["П00012М106002"];
			Сумма060_Гр3 = Сумма060_Гр3 + ДанСтр["П00012М106003"];
			Сумма060_Гр4 = Сумма060_Гр4 + ДанСтр["П00012М106004"];
		КонецЦикла;
		
		Если РасчетЗаПервыйКвартал Тогда
			Данные.Вставить("П000120007001", Данные["П000120007002"] + Данные["П000120007003"] + Данные["П000120007004"]);
			Данные.Вставить("П000120008001", Данные["П000120008002"] + Данные["П000120008003"] + Данные["П000120008004"]);
		КонецЕсли;
		
		Сумма090 = Сумма060_Гр1 - Данные["П000120007001"] + Данные["П000120008001"];
		Данные.Вставить("П000120009001", ?(Сумма090 < 0, "2", "1"));
		Данные.Вставить("П000120009002", ?(Сумма090 < 0, - Сумма090, Сумма090));
		Сумма090 = Сумма060_Гр2 - Данные["П000120007002"] + Данные["П000120008002"];
		Данные.Вставить("П000120009003", ?(Сумма090 < 0, "2", "1"));
		Данные.Вставить("П000120009004", ?(Сумма090 < 0, - Сумма090, Сумма090));
		Сумма090 = Сумма060_Гр3 - Данные["П000120007003"] + Данные["П000120008003"];
		Данные.Вставить("П000120009005", ?(Сумма090 < 0, "2", "1"));
		Данные.Вставить("П000120009006", ?(Сумма090 < 0, - Сумма090, Сумма090));
		Сумма090 = Сумма060_Гр4 - Данные["П000120007004"] + Данные["П000120008004"];
		Данные.Вставить("П000120009007", ?(Сумма090 < 0, "2", "1"));
		Данные.Вставить("П000120009008", ?(Сумма090 < 0, - Сумма090, Сумма090));
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				ТДО[Пок.Ключ].Значение = Пок.Значение;
			КонецЦикла;
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил3" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
		КонецЕсли;
		
		Данные.Вставить("П000130006002", Данные["П000130006102"] + Данные["П000130006202"]);
		Данные.Вставить("П000130006003", Данные["П000130006103"] + Данные["П000130006203"]);
		Данные.Вставить("П000130006004", Данные["П000130006104"] + Данные["П000130006204"]);
		
		Данные.Вставить("П000130010003", Данные["П000130001003"] + Данные["П000130002003"] + Данные["П000130003003"]
		+ Данные["П000130004003"] + Данные["П000130005003"] + Данные["П000130006003"] + Данные["П000130007003"]
		+ Данные["П000130008003"] + Данные["П000130009003"]);
		
		Данные.Вставить("П000130010004", Данные["П000130001004"] + Данные["П000130003004"] + Данные["П000130006004"]
		+ Данные["П000130007004"] + Данные["П000130008004"]);
		
		Если Ветка = АктивнаяВетка Тогда
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Обл = ТДО.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Данные[Пок.Ключ];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил4" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
		КонецЕсли;
		
		Данные.Вставить("П000140004003", Данные["П000140005003"] + Данные["П000140006003"]);
		Данные.Вставить("П000140004004", Данные["П000140005004"] + Данные["П000140006004"]);
		
		Данные.Вставить("П000140001002", Данные["П000140002002"] + Данные["П000140003002"] + Данные["П000140004002"]);
		Данные.Вставить("П000140001004", Данные["П000140002004"] + Данные["П000140003004"] + Данные["П000140004004"]);
		
		Данные.Вставить("П000140010003", Данные["П000140011003"] + Данные["П000140012003"]);
		Данные.Вставить("П000140010004", Данные["П000140011004"] + Данные["П000140012004"]);
		
		Данные.Вставить("П000140007002", Данные["П000140008002"] + Данные["П000140009002"] + Данные["П000140010002"]);
		Данные.Вставить("П000140007004", Данные["П000140008004"] + Данные["П000140009004"] + Данные["П000140010004"]);
		
		Данные.Вставить("П000140013002", Данные["П000140014002"]);
		Данные.Вставить("П000140013004", Данные["П000140014004"]);
		
		Данные.Вставить("П000140018003", Данные["П000140019003"] + Данные["П000140020003"]);
		Данные.Вставить("П000140018004", Данные["П000140019004"] + Данные["П000140020004"]);
		
		Данные.Вставить("П000140015002", Данные["П000140016002"] + Данные["П000140017002"] + Данные["П000140018002"]);
		Данные.Вставить("П000140015004", Данные["П000140016004"] + Данные["П000140017004"] + Данные["П000140018004"]);
		
		Данные.Вставить("П000140021002", Данные["П000140022002"] + Данные["П000140023002"]);
		Данные.Вставить("П000140021004", Данные["П000140022004"] + Данные["П000140023004"]);
		
		Данные.Вставить("П000140029002", Данные["П000140006002"] + Данные["П000140012002"] + Данные["П000140020002"]);
		Данные.Вставить("П000140029003", Данные["П000140006003"] + Данные["П000140012003"] + Данные["П000140020003"]);
		Данные.Вставить("П000140029004", Данные["П000140006004"] + Данные["П000140012004"] + Данные["П000140020004"]);
		
		Данные.Вставить("П000140028002", Данные["П000140005002"] + Данные["П000140011002"] + Данные["П000140019002"]);
		Данные.Вставить("П000140028003", Данные["П000140005003"] + Данные["П000140011003"] + Данные["П000140019003"]);
		Данные.Вставить("П000140028004", Данные["П000140005004"] + Данные["П000140011004"] + Данные["П000140019004"]);
		
		Данные.Вставить("П000140027002", Данные["П000140004002"] + Данные["П000140010002"] + Данные["П000140018002"]);
		Данные.Вставить("П000140027003", Данные["П000140028003"] + Данные["П000140029003"]);
		Данные.Вставить("П000140027004", Данные["П000140028004"] + Данные["П000140029004"]);
		
		Данные.Вставить("П000140026002", Данные["П000140003002"] + Данные["П000140009002"] + Данные["П000140017002"]
		+ Данные["П000140023002"]);
		Данные.Вставить("П000140026003", Данные["П000140003003"] + Данные["П000140009003"] + Данные["П000140017003"]
		+ Данные["П000140023003"]);
		Данные.Вставить("П000140026004", Данные["П000140003004"] + Данные["П000140009004"] + Данные["П000140017004"]
		+ Данные["П000140023004"]);
		
		Данные.Вставить("П000140025002", Данные["П000140002002"] + Данные["П000140008002"] + Данные["П000140014002"]
		+ Данные["П000140016002"] + Данные["П000140022002"]);
		Данные.Вставить("П000140025003", Данные["П000140002003"] + Данные["П000140008003"] + Данные["П000140014003"]
		+ Данные["П000140016003"] + Данные["П000140022003"]);
		Данные.Вставить("П000140025004", Данные["П000140002004"] + Данные["П000140008004"] + Данные["П000140014004"]
		+ Данные["П000140016004"] + Данные["П000140022004"]);
		
		Данные.Вставить("П000140024002", Данные["П000140025002"] + Данные["П000140026002"] + Данные["П000140027002"]
		+ Данные["П000140030002"]);
		Данные.Вставить("П000140024004", Данные["П000140025004"] + Данные["П000140026004"] + Данные["П000140027004"]
		+ Данные["П000140030004"] + Данные["П000140031004"]);
		
		Если Ветка = АктивнаяВетка Тогда
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Обл = ТДО.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Данные[Пок.Ключ];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил5" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
		КонецЕсли;
		
		Знаменатель = Данные["П000150002002"];
		Данные.Вставить("П000150004002", ?(Знаменатель = 0, 0, Данные["П000150003002"] / Знаменатель * 100));
		
		Знаменатель = Данные["П000150002003"];
		Данные.Вставить("П000150004003", ?(Знаменатель = 0, 0, Данные["П000150003003"] / Знаменатель * 100));
		
		Если Ветка = АктивнаяВетка Тогда
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Обл = ТДО.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Данные[Пок.Ключ];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил6" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
		КонецЕсли;
		
		Знаменатель = Данные["П000160001001"];
		Данные.Вставить("П000160005001", ?(Знаменатель = 0, 0,
		(Данные["П000160002001"] + Данные["П000160003001"] + Данные["П000160004001"]) / Знаменатель * 100));
		
		Знаменатель = Данные["П000160001002"];
		Данные.Вставить("П000160005002", ?(Знаменатель = 0, 0,
		(Данные["П000160002002"] + Данные["П000160003002"] + Данные["П000160004002"]) / Знаменатель * 100));
		
		Если Ветка = АктивнаяВетка Тогда
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Обл = ТДО.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Данные[Пок.Ключ];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил7" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				Данные.Вставить(Пок.Ключ, ТДО[Пок.Ключ].Значение);
			КонецЦикла;
		КонецЕсли;
		
		Знаменатель = Данные["П000170002002"];
		Данные.Вставить("П000170004002", ?(Знаменатель = 0, 0, Данные["П000170003002"] / Знаменатель * 100));
		
		Знаменатель = Данные["П000170002003"];
		Данные.Вставить("П000170004003", ?(Знаменатель = 0, 0, Данные["П000170003003"] / Знаменатель * 100));
		
		Если Ветка = АктивнаяВетка Тогда
			СтруктЗависимыхЯчеек = Форма.СтруктураЗависимыхЯчеекДляАвторасчета[ИмяРаздела];
			Для каждого Пок Из СтруктЗависимыхЯчеек Цикл
				Обл = ТДО.Найти(Пок.Ключ);
				Если Обл <> Неопределено Тогда
					Обл.Значение = Данные[Пок.Ключ];
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил8" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы18М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Итог010_Гр1 = 0;
		Итог010_Гр2 = 0;
		Итог010_Гр3 = 0;
		Итог010_Гр4 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00018М108001", ДанСтр["П00018М108002"] + ДанСтр["П00018М108003"] + ДанСтр["П00018М108004"]);
			КонецЕсли;
			Итог010_Гр1 = Итог010_Гр1 + ДанСтр["П00018М108001"];
			Итог010_Гр2 = Итог010_Гр2 + ДанСтр["П00018М108002"];
			Итог010_Гр3 = Итог010_Гр3 + ДанСтр["П00018М108003"];
			Итог010_Гр4 = Итог010_Гр4 + ДанСтр["П00018М108004"];
		КонецЦикла;
		Данные.Вставить("П000180001001", Итог010_Гр1);
		Данные.Вставить("П000180001002", Итог010_Гр2);
		Данные.Вставить("П000180001003", Итог010_Гр3);
		Данные.Вставить("П000180001004", Итог010_Гр4);
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
			Для каждого Пок Из Данные Цикл
				ТДО[Пок.Ключ].Значение = Пок.Значение;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел1Прил9" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы19М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Итог010_Гр1 = 0;
		Итог010_Гр2 = 0;
		Итог010_Гр3 = 0;
		Итог010_Гр4 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Если РасчетЗаПервыйКвартал Тогда
				ДанСтр.Вставить("П00019М108001", ДанСтр["П00019М108002"] + ДанСтр["П00019М108003"] + ДанСтр["П00019М108004"]);
			КонецЕсли;
			Итог010_Гр1 = Итог010_Гр1 + ДанСтр["П00019М108001"];
			Итог010_Гр2 = Итог010_Гр2 + ДанСтр["П00019М108002"];
			Итог010_Гр3 = Итог010_Гр3 + ДанСтр["П00019М108003"];
			Итог010_Гр4 = Итог010_Гр4 + ДанСтр["П00019М108004"];
		КонецЦикла;
		Данные.Вставить("П000190001001", Итог010_Гр1);
		Данные.Вставить("П000190001002", Итог010_Гр2);
		Данные.Вставить("П000190001003", Итог010_Гр3);
		Данные.Вставить("П000190001004", Итог010_Гр4);
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					ТДО[ИмяГрафы + "_" + ИндСтроки].Значение = СтрокаМнЧ.Данные[ИмяГрафы];
				КонецЦикла;
			КонецЦикла;
			Для каждого Пок Из Данные Цикл
				ТДО[Пок.Ключ].Значение = Пок.Значение;
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ИмяРаздела = "Раздел2" Тогда
		
		ДеревоДанных = ПолучитьИзВременногоХранилища(
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
		
		АктивнаяВетка = Неопределено;
		Если Форма.СтруктураРеквизитовФормы.НаимТекущегоРаздела = ИмяРаздела Тогда
			АктивнаяВетка = ДеревоДанных.Строки[Форма.СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела[0] - 1];
		КонецЕсли;
		
		ИмяГруппыМнЧ = Форма.СтруктураРеквизитовФормы.мИдГруппы21М1;
		СтруктураГруппыМнЧ = Форма.СтруктураРеквизитовФормы.СтруктураМногострочныхЧастей[ИмяГруппыМнЧ];
		ИменаГрафМнЧ = СтруктураГруппыМнЧ["ИменаГраф"];
		
		Ветка = ДеревоДанных.Строки[0];
		Данные = Ветка.Данные;
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[ИмяГруппыМнЧ];
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
				ИндСтроки = Формат(ДеревоМнЧ.Строки.Индекс(СтрокаМнЧ) + 1, "ЧГ=");
				Для каждого ИмяГрафы Из ИменаГрафМнЧ Цикл
					СтрокаМнЧ.Данные.Вставить(ИмяГрафы, ТДО[ИмяГрафы + "_" + ИндСтроки].Значение);
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		Сумма030 = 0;
		Сумма050 = 0;
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			ДанСтр = СтрокаМнЧ.Данные;
			Сумма030 = Сумма030 + ДанСтр["П00021М109001"];
			Сумма050 = Сумма050 + ДанСтр["П00021М109002"];
		КонецЦикла;
		Данные.Вставить("П000020003001", Сумма030);
		Данные.Вставить("П000020005001", Сумма050);
		
		Если Ветка = АктивнаяВетка Тогда
			Для каждого Пок Из Данные Цикл
				ТДО[Пок.Ключ].Значение = Пок.Значение;
			КонецЦикла;
		КонецЕсли;
		
	КонецЕсли;
	
	Если ДеревоДанных <> Неопределено Тогда
		РегламентированнаяОтчетностьВызовСервера.ПоместитьВКэш(ДеревоДанных, Форма.УникальныйИдентификатор,
		Форма.СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяГлРаздела]);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СобратьДанные()
	
	СформироватьРаздел1();
	
КонецПроцедуры

&НаСервере
Процедура СформироватьРаздел1()
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		СохрОКТМО = СокрЛП(ТабличныйДокумент.Области.Найти("П000010001001").Значение);
	Иначе
		ДеревоРаздела1 = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
		СохрОКТМО = СокрЛП(ДеревоРаздела1.Строки[0].Данные.П000010001001);
	КонецЕсли;
	
	ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыйРаздел(СтруктураРеквизитовФормы.мВыбраннаяФорма,
	СтруктураРеквизитовФормы, мСтруктураМногоуровневыхРазделов, "Раздел1");
	
	ДеревоРаздела1 = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	ВеткаРаздел1 = ДеревоРаздела1.Строки[0];
	
	ВеткаРаздел1.Данные.Вставить("П000010001001", СохрОКТМО);
	
	ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись = Ложь;
	
	Стр070_Код1 = 0;
	Стр071_Код1 = 0;
	Стр072_Код1 = 0;
	Стр073_Код1 = 0;
	Стр070_Код2 = 0;
	Стр071_Код2 = 0;
	Стр072_Код2 = 0;
	Стр073_Код2 = 0;
	Стр070_Код3 = 0;
	Стр071_Код3 = 0;
	Стр072_Код3 = 0;
	Стр073_Код3 = 0;
	Стр070_Код4 = 0;
	Стр071_Код4 = 0;
	Стр072_Код4 = 0;
	Стр073_Код4 = 0;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	Для каждого ВеткаРаздел1Прил1 Из ДеревоДанных.Строки Цикл
		
		ДанныеПодр1_1и1_2 = ВеткаРаздел1Прил1.Строки[0].Строки[0].Данные;
		
		ВеткаРаздел1.Данные["П000010003001"] = ВеткаРаздел1.Данные["П000010003001"] + ДанныеПодр1_1и1_2["П011110006001"];
		ВеткаРаздел1.Данные["П000010003101"] = ВеткаРаздел1.Данные["П000010003101"] + ДанныеПодр1_1и1_2["П011110006002"];
		ВеткаРаздел1.Данные["П000010003201"] = ВеткаРаздел1.Данные["П000010003201"] + ДанныеПодр1_1и1_2["П011110006003"];
		ВеткаРаздел1.Данные["П000010003301"] = ВеткаРаздел1.Данные["П000010003301"] + ДанныеПодр1_1и1_2["П011110006004"];
		
		ВеткаРаздел1.Данные["П000010005001"] = ВеткаРаздел1.Данные["П000010005001"] + ДанныеПодр1_1и1_2["П011120006001"];
		ВеткаРаздел1.Данные["П000010005101"] = ВеткаРаздел1.Данные["П000010005101"] + ДанныеПодр1_1и1_2["П011120006002"];
		ВеткаРаздел1.Данные["П000010005201"] = ВеткаРаздел1.Данные["П000010005201"] + ДанныеПодр1_1и1_2["П011120006003"];
		ВеткаРаздел1.Данные["П000010005301"] = ВеткаРаздел1.Данные["П000010005301"] + ДанныеПодр1_1и1_2["П011120006004"];
		
		МногострочныеДанныеПодр1_3_1
		= ВеткаРаздел1Прил1.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
		Для каждого Строка1_3_1 Из МногострочныеДанныеПодр1_3_1.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_1.Данные["П11131М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код1 = Стр070_Код1 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код1 = Стр071_Код1 + Строка1_3_1.Данные["П11131М105002"];
				Стр072_Код1 = Стр072_Код1 + Строка1_3_1.Данные["П11131М105003"];
				Стр073_Код1 = Стр073_Код1 + Строка1_3_1.Данные["П11131М105004"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код3 = Стр070_Код3 + Строка1_3_1.Данные["П11131М105001"];
				Стр071_Код3 = Стр071_Код3 + Строка1_3_1.Данные["П11131М105002"];
				Стр072_Код3 = Стр072_Код3 + Строка1_3_1.Данные["П11131М105003"];
				Стр073_Код3 = Стр073_Код3 + Строка1_3_1.Данные["П11131М105004"];
			КонецЕсли;
		КонецЦикла;
		
		МногострочныеДанныеПодр1_3_2
		= ВеткаРаздел1Прил1.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
		Для каждого Строка1_3_2 Из МногострочныеДанныеПодр1_3_2.Строки Цикл
			Стр001 = СокрЛП(Строка1_3_2.Данные["П11132М100101"]);
			Если Стр001 = "1" Тогда
				Стр070_Код2 = Стр070_Код2 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код2 = Стр071_Код2 + Строка1_3_2.Данные["П11132М105002"];
				Стр072_Код2 = Стр072_Код2 + Строка1_3_2.Данные["П11132М105003"];
				Стр073_Код2 = Стр073_Код2 + Строка1_3_2.Данные["П11132М105004"];
			ИначеЕсли Стр001 = "2" Тогда
				Стр070_Код4 = Стр070_Код4 + Строка1_3_2.Данные["П11132М105001"];
				Стр071_Код4 = Стр071_Код4 + Строка1_3_2.Данные["П11132М105002"];
				Стр072_Код4 = Стр072_Код4 + Строка1_3_2.Данные["П11132М105003"];
				Стр073_Код4 = Стр073_Код4 + Строка1_3_2.Данные["П11132М105004"];
			КонецЕсли;
		КонецЦикла;
		
		ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
		= ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
		ИЛИ ДанныеПодр1_1и1_2["П011110003002"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011110003003"] > 0
		ИЛИ ДанныеПодр1_1и1_2["П011110003004"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011120003002"] > 0
		ИЛИ ДанныеПодр1_1и1_2["П011120003003"] > 0 ИЛИ ДанныеПодр1_1и1_2["П011120003004"] > 0;
		
	КонецЦикла;
	
	Стр090_Код1 = 0;
	Стр091_Код1 = 0;
	Стр092_Код1 = 0;
	Стр093_Код1 = 0;
	Стр090_Код2 = 0;
	Стр091_Код2 = 0;
	Стр092_Код2 = 0;
	Стр093_Код2 = 0;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1_1"]);
	ВеткаРаздел1Прил1_1 = ДеревоДанных.Строки[0];
	МногострочныеДанные = ВеткаРаздел1Прил1_1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы111М1];
	Для каждого Строка1_1 Из МногострочныеДанные.Строки Цикл
		Стр001 = СокрЛП(Строка1_1.Данные["П00111М100101"]);
		Если Стр001 = "1" Тогда
			Стр090_Код1 = Стр090_Код1 + Строка1_1.Данные["П00111М105001"];
			Стр091_Код1 = Стр091_Код1 + Строка1_1.Данные["П00111М105002"];
			Стр092_Код1 = Стр092_Код1 + Строка1_1.Данные["П00111М105003"];
			Стр093_Код1 = Стр093_Код1 + Строка1_1.Данные["П00111М105004"];
		ИначеЕсли Стр001 = "2" Тогда
			Стр090_Код2 = Стр090_Код2 + Строка1_1.Данные["П00111М105001"];
			Стр091_Код2 = Стр091_Код2 + Строка1_1.Данные["П00111М105002"];
			Стр092_Код2 = Стр092_Код2 + Строка1_1.Данные["П00111М105003"];
			Стр093_Код2 = Стр093_Код2 + Строка1_1.Данные["П00111М105004"];
		КонецЕсли;
	КонецЦикла;
	
	МногострочныеДанные = ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М1];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр070_Код1) ИЛИ ЗначениеЗаполнено(Стр071_Код1)
		ИЛИ ЗначениеЗаполнено(Стр072_Код1) ИЛИ ЗначениеЗаполнено(Стр073_Код1) Тогда
		ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		ДанныеМнЧ.Вставить("П00001М106001", "18210202131061010160");
		ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код1);
		ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код1);
		ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код1);
		ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код2) ИЛИ ЗначениеЗаполнено(Стр071_Код2)
		ИЛИ ЗначениеЗаполнено(Стр072_Код2) ИЛИ ЗначениеЗаполнено(Стр073_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
			НовСтрМнЧ.Данные = Новый Структура;
			НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			ДанныеМнЧ = НовСтрМнЧ.Данные;
		Иначе
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		КонецЕсли;
		ДанныеМнЧ.Вставить("П00001М106001", "18210202131061020160");
		ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код2);
		ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код2);
		ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код2);
		ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код2);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код3) ИЛИ ЗначениеЗаполнено(Стр071_Код3)
		ИЛИ ЗначениеЗаполнено(Стр072_Код3) ИЛИ ЗначениеЗаполнено(Стр073_Код3) Тогда
		Если ИндексСтроки > 0 Тогда
			НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
			НовСтрМнЧ.Данные = Новый Структура;
			НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			ДанныеМнЧ = НовСтрМнЧ.Данные;
		Иначе
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		КонецЕсли;
		ДанныеМнЧ.Вставить("П00001М106001", "18210202132061010160");
		ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код3);
		ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код3);
		ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код3);
		ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код3);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр070_Код4) ИЛИ ЗначениеЗаполнено(Стр071_Код4)
		ИЛИ ЗначениеЗаполнено(Стр072_Код4) ИЛИ ЗначениеЗаполнено(Стр073_Код4) Тогда
		Если ИндексСтроки > 0 Тогда
			НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
			НовСтрМнЧ.Данные = Новый Структура;
			НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			ДанныеМнЧ = НовСтрМнЧ.Данные;
		Иначе
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		КонецЕсли;
		ДанныеМнЧ.Вставить("П00001М106001", "18210202132061020160");
		ДанныеМнЧ.Вставить("П00001М107001", Стр070_Код4);
		ДанныеМнЧ.Вставить("П00001М107101", Стр071_Код4);
		ДанныеМнЧ.Вставить("П00001М107201", Стр072_Код4);
		ДанныеМнЧ.Вставить("П00001М107301", Стр073_Код4);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	
	МногострочныеДанные = ВеткаРаздел1.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы1М2];
	ИндексСтроки = 0;
	Если ЗначениеЗаполнено(Стр090_Код1) ИЛИ ЗначениеЗаполнено(Стр091_Код1)
		ИЛИ ЗначениеЗаполнено(Стр092_Код1) ИЛИ ЗначениеЗаполнено(Стр093_Код1) Тогда
		ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		ДанныеМнЧ.Вставить("П00001М208001", "18210202080061000160");
		ДанныеМнЧ.Вставить("П00001М209001", Стр090_Код1);
		ДанныеМнЧ.Вставить("П00001М209101", Стр091_Код1);
		ДанныеМнЧ.Вставить("П00001М209201", Стр092_Код1);
		ДанныеМнЧ.Вставить("П00001М209301", Стр093_Код1);
		ИндексСтроки = ИндексСтроки + 1;
	КонецЕсли;
	Если ЗначениеЗаполнено(Стр090_Код2) ИЛИ ЗначениеЗаполнено(Стр091_Код2)
		ИЛИ ЗначениеЗаполнено(Стр092_Код2) ИЛИ ЗначениеЗаполнено(Стр093_Код2) Тогда
		Если ИндексСтроки > 0 Тогда
			НовСтрМнЧ = МногострочныеДанные.Строки.Добавить();
			НовСтрМнЧ.Данные = Новый Структура;
			НовСтрМнЧ.ДанныеМногострочныхЧастей = Новый Структура;
			ДанныеМнЧ = НовСтрМнЧ.Данные;
		Иначе
			ДанныеМнЧ = МногострочныеДанные.Строки[0].Данные;
		КонецЕсли;
		ДанныеМнЧ.Вставить("П00001М208001", "18210202120061000160");
		ДанныеМнЧ.Вставить("П00001М209001", Стр090_Код2);
		ДанныеМнЧ.Вставить("П00001М209101", Стр091_Код2);
		ДанныеМнЧ.Вставить("П00001М209201", Стр092_Код2);
		ДанныеМнЧ.Вставить("П00001М209301", Стр093_Код2);
	КонецЕсли;
	
	ВеткаРаздел1.Данные["П000010002001"] = "18210202010061010160";
	ВеткаРаздел1.Данные["П000010004001"] = "18210202101081013160";
	ВеткаРаздел1.Данные["П000010010001"] = "18210202090071010160";
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил2"]);
	ДанныеРаздел1Прил2 = ДеревоДанных.Строки[0].Данные;
	
	ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009001"]);
	Если ПризнакСтр090 = "1" Тогда
		ВеткаРаздел1.Данные["П000010011001"] = ВеткаРаздел1.Данные["П000010011001"] + ДанныеРаздел1Прил2["П000120009002"];
	ИначеЕсли ПризнакСтр090 = "2" Тогда
		ВеткаРаздел1.Данные["П000010012001"] = ВеткаРаздел1.Данные["П000010012001"] + ДанныеРаздел1Прил2["П000120009002"];
	КонецЕсли;
	
	ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009003"]);
	Если ПризнакСтр090 = "1" Тогда
		ВеткаРаздел1.Данные["П000010011101"] = ВеткаРаздел1.Данные["П000010011101"] + ДанныеРаздел1Прил2["П000120009004"];
	ИначеЕсли ПризнакСтр090 = "2" Тогда
		ВеткаРаздел1.Данные["П000010012101"] = ВеткаРаздел1.Данные["П000010012101"] + ДанныеРаздел1Прил2["П000120009004"];
	КонецЕсли;
	
	ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009005"]);
	Если ПризнакСтр090 = "1" Тогда
		ВеткаРаздел1.Данные["П000010011201"] = ВеткаРаздел1.Данные["П000010011201"] + ДанныеРаздел1Прил2["П000120009006"];
	ИначеЕсли ПризнакСтр090 = "2" Тогда
		ВеткаРаздел1.Данные["П000010012201"] = ВеткаРаздел1.Данные["П000010012201"] + ДанныеРаздел1Прил2["П000120009006"];
	КонецЕсли;
	
	ПризнакСтр090 = СокрЛП(ДанныеРаздел1Прил2["П000120009007"]);
	Если ПризнакСтр090 = "1" Тогда
		ВеткаРаздел1.Данные["П000010011301"] = ВеткаРаздел1.Данные["П000010011301"] + ДанныеРаздел1Прил2["П000120009008"];
	ИначеЕсли ПризнакСтр090 = "2" Тогда
		ВеткаРаздел1.Данные["П000010012301"] = ВеткаРаздел1.Данные["П000010012301"] + ДанныеРаздел1Прил2["П000120009008"];
	КонецЕсли;
	
	МногострочныеДанные = ДеревоДанных.Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы12М1];
	Для каждого СтрМнЧ Из МногострочныеДанные.Строки Цикл
		ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
		= ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись
		ИЛИ СтрМнЧ.Данные["П00012М102002"] > 0 ИЛИ СтрМнЧ.Данные["П00012М102003"] > 0
		ИЛИ СтрМнЧ.Данные["П00012М102004"] > 0;
	КонецЦикла;
	
	ВеткаРаздел1.Данные["П000010000101"] = ?(ВыплатыИИныеВознагрВПользуФизЛицВПоследние3МесНачислялись, "1", "2");
	
	РегламентированнаяОтчетность.ПоместитьВКэш(ДеревоРаздела1, УникальныйИдентификатор,
	СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1"]);
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1" Тогда
		НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
		НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
		ВывестиДанныеВТабличныйДокумент("Раздел1", НовыеНомераСтрокМногоуровнегоРаздела);
	КонецЕсли;
	
	РасчетНаСервере("Раздел1");
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруЗависимыхЯчеекДляАвторасчета()
	
	СтруктураЗависимыхЯчеекДляАвторасчета = Новый Структура;
	
	// Раздел 2.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000020003001", "Итог");
	Структ.Вставить("П000020005001", "Итог");
	Структ.Вставить("Итого", "П00021М109001;П00021М109002");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел2", Структ);
	
	// Прил. 9 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000190001001", "Итог");
	Структ.Вставить("П000190001002", "Итог");
	Структ.Вставить("П000190001003", "Итог");
	Структ.Вставить("П000190001004", "Итог");
	Структ.Вставить("Итого", "П00019М108001;П00019М108002;П00019М108003;П00019М108004");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00019М108001", "П00019М108002;П00019М108003;П00019М108004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил9", Структ);
	
	// Прил. 8 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000180001001", "Итог");
	Структ.Вставить("П000180001002", "Итог");
	Структ.Вставить("П000180001003", "Итог");
	Структ.Вставить("П000180001004", "Итог");
	Структ.Вставить("Итого", "П00018М108001;П00018М108002;П00018М108003;П00018М108004");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00018М108001", "П00018М108002;П00018М108003;П00018М108004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил8", Структ);
	
	// Прил. 7 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000170004002", "П000170002002;П000170003002");
	Структ.Вставить("П000170004003", "П000170002003;П000170003003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил7", Структ);
	
	// Прил. 6 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000160005001", "П000160001001;П000160002001;П000160003001;П000160004001");
	Структ.Вставить("П000160005002", "П000160001002;П000160002002;П000160003002;П000160004002");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил6", Структ);
	
	// Прил. 5 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000150004002", "П000150002002;П000150003002");
	Структ.Вставить("П000150004003", "П000150002003;П000150003003");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил5", Структ);
	
	// Прил. 4 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000140004003", "П000140005003;П000140006003");
	Структ.Вставить("П000140004004", "П000140005004;П000140006004");
	Структ.Вставить("П000140001002", "П000140002002;П000140003002;П000140004002;П000140005002;П000140006002");
	Структ.Вставить("П000140001004", "П000140002004;П000140003004;П000140004004;П000140005004;П000140006004");
	Структ.Вставить("П000140010003", "П000140011003;П000140012003");
	Структ.Вставить("П000140010004", "П000140011004;П000140012004");
	Структ.Вставить("П000140007002", "П000140008002;П000140009002;П000140010002;П000140011002;П000140012002");
	Структ.Вставить("П000140007004", "П000140008004;П000140009004;П000140010004;П000140011004;П000140012004");
	Структ.Вставить("П000140013002", "П000140014002");
	Структ.Вставить("П000140013004", "П000140014004");
	Структ.Вставить("П000140018003", "П000140019003;П000140020003");
	Структ.Вставить("П000140018004", "П000140019004;П000140020004");
	Структ.Вставить("П000140015002", "П000140016002;П000140017002;П000140018002;П000140019002;П000140020002");
	Структ.Вставить("П000140015004", "П000140016004;П000140017004;П000140018004;П000140019004;П000140020004");
	Структ.Вставить("П000140021002", "П000140022002;П000140023002");
	Структ.Вставить("П000140021004", "П000140022004;П000140023004");
	Структ.Вставить("П000140029002", "П000140006002;П000140012002;П000140020002");
	Структ.Вставить("П000140029003", "П000140006003;П000140012003;П000140020003");
	Структ.Вставить("П000140029004", "П000140006004;П000140012004;П000140020004");
	Структ.Вставить("П000140028002", "П000140005002;П000140011002;П000140019002");
	Структ.Вставить("П000140028003", "П000140005003;П000140011003;П000140019003");
	Структ.Вставить("П000140028004", "П000140005004;П000140011004;П000140019004");
	Структ.Вставить("П000140027002", "П000140004002;П000140010002;П000140018002");
	Структ.Вставить("П000140027003", "П000140028003;П000140005003;П000140011003;П000140019003;П000140029003;П000140006003;П000140012003;П000140020003");
	Структ.Вставить("П000140027004", "П000140028004;П000140005004;П000140011004;П000140019004;П000140029004;П000140006004;П000140012004;П000140020004");
	Структ.Вставить("П000140026002", "П000140003002;П000140009002;П000140017002;П000140023002");
	Структ.Вставить("П000140026003", "П000140003003;П000140009003;П000140017003;П000140023003");
	Структ.Вставить("П000140026004", "П000140003004;П000140009004;П000140017004;П000140023004");
	Структ.Вставить("П000140025002", "П000140002002;П000140008002;П000140014002;П000140016002;П000140022002");
	Структ.Вставить("П000140025003", "П000140002003;П000140008003;П000140014003;П000140016003;П000140022003");
	Структ.Вставить("П000140025004", "П000140002004;П000140008004;П000140014004;П000140016004;П000140022004");
	Структ.Вставить("П000140024002", "П000140025002;П000140002002;П000140008002;П000140014002;П000140016002;П000140022002;П000140026002;П000140003002;П000140009002;П000140017002;П000140023002;П000140027002;П000140027002;П000140004002;П000140010002;П000140018002;П000140030002");
	Структ.Вставить("П000140024004", "П000140025004;П000140002004;П000140008004;П000140014004;П000140016004;П000140022004;П000140026004;П000140003004;П000140009004;П000140017004;П000140023004;П000140027004;П000140028004;П000140005004;П000140011004;П000140019004;П000140029004;П000140006004;П000140012004;П000140020004;П000140030004;П000140031004");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил4", Структ);
	
	// Прил. 3 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П000130006002", "П000130006102;П000130006202");
	Структ.Вставить("П000130006003", "П000130006103;П000130006203");
	Структ.Вставить("П000130006004", "П000130006104;П000130006204");
	Структ.Вставить("П000130010003", "П000130001003;П000130002003;П000130003003;П000130004003;П000130005003;П000130006003;П000130006103;П000130006203;П000130007003;П000130008003;П000130009003");
	Структ.Вставить("П000130010004", "П000130001004;П000130003004;П000130006004;П000130006104;П000130006204;П000130007004;П000130008004");
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил3", Структ);
	
	// Прил. 2 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П00012М105001", "П00012М102001;П00012М102002;П00012М102003;П00012М102004;П00012М103001;П00012М103002;П00012М103003;П00012М103004;П00012М104001;П00012М104002;П00012М104003;П00012М104004");
	Структ.Вставить("П00012М105002", "П00012М102002;П00012М103002;П00012М104002");
	Структ.Вставить("П00012М105003", "П00012М102003;П00012М103003;П00012М104003");
	Структ.Вставить("П00012М105004", "П00012М102004;П00012М103004;П00012М104004");
	Структ.Вставить("П000120009001", "");
	Структ.Вставить("П000120009002", "");
	Структ.Вставить("П000120009003", "");
	Структ.Вставить("П000120009004", "");
	Структ.Вставить("П000120009005", "");
	Структ.Вставить("П000120009006", "");
	Структ.Вставить("П000120009007", "");
	Структ.Вставить("П000120009008", "");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00012М102001", "П00012М102002;П00012М102003;П00012М102004");
		Структ.Вставить("П00012М103001", "П00012М103002;П00012М103003;П00012М103004");
		Структ.Вставить("П00012М104001", "П00012М104002;П00012М104003;П00012М104004");
		Структ.Вставить("П00012М105501", "П00012М105502;П00012М105503;П00012М105504");
		Структ.Вставить("П00012М106001", "П00012М106002;П00012М106003;П00012М106004");
		Структ.Вставить("П000120007001", "П000120007002;П000120007003;П000120007004");
		Структ.Вставить("П000120008001", "П000120008002;П000120008003;П000120008004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил2", Структ);
	
	// Прил. 1.1 к разделу 1.
	//
	Структ = Новый Структура;
	Структ.Вставить("П00111М104001", "П00111М102001;П00111М102002;П00111М102003;П00111М102004;П00111М103001;П00111М103002;П00111М103003;П00111М103004");
	Структ.Вставить("П00111М104002", "П00111М102002;П00111М103002");
	Структ.Вставить("П00111М104003", "П00111М102003;П00111М103003");
	Структ.Вставить("П00111М104004", "П00111М102004;П00111М103004");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П00111М102001", "П00111М102002;П00111М102003;П00111М102004");
		Структ.Вставить("П00111М103001", "П00111М103002;П00111М103003;П00111М103004");
		Структ.Вставить("П00111М105001", "П00111М105002;П00111М105003;П00111М105004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1_1", Структ);
	
	// Прил. 1 к разделу 1.
	//
	// Подр. 1.3.2.
	Структ = Новый Структура;
	Структ.Вставить("П11132М104001", "П11132М102001;П11132М102002;П11132М102003;П11132М102004;П11132М103001;П11132М103002;П11132М103003;П11132М103004");
	Структ.Вставить("П11132М104002", "П11132М102002;П11132М103002");
	Структ.Вставить("П11132М104003", "П11132М102003;П11132М103003");
	Структ.Вставить("П11132М104004", "П11132М102004;П11132М103004");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П11132М102001", "П11132М102002;П11132М102003;П11132М102004");
		Структ.Вставить("П11132М103001", "П11132М103002;П11132М103003;П11132М103004");
		Структ.Вставить("П11132М105001", "П11132М105002;П11132М105003;П11132М105004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_3_2", Структ);
	// Подр. 1.3.1.
	Структ = Новый Структура;
	Структ.Вставить("П11131М104001", "П11131М102001;П11131М102002;П11131М102003;П11131М102004;П11131М103001;П11131М103002;П11131М103003;П11131М103004");
	Структ.Вставить("П11131М104002", "П11131М102002;П11131М103002");
	Структ.Вставить("П11131М104003", "П11131М102003;П11131М103003");
	Структ.Вставить("П11131М104004", "П11131М102004;П11131М103004");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П11131М102001", "П11131М102002;П11131М102003;П11131М102004");
		Структ.Вставить("П11131М103001", "П11131М103002;П11131М103003;П11131М103004");
		Структ.Вставить("П11131М105001", "П11131М105002;П11131М105003;П11131М105004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_3_1", Структ);
	// Подр. 1.1, 1.2.
	Структ = Новый Структура;
	Структ.Вставить("П011110005001", "П011110003001;П011110003002;П011110003003;П011110003004;П011110004001;П011110004002;П011110004003;П011110004004;П011110004501;П011110004502;П011110004503;П011110004504");
	Структ.Вставить("П011110005002", "П011110003002;П011110004002;П011110004502");
	Структ.Вставить("П011110005003", "П011110003003;П011110004003;П011110004503");
	Структ.Вставить("П011110005004", "П011110003004;П011110004004;П011110004504");
	Структ.Вставить("П011110006001", "П011110006101;П011110006102;П011110006103;П011110006104;П011110006201;П011110006202;П011110006203;П011110006204");
	Структ.Вставить("П011110006002", "П011110006102;П011110006202");
	Структ.Вставить("П011110006003", "П011110006103;П011110006203");
	Структ.Вставить("П011110006004", "П011110006104;П011110006204");
	Структ.Вставить("П011120005001", "П011120003001;П011120003002;П011120003003;П011120003004;П011120004001;П011120004002;П011120004003;П011120004004;П011120004501;П011120004502;П011120004503;П011120004504");
	Структ.Вставить("П011120005002", "П011120003002;П011120004002;П011120004502");
	Структ.Вставить("П011120005003", "П011120003003;П011120004003;П011120004503");
	Структ.Вставить("П011120005004", "П011120003004;П011120004004;П011120004504");
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П011110003001", "П011110003002;П011110003003;П011110003004");
		Структ.Вставить("П011110004001", "П011110004002;П011110004003;П011110004004");
		Структ.Вставить("П011110004501", "П011110004502;П011110004503;П011110004504");
		Структ.Вставить("П011110005101", "П011110005102;П011110005103;П011110005104");
		Структ.Вставить("П011110006101", "П011110006102;П011110006103;П011110006104");
		Структ.Вставить("П011110006201", "П011110006202;П011110006203;П011110006204");
		Структ.Вставить("П011120003001", "П011120003002;П011120003003;П011120003004");
		Структ.Вставить("П011120004001", "П011120004002;П011120004003;П011120004004");
		Структ.Вставить("П011120004501", "П011120004502;П011120004503;П011120004504");
		Структ.Вставить("П011120006001", "П011120006002;П011120006003;П011120006004");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1Прил1Подр1_1и1_2", Структ);
	
	// Раздел 1.
	//
	Структ = Новый Структура;
	Если Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) = 3 Тогда
		Структ.Вставить("П000010003001", "П000010000101;П000010003101;П000010003201;П000010003301");
		Структ.Вставить("П000010005001", "П000010000101;П000010005101;П000010005201;П000010005301");
		Структ.Вставить("П00001М107001", "П000010000101;П00001М107101;П00001М107201;П00001М107301");
		Структ.Вставить("П00001М209001", "П000010000101;П00001М209101;П00001М209201;П00001М209301");
		Структ.Вставить("П000010011001", "П000010000101;П000010011101;П000010011201;П000010011301;П000010012101;П000010012201;П000010012301");
		Структ.Вставить("П000010012001", "П000010000101;П000010011101;П000010011201;П000010011301;П000010012101;П000010012201;П000010012301");
	КонецЕсли;
	СтруктураЗависимыхЯчеекДляАвторасчета.Вставить("Раздел1", Структ);
	
КонецПроцедуры

#КонецОбласти

#Область ВыгрузкаИПроверкаВыгрузкиЭлектронногоПредставленияИЗагрузкаОтчетаИзФайла

#Область ЗапросВФНСНаПроверкуСведенийРаботников

&НаКлиенте
Процедура ВыгрузитьСведенияРаботников(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьСведенияРаботниковЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьСведенияРаботниковЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если НЕ ПроверитьВозможностьВыгрузкиСведенийРаботников() Тогда
		
		ТаблицаСообщенийЗаполнена = Истина;
		
		Если ТаблицаСообщений.Количество() = 0 Тогда
			ТаблицаСообщенийЗаполнена = Ложь;
			НовСтр = ТаблицаСообщений.Добавить();
			НовСтр.Описание = "Выгрузка сведений работников прервана";
		КонецЕсли;
		
		ПредставлениеРасчетаПоСтраховымВзносам = "Расчет по страховым взносам за " + ПредставлениеПериода(НачалоДня(
		СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета), КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета),
		"ФП=Истина") + ?(НомерКорректировки = 0, " (Первичный", " (Корректирующий, номер корректировки " + Формат(
		НомерКорректировки, "ЧГ=")) + ". ИФНС: " + СокрЛП(СтруктураДанныхТитульный.НалоговыйОрган) + ")";
		
		Для Каждого СтрСообщения Из ТаблицаСообщений Цикл
			СтрСообщения.ОтчетДок = СтруктураРеквизитовФормы.мСохраненныйДок;
			СтрСообщения.Отчет = ПредставлениеРасчетаПоСтраховымВзносам;
		КонецЦикла;
		
		ТаблицаСообщенийСтруктура = Новый Структура("ТаблицаСообщений", ТаблицаСообщений);
		
		ПараметрыФормы = Новый Структура("ВладелецТС", ТаблицаСообщенийСтруктура);
		
		ФормаНавигацииПоОшибкам = ПолучитьФорму(
		"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаНавигацииПоОшибкам", ПараметрыФормы);
		Если ФормаНавигацииПоОшибкам.Открыта() Тогда
			ФормаНавигацииПоОшибкам.Закрыть();
			ФормаНавигацииПоОшибкам = ПолучитьФорму(
			"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаНавигацииПоОшибкам", ПараметрыФормы);
		КонецЕсли;
		
		ФормаНавигацииПоОшибкам.Открыть();
		
		ТаблицаСообщений.Очистить();
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
			"ru = 'Не удалось выгрузить сведения работающих лиц из Раздела 3 (%1)';
			|en = 'Не удалось выгрузить сведения работающих лиц из Раздела 3 (%1)'"), ПредставлениеРасчетаПоСтраховымВзносам));
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось сформировать тексты выгрузки';
														|en = 'Не удалось сформировать тексты выгрузки'"));
		
		Если ТаблицаСообщенийЗаполнена Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Для исправления ошибок используйте окно навигации по ошибкам';
				|en = 'Для исправления ошибок используйте окно навигации по ошибкам'"));
		КонецЕсли;
		
		Возврат;
		
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("РасчетПоСтраховымВзносам", СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ИнтерфейсыВзаимодействияБРОКлиент.СформироватьИСохранитьНаДискФайлЗапросаВФНСНаПроверкуСведенийРаботников(
	СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВозможностьВыгрузкиСведенийРаботников()
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.СформироватьСтруктуруПоказателей(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												  мДанныеОтчета,
												  СтруктураРеквизитовФормы,
												  мСтруктураМногоуровневыхРазделов);
	
	ПараметрыВыгрузки = ОбъектОтчета.СформироватьСтруктуруПараметров(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																	 мДанныеОтчета,
																	 СтруктураРеквизитовФормы);
	
	СтатусПроверки = Истина;
	
	ДанныеМногоуровневыхРазделов = Новый Структура;
	СохрСтруктура = ОбъектОтчета.СохраненныеДанныеОтчета(
	СтруктураРеквизитовФормы.мВыбраннаяФорма, СтруктураРеквизитовФормы, мСтруктураМногоуровневыхРазделов);
	Для каждого ЭлементСтруктуры Из СохрСтруктура.ДанныеМногоуровневыхРазделов Цикл
		ДанныеМногоуровневыхРазделов.Вставить(ЭлементСтруктуры.Ключ, ЭлементСтруктуры.Значение);
	КонецЦикла;
	
	// Титульный лист.
	//
	Если ПараметрыВыгрузки.ЭтоЮЛ Тогда
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Не задан ИНН организации, обособленного подразделения", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 10 Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Задан ИНН организации, обособленного подразделения, не состоящий из 10 цифр", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КПП) Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Не задан КПП организации, обособленного подразделения", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.КПП) <> 9 Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Задан КПП организации, обособленного подразделения, не состоящий из 9 символов", "Титульный", "КПП");
			СтатусПроверки = Ложь;
		КонецЕсли;
	Иначе
		Если ПараметрыВыгрузки.ПоМесту = "124" Тогда
			ИП_ГлаваКФХ = " главы крестьянского (фермерского) хозяйства";
		Иначе
			ИП_ГлаваКФХ = " индивидуального предпринимателя";
		КонецЕсли;
		Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.ИННОрг) Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Не задан ИНН" + ИП_ГлаваКФХ, "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		ИначеЕсли СтрДлина(ПараметрыВыгрузки.ИННОрг) <> 12 Тогда
			ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
			"Задан ИНН" + ИП_ГлаваКФХ + ", не состоящий из 12 цифр", "Титульный", "ИНН");
			СтатусПроверки = Ложь;
		КонецЕсли;
	КонецЕсли;
	Если НЕ ЗначениеЗаполнено(ПараметрыВыгрузки.КодНО) Тогда
		ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
		"Не задан код налогового органа", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	ИначеЕсли СтрДлина(ПараметрыВыгрузки.КодНО) <> 4 Тогда
		ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
		"Задан код налогового органа, не состоящий из 4 цифр", "Титульный", "НалоговыйОрган");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	// Раздел 3.
	//
	ДеревоРаздела = ДанныеМногоуровневыхРазделов.Раздел3;
	Если ОбъектОтчета.ЗаполненРаздел(СтруктураРеквизитовФормы.мВыбраннаяФорма,
									 ДеревоРаздела,
									 "Раздел3",
									 СтруктураРеквизитовФормы,
									 мСтруктураМногоуровневыхРазделов) Тогда
		Для каждого СтраницаРаздела Из ДеревоРаздела.Строки Цикл
			
			Данные = СтраницаРаздела.Данные;
			НомерСтраницы = Формат(ДеревоРаздела.Строки.Индекс(СтраницаРаздела) + 1, "ЧГ=");
			
			ДолженБытьЗаполненИННФЛ = НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310010001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011001"])) ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011002"])));
			
			ДолжныБытьЗаполненыКодСерияНомерДокумента = НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310002001"]))
			ИЛИ (ЗначениеЗаполнено(СокрЛП(Данные["П000310010001"])) ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011001"]))
			ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011002"])));
			
			Если ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
				"Раздел 3 -> Страница " + НомерСтраницы
				+ ": должен быть заполнен ИНН физического лица и (или) должны быть заполнены сведения документа, удостоверяющего личность",
				"Раздел3", "П000310002001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ (ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента) Тогда
				ИННФЛ = СокрЛП(Данные["П000310002001"]);
				Если ДолженБытьЗаполненИННФЛ Тогда
					ИННФЛДлина = СтрДлина(ИННФЛ);
					Если НЕ ИННФЛДлина = 12 Тогда
						ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
						+ НомерСтраницы + ": в строке 020 не" + ?(ИННФЛДлина = 0, "", "верно") + " задан ИНН физического лица",
						"Раздел3", "П000310002001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				Иначе
					Если ЗначениеЗаполнено(ИННФЛ) Тогда
						Если НЕ СтрДлина(ИННФЛ) = 12 Тогда
							ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
							+ НомерСтраницы + ": в строке 020 неверно задан ИНН физического лица",
							"Раздел3", "П000310002001", НомерСтраницы);
							СтатусПроверки = Ложь;
						КонецЕсли;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
			
			СНИЛСДлина = СтрДлина(СокрЛП(Данные["П000310003001"]));
			Если НЕ СНИЛСДлина = 14 Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
				+ НомерСтраницы + ": в строке 030 не" + ?(СНИЛСДлина = 0, "", "верно") + " задан СНИЛС физического лица",
				"Раздел3", "П000310003001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310004001"])) Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
				+ НомерСтраницы + ": в строке 040 не задана фамилия физического лица", "Раздел3", "П000310004001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(СокрЛП(Данные["П000310005001"])) Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
				+ НомерСтраницы + ": в строке 050 не задано имя физического лица", "Раздел3", "П000310005001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ ЗначениеЗаполнено(Данные["П000310007001"]) Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
				+ НомерСтраницы + ": в строке 070 не задана дата рождения физического лица",
				"Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			ИначеЕсли НЕ ОбъектОтчета.ДатаВходитВРазрешенныйПериод(
				СтруктураРеквизитовФормы.мВыбраннаяФорма, Данные["П000310007001"]) Тогда
				ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
				"Раздел 3 -> Страница " + НомерСтраницы
				+ ": в строке 070 задана дата рождения физического лица, выходящая за пределы периода с 01.01.1900 по 31.12.2099",
				"Раздел3", "П000310007001", НомерСтраницы);
				СтатусПроверки = Ложь;
			КонецЕсли;
			
			Если НЕ (ДолженБытьЗаполненИННФЛ И ДолжныБытьЗаполненыКодСерияНомерДокумента) Тогда
				Если ДолжныБытьЗаполненыКодСерияНомерДокумента Тогда
					КодВидДокДлина = СтрДлина(СокрЛП(Данные["П000310010001"]));
					Если НЕ КодВидДокДлина = 2 Тогда
						ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 -> Страница "
						+ НомерСтраницы + ": в строке 100 не" + ?(КодВидДокДлина = 0, "", "верно")
						+ " задан код вида документа, удостоверяющего личность", "Раздел3", "П000310010001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
					Если НЕ (ЗначениеЗаполнено(СокрЛП(Данные["П000310011001"]))
						ИЛИ ЗначениеЗаполнено(СокрЛП(Данные["П000310011002"]))) Тогда
						ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
						"Раздел 3 -> Страница " + НомерСтраницы
						+ ": в строке 110 не заданы серия и номер документа, удостоверяющего личность",
						"Раздел3", "П000310011001", НомерСтраницы);
						СтатусПроверки = Ложь;
					ИначеЕсли СтрДлина(СокрЛП(Данные["П000310011001"]) + СокрЛП(Данные["П000310011002"])) > 24 Тогда
						ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект,
						"Раздел 3 -> Страница " + НомерСтраницы
						+ ": в строке 110 общее количество символов в серии и номере документа, удостоверяющего личность, превышает 24",
						"Раздел3", "П000310011001", НомерСтраницы);
						СтатусПроверки = Ложь;
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	Иначе
		ОбъектОтчета.СообщитьВТС(СтруктураРеквизитовФормы.мВыбраннаяФорма, ЭтотОбъект, "Раздел 3 не заполнен",
		"Раздел3", "П000310004001", "1");
		СтатусПроверки = Ложь;
	КонецЕсли;
	
	Возврат СтатусПроверки;
	
КонецФункции

#КонецОбласти

&НаКлиенте
Процедура СравнитьОтчеты(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("СравнитьОтчетыЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(, ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СравнитьОтчетыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьСравнениеКлиент.СравнитьОтчеты(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция СравнениеОтчетов(ДанныеДляСравнения) Экспорт
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Отчет ""%1"" не сохранен.';
																	|en = 'Отчет ""%1"" не сохранен.'"), ЭтотОбъект.Заголовок));
		Возврат Ложь;
	КонецЕсли;
	
	Возврат СравнениеОтчетовНаСервере(ДанныеДляСравнения);
	
КонецФункции

&НаСервере
Функция СравнениеОтчетовНаСервере(ДанныеДляСравнения)
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.СформироватьСтруктуруПоказателей(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												  мДанныеОтчета,
									  			  СтруктураРеквизитовФормы,
												  мСтруктураМногоуровневыхРазделов);
	
	ПараметрыОтчета = ОбъектОтчета.СформироватьСтруктуруПараметров(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																   мДанныеОтчета,
																   СтруктураРеквизитовФормы);
	
	ДеревоДляСравнения = ОбъектОтчета.ИзвлечьСтруктуруXML(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	Результат = РегламентированнаяОтчетностьСравнение.СравнениеОтчетов(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляСравнения, ДеревоДляСравнения);
	
	Возврат Результат;
	
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайла(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗагрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ЗагрузитьИзФайлаОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗагрузитьИзФайлаОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	РегламентированнаяОтчетностьЗагрузкаКлиент.ЗагрузитьИзФайлаОтчет(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Функция ЗагрузкаОтчетаИзФайла(ДанныеДляЗагрузки) Экспорт
	
	Если Модифицированность Тогда
		ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Отчет ""%1"" не сохранен';
																	|en = 'Отчет ""%1"" не сохранен'"), ЭтотОбъект.Заголовок));
		Возврат Ложь;
	КонецЕсли;
	
	Если НЕ ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ЗагрузкаОтчетаИзФайлаНаСервере(ДанныеДляЗагрузки)
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.СформироватьСтруктуруПоказателей(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												  мДанныеОтчета,
												  СтруктураРеквизитовФормы,
												  мСтруктураМногоуровневыхРазделов);
	
	ПараметрыОтчета = ОбъектОтчета.СформироватьСтруктуруПараметров(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																   мДанныеОтчета,
																   СтруктураРеквизитовФормы);
	
	ДеревоДляЗагрузки = ОбъектОтчета.ИзвлечьСтруктуруXML(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	Если НЕ РегламентированнаяОтчетностьЗагрузка.ЗагрузкаОтчетаИзФайла(
		ЭтотОбъект, ПараметрыОтчета, ДанныеДляЗагрузки, ДеревоДляЗагрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ВыгрузитьОтчет();
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчет() Экспорт
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыгрузитьОтчетЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВыгрузитьОтчетЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = Неопределено;
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
	"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтотОбъект);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.СформироватьИЗаписать(СпДокОсн);
	
КонецПроцедуры

&НаКлиенте
Функция УниверсальнаяВыгрузка(ТекстВыгрузки = Неопределено, ПроверятьБлокировки = Истина) Экспорт
	
	Если Модифицированность Тогда
		ТекстЗаголовка = ЗаголовокРегламентированногоОтчета(
		СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
		ОргСтр = " (" + СтруктураРеквизитовФормы.Организация + ")";
		Если СтрНайти(ТекстЗаголовка, ОргСтр) = 0 Тогда
			ТекстЗаголовка = ТекстЗаголовка + ОргСтр;
		КонецЕсли;
		ОбщегоНазначенияКлиент.СообщитьПользователю("Отчет """ + ТекстЗаголовка + """ не сохранен");
		Возврат Ложь;
	КонецЕсли;
	
	Если Открыта() Тогда
		Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
			<> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр(
				"ru = 'Перед выгрузкой необходимо установить единицу измерения ""в рублях""';
				|en = 'Перед выгрузкой необходимо установить единицу измерения ""в рублях""'"));
			Возврат Ложь;
		КонецЕсли;
		
		Если СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
			ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Перед выгрузкой необходимо установить точность ""0""';
															|en = 'Перед выгрузкой необходимо установить точность ""0""'"));
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния
		РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтотОбъект, ОбработкаКС, Истина);
	КонецЕсли;
	
	Если НЕ УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

&НаКлиенте
Функция ЗаголовокРегламентированногоОтчета(ДатаНач, ДатаКон, Периодичность = Неопределено) Экспорт
	
	СтрПериодОтчета = ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета),
	КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина");
	
	Если СтрНайти(Заголовок, СтрПериодОтчета) = 0 Тогда
		Возврат Заголовок + " за " + СтрПериодОтчета;
	Иначе
		Возврат Заголовок;
	КонецЕсли;
	
КонецФункции

&НаСервере
Функция УниверсальнаяВыгрузкаXMLНаСервере(ТекстВыгрузки)
	
	ПараметрыРеглОтчета = Новый Структура;
	ПараметрыРеглОтчета.Вставить("СохраненныйОтчет",  СтруктураРеквизитовФормы.мСохраненныйДок);
	ПараметрыРеглОтчета.Вставить("ИсточникОтчета",    СтруктураРеквизитовФормы.мСохраненныйДок.ИсточникОтчета);
	ПараметрыРеглОтчета.Вставить("ВыбраннаяФорма",    СтруктураРеквизитовФормы.мСохраненныйДок.ВыбраннаяФорма);
	ПараметрыРеглОтчета.Вставить("РезультатВыгрузки", РегламентированнаяОтчетность.НовыйРезультатВыгрузкиРеглОтчета());
	
	ПараметрыРеглОтчета.РезультатВыгрузки.ТаблицаСообщений = ТаблицаСообщений;
	
	РезультатВыгрузки = ОбъектОтчета(ИмяФормы).УниверсальнаяВыгрузка(ПараметрыРеглОтчета);
	
	ТекстВыгрузки = Новый Массив;
	ТекстВыгрузки.Добавить(РезультатВыгрузки);
	
	Возврат РезультатВыгрузки.РеглОтчетВыгружен;
	
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьВыгрузкуОтчета();
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчета()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВыгрузкуОтчетаЗавершение", ЭтотОбъект);
	
	Если Модифицированность Тогда
		СохранитьНаКлиенте(,ОписаниеОповещения);
	Иначе
		ВыполнитьОбработкуОповещения(ОписаниеОповещения);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузкуОтчетаЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ФормаВыгрузкиРеглОтчета = ПолучитьФорму(
	"Документ.ВыгрузкаРегламентированныхОтчетов.Форма.ФормаДокумента", , ЭтотОбъект);
	
	СпДокОсн = Новый СписокЗначений;
	СпДокОсн.Добавить(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	ФормаВыгрузкиРеглОтчета.Проверить(СпДокОсн);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьПоказатели() Экспорт
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	ОбъектОтчета.СформироватьСтруктуруПоказателей(СтруктураРеквизитовФормы.мВыбраннаяФорма,
												  мДанныеОтчета,
												  СтруктураРеквизитовФормы,
												  мСтруктураМногоуровневыхРазделов);
	
	ПараметрыВыгрузки = ОбъектОтчета.СформироватьСтруктуруПараметров(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																	 мДанныеОтчета,
																	 СтруктураРеквизитовФормы);
	
	ДеревоВыгрузки = ОбъектОтчета.ИзвлечьСтруктуруXML(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	Если НЕ ОбъектОтчета.ПроверитьВозможностьВыгрузки(СтруктураРеквизитовФормы.мВыбраннаяФорма,
													  ПараметрыВыгрузки,
													  ДеревоВыгрузки,
													  ЭтотОбъект,
													  СтруктураРеквизитовФормы,
													  мСтруктураМногоуровневыхРазделов) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ОбъектОтчета.ЗаполнитьДанными(СтруктураРеквизитовФормы.мВыбраннаяФорма,
								  мДанныеОтчета,
								  ПараметрыВыгрузки,
								  ДеревоВыгрузки,
								  ЭтотОбъект,
								  СтруктураРеквизитовФормы,
								  мСтруктураМногоуровневыхРазделов);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область УправлениеНастройкамиОтчета

&НаКлиенте
Процедура ОткрытьФормуНастроек(Команда)
	
	ОткрытьФормуВыбораСтраниц("ВыбратьДляНастройки");
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраниц(ВариантВыбора)
	Перем ТекущийРазделОтчетаСокрНаим;
	Перем НомерСтраницыРазделаОтчета;
	
	// Запоминаем текущий раздел, установленный в дереве разделов отчета.
	Если НЕ Элементы.РазделыОтчета.ТекущиеДанные = Неопределено Тогда
		ТекущийРазделОтчетаСокрНаим = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
		НомерСтраницыРазделаОтчета  = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета;
	КонецЕсли;
	
	мПараметры = Новый Структура;
	мПараметры.Вставить("ПроверкаСоотношений", Истина);
	мПараметры.Вставить("Автосохранение", Ложь);
	мПараметры.Вставить("ИмеетсяРеквизитДеревоВыбранныхСтраниц", Истина);
	мПараметры.Вставить("ИмяОтчета", ИмяОтчета(ИмяФормы));
	
	Если СтруктураРеквизитовФормы.ДоступенМеханизмПечатиРеглОтчетностиСДвухмернымШтрихкодомPDF417 Тогда
		мПараметры.Вставить("РазрешитьВстроеннуюПечать", Истина);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ФлажокОтклАвтоРасчет", СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет);
	ПараметрыФормы.Вставить("мПечатьБезШтрихкодаРазрешена", СтруктураРеквизитовФормы.мПечатьБезШтрихкодаРазрешена);
	ПараметрыФормы.Вставить("мАвтоВыборКодов", СтруктураРеквизитовФормы.мАвтоВыборКодов);
	ПараметрыФормы.Вставить("мСчетчикСтраниц", СтруктураРеквизитовФормы.мСчетчикСтраниц);
	ПараметрыФормы.Вставить("мПроверятьСоотношенияПриПечатиИВыгрузки", СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки);
	ПараметрыФормы.Вставить("мПараметры", мПараметры);
	
	ФормаНастройкиОтчета = РегламентированнаяОтчетностьКлиент.ПолучитьОбщуюФормуПоИмени(
	"НастройкиОтчета", ПараметрыФормы, ЭтотОбъект);
	
	мДеревоВыбранныхСтраниц.ПолучитьЭлементы().Очистить();
	
	КопироватьДанныеФормы(мДеревоСтраницОтчета, ФормаНастройкиОтчета.Дерево);
	
	ЗначениеАвторасчета = СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет;
	
	ДополнительныеПараметры = Новый Структура(
	"ЗначениеАвторасчета, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим",
	ЗначениеАвторасчета, НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим);
	ФормаНастройкиОтчета.ОписаниеОповещенияОЗакрытии = Новый ОписаниеОповещения(
	"ОткрытьФормуВыбораСтраницЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ФормаНастройкиОтчета.РежимОткрытияОкна = РежимОткрытияОкнаФормы.БлокироватьОкноВладельца;
	ФормаНастройкиОтчета.Открыть();
	
КонецПроцедуры

&НаКлиенте
Процедура ОткрытьФормуВыбораСтраницЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ЗначениеАвторасчета = ДополнительныеПараметры.ЗначениеАвторасчета;
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	
	РегламентированнаяОтчетностьКлиентСервер.ПоказатьКнопкиПечати(ЭтотОбъект);
	
	Модифицированность = Истина;
	
	флЗначенияИдентичны = Истина;
	
	Для Индекс = 0 По мДеревоСтраницОтчета.ПолучитьЭлементы().Количество() - 1 Цикл
		Если НЕ мДеревоСтраницОтчета.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу
			= мДеревоВыбранныхСтраниц.ПолучитьЭлементы()[Индекс].ПоказатьСтраницу Тогда
			флЗначенияИдентичны = Ложь;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Если ЗначениеАвторасчета <> СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет Тогда
		Если СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Ложь Тогда
			ДополнительныеПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			Оп = Новый ОписаниеОповещения(
			"ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = НСтр("ru = 'Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?';
								|en = 'Будет произведен перерасчет всех рассчитываемых показателей. Продолжить?'");
			ПоказатьВопрос(Оп, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
		Иначе
			УстановитьДоступностьОбластей(ЭтотОбъект, ТекущийРазделОтчетаСокрНаим);
			ДопПараметры = Новый Структура(
			"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
			НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
			ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
		КонецЕсли;
	Иначе
		ДопПараметры = Новый Структура(
		"НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
		НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
		ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросПерерасчетВсехРассчитываемыхПоказателейЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		СтруктураРеквизитовФормы.ФлажокОтклАвтоРасчет = Истина;
		Возврат;
	КонецЕсли;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, ТекущийРазделОтчетаСокрНаим);
	
	РасчетНаСервере();
	
	ДопПараметры = Новый Структура("НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны",
	НомерСтраницыРазделаОтчета, ТекущийРазделОтчетаСокрНаим, флЗначенияИдентичны);
	ПослеОткрытияФормыВыбораСтраниц(ДопПараметры);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеОткрытияФормыВыбораСтраниц(ДополнительныеПараметры)
	
	НомерСтраницыРазделаОтчета = ДополнительныеПараметры.НомерСтраницыРазделаОтчета;
	ТекущийРазделОтчетаСокрНаим = ДополнительныеПараметры.ТекущийРазделОтчетаСокрНаим;
	флЗначенияИдентичны = ДополнительныеПараметры.флЗначенияИдентичны;
	
	РегламентированнаяОтчетностьКлиент.ПоказатьСтраницыОтчетаНаКлиенте(ЭтотОбъект);
	
	Если НЕ флЗначенияИдентичны Тогда
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		Если НЕ ТекущийРазделОтчетаСокрНаим = Неопределено Тогда
			
			НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
			РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ТекущийРазделОтчетаСокрНаим);
			
			Если НЕ НайденнаяСтрока = Неопределено И НЕ НомерСтраницыРазделаОтчета = Неопределено
				И НайденнаяСтрока.ПолучитьЭлементы().Количество() > 0 Тогда
				НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
				НайденнаяСтрока.ПолучитьЭлементы(), "КолонкаНомерСтраницыРазделаОтчета", НомерСтраницыРазделаОтчета);
			КонецЕсли;
			
			Если НЕ НайденнаяСтрока = Неопределено Тогда
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Очистка

#Область ОчисткаОтчета

&НаКлиенте
Процедура ОчиститьОтчет(Команда)
	
	РегламентированнаяОтчетностьКлиент.МеханизмыОчисткиРегламентированныхОтчетов(ЭтотОбъект, "ОчиститьВесьОтчет");
	
КонецПроцедуры

&НаКлиенте
Процедура Очистить(ВыполняемоеОповещение = Неопределено) Экспорт
	
	РегламентированнаяОтчетностьКлиент.Очистить(ЭтотОбъект, ВыполняемоеОповещение);
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьНаСервере() Экспорт
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела <> "Титульный" Тогда
		ТабличныйДокумент.Очистить();
	КонецЕсли;
	
	ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыеРазделы(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																		  СтруктураРеквизитовФормы,
																		  мСтруктураМногоуровневыхРазделов);
	
	СформироватьДеревоРазделовОтчетаНаСервере();
	
	ОбновитьДеревоРазделовВФормеОтчета(СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_1и1_2" Тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1" тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(2);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2" тогда
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(3);
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела <> "Титульный" Тогда
		ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОбновитьДеревоРазделовВФормеОтчета(ИмяРаздела)
	
	Если НЕ ИмяРаздела = Неопределено Тогда
		
		// Пытаемся найти ранее запомненный раздел.
		НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
		РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", ИмяРаздела);
		
		// В случае успешного поиска, устанавливаем курсор на найденный раздел.
		Если НЕ НайденнаяСтрока = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОчисткаТекущегоРаздела

&НаКлиенте
Процедура ОчиститьТекущийРаздел(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРаздела", СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ДополнительныеПараметры.Вставить(
	"ВыполняемоеОповещение", Новый ОписаниеОповещения("ОчиститьТекущийРазделЗавершение", ЭтотОбъект));
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
	"ru = 'Внимание! Будет очищен текущий раздел.%1Продолжить?';
	|en = 'Внимание! Будет очищен текущий раздел.%1Продолжить?'"), Символы.ПС);
	
	Оп = Новый ОписаниеОповещения("ВопросОчиститьТекущийРазделЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(Оп, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТекущийРазделЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ИмяРаздела = ДополнительныеПараметры.ИмяРаздела;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОчиститьТекущийРазделНаСервере(ИмяРаздела);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчиститьТекущийРазделНаСервере(ИмяРаздела)
	
	Если ИмяРаздела = "Раздел3" Тогда
		
		ТабличныйДокумент.Очистить();
		
		ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыйРаздел(СтруктураРеквизитовФормы.мВыбраннаяФорма,
		СтруктураРеквизитовФормы, мСтруктураМногоуровневыхРазделов, ИмяРаздела);
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		
		Для каждого ИскомыйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если ИскомыйРаздел.КолонкаРазделыОтчетаСокрНаим = ИмяРаздела Тогда
				Для каждого НайденнаяСтраница Из ИскомыйРаздел.ПолучитьЭлементы() Цикл
					Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
					Прервать;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
		Модифицированность = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущийРазделЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Возврат;
	
КонецПроцедуры

#КонецОбласти

#Область ОчисткаТекущейСтраницы

&НаКлиенте
Процедура ОчиститьТекущуюСтраницу(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ИмяРаздела", СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	ДополнительныеПараметры.Вставить(
	"ВыполняемоеОповещение", Новый ОписаниеОповещения("ОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект));
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		СтруктураРеквизитовФормы.Вставить("КодПоМестуДоОчистки", СокрЛП(ТабличныйДокумент.Области.ПоМесту.Значение));
	КонецЕсли;
	
	ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
	"ru = 'Внимание! Будет очищена текущая страница.%1Продолжить?';
	|en = 'Внимание! Будет очищена текущая страница.%1Продолжить?'"), Символы.ПС);
	
	Оп = Новый ОписаниеОповещения("ВопросОчиститьТекущуюСтраницуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ПоказатьВопрос(Оп, ТекстВопроса, РежимДиалогаВопрос.ДаНет, , КодВозвратаДиалога.Нет);
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросОчиститьТекущуюСтраницуЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	ИмяРаздела = ДополнительныеПараметры.ИмяРаздела;
	ВыполняемоеОповещение = ДополнительныеПараметры.ВыполняемоеОповещение;
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОчисткаРегламентированногоОтчетаНаСервере(ИмяРаздела);
		
		Если ВыполняемоеОповещение <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ОчисткаРегламентированногоОтчетаНаСервере(ИмяСтраницы) Экспорт
	
	Если ИмяСтраницы = "Титульный" Тогда
		
		Для каждого Обл Из ТабличныйДокумент.Области Цикл
			Если СтрЧислоВхождений(Тип(Обл), "Рисунок") = 0 И Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
				И Обл.СодержитЗначение = Истина И НЕ Обл.Защита Тогда
				Обл.Очистить();
			КонецЕсли;
		КонецЦикла;
		
		Обл = ТабличныйДокумент.Области.Найти("ДатаПодписи");
		Если ЗначениеЗаполнено(Обл.Значение) Тогда
			ДатаПодписи = Лев(СтрЗаменить(Формат(Обл.Значение, "ДФ = ""дд.ММ.гггг 'г.'"""), ".", ""), 8);
		Иначе
			ДатаПодписи = "        ";
		КонецЕсли;
		
	Иначе
		
		ТабличныйДокумент.Очистить();
		ТабличныйДокумент.Вывести(ОбъектОтчета(ИмяФормы).ПолучитьМакет(Сред(
		ИмяФормы, СтрНайти(ИмяФормы, "ФормаОтчета")) + "_" + ИмяСтраницы));
		
		ВывестиДанныеВТабличныйДокументНаСервере(ИмяСтраницы, СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьТекущуюСтраницуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		НомерКорректировки = 0;
		ТабличныйДокумент.Области.НомерКорректировки.Значение = "0";
		СтруктураРеквизитовФормы.ВидДокумента = ?(НомерКорректировки = 0, 0, 1);
		Если СтруктураРеквизитовФормы.Свойство("КодПоМестуДоОчистки") Тогда
			ТабличныйДокумент.Области.ПоМесту.Значение = СтруктураРеквизитовФормы.КодПоМестуДоОчистки;
			СтруктураРеквизитовФормы.Удалить("КодПоМестуДоОчистки");
		КонецЕсли;
	Иначе
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1" Тогда
			СтруктПарам = Новый Структура;
			СтруктПарам.Вставить("КодТарифа", ТабличныйДокумент.Область("П000110000101").Значение);
			СтруктПарам.Вставить("НомерСтраницы", Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета = ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
		ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил9" Тогда
			// Особая обработка текста в строке 020 Приложения 9 к Разделу 1.
			ТабличныйДокумент.Области.П00019М102001_1.Значение = "00001";
		ИначеЕсли СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел3" Тогда
			СтруктПарам = Новый Структура;
			СтруктПарам.Вставить("Фам", ТабличныйДокумент.Область("П000310004001").Значение);
			СтруктПарам.Вставить("Имя", ТабличныйДокумент.Область("П000310005001").Значение);
			СтруктПарам.Вставить("Отч", ТабличныйДокумент.Область("П000310006001").Значение);
			СтруктПарам.Вставить("ДатаРожд", ТабличныйДокумент.Область("П000310007001").Значение);
			СтруктПарам.Вставить("НомерСтраницы", Элементы.РазделыОтчета.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчета
			= РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
		КонецЕсли;
		СпрятатьСсылкуУдалитьСтраницу();
		Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1, 1, 1);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Печать

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФорму(ЭтотОбъект, Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланк(Команда)
	
	Отказ = Ложь;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ПоказатьБланкЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередПечатьюРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьБланкЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	Печать(Команда.Имя);
	
КонецПроцедуры

&НаКлиенте
Процедура Печать(ВидПечати, НеИзФормыОтчета = Ложь) Экспорт
	
	Состояние(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр(
	"ru = '%1. Формируется печатная форма...';
	|en = '%1. Формируется печатная форма...'"), Заголовок), , , БиблиотекаКартинок.Печать);
	
	Если ВидПечати = "ПоказатьРеестр" Тогда
		ЗаголовокФормы = "Реестр сведений о сумме выплат и вознаграждений за " + ПредставлениеПериода(
		НачалоДня(НачалоМесяца(ДобавитьМесяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета, - 2))),
		КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета), "ФП = Истина")
		+ " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
		ДополнительныеПараметры = Новый Структура("ЗаголовокФормы", ЗаголовокФормы);
		Если НЕ ПечатьРеестраНаСервере(ВидПечати, ЗаголовокФормы) Тогда
			Возврат;
		КонецЕсли;
	Иначе
		Если СтруктураРеквизитовФормы.мПроверятьСоотношенияПриПечатиИВыгрузки = Истина Тогда // возможны 3 состояния флага
			РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтотОбъект, ОбработкаКС, Истина);
		КонецЕсли;
	
		ДополнительныеПараметры = Неопределено;
		Если НЕ ПечатьНаСервере(ВидПечати) Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	// Для вывода штампа ЭП на всех листах.
	ДополнительныеПараметрыПечати = Неопределено;
	Если НЕ СтруктураРеквизитовФормы.Свойство("ДополнительныеПараметрыПечати", ДополнительныеПараметрыПечати)
	 ИЛИ ТипЗнч(ДополнительныеПараметрыПечати) <> Тип("Структура") Тогда
		ДополнительныеПараметрыПечати = Новый Структура();
		СтруктураРеквизитовФормы.Вставить("ДополнительныеПараметрыПечати", ДополнительныеПараметрыПечати);
	КонецЕсли;
	ДополнительныеПараметрыПечати.Вставить("ШтампЭЦПНаКаждомЛисте", Истина);
	
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
	ЭтотОбъект, ВидПечати, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов, ДополнительныеПараметры);
	
	СтруктураРеквизитовФормы.мРежимПечати = Ложь;
	
КонецПроцедуры

&НаСервере
Функция ПечатьРеестраНаСервере(ВидПечати, ЗаголовокПечатнойФормы)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию';
			|en = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию'"));
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	сохрТаблДок = ТабличныйДокумент.ПолучитьОбласть();
	
	сохрНомераСтрокМногоуровнегоРаздела = СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела;
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	ВремПоля = Новый Структура(СтрПоля);
	
	ЗаполнитьЗначенияСвойств(ВремПоля, ТабличныйДокумент, СтрПоля);
	
	// Начало общей части формирования реестра.
	//
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("НаименованиеЛиста",  "Реестр");
	СтруктураПараметров.Вставить("ОриентацияЛиста",    "Ландшафт");
	СтруктураПараметров.Вставить("ИмяСтраницы",        "Реестр");
	Структурапараметров.Вставить("ИмяОбластиТаблПоля", "ТабличныйДокумент");
	СтруктураПараметров.Вставить("ВидПечати",          "ПоказатьБланк");
	
	ПредставленияМесяцев = Новый Структура;
	
	КонПериода = КонецДня(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	НачПериода = НачалоДня(НачалоМесяца(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ПредставленияМесяцев.Вставить("Мес3", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	КонПериода = КонецДня(КонецМесяца(ДобавитьМесяц(КонПериода, -1)));
	НачПериода = НачалоДня(НачалоМесяца(КонПериода));
	ПредставленияМесяцев.Вставить("Мес2", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	КонПериода = КонецДня(КонецМесяца(ДобавитьМесяц(КонПериода, -1)));
	НачПериода = НачалоДня(НачалоМесяца(КонПериода));
	ПредставленияМесяцев.Вставить("Мес1", ПредставлениеПериода(НачПериода, КонПериода, "ФП = Истина"));
	
	ВозможныеМесяцы = Новый Массив;
	ВозможныеМесяцы.Добавить("1");
	ВозможныеМесяцы.Добавить("2");
	ВозможныеМесяцы.Добавить("3");
	
	ИмяМакета = "ПечатныйБланк2020Кв1_Реестр";
	
	Макет = ОбъектОтчета(ИмяФормы).ПолучитьМакет(ИмяМакета);
	
	// Формирование части "Реестр сведений о сумме выплат и вознаграждений".
	//
	ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
	СтрокаПФ = Макет.Получитьобласть("Шапка");
	СтрокаПФ.Параметры.Заполнить(ПредставленияМесяцев);
	СтрокаПФ.Параметры.ЗаголовокПечатнойФормы = ЗаголовокПечатнойФормы;
	ПечФорма.Вывести(СтрокаПФ);
	ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2"));
	
	ИндОсновныхЧастей = 2;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ТЗ = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(17, 2);
	КС = Новый КвалификаторыСтроки(4);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , , КЧ);
	
	ТЗ.Колонки.Добавить("КодКатегорииЗЛ", ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Мес1_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаВыпл", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_БазаВсего", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_БазаГПДог", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаСтВз", ОписаниеТиповЧ);
	
	ТЗ_ИтогПоРазделу = ТЗ.Скопировать();
	
	ИндСтрокаВыплат = 0;
	
	РазмерПачки = 1000;
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ТЗ.Очистить();
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы321М1];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			ДанныеСтрокиМнЧ = СтрокаМнЧ.Данные;
			
			Мес = СокрЛП(ДанныеСтрокиМнЧ["П00321М112001"]);
			
			ИндМес = ВозможныеМесяцы.Найти(Мес);
			
			Если ИндМес <> Неопределено Тогда
				
				НовСтрТЗ = ТЗ.Добавить();
				НовСтрТЗ.КодКатегорииЗЛ = ДанныеСтрокиМнЧ["П00321М113001"];
				
				Инд_ = Формат(ИндМес + 1, "ЧГ=") + "_";
				
				НовСтрТЗ["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00321М114001"];
				НовСтрТЗ["Мес" + Инд_ + "БазаВсего"] = ДанныеСтрокиМнЧ["П00321М115001"];
				НовСтрТЗ["Мес" + Инд_ + "БазаГПДог"] = ДанныеСтрокиМнЧ["П00321М116001"];
				НовСтрТЗ["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00321М117001"];
				
				НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
				
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаВыпл"] = ДанныеСтрокиМнЧ["П00321М114001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "БазаВсего"] = ДанныеСтрокиМнЧ["П00321М115001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "БазаГПДог"] = ДанныеСтрокиМнЧ["П00321М116001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00321М117001"];
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ.Свернуть("КодКатегорииЗЛ", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
		ТЗ.Сортировать("КодКатегорииЗЛ");
		
		Если ТЗ.Количество() > 0 Тогда
			
			ПредстЗЛ = "";
			Фам = СокрЛП(Ветка.Данные["П000310004001"]);
			Имя = СокрЛП(Ветка.Данные["П000310005001"]);
			Отч = СокрЛП(Ветка.Данные["П000310006001"]);
			Если ЗначениеЗаполнено(Фам) Тогда
				ПредстЗЛ = Фам;
			КонецЕсли;
			Если ЗначениеЗаполнено(Имя) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Имя, Имя);
			КонецЕсли;
			Если ЗначениеЗаполнено(Отч) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Отч, Отч);
			КонецЕсли;
			
			СНИЛС = СокрЛП(Ветка.Данные["П000310003001"]);
			
			ИмяСтрокиВыплат = ?(ТЗ.Количество() = 1, "СтрокаВыплат", "СтрокаВыплатКурсив");
			
			ПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
			
			ПФ.Параметры.ФИО = ПредстЗЛ;
			ПФ.Параметры.СНИЛС = СНИЛС;
			ПФ.Параметры.Заполнить(ТЗ[0]);
			
			ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
			
			ПФ.Параметры.НомПП = Формат(ИндСтрокаВыплат, "ЧГ=");
			
			ПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплат" + Формат(ИндСтрокаВыплат, "ЧГ=");
			
			Для ИндСтрТЗ = 1 По ТЗ.Количество() - 1 Цикл
				
				СтрокаПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
				
				СтрокаПФ.Параметры.Заполнить(ТЗ[ИндСтрТЗ]);
				
				ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
				
				СтрокаПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплат" + Формат(ИндСтрокаВыплат, "ЧГ=");
				
				ПФ.Вывести(СтрокаПФ);
				
				Если ИндСтрТЗ = ТЗ.Количество() - 1 Тогда
					
					СтрокаПФ = Макет.Получитьобласть("СтрокаВыплатПодитог");
					ТЗ_ = ТЗ.Скопировать();
					ТЗ_.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
					СтрокаПФ.Параметры.Заполнить(ТЗ_[0]);
					
					ПФ.Вывести(СтрокаПФ);
					
					ОблНиз  = ПФ.Область("СтрокаВыплатПодитог").Низ;
					ОблВерх = ОблНиз - ТЗ.Количество();
					
					Для ОблКоордПоВертикали = ОблВерх По ОблНиз Цикл
						Обл = ПФ.Область(ОблКоордПоВертикали, , ОблКоордПоВертикали, );
						Обл.Имя = "";
					КонецЦикла;
					НовыйИндСтрокаВыплат = ИндСтрокаВыплат - (ТЗ.Количество() - 1);
					Обл = ПФ.Область(ОблВерх, , ОблНиз, );
					Обл.Имя = "СтрокаВыплат" + Формат(НовыйИндСтрокаВыплат, "ЧГ=");
					
					ИндСтрокаВыплат = НовыйИндСтрокаВыплат;
					
					Обл = ПФ.Область(ОблВерх, 5, ОблВерх, 17);
					Обл.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
					
					Обл = ПФ.Область(ОблВерх, 2, ОблНиз, 2);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 3, ОблНиз, 3);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 4, ОблНиз, 4);
					Обл.Объединить();
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПечФорма.Вывести(ПФ);
			
		КонецЕсли;
		
		Если ИндСтрокаВыплат > 0
			И (ИндСтрокаВыплат / РазмерПачки = Цел(ИндСтрокаВыплат / РазмерПачки))
			И (ИндСтрокаВыплат <> ДеревоДанных.Строки.Количество()) Тогда
			
			ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ПечФорма.Автомасштаб = Истина;
			
			ТабличныйДокумент.ПолеСверху = 5;
			ТабличныйДокумент.ПолеСправа = 5;
			ТабличныйДокумент.ПолеСнизу  = 5;
			ТабличныйДокумент.ПолеСлева  = 5;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ПечФорма);
			
			РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
			Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
			
			ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
			ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2"));
			
			ИндОсновныхЧастей = 2;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу3");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
	Если ТЗ_ИтогПоРазделу.Количество() > 0 Тогда
		ПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	КонецЕсли;
		
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	ТЗ_ИтогПоРазделу.Очистить();
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ДанныеПодр1_1и1_2 = Ветка.Строки[0].Строки[0].Данные;
		
		НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011110003002"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011110003003"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаВыпл"] = ДанныеПодр1_1и1_2["П011110003004"];
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005002"] - ДанныеПодр1_1и1_2["П011110005102"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005003"] - ДанныеПодр1_1и1_2["П011110005103"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_БазаВсего"] = ДанныеПодр1_1и1_2["П011110005004"] - ДанныеПодр1_1и1_2["П011110005104"];
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006102"];
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006103"];
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаСтВз"] = ДанныеПодр1_1и1_2["П011110006104"];
		
	КонецЦикла;
	
	СтрокаПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу1");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_СуммаВыпл,Мес1_БазаВсего,Мес1_БазаГПДог,Мес1_СуммаСтВз,Мес2_СуммаВыпл,Мес2_БазаВсего,Мес2_БазаГПДог,Мес2_СуммаСтВз,Мес3_СуммаВыпл,Мес3_БазаВсего,Мес3_БазаГПДог,Мес3_СуммаСтВз");
	СтрокаПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	ПФ.Вывести(СтрокаПФ);
		
	Если НЕ ПечФорма.ПроверитьВывод(ПФ) Тогда
		
		ПечФорма.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть1");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть1");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧасть" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть2");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть2");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧасть" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
	КонецЕсли;
	
	ПечФорма.Вывести(ПФ);
	
	ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ПечФорма.Автомасштаб = Истина;
	
	ТабличныйДокумент.ПолеСверху = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.ПолеСнизу  = 5;
	ТабличныйДокумент.ПолеСлева  = 5;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ПечФорма);
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
	Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
	// Формирование части "Реестр сведений о сумме выплат и вознаграждений по дополнительному тарифу".
	//
	ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
	СтрокаПФ = Макет.Получитьобласть("ШапкаДопТариф");
	СтрокаПФ.Параметры.Заполнить(ПредставленияМесяцев);
	СтрокаПФ.Параметры.ЗаголовокПечатнойФормы = СтрЗаменить(ЗаголовокПечатнойФормы,
	"Реестр сведений о сумме выплат и вознаграждений",
	"Реестр сведений о сумме выплат и вознаграждений по дополнительному тарифу");
	ПечФорма.Вывести(СтрокаПФ);
	ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф"));
	
	ИндОсновныхЧастей = 2;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел3"]);
	
	ТЗ = Новый ТаблицаЗначений;
	
	КЧ = Новый КвалификаторыЧисла(17, 2);
	КС = Новый КвалификаторыСтроки(3);
	Массив = Новый Массив;
	Массив.Добавить(Тип("Строка"));
	ОписаниеТиповС = Новый ОписаниеТипов(Массив, , КС);
	Массив.Очистить();
	Массив.Добавить(Тип("Число"));
	ОписаниеТиповЧ = Новый ОписаниеТипов(Массив, , , КЧ);
	
	ТЗ.Колонки.Добавить("КодЗЛ",          ОписаниеТиповС);
	ТЗ.Колонки.Добавить("Мес1_База",      ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес1_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_База",      ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес2_СуммаСтВз", ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_База",      ОписаниеТиповЧ);
	ТЗ.Колонки.Добавить("Мес3_СуммаСтВз", ОписаниеТиповЧ);
	
	ТЗ_ИтогПоРазделу = ТЗ.Скопировать();
	
	ИндСтрокаВыплат = 0;
	
	РазмерПачки = 1000;
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		ТЗ.Очистить();
		
		ДеревоМнЧ = Ветка.ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы322М1];
		
		Для каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
			
			ДанныеСтрокиМнЧ = СтрокаМнЧ.Данные;
			
			Мес = СокрЛП(ДанныеСтрокиМнЧ["П00322М118001"]);
			
			ИндМес = ВозможныеМесяцы.Найти(Мес);
			
			Если ИндМес <> Неопределено Тогда
				
				НовСтрТЗ = ТЗ.Добавить();
				НовСтрТЗ.КодЗЛ = ДанныеСтрокиМнЧ["П00322М119001"];
				
				Инд_ = Формат(ИндМес + 1, "ЧГ=") + "_";
				
				НовСтрТЗ["Мес" + Инд_ + "База"]      = ДанныеСтрокиМнЧ["П00322М120001"];
				НовСтрТЗ["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00322М121001"];
				
				НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
				
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "База"]      = ДанныеСтрокиМнЧ["П00322М120001"];
				НовСтрТЗ_ИтогПоРазделу["Мес" + Инд_ + "СуммаСтВз"] = ДанныеСтрокиМнЧ["П00322М121001"];
				
			КонецЕсли;
			
		КонецЦикла;
		
		ТЗ.Свернуть("КодЗЛ", "Мес1_База,Мес1_СуммаСтВз,Мес2_База,Мес2_СуммаСтВз,Мес3_База,Мес3_СуммаСтВз");
		ТЗ.Сортировать("КодЗЛ");
		
		Если ТЗ.Количество() > 0 Тогда
			
			ПредстЗЛ = "";
			Фам = СокрЛП(Ветка.Данные["П000310004001"]);
			Имя = СокрЛП(Ветка.Данные["П000310005001"]);
			Отч = СокрЛП(Ветка.Данные["П000310006001"]);
			Если ЗначениеЗаполнено(Фам) Тогда
				ПредстЗЛ = Фам;
			КонецЕсли;
			Если ЗначениеЗаполнено(Имя) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Имя, Имя);
			КонецЕсли;
			Если ЗначениеЗаполнено(Отч) Тогда
				ПредстЗЛ = ?(ЗначениеЗаполнено(ПредстЗЛ), ПредстЗЛ + " " + Отч, Отч);
			КонецЕсли;
			
			СНИЛС = СокрЛП(Ветка.Данные["П000310003001"]);
			
			ИмяСтрокиВыплат = ?(ТЗ.Количество() = 1, "СтрокаВыплатДопТариф", "СтрокаВыплатДопТарифКурсив");
			
			ПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
			
			ПФ.Параметры.ФИО = ПредстЗЛ;
			ПФ.Параметры.СНИЛС = СНИЛС;
			ПФ.Параметры.Заполнить(ТЗ[0]);
			
			ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
			
			ПФ.Параметры.НомПП = Формат(ИндСтрокаВыплат, "ЧГ=");
			
			ПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплатДопТариф" + Формат(ИндСтрокаВыплат, "ЧГ=");
			
			Для ИндСтрТЗ = 1 По ТЗ.Количество() - 1 Цикл
				
				СтрокаПФ = Макет.Получитьобласть(ИмяСтрокиВыплат);
				
				СтрокаПФ.Параметры.Заполнить(ТЗ[ИндСтрТЗ]);
				
				ИндСтрокаВыплат = ИндСтрокаВыплат + 1;
				
				СтрокаПФ.Область(ИмяСтрокиВыплат).Имя = "СтрокаВыплатДопТариф" + Формат(ИндСтрокаВыплат, "ЧГ=");
				
				ПФ.Вывести(СтрокаПФ);
				
				Если ИндСтрТЗ = ТЗ.Количество() - 1 Тогда
					
					СтрокаПФ = Макет.Получитьобласть("СтрокаВыплатДопТарифПодитог");
					ТЗ_ = ТЗ.Скопировать();
					ТЗ_.Свернуть("", "Мес1_База,Мес1_СуммаСтВз,Мес2_База,Мес2_СуммаСтВз,Мес3_База,Мес3_СуммаСтВз");
					СтрокаПФ.Параметры.Заполнить(ТЗ_[0]);
					
					ПФ.Вывести(СтрокаПФ);
					
					ОблНиз  = ПФ.Область("СтрокаВыплатДопТарифПодитог").Низ;
					ОблВерх = ОблНиз - ТЗ.Количество();
					
					Для ОблКоордПоВертикали = ОблВерх По ОблНиз Цикл
						Обл = ПФ.Область(ОблКоордПоВертикали, , ОблКоордПоВертикали, );
						Обл.Имя = "";
					КонецЦикла;
					НовыйИндСтрокаВыплат = ИндСтрокаВыплат - (ТЗ.Количество() - 1);
					Обл = ПФ.Область(ОблВерх, , ОблНиз, );
					Обл.Имя = "СтрокаВыплатДопТариф" + Формат(НовыйИндСтрокаВыплат, "ЧГ=");
					
					ИндСтрокаВыплат = НовыйИндСтрокаВыплат;
					
					Обл = ПФ.Область(ОблВерх, 5, ОблВерх, 11);
					Обл.ГраницаСверху = Новый Линия(ТипЛинииЯчейкиТабличногоДокумента.Сплошная);
					
					Обл = ПФ.Область(ОблВерх, 2, ОблНиз, 2);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 3, ОблНиз, 3);
					Обл.Объединить();
					
					Обл = ПФ.Область(ОблВерх, 4, ОблНиз, 4);
					Обл.Объединить();
					
				КонецЕсли;
				
			КонецЦикла;
			
			ПечФорма.Вывести(ПФ);
			
		КонецЕсли;
		
		Если ИндСтрокаВыплат > 0
			И (ИндСтрокаВыплат / РазмерПачки = Цел(ИндСтрокаВыплат / РазмерПачки))
			И (ИндСтрокаВыплат <> ДеревоДанных.Строки.Количество()) Тогда
			
			ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
			ПечФорма.Автомасштаб = Истина;
			
			ТабличныйДокумент.ПолеСверху = 5;
			ТабличныйДокумент.ПолеСправа = 5;
			ТабличныйДокумент.ПолеСнизу  = 5;
			ТабличныйДокумент.ПолеСлева  = 5;
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(ПечФорма);
			
			РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
			Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
			
			ПечФорма = Макет.Получитьобласть("ОсновнаяЧасть1");
			ПечФорма.Вывести(Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф"));
			
			ИндОсновныхЧастей = 2;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу3ДопТариф");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_База,Мес1_СуммаСтВз,Мес2_База,Мес2_СуммаСтВз,Мес3_База,Мес3_СуммаСтВз");
	Если ТЗ_ИтогПоРазделу.Количество() > 0 Тогда
		ПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	КонецЕсли;
	
	ДеревоДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанныхРаздел1Прил1"]);
	
	ТЗ_ИтогПоРазделу.Очистить();
	
	Для каждого Ветка Из ДеревоДанных.Строки Цикл
		
		Мес1_База = 0;
		Мес2_База = 0;
		Мес3_База = 0;
		
		Мес1_СуммаСтВз = 0;
		Мес2_СуммаСтВз = 0;
		Мес3_СуммаСтВз = 0;
		
		НовСтрТЗ_ИтогПоРазделу = ТЗ_ИтогПоРазделу.Добавить();
		
		ДеревоМнЧ1_3_1 = Ветка.Строки[1].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11131М1];
		
		Для каждого СтрокаМнЧ1_3_1 Из ДеревоМнЧ1_3_1.Строки Цикл
			ДанныеСтрокиМнЧ1_3_1 = СтрокаМнЧ1_3_1.Данные;
			Мес1_База = Мес1_База + СтрокаМнЧ1_3_1.Данные["П11131М104002"];
			Мес2_База = Мес2_База + СтрокаМнЧ1_3_1.Данные["П11131М104003"];
			Мес3_База = Мес3_База + СтрокаМнЧ1_3_1.Данные["П11131М104004"];
			Мес1_СуммаСтВз = Мес1_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105002"];
			Мес2_СуммаСтВз = Мес2_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105003"];
			Мес3_СуммаСтВз = Мес3_СуммаСтВз + СтрокаМнЧ1_3_1.Данные["П11131М105004"];
		КонецЦикла;
		
		ДеревоМнЧ1_3_2 = Ветка.Строки[2].Строки[0].ДанныеМногострочныхЧастей[СтруктураРеквизитовФормы.мИдГруппы11132М1];
		
		Для каждого СтрокаМнЧ1_3_2 Из ДеревоМнЧ1_3_2.Строки Цикл
			Мес1_База = Мес1_База + СтрокаМнЧ1_3_2.Данные["П11132М104002"];
			Мес2_База = Мес2_База + СтрокаМнЧ1_3_2.Данные["П11132М104003"];
			Мес3_База = Мес3_База + СтрокаМнЧ1_3_2.Данные["П11132М104004"];
			Мес1_СуммаСтВз = Мес1_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105002"];
			Мес2_СуммаСтВз = Мес2_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105003"];
			Мес3_СуммаСтВз = Мес3_СуммаСтВз + СтрокаМнЧ1_3_2.Данные["П11132М105004"];
		КонецЦикла;
		
		НовСтрТЗ_ИтогПоРазделу["Мес1_База"] = Мес1_База;
		НовСтрТЗ_ИтогПоРазделу["Мес2_База"] = Мес2_База;
		НовСтрТЗ_ИтогПоРазделу["Мес3_База"] = Мес3_База;
		НовСтрТЗ_ИтогПоРазделу["Мес1_СуммаСтВз"] = Мес1_СуммаСтВз;
		НовСтрТЗ_ИтогПоРазделу["Мес2_СуммаСтВз"] = Мес2_СуммаСтВз;
		НовСтрТЗ_ИтогПоРазделу["Мес3_СуммаСтВз"] = Мес3_СуммаСтВз;
		
	КонецЦикла;
	
	СтрокаПФ = Макет.Получитьобласть("СтрокаИтогоПоРазделу1ДопТариф");
	ТЗ_ИтогПоРазделу.Свернуть("", "Мес1_База,Мес1_СуммаСтВз,Мес2_База,Мес2_СуммаСтВз,Мес3_База,Мес3_СуммаСтВз");
	СтрокаПФ.Параметры.Заполнить(ТЗ_ИтогПоРазделу[0]);
	ПФ.Вывести(СтрокаПФ);
	
	Если НЕ ПечФорма.ПроверитьВывод(ПФ) Тогда
		
		ПечФорма.ВывестиГоризонтальныйРазделительСтраниц();
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть1");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть1");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧастьДопТариф" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
		СтрокаПФ = Макет.Получитьобласть("ОсновнаяЧасть2ДопТариф");
		Обл = СтрокаПФ.Область("ОсновнаяЧасть2ДопТариф");
		ИндОсновныхЧастей = ИндОсновныхЧастей + 1;
		Обл.Имя = "ОсновнаяЧастьДопТариф" + Формат(ИндОсновныхЧастей, "ЧГ=");
		ПечФорма.Вывести(СтрокаПФ);
		
	КонецЕсли;
	
	ПечФорма.Вывести(ПФ);
	
	ПечФорма.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ПечФорма.Автомасштаб = Истина;
	
	ТабличныйДокумент.ПолеСверху = 5;
	ТабличныйДокумент.ПолеСправа = 5;
	ТабличныйДокумент.ПолеСнизу  = 5;
	ТабличныйДокумент.ПолеСлева  = 5;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(ПечФорма);
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
	Заголовок, СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
	// Окончание общей части формирования реестра.
	//
	СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела = сохрНомераСтрокМногоуровнегоРаздела;
	
	ТабличныйДокумент.Очистить();
	ТабличныйДокумент.Вывести(сохрТаблДок);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ВремПоля, СтрПоля);
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(
	ЭтотОбъект, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

&НаСервере
Функция ПечатьНаСервере(ВидПечати)
	
	Если НЕ РегламентированнаяОтчетность.ПринтерДоступен() Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию';
			|en = 'Перед формированием печатных форм необходимо определить в системе принтер и задать его в качестве используемого по умолчанию'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если СтруктураРеквизитовФормы.ЕдиницаИзмерения
		<> ПорядкиОкругленияОтчетности.ПеречислениеПорядкиОкругленияОтчетностиОкр1
		ИЛИ СтруктураРеквизитовФормы.ТочностьЕдиницыИзмерения <> 0 Тогда
		ОбщегоНазначения.СообщитьПользователю(НСтр(
			"ru = 'Печать возможна только при установленной единице измерения ""в рублях"" и точности ""0""';
			|en = 'Печать возможна только при установленной единице измерения ""в рублях"" и точности ""0""'"));
		Возврат Ложь;
	КонецЕсли;
	
	Если ТипЗнч(мДеревоВыбранныхСтраниц) <> Тип("ДанныеФормыДерево") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.мПечатныеФормы.Очистить();
	СтруктураРеквизитовФормы.мРежимПечати = Истина;
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы.НаимТекущегоРаздела);
	
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	ДанныеРазделов = Новый Структура;
	ДанныеРазделов.Вставить("Титульный", СтруктураДанныхТитульный);
	
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ВыбраннаяФорма",                  СтруктураРеквизитовФормы.мВыбраннаяФорма);
	ПараметрыПечати.Вставить("ДанныеРазделов",                  ДанныеРазделов);
	ПараметрыПечати.Вставить("ВидПечати",                       ВидПечати);
	ПараметрыПечати.Вставить("СтруктураРеквизитовФормы",        СтруктураРеквизитовФормы);
	ПараметрыПечати.Вставить("СтруктураМногоуровневыхРазделов", мСтруктураМногоуровневыхРазделов);
	ПараметрыПечати.Вставить("ДеревоВыбранныхСтраниц",
	ДанныеФормыВЗначение(мДеревоВыбранныхСтраниц, Тип("ДеревоЗначений")));
	
	ОбъектОтчета.ПечатныйБланк(ПараметрыПечати);
	
	КопироватьДанныеФормы(мДеревоВыбранныхСтраниц, мДеревоСтраницОтчета);
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область Автозаполнение

&НаКлиенте
Процедура ЗаполнитьАвто(Команда)
	
	Отказ = Ложь;
	
	РегламентированнаяОтчетностьКлиентПереопределяемый.ПроверитьВозможностьАвтоЗаполненияРеглОтчета(ИмяФормы, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Команда", Команда);
	ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьАвтоЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередЗаполнениемРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Команда = ДополнительныеПараметры.Команда;
	
	РезультатЗапуска = ЗаполнитьАвтоНаСервере();
	
	Если РезультатЗапуска.Статус = "Выполнено" Тогда
		РегламентированнаяОтчетностьКлиент.ОбновитьДеревоРазделовВФормеОтчета(ЭтотОбъект);
		Если НЕ Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
			Элементы.РазделыОтчета.ТекущаяСтрока
			= Элементы.РазделыОтчета.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы()[0].ПолучитьИдентификатор();
		КонецЕсли;
	ИначеЕсли РезультатЗапуска.Статус = "Выполняется" Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеАвтозаполненияВФоне", ЭтотОбъект);
		ПараметрыОжидания = ПараметрыОжидания();
		ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатЗапуска, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ЗаполнитьАвтоНаСервере()
	
	Модифицированность = Истина;
	
	ОбъектОтчета = ОбъектОтчета(ИмяФормы);
	
	СтруктураДанныхРазделов = ОбъектОтчета.СтруктураДанныхРазделов(СтруктураРеквизитовФормы.мВыбраннаяФорма);
	
	ОбъектОтчета.СохранитьДанныеРаздела(СтруктураРеквизитовФормы.мВыбраннаяФорма,
										СтруктураРеквизитовФормы,
										мСтруктураМногоуровневыхРазделов,
										СтруктураДанныхРазделов,
										ТабличныйДокумент,
										СтруктураРеквизитовФормы.НаимТекущегоРаздела);
						
	ОбновитьСтруктурыДанныхРазделов(СтруктураДанныхРазделов);
	
	РегламентированнаяОтчетность.ПоместитьВКэш(Неопределено, УникальныйИдентификатор,
	СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация",                  СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета",      СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",       СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыОтчета.Вставить("НомерКорректировки",           СтруктураДанныхТитульный.НомерКорректировки);
	ПараметрыОтчета.Вставить("ДатаПодписи",                  СтруктураДанныхТитульный.ДатаПодписи);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("АдресВоВременномХранилище",    СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	// Помещение данных в контейнер.
	Контейнер = Новый Структура();
	Контейнер.Вставить("Титульный", СтруктураДанныхТитульный);
	Для каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
		Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
			Контейнер.Вставить(Раздел.Ключ, ПолучитьИзВременногоХранилища(
			СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ]));
		КонецЕсли;
	КонецЦикла;
	
	НаименованиеЗадания = НСтр("ru = 'Автоматическое заполнение по данным информационной базы';
								|en = 'Автоматическое заполнение по данным информационной базы'");
	
	ПараметрыПроцедуры = Новый Структура;
	ПараметрыПроцедуры.Вставить("ИДОтчета", ИмяОтчета(ИмяФормы));
	ПараметрыПроцедуры.Вставить("ИДРедакцииОтчета", ИмяФормы(ИмяФормы));
	ПараметрыПроцедуры.Вставить("ПараметрыОтчета", ПараметрыОтчета);
	ПараметрыПроцедуры.Вставить("Контейнер", Контейнер);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.НаименованиеФоновогоЗадания = НаименованиеЗадания;
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	
	РезультатЗапуска = ДлительныеОперации.ВыполнитьВФоне("РегламентированнаяОтчетность.ЗаполнитьОтчетВФоне",
	ПараметрыПроцедуры, ПараметрыВыполненияВФоне);
	
	Если РезультатЗапуска.Статус = "Выполнено" Тогда
		ЗагрузитьПодготовленныеДанные();
	ИначеЕсли РезультатЗапуска.Статус = "Ошибка" Тогда
		ВызватьИсключение РезультатЗапуска.ПодробноеПредставлениеОшибки;
	КонецЕсли;
	
	Возврат РезультатЗапуска;
	
КонецФункции

&НаКлиенте
Процедура ОбработатьЗавершениеАвтозаполненияВФоне(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> Неопределено Тогда
		Если Результат.Статус = "Выполнено" Тогда
			ЗагрузитьПодготовленныеДанные();
		ИначеЕсли Результат.Статус = "Ошибка" Тогда
			ВызватьИсключение Результат.ПодробноеПредставлениеОшибки;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Функция ПараметрыОжидания()
	
	ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
	ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Отчет формируется';
											|en = 'Отчет формируется'");
	
	Возврат ПараметрыОжидания;
	
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные() Экспорт
	
	СтруктураДанных = ПолучитьИзВременногоХранилища(СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	
	Если ЗначениеЗаполнено(СтруктураРеквизитовФормы.АдресВоВременномХранилище) Тогда
		УдалитьИзВременногоХранилища(СтруктураРеквизитовФормы.АдресВоВременномХранилище);
	КонецЕсли;
	СтруктураРеквизитовФормы.АдресВоВременномХранилище = Неопределено;
	
	Если ТипЗнч(СтруктураДанных) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Контейнер = Неопределено;
	Если СтруктураДанных.Свойство("Контейнер", Контейнер)
		И ТипЗнч(Контейнер) = Тип("Структура") Тогда
		
		// Получение данных из контейнера.
		СтруктураДанныхТитульный = Контейнер["Титульный"];
		Для каждого Раздел Из мСтруктураМногоуровневыхРазделов Цикл
			Если НЕ Раздел.Значение.Свойство("Подчиненность") Тогда
				РегламентированнаяОтчетность.ПоместитьВКэш(Контейнер[Раздел.Ключ], УникальныйИдентификатор,
				СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + Раздел.Ключ]);
			КонецЕсли;
		КонецЦикла;
		
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Очистить();
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела.Добавить(1);
		
		Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_1и1_2"
			ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_1"
			ИЛИ СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1Подр1_3_2" Тогда
			СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Раздел1Прил1";
		КонецЕсли;
		
		СформироватьДеревоРазделовОтчетаНаСервере();
		
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = СтруктураРеквизитовФормы.НаимТекущегоРаздела Тогда
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		ВывестиДанныеВТабличныйДокумент(СтруктураРеквизитовФормы.НаимТекущегоРаздела,
		СтруктураРеквизитовФормы.НомераСтрокМногоуровнегоРаздела);
		
		РасчетНаСервере();
		
		СформироватьРаздел1();
		
		Если Элементы.Расшифровать.Видимость Тогда
			Элементы.Расшифровать.Доступность = Истина;
			Элементы.ТабличныйДокументКонтекстноеМенюРасшифровать.Доступность = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Расшифровать(Команда)
	
	ЯчейкаРасшифровки = Элементы.ТабличныйДокумент.ТекущаяОбласть;
	ТекущаяСтрока = ЯчейкаРасшифровки.Верх;
	
	Раздел1Прил1КодТарифа = "";
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П000110000101");
	Если ОбластьТаблДокумента <> Неопределено Тогда
		Если ОбластьТаблДокумента.СодержитЗначение = Истина Тогда
			Раздел1Прил1КодТарифа = СокрЛП(ОбластьТаблДокумента.Значение);
		Иначе
			Раздел1Прил1КодТарифа = СокрЛП(ОбластьТаблДокумента.Текст);
		КонецЕсли;
	КонецЕсли;
	
	Раздел1Прил1Подр1_3_1ПризнакОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11131М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_1ПризнакОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11131М100101"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_3_2КодОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_2КодОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100101"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1Подр1_3_2КодКлассаУсловий = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100201_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1Подр1_3_2КодКлассаУсловий = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П11132М100201"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил1_1КодОснования = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00111М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил1_1КодОснования = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00111М100101"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил2КодТарифа = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00012М100101_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил2КодТарифа = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00012М100101"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	Раздел1Прил2ПризнакВыплат = "";
	НомерСтроки = 1;
	ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00012М100201_1");
	Пока ОбластьТаблДокумента <> Неопределено Цикл
		Если ОбластьТаблДокумента.Верх > ТекущаяСтрока Тогда
			Прервать;
		КонецЕсли;
		Раздел1Прил2ПризнакВыплат = СокрЛП(ОбластьТаблДокумента.Значение);
		НомерСтроки = НомерСтроки + 1;
		ОбластьТаблДокумента = ТабличныйДокумент.Области.Найти("П00012М100201"
		+ РегламентированнаяОтчетностьКлиентСервер.СтрокаСИндексомПоказателя(НомерСтроки));
	КонецЦикла;
	
	ПараметрыОтчета = Новый Структура();
	
	ПараметрыОтчета.Вставить("Организация",                СтруктураРеквизитовФормы.Организация);
	ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета",    СтруктураРеквизитовФормы.мДатаНачалаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",     СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ПараметрыОтчета.Вставить("ДатаПодписи",                СтруктураДанныхТитульный.ДатаПодписи);
	ПараметрыОтчета.Вставить("ЗначениеТекущегоПоказателя", ЯчейкаРасшифровки.Текст);
	
	ПараметрыОтчета.Вставить("Раздел1Прил1КодТарифа",                 Раздел1Прил1КодТарифа);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_1ПризнакОснования", Раздел1Прил1Подр1_3_1ПризнакОснования);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_2КодОснования",     Раздел1Прил1Подр1_3_2КодОснования);
	ПараметрыОтчета.Вставить("Раздел1Прил1Подр1_3_2КодКлассаУсловий", Раздел1Прил1Подр1_3_2КодКлассаУсловий);
	ПараметрыОтчета.Вставить("Раздел1Прил1_1КодОснования",            Раздел1Прил1_1КодОснования);
	ПараметрыОтчета.Вставить("Раздел1Прил2КодТарифа",                 Раздел1Прил2КодТарифа);
	ПараметрыОтчета.Вставить("Раздел1Прил2ПризнакВыплат",             Раздел1Прил2ПризнакВыплат);
	
	ИДИменПоказателей = Новый Массив();
	ИДИменПоказателей.Добавить(ЯчейкаРасшифровки.Имя);
	
	РегламентированнаяОтчетностьКлиент.ОткрытьРасшифровкуОтчета(
	ИмяОтчета(ИмяФормы), ИмяФормы(ИмяФормы), ИДИменПоказателей, ПараметрыОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область Новости

// Процедура показывает новости, требующие прочтения (важные и очень важные)
//
// Параметры:
//  Нет
//
&НаКлиенте
Процедура Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии()
	
	// ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	ИдентификаторыСобытийПриОткрытии = "ПриОткрытии";
	// Конец ИнтернетПоддержкаПользователей.Новости.Подключаемый_ПоказатьНовостиТребующиеПрочтенияПриОткрытии
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПоказатьНовостиТребующиеПрочтенияПриОткрытии(ЭтотОбъект, ИдентификаторыСобытийПриОткрытии);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКомандыНовости(Команда)
	
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ОбработкаКомандыНовости(ЭтотОбъект, Команда);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область МеханизмПроверкиКонтрольныхСоотношений

#Область КС_Управление

&НаКлиенте
Процедура Проверить(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьКонтрольныеСоотношения(ЭтотОбъект, ОбработкаКС);
	
КонецПроцедуры

&НаСервере
Функция ПроверитьКонтрольныеСоотношенияВОтчете() Экспорт
	
	СтруктураРеквизитовФормы.ТекстДляЗаголовочнойЧасти = 
		РегламентированнаяОтчетностьКлиентСервер.ПредставлениеДокументаРеглОтч(СтруктураРеквизитовФормы.мСохраненныйДок);
	
	СтруктураРезультата = Новый Структура;
	СтруктураРезультата.Вставить("КоличествоНайденныхОшибок"	, 0);
	СтруктураРезультата.Вставить("КоличествоНайденныхБезОшибок"	, 0);
	СтруктураРезультата.Вставить("СтруктураОшибок"				, Новый Структура);
	СтруктураРезультата.Вставить("ДопСведенияВОписаниеКС"		, Истина);
	
	ДанныеКС						= Новый Структура;
	СчетчикФормулДляРасшифровок		= 0;
	СписокРасшифровкиПоказателей	= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиПоказателей();
	СписокРасшифровкиформулы		= РегламентированнаяОтчетность.СоздатьСписокРасшифровкиформулы();
	Документирование				= Ложь;
	
	СформироватьСлужебныеДанные2020();
	ЗаполнитьТаблицыРазделов2020(ДанныеКС, Ложь);
	ПолучитьДанныеОтчетовПредыдущихПериодов2020();
	СформироватьВременныеТаблицы2020();
	
	СтруктураРезультата.Вставить("ПриоритетПроизводительности"	, ДанныеКС.ПриоритетПроизводительности);
	СтруктураРезультата.Вставить("ЛимитРасшифровки"				, ДанныеКС.ЛимитРасшифровки);

#Область Проверки

#Область Проверки_Раздела_3
	
	ПроверитьКС2020_0_1а(СтруктураРезультата);
	ПроверитьКС2020_0_1б(СтруктураРезультата);
	ПроверитьКС2020_0_1в(СтруктураРезультата);
	ПроверитьКС2020_0_1г(СтруктураРезультата);
	ПроверитьКС2020_0_1д(СтруктураРезультата);
	ПроверитьКС2020_0_1е(СтруктураРезультата);
	ПроверитьКС2020_0_2а(СтруктураРезультата);
	ПроверитьКС2020_0_2б(СтруктураРезультата);
	ПроверитьКС2020_0_2в(СтруктураРезультата);
	ПроверитьКС2020_0_3(СтруктураРезультата);
	ПроверитьКС2020_0_4(СтруктураРезультата);
	ПроверитьКС2020_0_5а(СтруктураРезультата);
	ПроверитьКС2020_0_5б(СтруктураРезультата);
	ПроверитьКС2020_0_5в(СтруктураРезультата);
	ПроверитьКС2020_0_6а(СтруктураРезультата);
	ПроверитьКС2020_0_6б(СтруктураРезультата);
	ПроверитьКС2020_0_6в(СтруктураРезультата);
	ПроверитьКС2020_0_6г(СтруктураРезультата);
	ПроверитьКС2020_0_6д(СтруктураРезультата);
	ПроверитьКС2020_0_6е(СтруктураРезультата);
	ПроверитьКС2020_0_7а(СтруктураРезультата);
	ПроверитьКС2020_0_7б(СтруктураРезультата);
	ПроверитьКС2020_0_8а(СтруктураРезультата);
	ПроверитьКС2020_0_8б(СтруктураРезультата);
	ПроверитьКС2020_0_9а(СтруктураРезультата);
	ПроверитьКС2020_0_10а(СтруктураРезультата);
	ПроверитьКС2020_0_11а(СтруктураРезультата);
	ПроверитьКС2020_0_11б(СтруктураРезультата);
	ПроверитьКС2020_0_11в(СтруктураРезультата);
	ПроверитьКС2020_0_12(СтруктураРезультата);
	ПроверитьКС2020_0_13(СтруктураРезультата);
	ПроверитьКС2020_0_14а(СтруктураРезультата);
	ПроверитьКС2020_0_14б(СтруктураРезультата);
	ПроверитьКС2020_0_14в(СтруктураРезультата);
	ПроверитьКС2020_0_15(СтруктураРезультата);
	ПроверитьКС2020_0_16(СтруктураРезультата);
	ПроверитьКС2020_0_17а(СтруктураРезультата);
	ПроверитьКС2020_0_17б(СтруктураРезультата);
	ПроверитьКС2020_0_17в(СтруктураРезультата);
	ПроверитьКС2020_0_17г(СтруктураРезультата);
	ПроверитьКС2020_0_17д(СтруктураРезультата);
	ПроверитьКС2020_0_17е(СтруктураРезультата);
	ПроверитьКС2020_0_18а(СтруктураРезультата);
	ПроверитьКС2020_0_18б(СтруктураРезультата);
	ПроверитьКС2020_0_19а(СтруктураРезультата);
	ПроверитьКС2020_0_19б(СтруктураРезультата);
	ПроверитьКС2020_0_20а(СтруктураРезультата);
	ПроверитьКС2020_0_20б(СтруктураРезультата);
	ПроверитьКС2020_0_20в(СтруктураРезультата);
	ПроверитьКС2020_0_21(СтруктураРезультата);
	ПроверитьКС2020_0_22а(СтруктураРезультата);
	ПроверитьКС2020_0_22б(СтруктураРезультата);
	ПроверитьКС2020_0_22в(СтруктураРезультата);
	ПроверитьКС2020_0_22г(СтруктураРезультата);
	ПроверитьКС2020_0_23(СтруктураРезультата);
	ПроверитьКС2020_0_24(СтруктураРезультата);
	ПроверитьКС2020_0_25(СтруктураРезультата);
	ПроверитьКС2020_0_26(СтруктураРезультата);
	ПроверитьКС2020_0_27(СтруктураРезультата);
	ПроверитьКС2020_0_50а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54в_доп(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2020_1_1(СтруктураРезультата);
	ПроверитьКС2020_1_2(СтруктураРезультата);
	ПроверитьКС2020_1_3(СтруктураРезультата);
	ПроверитьКС2020_1_4(СтруктураРезультата);
	ПроверитьКС2020_1_5(СтруктураРезультата);
	ПроверитьКС2020_1_6(СтруктураРезультата);
	ПроверитьКС2020_1_7(СтруктураРезультата);
	ПроверитьКС2020_1_8(СтруктураРезультата);
	ПроверитьКС2020_1_9(СтруктураРезультата);
	ПроверитьКС2020_1_10(СтруктураРезультата);
	ПроверитьКС2020_1_11(СтруктураРезультата);
	ПроверитьКС2020_1_12а(СтруктураРезультата);
	ПроверитьКС2020_1_12б(СтруктураРезультата);
	ПроверитьКС2020_1_13а(СтруктураРезультата);
	ПроверитьКС2020_1_13б(СтруктураРезультата);
	ПроверитьКС2020_1_14а(СтруктураРезультата);
	ПроверитьКС2020_1_14б(СтруктураРезультата);
	ПроверитьКС2020_1_15а(СтруктураРезультата);
	ПроверитьКС2020_1_15б(СтруктураРезультата);
	ПроверитьКС2020_1_16а(СтруктураРезультата);
	ПроверитьКС2020_1_16б(СтруктураРезультата);
	ПроверитьКС2020_1_17а(СтруктураРезультата);
	ПроверитьКС2020_1_17б(СтруктураРезультата);
	ПроверитьКС2020_1_18а(СтруктураРезультата);
	ПроверитьКС2020_1_18б(СтруктураРезультата);
	ПроверитьКС2020_1_19а(СтруктураРезультата);
	ПроверитьКС2020_1_19б(СтруктураРезультата);
	ПроверитьКС2020_1_20(СтруктураРезультата);
	ПроверитьКС2020_1_21(СтруктураРезультата);
	ПроверитьКС2020_1_22(СтруктураРезультата);
	ПроверитьКС2020_1_23(СтруктураРезультата);
	ПроверитьКС2020_1_24(СтруктураРезультата);
	ПроверитьКС2020_1_25(СтруктураРезультата);
	ПроверитьКС2020_1_26(СтруктураРезультата);
	ПроверитьКС2020_1_27(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_1
	
#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2020_1_28(СтруктураРезультата);
	ПроверитьКС2020_1_29(СтруктураРезультата);
	ПроверитьКС2020_1_30(СтруктураРезультата);
	ПроверитьКС2020_1_31(СтруктураРезультата);
	ПроверитьКС2020_1_32(СтруктураРезультата);
	ПроверитьКС2020_1_33(СтруктураРезультата);
	ПроверитьКС2020_1_34(СтруктураРезультата);
	ПроверитьКС2020_1_35(СтруктураРезультата);
	ПроверитьКС2020_1_36(СтруктураРезультата);
	ПроверитьКС2020_1_37(СтруктураРезультата);
	ПроверитьКС2020_1_38(СтруктураРезультата);
	ПроверитьКС2020_1_39(СтруктураРезультата);
	ПроверитьКС2020_1_40(СтруктураРезультата);
	ПроверитьКС2020_1_41(СтруктураРезультата);
	ПроверитьКС2020_1_42(СтруктураРезультата);
	ПроверитьКС2020_1_43(СтруктураРезультата);
	ПроверитьКС2020_1_44(СтруктураРезультата);
	ПроверитьКС2020_1_45(СтруктураРезультата);
	ПроверитьКС2020_1_46(СтруктураРезультата);
	ПроверитьКС2020_1_47(СтруктураРезультата);
	ПроверитьКС2020_1_48(СтруктураРезультата);
	ПроверитьКС2020_1_49(СтруктураРезультата);
	ПроверитьКС2020_1_50(СтруктураРезультата);
	ПроверитьКС2020_1_51(СтруктураРезультата);
	ПроверитьКС2020_1_52(СтруктураРезультата);
	ПроверитьКС2020_1_53(СтруктураРезультата);
	ПроверитьКС2020_1_54(СтруктураРезультата);
	ПроверитьКС2020_1_55(СтруктураРезультата);
	ПроверитьКС2020_1_56(СтруктураРезультата);
	ПроверитьКС2020_1_57(СтруктураРезультата);
	ПроверитьКС2020_1_58(СтруктураРезультата);
	ПроверитьКС2020_1_59(СтруктураРезультата);
	ПроверитьКС2020_1_60(СтруктураРезультата);
	ПроверитьКС2020_1_61(СтруктураРезультата);
	ПроверитьКС2020_1_62(СтруктураРезультата);
	ПроверитьКС2020_1_63(СтруктураРезультата);
	ПроверитьКС2020_1_64(СтруктураРезультата);
	ПроверитьКС2020_1_65(СтруктураРезультата);
	
	#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2020_1_66(СтруктураРезультата);
	ПроверитьКС2020_1_67(СтруктураРезультата);
	ПроверитьКС2020_1_68(СтруктураРезультата);
	ПроверитьКС2020_1_69(СтруктураРезультата);
	ПроверитьКС2020_1_70(СтруктураРезультата);
	ПроверитьКС2020_1_71(СтруктураРезультата);
	ПроверитьКС2020_1_72(СтруктураРезультата);
	ПроверитьКС2020_1_73(СтруктураРезультата);
	ПроверитьКС2020_1_74(СтруктураРезультата);
	ПроверитьКС2020_1_75(СтруктураРезультата);
	ПроверитьКС2020_1_76(СтруктураРезультата);
	ПроверитьКС2020_1_77(СтруктураРезультата);
	ПроверитьКС2020_1_78(СтруктураРезультата);
	ПроверитьКС2020_1_79(СтруктураРезультата);
	ПроверитьКС2020_1_80(СтруктураРезультата);
	ПроверитьКС2020_1_81(СтруктураРезультата);
	ПроверитьКС2020_1_82(СтруктураРезультата);
	ПроверитьКС2020_1_83(СтруктураРезультата);
	ПроверитьКС2020_1_84(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2020_1_85(СтруктураРезультата);
	ПроверитьКС2020_1_86(СтруктураРезультата);
	ПроверитьКС2020_1_87(СтруктураРезультата);
	ПроверитьКС2020_1_88(СтруктураРезультата);
	ПроверитьКС2020_1_89(СтруктураРезультата);
	ПроверитьКС2020_1_90(СтруктураРезультата);
	ПроверитьКС2020_1_91(СтруктураРезультата);
	ПроверитьКС2020_1_92(СтруктураРезультата);
	ПроверитьКС2020_1_93(СтруктураРезультата);
	ПроверитьКС2020_1_94(СтруктураРезультата);
	ПроверитьКС2020_1_95(СтруктураРезультата);
	ПроверитьКС2020_1_96(СтруктураРезультата);
	ПроверитьКС2020_1_97(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2020_1_98(СтруктураРезультата);
	ПроверитьКС2020_1_99(СтруктураРезультата);
	ПроверитьКС2020_1_100(СтруктураРезультата);
	ПроверитьКС2020_1_101(СтруктураРезультата);
	ПроверитьКС2020_1_102(СтруктураРезультата);
	ПроверитьКС2020_1_103(СтруктураРезультата);
	ПроверитьКС2020_1_104(СтруктураРезультата);
	ПроверитьКС2020_1_105(СтруктураРезультата);
	ПроверитьКС2020_1_106(СтруктураРезультата);
	ПроверитьКС2020_1_107(СтруктураРезультата);
	ПроверитьКС2020_1_108(СтруктураРезультата);
	ПроверитьКС2020_1_109(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2020_1_110(СтруктураРезультата);
	ПроверитьКС2020_1_111(СтруктураРезультата);
	ПроверитьКС2020_1_112(СтруктураРезультата);
	ПроверитьКС2020_1_113(СтруктураРезультата);
	ПроверитьКС2020_1_114(СтруктураРезультата);
	ПроверитьКС2020_1_115(СтруктураРезультата);
	ПроверитьКС2020_1_116(СтруктураРезультата);
	ПроверитьКС2020_1_117(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2020_1_118(СтруктураРезультата);
	ПроверитьКС2020_1_119(СтруктураРезультата);
	ПроверитьКС2020_1_120(СтруктураРезультата);
	ПроверитьКС2020_1_121(СтруктураРезультата);
	ПроверитьКС2020_1_122(СтруктураРезультата);
	ПроверитьКС2020_1_123(СтруктураРезультата);
	ПроверитьКС2020_1_124(СтруктураРезультата);
	ПроверитьКС2020_1_125(СтруктураРезультата);
	ПроверитьКС2020_1_126(СтруктураРезультата);
	ПроверитьКС2020_1_127(СтруктураРезультата);
	ПроверитьКС2020_1_128(СтруктураРезультата);
	ПроверитьКС2020_1_129(СтруктураРезультата);
	ПроверитьКС2020_1_130(СтруктураРезультата);
	ПроверитьКС2020_1_131(СтруктураРезультата);
	ПроверитьКС2020_1_132(СтруктураРезультата);
	ПроверитьКС2020_1_133(СтруктураРезультата);
	ПроверитьКС2020_1_134(СтруктураРезультата);
	ПроверитьКС2020_1_135(СтруктураРезультата);
	ПроверитьКС2020_1_136(СтруктураРезультата);
	ПроверитьКС2020_1_137(СтруктураРезультата);
	ПроверитьКС2020_1_138(СтруктураРезультата);
	ПроверитьКС2020_1_139(СтруктураРезультата);
	ПроверитьКС2020_1_140(СтруктураРезультата);
	ПроверитьКС2020_1_141(СтруктураРезультата);
	ПроверитьКС2020_1_142(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2020_1_143(СтруктураРезультата);
	ПроверитьКС2020_1_144(СтруктураРезультата);
	ПроверитьКС2020_1_145(СтруктураРезультата);
	ПроверитьКС2020_1_146(СтруктураРезультата);
	ПроверитьКС2020_1_147(СтруктураРезультата);
	ПроверитьКС2020_1_148(СтруктураРезультата);
	ПроверитьКС2020_1_149(СтруктураРезультата);
	ПроверитьКС2020_1_150(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2020_1_151(СтруктураРезультата);
	ПроверитьКС2020_1_152(СтруктураРезультата);
	ПроверитьКС2020_1_153(СтруктураРезультата);
	ПроверитьКС2020_1_154(СтруктураРезультата);
	ПроверитьКС2020_1_155(СтруктураРезультата);
	ПроверитьКС2020_1_156(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2020_1_157(СтруктураРезультата);
	ПроверитьКС2020_1_158(СтруктураРезультата);
	ПроверитьКС2020_1_159(СтруктураРезультата);
	ПроверитьКС2020_1_160(СтруктураРезультата);
	ПроверитьКС2020_1_161(СтруктураРезультата);
	ПроверитьКС2020_1_162(СтруктураРезультата);
	ПроверитьКС2020_1_163(СтруктураРезультата);
	ПроверитьКС2020_1_164(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2020_1_165(СтруктураРезультата);
	ПроверитьКС2020_1_166(СтруктураРезультата);
	ПроверитьКС2020_1_167(СтруктураРезультата);
	ПроверитьКС2020_1_168(СтруктураРезультата);
	ПроверитьКС2020_1_169(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2020_1_170(СтруктураРезультата);
	ПроверитьКС2020_1_171(СтруктураРезультата);
	ПроверитьКС2020_1_172(СтруктураРезультата);
	ПроверитьКС2020_1_173(СтруктураРезультата);
	ПроверитьКС2020_1_174(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2020_1_175(СтруктураРезультата);
	ПроверитьКС2020_1_176(СтруктураРезультата);
	ПроверитьКС2020_1_177(СтруктураРезультата);
	ПроверитьКС2020_1_178(СтруктураРезультата);
	ПроверитьКС2020_1_179(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2020_1_180(СтруктураРезультата);
	ПроверитьКС2020_1_181(СтруктураРезультата);
	ПроверитьКС2020_1_182(СтруктураРезультата);
	ПроверитьКС2020_1_183(СтруктураРезультата);
	ПроверитьКС2020_1_184(СтруктураРезультата);
	ПроверитьКС2020_1_185(СтруктураРезультата);
	ПроверитьКС2020_1_186(СтруктураРезультата);
	ПроверитьКС2020_1_187(СтруктураРезультата);
	ПроверитьКС2020_1_188(СтруктураРезультата);
	ПроверитьКС2020_1_189(СтруктураРезультата);
	ПроверитьКС2020_1_190(СтруктураРезультата);
	ПроверитьКС2020_1_191(СтруктураРезультата);
	ПроверитьКС2020_1_192(СтруктураРезультата);
	ПроверитьКС2020_1_193(СтруктураРезультата);
	ПроверитьКС2020_1_194(СтруктураРезультата);
	ПроверитьКС2020_1_195(СтруктураРезультата);
	ПроверитьКС2020_1_196(СтруктураРезультата);
	ПроверитьКС2020_1_197(СтруктураРезультата);
	ПроверитьКС2020_1_198(СтруктураРезультата);
	ПроверитьКС2020_1_199(СтруктураРезультата);
	ПроверитьКС2020_1_300_доп(СтруктураРезультата);
	ПроверитьКС2020_1_301_доп(СтруктураРезультата);
	ПроверитьКС2020_1_302_доп(СтруктураРезультата);
	ПроверитьКС2020_2_1(СтруктураРезультата);
	ПроверитьКС2020_2_2(СтруктураРезультата);
	ПроверитьКС2020_2_3(СтруктураРезультата);
	ПроверитьКС2020_2_4(СтруктураРезультата);
	ПроверитьКС2020_2_5(СтруктураРезультата);
	ПроверитьКС2020_2_6(СтруктураРезультата);
	ПроверитьКС2020_2_7(СтруктураРезультата);
	ПроверитьКС2020_2_8(СтруктураРезультата);
	ПроверитьКС2020_2_9(СтруктураРезультата);
	ПроверитьКС2020_2_10(СтруктураРезультата);
	ПроверитьКС2020_2_11(СтруктураРезультата);
	ПроверитьКС2020_2_12(СтруктураРезультата);
	ПроверитьКС2020_2_13(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

	ПроверитьКС2020_1(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2020_2(СтруктураРезультата);
	ПроверитьКС2020_3(СтруктураРезультата);
	ПроверитьКС2020_4(СтруктураРезультата);
	ПроверитьКС2020_5(СтруктураРезультата);
	ПроверитьКС2020_6(СтруктураРезультата);
	ПроверитьКС2020_7(СтруктураРезультата);
	ПроверитьКС2020_8(СтруктураРезультата);
	ПроверитьКС2020_9(СтруктураРезультата);
	ПроверитьКС2020_10(СтруктураРезультата);
	ПроверитьКС2020_11(СтруктураРезультата);
	ПроверитьКС2020_12(СтруктураРезультата);
	ПроверитьКС2020_13(СтруктураРезультата);
	ПроверитьКС2020_14(СтруктураРезультата);
	ПроверитьКС2020_15(СтруктураРезультата);
	ПроверитьКС2020_16(СтруктураРезультата);
	ПроверитьКС2020_17(СтруктураРезультата);
	ПроверитьКС2020_18(СтруктураРезультата);
	ПроверитьКС2020_19(СтруктураРезультата);
	ПроверитьКС2020_20(СтруктураРезультата);
	ПроверитьКС2020_21(СтруктураРезультата);
	ПроверитьКС2020_22(СтруктураРезультата);
	ПроверитьКС2020_23(СтруктураРезультата);
	ПроверитьКС2020_24(СтруктураРезультата);
	ПроверитьКС2020_25(СтруктураРезультата);
	ПроверитьКС2020_26(СтруктураРезультата);
	ПроверитьКС2020_27(СтруктураРезультата);
	ПроверитьКС2020_28(СтруктураРезультата);
	ПроверитьКС2020_29(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_4
		
	ПроверитьКС2020_30(СтруктураРезультата);
	ПроверитьКС2020_31(СтруктураРезультата);
	ПроверитьКС2020_32(СтруктураРезультата);
	ПроверитьКС2020_33(СтруктураРезультата);
	ПроверитьКС2020_34(СтруктураРезультата);
	ПроверитьКС2020_35(СтруктураРезультата);
	ПроверитьКС2020_36(СтруктураРезультата);
	ПроверитьКС2020_37(СтруктураРезультата);
	ПроверитьКС2020_38(СтруктураРезультата);
	ПроверитьКС2020_39(СтруктураРезультата);
	ПроверитьКС2020_40(СтруктураРезультата);
	ПроверитьКС2020_41(СтруктураРезультата);
	ПроверитьКС2020_42(СтруктураРезультата);
	ПроверитьКС2020_43(СтруктураРезультата);
	ПроверитьКС2020_44(СтруктураРезультата);
	ПроверитьКС2020_45(СтруктураРезультата);
	ПроверитьКС2020_46(СтруктураРезультата);
	ПроверитьКС2020_47(СтруктураРезультата);
	ПроверитьКС2020_48(СтруктураРезультата);
	ПроверитьКС2020_49(СтруктураРезультата);
	ПроверитьКС2020_50(СтруктураРезультата);
	ПроверитьКС2020_51(СтруктураРезультата);
	ПроверитьКС2020_52(СтруктураРезультата);
	ПроверитьКС2020_53(СтруктураРезультата);
	ПроверитьКС2020_54(СтруктураРезультата);
	ПроверитьКС2020_55(СтруктураРезультата);
	ПроверитьКС2020_56(СтруктураРезультата);
	ПроверитьКС2020_57(СтруктураРезультата);
	ПроверитьКС2020_58(СтруктураРезультата);
	ПроверитьКС2020_59(СтруктураРезультата);
	ПроверитьКС2020_60(СтруктураРезультата);
	ПроверитьКС2020_61(СтруктураРезультата);
	ПроверитьКС2020_62(СтруктураРезультата);
	ПроверитьКС2020_63(СтруктураРезультата);
	ПроверитьКС2020_64(СтруктураРезультата);
	ПроверитьКС2020_65(СтруктураРезультата);
	ПроверитьКС2020_66(СтруктураРезультата);
	ПроверитьКС2020_67(СтруктураРезультата);
	ПроверитьКС2020_68(СтруктураРезультата);
	ПроверитьКС2020_69(СтруктураРезультата);
	ПроверитьКС2020_70(СтруктураРезультата);
	ПроверитьКС2020_71(СтруктураРезультата);
	ПроверитьКС2020_72(СтруктураРезультата);
	ПроверитьКС2020_73(СтруктураРезультата);
	ПроверитьКС2020_74(СтруктураРезультата);
	ПроверитьКС2020_75(СтруктураРезультата);
	ПроверитьКС2020_76(СтруктураРезультата);
	ПроверитьКС2020_77(СтруктураРезультата);
	ПроверитьКС2020_78(СтруктураРезультата);
	ПроверитьКС2020_79(СтруктураРезультата);
	ПроверитьКС2020_80(СтруктураРезультата);
	ПроверитьКС2020_81(СтруктураРезультата);
	ПроверитьКС2020_82(СтруктураРезультата);
	ПроверитьКС2020_83(СтруктураРезультата);
	ПроверитьКС2020_84(СтруктураРезультата);
	ПроверитьКС2020_85(СтруктураРезультата);
	ПроверитьКС2020_86(СтруктураРезультата);
	ПроверитьКС2020_87(СтруктураРезультата);
	ПроверитьКС2020_88(СтруктураРезультата);
	ПроверитьКС2020_89(СтруктураРезультата);
	ПроверитьКС2020_90(СтруктураРезультата);
	ПроверитьКС2020_91(СтруктураРезультата);
	ПроверитьКС2020_92(СтруктураРезультата);
	ПроверитьКС2020_93(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_3
		
	ПроверитьКС2020_94а(СтруктураРезультата);
	ПроверитьКС2020_94б(СтруктураРезультата);
	ПроверитьКС2020_95а(СтруктураРезультата);
	ПроверитьКС2020_95б(СтруктураРезультата);
	ПроверитьКС2020_96а(СтруктураРезультата);
	ПроверитьКС2020_96б(СтруктураРезультата);
	ПроверитьКС2020_97а(СтруктураРезультата);
	ПроверитьКС2020_97б(СтруктураРезультата);
	ПроверитьКС2020_98а(СтруктураРезультата);
	ПроверитьКС2020_98б(СтруктураРезультата);
	ПроверитьКС2020_99а(СтруктураРезультата);
	ПроверитьКС2020_99б(СтруктураРезультата);
	ПроверитьКС2020_100(СтруктураРезультата);
	ПроверитьКС2020_101(СтруктураРезультата);
	ПроверитьКС2020_102(СтруктураРезультата);
	ПроверитьКС2020_103(СтруктураРезультата);
	ПроверитьКС2020_104(СтруктураРезультата);
	ПроверитьКС2020_105(СтруктураРезультата);
	ПроверитьКС2020_106(СтруктураРезультата);
	ПроверитьКС2020_107(СтруктураРезультата);
	ПроверитьКС2020_108(СтруктураРезультата);
	ПроверитьКС2020_109(СтруктураРезультата);
	ПроверитьКС2020_110(СтруктураРезультата);
	ПроверитьКС2020_111(СтруктураРезультата);
	ПроверитьКС2020_112(СтруктураРезультата);
	ПроверитьКС2020_113(СтруктураРезультата);
	ПроверитьКС2020_114а(СтруктураРезультата);
	ПроверитьКС2020_114б(СтруктураРезультата);
	ПроверитьКС2020_115а(СтруктураРезультата);
	ПроверитьКС2020_115б(СтруктураРезультата);
	ПроверитьКС2020_116а(СтруктураРезультата);
	ПроверитьКС2020_116б(СтруктураРезультата);
	ПроверитьКС2020_117а(СтруктураРезультата);
	ПроверитьКС2020_117б(СтруктураРезультата);
	ПроверитьКС2020_118а(СтруктураРезультата);
	ПроверитьКС2020_118б(СтруктураРезультата);
	ПроверитьКС2020_119а(СтруктураРезультата);
	ПроверитьКС2020_119б(СтруктураРезультата);
	ПроверитьКС2020_120а(СтруктураРезультата);
	ПроверитьКС2020_120б(СтруктураРезультата);
	ПроверитьКС2020_121а(СтруктураРезультата);
	ПроверитьКС2020_121б(СтруктураРезультата);
	ПроверитьКС2020_122а(СтруктураРезультата);
	ПроверитьКС2020_122б(СтруктураРезультата);
	ПроверитьКС2020_123(СтруктураРезультата);
	ПроверитьКС2020_124(СтруктураРезультата);
	ПроверитьКС2020_125а(СтруктураРезультата);
	ПроверитьКС2020_125б(СтруктураРезультата);
	ПроверитьКС2020_126(СтруктураРезультата);
	ПроверитьКС2020_127(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_128(СтруктураРезультата);
	ПроверитьКС2020_129(СтруктураРезультата);
	ПроверитьКС2020_130(СтруктураРезультата);
	ПроверитьКС2020_131(СтруктураРезультата);
	ПроверитьКС2020_132а(СтруктураРезультата);
	ПроверитьКС2020_132б(СтруктураРезультата);
	ПроверитьКС2020_133(СтруктураРезультата);
	ПроверитьКС2020_134(СтруктураРезультата);
	ПроверитьКС2020_135а(СтруктураРезультата);
	ПроверитьКС2020_135б(СтруктураРезультата);
	ПроверитьКС2020_136(СтруктураРезультата);
	ПроверитьКС2020_137(СтруктураРезультата);
	ПроверитьКС2020_138а(СтруктураРезультата);
	ПроверитьКС2020_138б(СтруктураРезультата);
	ПроверитьКС2020_139(СтруктураРезультата);
	ПроверитьКС2020_140(СтруктураРезультата);
	ПроверитьКС2020_141(СтруктураРезультата);
	ПроверитьКС2020_142(СтруктураРезультата);
	ПроверитьКС2020_143(СтруктураРезультата);
	ПроверитьКС2020_144(СтруктураРезультата);
	ПроверитьКС2020_145а(СтруктураРезультата);
	ПроверитьКС2020_145б(СтруктураРезультата);
	ПроверитьКС2020_146(СтруктураРезультата);
	ПроверитьКС2020_147(СтруктураРезультата);
	ПроверитьКС2020_148а(СтруктураРезультата);
	ПроверитьКС2020_148б(СтруктураРезультата);
	ПроверитьКС2020_149(СтруктураРезультата);
	ПроверитьКС2020_150(СтруктураРезультата);
	ПроверитьКС2020_151а(СтруктураРезультата);
	ПроверитьКС2020_151б(СтруктураРезультата);
	ПроверитьКС2020_152(СтруктураРезультата);
	ПроверитьКС2020_153(СтруктураРезультата);
	ПроверитьКС2020_154(СтруктураРезультата);
	ПроверитьКС2020_155(СтруктураРезультата);
	ПроверитьКС2020_156(СтруктураРезультата);
	ПроверитьКС2020_157(СтруктураРезультата);
	ПроверитьКС2020_158(СтруктураРезультата);
	ПроверитьКС2020_159(СтруктураРезультата);
	ПроверитьКС2020_160а(СтруктураРезультата);
	ПроверитьКС2020_160б(СтруктураРезультата);
	ПроверитьКС2020_161(СтруктураРезультата);
	ПроверитьКС2020_162(СтруктураРезультата);
	ПроверитьКС2020_163а(СтруктураРезультата);
	ПроверитьКС2020_163б(СтруктураРезультата);
	ПроверитьКС2020_164(СтруктураРезультата);
	ПроверитьКС2020_165(СтруктураРезультата);
	ПроверитьКС2020_166а(СтруктураРезультата);
	ПроверитьКС2020_166б(СтруктураРезультата);
	ПроверитьКС2020_167(СтруктураРезультата);
	ПроверитьКС2020_168(СтруктураРезультата);
	ПроверитьКС2020_169(СтруктураРезультата);
	ПроверитьКС2020_170(СтруктураРезультата);
	ПроверитьКС2020_171(СтруктураРезультата);
	ПроверитьКС2020_172(СтруктураРезультата);
	ПроверитьКС2020_173(СтруктураРезультата);
	ПроверитьКС2020_174(СтруктураРезультата);
	ПроверитьКС2020_175(СтруктураРезультата);
	ПроверитьКС2020_176а(СтруктураРезультата);
	ПроверитьКС2020_176б(СтруктураРезультата);
	ПроверитьКС2020_177(СтруктураРезультата);
	ПроверитьКС2020_178(СтруктураРезультата);
	ПроверитьКС2020_179а(СтруктураРезультата);
	ПроверитьКС2020_179б(СтруктураРезультата);
	ПроверитьКС2020_180(СтруктураРезультата);
	ПроверитьКС2020_181(СтруктураРезультата);
	ПроверитьКС2020_182а(СтруктураРезультата);
	ПроверитьКС2020_182б(СтруктураРезультата);
	ПроверитьКС2020_183(СтруктураРезультата);
	ПроверитьКС2020_184(СтруктураРезультата);
	ПроверитьКС2020_185(СтруктураРезультата);
	ПроверитьКС2020_186(СтруктураРезультата);

#КонецОбласти

#КонецОбласти

#КонецОбласти

	Если СписокРасшифровкиформулы.Количество() = 0 Тогда
		Возврат СтруктураРезультата;
	КонецЕсли;
	
	РегламентированнаяОтчетность.ПоместитьВКэш(СписокРасшифровкиформулы , УникальныйИдентификатор,
		СтруктураРеквизитовФормы.КонтрольныеСоотношенияАдресФормул);
	РегламентированнаяОтчетность.ПоместитьВКэш(СписокРасшифровкиПоказателей, УникальныйИдентификатор,
		СтруктураРеквизитовФормы.КонтрольныеСоотношенияАдресПоказателей);
	
	СтруктураРезультата.Вставить("СписокРасшифровкиформулы" 	, СтруктураРеквизитовФормы.КонтрольныеСоотношенияАдресФормул);
	СтруктураРезультата.Вставить("СписокРасшифровкиПоказателей" , СтруктураРеквизитовФормы.КонтрольныеСоотношенияАдресПоказателей);
	
	Возврат СтруктураРезультата;
	
КонецФункции

#КонецОбласти

#Область КС_Документирование

&НаКлиенте
Функция ВыполнитьДокументирование() Экспорт
	
	Возврат ВыполнитьДокументированиеНаСервере();
	
КонецФункции

&НаСервере
Функция ВыполнитьДокументированиеНаСервере()
	
	Документирование	= Истина;	
	СтруктураРезультата	= Новый Структура;
	СтруктураРезультата.Вставить("НаименованиеОтчета"	, "Расчет по страховым взносам");
	СтруктураРезультата.Вставить("НаименованиеФормы"	, "2020Кв1");
	
	ТаблицаОписаний		= СформироватьТаблицуОписаний2020();

#Область Проверки
	
#Область Проверки_Раздела_3
	
	ПроверитьКС2020_0_1а(СтруктураРезультата);
	ПроверитьКС2020_0_1б(СтруктураРезультата);
	ПроверитьКС2020_0_1в(СтруктураРезультата);
	ПроверитьКС2020_0_1г(СтруктураРезультата);
	ПроверитьКС2020_0_1д(СтруктураРезультата);
	ПроверитьКС2020_0_1е(СтруктураРезультата);
	ПроверитьКС2020_0_2а(СтруктураРезультата);
	ПроверитьКС2020_0_2б(СтруктураРезультата);
	ПроверитьКС2020_0_2в(СтруктураРезультата);
	ПроверитьКС2020_0_3(СтруктураРезультата);
	ПроверитьКС2020_0_4(СтруктураРезультата);
	ПроверитьКС2020_0_5а(СтруктураРезультата);
	ПроверитьКС2020_0_5б(СтруктураРезультата);
	ПроверитьКС2020_0_5в(СтруктураРезультата);
	ПроверитьКС2020_0_6а(СтруктураРезультата);
	ПроверитьКС2020_0_6б(СтруктураРезультата);
	ПроверитьКС2020_0_6в(СтруктураРезультата);
	ПроверитьКС2020_0_6г(СтруктураРезультата);
	ПроверитьКС2020_0_6д(СтруктураРезультата);
	ПроверитьКС2020_0_6е(СтруктураРезультата);
	ПроверитьКС2020_0_7а(СтруктураРезультата);
	ПроверитьКС2020_0_7б(СтруктураРезультата);
	ПроверитьКС2020_0_8а(СтруктураРезультата);
	ПроверитьКС2020_0_8б(СтруктураРезультата);
	ПроверитьКС2020_0_9а(СтруктураРезультата);
	ПроверитьКС2020_0_10а(СтруктураРезультата);
	ПроверитьКС2020_0_11а(СтруктураРезультата);
	ПроверитьКС2020_0_11б(СтруктураРезультата);
	ПроверитьКС2020_0_11в(СтруктураРезультата);
	ПроверитьКС2020_0_12(СтруктураРезультата);
	ПроверитьКС2020_0_13(СтруктураРезультата);
	ПроверитьКС2020_0_14а(СтруктураРезультата);
	ПроверитьКС2020_0_14б(СтруктураРезультата);
	ПроверитьКС2020_0_14в(СтруктураРезультата);
	ПроверитьКС2020_0_15(СтруктураРезультата);
	ПроверитьКС2020_0_16(СтруктураРезультата);
	ПроверитьКС2020_0_17а(СтруктураРезультата);
	ПроверитьКС2020_0_17б(СтруктураРезультата);
	ПроверитьКС2020_0_17в(СтруктураРезультата);
	ПроверитьКС2020_0_17г(СтруктураРезультата);
	ПроверитьКС2020_0_17д(СтруктураРезультата);
	ПроверитьКС2020_0_17е(СтруктураРезультата);
	ПроверитьКС2020_0_18а(СтруктураРезультата);
	ПроверитьКС2020_0_18б(СтруктураРезультата);
	ПроверитьКС2020_0_19а(СтруктураРезультата);
	ПроверитьКС2020_0_19б(СтруктураРезультата);
	ПроверитьКС2020_0_20а(СтруктураРезультата);
	ПроверитьКС2020_0_20б(СтруктураРезультата);
	ПроверитьКС2020_0_20в(СтруктураРезультата);
	ПроверитьКС2020_0_21(СтруктураРезультата);
	ПроверитьКС2020_0_22а(СтруктураРезультата);
	ПроверитьКС2020_0_22б(СтруктураРезультата);
	ПроверитьКС2020_0_22в(СтруктураРезультата);
	ПроверитьКС2020_0_22г(СтруктураРезультата);
	ПроверитьКС2020_0_23(СтруктураРезультата);
	ПроверитьКС2020_0_24(СтруктураРезультата);
	ПроверитьКС2020_0_25(СтруктураРезультата);
	ПроверитьКС2020_0_26(СтруктураРезультата);
	ПроверитьКС2020_0_27(СтруктураРезультата);
	ПроверитьКС2020_0_50а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_50в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_51в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_52в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_53в_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54а_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54б_доп(СтруктураРезультата);
	ПроверитьКС2020_0_54в_доп(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_1
	
	ПроверитьКС2020_1_1(СтруктураРезультата);
	ПроверитьКС2020_1_2(СтруктураРезультата);
	ПроверитьКС2020_1_3(СтруктураРезультата);
	ПроверитьКС2020_1_4(СтруктураРезультата);
	ПроверитьКС2020_1_5(СтруктураРезультата);
	ПроверитьКС2020_1_6(СтруктураРезультата);
	ПроверитьКС2020_1_7(СтруктураРезультата);
	ПроверитьКС2020_1_8(СтруктураРезультата);
	ПроверитьКС2020_1_9(СтруктураРезультата);
	ПроверитьКС2020_1_10(СтруктураРезультата);
	ПроверитьКС2020_1_11(СтруктураРезультата);
	ПроверитьКС2020_1_12а(СтруктураРезультата);
	ПроверитьКС2020_1_12б(СтруктураРезультата);
	ПроверитьКС2020_1_13а(СтруктураРезультата);
	ПроверитьКС2020_1_13б(СтруктураРезультата);
	ПроверитьКС2020_1_14а(СтруктураРезультата);
	ПроверитьКС2020_1_14б(СтруктураРезультата);
	ПроверитьКС2020_1_15а(СтруктураРезультата);
	ПроверитьКС2020_1_15б(СтруктураРезультата);
	ПроверитьКС2020_1_16а(СтруктураРезультата);
	ПроверитьКС2020_1_16б(СтруктураРезультата);
	ПроверитьКС2020_1_17а(СтруктураРезультата);
	ПроверитьКС2020_1_17б(СтруктураРезультата);
	ПроверитьКС2020_1_18а(СтруктураРезультата);
	ПроверитьКС2020_1_18б(СтруктураРезультата);
	ПроверитьКС2020_1_19а(СтруктураРезультата);
	ПроверитьКС2020_1_19б(СтруктураРезультата);
	ПроверитьКС2020_1_20(СтруктураРезультата);
	ПроверитьКС2020_1_21(СтруктураРезультата);
	ПроверитьКС2020_1_22(СтруктураРезультата);
	ПроверитьКС2020_1_23(СтруктураРезультата);
	ПроверитьКС2020_1_24(СтруктураРезультата);
	ПроверитьКС2020_1_25(СтруктураРезультата);
	ПроверитьКС2020_1_26(СтруктураРезультата);
	ПроверитьКС2020_1_27(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1
	
	ПроверитьКС2020_1_28(СтруктураРезультата);
	ПроверитьКС2020_1_29(СтруктураРезультата);
	ПроверитьКС2020_1_30(СтруктураРезультата);
	ПроверитьКС2020_1_31(СтруктураРезультата);
	ПроверитьКС2020_1_32(СтруктураРезультата);
	ПроверитьКС2020_1_33(СтруктураРезультата);
	ПроверитьКС2020_1_34(СтруктураРезультата);
	ПроверитьКС2020_1_35(СтруктураРезультата);
	ПроверитьКС2020_1_36(СтруктураРезультата);
	ПроверитьКС2020_1_37(СтруктураРезультата);
	ПроверитьКС2020_1_38(СтруктураРезультата);
	ПроверитьКС2020_1_39(СтруктураРезультата);
	ПроверитьКС2020_1_40(СтруктураРезультата);
	ПроверитьКС2020_1_41(СтруктураРезультата);
	ПроверитьКС2020_1_42(СтруктураРезультата);
	ПроверитьКС2020_1_43(СтруктураРезультата);
	ПроверитьКС2020_1_44(СтруктураРезультата);
	ПроверитьКС2020_1_45(СтруктураРезультата);
	ПроверитьКС2020_1_46(СтруктураРезультата);
	ПроверитьКС2020_1_47(СтруктураРезультата);
	ПроверитьКС2020_1_48(СтруктураРезультата);
	ПроверитьКС2020_1_49(СтруктураРезультата);
	ПроверитьКС2020_1_50(СтруктураРезультата);
	ПроверитьКС2020_1_51(СтруктураРезультата);
	ПроверитьКС2020_1_52(СтруктураРезультата);
	ПроверитьКС2020_1_53(СтруктураРезультата);
	ПроверитьКС2020_1_54(СтруктураРезультата);
	ПроверитьКС2020_1_55(СтруктураРезультата);
	ПроверитьКС2020_1_56(СтруктураРезультата);
	ПроверитьКС2020_1_57(СтруктураРезультата);
	ПроверитьКС2020_1_58(СтруктураРезультата);
	ПроверитьКС2020_1_59(СтруктураРезультата);
	ПроверитьКС2020_1_60(СтруктураРезультата);
	ПроверитьКС2020_1_61(СтруктураРезультата);
	ПроверитьКС2020_1_62(СтруктураРезультата);
	ПроверитьКС2020_1_63(СтруктураРезультата);
	ПроверитьКС2020_1_64(СтруктураРезультата);
	ПроверитьКС2020_1_65(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_2
	
	ПроверитьКС2020_1_66(СтруктураРезультата);
	ПроверитьКС2020_1_67(СтруктураРезультата);
	ПроверитьКС2020_1_68(СтруктураРезультата);
	ПроверитьКС2020_1_69(СтруктураРезультата);
	ПроверитьКС2020_1_70(СтруктураРезультата);
	ПроверитьКС2020_1_71(СтруктураРезультата);
	ПроверитьКС2020_1_72(СтруктураРезультата);
	ПроверитьКС2020_1_73(СтруктураРезультата);
	ПроверитьКС2020_1_74(СтруктураРезультата);
	ПроверитьКС2020_1_75(СтруктураРезультата);
	ПроверитьКС2020_1_76(СтруктураРезультата);
	ПроверитьКС2020_1_77(СтруктураРезультата);
	ПроверитьКС2020_1_78(СтруктураРезультата);
	ПроверитьКС2020_1_79(СтруктураРезультата);
	ПроверитьКС2020_1_80(СтруктураРезультата);
	ПроверитьКС2020_1_81(СтруктураРезультата);
	ПроверитьКС2020_1_82(СтруктураРезультата);
	ПроверитьКС2020_1_83(СтруктураРезультата);
	ПроверитьКС2020_1_84(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_1
	
	ПроверитьКС2020_1_85(СтруктураРезультата);
	ПроверитьКС2020_1_86(СтруктураРезультата);
	ПроверитьКС2020_1_87(СтруктураРезультата);
	ПроверитьКС2020_1_88(СтруктураРезультата);
	ПроверитьКС2020_1_89(СтруктураРезультата);
	ПроверитьКС2020_1_90(СтруктураРезультата);
	ПроверитьКС2020_1_91(СтруктураРезультата);
	ПроверитьКС2020_1_92(СтруктураРезультата);
	ПроверитьКС2020_1_93(СтруктураРезультата);
	ПроверитьКС2020_1_94(СтруктураРезультата);
	ПроверитьКС2020_1_95(СтруктураРезультата);
	ПроверитьКС2020_1_96(СтруктураРезультата);
	ПроверитьКС2020_1_97(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Подраздела_1_3_2
	
	ПроверитьКС2020_1_98(СтруктураРезультата);
	ПроверитьКС2020_1_99(СтруктураРезультата);
	ПроверитьКС2020_1_100(СтруктураРезультата);
	ПроверитьКС2020_1_101(СтруктураРезультата);
	ПроверитьКС2020_1_102(СтруктураРезультата);
	ПроверитьКС2020_1_103(СтруктураРезультата);
	ПроверитьКС2020_1_104(СтруктураРезультата);
	ПроверитьКС2020_1_105(СтруктураРезультата);
	ПроверитьКС2020_1_106(СтруктураРезультата);
	ПроверитьКС2020_1_107(СтруктураРезультата);
	ПроверитьКС2020_1_108(СтруктураРезультата);
	ПроверитьКС2020_1_109(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1
	
	ПроверитьКС2020_1_110(СтруктураРезультата);
	ПроверитьКС2020_1_111(СтруктураРезультата);
	ПроверитьКС2020_1_112(СтруктураРезультата);
	ПроверитьКС2020_1_113(СтруктураРезультата);
	ПроверитьКС2020_1_114(СтруктураРезультата);
	ПроверитьКС2020_1_115(СтруктураРезультата);
	ПроверитьКС2020_1_116(СтруктураРезультата);
	ПроверитьКС2020_1_117(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_2
	
	ПроверитьКС2020_1_118(СтруктураРезультата);
	ПроверитьКС2020_1_119(СтруктураРезультата);
	ПроверитьКС2020_1_120(СтруктураРезультата);
	ПроверитьКС2020_1_121(СтруктураРезультата);
	ПроверитьКС2020_1_122(СтруктураРезультата);
	ПроверитьКС2020_1_123(СтруктураРезультата);
	ПроверитьКС2020_1_124(СтруктураРезультата);
	ПроверитьКС2020_1_125(СтруктураРезультата);
	ПроверитьКС2020_1_126(СтруктураРезультата);
	ПроверитьКС2020_1_127(СтруктураРезультата);
	ПроверитьКС2020_1_128(СтруктураРезультата);
	ПроверитьКС2020_1_129(СтруктураРезультата);
	ПроверитьКС2020_1_130(СтруктураРезультата);
	ПроверитьКС2020_1_131(СтруктураРезультата);
	ПроверитьКС2020_1_132(СтруктураРезультата);
	ПроверитьКС2020_1_133(СтруктураРезультата);
	ПроверитьКС2020_1_134(СтруктураРезультата);
	ПроверитьКС2020_1_135(СтруктураРезультата);
	ПроверитьКС2020_1_136(СтруктураРезультата);
	ПроверитьКС2020_1_137(СтруктураРезультата);
	ПроверитьКС2020_1_138(СтруктураРезультата);
	ПроверитьКС2020_1_139(СтруктураРезультата);
	ПроверитьКС2020_1_140(СтруктураРезультата);
	ПроверитьКС2020_1_141(СтруктураРезультата);
	ПроверитьКС2020_1_142(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_5
	
	ПроверитьКС2020_1_143(СтруктураРезультата);
	ПроверитьКС2020_1_144(СтруктураРезультата);
	ПроверитьКС2020_1_145(СтруктураРезультата);
	ПроверитьКС2020_1_146(СтруктураРезультата);
	ПроверитьКС2020_1_147(СтруктураРезультата);
	ПроверитьКС2020_1_148(СтруктураРезультата);
	ПроверитьКС2020_1_149(СтруктураРезультата);
	ПроверитьКС2020_1_150(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_6

	ПроверитьКС2020_1_151(СтруктураРезультата);
	ПроверитьКС2020_1_152(СтруктураРезультата);
	ПроверитьКС2020_1_153(СтруктураРезультата);
	ПроверитьКС2020_1_154(СтруктураРезультата);
	ПроверитьКС2020_1_155(СтруктураРезультата);
	ПроверитьКС2020_1_156(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_7
	
	ПроверитьКС2020_1_157(СтруктураРезультата);
	ПроверитьКС2020_1_158(СтруктураРезультата);
	ПроверитьКС2020_1_159(СтруктураРезультата);
	ПроверитьКС2020_1_160(СтруктураРезультата);
	ПроверитьКС2020_1_161(СтруктураРезультата);
	ПроверитьКС2020_1_162(СтруктураРезультата);
	ПроверитьКС2020_1_163(СтруктураРезультата);
	ПроверитьКС2020_1_164(СтруктураРезультата);

#КонецОбласти

#Область Проверки_Приложения_8
	
	ПроверитьКС2020_1_165(СтруктураРезультата);
	ПроверитьКС2020_1_166(СтруктураРезультата);
	ПроверитьКС2020_1_167(СтруктураРезультата);
	ПроверитьКС2020_1_168(СтруктураРезультата);
	ПроверитьКС2020_1_169(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_9
	
	ПроверитьКС2020_1_170(СтруктураРезультата);
	ПроверитьКС2020_1_171(СтруктураРезультата);
	ПроверитьКС2020_1_172(СтруктураРезультата);
	ПроверитьКС2020_1_173(СтруктураРезультата);
	ПроверитьКС2020_1_174(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Раздела_2
	
	ПроверитьКС2020_1_175(СтруктураРезультата);
	ПроверитьКС2020_1_176(СтруктураРезультата);
	ПроверитьКС2020_1_177(СтруктураРезультата);
	ПроверитьКС2020_1_178(СтруктураРезультата);
	ПроверитьКС2020_1_179(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Прочие
	
	ПроверитьКС2020_1_180(СтруктураРезультата);
	ПроверитьКС2020_1_181(СтруктураРезультата);
	ПроверитьКС2020_1_182(СтруктураРезультата);
	ПроверитьКС2020_1_183(СтруктураРезультата);
	ПроверитьКС2020_1_184(СтруктураРезультата);
	ПроверитьКС2020_1_185(СтруктураРезультата);
	ПроверитьКС2020_1_186(СтруктураРезультата);
	ПроверитьКС2020_1_187(СтруктураРезультата);
	ПроверитьКС2020_1_188(СтруктураРезультата);
	ПроверитьКС2020_1_189(СтруктураРезультата);
	ПроверитьКС2020_1_190(СтруктураРезультата);
	ПроверитьКС2020_1_191(СтруктураРезультата);
	ПроверитьКС2020_1_192(СтруктураРезультата);
	ПроверитьКС2020_1_193(СтруктураРезультата);
	ПроверитьКС2020_1_194(СтруктураРезультата);
	ПроверитьКС2020_1_195(СтруктураРезультата);
	ПроверитьКС2020_1_196(СтруктураРезультата);
	ПроверитьКС2020_1_197(СтруктураРезультата);
	ПроверитьКС2020_1_198(СтруктураРезультата);
	ПроверитьКС2020_1_199(СтруктураРезультата);
	ПроверитьКС2020_1_300_доп(СтруктураРезультата);
	ПроверитьКС2020_1_301_доп(СтруктураРезультата);
	ПроверитьКС2020_1_302_доп(СтруктураРезультата);
	ПроверитьКС2020_2_1(СтруктураРезультата);
	ПроверитьКС2020_2_2(СтруктураРезультата);
	ПроверитьКС2020_2_3(СтруктураРезультата);
	ПроверитьКС2020_2_4(СтруктураРезультата);
	ПроверитьКС2020_2_5(СтруктураРезультата);
	ПроверитьКС2020_2_6(СтруктураРезультата);
	ПроверитьКС2020_2_7(СтруктураРезультата);
	ПроверитьКС2020_2_8(СтруктураРезультата);
	ПроверитьКС2020_2_9(СтруктураРезультата);
	ПроверитьКС2020_2_10(СтруктураРезультата);
	ПроверитьКС2020_2_11(СтруктураРезультата);
	ПроверитьКС2020_2_12(СтруктураРезультата);
	ПроверитьКС2020_2_13(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

	ПроверитьКС2020_1(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2020_2(СтруктураРезультата);
	ПроверитьКС2020_3(СтруктураРезультата);
	ПроверитьКС2020_4(СтруктураРезультата);
	ПроверитьКС2020_5(СтруктураРезультата);
	ПроверитьКС2020_6(СтруктураРезультата);
	ПроверитьКС2020_7(СтруктураРезультата);
	ПроверитьКС2020_8(СтруктураРезультата);
	ПроверитьКС2020_9(СтруктураРезультата);
	ПроверитьКС2020_10(СтруктураРезультата);
	ПроверитьКС2020_11(СтруктураРезультата);
	ПроверитьКС2020_12(СтруктураРезультата);
	ПроверитьКС2020_13(СтруктураРезультата);
	ПроверитьКС2020_14(СтруктураРезультата);
	ПроверитьКС2020_15(СтруктураРезультата);
	ПроверитьКС2020_16(СтруктураРезультата);
	ПроверитьКС2020_17(СтруктураРезультата);
	ПроверитьКС2020_18(СтруктураРезультата);
	ПроверитьКС2020_19(СтруктураРезультата);
	ПроверитьКС2020_20(СтруктураРезультата);
	ПроверитьКС2020_21(СтруктураРезультата);
	ПроверитьКС2020_22(СтруктураРезультата);
	ПроверитьКС2020_23(СтруктураРезультата);
	ПроверитьКС2020_24(СтруктураРезультата);
	ПроверитьКС2020_25(СтруктураРезультата);
	ПроверитьКС2020_26(СтруктураРезультата);
	ПроверитьКС2020_27(СтруктураРезультата);
	ПроверитьКС2020_28(СтруктураРезультата);
	ПроверитьКС2020_29(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_30(СтруктураРезультата);
	ПроверитьКС2020_31(СтруктураРезультата);
	ПроверитьКС2020_32(СтруктураРезультата);
	ПроверитьКС2020_33(СтруктураРезультата);
	ПроверитьКС2020_34(СтруктураРезультата);
	ПроверитьКС2020_35(СтруктураРезультата);
	ПроверитьКС2020_36(СтруктураРезультата);
	ПроверитьКС2020_37(СтруктураРезультата);
	ПроверитьКС2020_38(СтруктураРезультата);
	ПроверитьКС2020_39(СтруктураРезультата);
	ПроверитьКС2020_40(СтруктураРезультата);
	ПроверитьКС2020_41(СтруктураРезультата);
	ПроверитьКС2020_42(СтруктураРезультата);
	ПроверитьКС2020_43(СтруктураРезультата);
	ПроверитьКС2020_44(СтруктураРезультата);
	ПроверитьКС2020_45(СтруктураРезультата);
	ПроверитьКС2020_46(СтруктураРезультата);
	ПроверитьКС2020_47(СтруктураРезультата);
	ПроверитьКС2020_48(СтруктураРезультата);
	ПроверитьКС2020_49(СтруктураРезультата);
	ПроверитьКС2020_50(СтруктураРезультата);
	ПроверитьКС2020_51(СтруктураРезультата);
	ПроверитьКС2020_52(СтруктураРезультата);
	ПроверитьКС2020_53(СтруктураРезультата);
	ПроверитьКС2020_54(СтруктураРезультата);
	ПроверитьКС2020_55(СтруктураРезультата);
	ПроверитьКС2020_56(СтруктураРезультата);
	ПроверитьКС2020_57(СтруктураРезультата);
	ПроверитьКС2020_58(СтруктураРезультата);
	ПроверитьКС2020_59(СтруктураРезультата);
	ПроверитьКС2020_60(СтруктураРезультата);
	ПроверитьКС2020_61(СтруктураРезультата);
	ПроверитьКС2020_62(СтруктураРезультата);
	ПроверитьКС2020_63(СтруктураРезультата);
	ПроверитьКС2020_64(СтруктураРезультата);
	ПроверитьКС2020_65(СтруктураРезультата);
	ПроверитьКС2020_66(СтруктураРезультата);
	ПроверитьКС2020_67(СтруктураРезультата);
	ПроверитьКС2020_68(СтруктураРезультата);
	ПроверитьКС2020_69(СтруктураРезультата);
	ПроверитьКС2020_70(СтруктураРезультата);
	ПроверитьКС2020_71(СтруктураРезультата);
	ПроверитьКС2020_72(СтруктураРезультата);
	ПроверитьКС2020_73(СтруктураРезультата);
	ПроверитьКС2020_74(СтруктураРезультата);
	ПроверитьКС2020_75(СтруктураРезультата);
	ПроверитьКС2020_76(СтруктураРезультата);
	ПроверитьКС2020_77(СтруктураРезультата);
	ПроверитьКС2020_78(СтруктураРезультата);
	ПроверитьКС2020_79(СтруктураРезультата);
	ПроверитьКС2020_80(СтруктураРезультата);
	ПроверитьКС2020_81(СтруктураРезультата);
	ПроверитьКС2020_82(СтруктураРезультата);
	ПроверитьКС2020_83(СтруктураРезультата);
	ПроверитьКС2020_84(СтруктураРезультата);
	ПроверитьКС2020_85(СтруктураРезультата);
	ПроверитьКС2020_86(СтруктураРезультата);
	ПроверитьКС2020_87(СтруктураРезультата);
	ПроверитьКС2020_88(СтруктураРезультата);
	ПроверитьКС2020_89(СтруктураРезультата);
	ПроверитьКС2020_90(СтруктураРезультата);
	ПроверитьКС2020_91(СтруктураРезультата);
	ПроверитьКС2020_92(СтруктураРезультата);
	ПроверитьКС2020_93(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_3

	ПроверитьКС2020_94а(СтруктураРезультата);
	ПроверитьКС2020_94б(СтруктураРезультата);
	ПроверитьКС2020_95а(СтруктураРезультата);
	ПроверитьКС2020_95б(СтруктураРезультата);
	ПроверитьКС2020_96а(СтруктураРезультата);
	ПроверитьКС2020_96б(СтруктураРезультата);
	ПроверитьКС2020_97а(СтруктураРезультата);
	ПроверитьКС2020_97б(СтруктураРезультата);
	ПроверитьКС2020_98а(СтруктураРезультата);
	ПроверитьКС2020_98б(СтруктураРезультата);
	ПроверитьКС2020_99а(СтруктураРезультата);
	ПроверитьКС2020_99б(СтруктураРезультата);
	ПроверитьКС2020_100(СтруктураРезультата);
	ПроверитьКС2020_101(СтруктураРезультата);
	ПроверитьКС2020_102(СтруктураРезультата);
	ПроверитьКС2020_103(СтруктураРезультата);
	ПроверитьКС2020_104(СтруктураРезультата);
	ПроверитьКС2020_105(СтруктураРезультата);
	ПроверитьКС2020_106(СтруктураРезультата);
	ПроверитьКС2020_107(СтруктураРезультата);
	ПроверитьКС2020_108(СтруктураРезультата);
	ПроверитьКС2020_109(СтруктураРезультата);
	ПроверитьКС2020_110(СтруктураРезультата);
	ПроверитьКС2020_111(СтруктураРезультата);
	ПроверитьКС2020_112(СтруктураРезультата);
	ПроверитьКС2020_113(СтруктураРезультата);
	ПроверитьКС2020_114а(СтруктураРезультата);
	ПроверитьКС2020_114б(СтруктураРезультата);
	ПроверитьКС2020_115а(СтруктураРезультата);
	ПроверитьКС2020_115б(СтруктураРезультата);
	ПроверитьКС2020_116а(СтруктураРезультата);
	ПроверитьКС2020_116б(СтруктураРезультата);
	ПроверитьКС2020_117а(СтруктураРезультата);
	ПроверитьКС2020_117б(СтруктураРезультата);
	ПроверитьКС2020_118а(СтруктураРезультата);
	ПроверитьКС2020_118б(СтруктураРезультата);
	ПроверитьКС2020_119а(СтруктураРезультата);
	ПроверитьКС2020_119б(СтруктураРезультата);
	ПроверитьКС2020_120а(СтруктураРезультата);
	ПроверитьКС2020_120б(СтруктураРезультата);
	ПроверитьКС2020_121а(СтруктураРезультата);
	ПроверитьКС2020_121б(СтруктураРезультата);
	ПроверитьКС2020_122а(СтруктураРезультата);
	ПроверитьКС2020_122б(СтруктураРезультата);
	ПроверитьКС2020_123(СтруктураРезультата);
	ПроверитьКС2020_124(СтруктураРезультата);
	ПроверитьКС2020_125а(СтруктураРезультата);
	ПроверитьКС2020_125б(СтруктураРезультата);
	ПроверитьКС2020_126(СтруктураРезультата);
	ПроверитьКС2020_127(СтруктураРезультата);
	
#КонецОбласти

#Область Проверки_Приложения_4

	ПроверитьКС2020_128(СтруктураРезультата);
	ПроверитьКС2020_129(СтруктураРезультата);
	ПроверитьКС2020_130(СтруктураРезультата);
	ПроверитьКС2020_131(СтруктураРезультата);
	ПроверитьКС2020_132а(СтруктураРезультата);
	ПроверитьКС2020_132б(СтруктураРезультата);
	ПроверитьКС2020_133(СтруктураРезультата);
	ПроверитьКС2020_134(СтруктураРезультата);
	ПроверитьКС2020_135а(СтруктураРезультата);
	ПроверитьКС2020_135б(СтруктураРезультата);
	ПроверитьКС2020_136(СтруктураРезультата);
	ПроверитьКС2020_137(СтруктураРезультата);
	ПроверитьКС2020_138а(СтруктураРезультата);
	ПроверитьКС2020_138б(СтруктураРезультата);
	ПроверитьКС2020_139(СтруктураРезультата);
	ПроверитьКС2020_140(СтруктураРезультата);
	ПроверитьКС2020_141(СтруктураРезультата);
	ПроверитьКС2020_142(СтруктураРезультата);
	ПроверитьКС2020_143(СтруктураРезультата);
	ПроверитьКС2020_144(СтруктураРезультата);
	ПроверитьКС2020_145а(СтруктураРезультата);
	ПроверитьКС2020_145б(СтруктураРезультата);
	ПроверитьКС2020_146(СтруктураРезультата);
	ПроверитьКС2020_147(СтруктураРезультата);
	ПроверитьКС2020_148а(СтруктураРезультата);
	ПроверитьКС2020_148б(СтруктураРезультата);
	ПроверитьКС2020_149(СтруктураРезультата);
	ПроверитьКС2020_150(СтруктураРезультата);
	ПроверитьКС2020_151а(СтруктураРезультата);
	ПроверитьКС2020_151б(СтруктураРезультата);
	ПроверитьКС2020_152(СтруктураРезультата);
	ПроверитьКС2020_153(СтруктураРезультата);
	ПроверитьКС2020_154(СтруктураРезультата);
	ПроверитьКС2020_155(СтруктураРезультата);
	ПроверитьКС2020_156(СтруктураРезультата);
	ПроверитьКС2020_157(СтруктураРезультата);
	ПроверитьКС2020_158(СтруктураРезультата);
	ПроверитьКС2020_159(СтруктураРезультата);
	ПроверитьКС2020_160а(СтруктураРезультата);
	ПроверитьКС2020_160б(СтруктураРезультата);
	ПроверитьКС2020_161(СтруктураРезультата);
	ПроверитьКС2020_162(СтруктураРезультата);
	ПроверитьКС2020_163а(СтруктураРезультата);
	ПроверитьКС2020_163б(СтруктураРезультата);
	ПроверитьКС2020_164(СтруктураРезультата);
	ПроверитьКС2020_165(СтруктураРезультата);
	ПроверитьКС2020_166а(СтруктураРезультата);
	ПроверитьКС2020_166б(СтруктураРезультата);
	ПроверитьКС2020_167(СтруктураРезультата);
	ПроверитьКС2020_168(СтруктураРезультата);
	ПроверитьКС2020_169(СтруктураРезультата);
	ПроверитьКС2020_170(СтруктураРезультата);
	ПроверитьКС2020_171(СтруктураРезультата);
	ПроверитьКС2020_172(СтруктураРезультата);
	ПроверитьКС2020_173(СтруктураРезультата);
	ПроверитьКС2020_174(СтруктураРезультата);
	ПроверитьКС2020_175(СтруктураРезультата);
	ПроверитьКС2020_176а(СтруктураРезультата);
	ПроверитьКС2020_176б(СтруктураРезультата);
	ПроверитьКС2020_177(СтруктураРезультата);
	ПроверитьКС2020_178(СтруктураРезультата);
	ПроверитьКС2020_179а(СтруктураРезультата);
	ПроверитьКС2020_179б(СтруктураРезультата);
	ПроверитьКС2020_180(СтруктураРезультата);
	ПроверитьКС2020_181(СтруктураРезультата);
	ПроверитьКС2020_182а(СтруктураРезультата);
	ПроверитьКС2020_182б(СтруктураРезультата);
	ПроверитьКС2020_183(СтруктураРезультата);
	ПроверитьКС2020_184(СтруктураРезультата);
	ПроверитьКС2020_185(СтруктураРезультата);
	ПроверитьКС2020_186(СтруктураРезультата);
	
#КонецОбласти

#КонецОбласти

#КонецОбласти

	АдресТаблицыОписаний = ПоместитьВоВременноеХранилище(ТаблицаОписаний, Новый УникальныйИдентификатор);
	СтруктураРезультата.Вставить("АдресТаблицыОписаний", АдресТаблицыОписаний);
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаСервере
Функция СформироватьТаблицуОписаний2020()
	
	ТипСтрока20		= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(20));
	ТипСтрока100	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(100));
	ТипСтрока900	= Новый ОписаниеТипов("Строка",, Новый КвалификаторыСтроки(900));
	ТипБулево		= Новый ОписаниеТипов("Булево");
	
	ТаблицаОписаний = Новый ТаблицаЗначений;
	ТаблицаОписаний.Колонки.Добавить("НомерКС"			, ТипСтрока20);
	ТаблицаОписаний.Колонки.Добавить("Раздел"			, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеКС"		, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Нарушение"		, ТипСтрока100);
	ТаблицаОписаний.Колонки.Добавить("ОписаниеОшибки"	, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Условие"			, ТипСтрока900);
	ТаблицаОписаний.Колонки.Добавить("Комментарий"		, ТипСтрока900);
	
	Возврат ТаблицаОписаний;
	
КонецФункции // СформироватьТаблицуОписаний;()

#КонецОбласти

#Область КС_Данные

&НаСервере
Процедура СформироватьСлужебныеДанные2020()

#Область ОсновныеНастройки

	ДанныеКС.Вставить("Отчет"					, Неопределено);
	ДанныеКС.Вставить("ТекОтчет"				, СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка);
	ДанныеКС.Вставить("Вид"						, СтруктураДанныхТитульный.НомерКорректировки);
	ДанныеКС.Вставить("Мес"						, Месяц(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Год"						, Год(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета));
	ДанныеКС.Вставить("Организация"				, СтруктураРеквизитовФормы.Организация);
	ДанныеКС.Вставить("ИмяФормы"				, СтруктураРеквизитовФормы.мВыбраннаяФорма);
	ДанныеКС.Вставить("ДатаОкончанияПериода"	, СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета);
	ДанныеКС.Вставить("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы);
	ДанныеКС.Вставить("СтруктураМнРазделов"		, мСтруктураМногоуровневыхРазделов);
	ДанныеКС.Вставить("ОКВЭД2"					, СтруктураДанныхТитульный.ОКВЭД);
	ДанныеКС.Вставить("ЛимитРасшифровки"		, 1000);
	ДанныеКС.Вставить("ЛимитСотрудников"		, 500);
	
	Попытка
		
		ДанныеСреднейЗарплаты = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСреднеотраслевуюЗарплату(
		ДанныеКС.Организация, Лев(СтруктураДанныхТитульный.КПП, 2), 
		СокрЛП(СтруктураДанныхТитульный.ОКВЭД));
		МРОТ = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьМРОТ(
		ДанныеКС.ДатаОкончанияПериода);
		ПредельнаяВеличинаБазы = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьПредельнуюВеличинуБазы(
		ДанныеКС.ДатаОкончанияПериода);
		ПострадавшиеОтрасли = Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
		
	Исключение
		
		ДанныеСреднейЗарплаты = Новый Структура("КодРегиона, КодОКВЭД, СредняяЗарплата");
		МРОТ = Неопределено;
		ПредельнаяВеличинаБазы = Неопределено;
		ПострадавшиеОтрасли = Неопределено;
		
	КонецПопытки;
	
	ДанныеКС.Вставить("КодРегиона"				, ДанныеСреднейЗарплаты.КодРегиона);
	ДанныеКС.Вставить("КодОКВЭД"				, ДанныеСреднейЗарплаты.КодОКВЭД);
	ДанныеКС.Вставить("СредняяЗарплата"			, ДанныеСреднейЗарплаты.СредняяЗарплата);
	ДанныеКС.Вставить("МРОТ"					, МРОТ);
	ДанныеКС.Вставить("ПредельнаяВеличинаБазы"	, ПредельнаяВеличинаБазы);
	ДанныеКС.Вставить("ПострадавшиеОтрасли"		, ПострадавшиеОтрасли);
	ДанныеКС.Вставить("ЭтоПострадавшаяОтрасль"	, ЭтоПострадавшаяОтрасль2020());
		
	СписочныеЗначения = Новый Структура;
	СписочныеЗначения.Вставить("П000010002001");
	СписочныеЗначения.Вставить("П000010004001");
	СписочныеЗначения.Вставить("П00001М106001");
	СписочныеЗначения.Вставить("П00001М208001");
	СписочныеЗначения.Вставить("П000010010001");
	СписочныеЗначения.Вставить("П000020002001");
	СписочныеЗначения.Вставить("П000020004001");
	
	ТаблицаСписков = РеквизитФормыВЗначение("СвойстваПоказателей", Тип("ТаблицаЗначений"));
	Для каждого СтрокаТЗ Из ТаблицаСписков Цикл
		Если СписочныеЗначения.Свойство(СтрокаТЗ.Показатель) Тогда
			МассивЗначений = СтрокаТЗ.ТаблицаЗначений.ВыгрузитьКолонку("Код");
			СписочныеЗначения.Вставить(СтрокаТЗ.Показатель, МассивЗначений);
		КонецЕсли;
	КонецЦикла;
	
	ДанныеКС.Вставить("СписочныеЗначения", СписочныеЗначения);
	
#КонецОбласти

#Область ТарифыСтавкиКатегории

	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(2));
	ТипЧисло2	= Новый ОписаниеТипов("Число",,, Новый КвалификаторыЧисла(3, 1));
	
	СтруктураТаблиц = Новый Структура;
	СтруктураТаблиц.Вставить("Категории321"		, "Категории321_2020");
	СтруктураТаблиц.Вставить("Категории322"		, "Категории322_2020");
	СтруктураТаблиц.Вставить("Ставки321"		, "Ставки321_2020");
	СтруктураТаблиц.Вставить("Ставки322"		, "Ставки322_2020");
	СтруктураТаблиц.Вставить("Ставки112"		, "Ставки112_2020");
	СтруктураТаблиц.Вставить("Ставки201"		, "Ставки201_2020");
	СтруктураТаблиц.Вставить("Ставки202"		, "Ставки202_2020");
	
	Категории321	= Новый ТаблицаЗначений;
	Категории321.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории321.Колонки.Добавить("Код"			, ТипСтрока);
	
	Категории322	= Новый ТаблицаЗначений;
	Категории322.Колонки.Добавить("Категория"	, ТипСтрока);
	Категории322.Колонки.Добавить("Код"			, ТипСтрока);
	
	Ставки321		= Новый ТаблицаЗначений;
	Ставки321.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки321.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки322		= Новый ТаблицаЗначений;
	Ставки322.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки322.Колонки.Добавить("Ставка"			, ТипЧисло);
	
	Ставки112		= Новый ТаблицаЗначений;
	Ставки112.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки112.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки201		= Новый ТаблицаЗначений;
	Ставки201.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки201.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Ставки202		= Новый ТаблицаЗначений;
	Ставки202.Колонки.Добавить("Код"			, ТипСтрока);
	Ставки202.Колонки.Добавить("Ставка"			, ТипЧисло2);
	
	Категории321.Индексы.Добавить("Категория");
	Категории322.Индексы.Добавить("Категория");
	Ставки321.Индексы.Добавить("Код");
	Ставки322.Индексы.Добавить("Код");

	ДанныеКС.Вставить("Категории321"	, Категории321);
	ДанныеКС.Вставить("Категории322"	, Категории322);
	ДанныеКС.Вставить("Ставки321"		, Ставки321);
	ДанныеКС.Вставить("Ставки322"		, Ставки322);
	ДанныеКС.Вставить("Ставки112"		, Ставки112);
	ДанныеКС.Вставить("Ставки201"		, Ставки201);
	ДанныеКС.Вставить("Ставки202"		, Ставки202);
	
	МакетНастроекКС = ОбъектОтчета(ИмяФормы).ПолучитьМакет("НастройкиКС2020Кв1");

	Для каждого Элемент Из СтруктураТаблиц Цикл
		Область				= МакетНастроекКС.Области.Найти(Элемент.Значение);
		Для НомерСтроки		= Область.Верх По Область.Низ Цикл
			НовСтрока		= ДанныеКС[Элемент.Ключ].Добавить();
			НовСтрока[0]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 1).Текст);
			НовСтрока[1]	= СокрЛП(МакетНастроекКС.Область(НомерСтроки, 2).Текст);
		КонецЦикла;
	КонецЦикла;
	
	#КонецОбласти

#Область НастройкиРасшифровки
	
	ПредставлениеРазделов = Новый Структура();
	
	ПредставлениеРазделов.Вставить("П00003", "Раздела 3");
	ПредставлениеРазделов.Вставить("П00031", "подраздел 3.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00321", "подраздела 3.2.1 Раздела 3");
	ПредставлениеРазделов.Вставить("П00322", "подраздела 3.2.2 Раздела 3");
	ПредставлениеРазделов.Вставить("П00001", "Раздела 1");
	ПредставлениеРазделов.Вставить("П01111", "подраздела 1.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П01112", "подраздела 1.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11131", "подраздела 1.3.1 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П11132", "подраздела 1.3.2 Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00111", "Приложения 1.1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00011", "Приложения 1 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00012", "Приложения 2 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00013", "Приложения 3 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00014", "Приложения 4 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00015", "Приложения 5 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00016", "Приложения 6 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00017", "Приложения 7 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00018", "Приложения 8 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00019", "Приложения 9 к Разделу 1");
	ПредставлениеРазделов.Вставить("П00002", "Раздела 2");
	ПредставлениеРазделов.Вставить("П00021", "Приложения 1 к Разделу 2");
	
	ДанныеКС.Вставить("ПредставлениеРазделов", ПредставлениеРазделов);
	
	РазделыПоказателей = Новый Структура();
	
	РазделыПоказателей.Вставить("П00003", "Раздел3");
	РазделыПоказателей.Вставить("П00031", "Раздел3");
	РазделыПоказателей.Вставить("П00321", "Раздел3");
	РазделыПоказателей.Вставить("П00322", "Раздел3");
	РазделыПоказателей.Вставить("П00001", "Раздел1");
	РазделыПоказателей.Вставить("П01111", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П01112", "Раздел1Прил1Подр1_1и1_2");
	РазделыПоказателей.Вставить("П11131", "Раздел1Прил1Подр1_3_1");
	РазделыПоказателей.Вставить("П11132", "Раздел1Прил1Подр1_3_2");
	РазделыПоказателей.Вставить("П00111", "Раздел1Прил1_1");
	РазделыПоказателей.Вставить("П00011", "Раздел1Прил1");
	РазделыПоказателей.Вставить("П00012", "Раздел1Прил2");
	РазделыПоказателей.Вставить("П00013", "Раздел1Прил3");
	РазделыПоказателей.Вставить("П00014", "Раздел1Прил4");
	РазделыПоказателей.Вставить("П00015", "Раздел1Прил5");
	РазделыПоказателей.Вставить("П00016", "Раздел1Прил6");
	РазделыПоказателей.Вставить("П00017", "Раздел1Прил7");
	РазделыПоказателей.Вставить("П00018", "Раздел1Прил8");
	РазделыПоказателей.Вставить("П00019", "Раздел1Прил9");
	РазделыПоказателей.Вставить("П00002", "Раздел2");
	РазделыПоказателей.Вставить("П00021", "Раздел2");
	
	ДанныеКС.Вставить("РазделыПоказателей", РазделыПоказателей);
	
	#КонецОбласти

#Область ФормированиеТаблицРазделов
	
	ТипСтрока	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(14));
	ТипСтрока2	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(2));
	ТипСтрока4	= Новый ОписаниеТипов("Строка",,,, Новый КвалификаторыСтроки(4));
	ТипЧисло	= Новый ОписаниеТипов("Число");
	ТипПрим		= Новый ОписаниеТипов("Строка, Число, Дата",,,, Новый КвалификаторыСтроки(30));
	ТипРО		= Новый ОписаниеТипов("ДокументСсылка.РегламентированныйОтчет");

	ТаблицаСводныхДанных = Новый ТаблицаЗначений;
	ТаблицаСводныхДанных.Колонки.Добавить("Раздел"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("ТабЧасть"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Строка_"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаСводныхДанных.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаСводныхДанных.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаСводныхДанных.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаСводныхДанных.Колонки.Добавить("Значение_"	, ТипПрим);
	
	ТаблицаПерсДанных310 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных310.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Снилс"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Фамилия"		, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПерсДанных310.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПерсДанных310.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПерсДанных310.Колонки.Добавить("Аннуляция"	, ТипСтрока);
	
	ТаблицаПерсДанных321 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных321.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных321.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("МесСтр"		, ТипСтрока2);
	ТаблицаПерсДанных321.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С130"		, ТипСтрока4);
	ТаблицаПерсДанных321.Колонки.Добавить("С140"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С150"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С160"		, ТипЧисло);
	ТаблицаПерсДанных321.Колонки.Добавить("С170"		, ТипЧисло);
	
	ТаблицаПерсДанных322 = Новый ТаблицаЗначений;
	ТаблицаПерсДанных322.Колонки.Добавить("Ключ"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("СтрокаТЧ"	, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Код"			, ТипСтрока2);
	ТаблицаПерсДанных322.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("Ставка"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С190"		, ТипСтрока);
	ТаблицаПерсДанных322.Колонки.Добавить("С200"		, ТипЧисло);
	ТаблицаПерсДанных322.Колонки.Добавить("С210"		, ТипЧисло);
	
	ТаблицаПриложения900 = Новый ТаблицаЗначений;
	ТаблицаПриложения900.Колонки.Добавить("Графа"		, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Отчет"		, ТипРО);
	ТаблицаПриложения900.Колонки.Добавить("Вид"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Квартал"		, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Мес"			, ТипЧисло);
	ТаблицаПриложения900.Колонки.Добавить("Страница"	, ТипСтрока);
	ТаблицаПриложения900.Колонки.Добавить("Значение_"	, ТипЧисло);
	
	ДанныеКС.Вставить("ТаблицаСводныхДанных"			, ТаблицаСводныхДанных);
	ДанныеКС.Вставить("ТаблицаПерсДанных310"			, ТаблицаПерсДанных310);
	ДанныеКС.Вставить("ТаблицаПерсДанных321"			, ТаблицаПерсДанных321);
	ДанныеКС.Вставить("ТаблицаПерсДанных322"			, ТаблицаПерсДанных322);
	ДанныеКС.Вставить("ТаблицаПриложения900"			, ТаблицаПриложения900);
	
#КонецОбласти

КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицыРазделов2020(Знач СтруктураПараметров, ЗаполнитьТолько3Раздел)
	
	ДанныеОтчета = ОбъектОтчета(ИмяФормы).СохраненныеДанныеОтчета(СтруктураПараметров.ИмяФормы,
											СтруктураПараметров.СтруктураРеквизитовФормы,
											СтруктураПараметров.СтруктураМнРазделов);
	
	СтруктураПолей	= Новый Структура("Отчет, Вид, Мес, МесСтр");
	ЗаполнитьЗначенияСвойств(СтруктураПолей, СтруктураПараметров);
	СтруктураПолей.МесСтр = Строка(СтруктураПолей.Мес);
	
	ЗаполнитьТаблицуРазд3_2020(СтруктураПараметров, ДанныеОтчета);
	
	Если ЗаполнитьТолько3Раздел Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьТаблицуПрил9_2020(СтруктураПараметров, ДанныеОтчета);
	
	Если ДанныеКС.ТекОтчет = СтруктураПараметров.СтруктураРеквизитовФормы.мСохраненныйДок.Ссылка Тогда
		ДанныеКС.Вставить("ТипПлательщика1", 
			СокрЛП(ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1.Строки[0].Данные.П000010000101) = "1");
	КонецЕсли;
	
	Для Каждого Раздел Из ДанныеОтчета.ДанныеМногоуровневыхРазделов Цикл
		Если Раздел.Ключ = "Раздел3" Тогда
			Продолжить;
		КонецЕсли;
		
		КоличествоСтраниц = Раздел.Значение.Строки.Количество();
		Для Счетчик = 1 По КоличествоСтраниц Цикл
			СтруктураПолей.Вставить("Страница", Счетчик);
			ЗаполнитьТаблицуПоказателейИзЭлемента2020(Раздел.Значение.Строки[Счетчик - 1],  СтруктураПолей);
		КонецЦикла; 
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуРазд3_2020(СтруктураПараметров, ДанныеОтчета)
	
	Перем ЛимитСотрудников;
	Перем КэшКатегории321, КэшКода321, КэшСтавки321;
	Перем КэшКатегории322, КэшКода322, КэшСтавки322;
	
	Раздел310		= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел3.Строки;
	КоличествоР310	= Раздел310.Количество();
	
	Если СтруктураПараметров.Свойство("ЛимитСотрудников", ЛимитСотрудников) Тогда
		СтруктураПараметров.Вставить("ПриоритетПроизводительности", КоличествоР310 > ЛимитСотрудников);
	КонецЕсли;
	
	Для НомерСтраницы = 1 По КоличествоР310 Цикл
		
		// заполнение подраздела 3.1 раздела 3
		НоваяСтрока310 = ДанныеКС.ТаблицаПерсДанных310.Добавить();
		ДанныеСтраницы = Раздел310[НомерСтраницы - 1].Данные;
		НоваяСтрока310.Аннуляция	= ДанныеСтраницы.П000030001001;
		НоваяСтрока310.Снилс		= СокрЛП(ДанныеСтраницы.П000310003001);
		НоваяСтрока310.Фамилия		= СокрЛП(ДанныеСтраницы.П000310004001);
		НоваяСтрока310.Страница		= НомерСтраницы;
		НоваяСтрока310.Мес			= СтруктураПараметров.Мес;
		НоваяСтрока310.Вид			= СтруктураПараметров.Вид;
		НоваяСтрока310.Отчет		= СтруктураПараметров.Отчет;
		НоваяСтрока310.Ключ			= "" + НоваяСтрока310.Мес + НоваяСтрока310.Вид + НоваяСтрока310.Страница;
		
		// заполнение подраздела 3.2.1 раздела 3
		Раздел321		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00321М1.Строки;
		Количество321	= Раздел321.Количество();
		Для НомерСтроки	= 1 По Количество321 Цикл
			ДанныеСтраницы			= Раздел321[НомерСтроки - 1].Данные;
			НоваяСтрока321			= ДанныеКС.ТаблицаПерсДанных321.Добавить();
			НоваяСтрока321.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока321.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока321.Мес		= ?(ДанныеСтраницы.П00321М112001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00321М112001));
			НоваяСтрока321.МесСтр	= Строка(НоваяСтрока321.Мес);
			НоваяСтрока321.С130		= ДанныеСтраницы.П00321М113001;
			НоваяСтрока321.С140		= ДанныеСтраницы.П00321М114001;
			НоваяСтрока321.С150		= ДанныеСтраницы.П00321М115001;
			НоваяСтрока321.С160		= ДанныеСтраницы.П00321М116001;
			НоваяСтрока321.С170		= ДанныеСтраницы.П00321М117001;
			
			Если НоваяСтрока321.С130 = КэшКатегории321 Тогда
				НоваяСтрока321.Код		= КэшКода321;
				НоваяСтрока321.Ставка	= КэшСтавки321;
			Иначе
				КодКатегории			= ДанныеКС.Категории321.Найти(НоваяСтрока321.С130, "Категория");
				НоваяСтрока321.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки321.Найти(НоваяСтрока321.Код, "Код");
				НоваяСтрока321.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории321			= НоваяСтрока321.С130;
				КэшКода321				= НоваяСтрока321.Код;
				КэшСтавки321			= НоваяСтрока321.Ставка;
			КонецЕсли;
		КонецЦикла;
		
		// заполнение подраздела 3.2.2 раздела 3
		Раздел322		= Раздел310[НомерСтраницы - 1].ДанныеМногострочныхЧастей.П00322М1.Строки;
		Количество322	= Раздел322.Количество();
		Для НомерСтроки	= 1 По Количество322 Цикл
			ДанныеСтраницы			= Раздел322[НомерСтроки - 1].Данные;
			НоваяСтрока322			= ДанныеКС.ТаблицаПерсДанных322.Добавить();
			НоваяСтрока322.Ключ		= НоваяСтрока310.Ключ;
			НоваяСтрока322.СтрокаТЧ	= НомерСтроки;
			НоваяСтрока322.Мес		= ?(ДанныеСтраницы.П00322М118001 = "", 0, 
				СтруктураПараметров.Мес - 3 + Число(ДанныеСтраницы.П00322М118001));
			НоваяСтрока322.С190		= ДанныеСтраницы.П00322М119001;
			НоваяСтрока322.С200		= ДанныеСтраницы.П00322М120001;
			НоваяСтрока322.С210		= ДанныеСтраницы.П00322М121001;
			
			Если НоваяСтрока322.С190 = КэшКатегории322 Тогда
				НоваяСтрока322.Код		= КэшКода322;
				НоваяСтрока322.Ставка	= КэшСтавки322;
			Иначе
				КодКатегории 			= ДанныеКС.Категории322.Найти(НоваяСтрока322.С190, "Категория");
				НоваяСтрока322.Код		= ?(КодКатегории = Неопределено, "", КодКатегории.Код);
				Ставка					= ДанныеКС.Ставки322.Найти(НоваяСтрока322.Код, "Код");
				НоваяСтрока322.Ставка	= ?(Ставка = Неопределено, 0, Ставка.Ставка);
				КэшКатегории322			= НоваяСтрока322.С190;
				КэшКода322				= НоваяСтрока322.Код;
				КэшСтавки322			= НоваяСтрока322.Ставка;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПрил9_2020(СтруктураПараметров, ДанныеОтчета)
	
	Приложение900	= ДанныеОтчета.ДанныеМногоуровневыхРазделов.Раздел1Прил9.Строки;
	КоличествоП900	= Приложение900.Количество();
	Для НомерСтраницы = 1 По КоличествоП900 Цикл
		Для НомерГрафы = 2 По 4 Цикл
		
			НоваяСтрока900 = ДанныеКС.ТаблицаПриложения900.Добавить();
			ДанныеСтраницы = Приложение900[НомерСтраницы - 1].Данные;
			НоваяСтрока900.Отчет		= СтруктураПараметров.Отчет;
			НоваяСтрока900.Вид			= СтруктураПараметров.Вид;
			НоваяСтрока900.Квартал		= СтруктураПараметров.Мес;
			НоваяСтрока900.Мес			= СтруктураПараметров.Мес + НомерГрафы - 4;
			НоваяСтрока900.Страница		= НомерСтраницы;
			НоваяСтрока900.Графа		= "0" + НомерГрафы;
			НоваяСтрока900.Значение_	= ДанныеСтраницы["П0001900010" + НоваяСтрока900.Графа];
		
		КонецЦикла;
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьТаблицуПоказателейИзЭлемента2020(Элемент, СтруктураПараметров)
	
	Если Не Элемент.Данные = Неопределено Тогда
		Для каждого Показатель Из Элемент.Данные Цикл
			ЗаполнитьДанныеПоказателя2020(Показатель, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
	Если Не Элемент.ДанныеМногострочныхЧастей = Неопределено Тогда
		Для каждого МнЧасть Из Элемент.ДанныеМногострочныхЧастей Цикл
			КоличествоСтрок = МнЧасть.Значение.Строки.Количество();
			Для Счетчик = 1 По КоличествоСтрок Цикл
				СтруктураПараметров.Вставить("СтрокаТЧ", Счетчик);
				ЗаполнитьТаблицуПоказателейИзЭлемента2020(МнЧасть.Значение.Строки[Счетчик - 1], СтруктураПараметров);
			КонецЦикла; 
			СтруктураПараметров.Вставить("СтрокаТЧ", 0);
		КонецЦикла;	
	КонецЕсли;	
	
	Если Не Элемент.Строки = Неопределено Тогда
		Для каждого СтрокаДерева Из Элемент.Строки Цикл
			ЗаполнитьТаблицуПоказателейИзЭлемента2020(СтрокаДерева, СтруктураПараметров);
		КонецЦикла;	
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьДанныеПоказателя2020(Показатель, СтруктураПараметров)
	
	СтруктураПараметров.Вставить("Раздел"			, Лев(Показатель.Ключ, 6));
	СтруктураПараметров.Вставить("ТабЧасть"			, Сред(Показатель.Ключ, 7, 2));
	СтруктураПараметров.Вставить("Строка_"			, Сред(Показатель.Ключ, 9, 3));
	СтруктураПараметров.Вставить("Графа"			, Сред(Показатель.Ключ, 12, 2));
	СтруктураПараметров.Вставить("Значение_"		, Показатель.Значение);
	
	НоваяСтрока	= ДанныеКС.ТаблицаСводныхДанных.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, СтруктураПараметров);
	
КонецПроцедуры

&НаСервере
Процедура ПолучитьДанныеОтчетовПредыдущихПериодов2020()
	
	Перем СтруктураРеквизитов;
	Перем СтруктураРазделов;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация"			, ДанныеКС.Организация);
	Запрос.УстановитьПараметр("ГодОтчета"			, ДанныеКС.Год);
	Запрос.УстановитьПараметр("МесяцОтчета"			, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("НомерКорректировки"	, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	МЕСЯЦ(ДокументРО.ДатаОкончания) КАК Мес,
	|	ДокументРО.ДатаОкончания КАК ДатаОкончания,
	|	ДокументРО.Вид КАК Вид,
	|	ДокументРО.Ссылка КАК Отчет,
	|	ДокументРО.ВыбраннаяФорма КАК ИмяФормы
	|ИЗ
	|	Документ.РегламентированныйОтчет КАК ДокументРО
	|ГДЕ
	|	ДокументРО.ИсточникОтчета = ""РегламентированныйОтчетРасчетПоСтраховымВзносам""
	|	И ДокументРО.Организация = &Организация
	|	И ГОД(ДокументРО.ДатаОкончания) = &ГодОтчета
	|	И МЕСЯЦ(ДокументРО.ДатаОкончания) <= &МесяцОтчета
	|	И ВЫБОР
	|			КОГДА МЕСЯЦ(ДокументРО.ДатаОкончания) = &МесяцОтчета
	|				ТОГДА ДокументРО.Вид < &НомерКорректировки
	|			ИНАЧЕ ИСТИНА
	|		КОНЕЦ
	|	И НЕ ДокументРО.ПометкаУдаления
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ,
	|	Вид
	|ИТОГИ
	|	МАКСИМУМ(Вид)
	|ПО
	|	Мес";
	
	Результат			= Запрос.Выполнить();
	ВыборкаПериод		= Результат.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КоличествоЦиклов	= ДанныеКС.Мес / 3 - 1;
	
	Для Счетчик = 0 По КоличествоЦиклов Цикл
		
		Если ВыборкаПериод.НайтиСледующий(Новый Структура("Мес", ДанныеКС.Мес - Счетчик * 3)) Тогда
			Выборка = ВыборкаПериод.Выбрать();
			Пока Выборка.Следующий() Цикл
				
				СтруктураПараметров = Новый Структура("Отчет, Вид, Мес, ИмяФормы");
				ЗаполнитьЗначенияСвойств(СтруктураПараметров, Выборка);
				
				ОбъектОтчета(ИмяФормы).СформироватьСтруктуруРеквизитовФормы(Выборка.ИмяФормы	, СтруктураРеквизитов);
				СтруктураРеквизитов.мСохраненныйДок = Выборка.Отчет;
				ОбъектОтчета(ИмяФормы).ИнициализироватьМногострочныеЧасти(Выборка.ИмяФормы		, СтруктураРеквизитов);	
				ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыеРазделы(Выборка.ИмяФормы	, СтруктураРеквизитов, 
					СтруктураРазделов);
				СтруктураПараметров.Вставить("СтруктураРеквизитовФормы"	, СтруктураРеквизитов);
				СтруктураПараметров.Вставить("СтруктураМнРазделов"		, СтруктураРазделов);
				
				ЗаполнитьТолькоРаздел3 = Счетчик = 0 ИЛИ НЕ ВыборкаПериод.Вид = Выборка.Вид;
				ЗаполнитьТаблицыРазделов2020(СтруктураПараметров			, ЗаполнитьТолькоРаздел3);
			КонецЦикла;
		КонецЕсли;
			
		ВыборкаПериод.Сбросить();
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьВременныеТаблицы2020()
	
	ВремТаблицы		= Новый МенеджерВременныхТаблиц;
	СхемаЗапроса	= Новый СхемаЗапроса;
	
	ИменаТаблиц		= Новый Структура;
	ИменаТаблиц.Вставить("ТаблицаСводныхДанных"	, "Т_100");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных310"	, "Т_310_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных321"	, "Т_321_Все");
	ИменаТаблиц.Вставить("ТаблицаПерсДанных322"	, "Т_322_Все");
	ИменаТаблиц.Вставить("ТаблицаПриложения900"	, "Т_900");
	
	// Формирование временных таблиц с данными разделов
	Для каждого Таблица Из ИменаТаблиц Цикл
		Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
		Оператор	= Пакет.Операторы[0];
		ОписаниеВТ	= Оператор.Источники.Добавить(Тип("ОписаниеВременнойТаблицыСхемыЗапроса"), "&" + Таблица.Значение);
		Пакет.ТаблицаДляПомещения = "В" + Таблица.Значение;
		
		Для каждого Колонка Из ДанныеКС[Таблица.Ключ].Колонки Цикл
			ОписаниеВТ.Источник.ДоступныеПоля.Добавить(Колонка.Имя);
		КонецЦикла;
		
		Для каждого ДоступноеПоле Из ОписаниеВТ.Источник.ДоступныеПоля Цикл
			Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
		КонецЦикла;
	КонецЦикла;
	
	Пакет100 = СхемаЗапроса.ПакетЗапросов.Получить(1);
	Пакет100.Индекс.Добавить("Раздел");
	Пакет100.Индекс.Добавить("Строка_");
	
	// Удаление страниц с повторяющимися и аннулированными СНИЛС из Раздела 3
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310_Отбор";
	Оператор	= Пакет.Операторы[0];
	ВТ_Отбора	= Оператор.Источники.Добавить("ВТ_310_Все");
	Оператор.ВыбираемыеПоля.Добавить("Мес", 0);
	Оператор.ВыбираемыеПоля.Добавить("Снилс", 1);
	Оператор.ВыбираемыеПоля.Добавить("МАКСИМУМ(Вид)", 2);
	Пакет.Колонки[2].Псевдоним	= "Вид";
	Оператор.Группировка.Добавить("Мес");
	Оператор.Группировка.Добавить("Снилс");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения	= "ВТ_310";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_310_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310_Отбор");
	ВТ_Раздела.Соединения.Добавить("ВТ_310_Отбор", "ВТ_310_Все.Снилс = ВТ_310_Отбор.Снилс 
		|И ВТ_310_Все.Мес = ВТ_310_Отбор.Мес И ВТ_310_Все.Вид = ВТ_310_Отбор.Вид");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Оператор.Отбор.Добавить("НЕ ВТ_310_Все.Аннуляция = ""1""");
	Пакет.Индекс.Добавить("Ключ");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_321";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_321_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_321_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	Пакет		= СхемаЗапроса.ПакетЗапросов.Добавить();
	Пакет.ТаблицаДляПомещения = "ВТ_322";
	Оператор	= Пакет.Операторы[0];
	ВТ_Раздела	= Оператор.Источники.Добавить("ВТ_322_Все");
	Для каждого ДоступноеПоле Из ВТ_Раздела.Источник.ДоступныеПоля Цикл
		Оператор.ВыбираемыеПоля.Добавить(ДоступноеПоле);
	КонецЦикла;
	ВТ_Отбор	= Оператор.Источники.Добавить("ВТ_310");
	ВТ_Раздела.Соединения.Добавить("ВТ_310", "ВТ_322_Все.Ключ = ВТ_310.Ключ");
	ВТ_Раздела.Соединения[0].ТипСоединения = ТипСоединенияСхемыЗапроса.Внутреннее;
	Пакет.Индекс.Добавить("Ключ");
	Пакет.Индекс.Добавить("Мес");
	
	// Удаление отработавших таблиц отборов
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_310_Отбор";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_321_Все";
	ЗапросУничтоженияВТ = СхемаЗапроса.ПакетЗапросов.Добавить(Тип("ЗапросУничтоженияТаблицыСхемыЗапроса"));
	ЗапросУничтоженияВТ.ИмяТаблицы = "ВТ_322_Все";
	
	// Выполнение запроса
	Запрос			= Новый Запрос;
	Запрос.Текст	= СхемаЗапроса.ПолучитьТекстЗапроса();
	Запрос.МенеджерВременныхТаблиц = ВремТаблицы;
	
	Запрос.УстановитьПараметр("Т_100"		, ДанныеКС.ТаблицаСводныхДанных);
	Запрос.УстановитьПараметр("Т_310_Все"	, ДанныеКС.ТаблицаПерсДанных310);
	Запрос.УстановитьПараметр("Т_321_Все"	, ДанныеКС.ТаблицаПерсДанных321);
	Запрос.УстановитьПараметр("Т_322_Все"	, ДанныеКС.ТаблицаПерсДанных322);
	Запрос.УстановитьПараметр("Т_900"		, ДанныеКС.ТаблицаПриложения900);
	
	Запрос.Выполнить();
	
	ДанныеКС.Вставить("ВременныеТаблицы"		, ВремТаблицы);
	ДанныеКС.ТаблицаСводныхДанных.Очистить();
	ДанныеКС.ТаблицаПерсДанных310.Очистить();
	ДанныеКС.ТаблицаПерсДанных321.Очистить();
	ДанныеКС.ТаблицаПерсДанных322.Очистить();

	ДанныеКС.Вставить("Р01111Заполнен"		, РазделЗаполнен2020("П01111"));
	ДанныеКС.Вставить("Р01112Заполнен"		, РазделЗаполнен2020("П01112"));
	ДанныеКС.Вставить("Р11131Заполнен"		, РазделЗаполнен2020("П11131"));
	ДанныеКС.Вставить("Р11132Заполнен"		, РазделЗаполнен2020("П11132"));
	ДанныеКС.Вставить("Р00111Заполнен"		, РазделЗаполнен2020("П00111"));
	ДанныеКС.Вставить("Р00012Заполнен"		, РазделЗаполнен2020("П00012"));
	ДанныеКС.Вставить("Р00013Заполнен"		, РазделЗаполнен2020("П00013"));
	ДанныеКС.Вставить("Р00014Заполнен"		, РазделЗаполнен2020("П00014"));
	ДанныеКС.Вставить("Р00015Заполнен"		, РазделЗаполнен2020("П00015"));
	ДанныеКС.Вставить("Р00016Заполнен"		, РазделЗаполнен2020("П00016"));
	ДанныеКС.Вставить("Р00017Заполнен"		, РазделЗаполнен2020("П00017"));
	ДанныеКС.Вставить("Р00018Заполнен"		, РазделЗаполнен2020("П00018"));
	ДанныеКС.Вставить("Р00019Заполнен"		, РазделЗаполнен2020("П00019"));
	ДанныеКС.Вставить("Р00002Заполнен"		, РазделЗаполнен2020("П00002"));
	ДанныеКС.Вставить("Р00021Заполнен"		, РазделЗаполнен2020("П00021"));
	
КонецПроцедуры

#КонецОбласти

#Область КС_Сервис

&НаСервере
Процедура ЗарегистрироватьФормулу2020(Знач Настройки);

	СчетчикФормулДляРасшифровок
					= СчетчикФормулДляРасшифровок + 1;
	НовСтр			= СписокРасшифровкиФормулы.Добавить();
	НовСтр.ТекстовоеПредставлениеФормулы
					= Настройки.ОписаниеКС;
	НовСтр.Номер	= СчетчикФормулДляРасшифровок;
	
КонецПроцедуры

&НаСервере
Процедура ВнестиПоказательВРасшифровку2020(Источник, Показатель)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	
	НоваяСтрока.ИмяПоказателя			= ?(Показатель.Многострочный, 
		Показатель.ИмяПоказателя + XMLСтрока(Источник.НомерСтроки), Показатель.ИмяПоказателя);
	НоваяСтрока.ПредставлениеПоказателя = ?(ЗначениеЗаполнено(Показатель.Дополнение), 
		Показатель.Представление + ", (" + Показатель.Дополнение + ")", Показатель.Представление);
	НоваяСтрока.ИмяСтраницы				= Показатель.ИмяСтраницы;
	
	НоваяСтрока.СсылкаНаДокументРО		= ?(ЗначениеЗаполнено(Источник.Отчет), 
		Источник.Отчет, ДанныеКС.ТекОтчет);
	НоваяСтрока.Страница				= XMLСтрока(Источник.Страница);
	НоваяСтрока.ЗначениеПоказателя		= Источник[Показатель.ИмяВИсточнике];
	
КонецПроцедуры

&НаСервере
Процедура ВнестиПоказательБезРасшифровки2020(Представление, ЗначениеПоказателя)
	
	НоваяСтрока	= СписокРасшифровкиПоказателей.Добавить();
	НоваяСтрока.Номер					= СчетчикФормулДляРасшифровок;
	НоваяСтрока.ПредставлениеПоказателя = Представление;
	НоваяСтрока.ЗначениеПоказателя		= ЗначениеПоказателя;
		
КонецПроцедуры

&НаСервере
Процедура ДополнитьСтруктуруОшибок2020(Настройки)
	
	Если Настройки.ЭтоОшибка Тогда
		Настройки.КоличествоНайденныхОшибок = Настройки.КоличествоНайденныхОшибок + 1;
	Иначе
		Настройки.КоличествоНайденныхБезОшибок = Настройки.КоличествоНайденныхБезОшибок + 1;
	КонецЕсли;
	
	Счетчик		= XMLСтрока(Настройки.КоличествоНайденныхОшибок + Настройки.КоличествоНайденныхБезОшибок);
	ОписаниеКС	= СформироватьОписаниеКС2020(Настройки, "ДопСведенияВОписаниеКС");
	ОписаниеКС	= ?(ПустаяСтрока(Настройки.ТекстФормулы), "", Настройки.ТекстФормулы + Символы.ПС) + ОписаниеКС;
	
	Настройки.СтруктураОшибок.Вставить("ТекстовоеПредставлениеФормулы" + Счетчик, ОписаниеКС);
	Настройки.СтруктураОшибок.Вставить("Расшифровка"	+ Счетчик, Настройки.Расшифровка);
	Настройки.СтруктураОшибок.Вставить("ЭтоОшибка"		+ Счетчик, Настройки.ЭтоОшибка);
	Настройки.СтруктураОшибок.Вставить("Нарушение"		+ Счетчик, Настройки.Нарушение);
	Настройки.СтруктураОшибок.Вставить("Описание"		+ Счетчик, Настройки.ОписаниеОшибки);
	Настройки.СтруктураОшибок.Вставить("Комментарий"	+ Счетчик, Настройки.Комментарий);
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		ИндексРаздела		= Лев(Элемент.Значение, 6);
		ПодстрокаРаздела	= ДанныеКС.ПредставлениеРазделов[ИндексРаздела];
		ПодстрокаСтроки		= Сред(Элемент.Значение, 9, 3);
		ПодстрокаГрафы		= Сред(Элемент.Значение, 12, 2);
		Представление		= "Графа " + ПодстрокаГрафы + " строка " + ПодстрокаСтроки + " " + ПодстрокаРаздела;
		Многострочный		= СтрДлина(Элемент.Значение) = 14;
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, Представление);
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, ДанныеКС.РазделыПоказателей[ИндексРаздела]);
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет");
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Многострочный);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей)
	
	Перем ИндексРаздела;
	
	ПредставленияПолей = Новый Соответствие;
	ПредставленияПолей.Вставить("ОтчетГод"		, "Титульный лист. Отчетный год");
	ПредставленияПолей.Вставить("ДатаПодписи"	, "Титульный лист. Дата подписи");
	
	Показатели = ?(Показатели = Неопределено, Новый Структура, Показатели);
	
	Для каждого Элемент Из ИменаПоказателей Цикл
		Показатели.Вставить(Элемент.Ключ, Новый Структура());
		
		// постоянные данные
		Показатели[Элемент.Ключ].Вставить("ИмяПоказателя"	, Элемент.Значение);
		Показатели[Элемент.Ключ].Вставить("Представление"	, ПредставленияПолей.Получить(Элемент.Значение));
		Показатели[Элемент.Ключ].Вставить("ИмяСтраницы"		, "Титульный");
		
		// переменные данные
		Показатели[Элемент.Ключ].Вставить("Отчет"			, Неопределено);
		Показатели[Элемент.Ключ].Вставить("Страница"		, "");
		Показатели[Элемент.Ключ].Вставить("Значение");
		
		// сервисные данные
		Показатели[Элемент.Ключ].Вставить("Многострочный"	, Ложь);
		Показатели[Элемент.Ключ].Вставить("ИмяВИсточнике"	, Элемент.Ключ);
		Показатели[Элемент.Ключ].Вставить("Дополнение"		, "");
	КонецЦикла;
	
КонецПроцедуры

&НаСервере
Процедура ДополнитьНастройки2020(Настройки);
	
	Если НЕ Настройки.Свойство("СчетчикИзменений") Тогда
		
		Настройки.ОписаниеКС = Настройки.ОписаниеКС + НСтр("ru = ', когда Тип плательщика в стр.001 Раздела 1 = 1';
															|en = ', когда Тип плательщика в стр.001 Раздела 1 = 1'");
	
	Иначе
	
		Настройки.ЭтоОшибка = Настройки.ЭтоОшибка И ДанныеКС.ТипПлательщика1;
	
	КонецЕсли;

КонецПроцедуры

&НаСервере
Функция СформироватьОписаниеКС2020(Знач Настройки, ЗначениеСвойства)
	
	Если Настройки[ЗначениеСвойства] Тогда
		Если ЗначениеЗаполнено(Настройки.ДопСведения) Тогда
				
			Возврат Настройки.ОписаниеКС + " (" + Настройки.ДопСведения + ")"; 
			
		КонецЕсли; 
	КонецЕсли;
	
	Возврат Настройки.ОписаниеКС;
	
КонецФункции

&НаСервере
Функция ОбработатьНастройки2020(Знач Настройки = Неопределено, 
	Знач ИзменяемыеСвойства 	= Неопределено, 
	Знач СтруктураРезультата 	= Неопределено)
	
	Если Настройки = Неопределено Тогда
		
		Настройки = Новый Структура;
		Настройки.Вставить("ТекстФормулы"			, (НСтр("ru=''")));
		Настройки.Вставить("Нарушение"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеКС"				, (НСтр("ru=''")));
		Настройки.Вставить("ОписаниеОшибки"			, (НСтр("ru=''")));
		Настройки.Вставить("Расшифровка"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонРасшифровки"		, (НСтр("ru=''")));
		Настройки.Вставить("ДопСведения"			, (НСтр("ru=''")));
		Настройки.Вставить("ШаблонДопСведений"		, (НСтр("ru=''")));
		Настройки.Вставить("ЭтоОшибка"				, Ложь);
		Настройки.Вставить("СтруктураОшибок");
		Настройки.Вставить("КоличествоНайденныхОшибок");
		Настройки.Вставить("КоличествоНайденныхБезОшибок");
		Настройки.Вставить("ДопСведенияВОписаниеКС"	, Ложь);
		Настройки.Вставить("ПриоритетПроизводительности");
		Настройки.Вставить("ЛимитРасшифровки");
		Настройки.Вставить("Комментарий");
		Настройки.Вставить("СчетчикИзменений"		, 0);
		
		Если Документирование Тогда
			
			Настройки.Вставить("НомерКС");
			Настройки.Вставить("Раздел");
			Настройки.Вставить("Условие");
			
		КонецЕсли; 
	
	КонецЕсли;
	
	Если Не ИзменяемыеСвойства = Неопределено Тогда
		Для каждого ЭлементКоллекции Из ИзменяемыеСвойства Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Если Документирование Тогда
		СтрокаОписания = ТаблицаОписаний.Добавить();
		ЗаполнитьЗначенияСвойств(СтрокаОписания, Настройки);
		СтрокаОписания.ОписаниеКС	= ?(ПустаяСтрока(Настройки.ТекстФормулы), "", Настройки.ТекстФормулы + Символы.ПС) 
			+ Настройки.ОписаниеКС;
		Возврат Настройки;
	КонецЕсли;
	
	Если Не СтруктураРезультата = Неопределено Тогда
		Для каждого ЭлементКоллекции Из СтруктураРезультата Цикл
			Если Настройки.Свойство(ЭлементКоллекции.Ключ) Тогда
				Настройки.Вставить(ЭлементКоллекции.Ключ, ЭлементКоллекции.Значение);
			КонецЕсли; 
		КонецЦикла;
	КонецЕсли;
	
	Возврат Настройки;
	
КонецФункции

&НаСервере
Функция ОбработатьРезультат2020(Знач Настройки = Неопределено, Знач СтруктураРезультата = Неопределено,
	Создать = Неопределено);
		
		ЗаполнитьЗначенияСвойств(СтруктураРезультата, Настройки,
			"КоличествоНайденныхОшибок, КоличествоНайденныхБезОшибок");
	
	Возврат СтруктураРезультата;
	
КонецФункции

&НаСервере
Функция РазделЗаполнен2020(Раздел)
	
	Результат = Ложь;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &Раздел
	|	И НЕ ВТ_100.Значение_ = 0
	|	И НЕ ВТ_100.Значение_ = ДАТАВРЕМЯ(1,1,1)
	|	И НЕ ВТ_100.Значение_ = """"
	|	И ВТ_100.Мес = &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат Результат;

КонецФункции // ()

&НаСервере
Функция ЭтоПострадавшаяОтрасль2020()
	
	Результат = Истина;
	
	ОтраслевойРаздел = СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0];
	
	Если НЕ ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		
		Результат = НЕ ДанныеКС.ПострадавшиеОтрасли.Найти(ОтраслевойРаздел) = Неопределено;
	
	КонецЕсли; 
	
	Возврат Результат;

КонецФункции // ()

#КонецОбласти

#Область КС_Проверки

#Область Проверки_Раздела_3

Процедура ПроверитьКС2020_0_1а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1а';
													|en = '0.1а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за 1 квартал';
													|en = 'Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1а)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За 1 квартал отчетного периода: стр.170 (1 месяц ОП) подр. 3.2.1 Р.3 = стр.150 (1 месяц ОП) ';
			|en = 'За 1 квартал отчетного периода: стр.170 (1 месяц ОП) подр. 3.2.1 Р.3 = стр.150 (1 месяц ОП) '") +
		НСтр("ru = 'х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов';
			|en = 'х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 Итог [%5]%6';
													|en = '%1 = %2 х %3 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1б';
													|en = '0.1б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за 1 квартал';
													|en = 'Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1б)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За 1 квартал отчетного периода: стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) ';
			|en = 'За 1 квартал отчетного периода: стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru = '+ стр.150 (2 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых ';
			|en = '+ стр.150 (2 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых '") +
		НСтр("ru = 'взносов) - стр.170 (1 месяц ОП)';
			|en = 'взносов) - стр.170 (1 месяц ОП)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2) х %3%4 Итог [%5]%6';
													|en = '%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1в';
													|en = '0.1в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за 1 квартал';
													|en = 'Отчет за 1 квартал'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1в)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За 1 квартал отчетного периода: стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) ';
			|en = 'За 1 квартал отчетного периода: стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = ((стр.150 (1 месяц ОП) '") +
		НСтр("ru = '+ стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. ';
			|en = '+ стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП)) х соответствующий значению стр.130 подр.3.2.1. '") +
		НСтр("ru = 'Р.3 тариф страховых взносов) - (стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))';
			|en = 'Р.3 тариф страховых взносов) - (стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2) х %3%4 Итог [%5]%6';
													|en = '%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1г';
													|en = '0.1г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за полугодие, 9 месяцев, год';
													|en = 'Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1г)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (1 месяц ОП) подр.3.2.1 Р.3 = ';
			|en = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (1 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru = '(стр.150 ПОП (с начала расчетного периода) + стр.150 (1 месяц ОП)) х соответствующий значению ';
			|en = '(стр.150 ПОП (с начала расчетного периода) + стр.150 (1 месяц ОП)) х соответствующий значению '") +
		НСтр("ru = 'стр.130 подр.3.2.1. Р.3 тариф страховых взносов)) -  стр.170 ПОП (с начала расчетного периода)';
			|en = 'стр.130 подр.3.2.1. Р.3 тариф страховых взносов)) -  стр.170 ПОП (с начала расчетного периода)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2) х %3%4 Итог [%5]%6';
													|en = '%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1д';
													|en = '0.1д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за полугодие, 9 месяцев, год';
													|en = 'Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1д)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = ';
			|en = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (2 месяц ОП) подр.3.2.1 Р.3 = '") +
		НСтр("ru = '(стр.150 ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП)) ';
			|en = '(стр.150 ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП)) '") +
		НСтр("ru = 'х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП ';
			|en = 'х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru = '(с начала расчетного периода) + стр.170 (1 месяц ОП))';
			|en = '(с начала расчетного периода) + стр.170 (1 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2) х %3%4 Итог [%5]%6';
													|en = '%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.1е';
													|en = '0.1е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отчет за полугодие, 9 месяцев, год';
													|en = 'Отчет за полугодие, 9 месяцев, год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1е)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.1е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = (стр.150 ';
			|en = 'За последующие отчетные периоды (2, 3, 4 кварталы): стр.170 (3 месяц ОП) подр.3.2.1 Р.3 = (стр.150 '") +
		НСтр("ru = 'ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц ';
			|en = 'ПОП (с начала расчетного периода) + (стр.150 (1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц '") +
		НСтр("ru = 'ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП ';
			|en = 'ОП)) х соответствующий значению стр.130 подр.3.2.1. Р.3 тариф страховых взносов"")) – (стр.170 ПОП '") +
		НСтр("ru = '(с начала расчетного периода) + стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))';
			|en = '(с начала расчетного периода) + стр.170 (1 месяц ОП) + стр.170 (2 месяц ОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2) х %3%4 Итог [%5]%6';
													|en = '%1 = (%2) х %3%4 Итог [%5]%6'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.Мес = 3 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Настройки.Вставить("Погрешность", Истина);
	Настройки.ОписаниеКС = ?(Настройки.Погрешность, 
		Настройки.ОписаниеКС + НСтр("ru = ', с учетом погрешности 1 коп.';
									|en = ', с учетом погрешности 1 коп.'"), Настройки.ОписаниеКС);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_311.Снилс КАК Снилс,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_311 КАК ВТ_311
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_311.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес = &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_321.Код КАК Код,
	|	ВТ_321.С130 КАК С130,
	|	ВТ_321.Ставка КАК Ставка,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С150 КАК С150,
	|	ВТ_321.С170 КАК С170
	|ПОМЕСТИТЬ ВТ_313
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.Мес <= &ТекущийМесяц
	|	И НЕ ВТ_321.С150 + ВТ_321.С170 = 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_313.Фамилия + ВТ_313.Снилс + ВТ_313.Код КАК КлючСортировки,
	|	ВТ_313.Снилс КАК Снилс,
	|	ВТ_313.Фамилия КАК Фамилия,
	|	ВТ_313.Отчет КАК Отчет,
	|	ВТ_313.Страница КАК Страница,
	|	ВТ_313.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_313.Код КАК КодТарифа,
	|	ВТ_313.С130 КАК Категория,
	|	ВТ_313.Ставка КАК Ставка,
	|	ВТ_313.Мес КАК Мес,
	|	ВТ_313.С150 КАК База,
	|	ВТ_313.С170 КАК Взнос,
	|	ВТ_312.С170 КАК ТекущийВзнос
	|ИЗ
	|	ВТ_313 КАК ВТ_313
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО ВТ_313.Снилс = ВТ_312.Снилс
	|			И ВТ_313.С130 = ВТ_312.С130
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	МИНИМУМ(Снилс),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Отчет),
	|	МИНИМУМ(Страница),
	|	МИНИМУМ(Ставка),
	|	СУММА(База),
	|	СУММА(Взнос),
	|	МИНИМУМ(ТекущийВзнос)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_313";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаФ.Следующий() Цикл
		
		Погрешность	= 0.01;
		СуммаВзносовПрошлыхМесяцев = ВыборкаФ.Взнос - ВыборкаФ.ТекущийВзнос;
		Если Настройки.Погрешность Тогда
			РасчетнаяСумма		= ВыборкаФ.База * ВыборкаФ.Ставка / 100 - СуммаВзносовПрошлыхМесяцев;
			РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
			РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
			Настройки.ЭтоОшибка	= ВыборкаФ.ТекущийВзнос < РасчетнаяСуммаМин ИЛИ ВыборкаФ.ТекущийВзнос > РасчетнаяСуммаМак;
		Иначе
			РасчетнаяСумма		= Окр(ВыборкаФ.База * ВыборкаФ.Ставка / 100, 2) - СуммаВзносовПрошлыхМесяцев;
			Настройки.ЭтоОшибка = НЕ ВыборкаФ.ТекущийВзнос = РасчетнаяСумма;
		КонецЕсли;
		
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		С170ПСтр	= "";
		С150ПСтр	= "";
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
	
			С150ПСтр = С150ПСтр + Выборка.База + " + ";
			Если НЕ Выборка.Мес = Настройки.НомерМесяца Тогда
				С170ПСтр = С170ПСтр + " - " + Выборка.Взнос;
			КонецЕсли;
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", ставка " 
				+ Выборка.Ставка;
			Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.ТекущийВзнос, 
			Лев(С150ПСтр, СтрДлина(С150ПСтр) - 3), ВыборкаФ.Ставка, ?(Выборка.Количество() > 1, С170ПСтр, ""), 
			РасчетнаяСумма, ?(Настройки.Погрешность," (± " + Погрешность + " )",""));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.2а';
													|en = '0.2а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2а)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.061 подр.1.1 прил.1 (1 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению ';
			|en = 'Гр.2 стр.061 подр.1.1 прил.1 (1 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (1 месяц ОП) подр.3.2.1 Р.3';
			|en = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.2б';
													|en = '0.2б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2б)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.061 подр.1.1 прил.1 (2 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению ';
			|en = 'Гр.3 стр.061 подр.1.1 прил.1 (2 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (2 месяц ОП) подр.3.2.1 Р.3';
			|en = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.2в';
													|en = '0.2в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2в)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.2в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.061 подр.1.1 прил.1 (3 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению ';
			|en = 'Гр.4 стр.061 подр.1.1 прил.1 (3 месяц ОП) по значению поля 001 прил.1 Р.1 соответствующему значению '") +
		НСтр("ru = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (3 месяц ОП) подр.3.2.1 Р.3';
			|en = 'стр.130 подр.3.2.1 Р.3 = ∑ стр.170 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100061" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "061");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_ КАК КодТарифа,
	|	ВЫРАЗИТЬ(ТПоказателя.Значение_ КАК ЧИСЛО) КАК ПоказательР1,
	|	ТПоказателя.Отчет КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|		ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Раздел = &РазделПоказателя
	|	И ТПоказателя.Строка_ = &СтрокаПоказателя
	|	И ТПоказателя.Графа = &НомерГрафы
	|	И ТПоказателя.Мес = &ОтчетныйМесяц
	|	И ТТарифа.Раздел = &РазделТарифа
	|	И ТТарифа.Строка_ = &СтрокаТарифа
	|	И ТТарифа.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С170 КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И (НЕ ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
							+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР1, Р3Сум, 
			ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.3';
													|en = '0.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 02(а,б,в)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 02(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению';
			|en = '(Гр.2 + гр.3 + гр.4) стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению'") +
		НСтр("ru = ' стр.130 подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) подр.3.2.1 Р.3';
			|en = ' стр.130 подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.4';
													|en = '0.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.4)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 ';
			|en = 'Гр.1 стр.061 подр.1.1 прил.1 по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 '") +
		НСтр("ru = 'подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) + стр.170 ПОП) ';
			|en = 'подр.3.2.1 Р.3 = ∑ (стр.170 (1 месяц) + стр.170 (2 месяц) + стр.170 (3 месяц) + стр.170 ПОП) '") +
		НСтр("ru = 'подр.3.2.1 Р.3';
			|en = 'подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.5а';
													|en = '0.5а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5а)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.210 (1 месяц ОП) подр.3.2.2 Р.3 = стр.200 (1 месяц ОП) х соответствующий значению ';
			|en = 'Стр.210 (1 месяц ОП) подр.3.2.2 Р.3 = стр.200 (1 месяц ОП) х соответствующий значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.';
			|en = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.5б';
													|en = '0.5б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5б)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.210 (2 месяц ОП) подр.3.2.2 Р.3 = стр.200 (2 месяц ОП) х соответствующий значению ';
			|en = 'Стр.210 (2 месяц ОП) подр.3.2.2 Р.3 = стр.200 (2 месяц ОП) х соответствующий значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.';
			|en = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.5в';
													|en = '0.5в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5в)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 0.5в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.210 (3 месяц ОП) подр.3.2.2 Р.3 = стр.200 (3 месяц ОП) х соответствующий значению ';
			|en = 'Стр.210 (3 месяц ОП) подр.3.2.2 Р.3 = стр.200 (3 месяц ОП) х соответствующий значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.';
			|en = 'стр.190 подр.3.2.2 Р.3 тариф страховых взносов, с учетом погрешности в 0,5 коп.'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_5_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_5_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("База"	, "П00322М120001_");
	ИменаПоказателей.Вставить("Взнос"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_322.С190 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Ставка	КАК Ставка,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК База,
	|	ВТ_322.С210		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С200 + ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки";
	
	РезультатЗапроса	= Запрос.Выполнить();
	Выборка				= РезультатЗапроса.Выбрать();
	Погрешность			= 0.005;
	
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма		= Выборка.База * Выборка.Ставка / 100;
		РасчетнаяСуммаМин	= Окр(РасчетнаяСумма - Погрешность, 2);
		РасчетнаяСуммаМак	= Окр(РасчетнаяСумма + Погрешность, 2);
		Настройки.ЭтоОшибка	= Выборка.Взнос < РасчетнаяСуммаМин ИЛИ Выборка.Взнос > РасчетнаяСуммаМак;
		ДополнитьНастройки2020(Настройки);
			
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, код " + Выборка.Категория + ", ставка " 
			+ Выборка.Ставка;
		Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц";
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
		
		Настройки.Расшифровка = "" + Выборка.Взнос + " = " + Выборка.База + " х " + Выборка.Ставка 
			+ " / 100 Итог [" + РасчетнаяСумма + "]  (± " + Погрешность + " )";
		ДополнитьСтруктуруОшибок2020(Настройки);
	
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6а';
													|en = '0.6а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6а)';
													|en = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.050 подр. 1.3.1 (1 месяц ОП) по значению поля 001 соответствующему значению ';
			|en = 'Гр.2 стр.050 подр. 1.3.1 (1 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6б';
													|en = '0.6б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6б)';
													|en = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.050 подр. 1.3.1 (2 месяц ОП) по значению поля 001 соответствующему значению ';
			|en = 'Гр.3 стр.050 подр. 1.3.1 (2 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6в';
													|en = '0.6в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6в)';
													|en = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.6в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.050 подр. 1.3.1 (3 месяц ОП) по значению поля 001 соответствующему значению ';
			|en = 'Гр.4 стр.050 подр. 1.3.1 (3 месяц ОП) по значению поля 001 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6г';
													|en = '0.6г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6г)';
													|en = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.050 подр. 1.3.2 (1 месяц ОП) по значению поля 002 соответствующему значению ';
			|en = 'Гр.2 стр.050 подр. 1.3.2 (1 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6д';
													|en = '0.6д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6д)';
													|en = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.050 подр. 1.3.2 (2 месяц ОП) по значению поля 002 соответствующему значению ';
			|en = 'Гр.3 стр.050 подр. 1.3.2 (2 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑ стр.210 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.6е';
													|en = '0.6е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6е)';
													|en = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.6е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.050 подр. 1.3.2 (3 месяц ОП) по значению поля 002 соответствующему значению ';
			|en = 'Гр.4 стр.050 подр. 1.3.2 (3 месяц ОП) по значению поля 002 соответствующему значению '") +
		НСтр("ru = 'стр.190 подр.3.2.2 Р.3 = ∑  стр.210 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'стр.190 подр.3.2.2 Р.3 = ∑  стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_6_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.Раздел + "М1050" + Настройки.НомерГрафы + "_");
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М121001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "050");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р3Сум	= 0;
		Счетчик = 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р3Сум = ВыборкаР1.ПоказательР1 И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
						Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
							+ ", " + Выборка.Фамилия;
						ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
						Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР1 = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР1.ПоказательР1);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_7а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.7а';
													|en = '0.7а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 06(а,б,в)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 06(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.7а)';
													|en = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.7а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.1 по значению поля 001 соответствующему значению стр.190 ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.1 по значению поля 001 соответствующему значению стр.190 '") +
		НСтр("ru = 'подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_7б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.7б';
													|en = '0.7б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 06(г,д,е)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 06(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.7б)';
													|en = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.7б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.2 по значению поля 002 соответствующему значению стр.190 ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.050 подр. 1.3.2 по значению поля 002 соответствующему значению стр.190 '") +
		НСтр("ru = 'подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'подр.3.2.2 Р.3 = ∑ стр.210 (1 месяц ОП) + стр.210 (2 месяц ОП) + стр.210 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_8а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.8а';
													|en = '0.8а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8а)';
													|en = 'Проверка подраздела 1.3.1 к Разделу 1 (КС 0.8а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.050 подр. 1.3.1  по значению поля 001 соответствующему значению стр.190 подр.3.2.2 Р.3 ';
			|en = 'Гр.1 стр.050 подр. 1.3.1  по значению поля 001 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru = '= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3';
			|en = '= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_8б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.8б';
													|en = '0.8б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8б)';
													|en = 'Проверка подраздела 1.3.2 к Разделу 1 (КС 0.8б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.050 подр. 1.3.2  по значению поля 002 соответствующему значению стр.190 подр.3.2.2 Р.3 ';
			|en = 'Гр.1 стр.050 подр. 1.3.2  по значению поля 002 соответствующему значению стр.190 подр.3.2.2 Р.3 '") +
		НСтр("ru = '= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3';
			|en = '= ∑ (стр.210 (1 месяц) + стр.210 (2 месяц) + стр.210 (3 месяц) + стр.210 ПОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_6_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_9а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.9а';
													|en = '0.9а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = '2020-й год';
													|en = '2020-й год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 3 (КС 0.9а)';
													|en = 'Проверка Раздела 3 (КС 0.9а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База для начисления страховых взносов за каждый месяц (∑ стр.150 подр.3.2.1 Р.3) по всем ';
			|en = 'База для начисления страховых взносов за каждый месяц (∑ стр.150 подр.3.2.1 Р.3) по всем '") +
		НСтр("ru = 'используемым тарифам с начала расчетного периода (за 2020 год) <= 1 292 000';
			|en = 'используемым тарифам с начала расчетного периода (за 2020 год) <= 1 292 000'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= 1 292 000';
													|en = '%1 <= 1 292 000'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 1292000);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_9_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_9_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(База),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка = ВыборкаФ.База > Настройки.ПредельнаяВеличина;
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.База.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория + ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаФ.База);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_10а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.10а';
													|en = '0.10а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = '2020-й год';
													|en = '2020-й год'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 3 (КС 0.10а)';
													|en = 'Проверка Раздела 3 (КС 0.10а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов (стр.170 подр.3.2.1 Р.3 / соответствующий значению стр.130 подр.3.2.1 Р.3 ';
			|en = 'Сумма страховых взносов (стр.170 подр.3.2.1 Р.3 / соответствующий значению стр.130 подр.3.2.1 Р.3 '") +
		НСтр("ru = 'тариф страховых взносов х 22%) с начала расчетного периода (за 2020 год) должна быть меньше или ';
			|en = 'тариф страховых взносов х 22%) с начала расчетного периода (за 2020 год) должна быть меньше или '") +
		НСтр("ru = 'равна 284 240, с учетом погрешности в 1 коп. на каждый применяемый тариф';
			|en = 'равна 284 240, с учетом погрешности в 1 коп. на каждый применяемый тариф'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] <= 284 240 + %3';
													|en = '%1 Итог [%2] <= 284 240 + %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Год = 2020 Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПредельнаяВеличина", 284240);
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru = '(%1 / %2 х 22)';
														|en = '(%1 / %2 х 22)'"));
	ПроверитьКС2020_0_10_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_10_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Взнос"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Ставка	КАК Ставка,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК Взнос
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|			И НЕ (ВТ_321.Ставка = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(Взнос),
	|	МИНИМУМ(Ставка),
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки,
	|	Ставка";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= РасчетнаяСумма > Настройки.ПредельнаяВеличина + Погрешность;
		ДополнитьНастройки2020(Настройки);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		РасчетнаяСумма	= 0;
		Погрешность		= 0;
		МРасшифровки	= Новый Массив;
		ВыборкаС		= ВыборкаФ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		
		Пока ВыборкаС.Следующий() Цикл
			РасчетнаяСумма	= РасчетнаяСумма + Окр(ВыборкаС.Взнос / ВыборкаС.Ставка * 22, 2);
			Погрешность		= Погрешность + 0.01;
			ЭлементРасшифровки	= СтрЗаменить(Настройки.ШаблонРасшифровки2	, "%1", ВыборкаС.Взнос);
			ЭлементРасшифровки	= СтрЗаменить(ЭлементРасшифровки			, "%2", ВыборкаС.Ставка);
			МРасшифровки.Добавить(ЭлементРасшифровки);
		
			Выборка	= ВыборкаС.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.Взнос.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория 
					+ ", ставка " + Выборка.Ставка + ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Взнос);
			КонецЦикла;
		КонецЦикла;
		
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", СтрСоединить(МРасшифровки, " + "));
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", РасчетнаяСумма);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11а(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.11а';
													|en = '0.11а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11а)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.030 подр.1.1 прил.1 (1 месяц ОП) по всем значениям поля 001 = ';
			|en = 'Гр.2 стр.030 подр.1.1 прил.1 (1 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru = '∑ стр.140 (1 месяц ОП) подр.3.2.1 Р.3 + гр.2 стр.010 (1 месяц ОП) прил.9 Р.1';
			|en = '∑ стр.140 (1 месяц ОП) подр.3.2.1 Р.3 + гр.2 стр.010 (1 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] = %3 Итог [%4]';
													|en = '%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11б(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.11б';
													|en = '0.11б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11б)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.030 подр.1.1 прил.1 (2 месяц ОП) по всем значениям поля 001 = ';
			|en = 'Гр.3 стр.030 подр.1.1 прил.1 (2 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru = '∑ стр.140 (2 месяц ОП) подр.3.2.1 Р.3 + гр.3 стр.010 (2 месяц ОП) прил.9 Р.1';
			|en = '∑ стр.140 (2 месяц ОП) подр.3.2.1 Р.3 + гр.3 стр.010 (2 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] = %3 Итог [%4]';
													|en = '%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11в(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.11в';
													|en = '0.11в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11в)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.11в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.030 подр.1.1 прил.1 (3 месяц ОП) по всем значениям поля 001 = ';
			|en = 'Гр.4 стр.030 подр.1.1 прил.1 (3 месяц ОП) по всем значениям поля 001 = '") +
		НСтр("ru = '∑ стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + гр.4 стр.010 (3 месяц ОП) прил.9 Р.1';
			|en = '∑ стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + гр.4 стр.010 (3 месяц ОП) прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] = %3 Итог [%4]';
													|en = '%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, "П0111100030" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательП8"	, "П0001900010" + Настройки.НомерГрафы);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М114001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Настройки.НомерГрафы);
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя", "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя", "030");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_900.Отчет		КАК Отчет,
	|	ВТ_900.Мес			КАК Мес,
	|	ВТ_900.Страница		КАК Страница,
	|	ВТ_900.Значение_	КАК ПоказательП8
	|ИЗ
	|	ВТ_900 КАК ВТ_900
	|ГДЕ
	|	ВТ_900.Графа		= &НомерГрафы
	|	И ВТ_900.Мес		<= &ТекущийМесяц
	|	И НЕ ВТ_900.Значение_= 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательП8)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С140 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ВТ_900.Графа", ?(Настройки.НомерГрафы = "01", 
		"НЕ ВТ_900.Графа", "ВТ_900.Графа"));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП8 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	МассивСуммР1 = Новый Массив;
	МассивСуммР3 = Новый Массив;
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 0;
	Р1Сумм	= 0;
	П8Сумм	= 0;
	Р3Сумм	= 0;
	
	Если ВыборкаР1.Следующий() Тогда
		Р1Сумм	= ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР1.Добавить(Выборка.ПоказательР1);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаП8.Следующий() Тогда
		П8Сумм = ВыборкаП8.ПоказательП8;
		МассивСуммР3.Добавить(ВыборкаП8.ПоказательП8);
		Выборка = ВыборкаП8.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательП8.Дополнение = "" + Выборка.Мес + " мес.";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП8);
		КонецЦикла;
	КонецЕсли;
	
	Если ВыборкаР3.Следующий() Тогда
		Р3Сумм = ВыборкаР3.ПоказательР3;
		МассивСуммР3.Добавить(ВыборкаР3.ПоказательР3);
		Если НЕ (Р1Сумм = П8Сумм + Р3Сумм И Настройки.ПриоритетПроизводительности) Тогда
			
			ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
			Выборка	= ВыборкаР3.Выбрать();
			
			Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
				Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
				Счетчик = Счетчик + 1;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сумм = П8Сумм + Р3Сумм;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР1, " + "), 
		ВыборкаР1.ПоказательР1, СтрСоединить(МассивСуммР3, " + "), П8Сумм + Р3Сумм);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_12(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.12';
													|en = '0.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 011(а,б,в)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 011(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.12)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 по всем значениям поля 001 = ∑ стр.140 (1 месяц ОП) + ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 по всем значениям поля 001 = ∑ стр.140 (1 месяц ОП) + '") +
		НСтр("ru = 'стр.140 (2 месяц ОП) + стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1';
			|en = 'стр.140 (2 месяц ОП) + стр.140 (3 месяц ОП) подр.3.2.1 Р.3 + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] = %3 Итог [%4]';
													|en = '%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_13(СтруктураРезультата) 
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.13';
													|en = '0.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.13)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.030 подр.1.1 прил.1 по всем значениям поля 001 = ';
			|en = 'Гр.1 стр.030 подр.1.1 прил.1 по всем значениям поля 001 = '") +
		НСтр("ru = '(стр.140 (1,2,3 месяц) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц) прил.9 Р.1) + ';
			|en = '(стр.140 (1,2,3 месяц) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц) прил.9 Р.1) + '") +
		НСтр("ru = '(стр.140 (1,2,3 месяц ПОП) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц ПОП) прил.9 Р.1)';
			|en = '(стр.140 (1,2,3 месяц ПОП) подр.3.2.1 Р.3 + гр.2,3,4 стр.010 (1,2,3 месяц ПОП) прил.9 Р.1)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] = %3 Итог [%4]';
													|en = '%1 Итог [%2] = %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.14а';
													|en = '0.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14а)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.2 стр.051 подр.1.1 прил.1 р. 1 СВ по ';
			|en = 'Гр.2 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.2 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru = 'значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 ';
			|en = 'значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru = '(1 месяц ОП) подр.3.2.1 Р.3';
			|en = '(1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.14б';
													|en = '0.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14б)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.3 стр.051 подр.1.1 прил.1 р. 1 СВ по ';
			|en = 'Гр.3 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.3 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru = 'значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 ';
			|en = 'значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru = '(2 месяц ОП) подр.3.2.1 Р.3';
			|en = '(2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.14в';
													|en = '0.14в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14в)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.14в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.4 стр.051 подр.1.1 прил.1 р. 1 СВ по ';
			|en = 'Гр.4 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.4 стр.051 подр.1.1 прил.1 р. 1 СВ по '") +
		НСтр("ru = 'значению поля 001 прил.1 Р.1 соответствующий значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 ';
			|en = 'значению поля 001 прил.1 Р.1 соответствующий значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru = '(3 месяц ОП) подр.3.2.1 Р.3';
			|en = '(3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_14_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3", "П00321М115001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"			, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР КОГДА ТТарифа.Значение_ = ""10"" ТОГДА ""11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ГруппаТарифов,
	|	ВЫБОР КОГДА ТТарифа.Значение_ В (""10"",""11"") ТОГДА ""10,11""
	|	ИНАЧЕ ТТарифа.Значение_ КОНЕЦ КАК ПредставлениеГруппы,
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	-Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Графа	<= &НомерГрафы
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Графа	<= &НомерГрафы
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	ГруппаТарифов,
	|	КодТарифа,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МАКСИМУМ(ПредставлениеГруппы)
	|ПО
	|	ГруппаТарифов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.С130 КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", "П0111100050" + Выборка.Графа);
			ИменаПоказателей.Вставить("ПоказательР12", "П0111100051" + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Разность = Выборка.ПоказательР11 + Выборка.ПоказательР12;
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Разность;
			Иначе
				Р1Сум = Р1Сум + Разность;
			КонецЕсли;
			Показатели.ПоказательР11.Дополнение = "тариф " + Выборка.КодТарифа;
			Показатели.ПоказательР12.Дополнение = "тариф " + Выборка.КодТарифа;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.ГруппаТарифов)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				Выборка	= ВыборкаР3.Выбрать();
				
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
					+ " => тариф " + ВыборкаР1.ПредставлениеГруппы + ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, Р1Сум, Р3Сум, ВыборкаР1.ПредставлениеГруппы);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.ПредставлениеГруппы;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_15(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.15';
													|en = '0.15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 014(а,б,в)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 014(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.15)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.15)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.050 подр.1.1 прил.1 р. 1 СВ - (гр.2 + гр.3 + гр.4) стр.051 подр.1.1 прил.1 ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.050 подр.1.1 прил.1 р. 1 СВ - (гр.2 + гр.3 + гр.4) стр.051 подр.1.1 прил.1 '") +
		НСтр("ru = 'р. 1 СВ по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 ';
			|en = 'р. 1 СВ по значению поля 001 прил.1 Р.1 соответствующему значению стр.130 подр.3.2.1 Р.3 = ∑ стр.150 '") +
		НСтр("ru = '(1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП) подр.3.2.1 Р.3';
			|en = '(1 месяц ОП) + стр.150 (2 месяц ОП) + стр.150 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_16(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.16';
													|en = '0.16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.16)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 0.16)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.1 стр.051 подр.1.1 прил.1 р. 1 СВ по значению поля ';
			|en = 'Гр.1 стр.050 подр.1.1 прил.1 р. 1 СВ - гр.1 стр.051 подр.1.1 прил.1 р. 1 СВ по значению поля '") +
		НСтр("ru = '001 соответствующему значению стр.130 подр.3.2.1 Р.3 = гр.2,3,4 стр.050 подр.1.1 прил.1 р. 1 ';
			|en = '001 соответствующему значению стр.130 подр.3.2.1 Р.3 = гр.2,3,4 стр.050 подр.1.1 прил.1 р. 1 '") +
		НСтр("ru = 'СВ - гр.2,3,4 стр.051 подр.1.1 прил.1 р. 1 СВ + ∑ (стр.150 (1 месяц ПОП) + стр.150 ';
			|en = 'СВ - гр.2,3,4 стр.051 подр.1.1 прил.1 р. 1 СВ + ∑ (стр.150 (1 месяц ПОП) + стр.150 '") +
		НСтр("ru = '(2 месяц ПОП) + стр.150 (3 месяц ПОП))';
			|en = '(2 месяц ПОП) + стр.150 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Тариф %1';
													|en = 'Тариф %1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду тарифа (%3)';
													|en = '%1 = %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерГрафы", "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_14_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17а';
													|en = '0.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17а)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.040 подр.1.3.1 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 001 ';
			|en = 'Гр.2 стр.040 подр.1.3.1 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 001 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17б';
													|en = '0.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17б)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.040 подр.1.3.1 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 001 ';
			|en = 'Гр.3 стр.040 подр.1.3.1 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 001 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17в';
													|en = '0.17в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17в)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.17в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.040 подр.1.3.1 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 001 ';
			|en = 'Гр.4 стр.040 подр.1.3.1 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 001 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17г(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17г';
													|en = '0.17г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17г)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.040 подр.1.3.2 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 002 ';
			|en = 'Гр.2 стр.040 подр.1.3.2 прил.1 р. 1 СВ (1 месяц ОП) по значению поля 002 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "02");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17д(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17д';
													|en = '0.17д'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17д)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17д)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.040 подр.1.3.2 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 002 ';
			|en = 'Гр.3 стр.040 подр.1.3.2 прил.1 р. 1 СВ (2 месяц ОП) по значению поля 002 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (2 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "03");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17е(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.17е';
													|en = '0.17е'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17е)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.17е)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.040 подр.1.3.2 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 002 ';
			|en = 'Гр.4 стр.040 подр.1.3.2 прил.1 р. 1 СВ (3 месяц ОП) по значению поля 002 '") +
		НСтр("ru = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3';
			|en = 'соответствующему значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "04");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_17_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00322М120001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, ?(Настройки.НомерГрафы = "01", "04", Настройки.НомерГрафы));
	Запрос.УстановитьПараметр("ТекущийМесяц"	, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя", "040");
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("СтрокаКода001"	, "001");
	Запрос.УстановитьПараметр("СтрокаКода003"	, "002");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТКода001.Значение_ КАК Строка(1))	КАК Код001,
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК Код003,
	|	Выразить(ТКода001.Значение_ КАК Строка(1)) + 
	|	ЕСТЬNULL(Выразить(ТКода003.Значение_ КАК Строка(1)), """") КАК КодТарифа,
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Графа		КАК Графа,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТКода001.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|			И (ТКода001.Раздел		= &Раздел)
	|			И (ТКода001.Строка_		= &СтрокаКода001)
	|			И (ТКода001.Мес			= &ОтчетныйМесяц)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода003
	|			ПО ТПоказателя.Страница = ТКода003.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода003.СтрокаТЧ
	|			И (ТКода003.Раздел		= &Раздел)
	|			И (ТКода003.Строка_		= &СтрокаКода003)
	|			И (ТКода003.Мес			= &ОтчетныйМесяц)
	|ГДЕ
	|	ТПоказателя.Раздел		= &Раздел
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		<= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1),
	|	МИНИМУМ(Код001),
	|	МИНИМУМ(Код003)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_322.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес <= &ТекущийМесяц)
	|			И НЕ (ВТ_322.С200 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	КодТарифа";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "<=", ?(Настройки.НомерГрафы = "01", "<=", "="));
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		Р1Сум	= 0;
		Р3Сум	= 0;
		Счетчик	= 1;
		
		ДополнениеР1 = "Код основания " + ВыборкаР1.Код001 
			+ ?(ЗначениеЗаполнено(ВыборкаР1.Код003), ", код класса " + ВыборкаР1.Код003, "");
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР1", Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Если Настройки.НомерГрафы = "01" И НЕ Выборка.Графа = "01" Тогда
				Р3Сум = Р3Сум + Выборка.ПоказательР1;
			Иначе
				Р1Сум = Р1Сум + Выборка.ПоказательР1;
			КонецЕсли;
			Показатели.ПоказательР1.Дополнение = ДополнениеР1;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
		
		Если ВыборкаР3.НайтиСледующий(Новый Структура("КодТарифа", ВыборкаР1.КодТарифа)) Тогда
			Р3Сум	= Р3Сум + ВыборкаР3.ПоказательР3;
			
			Если НЕ (Р1Сум = Р3Сум И Настройки.ПриоритетПроизводительности) Тогда
				ЛимитРасшифровки = Настройки.ЛимитРасшифровки;
				
				Выборка	= ВыборкаР3.Выбрать();
				Пока Выборка.Следующий() И Счетчик <= ЛимитРасшифровки Цикл
					Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., код " + Выборка.Категория 
					+ ", " + Выборка.Фамилия;
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
					Счетчик = Счетчик + 1;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ВыборкаР1.Код001);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%4", ВыборкаР1.Код003);
		Настройки.ДопСведения	= ДополнениеР1;
		ВыборкаР3.Сбросить();
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_18а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.18а';
													|en = '0.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 017(а,б,в)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 017(а,б,в)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.18а)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.18а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.1 прил.1 р. 1 СВ по значению поля 001 соответствующему ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.1 прил.1 р. 1 СВ по значению поля 001 соответствующему '") +
		НСтр("ru = 'значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 ';
			|en = 'значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru = '(3 месяц ОП) подр.3.2.2 Р.3';
			|en = '(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_18б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.18б';
													|en = '0.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Избыточное, дублирует КС 017(г,д,е)';
													|en = 'Реализация отложена. Избыточное, дублирует КС 017(г,д,е)'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.18б)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.18б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.2 прил.1 р. 1 СВ по значению поля 002 соответствующему ';
			|en = '(Гр.2 + гр.3 + гр.4) стр.040 подр.1.3.2 прил.1 р. 1 СВ по значению поля 002 соответствующему '") +
		НСтр("ru = 'значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 ';
			|en = 'значению стр.190 подр.3.2.2 Р.3 = ∑ стр.200 (1 месяц ОП) + стр.200 (2 месяц ОП) + стр.200 '") +
		НСтр("ru = '(3 месяц ОП) подр.3.2.2 Р.3';
			|en = '(3 месяц ОП) подр.3.2.2 Р.3'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_19а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.19а';
													|en = '0.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.19а)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 0.19а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.040 подразд. 1.3.1 по значению поля 001 соответствующему значению стр.190 подр.3.2.2 ';
			|en = 'Гр.1 стр.040 подразд. 1.3.1 по значению поля 001 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru = 'Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 001 + ∑ (стр.200 (1 месяц ПОП) + стр.200 ';
			|en = 'Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 001 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru = '(2 месяц ПОП) + стр.200 (3 месяц ПОП))';
			|en = '(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3)';
													|en = '%1 = %2 по коду основания (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11131");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_19б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.19б';
													|en = '0.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.19б)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 0.19б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.1 стр.040 подразд. 1.3.2 по значению поля 002 соответствующему значению стр.190 подр.3.2.2 ';
			|en = 'Гр.1 стр.040 подразд. 1.3.2 по значению поля 002 соответствующему значению стр.190 подр.3.2.2 '") +
		НСтр("ru = 'Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 003 + ∑ (стр.200 (1 месяц ПОП) + стр.200 ';
			|en = 'Р.3 = ∑ гр.2,3,4 стр.040 по значению поля 003 + ∑ (стр.200 (1 месяц ПОП) + стр.200 '") +
		НСтр("ru = '(2 месяц ПОП) + стр.200 (3 месяц ПОП))';
			|en = '(2 месяц ПОП) + стр.200 (3 месяц ПОП))'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 по коду основания (%3), коду класса (%4)';
													|en = '%1 = %2 по коду основания (%3), коду класса (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"		, "П11132");
	Настройки.Вставить("НомерГрафы"	, "01");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 3);
	ПроверитьКС2020_0_17_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.20а';
													|en = '0.20а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.1';
														|en = 'Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена. Спорное';
													|en = 'Реализация отложена. Спорное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.1 Раздела 3 (КС 0.20а)';
													|en = 'Проверка подраздела 3.1 Раздела 3 (КС 0.20а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более ';
			|en = 'В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru = 'набора идентичных показателей (СНИЛС + ФИО + код категории ЗЛ)';
			|en = 'набора идентичных показателей (СНИЛС + ФИО + код категории ЗЛ)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Повтор по Фамилии (%1), СНИЛС (%2), коду категории (%3)';
													|en = 'Повтор по Фамилии (%1), СНИЛС (%2), коду категории (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в ';
			|en = 'Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru = 'разделе 3 расчета';
			|en = 'разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20б(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.20б';
													|en = '0.20б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.1';
														|en = 'Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.1 Раздела 3 (КС 0.20б)';
													|en = 'Проверка подраздела 3.1 Раздела 3 (КС 0.20б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более ';
			|en = 'В разделе 3 расчета за отчетный (расчетный) период не должны содержаться 2 и более '") +
		НСтр("ru = 'застрахованных лиц с идентичным набором показателей (СНИЛС + ФИО)';
			|en = 'застрахованных лиц с идентичным набором показателей (СНИЛС + ФИО)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Повтор по Фамилии (%1), СНИЛС (%2)';
													|en = 'Повтор по Фамилии (%1), СНИЛС (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в ';
			|en = 'Наличие в расчете 2-х и более застрахованных лиц с идентичным набором показателей в '") +
		НСтр("ru = 'разделе 3 расчета';
			|en = 'разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Снилс"	, "П000310003001");
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	1 КАК Количество
	|ПОМЕСТИТЬ ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	СУММА(1) > 1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_310_Отбор.КлючСортировки)
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|	И ВТ_310.Вид = &Вид
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса	= Запрос.Выполнить();
	ВыборкаР3			= РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР3.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", ВыборкаР3.Фамилия + ", " + ВыборкаР3.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР3.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Снилс);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		КонецЦикла;
		
		Настройки.ЭтоОшибка	= Истина;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", ВыборкаР3.Фамилия);
		Настройки.Расшифровка = СтрЗаменить(Настройки.Расшифровка		, "%2", ВыборкаР3.Снилс);
		ДополнитьСтруктуруОшибок2020(Настройки);
	
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_20в(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.20в';
													|en = '0.20в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 Раздела 3 (КС 0.20в)';
													|en = 'Проверка подраздела 3.2.1 Раздела 3 (КС 0.20в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'В подр.3.2.1 Р.3 не должны содержаться 2 и более набора идентичных показателей ';
			|en = 'В подр.3.2.1 Р.3 не должны содержаться 2 и более набора идентичных показателей '") +
		НСтр("ru = '(месяц + код категории ЗЛ) по одному застрахованному лицу';
			|en = '(месяц + код категории ЗЛ) по одному застрахованному лицу'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Повтор по месяцу (%1), коду категории (%2) для %3';
													|en = 'Повтор по месяцу (%1), коду категории (%2) для %3'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Наличие в расчете застрахованного лица с идентичным набором показателей в ';
			|en = 'Наличие в расчете застрахованного лица с идентичным набором показателей в '") +
		НСтр("ru = 'разделе 3 расчета';
			|en = 'разделе 3 расчета'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_21(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.21';
													|en = '0.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Титульный лист';
														|en = 'Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Титульного листа (КС 0.21)';
													|en = 'Проверка Титульного листа (КС 0.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '2020 ≤ Значение поля ""Календарный год"" титульного листа ≤ значения текущего календарного года';
			|en = '2020 ≤ Значение поля ""Календарный год"" титульного листа ≤ значения текущего календарного года'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '2020 <= (%1) <= (%2)';
													|en = '2020 <= (%1) <= (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Значение календарного года должно быть больше или равно значению ""2020"" и меньше или ';
			|en = 'Значение календарного года должно быть больше или равно значению ""2020"" и меньше или '") +
		НСтр("ru = 'равно значению текущего календарного года';
			|en = 'равно значению текущего календарного года'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ОтчетГод"	, "ОтчетГод");
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	
	ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2020(Настройки);
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ЗначениеОтчГода	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(СтруктураДанныхТитульный.ОтчетГод);
	ЗначениеОтчГода	= ?(ЗначениеОтчГода = Неопределено, 0, ЗначениеОтчГода);
	ЗначениеКалГода	= Год(СтруктураДанныхТитульный.ДатаПодписи);
	
	ИсточникДанных.Вставить("ОтчетГод"		, ЗначениеОтчГода);
	ИсточникДанных.Вставить("ДатаПодписи"	, ЗначениеКалГода);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ОтчетГод);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ (2020 <= ЗначениеОтчГода И ЗначениеОтчГода <= ЗначениеКалГода);	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", ЗначениеОтчГода);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", ЗначениеКалГода);
	ДополнитьСтруктуруОшибок2020(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22а(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.22а';
													|en = '0.22а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2';
														|en = 'Раздел 3, подраздел 3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2 Раздела 3 (КС 0.22а)';
													|en = 'Проверка подраздела 3.2 Раздела 3 (КС 0.22а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сведения по застрахованному лицу не содержат отрицательных значений в данных о сумме ';
			|en = 'Сведения по застрахованному лицу не содержат отрицательных значений в данных о сумме '") +
		НСтр("ru = 'страховых взносов, не превышающих предельную величину и (или) начисленных страховых взносах';
			|en = 'страховых взносов, не превышающих предельную величину и (или) начисленных страховых взносах'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Сведения по застрахованному лицу содержат отрицательные суммы';
			|en = 'Сведения по застрахованному лицу содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца"	, ДанныеКС.Мес);
	Запрос.УстановитьПараметр("Вид"			, ДанныеКС.Вид);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Ключ		КАК Ключ
	|ПОМЕСТИТЬ
	|	ВТ_310_Отбор
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|ГДЕ
	|	ВТ_310.Мес = &НомерМесяца
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК С140,
	|	ВТ_321.С150		КАК С150,
	|	ВТ_321.С160		КАК С160,
	|	ВТ_321.С170		КАК С170
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310_Отбор.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_321.С140 < 0
	|	ИЛИ ВТ_321.С150 < 0
	|	ИЛИ ВТ_321.С160 < 0
	|	ИЛИ ВТ_321.С170 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С200		КАК С200,
	|	ВТ_322.С210		КАК С210
	|ИЗ
	|	ВТ_310_Отбор КАК ВТ_310_Отбор
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_310 КАК ВТ_310
	|		ПО ВТ_310_Отбор.Ключ = ВТ_310.Ключ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310_Отбор.Ключ = ВТ_322.Ключ
	|ГДЕ
	|	ВТ_322.С200 < 0
	|	ИЛИ ВТ_322.С210 < 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес
	|ИТОГИ 
	| 	МИНИМУМ(Фамилия),
	| 	МИНИМУМ(Снилс)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_310_Отбор";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР321 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР322 = РезультатЗапроса[2].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С140"	, "П00321М114001_");
	ИменаПоказателей.Вставить("С150"	, "П00321М115001_");
	ИменаПоказателей.Вставить("С160"	, "П00321М116001_");
	ИменаПоказателей.Вставить("С170"	, "П00321М117001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР321.Следующий() Цикл
		Выборка	= ВыборкаР321.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР321.Фамилия + ", " + ВыборкаР321.Снилс);
					ЗарегистрироватьФормулу2020(Настройки);
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка		= Истина;
					ДополнитьНастройки2020(Настройки);
					Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2020(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Показатели = Неопределено;
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("С200"	, "П00322М120001_");
	ИменаПоказателей.Вставить("С210"	, "П00322М121001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Пока ВыборкаР322.Следующий() Цикл
		Выборка	= ВыборкаР322.Выбрать();
		Пока Выборка.Следующий() Цикл
			Для каждого Показатель Из ИменаПоказателей Цикл
				Если Выборка[Показатель.Ключ] < 0 Тогда
					Настройки.Вставить("ДопСведения", ВыборкаР322.Фамилия + ", " + ВыборкаР322.Снилс);
					ЗарегистрироватьФормулу2020(Настройки);
					ВнестиПоказательВРасшифровку2020(Выборка, Показатели[Показатель.Ключ]);
					Настройки.ЭтоОшибка = Истина;
					ДополнитьНастройки2020(Настройки);
					Настройки.Расшифровка = СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка[Показатель.Ключ]);
					ДополнитьСтруктуруОшибок2020(Настройки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22б(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.22б';
													|en = '0.22б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подр.1.1 приложения 1 к Разделу 1 (КС 0.22б)';
													|en = 'Проверка подр.1.1 приложения 1 к Разделу 1 (КС 0.22б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '(стр.050 – стр.051), стр.061 подр.1.1 прил.1 Р.1 по всем значениям граф ≥ 0';
			|en = '(стр.050 – стр.051), стр.061 подр.1.1 прил.1 Р.1 по всем значениям граф ≥ 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых ';
			|en = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru = 'взносах содержат отрицательные суммы';
			|en = 'взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	Настройки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= 0';
													|en = '%1 Итог [%2] >= 0'"));
	Настройки.Вставить("ШаблонРасшифровки2"	, НСтр("ru = '%1 >= 0';
														|en = '%1 >= 0'"));
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, "П01111");
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "050");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "051");
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, "061");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|			И ТПоказателя1.Графа = ТПоказателя3.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя3.Раздел	= &РазделПоказателя
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя3.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Графа";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Разность = Выборка.ПоказательР11 - Выборка.ПоказательР12;
			
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР11"	, "П0111100050" + Выборка.Графа);
		ИменаПоказателей.Вставить("ПоказательР12"	, "П0111100051" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		
		Настройки.ЭтоОшибка		= Разность < 0;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", 
			"" + Выборка.ПоказательР11 + " - " + Выборка.ПоказательР12);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка, "%2", Разность);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
		ИменаПоказателей = Новый Структура;
		ИменаПоказателей.Вставить("ПоказательР13"	, "П0111100061" + Выборка.Графа);
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		Настройки.ЭтоОшибка		= Выборка.ПоказательР13 < 0;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки2, "%1", Выборка.ПоказательР13);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22в(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.22в';
													|en = '0.22в'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подр.1.3.1 приложения 1 к Разделу 1 (КС 0.22в)';
													|en = 'Проверка подр.1.3.1 приложения 1 к Разделу 1 (КС 0.22в)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'стр.040, стр.050 подр.1.3.1 прил.1 Р.1 по всем значения граф  ≥ 0';
			|en = 'стр.040, стр.050 подр.1.3.1 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых ';
			|en = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru = 'взносах содержат отрицательные суммы';
			|en = 'взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11131");
	ПроверитьКС2020_0_22_код(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22г(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.22г';
													|en = '0.22г'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подр.1.3.2 приложения 1 к Разделу 1 (КС 0.22г)';
													|en = 'Проверка подр.1.3.2 приложения 1 к Разделу 1 (КС 0.22г)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'стр.040, стр.050 подр.1.3.2 прил.1 Р.1 по всем значения граф  ≥ 0';
			|en = 'стр.040, стр.050 подр.1.3.2 прил.1 Р.1 по всем значения граф  ≥ 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 0';
													|en = '%1 >= 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых ';
			|en = 'Сведения о базе для начислении страховых взносах, а также данные о начисленных страховых '") +
		НСтр("ru = 'взносах содержат отрицательные суммы';
			|en = 'взносах содержат отрицательные суммы'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Раздел"	, "П11132");
	ПроверитьКС2020_0_22_код(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_22_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделПоказателя"	, Настройки.Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, "040");
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, "050");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"		, ?(Настройки.Раздел = "П11131", ",2", ",3"));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТПоказателя2.СтрокаТЧ
	|			И ТПоказателя1.Графа = ТПоказателя2.Графа
	|ГДЕ
	|	ТПоказателя1.Раздел		= &РазделПоказателя
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &РазделПоказателя
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Графа";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.Раздел + "М1040" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2020(Настройки);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР11 < 0;
			ДополнитьНастройки2020(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР11);
			ДополнитьСтруктуруОшибок2020(Настройки);
		
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.Раздел + "М1050" + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ЗарегистрироватьФормулу2020(Настройки);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			
			Настройки.ЭтоОшибка		= Выборка.ПоказательР12 < 0;
			ДополнитьНастройки2020(Настройки);
			Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Выборка.ПоказательР12);
			ДополнитьСтруктуруОшибок2020(Настройки);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.23';
													|en = '0.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 0.23)';
													|en = 'Проверка Раздела 1 (КС 0.23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.030 Р.1 = стр.030 Р.1 предыдущего отчетного периода ';
			|en = 'Сумма страховых взносов в стр.030 Р.1 = стр.030 Р.1 предыдущего отчетного периода '") +
		НСтр("ru = '+ стр.031 + стр.032 + стр.033 Р.1';
			|en = '+ стр.031 + стр.032 + стр.033 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("030");
	МассивСтрок.Добавить("031");
	МассивСтрок.Добавить("032");
	МассивСтрок.Добавить("033");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010002001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.24';
													|en = '0.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 0.24)';
													|en = 'Проверка Раздела 1 (КС 0.24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.070 Р.1 = стр.070 Р.1 предыдущего отчетного периода ';
			|en = 'Сумма страховых взносов в стр.070 Р.1 = стр.070 Р.1 предыдущего отчетного периода '") +
		НСтр("ru = '+ стр.071 + стр.072 + стр.073 Р.1 по каждому значению стр.060 Р.1';
			|en = '+ стр.071 + стр.072 + стр.073 Р.1 по каждому значению стр.060 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по КБК %4';
													|en = '%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("070");
	МассивСтрок.Добавить("071");
	МассивСтрок.Добавить("072");
	МассивСтрок.Добавить("073");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М106001_");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_24_код(Настройки)
	
	Перем Показатели;
	
	Раздел		= Сред(Настройки.СтрокаКБК, 1, 6);
	РазделТЧ	= Сред(Настройки.СтрокаКБК, 1, 8);
	СтрокаКБК	= Сред(Настройки.СтрокаКБК, 9, 3);
	Окончание	= Сред(Настройки.СтрокаКБК, 12);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаКБК"		, СтрокаКБК);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.МассивСтрок[0]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТКБК.Значение_ КАК КБК,
	|	ТПоказателя1.Отчет КАК Отчет,
	|	ТПоказателя1.Страница КАК Страница,
	|	ТПоказателя1.СтрокаТЧ КАК НомерСтроки,
	|	ТПоказателя1.Строка_ КАК НомСтрПок,
	|	ТПоказателя1.Мес КАК Мес,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ""01""
	|		ИНАЧЕ ПОДСТРОКА(ТПоказателя1.Строка_,3,1) + ТПоказателя1.МесСтр
	|	КОНЕЦ КАК Ключ,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (""120"",""121"",""122"",""123"")
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ = &СтрокаСуммы
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		КОГДА ТПоказателя1.Строка_ = ""120""
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА -ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|				И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК Расшифровка
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя1.Мес = ТКБК.Мес
	|			И ТПоказателя1.Страница = ТКБК.Страница
	|			И ТПоказателя1.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя1.Раздел = &Раздел
	|	И ТПоказателя1.Строка_ В(&МассивСтрок)
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Строка_ В (&СтрокаСуммы, ""120"")
	|		КОНЕЦ
	|	И ТПоказателя1.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТКБК.Раздел = &Раздел
	|	И ТКБК.Строка_ = &СтрокаКБК
	|	И ТКБК.Мес В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КБК,
	|	Ключ,
	|	НомСтрПок,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(Расшифровка)
	|ПО
	|	КБК,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если ВыборкаК.Расшифровка Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", РазделТЧ + Выборка.НомСтрПок + Окончание);
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ДанныеКС.Мес - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность = ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КБК);
		Настройки.ДопСведения	= "КБК " + ВыборкаТ.КБК;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_0_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.25';
													|en = '0.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.1';
														|en = 'Раздел 3, подраздел 3.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.1 Раздела 3 (КС 0.25)';
													|en = 'Проверка подраздела 3.1 Раздела 3 (КС 0.25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Идентификация стр.030, 040, 050, 060 подр.3.1 Р.3 с базами данных ЦУН АИС';
			|en = 'Идентификация стр.030, 040, 050, 060 подр.3.1 Р.3 с базами данных ЦУН АИС'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочные данные застрахованных лиц';
														|en = 'Ошибочные данные застрахованных лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_26(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.26';
													|en = '0.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Титульный лист';
														|en = 'Титульный лист'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'п.1 ст. 119 НК РФ';
													|en = 'п.1 ст. 119 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Отключено для 1 полугодия 2020г в связи с короновирусом';
													|en = 'Отключено для 1 полугодия 2020г в связи с короновирусом'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Титульного листа (КС 0.26)';
													|en = 'Проверка Титульного листа (КС 0.26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Титульный лист (стр.001) ""Дата представления Расчета"" должна быть раньше или равна ';
			|en = 'Титульный лист (стр.001) ""Дата представления Расчета"" должна быть раньше или равна '") +
		НСтр("ru = 'установленному стр.431 НК РФ сроку представления Расчета, если ""Номер корректировки"" ""0--""';
			|en = 'установленному стр.431 НК РФ сроку представления Расчета, если ""Номер корректировки"" ""0--""'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= %2, когда номер корректировки = 0';
													|en = '%1 <= %2, когда номер корректировки = 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Возможное нарушение срока представления первичного Расчета';
			|en = 'Возможное нарушение срока представления первичного Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДанныеКС.Вид = 0 Тогда
		Возврат;
	КонецЕсли;

	// перенесение сроков в связи с короновирусом
	Если ДанныеКС.Год = 2020 И ДанныеКС.Мес <= 6 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ДатаПодписи"	, "ДатаПодписи");
	ЗаполнитьСтруктуруПоказателейТитульный2020(Показатели, ИменаПоказателей);
	ЗарегистрироватьФормулу2020(Настройки);
	
	ПредельныйМес	= ?(ДанныеКС.Мес = 12, 1, ДанныеКС.Мес + 1);
	ПредельныйГод	= ?(ДанныеКС.Мес = 12, ДанныеКС.Год + 1, ДанныеКС.Год);
	ПредельнаяДата	= Дата(ПредельныйГод, ПредельныйМес, 30, 23, 59, 59);
	ДатаПодписи		= СтруктураДанныхТитульный.ДатаПодписи;
	
	ИсточникДанных	= Новый Структура("Отчет, Страница", Неопределено, 1);
	ИсточникДанных.Вставить("ДатаПодписи"	, ДатаПодписи);
	ВнестиПоказательВРасшифровку2020(ИсточникДанных, Показатели.ДатаПодписи);
	
	Настройки.ЭтоОшибка		= НЕ ДатаПодписи <= ПредельнаяДата;	
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Формат(ДатаПодписи		, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Формат(ПредельнаяДата	, "ДЛФ=D"));
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", ДанныеКС.Вид);
	ДополнитьСтруктуруОшибок2020(Настройки);
	СтруктураРезультата		= ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_27(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.27';
													|en = '0.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 0.27)';
													|en = 'Проверка Раздела 2 (КС 0.27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2 в случае, если поле ""Расчетный (отчетный) ';
			|en = 'Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2 в случае, если поле ""Расчетный (отчетный) '") +
		НСтр("ru = 'период (код)"" Титульного листа = 34, 83, 84, 85, 86 и поле ""По месту нахождения (учета) (код)"" ';
			|en = 'период (код)"" Титульного листа = 34, 83, 84, 85, 86 и поле ""По месту нахождения (учета) (код)"" '") +
		НСтр("ru = 'Титульного листа = 124, 240';
			|en = 'Титульного листа = 124, 240'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Раздел 2 и Приложение 1 к Разделу 2 заполнены';
													|en = 'Раздел 2 и Приложение 1 к Разделу 2 заполнены'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2';
														|en = 'Необходимо заполнить Раздел 2 и Приложение 1 к Разделу 2'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР21", "П00021М101001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, "П00021");
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Значение_	КАК ПоказательР21
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= ""010""
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка	= РезультатЗапроса.Выбрать();
		
	ЗарегистрироватьФормулу2020(Настройки);
	
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР21);
	КонецЦикла;
	
	ПериодНайден	= НЕ СтрНайти("34,83,84,85,86", СтруктураДанныхТитульный.Период) = 0;
	ПоМестуНайден	= НЕ СтрНайти("124,240", СтруктураДанныхТитульный.ПоМесту) = 0;
	Настройки.ЭтоОшибка	= ПериодНайден И ПоМестуНайден И НЕ (ДанныеКС.Р00002Заполнен И ДанныеКС.Р00021Заполнен);
	Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
	ДополнитьСтруктуруОшибок2020(Настройки);
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.50а.доп';
													|en = '0.50а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50а.доп)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.150 (1 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (1 месяц ОП) подр.3.2.1 Р.3';
			|en = 'Стр.150 (1 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (1 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = '%1, %2';
													|en = '%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.50б.доп';
													|en = '0.50б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50б.доп)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.150 (2 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (2 месяц ОП) подр.3.2.1 Р.3';
			|en = 'Стр.150 (2 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (2 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = '%1, %2';
													|en = '%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.50в.доп';
													|en = '0.50в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50в.доп)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 0.50в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.150 (3 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (3 месяц ОП) подр.3.2.1 Р.3';
			|en = 'Стр.150 (3 месяц ОП) подр.3.2.1 Р.3 <= стр.140 (3 месяц ОП) подр.3.2.1 Р.3'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = '%1, %2';
													|en = '%1, %2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_50_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_50_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"	, "П000310004001");
	ИменаПоказателей.Вставить("Выплаты"	, "П00321М114001_");
	ИменаПоказателей.Вставить("База"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерМесяца", Настройки.НомерМесяца);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.Код КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С140		КАК Выплаты,
	|	ВТ_321.С150		КАК База
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И (ВТ_321.С150 > ВТ_321.С140)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Мес УБЫВ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Фамилия);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Выплаты);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.База);
		
		Настройки.ЭтоОшибка		= Истина;
		ДополнитьНастройки2020(Настройки);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Выборка.База);
		Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Выборка.Выплаты);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.51а.доп';
													|en = '0.51а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51а.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма базы страховых взносов ∑ (гр.2 стр.050 подр.1.1 прил.1 р. 1 - гр.2 стр.051 подр.1.1 ';
			|en = 'Сумма базы страховых взносов ∑ (гр.2 стр.050 подр.1.1 прил.1 р. 1 - гр.2 стр.051 подр.1.1 '") +
		НСтр("ru = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем ';
			|en = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.51б.доп';
													|en = '0.51б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51б.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма базы страховых взносов ∑ (гр.3 стр.050 подр.1.1 прил.1 р. 1 - гр.3 стр.051 подр.1.1 ';
			|en = 'Сумма базы страховых взносов ∑ (гр.3 стр.050 подр.1.1 прил.1 р. 1 - гр.3 стр.051 подр.1.1 '") +
		НСтр("ru = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем ';
			|en = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.51в.доп';
													|en = '0.51в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51в.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.51в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма базы страховых взносов ∑ (гр.4 стр.050 подр.1.1 прил.1 р. 1 - гр.4 стр.051 подр.1.1 ';
			|en = 'Сумма базы страховых взносов ∑ (гр.4 стр.050 подр.1.1 прил.1 р. 1 - гр.4 стр.051 подр.1.1 '") +
		НСтр("ru = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем ';
			|en = 'прил.1 р. 1 ) по всем тарифам = ∑ стр. 150 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем '") +
		НСтр("ru = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_51_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_51_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11"	, Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12"	, Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""051""
	|		ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С150		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С150 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР11 - ВыборкаР1.ПоказательР12, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Строка_ = "050" Тогда
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		Иначе
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЕсли;
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.52а.доп';
													|en = '0.52а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52а.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов (гр.2 стр.061 подразд. 1.1 прил.1) = ';
			|en = 'Сумма исчисленных страховых взносов (гр.2 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru = '∑ стр. 170 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, ';
			|en = '∑ стр. 170 (1 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru = 'умноженное на количество застрахованных лиц)';
			|en = 'умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006102");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.52б.доп';
													|en = '0.52б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52б.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов (гр.3 стр.061 подразд. 1.1 прил.1) = ';
			|en = 'Сумма исчисленных страховых взносов (гр.3 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru = '∑ стр. 170 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, ';
			|en = '∑ стр. 170 (2 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru = 'умноженное на количество застрахованных лиц)';
			|en = 'умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006103");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.52в.доп';
													|en = '0.52в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52в.доп)';
													|en = 'Проверка Подраздела 1.1 Приложения 1 (КС 0.52в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов (гр.4 стр.061 подразд. 1.1 прил.1) = ';
			|en = 'Сумма исчисленных страховых взносов (гр.4 стр.061 подразд. 1.1 прил.1) = '") +
		НСтр("ru = '∑ стр. 170 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, ';
			|en = '∑ стр. 170 (3 месяц) подразд. 3.2.1 (допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru = 'умноженное на количество застрахованных лиц)';
			|en = 'умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1", "П011110006104");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_52_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_52_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1"	, Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательР3"	, "П00321М117001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР1, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделПоказателя", Лев(Настройки.ПоказательР1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделПоказателя
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_321.Код		КАК КодТарифа,
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130		КАК Категория,
	|	ВТ_321.Мес		КАК Мес,
	|	ВТ_321.С170		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес = &НомерМесяца)
	|			И НЕ (ВТ_321.С170 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	КодТарифа
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.53а.доп';
													|en = '0.53а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53а.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База для начисления страховых взносов по доп. тарифу (∑ всех гр.2 стр.040 подр.1.3.1 прил.1 Р.1 ';
			|en = 'База для начисления страховых взносов по доп. тарифу (∑ всех гр.2 стр.040 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'по всем значениям стр.001 + ∑ всех гр.2 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям ';
			|en = 'по всем значениям стр.001 + ∑ всех гр.2 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru = 'значений полей 001, 002) = ∑ стр. 200 (1 месяц) подразд. 3.2.2 (допустимо различие ';
			|en = 'значений полей 001, 002) = ∑ стр. 200 (1 месяц) подразд. 3.2.2 (допустимо различие '") +
		НСтр("ru = 'не более чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'не более чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002");
	Настройки.Вставить("ПоказательР12", "П11132М104002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.53б.доп';
													|en = '0.53б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53б.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru='База для начисления страховых взносов по доп. тарифу (∑ всех гр.3 стр.040 подр.1.3.1 прил.1 Р.1 ") +
		НСтр("ru='по всем 'значениям стр.001 + ∑ всех гр.3 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru = 'значений полей 001, 002) = ∑ стр. 200 (2 месяц) подразд. 3.2.2 (допустимо различие не более ';
			|en = 'значений полей 001, 002) = ∑ стр. 200 (2 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru = 'чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003");
	Настройки.Вставить("ПоказательР12", "П11132М104003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_53в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.53в.доп';
													|en = '0.53в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53в.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.53в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База для начисления страховых взносов по доп. тарифу (∑ всех гр.4 стр.040 подр.1.3.1 прил.1 ';
			|en = 'База для начисления страховых взносов по доп. тарифу (∑ всех гр.4 стр.040 подр.1.3.1 прил.1 '") +
		НСтр("ru = 'Р.1 по всем значениям стр.001 + ∑ всех гр.4 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям ';
			|en = 'Р.1 по всем значениям стр.001 + ∑ всех гр.4 стр.040 подр.1.3.2 прил.1 Р.1 по всем комбинациям '") +
		НСтр("ru = 'значений полей 001, 002) = ∑ стр. 200 (3 месяц) подразд. 3.2.2 (допустимо различие не более ';
			|en = 'значений полей 001, 002) = ∑ стр. 200 (3 месяц) подразд. 3.2.2 (допустимо различие не более '") +
		НСтр("ru = 'чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)';
			|en = 'чем на значение в 0,5 копейки, умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004");
	Настройки.Вставить("ПоказательР12", "П11132М104004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54а_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.54а.доп';
													|en = '0.54а.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54а.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54а.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 ';
			|en = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru = 'прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (1 месяц) подразд. 3.2.2 ';
			|en = 'прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (1 месяц) подразд. 3.2.2 '") +
		НСтр("ru = '(допустимо различие не более чем на значение в 0,5 копейки, ';
			|en = '(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru = 'умноженное на количество застрахованных лиц)';
			|en = 'умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105002");
	Настройки.Вставить("ПоказательР12", "П11132М105002");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 2);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54б_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.54б.доп';
													|en = '0.54б.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54б.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54б.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 ';
			|en = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.2 стр.050 подразд. 1.3.1 '") +
		НСтр("ru = 'прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (2 месяц) подразд. 3.2.2 ';
			|en = 'прил.1 + гр.2 стр.050 подразд. 1.3.2) = ∑ стр. 210 (2 месяц) подразд. 3.2.2 '") +
		НСтр("ru = '(допустимо различие не более чем на значение в 0,5 копейки, ';
			|en = '(допустимо различие не более чем на значение в 0,5 копейки, '") +
		НСтр("ru = 'умноженное на количество застрахованных лиц)';
			|en = 'умноженное на количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105003");
	Настройки.Вставить("ПоказательР12", "П11132М105003");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес - 1);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54в_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '0.54в.доп';
													|en = '0.54в.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2';
														|en = 'Раздел 1, приложение 1, подразделы 1.3.1 - 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'Наличие ошибки';
													|en = 'Наличие ошибки'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54в.доп)';
													|en = 'Проверка Подразделов 1.3.1 и 1.3.2 Приложения 1 (КС 0.54в.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.4 стр.050 подразд. ';
			|en = 'Сумма исчисленных страховых взносов по дополнительному тарифу (гр.4 стр.050 подразд. '") +
		НСтр("ru = '1.3.1 прил.1 + гр.4 стр.050 подразд. 1.3.2) = ∑ стр. 210 (3 месяц) подразд. 3.2.2 ';
			|en = '1.3.1 прил.1 + гр.4 стр.050 подразд. 1.3.2) = ∑ стр. 210 (3 месяц) подразд. 3.2.2 '") +
		НСтр("ru = '(допустимо различие не более чем на значение в 0,5 копейки, умноженное на ';
			|en = '(допустимо различие не более чем на значение в 0,5 копейки, умноженное на '") +
		НСтр("ru = 'количество застрахованных лиц)';
			|en = 'количество застрахованных лиц)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 (±%3)';
													|en = '%1 = %2 (±%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	ДополнитьНастройки2020(Заголовки);	
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М105004");
	Настройки.Вставить("ПоказательР12", "П11132М105004");
	Настройки.Вставить("НомерМесяца", ДанныеКС.Мес);
	ПроверитьКС2020_0_54_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_0_54_код(Настройки)
	
	Перем Показатели;
	
	СтрокаПоказателя = Сред(Настройки.ПоказательР11, 9, 3);
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР3"	, ?(СтрокаПоказателя = "050", "П00322М121001_", "П00322М120001_"));
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("НомерГрафы"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерМесяца"		, Настройки.НомерМесяца);
	Запрос.УстановитьПараметр("РазделР11"		, Лев(Настройки.ПоказательР11, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Лев(Настройки.ПоказательР12, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя", Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Строка_		КАК Строка_,
	|	ТПоказателя.Страница + ВЫБОР
	|		КОГДА ТПоказателя.Раздел = ""П11131""
	|			ТОГДА "",2""
	|		ИНАЧЕ "",3""
	|	КОНЕЦ КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя.Раздел		КАК Раздел,
	|	ТПоказателя.Графа		КАК Графа
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		В (&РазделР11, &РазделР12)
	|	И ТПоказателя.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя.Графа		= &НомерГрафы
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки,
	|	Раздел
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Снилс	КАК Снилс,
	|	ВТ_310.Фамилия	КАК Фамилия,
	|	ВТ_310.Отчет	КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_322.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_322.С190		КАК Категория,
	|	ВТ_322.Мес		КАК Мес,
	|	ВТ_322.С210		КАК ПоказательР3
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_322 КАК ВТ_322
	|		ПО ВТ_310.Ключ = ВТ_322.Ключ
	|			И (ВТ_322.Мес = &НомерМесяца)
	|			И НЕ (ВТ_322.С210 = 0)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки,
	|	Категория
	|ИТОГИ
	|	СУММА(ПоказательР3)
	|ПО
	|	ОБЩИЕ";
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "С210", ?(СтрокаПоказателя = "040", "С200", "С210"));	
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1	= РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаР3	= РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ВыборкаР1НеПустая = ВыборкаР1.Следующий();
	ВыборкаР3НеПустая = ВыборкаР3.Следующий();
	
	Р1Сум		= ?(ВыборкаР1НеПустая, ВыборкаР1.ПоказательР1, 0);
	Р3Сум		= ?(ВыборкаР3НеПустая, ВыборкаР3.ПоказательР3, 0);
	Погрешность	= 0;
	
	Если Р1Сум	= Р3Сум Тогда
		// в случае выполнения соотношения проверка завершается как неявная
		Возврат;
	КонецЕсли;
	
	ЗарегистрироватьФормулу2020(Настройки);
	Счетчик = 1;
	
	Выборка = ВыборкаР1.Выбрать();
	Пока Выборка.Следующий() Цикл
		ИменаПоказателей = Новый Структура("ПоказательР1", Выборка.Раздел + "М1" + Выборка.Строка_ 
			+ Выборка.Графа + "_");
		ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
	КонецЦикла;
	
	Если ВыборкаР3НеПустая Тогда
		Выборка	= ВыборкаР3.Выбрать();
		Погрешность = Погрешность + 0.005 * Выборка.Количество();
		Пока Выборка.Следующий() И Счетчик <= 1000 Цикл
			Показатели.ПоказательР3.Дополнение = "" + Выборка.Мес + " мес., кат. " + Выборка.Категория 
				+ ", " + Выборка.Фамилия;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР3);
			Счетчик = Счетчик + 1;
		КонецЦикла;
	КонецЕсли;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = Р3Сум;
	ДополнитьНастройки2020(Настройки);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки	, "%1", Р1Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%2", Р3Сум);
	Настройки.Расшифровка	= СтрЗаменить(Настройки.Расшифровка			, "%3", Погрешность);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_1

Процедура ПроверитьКС2020_1_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.1';
													|en = '1.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.1)';
													|en = 'Проверка Раздела 1 (КС 1.1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.050 Р.1 = стр.050 Р.1 предыдущего отчетного периода ';
			|en = 'Сумма страховых взносов в стр.050 Р.1 = стр.050 Р.1 предыдущего отчетного периода '") +
		НСтр("ru = '+ стр.051 + стр.052 + стр.053 Р.1';
			|en = '+ стр.051 + стр.052 + стр.053 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("050");
	МассивСтрок.Добавить("051");
	МассивСтрок.Добавить("052");
	МассивСтрок.Добавить("053");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010004001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.2';
													|en = '1.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.2)';
													|en = 'Проверка Раздела 1 (КС 1.2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.090 Р.1 = стр.090 Р.1 предыдущего отчетного периода ';
			|en = 'Сумма страховых взносов в стр.090 Р.1 = стр.090 Р.1 предыдущего отчетного периода '") +
		НСтр("ru = '+ стр.091 + стр.092 + стр.093 Р.1 по каждому значению стр.080 Р.1';
			|en = '+ стр.091 + стр.092 + стр.093 Р.1 по каждому значению стр.080 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по КБК %4';
													|en = '%1 = %2 Итог [%3] по КБК %4'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("090");
	МассивСтрок.Добавить("091");
	МассивСтрок.Добавить("092");
	МассивСтрок.Добавить("093");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П00001М208001_");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.3';
													|en = '1.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.3)';
													|en = 'Проверка Раздела 1 (КС 1.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в (стр.110 - стр.120) Р.1 = (стр.110 - стр.120) Р.1 предыдущего ';
			|en = 'Сумма страховых взносов в (стр.110 - стр.120) Р.1 = (стр.110 - стр.120) Р.1 предыдущего '") +
		НСтр("ru = 'отчетного периода + (стр.111 - стр.121) + (стр.112 - стр.122) + (стр.113 - стр.123) Р.1';
			|en = 'отчетного периода + (стр.111 - стр.121) + (стр.112 - стр.122) + (стр.113 - стр.123) Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивСтрок = Новый Массив;
	МассивСтрок.Добавить("110");
	МассивСтрок.Добавить("111");
	МассивСтрок.Добавить("112");
	МассивСтрок.Добавить("113");
	МассивСтрок.Добавить("120");
	МассивСтрок.Добавить("121");
	МассивСтрок.Добавить("122");
	МассивСтрок.Добавить("123");
	
	Настройки.Вставить("МассивСтрок", МассивСтрок);
	Настройки.Вставить("СтрокаКБК"	, "П000010010001");
	
	ПроверитьКС2020_0_24_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.4';
													|en = '1.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.4)';
													|en = 'Проверка Раздела 1 (КС 1.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.030 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.030 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003001");
	Настройки.Вставить("ПоказательП1"	, "П011110006001");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.5';
													|en = '1.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.5)';
													|en = 'Проверка Раздела 1 (КС 1.5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.031 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.031 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003101");
	Настройки.Вставить("ПоказательП1"	, "П011110006002");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_6(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.6';
													|en = '1.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.6)';
													|en = 'Проверка Раздела 1 (КС 1.6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.032 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.032 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003201");
	Настройки.Вставить("ПоказательП1"	, "П011110006003");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_7(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.7';
													|en = '1.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.7)';
													|en = 'Проверка Раздела 1 (КС 1.7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.033 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.033 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.1 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010003301");
	Настройки.Вставить("ПоказательП1"	, "П011110006004");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.8';
													|en = '1.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.8)';
													|en = 'Проверка Раздела 1 (КС 1.8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.050 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.050 Р.1 (всего) = сумма всех гр.1 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005001");
	Настройки.Вставить("ПоказательП1"	, "П011120006001");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.9';
													|en = '1.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.9)';
													|en = 'Проверка Раздела 1 (КС 1.9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.051 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.051 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005101");
	Настройки.Вставить("ПоказательП1"	, "П011120006002");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.10';
													|en = '1.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.10)';
													|en = 'Проверка Раздела 1 (КС 1.10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.052 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.052 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005201");
	Настройки.Вставить("ПоказательП1"	, "П011120006003");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_11(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.11';
													|en = '1.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.11)';
													|en = 'Проверка Раздела 1 (КС 1.11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.053 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.053 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.060 подр.1.2 прил.1 Р.1 '"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П000010005301");
	Настройки.Вставить("ПоказательП1"	, "П011120006004");
	ПроверитьКС2020_1_11_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_11_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаП1"		, "060");
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= &СтрокаП1
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_12а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.12а';
													|en = '1.12а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.12а)';
													|en = 'Проверка Раздела 1 (КС 1.12а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 ';
			|en = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160';
			|en = 'подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_12б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.12б';
													|en = '1.12б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.12б)';
													|en = 'Проверка Раздела 1 (КС 1.12б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 ';
			|en = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160';
			|en = 'подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_13а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.13а';
													|en = '1.13а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.13а)';
													|en = 'Проверка Раздела 1 (КС 1.13а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_13б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.13б';
													|en = '1.13б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.13б)';
													|en = 'Проверка Раздела 1 (КС 1.13б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_14а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.14а';
													|en = '1.14а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.14а)';
													|en = 'Проверка Раздела 1 (КС 1.14а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_14б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.14б';
													|en = '1.14б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.14б)';
													|en = 'Проверка Раздела 1 (КС 1.14б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_15а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.15а';
													|en = '1.15а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.15а)';
													|en = 'Проверка Раздела 1 (КС 1.15а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202131061010160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_15б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.15б';
													|en = '1.15б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.15б)';
													|en = 'Проверка Раздела 1 (КС 1.15б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 1 и КБК в стр.060 Р.1 = 182 102 02131 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202131061020160");
	Настройки.Вставить("С001"			, "1");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_16а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.16а';
													|en = '1.16а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.16а)';
													|en = 'Проверка Раздела 1 (КС 1.16а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 ';
			|en = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.1 прил.1 Р.1 при стр.001 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160';
			|en = 'подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105001_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_16б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.16б';
													|en = '1.16б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.16б)';
													|en = 'Проверка Раздела 1 (КС 1.16б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 ';
			|en = 'Сумма страховых взносов в стр.070 Р.1 = сумма всех гр.1 стр.050 подр.1.3.2 прил.1 Р.1 при стр.001 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160';
			|en = 'подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107001_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105001_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_17а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.17а';
													|en = '1.17а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.17а)';
													|en = 'Проверка Раздела 1 (КС 1.17а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105002_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_17б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.17б';
													|en = '1.17б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.17б)';
													|en = 'Проверка Раздела 1 (КС 1.17б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.071 Р.1 (1 месяц ОП) = сумма всех гр.2 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107101_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105002_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_18а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.18а';
													|en = '1.18а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.18а)';
													|en = 'Проверка Раздела 1 (КС 1.18а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105003_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_18б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.18б';
													|en = '1.18б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.18б)';
													|en = 'Проверка Раздела 1 (КС 1.18б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.072 Р.1 (2 месяц ОП) = сумма всех гр.3 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107201_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105003_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.19а';
													|en = '1.19а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.19а)';
													|en = 'Проверка Раздела 1 (КС 1.19а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.1 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160';
			|en = 'при стр.001 подр.1.3.1 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1010 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11131М105004_");
	Настройки.Вставить("КБК"			, "18210202132061010160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.19б';
													|en = '1.19б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.19б)';
													|en = 'Проверка Раздела 1 (КС 1.19б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 ';
			|en = 'Сумма страховых взносов в стр.073 Р.1 (3 месяц ОП) = сумма всех гр.4 стр.050 подр.1.3.2 прил.1 Р.1 '") +
		НСтр("ru = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160';
			|en = 'при стр.001 подр.1.3.2 прил.1 Р.1 = 2 и КБК в стр.060 Р.1 = 182 102 02132 06 1020 160'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"	, "П00001М107301_");
	Настройки.Вставить("ПоказательП1"	, "П11132М105004_");
	Настройки.Вставить("КБК"			, "18210202132061020160");
	Настройки.Вставить("С001"			, "2");
	ПроверитьКС2020_1_19_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_19_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП1", Настройки.ПоказательП1);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП1"		, Лев(Настройки.ПоказательП1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП1"			, Сред(Настройки.ПоказательП1, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("НомерПодраздела"	, ?(Лев(Настройки.ПоказательП1, 6) = "П11131", ",2", ",3"));
	Запрос.УстановитьПараметр("КБК"				, Настройки.КБК);
	Запрос.УстановитьПараметр("С001"			, Настройки.С001);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКБК
	|		ПО ТПоказателя.СтрокаТЧ = ТКБК.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКБК.Раздел			= ""П00001""
	|	И ТКБК.Строка_			= ""060""
	|	И ТКБК.Мес				= &ОтчетныйМесяц
	|	И ТКБК.Значение_		= &КБК
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница + &НомерПодраздела		КАК Страница,
	|	ТПоказателя.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТКода001
	|			ПО ТПоказателя.Страница = ТКода001.Страница
	|			И ТПоказателя.СтрокаТЧ = ТКода001.СтрокаТЧ
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП1
	|	И ТПоказателя.Строка_	= ""050""
	|	И ТПоказателя.Графа		= &ГрафаП1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТКода001.Раздел		= &РазделП1
	|	И ТКода001.Строка_		= ""001""
	|	И ТКода001.Мес			= &ОтчетныйМесяц
	|	И ТКода001.Значение_	= &С001
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательП1)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП1 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П1Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП1.Следующий() Цикл
		П1Сум = ВыборкаП1.ПоказательП1;
		Выборка = ВыборкаП1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП1);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П1Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П1Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_20(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.20';
													|en = '1.20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.20)';
													|en = 'Проверка Раздела 1 (КС 1.20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.110 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.110 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.1 стр.090 прил.2 Р.1 = 1';
			|en = 'если гр.1 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_21(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.21';
													|en = '1.21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.21)';
													|en = 'Проверка Раздела 1 (КС 1.21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.111 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.111 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.3 стр.090 прил.2 Р.1 = 1';
			|en = 'если гр.3 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_22(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.22';
													|en = '1.22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.22)';
													|en = 'Проверка Раздела 1 (КС 1.22)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.112 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.112 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.5 стр.090 прил.2 Р.1 = 1';
			|en = 'если гр.5 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.23';
													|en = '1.23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.23)';
													|en = 'Проверка Раздела 1 (КС 1.23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.113 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.113 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.7 стр.090 прил.2 Р.1 = 1';
			|en = 'если гр.7 стр.090 прил.2 Р.1 = 1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010011301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "1");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.24';
													|en = '1.24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.24)';
													|en = 'Проверка Раздела 1 (КС 1.24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.120 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.120 Р.1 (всего) = сумма всех гр.2 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.1 стр.090 прил.2 Р.1 = 2';
			|en = 'если гр.1 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012001");
	Настройки.Вставить("ПоказательП2"		, "П000120009002");
	Настройки.Вставить("ГрафаПризнака	"	, "01");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.25';
													|en = '1.25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.25)';
													|en = 'Проверка Раздела 1 (КС 1.25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.121 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.121 Р.1 (1 месяц ОП) = сумма всех гр.4 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.3 стр.090 прил.2 Р.1 = 2';
			|en = 'если гр.3 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012101");
	Настройки.Вставить("ПоказательП2"		, "П000120009004");
	Настройки.Вставить("ГрафаПризнака	"	, "03");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_26(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.26';
													|en = '1.26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.26)';
													|en = 'Проверка Раздела 1 (КС 1.26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.122 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.122 Р.1 (2 месяц ОП) = сумма всех гр.6 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.5 стр.090 прил.2 Р.1 = 2';
			|en = 'если гр.5 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012201");
	Настройки.Вставить("ПоказательП2"		, "П000120009006");
	Настройки.Вставить("ГрафаПризнака	"	, "05");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_27(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.27';
													|en = '1.27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.27)';
													|en = 'Проверка Раздела 1 (КС 1.27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов в стр.123 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 ';
			|en = 'Сумма страховых взносов в стр.123 Р.1 (3 месяц ОП) = сумма всех гр.8 стр.090 прил.2 Р.1 '") +
		НСтр("ru = 'если гр.7 стр.090 прил.2 Р.1 = 2';
			|en = 'если гр.7 стр.090 прил.2 Р.1 = 2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР1"		, "П000010012301");
	Настройки.Вставить("ПоказательП2"		, "П000120009008");
	Настройки.Вставить("ГрафаПризнака	"	, "07");
	Настройки.Вставить("ЗначениеПризнака"	, "2");
	ПроверитьКС2020_1_27_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_27_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР1", Настройки.ПоказательР1);
	ИменаПоказателей.Вставить("ПоказательП2", Настройки.ПоказательП2);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделП2"		, Лев(Настройки.ПоказательП2, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.ПоказательР1, 9, 3));
	Запрос.УстановитьПараметр("ГрафаП2"			, Сред(Настройки.ПоказательП2, 12, 2));
	Запрос.УстановитьПараметр("ГрафаПр"			, Настройки.ГрафаПризнака);
	Запрос.УстановитьПараметр("Признак"			, Настройки.ЗначениеПризнака);	
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательР1,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя
	|ГДЕ
	|	ТПоказателя.Раздел		= ""П00001""
	|	И ТПоказателя.Строка_	= &СтрокаР1
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|
	|ИТОГИ
	|	СУММА(ПоказательР1)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя.Значение_ КАК Число)	КАК ПоказательП2,
	|	ТПоказателя.Отчет		КАК Отчет,
	|	ТПоказателя.Страница	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя,
	|	ВТ_100 КАК ТПризнака
	|ГДЕ
	|	ТПоказателя.Раздел		= &РазделП2
	|	И ТПоказателя.Строка_	= ""090""
	|	И ТПоказателя.Графа		= &ГрафаП2
	|	И ТПоказателя.Мес		= &ОтчетныйМесяц
	|	И ТПризнака.Раздел		= &РазделП2
	|	И ТПризнака.Строка_		= ""090""
	|	И ТПризнака.Графа		= &ГрафаПр
	|	И ТПризнака.Мес			= &ОтчетныйМесяц
	|	И ТПризнака.Значение_	= &Признак
	|
	|ИТОГИ
	|	СУММА(ПоказательП2)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР1 = РезультатЗапроса[0].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаП2 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	Р1Сум	= 0;
	П2Сум	= 0;
		
	Пока ВыборкаР1.Следующий() Цикл
		Р1Сум = ВыборкаР1.ПоказательР1;
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР1);
		КонецЦикла;
	КонецЦикла;
		
	Пока ВыборкаП2.Следующий() Цикл
		П2Сум = ВыборкаП2.ПоказательП2;
		Выборка = ВыборкаП2.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательП2);
		КонецЦикла;
	КонецЦикла;
	
	Настройки.ЭтоОшибка		= НЕ Р1Сум = П2Сум;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки	, Р1Сум, П2Сум);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_1

#Область Проверки_Подраздела_1_1

Процедура ПроверитьКС2020_1_28(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.28';
													|en = '1.28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.28)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.28)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 ';
			|en = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_29(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.29';
													|en = '1.29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.29)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.29)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.2 стр.010 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.2 стр.010 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_30(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.30';
													|en = '1.30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.30)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.30)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.3 стр.010 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.3 стр.010 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_31(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.31';
													|en = '1.31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.31)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.31)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.4 стр.010 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.4 стр.010 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110001004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_32(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.32';
													|en = '1.32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.32)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.32)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.010 ';
			|en = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду тарифа (%3)';
													|en = '%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110001001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_33(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.33';
													|en = '1.33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.33)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.33)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002001");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_34(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.34';
													|en = '1.34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.34)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.34)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц в гр.2 стр.020 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.021 ';
			|en = 'Количество физических лиц в гр.2 стр.020 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002002");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_35(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.35';
													|en = '1.35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.35)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.35)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц в гр.3 стр.020 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.021 ';
			|en = 'Количество физических лиц в гр.3 стр.020 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002003");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_36(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.36';
													|en = '1.36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.36)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.36)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц в гр.4 стр.020 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.021 ';
			|en = 'Количество физических лиц в гр.4 стр.020 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110002004");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, ""П00011"")
	|	И (ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа = &ГрафаР12
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + "",1""	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_37(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.37';
													|en = '1.37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.37)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.37)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду тарифа (%3)';
													|en = '%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_38(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.38';
													|en = '1.38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.38)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.38)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003001");
	Настройки.Вставить("ПоказательР12", "П011110002001");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_39(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.39';
													|en = '1.39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.39)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.39)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.030 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.1 ';
			|en = 'Сумма выплат в гр.2 стр.030 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003002");
	Настройки.Вставить("ПоказательР12", "П011110002002");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_40(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.40';
													|en = '1.40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.40)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.40)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.030 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.1 ';
			|en = 'Сумма выплат в гр.3 стр.030 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003003");
	Настройки.Вставить("ПоказательР12", "П011110002003");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_41(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.41';
													|en = '1.41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.41)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.41)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.030 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.1 ';
			|en = 'Сумма выплат в гр.4 стр.030 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110003004");
	Настройки.Вставить("ПоказательР12", "П011110002004");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_42(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.42';
													|en = '1.42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.42)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.42)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.021 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.021 подр.1.1 прил.1 Р.1 >= гр.1 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду тарифа (%3)';
													|en = '%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011110002101");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_42_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Мес		КАК Мес,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ТПоказателя1.Графа	= ""01""
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Мес";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_43(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.43';
													|en = '1.43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.43)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.43)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 прил.1 Р.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 прил.1 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 Р.1 по каждому значению ';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100030");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_44(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.44';
													|en = '1.44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.44)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.44)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.1 прил.1 Р.1 = гр.1 стр.040 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.1 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.1 прил.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.1 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100040");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_45(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.45';
													|en = '1.45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.45)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.45)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.1 прил.1 Р.1 = гр.1 стр.045 ';
			|en = 'Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.1 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.1 прил.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.1 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов к вычету';
														|en = 'Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100045");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_46(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.46';
													|en = '1.46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.46)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.46)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.030 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.1 стр.040 подр.1.1 прил.1 Р.1 - гр.1 стр.045 подр.1.1 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.1 стр.040 подр.1.1 прил.1 Р.1 - гр.1 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110003001");
	Настройки.Вставить("ПоказательР13", "П011110004001");
	Настройки.Вставить("ПоказательР14", "П011110004501");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_47(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.47';
													|en = '1.47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.47)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.47)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.1 ';
			|en = 'База страховых взносов в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.2 стр.040 подр.1.1 прил.1 Р.1 - гр.2 стр.045 подр.1.1 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.2 стр.040 подр.1.1 прил.1 Р.1 - гр.2 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110003002");
	Настройки.Вставить("ПоказательР13", "П011110004002");
	Настройки.Вставить("ПоказательР14", "П011110004502");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_48(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.48';
													|en = '1.48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.48)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.48)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.1 ';
			|en = 'База страховых взносов в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.3 стр.040 подр.1.1 прил.1 Р.1 - гр.3 стр.045 подр.1.1 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.3 стр.040 подр.1.1 прил.1 Р.1 - гр.3 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110003003");
	Настройки.Вставить("ПоказательР13", "П011110004003");
	Настройки.Вставить("ПоказательР14", "П011110004503");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_49(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.49';
													|en = '1.49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.49)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.49)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.1 ';
			|en = 'База страховых взносов в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.4 стр.040 подр.1.1 прил.1 Р.1 - гр.4 стр.045 подр.1.1 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.4 стр.040 подр.1.1 прил.1 Р.1 - гр.4 стр.045 подр.1.1 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110003004");
	Настройки.Вставить("ПоказательР13", "П011110004004");
	Настройки.Вставить("ПоказательР14", "П011110004504");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_49_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя4"	, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3, &СтрокаПоказателя4)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО ТПоказателя1.Страница = ТПоказателя4.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТПоказателя4.Строка_	= &СтрокаПоказателя4
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность				= ВыборкаР1.ПоказательР12 - ВыборкаР1.ПоказательР13 - ВыборкаР1.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, ВыборкаР1.ПоказательР12, 
			ВыборкаР1.ПоказательР13, ВыборкаР1.ПоказательР14, Разность, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_50(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.50';
													|en = '1.50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.50)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.50)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам с начала периода в гр.1 стр.051 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.021 ';
			|en = 'База по страховым взносам с начала периода в гр.1 стр.051 подр.1.1 прил.1 Р.1 > 0, если гр.1 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005101");
	Настройки.Вставить("ПоказательР12", "П011110002101");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_51(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.51';
													|en = '1.51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.51)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.51)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.2 стр.051 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.021 ';
			|en = 'База по страховым взносам в гр.2 стр.051 подр.1.1 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005102");
	Настройки.Вставить("ПоказательР12", "П011110002102");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_52(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.52';
													|en = '1.52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.52)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.52)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.3 стр.051 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.021 ';
			|en = 'База по страховым взносам в гр.3 стр.051 подр.1.1 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005103");
	Настройки.Вставить("ПоказательР12", "П011110002103");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_53(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.53';
													|en = '1.53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.53)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.53)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.4 стр.051 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.021 ';
			|en = 'База по страховым взносам в гр.4 стр.051 подр.1.1 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.021 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005104");
	Настройки.Вставить("ПоказательР12", "П011110002104");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_53_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|	И ТПоказателя1.Мес		= &ОтчетныйМесяц
	|	И ТПоказателя2.Раздел	= &Раздел
	|	И ТПоказателя2.Строка_	= &СтрокаР12
	|	И ТПоказателя2.Графа	= &ГрафаР12
	|	И ТПоказателя2.Мес		= &ОтчетныйМесяц
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСуммР11	= Новый Массив;
		МассивСуммР12	= Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			МассивСуммР11.Добавить(Выборка.ПоказательР11);
			МассивСуммР12.Добавить(Выборка.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0 ;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СтрСоединить(МассивСуммР11, " + "), 
			ВыборкаТ.ПоказательР11, СтрСоединить(МассивСуммР12, " + "), ВыборкаТ.ПоказательР12, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_54(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.54';
													|en = '1.54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.54)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.54)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 >= гр.1 стр.051 ';
			|en = 'База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 >= гр.1 стр.051 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005001");
	Настройки.Вставить("ПоказательР12", "П011110005101");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_55(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.55';
													|en = '1.55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.55)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.55)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.051 ';
			|en = 'База по страховым взносам в гр.2 стр.050 подр.1.1 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.051 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005002");
	Настройки.Вставить("ПоказательР12", "П011110005102");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_56(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.56';
													|en = '1.56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.56)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.56)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.051 ';
			|en = 'База по страховым взносам в гр.3 стр.050 подр.1.1 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.051 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005003");
	Настройки.Вставить("ПоказательР12", "П011110005103");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_57(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.57';
													|en = '1.57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.57)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.57)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.051 ';
			|en = 'База по страховым взносам в гр.4 стр.050 подр.1.1 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.051 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110005004");
	Настройки.Вставить("ПоказательР12", "П011110005104");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_58(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.58';
													|en = '1.58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.58)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.58)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.050 ';
			|en = 'База по страховым взносам с начала периода в гр.1 стр.050 подр.1.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100050");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_59(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.59';
													|en = '1.59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.59)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.59)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.061 подр.1.1 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.061 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 + гр.1 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 + гр.1 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006001");
	Настройки.Вставить("ПоказательР12", "П011110006101");
	Настройки.Вставить("ПоказательР13", "П011110006201");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_60(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.60';
													|en = '1.60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.60)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.60)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в гр.2 стр.060 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.061 подр.1.1 ';
			|en = 'Страховые взносы в гр.2 стр.060 подр.1.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.061 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 + гр.2 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 + гр.2 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006002");
	Настройки.Вставить("ПоказательР12", "П011110006102");
	Настройки.Вставить("ПоказательР13", "П011110006202");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_61(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.61';
													|en = '1.61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.61)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.61)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в гр.3 стр.060 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.061 подр.1.1 ';
			|en = 'Страховые взносы в гр.3 стр.060 подр.1.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.061 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 + гр.3 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 + гр.3 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006003");
	Настройки.Вставить("ПоказательР12", "П011110006103");
	Настройки.Вставить("ПоказательР13", "П011110006203");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_62(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.62';
													|en = '1.62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.62)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.62)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в гр.4 стр.060 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.061 подр.1.1 ';
			|en = 'Страховые взносы в гр.4 стр.060 подр.1.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.061 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 + гр.4 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 + гр.4 стр.062 подр.1.1 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 = %2 + %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011110006004");
	Настройки.Вставить("ПоказательР12", "П011110006104");
	Настройки.Вставить("ПоказательР13", "П011110006204");
	ПроверитьКС2020_1_62_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_62_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя1"	, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя2"	, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаПоказателя3"	, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"				, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.Строка_ КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (&Раздел, &РазделТарифа)
	|	И (ВТ_100.Строка_	В (&СтрокаПоказателя1, &СтрокаПоказателя2, &СтрокаПоказателя3)
	|	И ВТ_100.Графа		= &Графа
	|	ИЛИ ВТ_100.Строка_	= &СтрокаТарифа И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя1.Страница = ТТарифа.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО ТПоказателя1.Страница = ТПоказателя2.Страница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО ТПоказателя1.Страница = ТПоказателя3.Страница
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаПоказателя1
	|	И ТПоказателя2.Строка_	= &СтрокаПоказателя2
	|	И ТПоказателя3.Строка_	= &СтрокаПоказателя3
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаР1 = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаР1.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаР1.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		РезультатСложения		= ВыборкаР1.ПоказательР12 + ВыборкаР1.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаР1.ПоказательР11 = РезультатСложения;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаР1.ПоказательР11, 
			ВыборкаР1.ПоказательР12, ВыборкаР1.ПоказательР13, РезультатСложения, ВыборкаР1.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаР1.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_63(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.63';
													|en = '1.63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.63)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.63)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.060 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.1 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100060");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_64(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.64';
													|en = '1.64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.64)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.64)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.061 подр.1.1 прил.1 Р.1 = гр.1 стр.061 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.061 подр.1.1 прил.1 Р.1 = гр.1 стр.061 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.061 подр.1.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.061 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100061");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_65(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.65';
													|en = '1.65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.65)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 1.65)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.062 подр.1.1 прил.1 Р.1 = гр.1 стр.062 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.062 подр.1.1 прил.1 Р.1 = гр.1 стр.062 '") +
		НСтр("ru = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.062 подр.1.1 ';
			|en = 'подр.1.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.062 подр.1.1 '") +
		НСтр("ru = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111100062");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_65_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, ",1");
	Запрос.УстановитьПараметр("РазделТарифа"		, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"		, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ТТарифа.Значение_		КАК КодТарифа,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.Графа		КАК Графа,
	|	ТПоказателя1.Мес		КАК Мес,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК Ключ,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12
	|ИЗ
	|	ВТ_100 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_100 КАК ТТарифа
	|			ПО ТПоказателя1.Мес = ТТарифа.Мес
	|			И ТПоказателя1.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя1.Раздел		= &Раздел
	|	И ТПоказателя1.Строка_	= &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|	И ТПоказателя1.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|	И ТТарифа.Раздел		= &РазделТарифа
	|	И ТТарифа.Строка_		= &СтрокаТарифа
	|	И ТТарифа.Мес			В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Графа,
	|	Мес Убыв,
	|	Страница
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	КодТарифа,
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаТ.ПоказательР12, 
			СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_2

Процедура ПроверитьКС2020_1_66(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.66';
													|en = '1.66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.66)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.66)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 ';
			|en = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_67(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.67';
													|en = '1.67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.67)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.67)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.2 стр.010 подр.1.2 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.2 стр.010 подр.1.2 прил.1 Р.1 (1 месяц ОП) >= гр.2 стр.020 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_68(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.68';
													|en = '1.68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.68)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.68)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.3 стр.010 подр.1.2 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.3 стр.010 подр.1.2 прил.1 Р.1 (2 месяц ОП) >= гр.3 стр.020 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_69(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.69';
													|en = '1.69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.69)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.69)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц в гр.4 стр.010 подр.1.2 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 ';
			|en = 'Количество застрахованных лиц в гр.4 стр.010 подр.1.2 прил.1 Р.1 (3 месяц ОП) >= гр.4 стр.020 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)';
													|en = '%1 Итог [%2] >= %3 Итог [%4] по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120001004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2020_1_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_70(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.70';
													|en = '1.70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.70)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.70)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.010 ';
			|en = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 подр.1.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду тарифа (%3)';
													|en = '%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных';
														|en = 'Ошибочное количество застрахованных'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120001001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_71(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.71';
													|en = '1.71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.71)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.71)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.020 подр.1.2 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1';
			|en = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду тарифа (%3)';
													|en = '%1 >= %2 по коду тарифа (%3)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П011120002001");
	ПроверитьКС2020_1_42_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_72(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.72';
													|en = '1.72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.72)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.72)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.2 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 > 0, если гр.1 стр.020 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003001");
	Настройки.Вставить("ПоказательР12", "П011120002001");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_73(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.73';
													|en = '1.73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.73)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.73)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.030 подр.1.2 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.2 ';
			|en = 'Сумма выплат в гр.2 стр.030 подр.1.2 прил.1 Р.1 (1 месяц ОП) > 0, если гр.2 стр.020 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003002");
	Настройки.Вставить("ПоказательР12", "П011120002002");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_74(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.74';
													|en = '1.74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.74)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.74)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.030 подр.1.2 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.2 ';
			|en = 'Сумма выплат в гр.3 стр.030 подр.1.2 прил.1 Р.1 (2 месяц ОП) > 0, если гр.3 стр.020 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003003");
	Настройки.Вставить("ПоказательР12", "П011120002003");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_75(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.75';
													|en = '1.75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.75)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.75)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.030 подр.1.2 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.2 ';
			|en = 'Сумма выплат в гр.4 стр.030 подр.1.2 прил.1 Р.1 (3 месяц ОП) > 0, если гр.4 стр.020 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1';
			|en = 'прил.1 Р.1 > 0 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)';
													|en = '%1 Итог [%2] > 0 если %3 Итог [%4] > 0 по коду тарифа (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120003004");
	Настройки.Вставить("ПоказательР12", "П011120002004");
	ПроверитьКС2020_1_53_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_76(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.76';
													|en = '1.76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.76)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.76)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 прил.1 Р.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.030 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 прил.1 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.2 прил.1 Р.1 по каждому значению ';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200030");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_77(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.77';
													|en = '1.77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.77)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.77)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.2 прил.1 Р.1 = гр.1 стр.040 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.040 подр.1.2 прил.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.2 прил.1 ';
			|en = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 подр.1.2 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200040");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_78(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.78';
													|en = '1.78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.78)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.78)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.2 прил.1 Р.1 = гр.1 стр.045 ';
			|en = 'Сумма расходов к вычету с начала периода в гр.1 стр.045 подр.1.2 прил.1 Р.1 = гр.1 стр.045 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.2 прил.1 ';
			|en = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.045 подр.1.2 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов к вычету';
														|en = 'Ошибочная сумма расходов к вычету'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200045");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_79(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.79';
													|en = '1.79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.79)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.79)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.050 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.050 подр.1.2 прил.1 Р.1 = гр.1 стр.030 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.1 стр.040 подр.1.2 прил.1 Р.1 - гр.1 стр.045 подр.1.2 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.1 стр.040 подр.1.2 прил.1 Р.1 - гр.1 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005001");
	Настройки.Вставить("ПоказательР12", "П011120003001");
	Настройки.Вставить("ПоказательР13", "П011120004001");
	Настройки.Вставить("ПоказательР14", "П011120004501");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_80(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.80';
													|en = '1.80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.80)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.80)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.050 подр.1.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.2 ';
			|en = 'База страховых взносов в гр.2 стр.050 подр.1.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.030 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.2 стр.040 подр.1.2 прил.1 Р.1 - гр.2 стр.045 подр.1.2 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.2 стр.040 подр.1.2 прил.1 Р.1 - гр.2 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005002");
	Настройки.Вставить("ПоказательР12", "П011120003002");
	Настройки.Вставить("ПоказательР13", "П011120004002");
	Настройки.Вставить("ПоказательР14", "П011120004502");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_81(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.81';
													|en = '1.81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.81)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.81)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.050 подр.1.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.2 ';
			|en = 'База страховых взносов в гр.3 стр.050 подр.1.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.030 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.3 стр.040 подр.1.2 прил.1 Р.1 - гр.3 стр.045 подр.1.2 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.3 стр.040 подр.1.2 прил.1 Р.1 - гр.3 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005003");
	Настройки.Вставить("ПоказательР12", "П011120003003");
	Настройки.Вставить("ПоказательР13", "П011120004003");
	Настройки.Вставить("ПоказательР14", "П011120004503");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_82(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.82';
													|en = '1.82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.82)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.82)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.050 подр.1.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.2 ';
			|en = 'База страховых взносов в гр.4 стр.050 подр.1.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.030 подр.1.2 '") +
		НСтр("ru = 'прил.1 Р.1 - гр.4 стр.040 подр.1.2 прил.1 Р.1 - гр.4 стр.045 подр.1.2 прил.1 Р.1 по каждому значению ';
			|en = 'прил.1 Р.1 - гр.4 стр.040 подр.1.2 прил.1 Р.1 - гр.4 стр.045 подр.1.2 прил.1 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.1 Р.1';
			|en = 'поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду тарифа (%6)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П011120005004");
	Настройки.Вставить("ПоказательР12", "П011120003004");
	Настройки.Вставить("ПоказательР13", "П011120004004");
	Настройки.Вставить("ПоказательР14", "П011120004504");
	ПроверитьКС2020_1_49_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_83(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.83';
													|en = '1.83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.83)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.83)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.2 прил.1 Р.1 = гр.1 стр.060 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.060 подр.1.2 прил.1 Р.1 = гр.1 стр.060 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 ';
			|en = 'подр.1.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду тарифа (%4)';
													|en = '%1 = %2 Итог [%3] по коду тарифа (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0111200060");
	ПроверитьКС2020_1_65_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_84(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.84';
													|en = '1.84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.84)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 1.84)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 ';
			|en = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 подр.1.2 прил.1 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 '") +
		НСтр("ru = 'подр.1.2 прил.1 Р.1 х соответствующий значению поля 001 прил.1 Р.1 тариф страховых взносов ± ';
			|en = 'подр.1.2 прил.1 Р.1 х соответствующий значению поля 001 прил.1 Р.1 тариф страховых взносов ± '") +
		НСтр("ru = '(гр.2 + гр.3 + гр.4) стр.020 подр.1.2 прил.1 Р.1 / 3 х 0,005 руб.';
			|en = '(гр.2 + гр.3 + гр.4) стр.020 подр.1.2 прил.1 Р.1 / 3 х 0,005 руб.'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)';
													|en = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	ПроверитьКС2020_1_84_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_84_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		В (""П01112"", ""П00011"")
	|	И (ВТ_100.Строка_	В (""020"", ""050"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""00""		КАК Раздел,
	|	ТПоказателя.Страница + "",1""	КАК Страница,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""020""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|ГДЕ
	|	ТПоказателя.Строка_		В (""020"", ""050"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Ставка = ДанныеКС.Ставки112.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2020("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", "КолвоФизлиц"));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено 
			И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_1

Процедура ПроверитьКС2020_1_85(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.85';
													|en = '1.85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.85)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.85)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.010 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 ';
			|en = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1';
			|en = 'прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_86(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.86';
													|en = '1.86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.86)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.86)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.020 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 >= гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 ';
			|en = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода по каждому значению стр.001 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1';
			|en = 'прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М102001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_86_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	Если ОтчетныйМесяц = 3 Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Мес			КАК Мес
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК КлючТарифа,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючТарифа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	КлючТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 >= Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, Разность, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_87(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.87';
													|en = '1.87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.87)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.87)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102001_");
	Настройки.Вставить("ПоказательР12", "П11131М101001_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_88(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.88';
													|en = '1.88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.88)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.88)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.020 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.1 ';
			|en = 'Сумма выплат в гр.2 стр.020 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102002_");
	Настройки.Вставить("ПоказательР12", "П11131М101002_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_89(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.89';
													|en = '1.89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.89)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.89)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.020 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.1 ';
			|en = 'Сумма выплат в гр.3 стр.020 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102003_");
	Настройки.Вставить("ПоказательР12", "П11131М101003_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_90(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.90';
													|en = '1.90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.90)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.90)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.020 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.1 ';
			|en = 'Сумма выплат в гр.4 стр.020 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.1 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М102004_");
	Настройки.Вставить("ПоказательР12", "П11131М101004_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_90_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Значение_,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК СтрокаТЧ,
	|	ВТ_100.Строка_ КАК Строка_,
	|	ВТ_100.Графа КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ВыборкаТ.ПоказательР12 > 0 И НЕ ВыборкаТ.ПоказательР11 > 0;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_91(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.91';
													|en = '1.91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.91)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.91)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 подр.1.3.1 прил.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 подр.1.3.1 прил.1 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.1 прил.1 Р.1 по каждому ';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.1 прил.1 Р.1 по каждому '") +
		НСтр("ru = 'значению поля 001 подр.1.3.1 прил.1 Р.1';
			|en = 'значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_92(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.92';
													|en = '1.92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 422 НК РФ';
													|en = 'ст 422 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.92)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.92)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.1 прил.1 Р.1 = гр.1 стр.030 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.1 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.1 прил.1 ';
			|en = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.1 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_93(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.93';
													|en = '1.93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.93)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.93)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.1 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 - гр.1 стр.030 подр.1.3.1 прил.1 Р.1';
			|en = 'подр.1.3.1 прил.1 Р.1 - гр.1 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104001_");
	Настройки.Вставить("ПоказательР12", "П11131М102001_");
	Настройки.Вставить("ПоказательР13", "П11131М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_94(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.94';
													|en = '1.94'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.94)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.94)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.040 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 ';
			|en = 'База страховых взносов в гр.2 стр.040 подр.1.3.1 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 - гр.2 стр.030 подр.1.3.1 прил.1 Р.1';
			|en = 'подр.1.3.1 прил.1 Р.1 - гр.2 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104002_");
	Настройки.Вставить("ПоказательР12", "П11131М102002_");
	Настройки.Вставить("ПоказательР13", "П11131М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_95(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.95';
													|en = '1.95'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.95)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.95)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.040 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 ';
			|en = 'База страховых взносов в гр.3 стр.040 подр.1.3.1 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 - гр.3 стр.030 подр.1.3.1 прил.1 Р.1';
			|en = 'подр.1.3.1 прил.1 Р.1 - гр.3 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104003_");
	Настройки.Вставить("ПоказательР12", "П11131М102003_");
	Настройки.Вставить("ПоказательР13", "П11131М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_96(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.96';
													|en = '1.96'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.96)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.96)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.040 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 ';
			|en = 'База страховых взносов в гр.4 стр.040 подр.1.3.1 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 - гр.4 стр.030 подр.1.3.1 прил.1 Р.1';
			|en = 'подр.1.3.1 прил.1 Р.1 - гр.4 стр.030 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11131М104004_");
	Настройки.Вставить("ПоказательР12", "П11131М102004_");
	Настройки.Вставить("ПоказательР13", "П11131М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_96_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111", ",2", ",3", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"", ""002"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= "Код исчисления " + ВыборкаТ.КодИсчисления + ?(Раздел = "П11132", ", код класса " 
			+ ВыборкаТ.КодКласса, "");
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_97(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.97';
													|en = '1.97'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.1';
														|en = 'Приложение 1, подраздел 1.3.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.97)';
													|en = 'Проверка подраздела 1.3.1 приложения 1 к Разделу 1 (КС 1.97)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.1 прил.1 Р.1 = гр.1 стр.050 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.1 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.1 прил.1 ';
			|en = 'подр.1.3.1 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.1 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 001 подр.1.3.1 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11131М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_97_код(Настройки)
	
	Перем Показатели;
	
	ОтчетныйМесяц = ДанныеКС.Мес;
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"		, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (""001"", ""002"", &СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) + ЕСТЬNULL(ВЫРАЗИТЬ(ТКод2.Значение_ КАК Строка (10)), """") КАК Ключ,
	|	ТКод1.Значение_					КАК КодИсчисления,
	|	ЕСТЬNULL(ТКод2.Значение_, """")	КАК КодКласса,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_101 КАК ТКод2
	|			ПО	ТКод1.Страница	= ТКод2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТКод2.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТКод2.Отчет
	|			И 	ТКод2.Строка_	= ""002""
	|			И 	ТКод2.Раздел	= ""П11132""
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И	ТКод1.Отчет		= ТПоказателя1.Отчет
	|			И 	ТПоказателя1.Строка_	= &СтрокаПоказателя
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Графа,
	|	Мес УБЫВ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления),
	|	МИНИМУМ(КодКласса)
	|ПО
	|	Ключ,
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		ВыборкаК = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаК.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(ВыборкаК.ПоказательР12) Тогда
				МассивСумм.Добавить(ВыборкаК.ПоказательР11);
			КонецЕсли;
			
			Выборка = ВыборкаК.Выбрать();
			Пока Выборка.Следующий() Цикл
				ИменаПоказателей = Новый Структура;
				ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа + "_");
				ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
				Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
				ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			КонецЦикла;
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность, ВыборкаТ.КодИсчисления, 
			ВыборкаТ.КодКласса);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления, ВыборкаТ.КодКласса);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Подраздела_1_3_2

Процедура ПроверитьКС2020_1_98(СтруктураРезультата)
	
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.98';
													|en = '1.98'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.98)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.98)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.2 прил.1 Р.1 >= гр.1 стр.010 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.010 подр.1.3.2 прил.1 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 подр.1.3.2 ';
			|en = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода по каждому значению поля 001 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1';
			|en = 'прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3, %4)';
													|en = '%1 >= %2 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_99(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.99';
													|en = '1.99'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.99)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.99)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.2 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 > 0 если гр.1 стр.010 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3, %4)';
													|en = '%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102001_");
	Настройки.Вставить("ПоказательР12", "П11132М101001_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_100(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.100';
													|en = '1.100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.100)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.100)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.020 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.2 ';
			|en = 'Сумма выплат в гр.2 стр.020 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) > 0 если гр.2 стр.010 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3, %4)';
													|en = '%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102002_");
	Настройки.Вставить("ПоказательР12", "П11132М101002_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_101(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.101';
													|en = '1.101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.101)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.101)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.020 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.2 ';
			|en = 'Сумма выплат в гр.3 стр.020 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) > 0 если гр.3 стр.010 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3, %4)';
													|en = '%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102003_");
	Настройки.Вставить("ПоказательР12", "П11132М101003_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_102(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.102';
													|en = '1.102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.102)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.102)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.020 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.2 ';
			|en = 'Сумма выплат в гр.4 стр.020 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) > 0 если гр.4 стр.010 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1 > 0';
			|en = 'прил.1 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3, %4)';
													|en = '%1 > 0 если %2 > 0 по коду (%3, %4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М102004_");
	Настройки.Вставить("ПоказательР12", "П11132М101004_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_103(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.103';
													|en = '1.103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.103)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.103)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 подр.1.3.2 прил.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 подр.1.3.2 прил.1 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.2 прил.1 Р.1 по каждому ';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 подр.1.3.2 прил.1 Р.1 по каждому '") +
		НСтр("ru = 'значению поля 002 подр.1.3.2 прил.1 Р.1';
			|en = 'значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4, %5)';
													|en = '%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_104(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.104';
													|en = '1.104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.104)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.104)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.2 прил.1 Р.1 = гр.1 стр.030 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 подр.1.3.2 прил.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.2 ';
			|en = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 подр.1.3.2 '") +
		НСтр("ru = 'прил.1 Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1';
			|en = 'прил.1 Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4, %5)';
													|en = '%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_105(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.105';
													|en = '1.105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.105)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.105)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.040 подр.1.3.2 прил.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 - гр.1 стр.030 подр.1.3.2 прил.1 Р.1';
			|en = 'подр.1.3.2 прил.1 Р.1 - гр.1 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104001_");
	Настройки.Вставить("ПоказательР12", "П11132М102001_");
	Настройки.Вставить("ПоказательР13", "П11132М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_106(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.106';
													|en = '1.106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.106)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.106)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.040 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 ';
			|en = 'База страховых взносов в гр.2 стр.040 подр.1.3.2 прил.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 - гр.2 стр.030 подр.1.3.2 прил.1 Р.1';
			|en = 'подр.1.3.2 прил.1 Р.1 - гр.2 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104002_");
	Настройки.Вставить("ПоказательР12", "П11132М102002_");
	Настройки.Вставить("ПоказательР13", "П11132М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_107(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.107';
													|en = '1.107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.107)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.107)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.040 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 ';
			|en = 'База страховых взносов в гр.3 стр.040 подр.1.3.2 прил.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 - гр.3 стр.030 подр.1.3.2 прил.1 Р.1';
			|en = 'подр.1.3.2 прил.1 Р.1 - гр.3 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104003_");
	Настройки.Вставить("ПоказательР12", "П11132М102003_");
	Настройки.Вставить("ПоказательР13", "П11132М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_108(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.108';
													|en = '1.108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.108)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.108)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.040 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 ';
			|en = 'База страховых взносов в гр.4 стр.040 подр.1.3.2 прил.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 - гр.4 стр.030 подр.1.3.2 прил.1 Р.1';
			|en = 'подр.1.3.2 прил.1 Р.1 - гр.4 стр.030 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5, %6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П11132М104004_");
	Настройки.Вставить("ПоказательР12", "П11132М102004_");
	Настройки.Вставить("ПоказательР13", "П11132М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_109(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.109';
													|en = '1.109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.3.2';
														|en = 'Приложение 1, подраздел 1.3.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.109)';
													|en = 'Проверка подраздела 1.3.2 приложения 1 к Разделу 1 (КС 1.109)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.2 прил.1 Р.1 = гр.1 стр.050 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.050 подр.1.3.2 прил.1 Р.1 = гр.1 стр.050 '") +
		НСтр("ru = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.2 прил.1 ';
			|en = 'подр.1.3.2 прил.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 подр.1.3.2 прил.1 '") +
		НСтр("ru = 'Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1';
			|en = 'Р.1 по каждому значению поля 002 подр.1.3.2 прил.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4, %5)';
													|en = '%1 = %2 Итог [%3] по коду (%4, %5)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1, код класса %2';
													|en = 'Код исчисления %1, код класса %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П11132М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область Проверки_Приложения_1_1

Процедура ПроверитьКС2020_1_110(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.110';
													|en = '1.110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.110)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.110)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 прил.1.1 Р.1 = гр.1 стр.020 прил.1.1 Р.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 прил.1.1 Р.1 = гр.1 стр.020 прил.1.1 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.1.1 Р.1 по каждому ';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.1.1 Р.1 по каждому '") +
		НСтр("ru = 'значению поля 001 прил.1.1 Р.1';
			|en = 'значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_111(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.111';
													|en = '1.111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.111)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.111)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.1.1 Р.1 = гр.1 стр.030 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.1.1 Р.1 = гр.1 стр.030 '") +
		НСтр("ru = 'прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.1.1 Р.1 ';
			|en = 'прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.1.1 Р.1 '") +
		НСтр("ru = 'по каждому значению поля 001 прил.1.1 Р.1';
			|en = 'по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_112(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.112';
													|en = '1.112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.112)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.112)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.040 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.040 '") +
		НСтр("ru = 'прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.1.1 Р.1 ';
			|en = 'прил.1.1 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.1.1 Р.1 '") +
		НСтр("ru = 'по каждому значению поля 001 прил.1.1 Р.1';
			|en = 'по каждому значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1040");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_113(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.113';
													|en = '1.113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.113)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.113)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.020 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.040 прил.1.1 Р.1 = гр.1 стр.020 '") +
		НСтр("ru = 'прил.1.1 Р.1 - гр.1 стр.030 прил.1.1 Р.1';
			|en = 'прил.1.1 Р.1 - гр.1 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104001_");
	Настройки.Вставить("ПоказательР12", "П00111М102001_");
	Настройки.Вставить("ПоказательР13", "П00111М103001_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_114(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.114';
													|en = '1.114'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.114)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.114)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.040 прил.1.1 Р.1 (1 месяц ОП) = гр.2 стр.020 ';
			|en = 'База страховых взносов в гр.2 стр.040 прил.1.1 Р.1 (1 месяц ОП) = гр.2 стр.020 '") +
		НСтр("ru = 'прил.1.1 Р.1 - гр.2 стр.030 прил.1.1 Р.1';
			|en = 'прил.1.1 Р.1 - гр.2 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104002_");
	Настройки.Вставить("ПоказательР12", "П00111М102002_");
	Настройки.Вставить("ПоказательР13", "П00111М103002_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_115(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.115';
													|en = '1.115'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.115)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.115)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.040 прил.1.1 Р.1 (2 месяц ОП) = гр.3 стр.020 ';
			|en = 'База страховых взносов в гр.3 стр.040 прил.1.1 Р.1 (2 месяц ОП) = гр.3 стр.020 '") +
		НСтр("ru = 'прил.1.1 Р.1 - гр.3 стр.030 прил.1.1 Р.1';
			|en = 'прил.1.1 Р.1 - гр.3 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104003_");
	Настройки.Вставить("ПоказательР12", "П00111М102003_");
	Настройки.Вставить("ПоказательР13", "П00111М103003_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_116(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.116';
													|en = '1.116'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.116)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.116)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.040 прил.1.1 Р.1 (3 месяц ОП) = гр.4 стр.020 ';
			|en = 'База страховых взносов в гр.4 стр.040 прил.1.1 Р.1 (3 месяц ОП) = гр.4 стр.020 '") +
		НСтр("ru = 'прил.1.1 Р.1 - гр.4 стр.030 прил.1.1 Р.1';
			|en = 'прил.1.1 Р.1 - гр.4 стр.030 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 Итог [%4] по коду (%5)';
													|en = '%1 = %2 - %3 Итог [%4] по коду (%5)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00111М104004_");
	Настройки.Вставить("ПоказательР12", "П00111М102004_");
	Настройки.Вставить("ПоказательР13", "П00111М103004_");
	ПроверитьКС2020_1_96_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_117(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.117';
													|en = '1.117'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 1.117)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 1.117)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.050 прил.1.1 Р.1 = гр.1 стр.050 прил.1.1 Р.1 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.050 прил.1.1 Р.1 = гр.1 стр.050 прил.1.1 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.1.1 Р.1 по каждому ';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.1.1 Р.1 по каждому '") +
		НСтр("ru = 'значению поля 001 прил.1.1 Р.1';
			|en = 'значению поля 001 прил.1.1 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код исчисления %1';
													|en = 'Код исчисления %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00111М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_2

Процедура ПроверитьКС2020_1_118(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.118';
													|en = '1.118'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.118)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.118)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 прил.2 Р.1 >= гр.1 стр.010 ';
			|en = 'Количество застрахованных лиц с начала периода в гр.1 стр.010 прил.2 Р.1 >= гр.1 стр.010 '") +
		НСтр("ru = 'прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1';
			|en = 'прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество застрахованных лиц';
														|en = 'Ошибочное количество застрахованных лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101001_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_119(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.119';
													|en = '1.119'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.119)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.119)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Количество физических лиц с начала периода в гр.1 стр.015 прил.2 Р.1 >= гр.1 стр.015 ';
			|en = 'Количество физических лиц с начала периода в гр.1 стр.015 прил.2 Р.1 >= гр.1 стр.015 '") +
		НСтр("ru = 'прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1';
			|en = 'прил.2 Р.1 предыдущего отчетного периода по каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное количество физических лиц';
														|en = 'Ошибочное количество физических лиц'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М101501_");
	ПроверитьКС2020_1_86_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_120(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.120';
													|en = '1.120'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.120)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.120)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 > 0 если гр.1 стр.015 прил.2 Р.1 > 0';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 > 0 если гр.1 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102001_");
	Настройки.Вставить("ПоказательР12", "П00012М101501_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_121(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.121';
													|en = '1.121'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.121)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.121)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.020 прил.2 Р.1 (1 месяц ОП) > 0 если гр.2 стр.015 прил.2 Р.1 > 0';
			|en = 'Сумма выплат в гр.2 стр.020 прил.2 Р.1 (1 месяц ОП) > 0 если гр.2 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102002_");
	Настройки.Вставить("ПоказательР12", "П00012М101502_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_122(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.122';
													|en = '1.122'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.122)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.122)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.020 прил.2 Р.1 (2 месяц ОП) > 0 если гр.3 стр.015 прил.2 Р.1 > 0';
			|en = 'Сумма выплат в гр.3 стр.020 прил.2 Р.1 (2 месяц ОП) > 0 если гр.3 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102003_");
	Настройки.Вставить("ПоказательР12", "П00012М101503_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_123(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.123';
													|en = '1.123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.123)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.123)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.020 прил.2 Р.1 (3 месяц ОП) > 0 если гр.4 стр.015 прил.2 Р.1 > 0';
			|en = 'Сумма выплат в гр.4 стр.020 прил.2 Р.1 (3 месяц ОП) > 0 если гр.4 стр.015 прил.2 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0 по коду (%3)';
													|en = '%1 > 0 если %2 > 0 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М102004_");
	Настройки.Вставить("ПоказательР12", "П00012М101504_");
	ПроверитьКС2020_1_90_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_124(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.124';
													|en = '1.124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.124)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.124)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 = гр.1 стр.020 прил.2 Р.1 предыдущего ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.020 прил.2 Р.1 = гр.1 стр.020 прил.2 Р.1 предыдущего '") +
		НСтр("ru = 'отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.2 Р.1 по каждому значению поля 001 ';
			|en = 'отчетного периода + (гр.2 + гр.3 + гр.4) стр.020 прил.2 Р.1 по каждому значению поля 001 '") +
		НСтр("ru = 'прил.2 Р.1';
			|en = 'прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1020");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_125(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.125';
													|en = '1.125'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.125)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.125)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.2 Р.1 = гр.1 стр.030 прил.2 ';
			|en = 'Сумма, не подлежащая обложению с начала периода в гр.1 стр.030 прил.2 Р.1 = гр.1 стр.030 прил.2 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.2 Р.1 по каждому значению ';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.030 прил.2 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.2 Р.1';
			|en = 'поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, не подлежащая обложению';
														|en = 'Ошибочная сумма, не подлежащая обложению'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1030");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_126(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.126';
													|en = '1.126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.126)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.126)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма, превышающая предельную величину в гр.1 стр.040 прил.2 Р.1 = гр.1 стр.040 прил.2 ';
			|en = 'Сумма, превышающая предельную величину в гр.1 стр.040 прил.2 Р.1 = гр.1 стр.040 прил.2 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.2 Р.1 по каждому значению ';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.040 прил.2 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.2 Р.1';
			|en = 'поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма, превышающая предельную величину';
														|en = 'Ошибочная сумма, превышающая предельную величину'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1040");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_127(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.127';
													|en = '1.127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.127)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.127)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.050 прил.2 Р.1 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.050 прил.2 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 по каждому значению ';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 по каждому значению '") +
		НСтр("ru = 'поля 001 прил.2 Р.1';
			|en = 'поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1050");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_128(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.128';
													|en = '1.128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.128)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.128)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.020 прил.2 ';
			|en = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 = гр.1 стр.020 прил.2 '") +
		НСтр("ru = 'Р.1 - гр.1 стр.030 прил.2 Р.1 - гр.1 стр.040 прил.2 Р.1';
			|en = 'Р.1 - гр.1 стр.030 прил.2 Р.1 - гр.1 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М102001_");
	Настройки.Вставить("ПоказательР13", "П00012М103001_");
	Настройки.Вставить("ПоказательР14", "П00012М104001_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_129(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.129';
													|en = '1.129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.129)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) = гр.2 стр.020 прил.2 ';
			|en = 'База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) = гр.2 стр.020 прил.2 '") +
		НСтр("ru = 'Р.1 - гр.2 стр.030 прил.2 Р.1 - гр.2 стр.040 прил.2 Р.1';
			|en = 'Р.1 - гр.2 стр.030 прил.2 Р.1 - гр.2 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М102002_");
	Настройки.Вставить("ПоказательР13", "П00012М103002_");
	Настройки.Вставить("ПоказательР14", "П00012М104002_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_130(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.130';
													|en = '1.130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.130)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.130)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) = гр.3 стр.020 прил.2 ';
			|en = 'База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) = гр.3 стр.020 прил.2 '") +
		НСтр("ru = 'Р.1 - гр.3 стр.030 прил.2 Р.1 - гр.3 стр.040 прил.2 Р.1';
			|en = 'Р.1 - гр.3 стр.030 прил.2 Р.1 - гр.3 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М102003_");
	Настройки.Вставить("ПоказательР13", "П00012М103003_");
	Настройки.Вставить("ПоказательР14", "П00012М104003_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_131(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.131';
													|en = '1.131'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.131)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.131)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) = гр.4 стр.020 прил.2 ';
			|en = 'База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) = гр.4 стр.020 прил.2 '") +
		НСтр("ru = 'Р.1 - гр.4 стр.030 прил.2 Р.1 - гр.4 стр.040 прил.2 Р.1';
			|en = 'Р.1 - гр.4 стр.030 прил.2 Р.1 - гр.4 стр.040 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)';
													|en = '%1 = %2 - %3 - %4 Итог [%5] по коду (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М102004_");
	Настройки.Вставить("ПоказательР13", "П00012М103004_");
	Настройки.Вставить("ПоказательР14", "П00012М104004_");
	ПроверитьКС2020_1_131_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_131_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14) И ВТ_100.Графа	= &Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТКод1.Страница	= ТПоказателя3.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя3.СтрокаТЧ
	|			И 	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТКод1.Страница	= ТПоказателя4.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя4.СтрокаТЧ
	|			И 	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	СУММА(ПоказательР13),
	|	СУММА(ПоказательР14),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
		КонецЦикла;
		
		Разность 				= ВыборкаТ.ПоказательР12 - ВыборкаТ.ПоказательР13 - ВыборкаТ.ПоказательР14;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.ПоказательР13, ВыборкаТ.ПоказательР14, Разность, 
			ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений, 
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_132(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.132';
													|en = '1.132'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.132)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.132)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 >= гр.1 стр.055 прил.2 Р.1';
			|en = 'База страховых взносов с начала периода в гр.1 стр.050 прил.2 Р.1 >= гр.1 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105001_");
	Настройки.Вставить("ПоказательР12", "П00012М105501_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_133(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.133';
													|en = '1.133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.133)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.133)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) >= гр.2 стр.055 прил.2 Р.1';
			|en = 'База страховых взносов в гр.2 стр.050 прил.2 Р.1 (1 месяц ОП) >= гр.2 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105002_");
	Настройки.Вставить("ПоказательР12", "П00012М105502_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_134(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.134';
													|en = '1.134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.134)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.134)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) >= гр.3 стр.055 прил.2 Р.1';
			|en = 'База страховых взносов в гр.3 стр.050 прил.2 Р.1 (2 месяц ОП) >= гр.3 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105003_");
	Настройки.Вставить("ПоказательР12", "П00012М105503_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_135(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.135';
													|en = '1.135'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.135)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.135)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) >= гр.4 стр.055 прил.2 Р.1';
			|en = 'База страховых взносов в гр.4 стр.050 прил.2 Р.1 (3 месяц ОП) >= гр.4 стр.055 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 по коду (%3)';
													|en = '%1 >= %2 по коду (%3)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы по страховым взносам';
														|en = 'Ошибочная сумма базы по страховым взносам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П00012М105004_");
	Настройки.Вставить("ПоказательР12", "П00012М105504_");
	ПроверитьКС2020_1_135_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_135_код(Настройки)
	
	// копия ПроверитьКС2020_1_142_код
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	СтруктураСтраниц = Новый Структура("П11131, П11132, П00111, П00012", ",2", ",3", "", "");
	
	Запрос = Новый Запрос;
	Раздел = Сред(Настройки.ПоказательР11, 1, 6);
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("Раздел"			, Раздел);
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("НомерПодраздела"	, СтруктураСтраниц[Раздел]);
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК СтрокаТЧ,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	В (""001"")
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР11 И ВТ_100.Графа	= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12 И ВТ_100.Графа	= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТКод1.Значение_ КАК Строка (10)) КАК Ключ,
	|	ТКод1.Значение_		КАК КодИсчисления,
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница + &НомерПодраздела	КАК Страница,
	|	ТПоказателя1.СтрокаТЧ	КАК НомерСтроки
	|ИЗ
	|	ВТ_101 КАК ТКод1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя1
	|			ПО	ТКод1.Страница	= ТПоказателя1.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя1.СтрокаТЧ
	|			И 	ТПоказателя1.Строка_	= &СтрокаР11
	|			И 	ТПоказателя1.Графа		= &ГрафаР11
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТКод1.Страница	= ТПоказателя2.Страница
	|			И	ТКод1.СтрокаТЧ	= ТПоказателя2.СтрокаТЧ
	|			И 	ТПоказателя2.Строка_	= &СтрокаР12
	|			И 	ТПоказателя2.Графа		= &ГрафаР12
	|ГДЕ
	|	ТКод1.Строка_ = ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Страница,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12),
	|	МИНИМУМ(КодИсчисления)
	|ПО
	|	Ключ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР11 >= ВыборкаТ.ПоказательР12;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР11, ВыборкаТ.ПоказательР12, ВыборкаТ.КодИсчисления);
		Настройки.ДопСведения	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонДопСведений,
			ВыборкаТ.КодИсчисления);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_136(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.136';
													|en = '1.136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.136)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.136)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат иностранным гражданам с начала периода в гр.1 стр.055 прил.2 Р.1 = гр.1 стр.055 ';
			|en = 'Сумма выплат иностранным гражданам с начала периода в гр.1 стр.055 прил.2 Р.1 = гр.1 стр.055 '") +
		НСтр("ru = 'прил.2 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 по ';
			|en = 'прил.2 Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 по '") +
		НСтр("ru = 'каждому значению поля 001 прил.2 Р.1';
			|en = 'каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат иностранным гражданам';
														|en = 'Ошибочная сумма выплат иностранным гражданам'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1055");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_137(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.137';
													|en = '1.137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.137)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.137)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы с начала периода в гр.1 стр.060 прил.2 Р.1 = гр.1 стр.060 прил.2 ';
			|en = 'Страховые взносы с начала периода в гр.1 стр.060 прил.2 Р.1 = гр.1 стр.060 прил.2 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 по ';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 по '") +
		НСтр("ru = 'каждому значению поля 001 прил.2 Р.1';
			|en = 'каждому значению поля 001 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3] по коду (%4)';
													|en = '%1 = %2 Итог [%3] по коду (%4)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00012М1060");
	ПроверитьКС2020_1_97_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_138(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.138';
													|en = '1.138'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.138)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.138)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 ';
			|en = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) ';
			|en = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru = 'стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 равно 0';
			|en = 'стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 равно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)';
													|en = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НетИностранцев", Истина);
	ПроверитьКС2020_1_140_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_139(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.139';
													|en = '1.139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.139)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.139)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 >= (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 ';
			|en = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 >= (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов для иностранных граждан ± (гр.2';
			|en = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов для иностранных граждан ± (гр.2'") +
		НСтр("ru = ' + гр.3 + гр.4) стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 не р';
			|en = ' + гр.3 + гр.4) стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда (гр.2 + гр.3 + гр.4) стр.055 прил.2 Р.1 не р'") +
		НСтр("ru = 'авно 0';
			|en = 'авно 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)';
													|en = '%1 >= %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("НетИностранцев", Ложь);
	ПроверитьКС2020_1_140_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_140(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.140';
													|en = '1.140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.140)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.140)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 ';
			|en = 'Страховые взносы в (гр.2 + гр.3 + гр.4) стр.060 прил.2 Р.1 = (гр.2 + гр.3 + гр.4) стр.050 прил.2 Р.1 '") +
		НСтр("ru = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) ';
			|en = 'х соответствующий значению поля 001 прил.2 Р.1 тариф страховых взносов ± (гр.2 + гр.3 + гр.4) '") +
		НСтр("ru = 'стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда код тарифа плательщика в поле 001 прил.2 Р.1 отличен от 01';
			|en = 'стр.015 прил.2 Р.1 / 3 х 0,005 руб., когда код тарифа плательщика в поле 001 прил.2 Р.1 отличен от 01'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)';
													|en = '%1 = %2 х %3 / 100 Итог [%4] ± (%5) по коду тарифа (%6)'"));
	Заголовки.Вставить("ШаблонДопСведений"	, НСтр("ru = 'Код тарифа %1';
													|en = 'Код тарифа %1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_140_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= ""П00012""
	|	И (ВТ_100.Строка_	В (""015"", ""050"", ""055"", ""060"")
	|	И ВТ_100.Графа		В (""02"", ""03"", ""04"")
	|	ИЛИ ВТ_100.Строка_	= ""001"" И ВТ_100.Графа = ""01"")
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТТарифа.Значение_	КАК КодТарифа,
	|	ТПоказателя.Отчет	КАК Отчет,
	|	ТПоказателя.Раздел + ""М1""		КАК Раздел,
	|	ТПоказателя.Страница			КАК Страница,
	|	ТПоказателя.НомерСтроки			КАК НомерСтроки,
	|	ТПоказателя.Строка_	КАК НомСтроки,
	|	ТПоказателя.Графа	КАК Графа,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""060""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК Взнос,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""050""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК База,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""055""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаИностранцы,
	|	ВЫБОР
	|		КОГДА ТПоказателя.Строка_ = ""015""
	|			ТОГДА Выразить(ТПоказателя.Значение_ КАК Число)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК КолвоФизлиц
	|ИЗ
	|	ВТ_101 КАК ТПоказателя
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТТарифа
	|			ПО ТПоказателя.Страница = ТТарифа.Страница
	|			И ТПоказателя.НомерСтроки = ТТарифа.НомерСтроки
	|ГДЕ
	|	ТПоказателя.Строка_		В (""015"", ""050"", ""055"", ""060"")
	|	И ТТарифа.Строка_		= ""001""
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	НомСтроки Убыв,
	|	Страница,
	|	НомерСтроки,
	|	Графа
	|ИТОГИ
	|	МИНИМУМ(КодТарифа),
	|	СУММА(Взнос),
	|	СУММА(База),
	|	СУММА(БазаИностранцы),
	|	СУММА(КолвоФизлиц)
	|ПО
	|	КодТарифа
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаТ.Следующий() Цикл
		
		ЗарегистрироватьФормулу2020(Настройки);
		НетИностранцев = НЕ ЗначениеЗаполнено(ВыборкаТ.БазаИностранцы);
		ТаблицаСтавок = ?(Настройки.НетИностранцев, ДанныеКС.Ставки201, ДанныеКС.Ставки202);
		Ставка = ТаблицаСтавок.Найти(ВыборкаТ.КодТарифа, "Код");
		СтавкаПереопр = ?(Ставка = Неопределено, 0, Ставка.Ставка);
		
		Если ЗначениеЗаполнено(ВыборкаТ.КодТарифа) Тогда
			ВнестиПоказательБезРасшифровки2020("Ставка СВ на ОМС для тарифа " + ВыборкаТ.КодТарифа,
				СтавкаПереопр);
		КонецЕсли;
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИмяПоказателя = ?(Выборка.НомСтроки = "060", "Взнос", ?(Выборка.НомСтроки = "050", "База", 
				?(Выборка.НомСтроки = "055", "БазаИностранцы", "КолвоФизлиц")));
			ИменаПоказателей.Вставить(ИмяПоказателя, Выборка.Раздел + Выборка.НомСтроки + Выборка.Графа + "_");
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели[ИмяПоказателя]);
		КонецЦикла;
		
		РасчетныйВзнос		= Окр(ВыборкаТ.База * СтавкаПереопр / 100, 2);
		Погрешность			= Окр(Окр(ВыборкаТ.КолвоФизлиц / 3) * 0.005, 2);
		РасчетныйВзносМакс	= РасчетныйВзнос + Погрешность;
		РасчетныйВзносМин	= РасчетныйВзнос - Погрешность;
		
		Если НетИностранцев Тогда
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И Настройки.НетИностранцев
				И (ВыборкаТ.Взнос < РасчетныйВзносМин ИЛИ ВыборкаТ.Взнос > РасчетныйВзносМакс);
		Иначе
			Настройки.ЭтоОшибка		= НЕ Ставка = Неопределено И НЕ Настройки.НетИностранцев
				И ВыборкаТ.Взнос < РасчетныйВзносМин;
		КонецЕсли;
		
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки, 
			ВыборкаТ.Взнос, ВыборкаТ.База, СтавкаПереопр, РасчетныйВзнос, Погрешность, ВыборкаТ.КодТарифа);
		Настройки.ДопСведения	= "Тариф " + ВыборкаТ.КодТарифа;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_141(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.141';
													|en = '1.141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.141)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.141)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Произведенные расходы с начала периода в гр.1 стр.070 прил.2 Р.1 = гр.1 стр.070 прил.2 ';
			|en = 'Произведенные расходы с начала периода в гр.1 стр.070 прил.2 Р.1 = гр.1 стр.070 прил.2 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.070 прил.2 Р.1';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.070 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма произведенных расходов';
														|en = 'Ошибочная сумма произведенных расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200070");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_142(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.142';
													|en = '1.142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1.142)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1.142)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Возмещенные расходы с начала периода в гр.1 стр.080 прил.2 Р.1 = гр.1 стр.080 прил.2 ';
			|en = 'Возмещенные расходы с начала периода в гр.1 стр.080 прил.2 Р.1 = гр.1 стр.080 прил.2 '") +
		НСтр("ru = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.080 прил.2 Р.1';
			|en = 'Р.1 предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.080 прил.2 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма возмещенных расходов';
														|en = 'Ошибочная сумма возмещенных расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001200080");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_142_код(Настройки)
	
	Перем Показатели;
	ОтчетныйМесяц = ДанныеКС.Мес;
	
	Раздел = Сред(Настройки.Показатель, 1, 6);
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"		, ОтчетныйМесяц);	
	Запрос.УстановитьПараметр("Раздел"				, Раздел);
	Запрос.УстановитьПараметр("СтрокаПоказателя"	, Сред(Настройки.Показатель, 9, 3));
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет КАК	Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа,
	|	ВТ_100.Мес			КАК Мес,
	|	ВТ_100.МесСтр		КАК МесСтр
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаПоказателя)
	|	И ВТ_100.Мес		В (&ОтчетныйМесяц, &ОтчетныйМесяц - 3)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВЫБОР
	|		КОГДА ТПоказателя1.Графа = ""01"" И ТПоказателя1.Мес = &ОтчетныйМесяц
	|			ТОГДА ВЫРАЗИТЬ(ТПоказателя1.Значение_ КАК ЧИСЛО)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница,
	|	ТПоказателя1.Графа + ТПоказателя1.МесСтр	КАК КлючСортировки,
	|	ТПоказателя1.Графа 		КАК Графа,
	|	ТПоказателя1.Мес 		КАК Мес
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаПоказателя
	|	И ВЫБОР
	|			КОГДА ТПоказателя1.Мес = &ОтчетныйМесяц
	|				ТОГДА ИСТИНА
	|			ИНАЧЕ ТПоказателя1.Графа = ""01""
	|		КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Графа,
	|	Мес УБЫВ
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2020(Настройки);
		МассивСумм = Новый Массив;
		
		Выборка = ВыборкаТ.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ЗначениеЗаполнено(Выборка.ПоказательР12) Тогда
				МассивСумм.Добавить(Выборка.ПоказательР11);
			КонецЕсли;
			
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР11", Настройки.Показатель + Выборка.Графа);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			Показатели.ПоказательР11.Дополнение = ?(Выборка.Мес = ОтчетныйМесяц - 3, "предыдущий отчетный период", "");
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		КонецЦикла;
		
		Разность				= ВыборкаТ.ПоказательР11 - ВыборкаТ.ПоказательР12;
		Настройки.ЭтоОшибка		= НЕ ВыборкаТ.ПоказательР12 = Разность;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ВыборкаТ.ПоказательР12, СтрСоединить(МассивСумм, " + "), Разность);
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЕсли;
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_5

Процедура ПроверитьКС2020_1_143(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.143';
													|en = '1.143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.143)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.143)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Средняя численность работников в гр.2 стр.010 прил.5 Р.1 >= 7';
														|en = 'Средняя численность работников в гр.2 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 7';
													|en = '%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение средней численности работников';
														|en = 'Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_144(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.144';
													|en = '1.144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.144)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.144)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Средняя численность работников в гр.3 стр.010 прил.5 Р.1 >= 7';
														|en = 'Средняя численность работников в гр.3 стр.010 прил.5 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 7';
													|en = '%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение средней численности работников';
														|en = 'Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150001003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_144_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 7;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_145(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.145';
													|en = '1.145'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.145)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.145)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма доходов в гр.2 стр.020 прил.5 Р.1 >= гр.2 стр.030 прил.5 Р.1';
														|en = 'Сумма доходов в гр.2 стр.020 прил.5 Р.1 >= гр.2 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150002002");
	МассивИмен.Добавить("П000150003002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_146(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.146';
													|en = '1.146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.146)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.146)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма доходов в гр.3 стр.020 прил.5 Р.1 >= гр.3 стр.030 прил.5 Р.1';
														|en = 'Сумма доходов в гр.3 стр.020 прил.5 Р.1 >= гр.3 стр.030 прил.5 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150002003");
	МассивИмен.Добавить("П000150003003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_146_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < Показатели.ПоказательР12.Значение;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_147(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.147';
													|en = '1.147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.147)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.147)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.2 стр.040 прил.5 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.5 Р.1 х 100';
			|en = 'Доля доходов в гр.2 стр.040 прил.5 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / %3 х 100 Итог [%4]';
													|en = '%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004002");
	МассивИмен.Добавить("П000150003002");
	МассивИмен.Добавить("П000150002002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_148(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.148';
													|en = '1.148'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.148)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.148)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.3 стр.040 прил.5 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.5 Р.1 х 100';
			|en = 'Доля доходов в гр.3 стр.040 прил.5 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.5 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / %3 х 100 Итог [%4]';
													|en = '%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004003");
	МассивИмен.Добавить("П000150003003");
	МассивИмен.Добавить("П000150002003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_148_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РезультатДеления = ?(Показатели.ПоказательР13.Значение = 0, 0, 
		Окр(Показатели.ПоказательР12.Значение / Показатели.ПоказательР13.Значение *100, 2));
	РезультатДеления = Макс(РезультатДеления, 0);
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РезультатДеления;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		РезультатДеления);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_149(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.149';
													|en = '1.149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.149)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.149)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Доля доходов в гр.2 стр.040 прил.5 Р.1 >= 90';
														|en = 'Доля доходов в гр.2 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 90';
													|en = '%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_150(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.150';
													|en = '1.150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 5 к Разделу 1 (КС 1.150)';
													|en = 'Проверка приложения 5 к Разделу 1 (КС 1.150)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Доля доходов в гр.3 стр.040 прил.5 Р.1 >= 90';
														|en = 'Доля доходов в гр.3 стр.040 прил.5 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 90';
													|en = '%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000150004003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_150_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) И Показатели.ПоказательР11.Значение < 90;
	Настройки.Расшифровка	= СтрЗаменить(Настройки.ШаблонРасшифровки, "%1", Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Функция ПолучитьПоказатели(Настройки)
	
	Перем Показатели;
	
	КолвоПоказателей = Настройки.МассивИмен.Количество();
	ИменаПоказателей = Новый Структура;
	
	Для Счетчик = 1 По 5 Цикл
		
		Элемент = ?(Счетчик > КолвоПоказателей, Настройки.МассивИмен[КолвоПоказателей - 1], 
			Настройки.МассивИмен[Счетчик - 1]);
		ИменаПоказателей.Вставить("ПоказательР1" + Счетчик, Элемент);
	
	КонецЦикла;
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.МассивИмен[0], 1, 6));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.МассивИмен[0], 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);
	
	Для Счетчик = 1 По 5 Цикл
		
		ТекущийПоказатель = Показатели["ПоказательР1" + Счетчик];
		Запрос.УстановитьПараметр("СтрокаР1" + Счетчик, Сред(ТекущийПоказатель.ИмяПоказателя, 9, 3));
	
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14, &СтрокаР15)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	Выразить(ТПоказателя5.Значение_ КАК Число)	КАК ПоказательР15,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя5
	|			ПО	ТПоказателя5.Строка_	= &СтрокаР15
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	Для Счетчик = 1 По КолвоПоказателей Цикл
		Показатели["ПоказательР1" + Счетчик].Значение = 0;
	КонецЦикла;
	
	Если Выборка.Следующий() Тогда
		Для Счетчик = 1 По КолвоПоказателей Цикл
			Показатели["ПоказательР1" + Счетчик].Значение = Выборка["ПоказательР1" + Счетчик];
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели["ПоказательР1" + Счетчик]);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Показатели;
		
КонецФункции

#КонецОбласти

#Область Проверки_Приложения_6

Процедура ПроверитьКС2020_1_151(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.151';
													|en = '1.151'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.151)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.151)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма доходов в гр.1 стр.010 прил.6 Р.1 >= гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1';
			|en = 'Сумма доходов в гр.1 стр.010 прил.6 Р.1 >= гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 + %3 + %4 Итог [%5]';
													|en = '%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_152_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_152(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.152';
													|en = '1.152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.152)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.152)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма доходов в гр.2 стр.010 прил.6 Р.1 >= гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1';
			|en = 'Сумма доходов в гр.2 стр.010 прил.6 Р.1 >= гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2 + %3 + %4 Итог [%5]';
													|en = '%1 >= %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160001002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_152_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_152_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = Показатели.ПоказательР12.Значение + Показатели.ПоказательР13.Значение + 
		Показатели.ПоказательР14.Значение;
	Настройки.ЭтоОшибка		= Показатели.ПоказательР11.Значение < РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_153(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.153';
													|en = '1.153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.153)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.153)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.1 стр.050 прил.6 Р.1 = (гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1) / ';
			|en = 'Доля доходов в гр.1 стр.050 прил.6 Р.1 = (гр.1 стр.020 + гр.1 стр.030 + гр.1 стр.040 прил.6 Р.1) / '") +
		НСтр("ru = 'гр.1 стр.010 прил.6 Р.1 х 100';
			|en = 'гр.1 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]';
													|en = '%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	МассивИмен.Добавить("П000160002001");
	МассивИмен.Добавить("П000160003001");
	МассивИмен.Добавить("П000160004001");
	МассивИмен.Добавить("П000160001001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_154_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_154(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.154';
													|en = '1.154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.154)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.154)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.2 стр.050 прил.6 Р.1 = (гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1) / ';
			|en = 'Доля доходов в гр.2 стр.050 прил.6 Р.1 = (гр.2 стр.020 + гр.2 стр.030 + гр.2 стр.040 прил.6 Р.1) / '") +
		НСтр("ru = 'гр.2 стр.010 прил.6 Р.1 х 100';
			|en = 'гр.2 стр.010 прил.6 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]';
													|en = '%1 = (%2 + %3 + %4) / %5 х 100 Итог [%6]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	МассивИмен.Добавить("П000160002002");
	МассивИмен.Добавить("П000160003002");
	МассивИмен.Добавить("П000160004002");
	МассивИмен.Добавить("П000160001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_154_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_154_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	РасчетнаяСумма = ?(Показатели.ПоказательР15.Значение = 0, 0, Окр((Показатели.ПоказательР12.Значение + 
		Показатели.ПоказательР13.Значение + Показатели.ПоказательР14.Значение) / Показатели.ПоказательР15.Значение * 100,2));
	Настройки.ЭтоОшибка		= НЕ Показатели.ПоказательР11.Значение = РасчетнаяСумма;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение, Показатели.ПоказательР12.Значение, Показатели.ПоказательР13.Значение, 
		Показатели.ПоказательР14.Значение, Показатели.ПоказательР15.Значение, РасчетнаяСумма);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_155(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.155';
													|en = '1.155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.155)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.155)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Доля доходов в гр.1 стр.050 прил.6 Р.1 >= 70';
														|en = 'Доля доходов в гр.1 стр.050 прил.6 Р.1 >= 70'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 70';
													|en = '%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005001");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_156_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_156(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.156';
													|en = '1.156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 6 к Разделу 1 (КС 1.156)';
													|en = 'Проверка приложения 6 к Разделу 1 (КС 1.156)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.2 стр.050 прил.6 Р.1 >= 70, если отчет за расчетный период (год)';
			|en = 'Доля доходов в гр.2 стр.050 прил.6 Р.1 >= 70, если отчет за расчетный период (год)'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 70';
													|en = '%1 >= 70'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000160005002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_156_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_156_код(Настройки)
	
	Показатели = ПолучитьПоказатели(Настройки);
	Графа = Прав(Показатели.ПоказательР11.ИмяПоказателя, 1);
	Настройки.ЭтоОшибка		= ЗначениеЗаполнено(Показатели.ПоказательР11.Значение) 
		И (Графа = "1" ИЛИ Графа = "2" И ДанныеКС.Мес = 12) И Показатели.ПоказательР11.Значение < 70;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		Показатели.ПоказательР11.Значение);
	ДополнитьСтруктуруОшибок2020(Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_7

Процедура ПроверитьКС2020_1_157(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.157';
													|en = '1.157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.157)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.157)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Средняя численность работников в гр.2 стр.010 прил.7 Р.1 >= 7';
														|en = 'Средняя численность работников в гр.2 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 7';
													|en = '%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение средней численности работников';
														|en = 'Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_158(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.158';
													|en = '1.158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.158)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.158)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Средняя численность работников в гр.3 стр.010 прил.7 Р.1 >= 7';
														|en = 'Средняя численность работников в гр.3 стр.010 прил.7 Р.1 >= 7'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 7';
													|en = '%1 >= 7'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение средней численности работников';
														|en = 'Ошибочное значение средней численности работников'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170001003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_144_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_159(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.159';
													|en = '1.159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.159)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.159)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма доходов в гр.2 стр.020 прил.7 Р.1 >= гр.2 стр.030 прил.7 Р.1';
														|en = 'Сумма доходов в гр.2 стр.020 прил.7 Р.1 >= гр.2 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002002");
	МассивИмен.Добавить("П000170003002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_160(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.160';
													|en = '1.160'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.160)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.160)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Сумма доходов в гр.3 стр.020 прил.7 Р.1 >= гр.3 стр.030 прил.7 Р.1';
														|en = 'Сумма доходов в гр.3 стр.020 прил.7 Р.1 >= гр.3 стр.030 прил.7 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма доходов';
														|en = 'Ошибочная сумма доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170002003");
	МассивИмен.Добавить("П000170003003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_146_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_161(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.161';
													|en = '1.161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.161)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.161)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.2 стр.040 прил.7 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.7 Р.1 х 100';
			|en = 'Доля доходов в гр.2 стр.040 прил.7 Р.1 = гр.2 стр.030 / гр.2 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / %3 х 100 Итог [%4]';
													|en = '%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	МассивИмен.Добавить("П000170003002");
	МассивИмен.Добавить("П000170002002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_162(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.162';
													|en = '1.162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.162)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.162)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Доля доходов в гр.3 стр.040 прил.7 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.7 Р.1 х 100';
			|en = 'Доля доходов в гр.3 стр.040 прил.7 Р.1 = гр.3 стр.030 / гр.3 стр.020 прил.7 Р.1 х 100'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 / %3 х 100 Итог [%4]';
													|en = '%1 = %2 / %3 х 100 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	МассивИмен.Добавить("П000170003003");
	МассивИмен.Добавить("П000170002003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_148_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_163(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.163';
													|en = '1.163'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.163)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.163)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Доля доходов в гр.2 стр.040 прил.7 Р.1 >= 90';
														|en = 'Доля доходов в гр.2 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 90';
													|en = '%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004002");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_164(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.164';
													|en = '1.164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 7 к Разделу 1 (КС 1.164)';
													|en = 'Проверка приложения 7 к Разделу 1 (КС 1.164)'"));
	Заголовки.Вставить("ОписаниеКС"			, НСтр("ru = 'Доля доходов в гр.3 стр.040 прил.7 Р.1 >= 90';
														|en = 'Доля доходов в гр.3 стр.040 прил.7 Р.1 >= 90'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= 90';
													|en = '%1 >= 90'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная доля доходов';
														|en = 'Ошибочная доля доходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивИмен = Новый Массив;
	МассивИмен.Добавить("П000170004003");
	
	Настройки.Вставить("МассивИмен"		, МассивИмен);
	ПроверитьКС2020_1_150_код(Настройки);	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_8

Процедура ПроверитьКС2020_1_165(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.165';
													|en = '1.165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 8';
														|en = 'Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 8 к Разделу 1 (КС 1.165)';
													|en = 'Проверка приложения 8 к Разделу 1 (КС 1.165)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = ∑ всех гр.1 стр.080 прил.8 Р.1';
			|en = 'Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = ∑ всех гр.1 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001001");
	Настройки.Вставить("ПоказательР12", "П00018М108001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_166(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.166';
													|en = '1.166'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 8';
														|en = 'Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 8 к Разделу 1 (КС 1.166)';
													|en = 'Проверка приложения 8 к Разделу 1 (КС 1.166)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.010 прил.8 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.8 Р.1';
			|en = 'Сумма выплат в гр.2 стр.010 прил.8 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001002");
	Настройки.Вставить("ПоказательР12", "П00018М108002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_167(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.167';
													|en = '1.167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 8';
														|en = 'Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 8 к Разделу 1 (КС 1.167)';
													|en = 'Проверка приложения 8 к Разделу 1 (КС 1.167)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.010 прил.8 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.8 Р.1';
			|en = 'Сумма выплат в гр.3 стр.010 прил.8 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001003");
	Настройки.Вставить("ПоказательР12", "П00018М108003_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_168(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.168';
													|en = '1.168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 8';
														|en = 'Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 8 к Разделу 1 (КС 1.168)';
													|en = 'Проверка приложения 8 к Разделу 1 (КС 1.168)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.010 прил.8 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.8 Р.1';
			|en = 'Сумма выплат в гр.4 стр.010 прил.8 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000180001004");
	Настройки.Вставить("ПоказательР12", "П00018М108004_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_168_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ВТ_100.Значение_ КАК Число)	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2020(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		Выборка = ВыборкаР12.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		КонецЦикла;
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
		СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_1_169(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.169';
													|en = '1.169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 8';
														|en = 'Приложение 8'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 8 к Разделу 1 (КС 1.169)';
													|en = 'Проверка приложения 8 к Разделу 1 (КС 1.169)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = гр.1 стр.010 прил.8 Р.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.010 прил.8 Р.1 = гр.1 стр.010 прил.8 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.8 Р.1';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.8 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001800010");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_9

Процедура ПроверитьКС2020_1_170(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.170';
													|en = '1.170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 9';
														|en = 'Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 9 к Разделу 1 (КС 1.170)';
													|en = 'Проверка приложения 9 к Разделу 1 (КС 1.170)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = ∑ всех гр.1 стр.080 прил.9 Р.1';
			|en = 'Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = ∑ всех гр.1 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001001");
	Настройки.Вставить("ПоказательР12", "П00019М108001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_171(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.171';
													|en = '1.171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 9';
														|en = 'Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 9 к Разделу 1 (КС 1.171)';
													|en = 'Проверка приложения 9 к Разделу 1 (КС 1.171)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.2 стр.010 прил.9 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.9 Р.1';
			|en = 'Сумма выплат в гр.2 стр.010 прил.9 Р.1 (1 месяц ОП) = ∑ всех гр.2 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001002");
	Настройки.Вставить("ПоказательР12", "П00019М108002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_172(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.172';
													|en = '1.172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 9';
														|en = 'Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 9 к Разделу 1 (КС 1.172)';
													|en = 'Проверка приложения 9 к Разделу 1 (КС 1.172)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.3 стр.010 прил.9 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.9 Р.1';
			|en = 'Сумма выплат в гр.3 стр.010 прил.9 Р.1 (2 месяц ОП) = ∑ всех гр.3 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001003");
	Настройки.Вставить("ПоказательР12", "П00019М108003_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_173(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.173';
													|en = '1.173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 9';
														|en = 'Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 9 к Разделу 1 (КС 1.173)';
													|en = 'Проверка приложения 9 к Разделу 1 (КС 1.173)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат в гр.4 стр.010 прил.9 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.9 Р.1';
			|en = 'Сумма выплат в гр.4 стр.010 прил.9 Р.1 (3 месяц ОП) = ∑ всех гр.4 стр.080 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000190001004");
	Настройки.Вставить("ПоказательР12", "П00019М108004_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_174(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.174';
													|en = '1.174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 9';
														|en = 'Приложение 9'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 9 к Разделу 1 (КС 1.174)';
													|en = 'Проверка приложения 9 к Разделу 1 (КС 1.174)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = гр.1 стр.010 прил.9 Р.1 ';
			|en = 'Сумма выплат с начала периода в гр.1 стр.010 прил.9 Р.1 = гр.1 стр.010 прил.9 Р.1 '") +
		НСтр("ru = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1';
			|en = 'предыдущего отчетного периода + (гр.2 + гр.3 + гр.4) стр.010 прил.9 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма выплат';
														|en = 'Ошибочная сумма выплат'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П0001900010");
	ПроверитьКС2020_1_142_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Раздела_2

Процедура ПроверитьКС2020_1_175(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.175';
													|en = '1.175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 1.175)';
													|en = 'Проверка Раздела 2 (КС 1.175)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов за расчетный период в стр.030 Р.2 = ∑ всех гр.1 стр.090 прил.1 Р.2';
			|en = 'Сумма страховых взносов за расчетный период в стр.030 Р.2 = ∑ всех гр.1 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная страховых взносов';
														|en = 'Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020003001");
	Настройки.Вставить("ПоказательР12", "П00021М109001_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_176(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.176';
													|en = '1.176'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 1.176)';
													|en = 'Проверка Раздела 2 (КС 1.176)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма страховых взносов за расчетный период в стр.050 Р.2 = ∑ всех гр.2 стр.090 прил.1 Р.2';
			|en = 'Сумма страховых взносов за расчетный период в стр.050 Р.2 = ∑ всех гр.2 стр.090 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная страховых взносов';
														|en = 'Ошибочная страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000020005001");
	Настройки.Вставить("ПоказательР12", "П00021М109002_");
	ПроверитьКС2020_1_168_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_177(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.177';
													|en = '1.177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2, приложение 1';
														|en = 'Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1 к Разделу 2 (КС 1.177)';
													|en = 'Проверка приложения 1 к Разделу 2 (КС 1.177)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '1 января календарного года Титульного листа <= стр.070 прил.1 Р.2 <= 31 декабря календарного ';
			|en = '1 января календарного года Титульного листа <= стр.070 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru = 'года Титульного листа';
			|en = 'года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '01.01.%1 <= %2 <= 31.12.%1';
													|en = '01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная дата';
														|en = 'Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М107001_");
	ПроверитьКС2020_1_178_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_178(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.178';
													|en = '1.178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2, приложение 1';
														|en = 'Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1 к Разделу 2 (КС 1.178)';
													|en = 'Проверка приложения 1 к Разделу 2 (КС 1.178)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '1 января календарного года Титульного листа <= стр.080 прил.1 Р.2 <= 31 декабря календарного ';
			|en = '1 января календарного года Титульного листа <= стр.080 прил.1 Р.2 <= 31 декабря календарного '") +
		НСтр("ru = 'года Титульного листа';
			|en = 'года Титульного листа'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '01.01.%1 <= %2 <= 31.12.%1';
													|en = '01.01.%1 <= %2 <= 31.12.%1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная дата';
														|en = 'Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00021М108001_");
	ПроверитьКС2020_1_178_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_178_код(Настройки)
	
	Перем Показатели;
	
	ГодТитульныйСтр	= СтруктураДанныхТитульный.ОтчетГод;
	ГодТитульный	= СтроковыеФункцииКлиентСервер.СтрокаВЧисло(ГодТитульныйСтр);
	
	Если ГодТитульный = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР2"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР2"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР2
	|	И ВТ_100.Строка_	= &СтрокаР2
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И НЕ Год(Выборка.Показатель) = ГодТитульный;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			ГодТитульныйСтр, Формат(Выборка.Показатель, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_179(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.179';
													|en = '1.179'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2, приложение 1';
														|en = 'Раздел 2, приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1 к Разделу 2 (КС 1.179)';
													|en = 'Проверка приложения 1 к Разделу 2 (КС 1.179)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Дата начала членства в КФХ в стр.070 прил.1 Р.2 <= стр.080 прил.1 Р.2';
			|en = 'Дата начала членства в КФХ в стр.070 прил.1 Р.2 <= стр.080 прил.1 Р.2'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 <= %2';
													|en = '%1 <= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная дата';
														|en = 'Ошибочная дата'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель1", "П00021М107001_");
	Настройки.Вставить("Показатель2", "П00021М108001_");
	ПроверитьКС2020_1_179_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_179_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель1", Настройки.Показатель1);
	ИменаПоказателей.Вставить("Показатель2", Настройки.Показатель2);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР21"		, Сред(Настройки.Показатель1, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР21"		, Сред(Настройки.Показатель1, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР22"		, Сред(Настройки.Показатель2, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки,
	|	ВТ_100.Строка_		КАК СтрокаПоказателя
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР21
	|	И ВТ_100.Строка_ В (&СтрокаР21, &СтрокаР22)
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТПоказателя1.Отчет			КАК Отчет,
	|	ТПоказателя1.Страница		КАК Страница,
	|	ТПоказателя1.НомерСтроки	КАК НомерСтроки,
	|	ТПоказателя1.Показатель		КАК Показатель1,
	|	ТПоказателя2.Показатель		КАК Показатель2
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|		ПО ТПоказателя1.НомерСтроки = ТПоказателя2.НомерСтроки
	|ГДЕ
	|	ТПоказателя1.СтрокаПоказателя = ""070""
	|	И ТПоказателя2.СтрокаПоказателя = ""080""
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель1);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель2);
		
		Настройки.ЭтоОшибка		= ДанныеКС.Р00021Заполнен И Выборка.Показатель1 > Выборка.Показатель2;
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			Формат(Выборка.Показатель1, "ДФ=dd.MM.yyyy; ДП=(...)"), Формат(Выборка.Показатель2, "ДФ=dd.MM.yyyy; ДП=(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Прочие

Процедура ПроверитьКС2020_1_180(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.180';
													|en = '1.180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.180)';
													|en = 'Проверка Раздела 1 (КС 1.180)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.020 Р.1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.020 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010002001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_181(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.181';
													|en = '1.181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.181)';
													|en = 'Проверка Раздела 1 (КС 1.181)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.040 Р.1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.040 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010004001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_182(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.182';
													|en = '1.182'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.182)';
													|en = 'Проверка Раздела 1 (КС 1.182)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.060 Р.1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.060 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М106001_");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_183(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.183';
													|en = '1.183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.183)';
													|en = 'Проверка Раздела 1 (КС 1.183)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.080 Р.1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.080 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П00001М208001_");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_184(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.184';
													|en = '1.184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.184)';
													|en = 'Проверка Раздела 1 (КС 1.184)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.100 Р.1 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.100 Р.1 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000010010001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_185(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.185';
													|en = '1.185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 1.185)';
													|en = 'Проверка Раздела 2 (КС 1.185)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.020 Р.2 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.020 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020002001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_186(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.186';
													|en = '1.186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 1.186)';
													|en = 'Проверка Раздела 2 (КС 1.186)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'КБК в стр.040 Р.2 должен соответствовать списку допустимых значений';
			|en = 'КБК в стр.040 Р.2 должен соответствовать списку допустимых значений'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное КБК';
														|en = 'Ошибочное КБК'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000020004001");
	ПроверитьКС2020_1_186_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_186_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Показатель,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.СтрокаТЧ		КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР1
	|	И ВТ_100.Строка_	= &СтрокаР1
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	ПрефиксПоказателя = Сред(Настройки.Показатель, 1, 13);
	СпискиКБК = ДанныеКС.СписочныеЗначения;
	
	Пока Выборка.Следующий() Цикл
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		
		Если СпискиКБК.Свойство(ПрефиксПоказателя) Тогда
			Настройки.ЭтоОшибка		= СпискиКБК[ПрефиксПоказателя].Найти(Выборка.Показатель) = Неопределено;
		Иначе
			Настройки.ЭтоОшибка		= Ложь;
		КонецЕсли; 
		Настройки.Расшифровка	= СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Настройки.ШаблонРасшифровки,
			?(ЗначениеЗаполнено(Выборка.Показатель), Выборка.Показатель, "(...)"));
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_187(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.187';
													|en = '1.187'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 1.187)';
													|en = 'Проверка Раздела 1 (КС 1.187)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'ОКТМО в стр.010 Р.1 должен соответствовать Общероссийскому классификатору территорий ';
			|en = 'ОКТМО в стр.010 Р.1 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru = 'муниципальных образований';
			|en = 'муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочный ОКТМО';
														|en = 'Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_188(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.188';
													|en = '1.188'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 2';
														|en = 'Раздел 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 2 (КС 1.188)';
													|en = 'Проверка Раздела 2 (КС 1.188)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'ОКТМО в стр.010 Р.2 должен соответствовать Общероссийскому классификатору территорий ';
			|en = 'ОКТМО в стр.010 Р.2 должен соответствовать Общероссийскому классификатору территорий '") +
		НСтр("ru = 'муниципальных образований';
			|en = 'муниципальных образований'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 в списке допустимых значений';
													|en = '%1 в списке допустимых значений'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочный ОКТМО';
														|en = 'Ошибочный ОКТМО'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_189(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.189';
													|en = '1.189'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.189)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.189)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '∑ Стр.200 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.200 подр.3.2.2 Р.3 предыдущего ';
			|en = '∑ Стр.200 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.200 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru = 'отчетного периода не равна 0';
			|en = 'отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы';
														|en = 'Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_190(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.190';
													|en = '1.190'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.190)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.190)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = '∑ Стр.210 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.210 подр.3.2.2 Р.3 предыдущего ';
			|en = '∑ Стр.210 подр.3.2.2 Р.3 не равна 0, при условии что ∑ Стр.210 подр.3.2.2 Р.3 предыдущего '") +
		НСтр("ru = 'отчетного периода не равна 0';
			|en = 'отчетного периода не равна 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма страховых взносов';
														|en = 'Ошибочная сумма страховых взносов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_191(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.191';
													|en = '1.191'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.191)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.191)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (2 месяц ОП) = стр.190 подр.3.2.2 ';
			|en = 'Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (2 месяц ОП) = стр.190 подр.3.2.2 '") +
		НСтр("ru = 'Р.3 (3 месяц ОП)';
			|en = 'Р.3 (3 месяц ОП)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение тарифа';
														|en = 'Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_192(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.192';
													|en = '1.192'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.2';
														|en = 'Раздел 3, подраздел 3.2.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.192)';
													|en = 'Проверка подраздела 3.2.2 к Разделу 3 (КС 1.192)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (3 месяц ОП) предыдущего отчетного ';
			|en = 'Стр.190 подр.3.2.2 Р.3 (1 месяц ОП) = стр.190 подр.3.2.2 Р.3 (3 месяц ОП) предыдущего отчетного '") +
		НСтр("ru = 'периода';
			|en = 'периода'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение тарифа';
														|en = 'Ошибочное значение тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_193(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.193';
													|en = '1.193'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1';
														|en = 'Приложение 1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1 к Разделу 1 (КС 1.193)';
													|en = 'Проверка приложения 1 к Разделу 1 (КС 1.193)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если код тарифа в стр.001 прил.1 Р.1 = 20, то наличие прил.1 Р.1 с кодом тарифа в стр.001 ';
			|en = 'Если код тарифа в стр.001 прил.1 Р.1 = 20, то наличие прил.1 Р.1 с кодом тарифа в стр.001 '") +
		НСтр("ru = '= 01 обязательно';
			|en = '= 01 обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Код тарифа 01 заявлен';
													|en = 'Код тарифа 01 заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода тарифа';
														|en = 'Ошибочное значение кода тарифа'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("Показатель", "П000110000101");
	ПроверитьКС2020_1_193_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_193_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Показатель", Настройки.Показатель);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР1"		, Сред(Настройки.Показатель, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР1"		, Сред(Настройки.Показатель, 9, 3));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК Показатель,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""01""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф01,
	|	ВЫБОР
	|		КОГДА ВТ_100.Значение_ = ""20""
	|			ТОГДА ВТ_100.Значение_
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК Тариф20
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел = &РазделР1
	|	И ВТ_100.Строка_ = &СтрокаР1
	|	И ВТ_100.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	Страница
	|ИТОГИ
	|	МАКСИМУМ(Тариф01),
	|	МАКСИМУМ(Тариф20)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаТ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Если ВыборкаТ.Следующий() Тогда
		ЗарегистрироватьФормулу2020(Настройки);
		
		Выборка = ВыборкаТ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.ЭтоОшибка		= ЗначениеЗаполнено(ВыборкаТ.Тариф20) И НЕ ЗначениеЗаполнено(ВыборкаТ.Тариф01);
		Настройки.Расшифровка	= Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2020(Настройки);
	КонецЕсли;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_194(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.194';
													|en = '1.194'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории МС';
													|en = 'При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.194)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.194)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = НР обязательно';
			|en = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = НР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Код категории НР заявлен';
													|en = 'Код категории НР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода категории';
														|en = 'Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_195(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.195';
													|en = '1.195'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории ВЖМС';
													|en = 'При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.195)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.195)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВЖНР обязательно';
			|en = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВЖНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Код категории ВЖНР заявлен';
													|en = 'Код категории ВЖНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода категории';
														|en = 'Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_196(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.196';
													|en = '1.196'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории ВПМС';
													|en = 'При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.196)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.196)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВПНР обязательно';
			|en = 'то наличие в подр.3.2.1 Р.3 по данному физическому лицу стр.130 = ВПНР обязательно'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'Код категории ВПНР заявлен';
													|en = 'Код категории ВПНР заявлен'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное значение кода категории';
														|en = 'Ошибочное значение кода категории'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2020_1_196_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_196_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М113001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|ИТОГИ
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(Фамилия),
	|	МАКСИМУМ(Снилс),
	|	МИНИМУМ(Страница)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И НЕ ЗначениеЗаполнено(ВыборкаФ.КатегорияНР);
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц";
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = Настройки.ШаблонРасшифровки;
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_197(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.197';
													|en = '1.197'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории МС';
													|en = 'При наличии категории МС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.197)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.197)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = МС, '") +
		НСтр("ru = 'то по стр.130 = НР стр.150 = МРОТ по каждому значению стр.120';
			|en = 'то по стр.130 = НР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы';
														|en = 'Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "НР");
	Настройки.Вставить("КатегорияМС", "МС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_198(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.198';
													|en = '1.198'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории ВЖМС';
													|en = 'При наличии категории ВЖМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.198)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.198)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВЖМС, '") +
		НСтр("ru = 'то по стр.130 = ВЖНР стр.150 = МРОТ по каждому значению стр.120';
			|en = 'то по стр.130 = ВЖНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы';
														|en = 'Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВЖНР");
	Настройки.Вставить("КатегорияМС", "ВЖМС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_199(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.199';
													|en = '1.199'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'При наличии категории ВПМС';
													|en = 'При наличии категории ВПМС'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.199)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 1.199)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, ';
			|en = 'Если в подр.3.2.1 Р.3 по физическому лицу (совокупности показателей СНИЛС + ФИО) стр.130 = ВПМС, '") +
		НСтр("ru = 'то по стр.130 = ВПНР стр.150 = МРОТ по каждому значению стр.120';
			|en = 'то по стр.130 = ВПНР стр.150 = МРОТ по каждому значению стр.120'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы';
														|en = 'Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КатегорияНР", "ВПНР");
	Настройки.Вставить("КатегорияМС", "ВПМС");
	
	ПроверитьКС2020_1_199_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_199_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.МРОТ = Неопределено ИЛИ ДанныеКС.ПредельнаяВеличинаБазы = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Фамилия"		, "П000310004001");
	ИменаПоказателей.Вставить("Показатель"	, "П00321М115001_");
	
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("КатегорияНР"	, Настройки.КатегорияНР);
	Запрос.УстановитьПараметр("КатегорияМС"	, Настройки.КатегорияМС);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) КАК КатегорияМС
	|ПОМЕСТИТЬ ВТ_311
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|
	|ИМЕЮЩИЕ
	|	МАКСИМУМ(ВЫБОР
	|			КОГДА ВТ_321.С130 = &КатегорияМС
	|				ТОГДА ВТ_321.С130
	|			ИНАЧЕ """"
	|		КОНЕЦ) = &КатегорияМС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК КлючСортировки,
	|	СУММА(ВТ_321.С150) КАК БазаИтогом
	|ПОМЕСТИТЬ ВТ_312
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|			И (ВТ_321.Мес <= &ОтчетныйМесяц)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_310.Фамилия + ВТ_310.Снилс
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК КлючСортировки,
	|	ВТ_310.Ключ КАК Ключ,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С130 КАК Категория,
	|	ВТ_321.С150 КАК Показатель,
	|	ВТ_321.МесСтр КАК Мес,
	|	ВТ_312.БазаИтогом КАК БазаИтогом,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияНР,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияМС
	|			ТОГДА ВТ_321.С130
	|		ИНАЧЕ """"
	|	КОНЕЦ КАК КатегорияМС,
	|	ВЫБОР
	|		КОГДА ВТ_321.С130 = &КатегорияНР
	|			ТОГДА ВТ_321.С150
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК БазаНР
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_311 КАК ВТ_311
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_311.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_312 КАК ВТ_312
	|		ПО (ВТ_310.Фамилия + ВТ_310.Снилс = ВТ_312.КлючСортировки)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	ВТ_310.Мес = &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КлючСортировки
	|ИТОГИ
	|	МАКСИМУМ(Снилс),
	|	МАКСИМУМ(Фамилия),
	|	МИНИМУМ(Страница),
	|	МАКСИМУМ(Мес),
	|	МАКСИМУМ(БазаИтогом),
	|	МАКСИМУМ(КатегорияНР),
	|	МАКСИМУМ(КатегорияМС),
	|	МАКСИМУМ(БазаНР)
	|ПО
	|	КлючСортировки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_311
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_312";
	
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаФ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаФ.Следующий() Цикл
		Настройки.ЭтоОшибка	= ЗначениеЗаполнено(ВыборкаФ.КатегорияМС) И ЗначениеЗаполнено(ВыборкаФ.КатегорияНР) 
			И ВыборкаФ.БазаИтогом <= ДанныеКС.ПредельнаяВеличинаБазы - ДанныеКС.МРОТ И НЕ ВыборкаФ.БазаНР = ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", ВыборкаФ.Фамилия + ", " + ВыборкаФ.Снилс + ", " + ВыборкаФ.Мес + " мес");
		ЗарегистрироватьФормулу2020(Настройки);
		ВнестиПоказательВРасшифровку2020(ВыборкаФ, Показатели.Фамилия);
		
		Выборка	= ВыборкаФ.Выбрать();
		Пока Выборка.Следующий() Цикл
			Показатели.Показатель.Дополнение	= "" + Выборка.Мес + " месяц, категория " + Выборка.Категория;
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.Показатель);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, ВыборкаФ.БазаНР, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_300_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.300.доп';
													|en = '1.300.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 5';
														|en = 'Приложение 5'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Статья 427 НК РФ';
													|en = 'Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Приложения 5 (КС 1.300.доп)';
													|en = 'Проверка Приложения 5 (КС 1.300.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в отчете указан код тарифа плательщика 06, то Приложение 5 к Разделу 1 должно быть заполнено';
			|en = 'Если в отчете указан код тарифа плательщика 06, то Приложение 5 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru = 'Приложение 5 заполнено';
													|en = 'Приложение 5 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Необоснованное применение кода тарифа плательщика 06';
														|en = 'Необоснованное применение кода тарифа плательщика 06'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "06");
	Настройки.Вставить("РазделЗаполнен"		, ДанныеКС.Р00015Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_301_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.301.доп';
													|en = '1.301.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 6';
														|en = 'Приложение 6'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Статья 427 НК РФ';
													|en = 'Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Приложения 6 (КС 1.301.доп)';
													|en = 'Проверка Приложения 6 (КС 1.301.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в отчете указан код тарифа плательщика 10, то Приложение 6 к Разделу 1 должно быть заполнено';
			|en = 'Если в отчете указан код тарифа плательщика 10, то Приложение 6 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru = 'Приложение 6 заполнено';
													|en = 'Приложение 6 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Необоснованное применение кода тарифа плательщика 10';
														|en = 'Необоснованное применение кода тарифа плательщика 10'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "10");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00016Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_302_доп(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1.302.доп';
													|en = '1.302.доп'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 7';
														|en = 'Приложение 7'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Статья 427 НК РФ';
													|en = 'Статья 427 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru=''"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Приложения 7 (КС 1.302.доп)';
													|en = 'Проверка Приложения 7 (КС 1.302.доп)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Если в отчете указан код тарифа плательщика 18, то Приложение 7 к Разделу 1 должно быть заполнено';
			|en = 'Если в отчете указан код тарифа плательщика 18, то Приложение 7 к Разделу 1 должно быть заполнено'"));
	Заголовки.Вставить("Расшифровка"		, НСтр("ru = 'Приложение 7 заполнено';
													|en = 'Приложение 7 заполнено'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Необоснованное применение кода тарифа плательщика 18';
														|en = 'Необоснованное применение кода тарифа плательщика 18'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"			, "18");
	Настройки.Вставить("РазделЗаполнен	"	, ДанныеКС.Р00017Заполнен);
	ПроверитьКС2020_1_302_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_1_302_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, "П000110000101");
	ЗаполнитьСтруктуруПоказателей2020(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, "П00011");
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2020(Настройки);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ Настройки.РазделЗаполнен;
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_2_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.1';
													|en = '2.1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 1';
														|en = 'Раздел 1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка Раздела 1 (КС 2.1)';
													|en = 'Проверка Раздела 1 (КС 2.1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Расчет обязателен к представлению в случае представления отчета 6-НДФЛ';
			|en = 'Расчет обязателен к представлению в случае представления отчета 6-НДФЛ'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибка представления Расчета';
														|en = 'Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.2';
													|en = '2.2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1.1';
														|en = 'Приложение 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Отключено. Неуниверсальное';
													|en = 'Отключено. Неуниверсальное'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 1.1 к Разделу 1 (КС 2.2)';
													|en = 'Проверка приложения 1.1 к Разделу 1 (КС 2.2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Стр.020 - стр.025 Р.1 6-НДФЛ >= гр.1 стр.050 подр.1.1 прил.1 Р.1';
			|en = 'Стр.020 - стр.025 Р.1 6-НДФЛ >= гр.1 стр.050 подр.1.1 прил.1 Р.1'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма базы';
														|en = 'Ошибочная сумма базы'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.3';
													|en = '2.3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 2.3)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 2.3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.2 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 1 месяце ОП';
			|en = 'Гр.2 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 1 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.4';
													|en = '2.4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 2.4)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 2.4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.3 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 2 месяце ОП';
			|en = 'Гр.3 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 2 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.5';
													|en = '2.5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 2.5)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 2.5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Гр.4 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 3 месяце ОП';
			|en = 'Гр.4 стр.080 прил.2 Р.1 = сумма выделенных ФСС России средств на возмещение расходов в 3 месяце ОП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_6(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.6';
													|en = '2.6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 421 НК РФ';
													|en = 'ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД';
													|en = 'ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 2.6)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 2.6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Средняя сумма выплат застрахованному лицу по трудовому договору (сумма (ст. 140 подр. 3.2.1 Р.3 ';
			|en = 'Средняя сумма выплат застрахованному лицу по трудовому договору (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru = '- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, ';
			|en = '- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru = 'должна быть больше или равна МРОТ, по каждому застрахованному';
			|en = 'должна быть больше или равна МРОТ, по каждому застрахованному'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '(%1 - %2) / %3 Итог [%4] >= %5';
													|en = '(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Возможно занижение базы для исчисления страховых взносов';
			|en = 'Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер и может быть проигнорирована';
			|en = 'Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.МРОТ = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Снилс КАК Снилс,
	|	ВТ_310.Фамилия КАК Фамилия,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.Мес КАК Мес,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ,
	|	Мес
	|ИТОГИ
	|	МИНИМУМ(Фамилия),
	|	МИНИМУМ(Снилс),
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Мес),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	Ключ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Мес, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.МРОТ;
		
		Если НЕ Настройки.ЭтоОшибка И Настройки.ПриоритетПроизводительности Тогда
			Продолжить;
		КонецЕсли;
		
		Настройки.Вставить("ДопСведения", Выборка.Фамилия + ", " + Выборка.Снилс);
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Сумма выплат';
												|en = 'Сумма выплат'")								, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Количество месяцев, в которых были выплаты';
												|en = 'Количество месяцев, в которых были выплаты'")	, Выборка.Мес);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Средняя сумма выплат';
												|en = 'Средняя сумма выплат'")						, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'МРОТ';
												|en = 'МРОТ'")										, ДанныеКС.МРОТ);
		
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2020(ВыборкаД, Показатели.Разность);
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, 
			Выборка.С140, Выборка.С160, Выборка.Мес, РасчетнаяСумма, ДанныеКС.МРОТ);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_7(СтруктураРезультата)
	
	Перем Показатели;
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.7';
													|en = '2.7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Раздел 3, подраздел 3.2.1';
														|en = 'Раздел 3, подраздел 3.2.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 421 НК РФ';
													|en = 'ст. 421 НК РФ'"));
	Заголовки.Вставить("Условие"			, НСтр("ru = 'ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД';
													|en = 'ст.140 - ст.160 подр.3.2.1 Раздела 3 не = 0, заполнен КПП и ОКВЭД'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 2.7)';
													|en = 'Проверка подраздела 3.2.1 к Разделу 3 (КС 2.7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Средняя сумма выплат застрахованным лицам по трудовым договорам (сумма (ст. 140 подр. 3.2.1 Р.3 ';
			|en = 'Средняя сумма выплат застрахованным лицам по трудовым договорам (сумма (ст. 140 подр. 3.2.1 Р.3 '") +
		НСтр("ru = '- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, ';
			|en = '- ст. 160 подр. 3.2.1 Р.3) по каждому месяцу расчетного периода) / количество месяцев выплат, '") +
		НСтр("ru = 'должна быть больше или равна среднеотраслевой ЗП в регионе, в целом по плательщику страховых взносов';
			|en = 'должна быть больше или равна среднеотраслевой ЗП в регионе, в целом по плательщику страховых взносов'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '(%1 - %2) / %3 Итог [%4] >= %5';
													|en = '(%1 - %2) / %3 Итог [%4] >= %5'"));
	Заголовки.Вставить("ОписаниеОшибки"		, 
		НСтр("ru = 'Возможно занижение базы для исчисления страховых взносов';
			|en = 'Возможно занижение базы для исчисления страховых взносов'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер и может быть проигнорирована';
			|en = 'Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(		, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Если ДанныеКС.СредняяЗарплата = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("Разность"	, "П00321М114001_");
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_310.Фамилия + ВТ_310.Снилс + ВТ_321.МесСтр КАК Ключ,
	|	ВТ_310.Фамилия + "", "" + ВТ_310.Снилс + "", "" +
	|	ВТ_321.МесСтр + "" месяц, "" + ВТ_321.С130 КАК ПредставлениеПоказателя,
	|	ВТ_310.Отчет КАК Отчет,
	|	ВТ_310.Страница КАК Страница,
	|	ВТ_321.СтрокаТЧ КАК НомерСтроки,
	|	ВТ_321.С140 - ВТ_321.С160 КАК Разность,
	|	ВТ_321.С140 КАК С140,
	|	ВТ_321.С160 КАК С160
	|ИЗ
	|	ВТ_310 КАК ВТ_310
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_321 КАК ВТ_321
	|		ПО ВТ_310.Ключ = ВТ_321.Ключ
	|ГДЕ
	|	НЕ ВТ_321.С140 - ВТ_321.С160 = 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ключ
	|ИТОГИ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ Ключ),
	|	СУММА(Разность),
	|	СУММА(С140),
	|	СУММА(С160)
	|ПО
	|	ОБЩИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	КолвоСотрудников = Выборка.Количество();
	Пока Выборка.Следующий() Цикл
		
		РасчетнаяСумма = Окр((Выборка.Разность) / Выборка.Ключ, 2);
		Настройки.ЭтоОшибка	= РасчетнаяСумма < ДанныеКС.СредняяЗарплата;
		ЗарегистрироватьФормулу2020(Настройки);
		
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Сумма выплат в целом по плательщику';
												|en = 'Сумма выплат в целом по плательщику'")					, Выборка.Разность);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Количество человеко-месяцев, в которых были выплаты';
												|en = 'Количество человеко-месяцев, в которых были выплаты'")	, Выборка.Ключ);
		ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Средняя сумма выплат в целом по плательщику';
												|en = 'Средняя сумма выплат в целом по плательщику'")			, РасчетнаяСумма);
		ВнестиПоказательБезРасшифровки2020("Средняя зарплата, регион " + ДанныеКС.КодРегиона + ", отрасль (ОКВЭД) " 
			+ ДанныеКС.КодОКВЭД, ДанныеКС.СредняяЗарплата);
		
		Счетчик = 1;
		ВыборкаД = Выборка.Выбрать();
		Пока ВыборкаД.Следующий() И Счетчик < 2000 Цикл
			Показатели.Разность.Представление = ВыборкаД.ПредставлениеПоказателя;
			ВнестиПоказательВРасшифровку2020(ВыборкаД, Показатели.Разность);
			Счетчик = Счетчик + 1;
		КонецЦикла;
		
		Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, Выборка.С140, Выборка.С160, Выборка.Ключ, 
			РасчетнаяСумма, ДанныеКС.СредняяЗарплата);
		ДополнитьСтруктуруОшибок2020(Настройки);
		
	КонецЦикла;
	
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.8';
													|en = '2.8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.8)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в поле 001 подр.1.1 прил.1 Р.1 значения 20, обязательно нахождение данных ';
			|en = 'При наличии в поле 001 подр.1.1 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru = 'о плательщике в реестре МСП';
			|en = 'о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибка представления Расчета';
														|en = 'Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.9';
													|en = '2.9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.9)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в поле 001 подр.1.2 прил.1 Р.1 значения 20, обязательно нахождение данных ';
			|en = 'При наличии в поле 001 подр.1.2 прил.1 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru = 'о плательщике в реестре МСП';
			|en = 'о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибка представления Расчета';
														|en = 'Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.10';
													|en = '2.10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Комментарий"		, НСтр("ru = 'Реализация отложена';
													|en = 'Реализация отложена'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 2.10)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 2.10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в поле 001 прил.2 Р.1 значения 20, обязательно нахождение данных ';
			|en = 'При наличии в поле 001 прил.2 Р.1 значения 20, обязательно нахождение данных '") +
		НСтр("ru = 'о плательщике в реестре МСП';
			|en = 'о плательщике в реестре МСП'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибка представления Расчета';
														|en = 'Ошибка представления Расчета'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_11(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.11';
													|en = '2.11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.1';
														|en = 'Приложение 1, подраздел 1.1'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.11)';
													|en = 'Проверка подраздела 1.1 приложения 1 к Разделу 1 (КС 2.11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в подр.1.1 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение ';
			|en = 'При наличии в подр.1.1 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: ';
			|en = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'ОКВЭД2 %1 в списке (%2)';
													|en = 'ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Возможно необоснованное применение кода тарифа плательщика 21. ';
														|en = 'Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21';
			|en = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер и может быть проигнорирована';
			|en = 'Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_12(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.12';
													|en = '2.12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 1, подраздел 1.2';
														|en = 'Приложение 1, подраздел 1.2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст. 431 НК РФ';
													|en = 'ст. 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.12)';
													|en = 'Проверка подраздела 1.2 приложения 1 к Разделу 1 (КС 2.12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в подр.1.2 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение ';
			|en = 'При наличии в подр.1.2 прил.1 Р.1 значения тарифа по стр.001 прил.1 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: ';
			|en = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'ОКВЭД2 %1 в списке (%2)';
													|en = 'ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Возможно необоснованное применение кода тарифа плательщика 21. ';
														|en = 'Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21';
			|en = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер и может быть проигнорирована';
			|en = 'Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00011");
	Настройки.Вставить("ИмяПоказателя"	, "П000110000101");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_13(СтруктураРезультата)
	
	СписокОтраслей = 
		Обработки.РегламентированнаяОтчетностьСоотношенияПоказателей.ПолучитьСписокПострадавшихОтКороновирусаОтраслей();
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2.13';
													|en = '2.13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'ст 431 НК РФ';
													|en = 'ст 431 НК РФ'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 2.13)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 2.13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'При наличии в прил.2 Р.1 значения тарифа по стр.001 прил.2 Р.1 = 21, необходимо соблюдение ';
			|en = 'При наличии в прил.2 Р.1 значения тарифа по стр.001 прил.2 Р.1 = 21, необходимо соблюдение '") +
		НСтр("ru = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: ';
			|en = 'условий применения тарифа 21, одним из которых является деятельность в пострадавших отраслях, ОКВЭД2: '") +
		СтрСоединить(СписокОтраслей, ", "));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = 'ОКВЭД2 %1 в списке (%2)';
													|en = 'ОКВЭД2 %1 в списке (%2)'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Возможно необоснованное применение кода тарифа плательщика 21. ';
														|en = 'Возможно необоснованное применение кода тарифа плательщика 21. '") +
		НСтр("ru = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21';
			|en = 'Пожалуйста, убедитесь в наличии достаточных оснований для применения тарифа 21'"));
	Заголовки.Вставить("Комментарий"		, 
		НСтр("ru = 'Проверка носит справочный характер и может быть проигнорирована';
			|en = 'Проверка носит справочный характер и может быть проигнорирована'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("КодТарифа"		, "21");
	Настройки.Вставить("РазделТарифа"	, "П00012");
	Настройки.Вставить("ИмяПоказателя"	, "П00012М100101_");
	ПроверитьКС2020_2_13_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_13_код(Настройки)
	
	Перем Показатели;
	
	Если ДанныеКС.ПострадавшиеОтрасли = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("КодТарифа"		, Настройки.ИмяПоказателя);
	ЗаполнитьСтруктуруПоказателей2020(Показатели	, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.УстановитьПараметр("РазделТарифа"	, Настройки.РазделТарифа);
	Запрос.УстановитьПараметр("СтрокаТарифа"	, "001");
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_ КАК КодТарифа,
	|	ВТ_100.Отчет КАК Отчет,
	|	ВТ_100.Страница КАК Страница,
	|	ВТ_100.СтрокаТЧ КАК НомерСтроки
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделТарифа
	|	И ВТ_100.Строка_	= &СтрокаТарифа 
	|	И ВТ_100.Графа		= ""01""
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодТарифа,
	|	Страница,
	|	НомерСтроки";
	
	РезультатЗапроса = Запрос.Выполнить();
	ЗарегистрироватьФормулу2020(Настройки);
	ВнестиПоказательБезРасшифровки2020(НСтр("ru = 'Код ОКВЭД2';
											|en = 'Код ОКВЭД2'"), ДанныеКС.ОКВЭД2);
	КодНайден = Ложь;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.КодТарифа);
		Если Выборка.КодТарифа = Настройки.КодТарифа Тогда
			КодНайден = Истина;
		КонецЕсли;
	КонецЦикла;
	
	Настройки.ЭтоОшибка	= КодНайден И НЕ ДанныеКС.ЭтоПострадавшаяОтрасль;
	Настройки.Расшифровка = СтрШаблон(Настройки.ШаблонРасшифровки, СтрРазделить(ДанныеКС.ОКВЭД2, ".")[0], 
		СтрСоединить(ДанныеКС.ПострадавшиеОтрасли, ", "));
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

#КонецОбласти

#Область Проверки_ФСС

#Область Проверки_Приложения_2

Процедура ПроверитьКС2020_1(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '1';
													|en = '1'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 2';
														|en = 'Приложение 2'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 2 к Разделу 1 (КС 1)';
													|en = 'Проверка приложения 2 к Разделу 1 (КС 1)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма произведенных расходов в гр.1 стр.070 прил.2 Р.1 = гр.3 стр.100 прил.3 Р.1';
			|en = 'Сумма произведенных расходов в гр.1 стр.070 прил.2 Р.1 = гр.3 стр.100 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000120007001");
	Настройки.Вставить("ПоказательР12", "П000130010003");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2020_1_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("РазделР11"		, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("РазделР12"		, Сред(Настройки.ПоказательР12, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР11,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР11
	|	И ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК ПоказательР12,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &РазделР12
	|	И ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12
	|	И ВТ_100.Мес		= &ОтчетныйМесяц";
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	ВыборкаР11 = РезультатЗапроса[0].Выбрать();
	ВыборкаР12 = РезультатЗапроса[1].Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаР11.Следующий() Тогда
		СумР11 = ВыборкаР11.ПоказательР11;
		ВнестиПоказательВРасшифровку2020(ВыборкаР11, Показатели.ПоказательР11);
	КонецЕсли;
	
	Если ВыборкаР12.Следующий() Тогда
		СумР12 = ВыборкаР12.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(ВыборкаР12, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_2(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '2';
													|en = '2'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 2)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 2)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.010 прил.3 Р.1 >= гр.1 стр.011 прил.3 Р.1';
			|en = 'Число получателей пособий в гр.1 стр.010 прил.3 Р.1 >= гр.1 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001001");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_2_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 >= СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_3(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '3';
													|en = '3'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 3)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 3)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 >= гр.2 стр.011 прил.3 Р.1';
			|en = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 >= гр.2 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_4(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '4';
													|en = '4'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 4)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 4)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 >= гр.3 стр.011 прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 >= гр.3 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_5(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '5';
													|en = '5'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 5)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 5)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.010 прил.3 Р.1 >= гр.4 стр.011 прил.3 Р.1';
			|en = 'Сумма расходов в гр.4 стр.010 прил.3 Р.1 >= гр.4 стр.011 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000130001104");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_6(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '6';
													|en = '6'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 6)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 6)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.020 прил.3 Р.1 >= гр.1 стр.021 прил.3 Р.1';
			|en = 'Число получателей пособий в гр.1 стр.020 прил.3 Р.1 >= гр.1 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002001");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_7(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '7';
													|en = '7'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 7)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 7)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 >= гр.2 стр.021 прил.3 Р.1';
			|en = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 >= гр.2 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_8(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '8';
													|en = '8'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 8)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 8)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 >= гр.3 стр.021 прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 >= гр.3 стр.021 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_9(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '9';
													|en = '9'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 9)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 9)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.030 прил.3 Р.1 >= гр.1 стр.031 прил.3 Р.1';
			|en = 'Число получателей пособий в гр.1 стр.030 прил.3 Р.1 >= гр.1 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003001");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_10(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '10';
													|en = '10'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 10)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 10)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 >= гр.2 стр.031 прил.3 Р.1';
			|en = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 >= гр.2 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_11(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '11';
													|en = '11'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 11)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 11)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 >= гр.3 стр.031 прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 >= гр.3 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_12(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '12';
													|en = '12'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 12)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 12)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.030 прил.3 Р.1 >= гр.4 стр.031 прил.3 Р.1';
			|en = 'Сумма расходов в гр.4 стр.030 прил.3 Р.1 >= гр.4 стр.031 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000130003104");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_13(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '13';
													|en = '13'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 13)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 13)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.061 прил.3 Р.1';
			|en = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.061 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_14(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '14';
													|en = '14'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 14)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 14)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.062 прил.3 Р.1';
			|en = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 >= гр.1 стр.062 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_15(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '15';
													|en = '15'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 15)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 15)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 = гр.2 (стр.061 + стр.062) прил.3 Р.1';
			|en = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 = гр.2 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	Настройки.Вставить("ПоказательР13", "П000130006202");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_15_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_16(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '16';
													|en = '16'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 16)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 16)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 = гр.3 (стр.061 + стр.062) прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 = гр.3 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	Настройки.Вставить("ПоказательР13", "П000130006203");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_17(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '17';
													|en = '17'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 17)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 17)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 (стр.061 + стр.062) прил.3 Р.1';
			|en = 'Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 (стр.061 + стр.062) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000130006104");
	Настройки.Вставить("ПоказательР13", "П000130006204");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_18(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '18';
													|en = '18'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 18)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 18)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.070 прил.3 Р.1 = гр.4 стр.070 прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.070 прил.3 Р.1 = гр.4 стр.070 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007004");
	ПроверитьКС2020_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_18_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("Строка"			, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	= &Строка
	|	И ВТ_100.Графа		В (&ГрафаР11, &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_19(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '19';
													|en = '19'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 19)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 19)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.080 прил.3 Р.1 = гр.4 стр.080 прил.3 Р.1';
			|en = 'Сумма расходов в гр.3 стр.080 прил.3 Р.1 = гр.4 стр.080 прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008003");
	Настройки.Вставить("ПоказательР12", "П000130008004");
	ПроверитьКС2020_18_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_20(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '20';
													|en = '20'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 20)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 20)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.100 прил.3 Р.1 = гр.3 (стр.010 + стр.020 + стр.030 + стр.040 + стр.050 + ';
			|en = 'Сумма расходов в гр.3 стр.100 прил.3 Р.1 = гр.3 (стр.010 + стр.020 + стр.030 + стр.040 + стр.050 + '") +
		НСтр("ru = 'стр.060 + стр.070 + стр.080 + стр.090) прил.3 Р.1';
			|en = 'стр.060 + стр.070 + стр.080 + стр.090) прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("040");
	МассивНомеровСтрок.Добавить("050");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "03");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_20_код(Настройки)
	
	Перем Показатели;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Настройки.Раздел);
	Запрос.УстановитьПараметр("Графа"			, Настройки.Графа);
	Запрос.УстановитьПараметр("МассивСтрок"		, Настройки.МассивСтрок);
	Запрос.УстановитьПараметр("СтрокаСуммы"		, Настройки.СтрокаСуммы);
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Раздел		КАК Раздел,
	|	ВТ_100.ТабЧасть		КАК ТабЧасть,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&МассивСтрок)
	|	И ВТ_100.Графа		В (&Графа)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_101.Раздел + ВТ_101.ТабЧасть + ВТ_101.Строка_ + ВТ_101.Графа КАК КодПоказателя,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 1 ИНАЧЕ 2 
	|	КОНЕЦ КАК Приоритет,
	|	ВЫБОР
	|		КОГДА ВТ_101.Строка_ = &СтрокаСуммы ТОГДА 
	|		Выразить(ВТ_101.Значение_ КАК Число) 
	|		ИНАЧЕ 0 
	|	КОНЕЦ КАК ПоказательР11,
	|	Выразить(ВТ_101.Значение_ КАК Число)		КАК ПоказательР12,
	|	ВТ_101.Отчет		КАК Отчет,
	|	ВТ_101.Страница	КАК Страница,
	|	ВТ_101.Строка_	КАК Строка_
	|ИЗ
	|	ВТ_101 КАК ВТ_101
	|
	|УПОРЯДОЧИТЬ ПО
	|	Приоритет,
	|	Строка_
	|ИТОГИ
	|	СУММА(ПоказательР11),
	|	СУММА(ПоказательР12)
	|ПО
	|	ОБЩИЕ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	ВыборкаГ = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ЗарегистрироватьФормулу2020(Настройки);
	МассивСумм = Новый Массив;
	СумР11 = 0;
	СумР12 = 0;
	
	Если ВыборкаГ.Следующий() Тогда
		СумР11 = ВыборкаГ.ПоказательР11;
		СумР12 = ВыборкаГ.ПоказательР12 - ВыборкаГ.ПоказательР11;
		
		Выборка = ВыборкаГ.Выбрать();
		Пока Выборка.Следующий() Цикл
			ИменаПоказателей = Новый Структура;
			ИменаПоказателей.Вставить("ПоказательР12", Выборка.КодПоказателя);
			ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
			ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
			Если Выборка.Приоритет = 2 Тогда
				МассивСумм.Добавить(Выборка.ПоказательР12);
			КонецЕсли;
		КонецЦикла
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= НЕ СумР11 = СумР12;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СтрСоединить(МассивСумм, " + "), СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_21(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '21';
													|en = '21'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 21)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 21)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 (стр.010 + стр.030 + стр.060 + стр.070 + стр.080) ';
			|en = 'Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 (стр.010 + стр.030 + стр.060 + стр.070 + стр.080) '") +
		НСтр("ru = 'прил.3 Р.1';
			|en = 'прил.3 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("010");
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("060");
	МассивНомеровСтрок.Добавить("070");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("100");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00013");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "100");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_22(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '22';
													|en = '22'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 22)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 22)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.010 прил.3 Р.1 = гр.4 стр.250 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.010 прил.3 Р.1 = гр.4 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001004");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_23(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '23';
													|en = '23'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 23)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 23)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.030 прил.3 Р.1 = гр.4 стр.260 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.030 прил.3 Р.1 = гр.4 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003004");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_24(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '24';
													|en = '24'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 24)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 24)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 стр.270 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.060 прил.3 Р.1 = гр.4 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006004");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_25(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '25';
													|en = '25'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 25)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 25)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.061 прил.3 Р.1 = гр.4 стр.280 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.061 прил.3 Р.1 = гр.4 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006104");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_26(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '26';
													|en = '26'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 26)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 26)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.062 прил.3 Р.1 = гр.4 стр.290 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.062 прил.3 Р.1 = гр.4 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006204");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_27(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '27';
													|en = '27'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 27)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 27)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.070 прил.3 Р.1 = гр.4 стр.300 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.070 прил.3 Р.1 = гр.4 стр.300 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007004");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_28(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '28';
													|en = '28'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 28)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 28)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.080 прил.3 Р.1 = гр.4 стр.310 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.080 прил.3 Р.1 = гр.4 стр.310 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130008004");
	Настройки.Вставить("ПоказательР12", "П000140031004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_29(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '29';
													|en = '29'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 29)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 29)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 стр.240 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.100 прил.3 Р.1 = гр.4 стр.240 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130010004");
	Настройки.Вставить("ПоказательР12", "П000140024004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2020_30(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '30';
													|en = '30'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 30)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 30)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_31(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '31';
													|en = '31'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 31)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 31)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_32(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '32';
													|en = '32'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 32)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 32)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.010 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_33(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '33';
													|en = '33'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 33)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 33)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_34(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '34';
													|en = '34'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 34)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 34)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.040 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_35(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '35';
													|en = '35'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 35)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 35)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 = гр.3 (стр.050 + стр.060) прил.4 Р.1';
			|en = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 = гр.3 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	Настройки.Вставить("ПоказательР13", "П000140006003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_36(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '36';
													|en = '36'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 36)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 36)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.010 прил.4 Р.1 = гр.4 (стр.020 + стр.030 + стр.040) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.010 прил.4 Р.1 = гр.4 (стр.020 + стр.030 + стр.040) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 + %4 Итог [%5]';
													|en = '%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140001004");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	Настройки.Вставить("ПоказательР13", "П000140003004");
	Настройки.Вставить("ПоказательР14", "П000140004004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_36_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ИменаПоказателей.Вставить("ПоказательР13", Настройки.ПоказательР13);
	ИменаПоказателей.Вставить("ПоказательР14", Настройки.ПоказательР14);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР13"		, Сред(Настройки.ПоказательР13, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР14"		, Сред(Настройки.ПоказательР14, 9, 3));
	Запрос.УстановитьПараметр("Графа"			, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И ВТ_100.Строка_	В (&СтрокаР11, &СтрокаР12, &СтрокаР13, &СтрокаР14)
	|	И ВТ_100.Графа		= &Графа
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	Выразить(ТПоказателя3.Значение_ КАК Число)	КАК ПоказательР13,
	|	Выразить(ТПоказателя4.Значение_ КАК Число)	КАК ПоказательР14,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя3
	|			ПО	ТПоказателя3.Строка_	= &СтрокаР13
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя4
	|			ПО	ТПоказателя4.Строка_	= &СтрокаР14
	|ГДЕ
	|	ТПоказателя1.Строка_ = &СтрокаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	СумР13 = 0;
	СумР14 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		СумР13 = Выборка.ПоказательР13;
		СумР14 = Выборка.ПоказательР14;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР13);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР14);
	КонецЕсли;
	
	СуммаПоказателей		= СумР12 + СумР13 + СумР14;
	Настройки.ЭтоОшибка		= НЕ СумР11 = СуммаПоказателей;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12, СумР13, СумР14, СуммаПоказателей);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_37(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '37';
													|en = '37'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 37)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 37)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 = гр.4 (стр.050 + стр.060) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 = гр.4 (стр.050 + стр.060) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140006004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_38(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '38';
													|en = '38'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 38)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 38)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_39(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '39';
													|en = '39'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 39)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 39)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_40(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '40';
													|en = '40'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 40)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 40)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.070 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_41(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '41';
													|en = '41'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 41)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 41)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_42(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '42';
													|en = '42'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 42)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 42)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.100 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_43(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '43';
													|en = '43'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 43)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 43)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 = гр.3 (стр.110 + стр.120) прил.4 Р.1';
			|en = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 = гр.3 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	Настройки.Вставить("ПоказательР13", "П000140012003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_44(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '44';
													|en = '44'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 44)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 44)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.070 прил.4 Р.1 = гр.4 (стр.080 + стр.090 + стр.100) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.070 прил.4 Р.1 = гр.4 (стр.080 + стр.090 + стр.100) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 + %4 Итог [%5]';
													|en = '%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140007004");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	Настройки.Вставить("ПоказательР13", "П000140009004");
	Настройки.Вставить("ПоказательР14", "П000140010004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_45(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '45';
													|en = '45'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 45)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 45)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 = гр.4 (стр.110 + стр.120) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 = гр.4 (стр.110 + стр.120) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_46(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '46';
													|en = '46'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 46)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 46)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.130 прил.4 Р.1 = гр.2 стр.140 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.130 прил.4 Р.1 = гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_47(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '47';
													|en = '47'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 47)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 47)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.130 прил.4 Р.1 = гр.4 стр.140 прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.130 прил.4 Р.1 = гр.4 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2';
													|en = '%1 = %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140013004");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2020_1_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_48(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '48';
													|en = '48'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 48)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 48)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_49(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '49';
													|en = '49'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 49)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 49)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_50(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '50';
													|en = '50'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 50)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 50)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.150 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_51(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '51';
													|en = '51'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 51)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 51)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_52(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '52';
													|en = '52'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 52)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 52)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.180 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_53(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '53';
													|en = '53'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 53)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 53)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 = гр.3 (стр.190 + стр.200) прил.4 Р.1';
			|en = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 = гр.3 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	Настройки.Вставить("ПоказательР13", "П000140020003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_54(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '54';
													|en = '54'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 54)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 54)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.150 прил.4 Р.1 = гр.4 (стр.160 + стр.170 + стр.180) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.150 прил.4 Р.1 = гр.4 (стр.160 + стр.170 + стр.180) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 + %4 Итог [%5]';
													|en = '%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140015004");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	Настройки.Вставить("ПоказательР13", "П000140017004");
	Настройки.Вставить("ПоказательР14", "П000140018004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_55(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '55';
													|en = '55'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 55)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 55)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 = гр.4 (стр.190 + стр.200) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 = гр.4 (стр.190 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	Настройки.Вставить("ПоказательР13", "П000140020004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_56(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '56';
													|en = '56'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 56)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 56)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_57(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '57';
													|en = '57'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 57)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 57)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.210 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_58(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '58';
													|en = '58'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 58)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 58)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.210 прил.4 Р.1 = гр.4 (стр.220 + стр.230) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.210 прил.4 Р.1 = гр.4 (стр.220 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140021004");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	Настройки.Вставить("ПоказательР13", "П000140023004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_59(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '59';
													|en = '59'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 59)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 59)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.010 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.010 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140001002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_60(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '60';
													|en = '60'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 60)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 60)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.070 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.070 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140007002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_61(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '61';
													|en = '61'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 61)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 61)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.130 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.130 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140013002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_62(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '62';
													|en = '62'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 62)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 62)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.150 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.150 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140015002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_63(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '63';
													|en = '63'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 63)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 63)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.210 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.210 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140021002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_64(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '64';
													|en = '64'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 64)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 64)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.250 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.250 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140025002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_65(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '65';
													|en = '65'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 65)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 65)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.260 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.260 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140026002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_66(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '66';
													|en = '66'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 66)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 66)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.270 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.240 прил.4 Р.1 >= гр.2 стр.270 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140024002");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_67(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '67';
													|en = '67'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 67)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 67)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.020 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140002002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_68(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '68';
													|en = '68'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 68)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 68)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.080 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140008002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_69(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '69';
													|en = '69'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 69)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 69)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.140 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.140 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140014002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_70(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '70';
													|en = '70'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 70)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 70)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.160 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140016002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_71(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '71';
													|en = '71'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 71)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 71)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.250 прил.4 Р.1 >= гр.2 стр.220 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025002");
	Настройки.Вставить("ПоказательР12", "П000140022002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_72(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '72';
													|en = '72'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 72)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 72)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.030 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140003002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_73(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '73';
													|en = '73'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 73)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 73)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.090 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140009002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_74(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '74';
													|en = '74'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 74)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 74)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.170 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140017002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_75(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '75';
													|en = '75'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 75)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 75)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.260 прил.4 Р.1 >= гр.2 стр.230 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026002");
	Настройки.Вставить("ПоказательР12", "П000140023002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_76(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '76';
													|en = '76'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 76)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 76)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.040 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_77(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '77';
													|en = '77'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 77)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 77)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.100 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_78(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '78';
													|en = '78'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 78)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 78)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.180 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_79(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '79';
													|en = '79'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 79)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 79)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.280 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.280 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_80(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '80';
													|en = '80'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 80)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 80)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.290 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.270 прил.4 Р.1 >= гр.2 стр.290 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027002");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_81(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '81';
													|en = '81'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 81)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 81)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.050 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_82(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '82';
													|en = '82'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 82)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 82)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.110 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_83(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '83';
													|en = '83'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 83)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 83)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.280 прил.4 Р.1 >= гр.2 стр.190 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028002");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_84(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '84';
													|en = '84'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 84)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 84)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.060 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_85(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '85';
													|en = '85'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 85)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 85)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.120 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_86(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '86';
													|en = '86'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 86)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 86)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1';
			|en = 'Число получателей пособий в гр.2 стр.290 прил.4 Р.1 >= гр.2 стр.200 прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 >= %2';
													|en = '%1 >= %2'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029002");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_2_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_87(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '87';
													|en = '87'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 87)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 87)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 = гр.3 (стр.280 + стр.290) прил.4 Р.1';
			|en = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 = гр.3 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	Настройки.Вставить("ПоказательР13", "П000140029003");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_88(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '88';
													|en = '88'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 88)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 88)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.240 прил.4 Р.1 = гр.4 (стр.250 + стр.260 + стр.270 + стр.300 + ';
			|en = 'Сумма расходов в гр.4 стр.240 прил.4 Р.1 = гр.4 (стр.250 + стр.260 + стр.270 + стр.300 + '") +
		НСтр("ru = 'стр.310) прил.4 Р.1';
			|en = 'стр.310) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("240");
	МассивНомеровСтрок.Добавить("250");
	МассивНомеровСтрок.Добавить("260");
	МассивНомеровСтрок.Добавить("270");
	МассивНомеровСтрок.Добавить("300");
	МассивНомеровСтрок.Добавить("310");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "240");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_89(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '89';
													|en = '89'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 89)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 89)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.250 прил.4 Р.1 = гр.4 (стр.020 + стр.080 + стр.140 + стр.160 + ';
			|en = 'Сумма расходов в гр.4 стр.250 прил.4 Р.1 = гр.4 (стр.020 + стр.080 + стр.140 + стр.160 + '") +
		НСтр("ru = 'стр.220) прил.4 Р.1';
			|en = 'стр.220) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("020");
	МассивНомеровСтрок.Добавить("080");
	МассивНомеровСтрок.Добавить("140");
	МассивНомеровСтрок.Добавить("160");
	МассивНомеровСтрок.Добавить("220");
	МассивНомеровСтрок.Добавить("250");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "250");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_90(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '90';
													|en = '90'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 90)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 90)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.260 прил.4 Р.1 = гр.4 (стр.030 + стр.090 + стр.170 + стр.230) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.260 прил.4 Р.1 = гр.4 (стр.030 + стр.090 + стр.170 + стр.230) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 Итог [%3]';
													|en = '%1 = %2 Итог [%3]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	МассивНомеровСтрок = Новый Массив;
	МассивНомеровСтрок.Добавить("030");
	МассивНомеровСтрок.Добавить("090");
	МассивНомеровСтрок.Добавить("170");
	МассивНомеровСтрок.Добавить("230");
	МассивНомеровСтрок.Добавить("260");
	Настройки.Вставить("МассивСтрок", МассивНомеровСтрок);
	Настройки.Вставить("Раздел"		, "П00014");
	Настройки.Вставить("Графа"		, "04");
	Настройки.Вставить("СтрокаСуммы", "260");
	
	ПроверитьКС2020_20_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_91(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '91';
													|en = '91'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 91)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 91)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 = гр.4 (стр.280 + стр.290) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 = гр.4 (стр.280 + стр.290) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 Итог [%4]';
													|en = '%1 = %2 + %3 Итог [%4]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	Настройки.Вставить("ПоказательР13", "П000140029004");
	ПроверитьКС2020_15_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_92(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '92';
													|en = '92'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 92)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 92)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 = гр.4 (стр.050 + стр.110 + стр.190) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 = гр.4 (стр.050 + стр.110 + стр.190) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 + %4 Итог [%5]';
													|en = '%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	Настройки.Вставить("ПоказательР13", "П000140011004");
	Настройки.Вставить("ПоказательР14", "П000140019004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_93(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '93';
													|en = '93'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 93)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 93)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 = гр.4 (стр.060 + стр.120 + стр.200) прил.4 Р.1';
			|en = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 = гр.4 (стр.060 + стр.120 + стр.200) прил.4 Р.1'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 = %2 + %3 + %4 Итог [%5]';
													|en = '%1 = %2 + %3 + %4 Итог [%5]'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	Настройки.Вставить("ПоказательР13", "П000140012004");
	Настройки.Вставить("ПоказательР14", "П000140020004");
	ПроверитьКС2020_36_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_3

Процедура ПроверитьКС2020_94а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '94а';
													|en = '94а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 94а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 94а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_94б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '94б';
													|en = '94б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 94б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 94б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.1 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_94_код(Настройки)
	
	Перем Показатели;
	
	ИменаПоказателей = Новый Структура;
	ИменаПоказателей.Вставить("ПоказательР11", Настройки.ПоказательР11);
	ИменаПоказателей.Вставить("ПоказательР12", Настройки.ПоказательР12);
	ЗаполнитьСтруктуруПоказателей2020(Показатели, ИменаПоказателей);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ДанныеКС.ВременныеТаблицы;
	Запрос.УстановитьПараметр("Раздел"			, Сред(Настройки.ПоказательР11, 1, 6));
	Запрос.УстановитьПараметр("СтрокаР11"		, Сред(Настройки.ПоказательР11, 9, 3));
	Запрос.УстановитьПараметр("СтрокаР12"		, Сред(Настройки.ПоказательР12, 9, 3));
	Запрос.УстановитьПараметр("ГрафаР11"		, Сред(Настройки.ПоказательР11, 12, 2));
	Запрос.УстановитьПараметр("ГрафаР12"		, Сред(Настройки.ПоказательР12, 12, 2));
	Запрос.УстановитьПараметр("ОтчетныйМесяц"	, ДанныеКС.Мес);	
	Запрос.Текст = 
	
	"ВЫБРАТЬ
	|	ВТ_100.Значение_	КАК Значение_,
	|	ВТ_100.Отчет		КАК Отчет,
	|	ВТ_100.Страница		КАК Страница,
	|	ВТ_100.Строка_		КАК Строка_,
	|	ВТ_100.Графа		КАК Графа
	|ПОМЕСТИТЬ ВТ_101
	|ИЗ
	|	ВТ_100 КАК ВТ_100
	|ГДЕ
	|	ВТ_100.Раздел		= &Раздел
	|	И (ВТ_100.Строка_	= &СтрокаР11
	|	И ВТ_100.Графа		= &ГрафаР11
	|	ИЛИ ВТ_100.Строка_	= &СтрокаР12
	|	И ВТ_100.Графа		= &ГрафаР12)
	|	И ВТ_100.Мес		= &ОтчетныйМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Выразить(ТПоказателя1.Значение_ КАК Число)	КАК ПоказательР11,
	|	Выразить(ТПоказателя2.Значение_ КАК Число)	КАК ПоказательР12,
	|	ТПоказателя1.Отчет		КАК Отчет,
	|	ТПоказателя1.Страница	КАК Страница
	|ИЗ
	|	ВТ_101 КАК ТПоказателя1
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_101 КАК ТПоказателя2
	|			ПО	ТПоказателя2.Строка_	= &СтрокаР12
	|				И ТПоказателя2.Графа	= &ГрафаР12
	|ГДЕ
	|	ТПоказателя1.Строка_	= &СтрокаР11
	|	И ТПоказателя1.Графа	= &ГрафаР11
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_101";
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	ЗарегистрироватьФормулу2020(Настройки);
	СумР11 = 0;
	СумР12 = 0;
	
	Если Выборка.Следующий() Тогда
		СумР11 = Выборка.ПоказательР11;
		СумР12 = Выборка.ПоказательР12;
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР11);
		ВнестиПоказательВРасшифровку2020(Выборка, Показатели.ПоказательР12);
	КонецЕсли;
		
	Настройки.ЭтоОшибка		= СумР11 <= 0 И СумР12 > 0;
	Настройки.Расшифровка	= СтрШаблон(Настройки.ШаблонРасшифровки, СумР11, СумР12);
	ДополнитьСтруктуруОшибок2020(Настройки);
		
КонецПроцедуры

Процедура ПроверитьКС2020_95а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '95а';
													|en = '95а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 95а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 95а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_95б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '95б';
													|en = '95б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 95б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 95б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.1 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_96а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '96а';
													|en = '96а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 96а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 96а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_96б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '96б';
													|en = '96б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 96б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 96б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.1 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_97а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '97а';
													|en = '97а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 97а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 97а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_97б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '97б';
													|en = '97б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 97б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 97б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.1 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_98а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '98а';
													|en = '98а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 98а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 98а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_98б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '98б';
													|en = '98б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 98б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 98б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.1 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_99а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '99а';
													|en = '99а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 99а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 99а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_99б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '99б';
													|en = '99б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 99б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 99б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.1 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_100(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '100';
													|en = '100'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 100)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 100)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.2 стр.010 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.010 прил.3 Р.1 > 0, если гр.2 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001003");
	Настройки.Вставить("ПоказательР12", "П000130001002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_101(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '101';
													|en = '101'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 101)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 101)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.2 стр.011 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.011 прил.3 Р.1 > 0, если гр.2 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001103");
	Настройки.Вставить("ПоказательР12", "П000130001102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_102(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '102';
													|en = '102'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 102)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 102)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.2 стр.020 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.020 прил.3 Р.1 > 0, если гр.2 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002003");
	Настройки.Вставить("ПоказательР12", "П000130002002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_103(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '103';
													|en = '103'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 103)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 103)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.2 стр.021 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.021 прил.3 Р.1 > 0, если гр.2 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002103");
	Настройки.Вставить("ПоказательР12", "П000130002102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_104(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '104';
													|en = '104'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 104)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 104)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.2 стр.030 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.030 прил.3 Р.1 > 0, если гр.2 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003003");
	Настройки.Вставить("ПоказательР12", "П000130003002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_105(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '105';
													|en = '105'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 105)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 105)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.2 стр.031 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.031 прил.3 Р.1 > 0, если гр.2 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003103");
	Настройки.Вставить("ПоказательР12", "П000130003102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_106(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '106';
													|en = '106'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 106)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 106)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.040 прил.3 Р.1 > 0, если гр.2 стр.040 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.040 прил.3 Р.1 > 0, если гр.2 стр.040 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130004003");
	Настройки.Вставить("ПоказательР12", "П000130004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_107(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '107';
													|en = '107'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 107)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 107)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.050 прил.3 Р.1 > 0, если гр.2 стр.050 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.050 прил.3 Р.1 > 0, если гр.2 стр.050 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130005003");
	Настройки.Вставить("ПоказательР12", "П000130005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_108(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '108';
													|en = '108'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 108)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 108)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.3 стр.010 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.010 прил.3 Р.1 > 0, если гр.3 стр.010 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001002");
	Настройки.Вставить("ПоказательР12", "П000130001003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_109(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '109';
													|en = '109'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 109)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 109)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.3 стр.011 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.011 прил.3 Р.1 > 0, если гр.3 стр.011 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130001102");
	Настройки.Вставить("ПоказательР12", "П000130001103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_110(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '110';
													|en = '110'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 110)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 110)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.3 стр.020 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.020 прил.3 Р.1 > 0, если гр.3 стр.020 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002002");
	Настройки.Вставить("ПоказательР12", "П000130002003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_111(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '111';
													|en = '111'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 111)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 111)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.3 стр.021 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.021 прил.3 Р.1 > 0, если гр.3 стр.021 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130002102");
	Настройки.Вставить("ПоказательР12", "П000130002103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_112(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '112';
													|en = '112'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 112)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 112)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.3 стр.030 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.030 прил.3 Р.1 > 0, если гр.3 стр.030 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003002");
	Настройки.Вставить("ПоказательР12", "П000130003003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_113(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '113';
													|en = '113'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 113)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 113)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.3 стр.031 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.031 прил.3 Р.1 > 0, если гр.3 стр.031 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130003102");
	Настройки.Вставить("ПоказательР12", "П000130003103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_114а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '114а';
													|en = '114а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 114а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 114а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_114б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '114б';
													|en = '114б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 114б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 114б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.1 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_115а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '115а';
													|en = '115а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 115а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 115а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_115б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '115б';
													|en = '115б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 115б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 115б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.060 прил.3 Р.1 > 0, если гр.2 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006003");
	Настройки.Вставить("ПоказательР12", "П000130006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_116а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '116а';
													|en = '116а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 116а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 116а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006001");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_116б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '116б';
													|en = '116б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 116б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 116б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.060 прил.3 Р.1 > 0, если гр.3 стр.060 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006002");
	Настройки.Вставить("ПоказательР12", "П000130006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_117а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '117а';
													|en = '117а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 117а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 117а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_117б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '117б';
													|en = '117б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 117б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 117б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.1 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006101");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_118а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '118а';
													|en = '118а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 118а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 118а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_118б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '118б';
													|en = '118б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 118б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 118б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.061 прил.3 Р.1 > 0, если гр.2 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006103");
	Настройки.Вставить("ПоказательР12", "П000130006102");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_119а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '119а';
													|en = '119а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 119а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 119а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006101");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_119б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '119б';
													|en = '119б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 119б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 119б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.061 прил.3 Р.1 > 0, если гр.3 стр.061 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006102");
	Настройки.Вставить("ПоказательР12", "П000130006103");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_120а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '120а';
													|en = '120а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 120а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 120а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_120б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '120б';
													|en = '120б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 120б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 120б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.1 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006201");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_121а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '121а';
													|en = '121а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 121а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 121а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_121б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '121б';
													|en = '121б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 121б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 121б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.062 прил.3 Р.1 > 0, если гр.2 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006203");
	Настройки.Вставить("ПоказательР12", "П000130006202");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_122а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '122а';
													|en = '122а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 122а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 122а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0';
			|en = 'Число получателей пособий в гр.1 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число получателей';
														|en = 'Ошибочное число получателей'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006201");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_122б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '122б';
													|en = '122б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 122б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 122б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.062 прил.3 Р.1 > 0, если гр.3 стр.062 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130006202");
	Настройки.Вставить("ПоказательР12", "П000130006203");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_123(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '123';
													|en = '123'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 123)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 123)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.070 прил.3 Р.1 > 0, если гр.2 стр.070 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.070 прил.3 Р.1 > 0, если гр.2 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007003");
	Настройки.Вставить("ПоказательР12", "П000130007002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_124(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '124';
													|en = '124'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 124)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 124)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.070 прил.3 Р.1 > 0, если гр.3 стр.070 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.070 прил.3 Р.1 > 0, если гр.3 стр.070 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130007002");
	Настройки.Вставить("ПоказательР12", "П000130007003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_125а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '125а';
													|en = '125а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 125а)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 125а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_125б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '125б';
													|en = '125б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 125б)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 125б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.1 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009001");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_126(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '126';
													|en = '126'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 126)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 126)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.2 стр.090 прил.3 Р.1 > 0';
			|en = 'Сумма расходов в гр.3 стр.090 прил.3 Р.1 > 0, если гр.2 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009003");
	Настройки.Вставить("ПоказательР12", "П000130009002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_127(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '127';
													|en = '127'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 3';
														|en = 'Приложение 3'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 3 к Разделу 1 (КС 127)';
													|en = 'Проверка приложения 3 к Разделу 1 (КС 127)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.3 стр.090 прил.3 Р.1 > 0';
			|en = 'Число дней пособий в гр.2 стр.090 прил.3 Р.1 > 0, если гр.3 стр.090 прил.3 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000130009002");
	Настройки.Вставить("ПоказательР12", "П000130009003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#Область Проверки_Приложения_4

Процедура ПроверитьКС2020_128(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '128';
													|en = '128'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 128)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 128)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.020 прил.4 Р.1 > 0, если гр.3 стр.020 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.020 прил.4 Р.1 > 0, если гр.3 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002004");
	Настройки.Вставить("ПоказательР12", "П000140002003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_129(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '129';
													|en = '129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 129)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.020 прил.4 Р.1 > 0, если гр.4 стр.020 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.020 прил.4 Р.1 > 0, если гр.4 стр.020 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140002003");
	Настройки.Вставить("ПоказательР12", "П000140002004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_130(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '130';
													|en = '130'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 130)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 130)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.030 прил.4 Р.1 > 0, если гр.3 стр.030 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.030 прил.4 Р.1 > 0, если гр.3 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003004");
	Настройки.Вставить("ПоказательР12", "П000140003003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_131(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '129';
													|en = '129'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 129)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 129)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.030 прил.4 Р.1 > 0, если гр.4 стр.030 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.030 прил.4 Р.1 > 0, если гр.4 стр.030 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140003003");
	Настройки.Вставить("ПоказательР12", "П000140003004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_132а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '132а';
													|en = '132а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 132а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 132а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_132б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '132б';
													|en = '132б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 132б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 132б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.2 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_133(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '133';
													|en = '133'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 133)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 133)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.3 стр.040 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.040 прил.4 Р.1 > 0, если гр.3 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004004");
	Настройки.Вставить("ПоказательР12", "П000140004003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_134(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '134';
													|en = '134'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 134)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 134)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.4 стр.040 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.040 прил.4 Р.1 > 0, если гр.4 стр.040 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140004003");
	Настройки.Вставить("ПоказательР12", "П000140004004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_135а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '135а';
													|en = '135а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 135а';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 135а'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_135б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '135б';
													|en = '135б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 135б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 135б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.2 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_136(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '136';
													|en = '136'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 136)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 136)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.3 стр.050 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.050 прил.4 Р.1 > 0, если гр.3 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005004");
	Настройки.Вставить("ПоказательР12", "П000140005003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_137(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '137';
													|en = '137'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 137)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 137)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.4 стр.050 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.050 прил.4 Р.1 > 0, если гр.4 стр.050 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140005003");
	Настройки.Вставить("ПоказательР12", "П000140005004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_138а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '138а';
													|en = '138а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 138а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 138а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_138б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '138б';
													|en = '138б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 138б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 138б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.2 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_139(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '139';
													|en = '139'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 139)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 139)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.3 стр.060 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.060 прил.4 Р.1 > 0, если гр.3 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006004");
	Настройки.Вставить("ПоказательР12", "П000140006003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_140(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '140';
													|en = '140'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 140)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 140)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.4 стр.060 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.060 прил.4 Р.1 > 0, если гр.4 стр.060 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140006003");
	Настройки.Вставить("ПоказательР12", "П000140006004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_141(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '141';
													|en = '141'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 141)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 141)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.080 прил.4 Р.1 > 0, если гр.3 стр.080 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.080 прил.4 Р.1 > 0, если гр.3 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008004");
	Настройки.Вставить("ПоказательР12", "П000140008003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_142(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '142';
													|en = '142'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 142)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 142)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.080 прил.4 Р.1 > 0, если гр.4 стр.080 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.080 прил.4 Р.1 > 0, если гр.4 стр.080 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140008003");
	Настройки.Вставить("ПоказательР12", "П000140008004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_143(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '143';
													|en = '143'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 143)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 143)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.090 прил.4 Р.1 > 0, если гр.3 стр.090 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.090 прил.4 Р.1 > 0, если гр.3 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009004");
	Настройки.Вставить("ПоказательР12", "П000140009003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_144(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '144';
													|en = '144'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 144)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 144)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.090 прил.4 Р.1 > 0, если гр.4 стр.090 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.090 прил.4 Р.1 > 0, если гр.4 стр.090 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140009003");
	Настройки.Вставить("ПоказательР12", "П000140009004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_145а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '145а';
													|en = '145а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 145а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 145а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_145б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '145б';
													|en = '145б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 145б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 145б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.2 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_146(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '146';
													|en = '146'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 146)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 146)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.3 стр.100 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.100 прил.4 Р.1 > 0, если гр.3 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010004");
	Настройки.Вставить("ПоказательР12", "П000140010003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_147(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '147';
													|en = '147'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 147)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 147)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.4 стр.100 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.100 прил.4 Р.1 > 0, если гр.4 стр.100 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140010003");
	Настройки.Вставить("ПоказательР12", "П000140010004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_148а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '148а';
													|en = '148а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 148а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 148а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_148б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '148б';
													|en = '148б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 148б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 148б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.2 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_149(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '149';
													|en = '149'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 149)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 149)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.3 стр.110 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.110 прил.4 Р.1 > 0, если гр.3 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011004");
	Настройки.Вставить("ПоказательР12", "П000140011003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_150(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '150';
													|en = '150'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 150)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 150)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.4 стр.110 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.110 прил.4 Р.1 > 0, если гр.4 стр.110 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140011003");
	Настройки.Вставить("ПоказательР12", "П000140011004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_151а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '151а';
													|en = '151а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 151а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 151а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_151б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '151б';
													|en = '151б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 151б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 151б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.2 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_152(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '152';
													|en = '152'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 152)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 152)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.3 стр.120 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.120 прил.4 Р.1 > 0, если гр.3 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012004");
	Настройки.Вставить("ПоказательР12", "П000140012003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_153(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '153';
													|en = '153'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 153)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 153)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.4 стр.120 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.120 прил.4 Р.1 > 0, если гр.4 стр.120 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140012003");
	Настройки.Вставить("ПоказательР12", "П000140012004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_154(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '154';
													|en = '154'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 154)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 154)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.140 прил.4 Р.1 > 0, если гр.3 стр.140 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.140 прил.4 Р.1 > 0, если гр.3 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014004");
	Настройки.Вставить("ПоказательР12", "П000140014003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_155(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '155';
													|en = '155'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 155)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 155)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.140 прил.4 Р.1 > 0, если гр.4 стр.140 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.140 прил.4 Р.1 > 0, если гр.4 стр.140 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140014003");
	Настройки.Вставить("ПоказательР12", "П000140014004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_156(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '156';
													|en = '156'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 156)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 156)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.160 прил.4 Р.1 > 0, если гр.3 стр.160 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.160 прил.4 Р.1 > 0, если гр.3 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016004");
	Настройки.Вставить("ПоказательР12", "П000140016003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_157(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '157';
													|en = '157'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 157)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 157)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.160 прил.4 Р.1 > 0, если гр.4 стр.160 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.160 прил.4 Р.1 > 0, если гр.4 стр.160 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140016003");
	Настройки.Вставить("ПоказательР12", "П000140016004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_158(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '158';
													|en = '158'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 158)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 158)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.170 прил.4 Р.1 > 0, если гр.3 стр.170 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.170 прил.4 Р.1 > 0, если гр.3 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017004");
	Настройки.Вставить("ПоказательР12", "П000140017003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_159(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '159';
													|en = '159'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 159)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 159)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.170 прил.4 Р.1 > 0, если гр.4 стр.170 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.170 прил.4 Р.1 > 0, если гр.4 стр.170 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140017003");
	Настройки.Вставить("ПоказательР12", "П000140017004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_160а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '160а';
													|en = '160а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 160а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 160а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_160б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '160б';
													|en = '160б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 160б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 160б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.2 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_161(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '161';
													|en = '161'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 161)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 161)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.3 стр.180 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.180 прил.4 Р.1 > 0, если гр.3 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018004");
	Настройки.Вставить("ПоказательР12", "П000140018003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_162(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '162';
													|en = '162'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 162)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 162)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.4 стр.180 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.180 прил.4 Р.1 > 0, если гр.4 стр.180 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140018003");
	Настройки.Вставить("ПоказательР12", "П000140018004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_163а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '163а';
													|en = '163а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 163а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 163а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_163б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '163б';
													|en = '163б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 163б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 163б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.2 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_164(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '164';
													|en = '164'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 164)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 164)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.3 стр.190 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.190 прил.4 Р.1 > 0, если гр.3 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019004");
	Настройки.Вставить("ПоказательР12", "П000140019003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_165(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '165';
													|en = '165'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 165)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 165)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.4 стр.190 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.190 прил.4 Р.1 > 0, если гр.4 стр.190 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140019003");
	Настройки.Вставить("ПоказательР12", "П000140019004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_166а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '166а';
													|en = '166а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 166а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 166а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_166б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '166б';
													|en = '166б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 166б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 166б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.2 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_167(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '167';
													|en = '167'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 167)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 167)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.3 стр.200 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.200 прил.4 Р.1 > 0, если гр.3 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020004");
	Настройки.Вставить("ПоказательР12", "П000140020003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_168(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '168';
													|en = '168'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 168)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 168)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.4 стр.200 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.200 прил.4 Р.1 > 0, если гр.4 стр.200 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140020003");
	Настройки.Вставить("ПоказательР12", "П000140020004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_169(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '169';
													|en = '169'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 169)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 169)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.220 прил.4 Р.1 > 0, если гр.3 стр.220 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.220 прил.4 Р.1 > 0, если гр.3 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022004");
	Настройки.Вставить("ПоказательР12", "П000140022003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_170(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '170';
													|en = '170'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 170)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 170)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.220 прил.4 Р.1 > 0, если гр.4 стр.220 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.220 прил.4 Р.1 > 0, если гр.4 стр.220 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140022003");
	Настройки.Вставить("ПоказательР12", "П000140022004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_171(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '171';
													|en = '171'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 171)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 171)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.230 прил.4 Р.1 > 0, если гр.3 стр.230 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.230 прил.4 Р.1 > 0, если гр.3 стр.230 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140023004");
	Настройки.Вставить("ПоказательР12", "П000140023003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_172(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '172';
													|en = '172'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 172)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 172)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.250 прил.4 Р.1 > 0, если гр.3 стр.250 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.250 прил.4 Р.1 > 0, если гр.3 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025004");
	Настройки.Вставить("ПоказательР12", "П000140025003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_173(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '173';
													|en = '173'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 173)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 173)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.250 прил.4 Р.1 > 0, если гр.4 стр.250 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.250 прил.4 Р.1 > 0, если гр.4 стр.250 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140025003");
	Настройки.Вставить("ПоказательР12", "П000140025004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_174(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '174';
													|en = '174'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 174)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 174)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.260 прил.4 Р.1 > 0, если гр.3 стр.260 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.260 прил.4 Р.1 > 0, если гр.3 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026004");
	Настройки.Вставить("ПоказательР12", "П000140026003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_175(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '175';
													|en = '175'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 175)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 175)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.260 прил.4 Р.1 > 0, если гр.4 стр.260 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.260 прил.4 Р.1 > 0, если гр.4 стр.260 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140026003");
	Настройки.Вставить("ПоказательР12", "П000140026004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_176а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '176а';
													|en = '176а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 176а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 176а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_176б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '176б';
													|en = '176б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 176б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 176б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.2 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_177(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '177';
													|en = '177'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 177)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 177)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.3 стр.270 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.270 прил.4 Р.1 > 0, если гр.3 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027004");
	Настройки.Вставить("ПоказательР12", "П000140027003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_178(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '178';
													|en = '178'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 178)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 178)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.4 стр.270 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.270 прил.4 Р.1 > 0, если гр.4 стр.270 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140027003");
	Настройки.Вставить("ПоказательР12", "П000140027004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_179а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '179а';
													|en = '179а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 179а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 179а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_179б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '179б';
													|en = '179б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 179б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 179б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.2 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_180(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '180';
													|en = '180'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 180)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 180)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.3 стр.280 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.280 прил.4 Р.1 > 0, если гр.3 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028004");
	Настройки.Вставить("ПоказательР12", "П000140028003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_181(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '181';
													|en = '181'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 181)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 181)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.4 стр.280 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.280 прил.4 Р.1 > 0, если гр.4 стр.280 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140028003");
	Настройки.Вставить("ПоказательР12", "П000140028004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_182а(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '182а';
													|en = '182а'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 182а)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 182а)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_182б(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '182б';
													|en = '182б'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 182б)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 182б)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.2 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029002");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_183(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '183';
													|en = '183'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 183)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 183)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.3 стр.290 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.290 прил.4 Р.1 > 0, если гр.3 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029004");
	Настройки.Вставить("ПоказательР12", "П000140029003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_184(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '184';
													|en = '184'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 184)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 184)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.4 стр.290 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.290 прил.4 Р.1 > 0, если гр.4 стр.290 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140029003");
	Настройки.Вставить("ПоказательР12", "П000140029004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_185(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '185';
													|en = '185'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 185)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 185)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Сумма расходов в гр.4 стр.300 прил.4 Р.1 > 0, если гр.3 стр.300 прил.4 Р.1 > 0';
			|en = 'Сумма расходов в гр.4 стр.300 прил.4 Р.1 > 0, если гр.3 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочная сумма расходов';
														|en = 'Ошибочная сумма расходов'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030004");
	Настройки.Вставить("ПоказательР12", "П000140030003");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

Процедура ПроверитьКС2020_186(СтруктураРезультата)
	
	Заголовки = Новый Структура;
	Заголовки.Вставить("НомерКС"			, НСтр("ru = '186';
													|en = '186'"));
	Заголовки.Вставить("Раздел"				, НСтр("ru = 'Приложение 4';
														|en = 'Приложение 4'"));
	Заголовки.Вставить("Нарушение"			, НСтр("ru = 'Ошибка ввода';
													|en = 'Ошибка ввода'"));
	Заголовки.Вставить("ТекстФормулы"		, НСтр("ru = 'Проверка приложения 4 к Разделу 1 (КС 186)';
													|en = 'Проверка приложения 4 к Разделу 1 (КС 186)'"));
	Заголовки.Вставить("ОписаниеКС"			, 
		НСтр("ru = 'Число дней пособий в гр.3 стр.300 прил.4 Р.1 > 0, если гр.4 стр.300 прил.4 Р.1 > 0';
			|en = 'Число дней пособий в гр.3 стр.300 прил.4 Р.1 > 0, если гр.4 стр.300 прил.4 Р.1 > 0'"));
	Заголовки.Вставить("ШаблонРасшифровки"	, НСтр("ru = '%1 > 0 если %2 > 0';
													|en = '%1 > 0 если %2 > 0'"));
	Заголовки.Вставить("ОписаниеОшибки"		, НСтр("ru = 'Ошибочное число дней';
														|en = 'Ошибочное число дней'"));
	Настройки = ОбработатьНастройки2020(, Заголовки, СтруктураРезультата);
	
	Если Документирование Тогда
		Возврат;
	КонецЕсли;
	
	Настройки.Вставить("ПоказательР11", "П000140030003");
	Настройки.Вставить("ПоказательР12", "П000140030004");
	ПроверитьКС2020_94_код(Настройки);
	СтруктураРезультата = ОбработатьРезультат2020(Настройки, СтруктураРезультата);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецОбласти

&НаКлиенте
Процедура ВвестиПоказатель(Элемент, Область, КодПоказателя, Знач ЭтоСумма, Знач ТекстВыбора, ТаблицаВыбора, СтандартнаяОбработка, КолонкаПоиска = "Код") Экспорт
	
	Если ТаблицаВыбора = Неопределено ИЛИ (СтруктураРеквизитовФормы.мАвтоВыборКодов И НЕ Область.Имя = "ПоМесту") Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	Если Область.Имя = КодПоказателя ИЛИ РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(
		СтруктураРеквизитовФормы, Область.Имя) <> Неопределено Тогда
		ИсходноеЗначение = ?(ТипЗнч(Область.Значение) = Тип("Строка"), СокрЛП(Область.Значение), Область.Значение);
	Иначе
		Разделитель = ?(Лев(Область.Имя, СтрДлина(КодПоказателя) + 1) = КодПоказателя + "_", "_", "");
		ИндексОбласти = 1;
		ИсходноеЗначение = "";
		Пока ЭтотОбъект[ТекущийЭлемент.Имя].Области.Найти(КодПоказателя + Разделитель + Формат(ИндексОбласти, "ЧГ="))
			<> Неопределено Цикл
			ИсходноеЗначение = ИсходноеЗначение + Строка(ЭтотОбъект[ТекущийЭлемент.Имя].Области[КодПоказателя
			+ Разделитель + Формат(ИндексОбласти, "ЧГ=")].Значение);
			ИндексОбласти = ИндексОбласти + 1;
		КонецЦикла;
		ИсходноеЗначение = СокрЛП(ИсходноеЗначение);
	КонецЕсли;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",          ТекстВыбора);
	ПараметрыФормы.Вставить("ТаблицаЗначений",    ТаблицаВыбора);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура(КолонкаПоиска, ИсходноеЗначение));
	
	ДополнительныеПараметры = Новый Структура(
	"ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент",
	ИндексОбласти, КодПоказателя, КолонкаПоиска, Область, Разделитель, Элемент);
	Оп = Новый ОписаниеОповещения("ВвестиПоказательЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы",
	ПараметрыФормы, ЭтотОбъект,,,, Оп, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	
КонецПроцедуры

&НаКлиенте
Процедура ВвестиПоказательЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	
	ИндексОбласти = ДополнительныеПараметры.ИндексОбласти;
	КодПоказателя = ДополнительныеПараметры.КодПоказателя;
	КолонкаПоиска = ДополнительныеПараметры.КолонкаПоиска;
	Область = ДополнительныеПараметры.Область;
	Разделитель = ДополнительныеПараметры.Разделитель;
	Элемент = ДополнительныеПараметры.Элемент;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Область.Имя = "ПоМесту" Тогда
		
		ПрежнийКодПоМесту = СокрЛП(Область.Значение);
		НовыйКодПоМесту = СокрЛП(РезультатВыбора[КолонкаПоиска]);
		
		ПрежнийКодПоМестуЭтоКодГлавыКФХ = (ПрежнийКодПоМесту = "124" ИЛИ ПрежнийКодПоМесту = "240");
		НовыйКодПоМестуЭтоКодГлавыКФХ = (НовыйКодПоМесту = "124" ИЛИ НовыйКодПоМесту = "240");
		
		ДополнительныеПараметры = Новый Структура("Область, НовыйКодПоМесту", Область, НовыйКодПоМесту);
	
		Если ПрежнийКодПоМестуЭтоКодГлавыКФХ И НЕ НовыйКодПоМестуЭтоКодГлавыКФХ Тогда
			Оп = Новый ОписаниеОповещения("ВопросВвестиКодПоМестуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
			ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'При изменении значения кода по месту нахождения (учета) с ""%1"" на ""%2""
			|Раздел 2 будет очищен и исключен из состава дерева разделов. Продолжить?';
			|en = 'При изменении значения кода по месту нахождения (учета) с ""%1"" на ""%2""
			|Раздел 2 будет очищен и исключен из состава дерева разделов. Продолжить?'"), ПрежнийКодПоМесту, НовыйКодПоМесту);
			ПоказатьВопрос(Оп, ТекстВопроса, РежимДиалогаВопрос.ДаНет, 60, КодВозвратаДиалога.Нет);
			Возврат;
		ИначеЕсли НЕ ПрежнийКодПоМестуЭтоКодГлавыКФХ И НовыйКодПоМестуЭтоКодГлавыКФХ Тогда
			ВопросВвестиКодПоМестуЗавершение(КодВозвратаДиалога.Да, ДополнительныеПараметры);
		КонецЕсли;
		
	КонецЕсли;
	
	Если Область.Имя = КодПоказателя ИЛИ РегламентированнаяОтчетностьКлиентСервер.МногострочнаяЧастьТекущейОбласти(
		СтруктураРеквизитовФормы, Область.Имя) <> Неопределено Тогда
		Область.Значение = РезультатВыбора[КолонкаПоиска];
	Иначе
		СтрокаРезультатВыбора = Строка(РезультатВыбора[КолонкаПоиска]);
		Для Инд = СтрДлина(СтрокаРезультатВыбора) + 1 По ИндексОбласти - 1 Цикл
			СтрокаРезультатВыбора = " " + РезультатВыбора[КолонкаПоиска];
		КонецЦикла;
		Для Инд = 1 По ИндексОбласти - 1 Цикл
			ЭтотОбъект[ТекущийЭлемент.Имя].Области[КодПоказателя + Разделитель + Формат(Инд, "ЧГ=")].Значение
			= СокрЛП(Сред(РезультатВыбора[КолонкаПоиска], Инд, 1));
		КонецЦикла;
	КонецЕсли;
	
	Модифицированность = Истина;
	
	ТабличныйДокументПриИзмененииСодержимогоОбласти(Элемент, Область);
	
	Если КодПоказателя = "ПоМесту" ИЛИ КодПоказателя = "КодФормыРеорганизации" Тогда
		УстановитьДоступностьОбластей(ЭтотОбъект, "Титульный");
		ЗаполнитьПериодОтчета(ЭтотОбъект);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ВопросВвестиКодПоМестуЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса <> КодВозвратаДиалога.Да Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеПараметры.Область.Значение = ДополнительныеПараметры.НовыйКодПоМесту;
	
	УстановитьДоступностьОбластей(ЭтотОбъект, "Титульный");
	ЗаполнитьПериодОтчета(ЭтотОбъект);
	
	СохрИмяТекРазделаОтчета = Элементы.РазделыОтчета.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим;
	
	Если ДополнительныеПараметры.НовыйКодПоМесту <> "124" И ДополнительныеПараметры.НовыйКодПоМесту <> "240" Тогда
		ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел("Раздел2", 0);
	Иначе
		ИзменитьНастройкиРаздела2ВДеревеРазделов_УстановитьКодПоОКТМОИКБКВРазделах1и2();
	КонецЕсли;
	
	НайденнаяСтрока = РегламентированнаяОтчетностьКлиентСервер.НайтиЭлементВДанныхФормыДерево(
	РазделыОтчета.ПолучитьЭлементы(), "КолонкаРазделыОтчетаСокрНаим", СохрИмяТекРазделаОтчета);
	Если НЕ НайденнаяСтрока = Неопределено Тогда
		Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтрока.ПолучитьИдентификатор();
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиРаздела2ВДеревеРазделов_УстановитьКодПоОКТМОИКБКВРазделах1и2()
	
	ИзменитьНастройкиРазделаВДеревеРазделов("Раздел2", 1);
	
	СсылкаНаРегистрациюВНО = ОбъектОтчета(ИмяФормы).РеквизитЭлементаСправочника(
	СтруктураРеквизитовФормы.мВыбраннаяФорма, СтруктураРеквизитовФормы.Организация);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("ПоМесту", СокрЛП(ТабличныйДокумент.Области.ПоМесту.Значение));
	
	ОбъектОтчета(ИмяФормы).УстановитьКодПоОКТМОИКБКВРазделах1и2ПриАктивномТитульномЛисте(
	СтруктураРеквизитовФормы.мВыбраннаяФорма, СсылкаНаРегистрациюВНО, СтруктураРеквизитовФормы, ДополнительныеПараметры);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиВДеревеРазделовИОчиститьМногоуровневыйРаздел(ИмяРаздела, ВариантНастроек, ФормироватьДеревоРазделов = Истина)
	
	ИзменитьНастройкиРазделаВДеревеРазделов(ИмяРаздела, ВариантНастроек);
	
	ОбъектОтчета(ИмяФормы).ИнициализироватьМногоуровневыйРаздел(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																		 СтруктураРеквизитовФормы,
																		 мСтруктураМногоуровневыхРазделов,
																		 ИмяРаздела);
	
КонецПроцедуры

&НаСервере
Процедура ИзменитьНастройкиРазделаВДеревеРазделов(ИмяРаздела, ВариантНастроек, ФормироватьДеревоРазделов = Истина)
	
	Для каждого СтраницаНастроек Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл
		Если СтраницаНастроек.ИмяСтраницы = ИмяРаздела Тогда
			СтраницаНастроек.ПоказатьСтраницу = ВариантНастроек;
			СтраницаНастроек.ВыводНаПечать    = ВариантНастроек;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	КопироватьДанныеФормы(мДеревоСтраницОтчета, мДеревоВыбранныхСтраниц);
	
	Если ФормироватьДеревоРазделов Тогда
		СформироватьДеревоРазделовОтчетаНаСервере();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура АктивизироватьЯчейку(Ячейка) Экспорт
	
	Если Ячейка.Раздел = "Раздел1" ИЛИ Ячейка.Раздел = "Раздел1Прил1_1" ИЛИ Ячейка.Раздел = "Раздел1Прил2"
		ИЛИ Ячейка.Раздел = "Раздел1Прил3" ИЛИ Ячейка.Раздел = "Раздел1Прил4" ИЛИ Ячейка.Раздел = "Раздел1Прил5"
		ИЛИ Ячейка.Раздел = "Раздел1Прил6" ИЛИ Ячейка.Раздел = "Раздел1Прил7" ИЛИ Ячейка.Раздел = "Раздел1Прил8"
		ИЛИ Ячейка.Раздел = "Раздел1Прил9" ИЛИ Ячейка.Раздел = "Раздел2" Тогда
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденныйРаздел.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Ячейка.Раздел = "Раздел1Прил1" ИЛИ Ячейка.Раздел = "Раздел3" Тогда
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = Ячейка.Раздел Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета = Число(Ячейка.Страница) Тогда
						СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
						Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяСтраница.ПолучитьИдентификатор();
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	ИначеЕсли Ячейка.Раздел = "Раздел1Прил1Подр1_1и1_2" ИЛИ Ячейка.Раздел = "Раздел1Прил1Подр1_3_1"
		ИЛИ Ячейка.Раздел = "Раздел1Прил1Подр1_3_2" Тогда
		НомераСтрокМногоуровнегоРаздела = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(Ячейка.Страница);
		Для каждого НайденныйРаздел Из РазделыОтчета.ПолучитьЭлементы() Цикл
			Если НайденныйРаздел.КолонкаРазделыОтчетаСокрНаим = "Раздел1Прил1" Тогда
				Для каждого НайденнаяСтраница Из НайденныйРаздел.ПолучитьЭлементы() Цикл
					Если НайденнаяСтраница.КолонкаНомерСтраницыРазделаОтчета
						= Число(НомераСтрокМногоуровнегоРаздела[0]) Тогда
						ТекСтраницаРаздела = НайденнаяСтраница;
						Прервать;
					КонецЕсли;
				КонецЦикла;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Для каждого НайденнаяПодчСтраница Из ТекСтраницаРаздела.ПолучитьЭлементы() Цикл
			Если НайденнаяПодчСтраница.КолонкаНомерСтраницыРазделаОтчета
				= Число(НомераСтрокМногоуровнегоРаздела[1]) Тогда
				СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
				Элементы.РазделыОтчета.ТекущаяСтрока = НайденнаяПодчСтраница.ПолучитьИдентификатор();
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если Ячейка.Раздел = "Титульный" Тогда
		РегламентированнаяОтчетностьКлиент.АктивизироватьЯчейку(ЭтотОбъект, Ячейка);
	Иначе
		ТекущийЭлемент = Элементы.ТабличныйДокумент;
		НайденнаяОбласть = ТабличныйДокумент.Области.Найти(Ячейка.ИмяЯчейки);
		Если НЕ НайденнаяОбласть = Неопределено Тогда
			Элементы.ТабличныйДокумент.ТекущаяОбласть = НайденнаяОбласть;
		КонецЕсли;
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Ложь;
		РазделыОтчетаПриАктивизацииСтроки(Элементы.РазделыОтчета);
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СформироватьДеревоРазделовОтчетаНаКлиенте() Экспорт
	
	// Необходимо для работы универсального механизма.
	Возврат;
	
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоРазделовОтчетаНаСервере()
	
	РазделыОтчета.ПолучитьЭлементы().Очистить();
	
	Для Каждого ЭлементДереваСтраницОтчета Из мДеревоСтраницОтчета.ПолучитьЭлементы() Цикл
		
		Если ЭлементДереваСтраницОтчета.ПоказатьСтраницу = 1 Тогда
			
			ЭлементРазделовОтчета = РазделыОтчета.ПолучитьЭлементы().Добавить();
			ЭлементРазделовОтчета.КолонкаРазделыОтчета         = ЭлементДереваСтраницОтчета.Представление;
			ЭлементРазделовОтчета.КолонкаРазделыОтчетаСокрНаим = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			ИмяРаздела = ЭлементДереваСтраницОтчета.ИмяСтраницы;
			
			Если мСтруктураМногоуровневыхРазделов.Свойство(ИмяРаздела) Тогда
				
				СтруктураРаздела = мСтруктураМногоуровневыхРазделов[ИмяРаздела];
				
				ДеревоДанныхРаздела = ПолучитьИзВременногоХранилища(
					СтруктураРеквизитовФормы["АдресВоВрХранилищеДеревоДанных" + ИмяРаздела]);
				
				Если СтруктураРаздела.Свойство("Многостраничность") Тогда
					
					КолСтрокВДеревеДанныхРаздела = Макс(ДеревоДанныхРаздела.Строки.Количество(), 1);
					
					Для НомерСтраницыРаздела = 1 По КолСтрокВДеревеДанныхРаздела Цикл
						
						ЭлементРаздел = ЭлементРазделовОтчета.ПолучитьЭлементы().Добавить();
						
						Если ИмяРаздела = "Раздел3" Тогда
							
							ДанныеСтраницы = ДеревоДанныхРаздела.Строки[НомерСтраницыРаздела - 1].Данные;
							
							СтруктПарам = Новый Структура;
							СтруктПарам.Вставить("Фам", ДанныеСтраницы.П000310004001);
							СтруктПарам.Вставить("Имя", ДанныеСтраницы.П000310005001);
							СтруктПарам.Вставить("Отч", ДанныеСтраницы.П000310006001);
							СтруктПарам.Вставить("ДатаРожд", ДанныеСтраницы.П000310007001);
							СтруктПарам.Вставить("НомерСтраницы", НомерСтраницыРаздела);
							
							ЭлементРаздел.КолонкаРазделыОтчета
							= РегламентированнаяОтчетностьКлиентСервер.ПредставлениеСтраницыРаздела3ФормыРСВ(СтруктПарам);
							
						ИначеЕсли ИмяРаздела = "Раздел1Прил1" Тогда
							
							ДанныеСтраницы = ДеревоДанныхРаздела.Строки[НомерСтраницыРаздела - 1].Данные;
							
							СтруктПарам = Новый Структура;
							СтруктПарам.Вставить("КодТарифа", ДанныеСтраницы.П000110000101);
							СтруктПарам.Вставить("НомерСтраницы", НомерСтраницыРаздела);
							
							ЭлементРаздел.КолонкаРазделыОтчета = ПредставлениеСтраницыПриложения1КРазделу1(СтруктПарам);
							
						Иначе
							
							НаимСтраницы = "Стр. ";
							Если СтруктураРаздела.Свойство("НаимСтраницы") Тогда
								НаимСтраницы = СтруктураРаздела["НаимСтраницы"];
							КонецЕсли;
							
							ЭлементРаздел.КолонкаРазделыОтчета = НаимСтраницы
							+ ?(Прав(НаимСтраницы, 1) = " ", "", ". Стр. ") + Формат(НомерСтраницыРаздела, "ЧГ=");
							
						КонецЕсли;
						
						ЭлементРаздел.КолонкаРазделыОтчетаСокрНаим      = ИмяРаздела;
						ЭлементРаздел.КолонкаНомерСтраницыРазделаОтчета = НомерСтраницыРаздела;
						
						Если СтруктураРаздела.Свойство("ИменаПодчиненныхРазделов") Тогда
							
							ИменаПодчиненныхРазделов = СтруктураРаздела["ИменаПодчиненныхРазделов"];
							КолПодчРазделов = ИменаПодчиненныхРазделов.Количество();
							
							Для ИндПодчРаздела = 0 По КолПодчРазделов - 1 Цикл
								
								ИмяПодчРаздела = ИменаПодчиненныхРазделов[ИндПодчРаздела];
								СтруктураПодчРаздела = мСтруктураМногоуровневыхРазделов[ИмяПодчРаздела];
								
								ЭлементПодчРаздел = ЭлементРаздел.ПолучитьЭлементы().Добавить();
								НаимСтраницы = "Стр. ";
								Если СтруктураПодчРаздела.Свойство("НаимСтраницы") Тогда
									НаимСтраницы = СтруктураПодчРаздела["НаимСтраницы"];
								КонецЕсли;
								ЭлементПодчРаздел.КолонкаРазделыОтчета              = НаимСтраницы;
								ЭлементПодчРаздел.КолонкаРазделыОтчетаСокрНаим      = ИмяПодчРаздела;
								ЭлементПодчРаздел.КолонкаНомерСтраницыРазделаОтчета = ИндПодчРаздела + 1;
								
							КонецЦикла;
							
						КонецЕсли;
						
					КонецЦикла;
					
				КонецЕсли;
				
				ДеревоДанныхРаздела = Неопределено;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция ПредставлениеСтраницыПриложения1КРазделу1(СтруктураПараметров)
	
	КодТарифа = СокрЛП(СтруктураПараметров.КодТарифа);
	
	Возврат ?(ЗначениеЗаполнено(КодТарифа), "Код тарифа " + КодТарифа,
	"Стр. " + Формат(СтруктураПараметров.НомерСтраницы, "ЧГ="));
	
КонецФункции

&НаКлиенте
Процедура РазделыОтчетаПриАктивизацииСтроки(Элемент)
	
	Если Элемент.ТекущиеДанные = Неопределено
		ИЛИ Элемент.ТекущаяСтрока = СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураРеквизитовФормы.ТекущаяСтрокаРазделовОтчета = Элемент.ТекущаяСтрока;
	Элементы.ОчиститьТекущийРаздел.Доступность = Ложь;
	Элементы.ОчиститьТекущуюСтраницу.Доступность = Истина;
	Если СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере Тогда
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета
			= ?(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = Неопределено
			ИЛИ Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета = 0,
			1, Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
		КонецЕсли;
		
		Если мСтруктураМногоуровневыхРазделов.Свойство(Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
			
			НовыеНомераСтрокМногоуровнегоРаздела = Новый Массив;
			
			ТекРодитель = Элемент.ТекущиеДанные.ПолучитьРодителя();
			Если ТекРодитель <> Неопределено Тогда
				ТекЭлемент = Элемент.ТекущиеДанные;
				Пока ТекРодитель.ПолучитьРодителя() <> Неопределено Цикл
					СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[ТекЭлемент.КолонкаРазделыОтчетаСокрНаим];
					Если СтруктураЭлемента.Свойство("Подчиненность") Тогда
						ИмяГлРаздела = СтруктураЭлемента["ИмяГлавногоРаздела"];
						СтруктураРодителя = мСтруктураМногоуровневыхРазделов[ИмяГлРаздела];
						ИндексПодчРаздела = СтруктураРодителя["ИменаПодчиненныхРазделов"].Найти(ТекЭлемент.КолонкаРазделыОтчетаСокрНаим);
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ИндексПодчРаздела + 1);
					Иначе
						НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, 1);
					КонецЕсли;
					НовыеНомераСтрокМногоуровнегоРаздела.Вставить(0, ТекРодитель.КолонкаНомерСтраницыРазделаОтчета);
					ТекЭлемент = ТекРодитель;
					ТекРодитель = ТекЭлемент.ПолучитьРодителя();
				КонецЦикла;
			КонецЕсли;
			
			СтруктураЭлемента = мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим];
			Если СтруктураЭлемента.Свойство("Многостраничность") Тогда
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(Элемент.ТекущиеДанные.КолонкаНомерСтраницыРазделаОтчета);
			Иначе
				НовыеНомераСтрокМногоуровнегоРаздела.Добавить(1);
			КонецЕсли;
			
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим,
				НовыеНомераСтрокМногоуровнегоРаздела);
			
		Иначе
			ВывестиДанныеВТабличныйДокументНаСервере(
				Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим);
		КонецЕсли;
		
	Иначе
		СтруктураРеквизитовФормы.ВыводитьСтраницуВТаблДокНаСервере = Истина;
	КонецЕсли;
	
	КМенюРО = Элементы.РазделыОтчета.КонтекстноеМеню;
	КМенюРО.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
	КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
	Если мСтруктураМногоуровневыхРазделов.Свойство(
		Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим) Тогда
		Если мСтруктураМногоуровневыхРазделов[Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим].Свойство(
			"Многостраничность") Тогда
			Элемент.Развернуть(Элемент.ТекущаяСтрока);
			КМенюРО.Видимость = Истина;
			
			Элементы.ОчиститьТекущийРаздел.Доступность = Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел3";
			
			Если Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено Тогда
				Элементы.ОчиститьТекущуюСтраницу.Доступность = Ложь;
			КонецЕсли;
			
			Если НЕ Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено
				И Элемент.ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Количество() > 1 Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Истина;
				
				ТекстЗаголовка = "Удалить страницу";
				Если ИндексыВыделенныхСтраницРаздела() <> Неопределено Тогда
					ТекстЗаголовка = "Удалить выделенные страницы";
				КонецЕсли;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Заголовок = ТекстЗаголовка;
				
			Иначе
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Истина;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюУдалитьСтраницу.Видимость = Ложь;
			КонецЕсли;
			
			#Если ВебКлиент Тогда
				ВидимостьМеню = КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость;
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = Ложь;
			#КонецЕсли
			
			КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Заголовок = "Добавить страницу";
			
			#Если ВебКлиент Тогда
				КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюДобавитьСтраницу.Видимость = ВидимостьМеню;
			#КонецЕсли
		КонецЕсли;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Титульный" Тогда
		Элементы.Обновить.Доступность = Истина;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Ложь;
	Иначе
		Элементы.Обновить.Доступность = Ложь;
		Элементы.ТабличныйДокументКонтекстноеМенюГруппаСтроки.Видимость = Истина;
	КонецЕсли;
	
	Если Элемент.ТекущиеДанные.КолонкаРазделыОтчетаСокрНаим = "Раздел3" Тогда
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюПоказатьБланкСтраницыРаздела3.Видимость = Истина;
	Иначе
		КМенюРО.ПодчиненныеЭлементы.РазделыОтчетаКонтекстноеМенюПоказатьБланкСтраницыРаздела3.Видимость = Ложь;
	КонецЕсли;
	
	СпрятатьСсылкуУдалитьСтраницу();
	
	Элементы.ТабличныйДокумент.ТекущаяОбласть = ТабличныйДокумент.Область(1, 1);
	
КонецПроцедуры

&НаКлиенте
Процедура Обновить(Команда)
	
	ЗаполнитьСведенияОбОрганизации();
	
	Если СтруктураРеквизитовФормы.НаимТекущегоРаздела = "Титульный" Тогда
		УстановитьДоступностьОбластей(ЭтотОбъект, "Титульный");
	КонецЕсли;
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьСведенияОбОрганизации(ВПрограммеИзмененаДатаПодписи = Ложь)
	
	ОбъектОтчета(ИмяФормы).ЗаполнитьСведенияОбОрганизации(СтруктураРеквизитовФормы.мВыбраннаяФорма,
																   СтруктураРеквизитовФормы,
																   ДатаПодписи,
																   ТабличныйДокумент,
																   Неопределено,
																   ВПрограммеИзмененаДатаПодписи);
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(
	ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	
	РегламентированнаяОтчетность.ПриЗакрытииРегламентированногоОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	Если СтрНайти(Заголовок, СтруктураРеквизитовФормы.СтрПериодОтчета) = 0 Тогда
		Заголовок = Заголовок + " за " + СтруктураРеквизитовФормы.СтрПериодОтчета;
	КонецЕсли;
	
	ОргСтр = " (" + СтруктураРеквизитовФормы.НаимОрганизации + ")";
	Если СтрНайти(Заголовок, ОргСтр) = 0 Тогда
		Заголовок = Заголовок + ОргСтр;
	КонецЕсли;
	
	Заголовок = Заголовок + ?(СтрНайти(ИмяФормы, "Внешний") > 0, " - внешний отчет", "");
	
	ПодключитьОбработчикОжидания("ВыполнитьПроверкуПередОткрытием", 0.1, Истина);
	
	// ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	Если ОбщегоНазначенияКлиент.ПодсистемаСуществует("ИнтернетПоддержкаПользователей.Новости") Тогда
		
		МодульОбработкаНовостейКлиент = ОбщегоНазначенияКлиент.ОбщийМодуль("ОбработкаНовостейКлиент");
		
		МодульОбработкаНовостейКлиент.КонтекстныеНовости_ПриОткрытии(ЭтотОбъект);
		
	КонецЕсли;
	// Конец ИнтернетПоддержкаПользователей.Новости.ПриОткрытии
	
КонецПроцедуры

&НаКлиенте
Процедура ВыполнитьПроверкуПередОткрытием()
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПриОткрытииЗавершение", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОткрытиемФормыРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытииЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Модифицированность = Ложь;
		Закрыть();
		Возврат;
	КонецЕсли;
	
	РезультатЗапуска = СтруктураРеквизитовФормы.РезультатЗапускаАвтозаполненияПриСоздании;
	
	Если РезультатЗапуска <> Неопределено И РезультатЗапуска.Статус = "Выполняется" Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ОбработатьЗавершениеАвтозаполненияВФоне", ЭтотОбъект);
		ПараметрыОжидания = ПараметрыОжидания();
		ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатЗапуска, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура ОтобразитьНомерКорректировки(Форма)
	
	НомерКорр = Форма.СтруктураРеквизитовФормы.ВидДокумента * Форма.НомерКорректировки;
	НомерКорректировкиСтрока = Формат(НомерКорр, "ЧН=0; ЧГ=");
	СтрДлинаНомерКорректировкиСтрока = СтрДлина(НомерКорректировкиСтрока);
	
	Форма.ТабличныйДокумент.Области["НомерКорректировки"].Значение = НомерКорректировкиСтрока;
	
Конецпроцедуры

////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ И ФУНКЦИИ СТЫКОВКИ С СЕРВИСОМ СДАЧИ ОТЧЕТНОСТИ ЧЕРЕЗ ПРЕДСТАВИТЕЛЯ

&НаКлиенте
Процедура ОтправитьЧерезПредставителя(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтправитьЧерезПредставителяЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьЧерезПредставителяЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиЧерезПредставителяВРегламентированномОтчете(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПроверитьВИнтернетеЗавершение", ЭтотОбъект);
	
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(
	ОписаниеОповещения, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернетеЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(
	ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", СтруктураРеквизитовФормы.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
	ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	Если НомерКорректировки = 0
		И КонецКвартала(СтруктураРеквизитовФормы.мДатаКонцаПериодаОтчета) >= КонецГода('20201231') Тогда
		
		ПоказатьПредупреждение(, НСтр("ru = 'С 01.01.2021 не представляется первичный расчет по форме, утвержденной приказом ФНС России от 18.09.2019 № ММВ-7-11/470@, за расчетный период 2020 год';
										|en = 'С 01.01.2021 не представляется первичный расчет по форме, утвержденной приказом ФНС России от 18.09.2019 № ММВ-7-11/470@, за расчетный период 2020 год'"));
		Возврат;
	КонецЕсли;
	
	Оп = Новый ОписаниеОповещения("ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой", ЭтотОбъект);
	Отказ = Ложь;
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередОтправкойРегламентированногоОтчета(Оп, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверкаВозможностиВыгрузкиРегламентированногоОтчетаПередОтправкой(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	Оп = Новый ОписаниеОповещения("ОтправитьВКонтролирующийОрганЗавершение", ЭтотОбъект);
	ОнлайнСервисыРегламентированнойОтчетностиКлиент.ПередВыгрузкойРегламентированногоОтчета(Оп, ЭтотОбъект, Отказ);
	
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрганЗавершение(Отказ, ДополнительныеПараметры) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект, "ФНС");
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", ЭтотОбъект);
	Оп = Новый ОписаниеОповещения("ПослеСохраненияФормыЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	СохранитьНаКлиенте(, Оп);
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеСохраненияФормыЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	ДополнительныеПараметры.Форма.Закрыть();
	
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьОтчетИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	
	Модифицированность = Истина;
	
КонецПроцедуры

&НаСервере
Функция ОбъектОтчета(ЭтотОбъектИмя) Экспорт
	
	Если мОбъектОтчета = Неопределено Тогда 
		мОбъектОтчета = РегламентированнаяОтчетностьВызовСервера.ОбъектОтчета(ЭтотОбъектИмя);
	КонецЕсли;
	
	Возврат мОбъектОтчета;
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяОтчета(ЭтотОбъектИмя)
	
	Форма_Имя = СтрЗаменить(ЭтотОбъектИмя, "Внешний", "");
	
	Возврат Сред(Лев(Форма_Имя, СтрНайти(Форма_Имя, ".Форма.") - 1), 7);
	
КонецФункции

&НаКлиентеНаСервереБезКонтекста
Функция ИмяФормы(ЭтотОбъектИмя)
	
	Возврат Сред(ЭтотОбъектИмя, СтрНайти(ЭтотОбъектИмя, ".Форма.") + 7);
	
КонецФункции

#Область ОбработчикиСобытийФормы

#Область ОбработчикиСобытийПроцессыОбработкиДокументов

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокументаОповещение(Контекст, ДополнительныеПараметры) Экспорт
	
	ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст);
		
	ВыполнитьОбработкуОповещения(ДополнительныеПараметры, Контекст);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ВыполнитьЗадачуПоОбработкеДокумента(Команда)
	
	РегламентированнаяОтчетностьКлиент.ВыполнитьЗадачу(
		ЭтотОбъект,
		Команда,
		?(ЗначениеЗаполнено(СтруктураРеквизитовФормы.мСохраненныйДок),
			СтруктураРеквизитовФормы.мСохраненныйДок,
			СтруктураРеквизитовФормы.ПустаяСсылкаНаРегламентированныйОтчет));
	
КонецПроцедуры

#КонецОбласти

#Область ПроцессыОбработкиДокументов

&НаКлиенте
Процедура Подключаемый_КомментарийНаправившегоОткрытие(Элемент, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.КомментарийНаправившегоОткрытие(ЭтотОбъект, Элемент, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_КомментарийСледующемуНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	РегламентированнаяОтчетностьКлиент.КомментарийСледующемуНачалоВыбора(
		ЭтотОбъект, Элемент, ДанныеВыбора, СтандартнаяОбработка);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ПроцессыОбработкиДокументов

&НаКлиенте
Процедура Записать(ПараметрыЗаписи) Экспорт
	
	СохранитьНаКлиенте();
	
КонецПроцедуры

&НаСервере
Процедура ВыполнитьЗадачуПоОбработкеДокументаНаСервере(Контекст)
	
	РегламентированнаяОтчетность.ВыполнитьЗадачу(ЭтотОбъект, Контекст, СтруктураРеквизитовФормы.мСохраненныйДок);
	
КонецПроцедуры

&НаСервере
Процедура УправлениеДоступностьюРеквизитов(БлокируемыеЭлементы, ТолькоПросмотр) Экспорт
	
	РегламентированнаяОтчетность.УправлениеДоступностьюРеквизитов(ЭтотОбъект, БлокируемыеЭлементы, ТолькоПросмотр);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
