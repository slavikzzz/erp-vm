// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныйУзел.МнУр = Истина;
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			ТекущийУзел.МнУр = Истина;
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефт");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "ПокРасчНал" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "ДобНефтУчНедр" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "ДобНефтЗалеж" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "СумНалПУВыч" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			ТекущийУзел.Раздел = "Раздел2"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалГаз");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "ПокРасчНал" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "КолДПИЗал" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			ТекущийУзел.Раздел = "Раздел3"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчУплНалИскл");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "КолПИУчНал" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "ДаннРасчНал" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "ДаннКподз" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			ТекущийУзел.Раздел = "Раздел5"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчУплНалУг");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "РасчНалВидУгл" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "РасчНалУпл" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "РасчНалВыч" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			ТекущийУзел.Раздел = "Раздел7"
		КонецЦикла;
	КонецЦикла;
	
	НайденныеУзлы = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефтНДД");
	Для Каждого НайденныйУзел Из НайденныеУзлы Цикл
		НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
		Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
			Если ТекущийУзел.Код = "РасчНалУч" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			ИначеЕсли ТекущийУзел.Код = "СумНалПУВыч" Тогда
				ТекущийУзел.Обязательность = ТекущийУзел.Обязательность + "П";
			КонецЕсли;
			ТекущийУзел.Раздел = "Раздел8"
		КонецЦикла;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации = П.ПараметрыОтчета.ФормРеорг;
			П.ПараметрыОтчета.Свойство("ИННРеорг", Титульный.ИННРеорганизованнойОрганизации);
			П.ПараметрыОтчета.Свойство("КППРеорг", Титульный.КППРеорганизованнойОрганизации);
		КонецЕсли;
		
	КонецЕсли;
	
	//Изменяем логику поиска показателей в дереве раздела 2.
	ВетвьШаблонаР2 = П.ПараметрыОтчета.ШаблоныДанныхМногоуровневыхРазделов["Раздел2"].Строки[0];
	ВетвьШаблонаР2.Строки[0].Данные = Новый Структура();
	ВетвьШаблонаР2.Строки[0].Строки[0].Строки[1].Данные = Новый Структура();
	
	УзлыРаздел2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефт"); // многоуровневый раздел 2
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел2.Количество() Цикл
		
		УзелРаздел2Уровень1 = УзлыРаздел2[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 2 страницы с подчиненными разделами.
		
		// Подраздел 2.1 (страница 1)
		УзлыРаздел21 = УзлыПоXPath(УзелРаздел2Уровень1, "ПокРасчНал"); // страницы подраздела 2.1
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел21.Количество() Цикл
			
			УзелРаздел21Уровень2 = УзлыРаздел21[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел21Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
			НомСтраницы = Новый Массив(4);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			НомСтраницы[3] = 1;
			НомСтроки = Новый Массив(1);
			УзлыРаздел2Подр211 = УзлыПоXPath(УзелРаздел21Уровень2, "ДобНефтУчНедр"); // подраздел 2.1.1
			Для НомСтрокиУровень2 = 1 По УзлыРаздел2Подр211.Количество() Цикл
				НомСтроки[0] = НомСтрокиУровень2;
				УзелРаздел2Подр211 = УзлыРаздел2Подр211[НомСтрокиУровень2 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Подр211, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
			КонецЦикла;
			
			НомСтраницы = Новый Массив(5);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			НомСтраницы[3] = 2;
			УзлыРаздел2Подр212 = УзлыПоXPath(УзелРаздел21Уровень2, "ДобНефтЗалеж"); // подраздел 2.1.2
			Для НомСтраницыУровень3 = 1 По УзлыРаздел2Подр212.Количество() Цикл
				НомСтраницы[4] = НомСтраницыУровень3;
				УзелРаздел2Подр212 = УзлыРаздел2Подр212[НомСтраницыУровень3 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Подр212, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			КонецЦикла;
			
		КонецЦикла;
		
		// Подраздел 2.2 (страница 2)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 2;
		НомСтроки = Новый Массив(1);
		УзлыРаздел2Подр2 = УзлыПоXPath(УзелРаздел2Уровень1, "СумНалПУВыч"); // подраздел 2.2
		Для НомСтрокиУровень2 = 1 По УзлыРаздел2Подр2.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел2Подр2 = УзлыРаздел2Подр2[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел2Подр2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
	КонецЦикла;
	
	//Изменяем логику поиска показателей в дереве раздела 3.
	ВетвьШаблонаР3 = П.ПараметрыОтчета.ШаблоныДанныхМногоуровневыхРазделов["Раздел3"].Строки[0];
	ВетвьШаблонаР3.Строки[0].Данные = Новый Структура();
	ВетвьШаблонаР3.Строки[0].Строки[0].Строки[0].Данные = Новый Структура();
	
	УзлыРаздел3 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалГаз"); // многоуровневый раздел 3
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел3.Количество() Цикл
		
		УзелРаздел3Уровень1 = УзлыРаздел3[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 1 страницу с подчиненными разделами.
		
		// Подраздел 3.1 (страница 1)
		УзлыРаздел31 = УзлыПоXPath(УзелРаздел3Уровень1, "ПокРасчНал"); // страницы подраздела 3.1
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел31.Количество() Цикл
			
			УзелРаздел31Уровень2 = УзлыРаздел31[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел31Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
			НомСтраницы = Новый Массив(5);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			НомСтраницы[3] = 1;
			УзлыРаздел3Подр311 = УзлыПоXPath(УзелРаздел31Уровень2, "КолДПИЗал"); // подраздел 3.1.1
			Для НомСтраницыУровень3 = 1 По УзлыРаздел3Подр311.Количество() Цикл
				НомСтраницы[4] = НомСтраницыУровень3;
				УзелРаздел3Подр311 = УзлыРаздел3Подр311[НомСтраницыУровень3 - 1];
				ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел3Подр311, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//Изменяем логику поиска показателей в дереве раздела 5.
	ВетвьШаблонаР5 = П.ПараметрыОтчета.ШаблоныДанныхМногоуровневыхРазделов["Раздел5"].Строки[0];
	ВетвьШаблонаР5.Строки[0].Данные = Новый Структура();
	ВетвьШаблонаР5.Строки[1].Данные = Новый Структура();
	
	УзлыРаздел5 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчУплНалИскл"); // многоуровневый раздел 5
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел5.Количество() Цикл
		
		УзелРаздел5Уровень1 = УзлыРаздел5[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 3 страницы с подчиненными разделами.
		
		// Подраздел 5.1 (страница 1)
		УзлыРаздел51 = УзлыПоXPath(УзелРаздел5Уровень1, "КолПИУчНал"); // страницы подраздела 5.1
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел51.Количество() Цикл
			
			УзелРаздел51Уровень2 = УзлыРаздел51[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел51Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
		КонецЦикла;
		
		// Подраздел 5.2 (страница 2)
		УзлыРаздел52 = УзлыПоXPath(УзелРаздел5Уровень1, "ДаннРасчНал"); // страницы подраздела 5.2
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел52.Количество() Цикл
			
			УзелРаздел52Уровень2 = УзлыРаздел52[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 2;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел52Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
		КонецЦикла;
		
		// Подраздел 5.3 (страница 3)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 3;
		УзлыРаздел5Подр3 = УзлыПоXPath(УзелРаздел5Уровень1, "ДаннКподз"); // подраздел 5.3
		Если ЗначениеЗаполнено(УзлыРаздел5Подр3) Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел5Подр3[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
	КонецЦикла;
	
	//Изменяем логику поиска показателей в дереве раздела 7.
	ВетвьШаблонаР7 = П.ПараметрыОтчета.ШаблоныДанныхМногоуровневыхРазделов["Раздел7"].Строки[0];
	ВетвьШаблонаР7.Строки[0].Данные = Новый Структура();
	
	УзлыРаздел7 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчУплНалУг"); // многоуровневый раздел 7
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел7.Количество() Цикл
		
		УзелРаздел7Уровень1 = УзлыРаздел7[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 3 страницы с подчиненными разделами.
		
		// Подраздел 7.1 (страница 1)
		УзлыРаздел71 = УзлыПоXPath(УзелРаздел7Уровень1, "РасчНалВидУгл"); // страницы подраздела 7.1
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел71.Количество() Цикл
			
			УзелРаздел71Уровень2 = УзлыРаздел71[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел71Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
		КонецЦикла;
		
		// Подраздел 7.2 (страница 2)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 2;
		УзлыРаздел7Подр2 = УзлыПоXPath(УзелРаздел7Уровень1, "РасчНалУпл"); // подраздел 7.2
		Если ЗначениеЗаполнено(УзлыРаздел7Подр2) Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел7Подр2[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
		// Подраздел 7.3 (страница 3)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 3;
		УзлыРаздел7Подр3 = УзлыПоXPath(УзелРаздел7Уровень1, "РасчНалВыч"); // подраздел 7.3
		Если ЗначениеЗаполнено(УзлыРаздел7Подр3) Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзлыРаздел7Подр3[0], П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
		КонецЕсли;
		
	КонецЦикла;
	
	//Изменяем логику поиска показателей в дереве раздела 8.
	ВетвьШаблонаР8 = П.ПараметрыОтчета.ШаблоныДанныхМногоуровневыхРазделов["Раздел8"].Строки[0];
	ВетвьШаблонаР8.Строки[0].Данные = Новый Структура();
	
	УзлыРаздел8 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//НДПИ/ИсчНалНефтНДД"); // многоуровневый раздел 8
	
	Для НомСтраницыУровень1 = 1 По УзлыРаздел8.Количество() Цикл
		
		УзелРаздел8Уровень1 = УзлыРаздел8[НомСтраницыУровень1 - 1];
		
		// В структуре документа отчета каждая строка дерева уровня 1 содержит 2 страницы с подчиненными разделами.
		
		// Подраздел 8.1 (страница 1)
		УзлыРаздел81 = УзлыПоXPath(УзелРаздел8Уровень1, "РасчНалУч"); // страницы подраздела 8.1
		
		Для НомСтраницыУровень2 = 1 По УзлыРаздел81.Количество() Цикл
			
			УзелРаздел81Уровень2 = УзлыРаздел81[НомСтраницыУровень2 - 1];
			
			НомСтраницы = Новый Массив(3);
			НомСтраницы[0] = НомСтраницыУровень1;
			НомСтраницы[1] = 1;
			НомСтраницы[2] = НомСтраницыУровень2;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел81Уровень2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, Новый Массив);
			
		КонецЦикла;
		
		// Подраздел 8.2 (страница 2)
		НомСтраницы = Новый Массив(2);
		НомСтраницы[0] = НомСтраницыУровень1;
		НомСтраницы[1] = 2;
		НомСтроки = Новый Массив(1);
		УзлыРаздел8Подр2 = УзлыПоXPath(УзелРаздел8Уровень1, "СумНалПУВыч"); // подраздел 8.2
		Для НомСтрокиУровень2 = 1 По УзлыРаздел8Подр2.Количество() Цикл
			НомСтроки[0] = НомСтрокиУровень2;
			УзелРаздел8Подр2 = УзлыРаздел8Подр2[НомСтрокиУровень2 - 1];
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелРаздел8Подр2, П.ДанныеОтчета, П.ПараметрыОтчета, , НомСтраницы, НомСтроки);
		КонецЦикла;
		
	КонецЦикла;
	
#КонецОбласти