&НаКлиенте
Перем ОписаниеОповещенияОЗавершенииЗагрузки Экспорт;

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаКИК;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	ЭтотОбъект.ИмяМакетаАрхиваТабличныхДокументов = "ЭкранныеФормы";
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2021_1");
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьТаблицуФорматов(ЭтотОбъект, "Форматы2019_1");
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаЗаполняемыхПоказателейОтчета(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСПодчиненными(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаКопироватьСПодчиненными(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ЭтотОбъект["ЭтоЮЛ"] = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация);
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	Если ЭтотОбъект["ЭтоЮЛ"] Тогда
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		ДанныеУведомленияТитульный.Вставить("Наименование", СведенияОбОрганизации.НаимЮЛПол);
		ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
		ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
		ДанныеУведомленияТитульный.Вставить("ПрНП", "1");
	Иначе
		СтрокаСведений = "ИННФЛ,ФИО,ТелДом";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННФЛ);
		ДанныеУведомленияТитульный.Вставить("Наименование", СведенияОбОрганизации.ФИО);
		ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелДом);
		ДанныеУведомленияТитульный.Вставить("ПрНП", "2");
	КонецЕсли;
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
			ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "4");
		Иначе
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
			ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "3");
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
			ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "2");
		Иначе
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
			ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "1");
		КонецЕсли;
	КонецЕсли;
	
	Если Параметры.Свойство("НалоговыйПериод") И ЗначениеЗаполнено(Параметры.НалоговыйПериод) Тогда 
		ДанныеУведомленияТитульный.Вставить("НалПер", Параметры.НалоговыйПериод);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2021";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2021_1_Титульная";
	
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		Стр001 = КорневойУровень.Добавить();
		Стр001.Наименование = "Сведения о физлице";
		Стр001.ИндексКартинки = 1;
		Стр001.ИмяМакета = "ЛистСведФЛ_2019";
		Стр001.Многостраничность = Ложь;
		Стр001.Многострочность = Ложь;
		Стр001.УИД = Новый УникальныйИдентификатор;
		Стр001.ИДНаименования = "ЛистСведФЛ";
		Стр001.МакетыПФ = "Печать_Форма2021_1_ЛистСведФЛ";
	КонецЕсли;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранных"+символы.ПС+"организациях (Лист А)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистА_2019";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	Стр001.МакетыПФ = "Печать_Форма2021_1_ЛистА;Печать_Форма2021_1_ЛистА1";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранных"+символы.ПС+"структурах (Лист Б)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистБ_2019";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	Стр001.МакетыПФ = "Печать_Форма2021_1_ЛистБ;Печать_Форма2021_1_ЛистБ1";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о финансовой"+символы.ПС+"отчетности (Лист В)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистВ_2019";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2021_1_ЛистВ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Раскрытие порядка"+символы.ПС+"участия (Лист Г)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЛистГ_2019";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр");
	Стр001.МакетыПФ = "Печать_Форма2021_1_ЛистГ";
	
	СтрГ1 = Стр001.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Сведения о российской"+символы.ПС+"организации (Лист Г1)";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	
	СтрГ1 = СтрГ1.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Стр. 1";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.ИмяМакета = "ЛистГ1_2019";
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	СтрГ1.УИД = Новый УникальныйИдентификатор;
	СтрГ1.ИДНаименования = "ЛистГ1";
	СтрГ1.МакетыПФ = "Печать_Форма2021_1_ЛистГ1";
	
	СтрГ1 = Стр001.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Сведения об иностранной"+символы.ПС+"организации (Лист Г2)";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	
	СтрГ1 = СтрГ1.ПолучитьЭлементы().Добавить();
	СтрГ1.Наименование = "Стр. 1";
	СтрГ1.ИндексКартинки = 1;
	СтрГ1.ИмяМакета = "ЛистГ2_2021";
	СтрГ1.Многостраничность = Истина;
	СтрГ1.Многострочность = Ложь;
	СтрГ1.УИД = Новый УникальныйИдентификатор;
	СтрГ1.ИДНаименования = "ЛистГ2";
	СтрГ1.МакетыПФ = "Печать_Форма2021_1_ЛистГ2";
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	Если Элемент.ТекущиеДанные.Многостраничность Тогда 
		ИмяМакета = УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
		ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьМногострочныеЧасти(Элемент.ТекущиеДанные), ПредУИД);
	Иначе 
		ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьФорматыВМногострочныхПолях(ТД) Экспорт
	Для Каждого Обл Из ТД.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение Тогда 
			ОблИмя = Лев(Обл.Имя, СтрНайти(Обл.Имя, ЭтотОбъект["РазделительНомераСтроки"]) - 1);
			ОблИмя = ?(ЗначениеЗаполнено(ОблИмя), ОблИмя, Обл.Имя);
			ПоляСФорматами = ЭтотОбъект["ЧисловыеФорматы"].НайтиСтроки(Новый Структура("ИДСтраницы, Поле", ЭтотОбъект["ТекущееИДНаименования"], ОблИмя));
			Если ПоляСФорматами.Количество() > 0 Тогда 
				Знак = ?(ПоляСФорматами[0].Неотрицательный, ДопустимыйЗнак.Неотрицательный, ДопустимыйЗнак.Любой);
				ОТ = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(ПоляСФорматами[0].Всего, ПоляСФорматами[0].ПослеЗапятой, Знак));
				Обл.ТипЗначения = ОТ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, ПредУИД);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти, ЭтотОбъект["ЧисловыеФорматы"]);
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначенияКлиентСервер.СкопироватьСписокЗначений(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюМногостраничнуюСтраницу(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти, ЭтотОбъект["ЧисловыеФорматы"]);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Если ЭтоОбластьДоля(Область) Тогда 
		Если Область.Значение > 100 Тогда 
			Область.Значение = 100;
		КонецЕсли;
	КонецЕсли;

	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
			ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "4";
		Иначе
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
			ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "3";
		КонецЕсли;
	Иначе
		Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
			ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "2";
		Иначе
			УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
			ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение = "1";
		КонецЕсли;
	КонецЕсли;
	
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
КонецПроцедуры

&НаСервере
Процедура СкопироватьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ЭтотОбъект["УИДТекущаяСтраница"]);
	УведомлениеОСпецрежимахНалогообложения.КопироватьСтраницуУведомления(ЭтотОбъект, ЭтотОбъект["СПодчиненными"]);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтраницуНаКлиенте() Экспорт 
	СкопироватьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	ДобавитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	УдалитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Область.Имя = "ПересчитатьДанныеЦепочек" Тогда 
		ПересчитатьДанныеЦепочек();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли (Область.Имя = "НомерКИК" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистВ")
		Или (Область.Имя = "НомерКИК" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистГ")
		Или (Область.Имя = "НомерКИК" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистГ2") Тогда 
		
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет." + СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1] 
			+ ".Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника,
			ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли СтрНачинаетсяС(Область.Имя, "НомерУч" + ЭтотОбъект["РазделительНомераСтроки"]) Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти, ДоступенВыборРО", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет." + СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1]
			+ ".Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника,
			ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	КонецЕсли;
	
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыборКодЗнач(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	КонецЕсли;
	
	Если СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ПересчитатьДанныеЦепочек()
	НомерУчастника =НРег(ПредставлениеУведомления.Области["НомерКИК"].Значение);
	Если Не ЗначениеЗаполнено(НомерУчастника) Или 
		(Не СтрНачинаетсяС(НомерУчастника, "ио-") И Не СтрНачинаетсяС(НомерУчастника, "ис-")) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Некорректно указан номер участника';
														|en = 'Некорректно указан номер участника'"));
		Возврат;
	КонецЕсли;
	
	ИО_Номер = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Сред(НомерУчастника, 4));
	Если Не ЗначениеЗаполнено(ИО_Номер) Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Некорректно указан номер участника';
														|en = 'Некорректно указан номер участника'"));
		Возврат;
	КонецЕсли;
	
	ЛистыИО = Новый СписокЗначений;
	ЛистыДляОтбора = ?(СтрНачинаетсяС(НомерУчастника, "ио-"), ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистА, ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистБ);
	Для Каждого Лист Из ЛистыДляОтбора Цикл 
		Если Лист.Значение.НомерКИКЧисло = ИО_Номер Тогда
			ЛистыИО.Добавить(Лист.Значение);
		КонецЕсли;
	КонецЦикла;
	
	Если ЛистыИО.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не найден соответствующий лист А/Б';
														|en = 'Не найден соответствующий лист А/Б'"));
		Возврат;
	ИначеЕсли ЛистыИО.Количество() > 1 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Найдено более одного листа А/Б с указанным номером';
														|en = 'Найдено более одного листа А/Б с указанным номером'"));
		Возврат;
	КонецЕсли;
	
	Если Ждать ВопросАсинх("Произвести пересчет цепочек (операция не может быть отменена)?", РежимДиалогаВопрос.ДаНет) = КодВозвратаДиалога.Да Тогда
		ОбщаяДоляУчастия = 0;
		ПересчитатьДанныеЦепочекНаСервере(НомерУчастника, ОбщаяДоляУчастия);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчитатьДанныеЦепочекНаСервере(НомерУчастника, ОбщаяДоляУчастия)
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ЭтотОбъект["УИДТекущаяСтраница"]);
	ОбщаяДоляУчастия = 0;
	ДанныеДопСтрокМнгСтр = ПолучитьИзВременногоХранилища(ЭтотОбъект["ДанныеДопСтрок"].МнгСтр);
	
	Для Каждого Стр Из ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ Цикл 
		Если НРег(Стр.Значение.НомерКИК) <> НомерУчастника Тогда
			Продолжить;
		КонецЕсли;
		
		МнгСтр = ДанныеДопСтрокМнгСтр.НайтиСтроки(Новый Структура("УИД", Стр.Значение.УИД));
		ДУчИзн = Число(МнгСтр[0].ДоляУчПрям);
		Для Инд = 1 По МнгСтр.ВГраница() Цикл 
			ДУчИзн = ДУчИзн * Число(МнгСтр[Инд].ДоляУчПрям) / 100;
			МнгСтр[Инд].ДоляУчКосв = ДУчИзн;
		КонецЦикла;
		
		Стр.Значение.ДоляКосвПослИт = ДУчИзн;
		ОбщаяДоляУчастия = ОбщаяДоляУчастия + ДУчИзн;
	КонецЦикла;
	
	Для Каждого Стр Из ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ Цикл 
		Если НРег(Стр.Значение.НомерКИК) <> НомерУчастника Тогда
			Продолжить;
		КонецЕсли;
		
		Стр.Значение.ДоляУчКосвИт = ОбщаяДоляУчастия;
	КонецЦикла;
	
	ЭтотОбъект["УдалениеСтраницы"] = Истина;
	ПоказатьТекущуюМногостраничнуюСтраницу(ЭтотОбъект["ТекущийМакет"], ЭтотОбъект["ТекущиеМногострочныеЧасти"], ЭтотОбъект["УИДТекущаяСтраница"]);
	ЭтотОбъект["УдалениеСтраницы"] = Ложь;
КонецПроцедуры

&НаКлиенте
Процедура ВыборНомерУчастникаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		ТипЧисло = Новый ОписаниеТипов("Число");
		МассивДопОбл = Неопределено;
		Результат = Неопределено;
		ИмяОбласти = Неопределено;
		
		Ответ.Свойство("ИмяОбласти", ИмяОбласти);
		Ответ.Свойство("Результат", Результат);
		Если Ответ.Свойство("Очистить") Тогда 
			Результат = "";
		КонецЕсли;
		Область = ПредставлениеУведомления.Области[ИмяОбласти];
		Область.Значение = Результат;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если (Область.Имя = "СтрРег" И (ЭтотОбъект["ТекущееИДНаименования"] = "ЛистА" Или ЭтотОбъект["ТекущееИДНаименования"] = "ЛистБ"
				Или ЭтотОбъект["ТекущееИДНаименования"] = "ЛистСведФЛ" Или ЭтотОбъект["ТекущееИДНаименования"] = "ЛистГ2"))
		Или (Область.Имя = "ОКСМ" И ЭтотОбъект["ТекущееИДНаименования"] = "ЛистСведФЛ") Тогда
		
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Функция ЭтоОбластьДоля(Область)
	Если ((ЭтотОбъект["ТекущееИДНаименования"] = "ЛистА") И (Область.Имя = "ДоляПрямУч" Или Область.Имя = "ДоляКосУч" Или Область.Имя = "ДоляСмешУч" Или Область.Имя = "ДоляУчСупДет" Или Область.Имя = "ДоляУчНалРезРФ"))
		Или ((ЭтотОбъект["ТекущееИДНаименования"] = "ЛистГ") И (Область.Имя = "ДоляУчКосвИт" Или Область.Имя = "ДоляКосвПослИт") 
													Или СтрНачинаетсяС(Область.Имя, "ДоляУчКосв" + ЭтотОбъект["РазделительНомераСтроки"])
													Или СтрНачинаетсяС(Область.Имя, "ДоляУчПрям" + ЭтотОбъект["РазделительНомераСтроки"]))Тогда 
		Возврат Истина;
	Иначе 
		Возврат Ложь;
	КонецЕсли;
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(Команда) Экспорт 
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу() Экспорт
	ЭтотОбъект["УдалениеСтраницы"] = Истина;
	УдалитьСтраницуНаСервере();
	ЭтотОбъект["УдалениеСтраницы"] = Ложь;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УведомлениеОбъект = Объект.Ссылка.ПолучитьОбъект();
		Если УведомлениеОбъект.Заблокирован() Тогда 
			УведомлениеОбъект.Разблокировать();
		КонецЕсли;
		РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтроку(ЭтотОбъект, ИмяОбласти);
	УстановитьФорматыВМногострочныхПолях(ПредставлениеУведомления);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
КонецФункции

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизацииОбласти(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

#Область ПереносДанныхФормы2017

&НаКлиенте
Асинх Процедура ПеренестиДанныеИзПрошлойРедакции(Команда)
	Если КодВозвратаДиалога.Да = Ждать ВопросАсинх("Текущий отчет будет очищен. Продолжить?", РежимДиалогаВопрос.ДаНет) Тогда 
		ОО = Новый ОписаниеОповещения("ПеренестиДанныеИзПрошлойРедакцииЗавершение", ЭтотОбъект);
		ОтборПрошлойРедакции = Новый Структура("ВидУведомления, Организация, ИмяФормы", Объект.ВидУведомления, Объект.Организация, "Форма2017_1");
		ОткрытьФорму("Документ.УведомлениеОСпецрежимахНалогообложения.Форма.ФормаВыбора", Новый Структура("Отбор", ОтборПрошлойРедакции), ЭтотОбъект,,,, ОО, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПеренестиДанныеИзПрошлойРедакцииЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		Если ДополнительныеПараметры.ИмяФормы = "Форма2017_1" Тогда 
			ЗаполнитьНаОснованииФормы2017(Результат);
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Неопределено);
		ИначеЕсли ДополнительныеПараметры.ИмяФормы = "Форма2019_1" Тогда
			Если ЗагрузитьФормат502(Результат) Тогда 
				УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Ложь);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНаОснованииФормы2017(Уведомление)
	ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Уведомление, "РегистрацияВИФНС");
	Объект.РегистрацияВИФНС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Уведомление, "РегистрацияВИФНС");
	ПреобразованныеДанные = ПолучитьПреобразованныеДанные2017(Уведомление);
	ЗагрузитьДанные(Новый Структура("Ссылка", Новый Структура("ДанныеУведомления", ПреобразованныеДанные)));
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	Модифицированность = Истина;
КонецПроцедуры

&НаСервере
Функция ПолучитьПреобразованныеДанные2017(Уведомление2017)
	Если Не ЗначениеЗаполнено(Уведомление2017) Тогда 
		Возврат Неопределено;
	КонецЕсли;
	НовДокОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
	СтарДокОбъект = Уведомление2017.ПолучитьОбъект();
	Данные = СтарДокОбъект.ДанныеУведомления.Получить();
	
	ЗаполнитьЗначенияСвойств(НовДокОбъект, СтарДокОбъект);
	НовДокОбъект.Дата = ТекущаяДатаСеанса();
	НовДокОбъект.ДатаПодписи = ТекущаяДатаСеанса();
	НовДокОбъект.Номер = Неопределено;
	НовДокОбъект.ИмяФормы = "Форма2021_1";
	НовДокОбъект.Комментарий = "Сформировано на основании формы в редакции от 13.12.2016 № ММВ-7-13/679@";
	
	Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Вставить("ФормРеорг", "");
	Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Вставить("ИННРеорг", "");
	Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Вставить("КППРеорг", "");
	
	Если Данные.ДанныеУведомления.Свойство("ЛистСведФЛ") Тогда
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Пол");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("ПрАдр");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Индекс");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("КодРегион");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Район");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Город");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("НаселПункт");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Улица");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Дом");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Корпус");
		Данные.ЭтотОбъект["ДанныеУведомления"].Титульная.Удалить("Кварт");
	КонецЕсли;
	
	Для Каждого Лист Из Данные.ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистА Цикл 
		ДЛ = Лист.Значение;
		ДЛ.Удалить("НаимОрг");
		ДЛ.Вставить("ДатаРегИО", "");
		ДЛ.Вставить("КодНПРезид", "");
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистБ Цикл 
		ДЛ = Лист.Значение;
		ДЛ.НаимДокУчр = ДЛ.НаимДокУчрЛат;
		ДЛ.Удалить("НаимОрг");
		ДЛ.Удалить("НаимДокУчрЛат");
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистВ Цикл 
		ДЛ = Лист.Значение;
		ДЛ.Вставить("Код1009", "");
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ1 Цикл 
		ДЛ = Лист.Значение;
		ДЛ.Вставить("ПрПредДокОсв", "");
	КонецЦикла;
	
	Для Каждого Лист Из Данные.ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ2 Цикл 
		ДЛ = Лист.Значение;
		ДЛ.Удалить("НаимОрг");
	КонецЦикла;
	
	КонвертироватьДерево2017(Данные.ДеревоСтраниц.Строки);
	Возврат Новый ХранилищеЗначения(Данные);
КонецФункции

&НаСервере
Процедура КонвертироватьДерево2017(Строки)
	Для Каждого Стр Из Строки Цикл 
		Стр.МакетыПФ = СтрЗаменить(Стр.МакетыПФ, "Форма2017_1", "Форма2021_1");
		Если ЗначениеЗаполнено(Стр.ИмяМакета) Тогда
			Если Стр.ИмяМакета = "Титульная" Тогда 
				Стр.ИмяМакета = Стр.ИмяМакета + "_2021";
			Иначе
				Стр.ИмяМакета = Стр.ИмяМакета + "_2019";
			КонецЕсли;
		КонецЕсли;
		КонвертироватьДерево2017(Стр.Строки);
	КонецЦикла;
КонецПроцедуры
#КонецОбласти

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуОсобыхПолей()
	ТаблицаОсобыхПолейВВыгрузке = УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПутейВВыгрузке();
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/УведУчКИК/СведКИКЯвлИО/НомерКИК";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/УведУчКИК/СведКИКЯвлИС/НомерКИК";
	
	Возврат ТаблицаОсобыхПолейВВыгрузке;
КонецФункции

&НаСервере
Процедура ЗагрузитьЛистыГ(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры)
	МассивКолонок = Новый Соответствие;
	ДанныеДопСтрокМнгСтр = ПолучитьИзВременногоХранилища(ЭтотОбъект["ДанныеДопСтрок"].МнгСтр);
	Для Каждого Кол Из ДанныеДопСтрокМнгСтр.Колонки Цикл 
		МассивКолонок.Вставить(Кол.Имя, Истина);
	КонецЦикла;
	
	СтрокаЛистГВДереве = ДеревоСтраниц.ПолучитьЭлементы()[ДеревоСтраниц.ПолучитьЭлементы().Количество() - 1].ПолучитьЭлементы()[0];
	ЛистыГ0 = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/УведУчКИК/РаскрУчКИККосв", "ИмяЭлемента");
	Если ЛистыГ0 = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	ЛистыГ0 = ЛистыГ0.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчКИККосв"), Ложь);
	
	ВсегоСтрок = ЛистыГ0.Количество();
	Если ВсегоСтрок = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого ЛистГ0 Из ЛистыГ0 Цикл
		ПодчиненныеУзлыГ1Количество = ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчКИК"), Ложь).Количество();
		ВсегоСтрок = ВсегоСтрок + ?(ПодчиненныеУзлыГ1Количество > 0, ПодчиненныеУзлыГ1Количество - 1, 0);
	КонецЦикла;
	
	Для Инд = 2 По ВсегоСтрок Цикл 
		НоваяСтрокаЛистГВДереве = УведомлениеОСпецрежимахНалогообложения.СкопироватьСтрокуВДереве(ЭтотОбъект, СтрокаЛистГВДереве);
		НоваяСтрокаЛистГВДереве.Наименование = "Стр. " + Формат(Инд, "ЧГ=0");
	КонецЦикла;
	
	ЛистГЭталон = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ[0].Значение);
	ЛистГ1Эталон = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ1[0].Значение);
	ЛистГ2Эталон = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ2[0].Значение);
	СтрокиВДереве = ДеревоСтраниц.ПолучитьЭлементы()[ДеревоСтраниц.ПолучитьЭлементы().Количество() - 1].ПолучитьЭлементы();
	
	ИндексЛистГ0 = 0;
	Для Каждого ЛистГ0 Из ЛистыГ0 Цикл
		ИндексЛистГ0Нач = ИндексЛистГ0;
		ЛистГЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистГЭталон);
		ЛистГЗнач.УИД = Новый УникальныйИдентификатор;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ.Добавить(ЛистГЗнач);
		СтрокиВДереве[ИндексЛистГ0].УИД = ЛистГЗнач.УИД;
		ИндексЛистГ0 = ИндексЛистГ0 + 1;
		
		Для Каждого Стр Из ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвУчКосвКИК"), Ложь) Цикл 
			Для Каждого Стр Из Стр.Строки Цикл 
				Если Стр.ИмяЭлемента = "ДоляУчКосвИт" Тогда
					ЛистГЗнач[Стр.ИмяЭлемента] = ДополнительныеПараметры.ОписаниеТиповЧисло.ПривестиЗначение(Стр.ЗначениеЭлемента);
				ИначеЕсли Стр.ИмяЭлемента = "НаимОргЛат" Тогда
					ЛистГЗнач["НаимОрг"] = Стр.ЗначениеЭлемента;
				Иначе
					ЛистГЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЦикла;
		
		Инд = 0;
		Для Каждого ЛистГ1 Из ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "РаскрУчКИК"), Ложь) Цикл 
			Если Инд <> 0 Тогда
				ИндексЛистГ0 = ИндексЛистГ0 + 1;
				ЛистГЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистГЭталон);
				ЛистГЗнач.УИД = Новый УникальныйИдентификатор;
				СтрокиВДереве[ИндексЛистГ0Нач + Инд].УИД = ЛистГЗнач.УИД;
				ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ.Добавить(ЛистГЗнач);
				Для Каждого Стр Из ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвУчКосвКИК"), Ложь) Цикл 
					Для Каждого Стр Из Стр.Строки Цикл 
						Если Стр.ИмяЭлемента = "НаимОргЛат" Тогда
							ЛистГЗнач["НаимОрг"] = Стр.ЗначениеЭлемента;
						Иначе
							ЛистГЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЦикла;
			КонецЕсли;
			Для Каждого Стр Из ЛистГ1.Строки Цикл
				Если Стр.ИмяЭлемента = "ДоляКосвПослИт" Тогда
					ЛистГЗнач[Стр.ИмяЭлемента] = ДополнительныеПараметры.ОписаниеТиповЧисло.ПривестиЗначение(Стр.ЗначениеЭлемента);
				ИначеЕсли ЛистГЗнач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистГЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого ЛистГ2 Из ЛистГ1.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведУчПосл"), Ложь) Цикл
				НовСтр = ДанныеДопСтрокМнгСтр.Добавить();
				НовСтр.УИД = ЛистГЗнач.УИД;
				Для Каждого Стр Из ЛистГ2.Строки Цикл
					Если МассивКолонок[Стр.ИмяЭлемента] = Истина Тогда 
						ДробноеЧисло = ДополнительныеПараметры.ОписаниеТиповЧисло.ПривестиЗначение(Стр.ЗначениеЭлемента);
						Если Цел(ДробноеЧисло) <> ДробноеЧисло Тогда 
							НовСтр[Стр.ИмяЭлемента] = ДробноеЧисло;
						Иначе
							НовСтр[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
						КонецЕсли;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Инд = Инд + 1;
		КонецЦикла;
		
		СтрокаВДеревеПодч = СтрокиВДереве[ИндексЛистГ0Нач].ПолучитьЭлементы()[0].ПолучитьЭлементы()[0];
		Для Инд = 2 По ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвРосОрг"), Ложь).Количество() Цикл 
			СтрокаВДеревеПодч = УведомлениеОСпецрежимахНалогообложения.СкопироватьСтрокуВДереве(ЭтотОбъект, СтрокаВДеревеПодч);
			СтрокаВДеревеПодч.Наименование = "Стр. " + Формат(Инд, "ЧГ=0");
		КонецЦикла;
		
		Инд = 0;
		Для Каждого ЛистГ1 Из ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвРосОрг"), Ложь) Цикл
			ЛистГ1Знач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистГ1Эталон);
			ЛистГ1Знач.УИД = Новый УникальныйИдентификатор;
			ЛистГ1Знач.УИДРодителя = ЛистГЗнач.УИД;
			ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ1.Добавить(ЛистГ1Знач);
			СтрокаВДеревеПодч.ПолучитьРодителя().ПолучитьЭлементы()[Инд].УИД = ЛистГ1Знач.УИД;
			
			Для Каждого Стр Из ЛистГ1.Строки Цикл 
				Если ЛистГ1Знач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистГ1Знач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				КонецЕсли;
			КонецЦикла;
			ЛистГ1Знач["НомерРосОрг"] = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(Строка(ЛистГ1Знач["НомерРосОрг"]), 5));
			Инд = Инд + 1;
		КонецЦикла;
		
		СтрокаВДеревеПодч = СтрокиВДереве[ИндексЛистГ0Нач].ПолучитьЭлементы()[1].ПолучитьЭлементы()[0];
		Для Инд = 2 По ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвИО"), Ложь).Количество() Цикл 
			СтрокаВДеревеПодч = УведомлениеОСпецрежимахНалогообложения.СкопироватьСтрокуВДереве(ЭтотОбъект, СтрокаВДеревеПодч);
			СтрокаВДеревеПодч.Наименование = "Стр. " + Формат(Инд, "ЧГ=0");
		КонецЦикла;
		
		Инд = 0;
		Для Каждого ЛистГ2 Из ЛистГ0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СвИО"), Ложь) Цикл
			ЛистГ2Знач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистГ2Эталон);
			ЛистГ2Знач.УИД = Новый УникальныйИдентификатор;
			ЛистГ2Знач.УИДРодителя = ЛистГЗнач.УИД;
			ЭтотОбъект["ДанныеМногостраничныхРазделов"].ЛистГ2.Добавить(ЛистГ2Знач);
			СтрокаВДеревеПодч.ПолучитьРодителя().ПолучитьЭлементы()[Инд].УИД = ЛистГ2Знач.УИД;
			
			Для Каждого Стр Из ЛистГ2.Строки Цикл 
				Если ЛистГ2Знач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистГ2Знач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				ИначеЕсли Стр.ИмяЭлемента = "НомерИО" Тогда 
					ЛистГ2Знач["НомерКИК"] = Стр.ЗначениеЭлемента;
				КонецЕсли;
			КонецЦикла;
			Инд = Инд + 1;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДанныеДопСтрокМнгСтр, ЭтотОбъект["ДанныеДопСтрок"].МнгСтр);
	УдалениеЛишнихЛистов();
КонецПроцедуры

&НаСервере
Процедура УдалениеЛишнихЛистов()
	КУдалению = Новый Соответствие;
	Для Каждого КЗ Из ЭтотОбъект["ДанныеМногостраничныхРазделов"] Цикл 
		Для Каждого Элт Из ЭтотОбъект["ДанныеМногостраничныхРазделов"][КЗ.Ключ] Цикл 
			Стр = УведомлениеОСпецрежимахНалогообложения.НайтиСтрокуВДеревеПоУИД(ДеревоСтраниц.ПолучитьЭлементы(), Элт.Значение.УИД);
			Если Стр = Неопределено Тогда 
				КУдалению.Вставить(Элт.Значение.УИД, Новый Структура("Элт, СЗ", Элт, ЭтотОбъект["ДанныеМногостраничныхРазделов"][КЗ.Ключ]));
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если КУдалению.Количество() > 0 Тогда 
		Для Каждого КЗ Из КУдалению Цикл 
			КЗ.Значение.СЗ.Удалить(КЗ.Значение.Элт);
		КонецЦикла;
		Модифицированность = Истина;
		СохранитьДанные();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТаблицаОсобыхПолейВВыгрузке", ПолучитьТаблицуОсобыхПолей());
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2021_1");
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМногостраничныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	ЗагрузитьЛистыГ(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	Если Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		ЭтотОбъект["ДанныеУведомления"].Титульная.Наименование = УведомлениеОСпецрежимахНалогообложения.ПолучитьНаименованиеИПИзВыгрузки(ДеревоЗагрузки);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ОсобаяОбработкаЭлементов(Путь, СтрЗагружаемоеЗначение, Страница) Экспорт 
	Если Путь = "Файл/Документ/УведУчКИК/СведКИКЯвлИО/НомерКИК" Тогда 
		Страница.НомерКИКЧисло = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/УведУчКИК/СведКИКЯвлИС/НомерКИК" Тогда
		Страница.НомерКИКЧисло = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКартуМногостраничныхРазделов() Экспорт 
	КартаРазделов = УведомлениеОСпецрежимахНалогообложения.СформироватьПустуюКартуМногостраничныхРазделов();
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистА";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистБ";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "ЛистВ";
	Возврат КартаРазделов;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	ОписаниеОповещенияОЗавершенииЗагрузки = Новый ОписаниеОповещения("ЗагрузитьИзФайлаВФормуУведомлениеЗавершение", ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПолучитьСворачиваемыеЭлементы()
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомлениеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	ПолучитьСворачиваемыеЭлементы();
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Ложь);
КонецПроцедуры

&НаКлиенте
Процедура Заполнить(Команда)
	Доступность = Ложь;
	РезультатВыполнения = ЗаполнитьАвтоНаСервере();
	Если НЕ РезультатВыполнения.ЗаданиеВыполнено Тогда
		ОповещениеОЗавершении = Новый ОписаниеОповещения("ЗаполнитьАвтоЗавершениеПослеЗаполнения", ЭтотОбъект);
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(ЭтотОбъект);
		ПараметрыОжидания.ТекстСообщения = НСтр("ru = 'Выполняется заполнение по данным информационной базы';
												|en = 'Выполняется заполнение по данным информационной базы'");
		ДлительныеОперацииКлиент.ОжидатьЗавершение(РезультатВыполнения, ОповещениеОЗавершении, ПараметрыОжидания);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ЗаполнитьАвтоЗавершениеПослеЗаполнения(РезультатЗагрузки, ДополнительныеПараметры) Экспорт
	Доступность = Истина;
	
	Если РезультатЗагрузки = Неопределено
		ИЛИ РезультатЗагрузки.Статус <> "Выполнено" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(НСтр("ru = 'Не удалось выполнить автозаполнение...';
														|en = 'Не удалось выполнить автозаполнение...'"));
		Возврат;
	КонецЕсли;

	ЗагрузитьПодготовленныеДанные();
КонецПроцедуры

&НаСервере
Функция ЗаполнитьАвтоНаСервере()
	ПредУИД = ЭтотОбъект["УИДТекущаяСтраница"];
	ЭтотОбъект["УИДТекущаяСтраница"] = ДеревоСтраниц.ПолучитьЭлементы()[0].УИД;
	ЭтотОбъект["ТекущееИДНаименования"] = "Титульная";
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	ПоказатьТекущуюСтраницу(ДеревоСтраниц.ПолучитьЭлементы()[0].ИмяМакета,
		ДеревоСтраниц.ПолучитьЭлементы()[0].МногострочныеЧасти, Неопределено);
	
	ПараметрыОтчета = Новый Структура();
	ПараметрыОтчета.Вставить("Организация", Объект.Организация);
	ПараметрыОтчета.Вставить("УникальныйИдентификаторФормы", УникальныйИдентификатор);
	ПараметрыОтчета.Вставить("ВидУведомления", Объект.ВидУведомления);
	ПараметрыОтчета.Вставить("РегистрацияВИФНС", Объект.РегистрацияВИФНС);
	ПараметрыОтчета.Вставить("ДатаПодписи", Объект.ДатаПодписи);
	ПараметрыОтчета.Вставить("ИмяФормы", СтрРазделить(ИмяФормы, ".")[3]);
	ПараметрыОтчета.Вставить("НалоговыйПериод", ЭтотОбъект["ДанныеУведомления"].Титульная.НалПер);
	Контейнер = Новый Структура();
	
	ОТУИД = Новый ОписаниеТипов("УникальныйИдентификатор");
	Для Каждого КЗ Из ЭтотОбъект["ДанныеМногостраничныхРазделов"] Цикл 
		ДанныеСтраницы = ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение[0].Значение);
		ТЗСтр = Новый ТаблицаЗначений;
		Для Каждого Кол Из ДанныеСтраницы Цикл 
			ТЗСтр.Колонки.Добавить(Кол.Ключ, ?(ТипЗнч(Кол.Значение) = Тип("УникальныйИдентификатор"), ОТУИД, Неопределено))
		КонецЦикла;
		Контейнер.Вставить(КЗ.Ключ, ТЗСтр);
	КонецЦикла;
	
	Контейнер.Вставить("РегистрацияВИФНС", Объект.РегистрацияВИФНС);
	Контейнер.Вставить("ДатаПодписи", Объект.ДатаПодписи);
	Контейнер.Вставить("ДанныеДопСтрок", ПолучитьИзВременногоХранилища(ЭтотОбъект["ДанныеДопСтрок"].МнгСтр));
	
	ЭтаФормаИмя = СтрЗаменить(ИмяФормы, "Отчет.", "");
	ИДОтчета = Лев(ЭтаФормаИмя, СтрНайти(ЭтаФормаИмя, ".Форма.") - 1);
	ИДРедакцииОтчета = Сред(ИмяФормы, СтрНайти(ИмяФормы, ".Форма.") + 7);
	
	ПараметрыВыполненияВФоне = ДлительныеОперации.ПараметрыВыполненияВФоне(УникальныйИдентификатор);
	ПараметрыВыполненияВФоне.ЗапуститьВФоне = Истина;
	РезультатВыполнения = ДлительныеОперации.ВыполнитьВФоне("РегламентированнаяОтчетность.ЗаполнитьОтчетВФоне_Уведомления",
		Новый Структура("ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета, Контейнер", ИДОтчета, ИДРедакцииОтчета, ПараметрыОтчета, Контейнер),
		ПараметрыВыполненияВФоне);
	
	РезультатВыполнения.Вставить("ЗаданиеВыполнено", НРег(РезультатВыполнения.Статус) = "выполнено");
	ЭтотОбъект["АдресХранилища"] = РезультатВыполнения.АдресРезультата;
	
	Если РезультатВыполнения.ЗаданиеВыполнено Тогда
		ЗагрузитьПодготовленныеДанные();
	КонецЕсли;
	
	Возврат РезультатВыполнения;
КонецФункции

&НаСервере
Функция НайтиКорневойЭлементПоИД(Элементы, Имя)
	Для Каждого ЭлтДерева Из Элементы Цикл 
		Если ЭлтДерева.ИДНаименования = Имя Тогда 
			Возврат ЭлтДерева.ПолучитьРодителя();
		КонецЕсли;
		РезультатВнутреннегоПоиска = НайтиКорневойЭлементПоИД(ЭлтДерева.ПолучитьЭлементы(), Имя);
		Если РезультатВнутреннегоПоиска <> Неопределено Тогда 
			Возврат РезультатВнутреннегоПоиска;
		КонецЕсли;
	КонецЦикла;
	Возврат Неопределено;
КонецФункции

&НаСервере
Процедура ЗагрузитьПодготовленныеДанные()
	СтруктураДанных = ПолучитьИзВременногоХранилища(ЭтотОбъект["АдресХранилища"]);
	
	СтруктураДанных.Контейнер.Свойство("РегистрацияВИФНС", Объект.РегистрацияВИФНС);
	СтруктураДанных.Контейнер.Свойство("ДатаПодписи", Объект.ДатаПодписи);
	ЭтотОбъект["ДанныеУведомления"].Титульная["КодНО"] = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код");
	ЭтотОбъект["ДанныеУведомления"].Титульная["ДАТА_ПОДПИСИ"] = Объект.ДатаПодписи;
	
	Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ЛистА,ЛистБ,ЛистВ", ",") Цикл 
		СтрДанных = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтруктураДанных.Контейнер[Ключ].СкопироватьКолонки().Добавить());
		ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Очистить();
		
		Корень = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), Ключ);
		
		Для Каждого Стр Из СтруктураДанных.Контейнер[Ключ] Цикл 
			Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(СтрДанных);
			ЗаполнитьЗначенияСвойств(Данные, Стр);
			ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Добавить(Данные);
		КонецЦикла;
		
		Если ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Количество() = 0 Тогда 
			СтрДанных.УИД = Новый УникальныйИдентификатор;
			ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Добавить(СтрДанных);
		КонецЕсли;
		
		Пока Корень.ПолучитьЭлементы().Количество() < ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Количество() Цикл 
			ЗаполнитьЗначенияСвойств(Корень.ПолучитьЭлементы().Добавить(), Корень.ПолучитьЭлементы()[0]);
		КонецЦикла;
		Пока Корень.ПолучитьЭлементы().Количество() > ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Количество() Цикл 
			Корень.ПолучитьЭлементы().Удалить(0);
		КонецЦикла;
		Для Инд = 1 По ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ].Количество() Цикл 
			Элт = Корень.ПолучитьЭлементы()[Инд - 1];
			Элт.УИД = ЭтотОбъект["ДанныеМногостраничныхРазделов"][Ключ][Инд - 1].Значение.УИД;
			Элт.Наименование = "Стр. " + Формат(Инд, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого Ключ Из СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок("ЛистГ,ЛистГ1,ЛистГ2", ",") Цикл
		Корень = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), Ключ);
		Пока Корень.ПолучитьЭлементы().Количество() > 1 Цикл 
			Корень.ПолучитьЭлементы().Удалить(0);
		КонецЦикла;
	КонецЦикла;
	
	КореньГ = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ");
	КореньГ1 = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ1");
	КореньГ2 = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ2");
	ПрототипСтрокиГ = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ").ПолучитьЭлементы()[0];
	ПрототипСтрокиГ1 = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ1").ПолучитьЭлементы()[0];
	ПрототипСтрокиГ2 = НайтиКорневойЭлементПоИД(ДеревоСтраниц.ПолучитьЭлементы(), "ЛистГ2").ПолучитьЭлементы()[0];
	ПрототипДанныхГ = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтруктураДанных.Контейнер["ЛистГ"].СкопироватьКолонки().Добавить());
	ПрототипДанныхГ1 = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтруктураДанных.Контейнер["ЛистГ1"].СкопироватьКолонки().Добавить());
	ПрототипДанныхГ2 = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(СтруктураДанных.Контейнер["ЛистГ2"].СкопироватьКолонки().Добавить());
	
	ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ"].Очистить();
	ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ1"].Очистить();
	ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ2"].Очистить();
	
	СтруктураОтбора = Новый Структура("УИДРодителя");
	Для Каждого Стр Из СтруктураДанных.Контейнер["ЛистГ"] Цикл 
		НовСтрГ = КореньГ.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовСтрГ, ПрототипСтрокиГ);
		НовСтрГ.УИД = Стр.УИД;
		Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ);
		ЗаполнитьЗначенияСвойств(Данные, Стр);
		Данные.УИД = Стр.УИД;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ"].Добавить(Данные);
		
		СтруктураОтбора.УИДРодителя = Стр.УИД;
		ОтбСтрокиГ1 = СтруктураДанных.Контейнер["ЛистГ1"].НайтиСтроки(СтруктураОтбора);
		НовыйГ1Корень = НовСтрГ.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовыйГ1Корень, КореньГ1);
		Если ОтбСтрокиГ1.Количество() > 0 Тогда 
			Для Каждого СтрПодч Из ОтбСтрокиГ1 Цикл 
				НовСтр = НовыйГ1Корень.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ПрототипСтрокиГ1);
				НовСтр.УИД = Новый УникальныйИдентификатор;
				
				Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ1);
				ЗаполнитьЗначенияСвойств(Данные, СтрПодч);
				Данные.УИД = НовСтр.УИД;
				Данные.УИДРодителя = Стр.УИД;
				ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ1"].Добавить(Данные);
			КонецЦикла;
		Иначе
			НовСтр = НовыйГ1Корень.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, ПрототипСтрокиГ1);
			НовСтр.УИД = Новый УникальныйИдентификатор;
			
			Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ1);
			Данные.УИД = НовСтр.УИД;
			Данные.УИДРодителя = Стр.УИД;
			ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ1"].Добавить(Данные);
		КонецЕсли;
		
		ОтбСтрокиГ2 = СтруктураДанных.Контейнер["ЛистГ2"].НайтиСтроки(СтруктураОтбора);
		НовыйГ2Корень = НовСтрГ.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовыйГ2Корень, КореньГ2);
		Если ОтбСтрокиГ2.Количество() > 0 Тогда 
			Для Каждого СтрПодч Из ОтбСтрокиГ2 Цикл 
				НовСтр = НовыйГ2Корень.ПолучитьЭлементы().Добавить();
				ЗаполнитьЗначенияСвойств(НовСтр, ПрототипСтрокиГ2);
				НовСтр.УИД = Новый УникальныйИдентификатор;
				
				Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ2);
				ЗаполнитьЗначенияСвойств(Данные, СтрПодч);
				Данные.УИД = НовСтр.УИД;
				Данные.УИДРодителя = Стр.УИД;
				ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ2"].Добавить(Данные);
			КонецЦикла;
		Иначе
			НовСтр = НовыйГ2Корень.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр, ПрототипСтрокиГ2);
			НовСтр.УИД = Новый УникальныйИдентификатор;
			
			Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ2);
			Данные.УИД = НовСтр.УИД;
			Данные.УИДРодителя = Стр.УИД;
			ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ2"].Добавить(Данные);
		КонецЕсли;
	КонецЦикла;
	
	Если ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ"].Количество() = 0 Тогда 
		Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ);
		Данные.УИД = ПрототипСтрокиГ.УИД;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ"].Добавить(Данные);
		
		Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ1);
		Данные.УИД = ПрототипСтрокиГ1.УИД;
		Данные.УИДРодителя = ПрототипСтрокиГ.УИД;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ1"].Добавить(Данные);
		Данные = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ПрототипДанныхГ2);
		Данные.УИД = ПрототипСтрокиГ2.УИД;
		Данные.УИДРодителя = ПрототипСтрокиГ.УИД;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"]["ЛистГ2"].Добавить(Данные);
	Иначе
		КореньГ.ПолучитьЭлементы().Удалить(ПрототипСтрокиГ);
	КонецЕсли;
	
	Инд0 = 0;
	Для Каждого Стр0 Из КореньГ.ПолучитьЭлементы() Цикл 
		Инд0 = Инд0 + 1;
		Стр0.Наименование = "Стр. " + Формат(Инд0, "ЧГ=");
		
		Инд1 = 0;
		Для Каждого Стр1 Из Стр0.ПолучитьЭлементы()[0].ПолучитьЭлементы() Цикл 
			Инд1 = Инд1 + 1;
			Стр1.Наименование = "Стр. " + Формат(Инд1, "ЧГ=");
		КонецЦикла;
		Инд1 = 0;
		Для Каждого Стр1 Из Стр0.ПолучитьЭлементы()[1].ПолучитьЭлементы() Цикл 
			Инд1 = Инд1 + 1;
			Стр1.Наименование = "Стр. " + Формат(Инд1, "ЧГ=");
		КонецЦикла;
	КонецЦикла;
	
	ЭтотОбъект["ДанныеДопСтрок"]["МнгСтр"] = 
		ПоместитьВоВременноеХранилище(СтруктураДанных.Контейнер.ДанныеДопСтрок, ЭтотОбъект["ДанныеДопСтрок"]["МнгСтр"]);
	
	Модифицированность = Истина;
	Доступность = Истина;
КонецПроцедуры

&НаСервере
Функция ЗагрузитьФормат502(Ссылка)
	Попытка
		ПредставлениеXML = Ссылка.ПолучитьОбъект().ВыгрузитьДокумент()[0].ТестВыгрузки; 
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, ПредставлениеXML));
								
		ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
		ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
		ЭтотОбъект["ТекущееИДНаименования"] = "Титульная";
		ПоказатьТекущуюСтраницу("Титульная_2021", Новый СписокЗначений, Неопределено);
		Модифицированность = Истина;
		Возврат Истина;
	Исключение
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Не удалось получить текст выгрузки отчета редакции от 26.08.2019';
													|en = 'Не удалось получить текст выгрузки отчета редакции от 26.08.2019'"));
	КонецПопытки;
	Возврат Ложь;
КонецФункции

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры
