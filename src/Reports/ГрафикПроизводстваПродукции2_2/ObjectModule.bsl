#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда
	
#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	// Установка параметров
	
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета,
		"ОбозначениеЭтап",
		НСтр("ru = 'Этап';
			|en = 'Stage'"));
	
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета,
		"ОбозначениеИзделие",
		НСтр("ru = 'Изделие';
			|en = 'Product'"));
		
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета,
		"Итого",
		НСтр("ru = 'Итого';
			|en = 'Total'"));
	
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(
		НастройкиОтчета,
		"СтатусГрафика",
		РегистрыСведений.ГрафикЭтаповПроизводства2_2.СтатусРабочийГрафик());
	
	// Подстановка текста параметров
	
	НаборДанных = СхемаКомпоновкиДанных.НаборыДанных.Найти("ГрафикПроизводства");
	
	ТекстЗапроса = НаборДанных.Запрос;
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиПлан",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЭтапПроизводства2_2.УпаковкаПлан",
			"ЭтапПроизводства2_2.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиОтменено",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЭтапПроизводства2_2.УпаковкаОтменено",
			"ЭтапПроизводства2_2.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	ТекстЗапроса = СтрЗаменить(
		ТекстЗапроса,
		"&КоэффициентУпаковкиФакт",
		Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"ЭтапПроизводства2_2.УпаковкаФакт",
			"ЭтапПроизводства2_2.ПартияПроизводства.ОсновноеИзделиеНоменклатура"));
	
	НаборДанных.Запрос = ТекстЗапроса;
	
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина, Ложь);
	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки); 
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
