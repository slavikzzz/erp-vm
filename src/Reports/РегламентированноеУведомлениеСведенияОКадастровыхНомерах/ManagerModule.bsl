#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2022_1";
	Стр.ОписаниеФормы = "КНД 1114015 по приказу ФНС России от 23.03.2021 № ЕД-7-21/215@";
	Стр.ДатаНачала = '20201201';
	Стр.ДатаКонца = '20991231';
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "КНД 1114710 по приказу ФНС России от 20.12.2021 № ЕД-7-21/1121@";
	Стр.ДатаНачала = '20201201';
	Стр.ДатаКонца = '20991231';
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "КНД 1114716 по приказу ФНС России от 21.08.2023 № ЕД-7-21/564@";
	Стр.ДатаНачала = '20231201';
	Стр.ДатаКонца = '20991231';

	Возврат Результат;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2022_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2022_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2024_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2024_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПечатьСразу(Объект, ИмяФормы) Экспорт
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2022_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2022_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2024_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление_Форма2022_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2022_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор);
	ДополнитьДанныеУведомленияДляВыгрузки(ДанныеУведомления, ОсновныеСведения);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2022_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор);
	ДополнитьДанныеУведомленияДляВыгрузки(ДанныеУведомления, ОсновныеСведения);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	ДополнитьДанныеУведомленияДляВыгрузки(ДанныеУведомления, ОсновныеСведения);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ПустаяСтруктураДокумент()
	Результат = Новый Структура;
	Показатели = "УИД, ИдДок,ТипДок,Лист1_КадНом,Лист1_Год,Лист1_ДатаНачПер,Лист1_ДатаКонПер,Лист2_КадНом,Лист2_Год,Лист2_ДатаНачПер,Лист2_ДатаКонПер";
	Для Каждого Показатель из СтрРазделить(Показатели, ",") Цикл 
		Результат.Вставить(Показатель);
	КонецЦикла;
	Возврат Результат;
КонецФункции

Процедура ДополнитьДанныеУведомленияДляВыгрузки(ДанныеУведомления, ОсновныеСведения)
	ДанныеУведомления.ДанныеМногостраничныхРазделов.Вставить("Документ", Новый СписокЗначений);
	Для Каждого Элт Из ДанныеУведомления.ДанныеМногостраничныхРазделов.Лист1 Цикл 
		Лист1 = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист1) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовДок = ПустаяСтруктураДокумент();
		ЗаполнитьЗначенияСвойств(НовДок, Лист1);
		НовДок.ИдДок = Строка(Новый УникальныйИдентификатор);
		НовДок.ТипДок = ДанныеУведомления.ДанныеУведомления.Титульная.ТипДок;
		НовДок.Лист1_КадНом = Лист1.КадНом;
		НовДок.Лист1_Год = Лист1.Год;
		НовДок.Лист1_ДатаНачПер = Лист1.ДатаНачПер;
		НовДок.Лист1_ДатаКонПер = Лист1.ДатаКонПер;
		ДанныеУведомления.ДанныеМногостраничныхРазделов.Документ.Добавить(НовДок);
	КонецЦикла;
	
	Для Каждого Элт Из ДанныеУведомления.ДанныеМногостраничныхРазделов.Лист2 Цикл 
		Лист2 = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист2) Тогда 
			Продолжить;
		КонецЕсли;
		
		НовДок = ПустаяСтруктураДокумент();
		ЗаполнитьЗначенияСвойств(НовДок, Лист2);
		НовДок.ИдДок = Строка(Новый УникальныйИдентификатор);
		НовДок.ТипДок = ДанныеУведомления.ДанныеУведомления.Титульная.ТипДок;
		НовДок.Лист2_КадНом = Лист2.КадНом;
		НовДок.Лист2_Год = Лист2.Год;
		НовДок.Лист2_ДатаНачПер = Лист2.ДатаНачПер;
		НовДок.Лист2_ДатаКонПер = Лист2.ДатаКонПер;
		ДанныеУведомления.ДанныеМногостраничныхРазделов.Документ.Добавить(НовДок);
	КонецЦикла;
	
	ОсновныеСведения.Вставить("КолДок", ДанныеУведомления.ДанныеМногостраничныхРазделов.Документ.Количество());
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2022_1(СведенияОтправки)
	Если СведенияОтправки.ЭтоПБОЮЛ Тогда
		ИННФЛ = ?(ЗначениеЗаполнено(СведенияОтправки.ИННФЛ), СведенияОтправки.ИННФЛ, "000000000000");
		ИдентификаторОтправителя = СокрЛП(ИННФЛ);
	Иначе
		ИННЮЛ = ?(ЗначениеЗаполнено(СведенияОтправки.ИННЮЛ), СведенияОтправки.ИННЮЛ, "0000000000");
		КПП = ?(ЗначениеЗаполнено(СведенияОтправки.КПП), СведенияОтправки.КПП, "000000000");
		ИдентификаторОтправителя = ИННЮЛ + КПП;
	КонецЕсли;
	
	ИдентификаторПолучателя = СведенияОтправки.КодНО;
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда 
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ИдентификаторФайла = "VO_ZYKNIZOB"
	                   + "_" + ИдентификаторПолучателя
	                   + "_" + ИдентификаторОтправителя
	                   + "_" + ДатаФормированияФайла
	                   + "_" + ИдентификационныйНомер;
	
	Возврат ИдентификаторФайла;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2024_1(СведенияОтправки)
	Если СведенияОтправки.ЭтоПБОЮЛ Тогда
		ИННФЛ = ?(ЗначениеЗаполнено(СведенияОтправки.ИННФЛ), СведенияОтправки.ИННФЛ, "000000000000");
		ИдентификаторОтправителя = СокрЛП(ИННФЛ);
	Иначе
		ИННЮЛ = ?(ЗначениеЗаполнено(СведенияОтправки.ИННЮЛ), СведенияОтправки.ИННЮЛ, "0000000000");
		КПП = ?(ЗначениеЗаполнено(СведенияОтправки.КПП), СведенияОтправки.КПП, "000000000");
		ИдентификаторОтправителя = ИННЮЛ + КПП;
	КонецЕсли;
	
	ИдентификаторПолучателя = СведенияОтправки.КодНО;
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда 
		ДатаФормированияФайла = Формат(Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)), Число(Сред(СведенияОтправки.ДатаДок, 4, 2)), Число(Лев(СведенияОтправки.ДатаДок, 2))), "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ИдентификаторФайла = "VO_ZYKNRPN"
	                   + "_" + ИдентификаторПолучателя
	                   + "_" + ИдентификаторОтправителя
	                   + "_" + ДатаФормированияФайла
	                   + "_" + ИдентификационныйНомер;
	
	Возврат ИдентификаторФайла;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2022_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2022_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2022_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2024_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2022_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2022_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2024_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2022_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПечатныйБланк_2022");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Титульная"));
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ИНН, "ИНН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ОГРН, "ОГРН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Титульная.ДАТА_ПОДПИСИ, "ДАТА_ПОДПИСИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ТипДок, "ТипДок", ПечатнаяФорма.Области, "-");
	ПечатнаяФорма.Области.НаимОрг.Текст = Титульная.НаимОрг;
	ПечатнаяФорма.Области.НаимНО.Текст = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Наименование");
	НомСтр = 1;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Для Инд = 1 По 2 Цикл 
		Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов["Лист" + Инд] Цикл 
			Лист = Стр.Значение;
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист) Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Лист" + Инд));
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.КадНом, "КадНом" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.Год, "Год" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаНачПер, "ДатаНачПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаКонПер, "ДатаКонПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПечатныйБланк_2023");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Титульная"));
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ИНН, "ИНН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ОГРН, "ОГРН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Титульная.ДАТА_ПОДПИСИ, "ДАТА_ПОДПИСИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ТипДок, "ТипДок", ПечатнаяФорма.Области, "-");
	ПечатнаяФорма.Области.НаимОрг.Текст = Титульная.НаимОрг;
	ПечатнаяФорма.Области.НаимНО.Текст = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Наименование");
	НомСтр = 1;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Для Инд = 1 По 2 Цикл 
		Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов["Лист" + Инд] Цикл 
			Лист = Стр.Значение;
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист) Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Лист" + Инд));
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.КадНом, "КадНом" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.Год, "Год" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаНачПер, "ДатаНачПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаКонПер, "ДатаКонПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("ПечатныйБланк_2024");
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Титульная"));
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ИНН, "ИНН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.КодНО, "КодНО", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ОГРН, "ОГРН", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Титульная.ДАТА_ПОДПИСИ, "ДАТА_ПОДПИСИ", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Титульная.ТипДок, "ТипДок", ПечатнаяФорма.Области, "-");
	ПечатнаяФорма.Области.НаимОрг.Текст = Титульная.НаимОрг;
	ПечатнаяФорма.Области.НаимНО.Текст = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Наименование");
	НомСтр = 1;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Для Инд = 1 По 2 Цикл 
		Для Каждого Стр Из СтруктураПараметров.ДанныеМногостраничныхРазделов["Лист" + Инд] Цикл 
			Лист = Стр.Значение;
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист) Тогда 
				Продолжить;
			КонецЕсли;
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(Макет.ПолучитьОбласть("Лист" + Инд));
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.КадНом, "КадНом" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Лист.Год, "Год" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаНачПер, "ДатаНачПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(Лист.ДатаКонПер, "ДатаКонПер" + Инд, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЦикла;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли