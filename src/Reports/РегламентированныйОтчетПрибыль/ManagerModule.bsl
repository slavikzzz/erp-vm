#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если НаДату > '20080601' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	ИначеЕсли НаДату > '20050101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия300;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2010Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 15.12.2010 № ММВ-7-3/730@.";
	НоваяФорма.РедакцияФормы      = "от 15.12.2010 № ММВ-7-3/730@.";
	НоваяФорма.ДатаНачалоДействия = '2010-12-01';
	НоваяФорма.ДатаКонецДействия  = '2012-06-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2012Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 22.03.2012 № ММВ-7-3/174@.";
	НоваяФорма.РедакцияФормы      = "от 22.03.2012 № ММВ-7-3/174@.";
	НоваяФорма.ДатаНачалоДействия = '2012-07-01';
	НоваяФорма.ДатаКонецДействия  = '2013-11-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2015Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 26.11.2014 № ММВ-7-3/600@.";
	НоваяФорма.РедакцияФормы      = "от 26.11.2014 № ММВ-7-3/600@.";
	НоваяФорма.ДатаНачалоДействия = '2014-12-01';
	НоваяФорма.ДатаКонецДействия  = '2016-11-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2013Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 22.03.2012 № ММВ-7-3/174@ (в ред. приказа ФНС России от 14.11.2013 № ММВ-7-3/501@).";
	НоваяФорма.РедакцияФормы      = "от 14.11.2013 № ММВ-7-3/501@.";
	НоваяФорма.ДатаНачалоДействия = '2013-12-01';
	НоваяФорма.ДатаКонецДействия  = '2014-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2016Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 19.10.2016 № ММВ-7-3/572@.";
	НоваяФорма.РедакцияФормы      = "от 19.10.2016 № ММВ-7-3/572@.";
	НоваяФорма.ДатаНачалоДействия = '2016-12-01';
	НоваяФорма.ДатаКонецДействия  = '2019-11-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2025Кв1";
	НоваяФорма.ОписаниеОтчета     = "Утверждена приказом ФНС России от 02.10.2024 № ЕД-7-3/830@.";
	НоваяФорма.РедакцияФормы      = "от 02.10.2024 № ЕД-7-3/830@.";
	НоваяФорма.ДатаНачалоДействия = '2025-01-01';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2022Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Утверждена приказом ФНС России от 23.09.2019 № ММВ-7-3/475@ (в ред. приказа ФНС России от 17.08.2022 № СД-7-3/753@).";
	НоваяФорма.РедакцияФормы      = "от 17.08.2022 № СД-7-3/753@.";
	НоваяФорма.ДатаНачалоДействия = '2022-12-01';
	НоваяФорма.ДатаКонецДействия  = '2024-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2021Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 23.09.2019 № ММВ-7-3/475@ (в ред. приказа ФНС России от 05.10.2021 № ЕД-7-3/869@).";
	НоваяФорма.РедакцияФормы      = "от 05.10.2021 № ЕД-7-3/869@.";
	НоваяФорма.ДатаНачалоДействия = '2021-12-01';
	НоваяФорма.ДатаКонецДействия  = '2022-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 23.09.2019 № ММВ-7-3/475@ (в ред. приказа ФНС России от 11.09.2020 № ЕД-7-3/655@).";
	НоваяФорма.РедакцияФормы      = "от 11.09.2020 № ЕД-7-3/655@.";
	НоваяФорма.ДатаНачалоДействия = '2020-12-01';
	НоваяФорма.ДатаКонецДействия  = '2021-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2019Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 23.09.2019 № ММВ-7-3/475@.";
	НоваяФорма.РедакцияФормы      = "от 23.09.2019 № ММВ-7-3/475@.";
	НоваяФорма.ДатаНачалоДействия = '2019-12-01';
	НоваяФорма.ДатаКонецДействия  = '2020-12-31';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета, ДополнительныеПараметры = Неопределено) Экспорт
	
	ТаблицаДанныхРеглОтчета = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2019Кв4" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ТаблицаДанныхРеглОтчета;
		КонецЕсли;
		
		Если ДанныеРеглОтчета.Свойство("ОкружениеСохранения") Тогда // отчет сохранен в 2.0
			
		Иначе
			
			Если ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел1_1") Тогда
				
				НалогКУплате = ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1_1"];
				
				Период = ЭкземплярРеглОтчета.ДатаОкончания;
				
				Аванс = (КонецМесяца(Период) <> КонецГода(Период)); // все платежи, кроме годового - авансы
				
				МестаУплаты = НалогКУплате.Строки[0].ДанныеМногострочныхЧастей["П00011М1"];
				
				Для Каждого МестоУплаты Из МестаУплаты.Строки Цикл
					
					// Федеральный.
					Сумма = ТаблицаДанныхРеглОтчета.Добавить();
					Сумма.Период = Период;
					Сумма.ОКАТО  = МестоУплаты.Данные["П00011М101003"];
					Сумма.КБК    = МестоУплаты.Данные["П00011М103003"];
					Сумма.Сумма  = МестоУплаты.Данные["П00011М104003"];
					Сумма.Аванс  = Аванс;
					
					// Региональный.
					Сумма = ТаблицаДанныхРеглОтчета.Добавить();
					Сумма.Период = Период;
					Сумма.ОКАТО  = МестоУплаты.Данные["П00011М101003"];
					Сумма.КБК    = МестоУплаты.Данные["П00011М106003"];
					Сумма.Сумма  = МестоУплаты.Данные["П00011М107003"];
					Сумма.Аванс  = Аванс;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел1_2") Тогда
				
				АвансовыеПлатежи = ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1_2"];
				
				Период = КонецКвартала(ЭкземплярРеглОтчета.ДатаОкончания);
				
				КодСтрокиОКАТО  = "П00012М101003";
				
				КодСтрокиКБК_ФБ = "П00012М111003";
				КодСтрокиСумма_ФБ = Новый Соответствие;
				КодСтрокиСумма_ФБ.Вставить(1, "П00012М112003");
				КодСтрокиСумма_ФБ.Вставить(2, "П00012М113003");
				КодСтрокиСумма_ФБ.Вставить(3, "П00012М114003");
				Если Месяц(Период) = 9 Тогда
					КодСтрокиСумма_ФБ.Вставить(4, "П00012М112003");
					КодСтрокиСумма_ФБ.Вставить(5, "П00012М113003");
					КодСтрокиСумма_ФБ.Вставить(6, "П00012М114003");
				КонецЕсли;
				
				КодСтрокиКБК_РБ = "П00012М121003";
				КодСтрокиСумма_РБ = Новый Соответствие;
				КодСтрокиСумма_РБ.Вставить(1, "П00012М122003");
				КодСтрокиСумма_РБ.Вставить(2, "П00012М123003");
				КодСтрокиСумма_РБ.Вставить(3, "П00012М124003");
				Если Месяц(Период) = 9 Тогда
					КодСтрокиСумма_РБ.Вставить(4, "П00012М122003");
					КодСтрокиСумма_РБ.Вставить(5, "П00012М123003");
					КодСтрокиСумма_РБ.Вставить(6, "П00012М124003");
				КонецЕсли;
				
				МестаУплаты = АвансовыеПлатежи.Строки[0].ДанныеМногострочныхЧастей["П00012М1"];
				
				Для Каждого МестоУплаты Из МестаУплаты.Строки Цикл
					
					ЗначКвартал = СокрЛП(МестоУплаты.Данные["П00012М100103"]);
					
					// Федеральный.
					Для Каждого Месяц Из КодСтрокиСумма_ФБ Цикл
						
						Если ЗначениеЗаполнено(ЗначКвартал) И НЕ МесяцПринадлежитКварталу(ЗначКвартал, Месяц.Ключ) Тогда
							Продолжить;
						КонецЕсли;
						
						Сумма = ТаблицаДанныхРеглОтчета.Добавить();
						Сумма.Период = КонецМесяца(ДобавитьМесяц(Период, Месяц.Ключ));
						Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
						Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_ФБ];
						Сумма.Сумма  = МестоУплаты.Данные[Месяц.Значение];
						Сумма.Аванс  = Истина;
						
					КонецЦикла;
					
					// Региональный.
					Для Каждого Месяц Из КодСтрокиСумма_РБ Цикл
						
						Если ЗначениеЗаполнено(ЗначКвартал) И НЕ МесяцПринадлежитКварталу(ЗначКвартал, Месяц.Ключ) Тогда
							Продолжить;
						КонецЕсли;
						
						Сумма = ТаблицаДанныхРеглОтчета.Добавить();
						Сумма.Период = КонецМесяца(ДобавитьМесяц(Период, Месяц.Ключ));
						Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
						Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_РБ];
						Сумма.Сумма  = МестоУплаты.Данные[Месяц.Значение];
						Сумма.Аванс  = Истина;
						
					КонецЦикла;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Если ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел1_3") Тогда
				
				Дивиденды = ДанныеРеглОтчета.ДанныеМногоуровневыхРазделов["Раздел1_3"];
				Аванс = (КонецМесяца(Период) <> КонецГода(Период)); // все платежи, кроме годового - авансы
				
				Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1" Тогда
					
					ДатаОкончания = ЭкземплярРеглОтчета.ДатаОкончания;
					Периодичность = ЭкземплярРеглОтчета.Периодичность;
					
					КоличествоСроковУплаты = 3;
					НачалоПериодаПлатежей = НачалоКвартала(ДатаОкончания);
					Если Периодичность = Перечисления.Периодичность.Месяц Тогда
						КоличествоСроковУплаты = 1;
						НачалоПериодаПлатежей = НачалоМесяца(ДатаОкончания);
					КонецЕсли;
					
					Платежи = Дивиденды.Строки[0].ДанныеМногострочныхЧастей["П00013М1"];
					
					МестоУплаты = Дивиденды.Строки[0].Данные["П000130001003"];
					
					ИменаЯчеекСуммыСрока = Новый Соответствие;
					ИменаЯчеекСуммыСрока.Вставить(1, "П00013М104003");
					ИменаЯчеекСуммыСрока.Вставить(2, "П00013М105003");
					ИменаЯчеекСуммыСрока.Вставить(3, "П00013М106003");
					
					Для Каждого Платеж Из Платежи.Строки Цикл
						
						Для НомерСрока = 1 По КоличествоСроковУплаты Цикл
							
							ИмяЯчейкиСуммаПлатежа = ИменаЯчеекСуммыСрока[НомерСрока];
							
							Если Не ЗначениеЗаполнено(ИмяЯчейкиСуммаПлатежа) Тогда
								Продолжить;
							КонецЕсли;
							
							СуммаПлатежа = Платеж.Данные[ИмяЯчейкиСуммаПлатежа];
							
							Если Не ЗначениеЗаполнено(СуммаПлатежа) Тогда
								Продолжить;
							КонецЕсли;
							
							ПериодУплаты = КонецМесяца(ДобавитьМесяц(НачалоПериодаПлатежей, НомерСрока - 1));
							
							Сумма = ТаблицаДанныхРеглОтчета.Добавить();
							Сумма.Период = ПериодУплаты;
							Сумма.ОКАТО  = МестоУплаты;
							Сумма.КБК    = Платеж.Данные["П00013М103003"];
							Сумма.Сумма  = СуммаПлатежа;
							Сумма.Аванс  = Аванс;
							
						КонецЦикла;
						
					КонецЦикла
					
				Иначе // "ФормаОтчета2022Кв4", "ФормаОтчета2021Кв4", "ФормаОтчета2020Кв4", "ФормаОтчета2019Кв4"
					
					МестаУплаты = Дивиденды.Строки[0].ДанныеМногострочныхЧастей["П00013М1"];
					
					Для Каждого МестоУплаты Из МестаУплаты.Строки Цикл
						
						СрокиУплаты = МестоУплаты.ДанныеМногострочныхЧастей["П00013М2"];
						Для Каждого СрокУплаты Из СрокиУплаты.Строки Цикл
							
							Сумма = ТаблицаДанныхРеглОтчета.Добавить();
							Сумма.Период = СрокУплаты.Данные["П00013М204001"];
							Сумма.ОКАТО  = МестоУплаты.Данные["П00013М102003"];
							Сумма.КБК    = МестоУплаты.Данные["П00013М103003"];
							Сумма.Сумма  = СрокУплаты.Данные["П00013М204003"];
							Сумма.Аванс  = Аванс;
							
						КонецЦикла;
					КонецЦикла;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Для обособленных подразделений удалим строки с нулевыми суммами.
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура") И ДополнительныеПараметры.Свойство("ОбособленноеПодразделение")
			И ДополнительныеПараметры.ОбособленноеПодразделение Тогда
			СтруктураОтбора = Новый Структура("Сумма", 0);
			Для Каждого СтрокаТаблицы Из ТаблицаДанныхРеглОтчета.НайтиСтроки(СтруктураОтбора) Цикл
				ТаблицаДанныхРеглОтчета.Удалить(СтрокаТаблицы);
			КонецЦикла;
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2013Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2012Кв1" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ТаблицаДанныхРеглОтчета;
		КонецЕсли;
		
		Если ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1_1") Тогда
			
			НалогКУплате = ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел1_1;
			
			Период = ЭкземплярРеглОтчета.ДатаОкончания;
			
			Аванс = (КонецМесяца(Период) <> КонецГода(Период)); // все платежи, кроме годового - авансы
			
			КодСтрокиОКАТО    = "П000110001003";
			КодСтрокиКБК_ФБ   = "П000110003003";
			КодСтрокиСумма_ФБ = "П000110004003";
			КодСтрокиКБК_РБ   = "П000110006003";
			КодСтрокиСумма_РБ = "П000110007003";
			
			Для Каждого МестоУплаты Из НалогКУплате Цикл
				
				// Федеральный.
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.Период = Период;
				Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
				Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_ФБ];
				Сумма.Сумма  = МестоУплаты.Данные[КодСтрокиСумма_ФБ];
				Сумма.Аванс  = Аванс;
				
				// Региональный.
				Сумма = ТаблицаДанныхРеглОтчета.Добавить();
				Сумма.Период = Период;
				Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
				Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_РБ];
				Сумма.Сумма  = МестоУплаты.Данные[КодСтрокиСумма_РБ];
				Сумма.Аванс  = Аванс;
				
			КонецЦикла;
			
		КонецЕсли;
		
		Если ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1_2") Тогда
			
			АвансовыеПлатежи = ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел1_2;
			
			Период          = КонецКвартала(ЭкземплярРеглОтчета.ДатаОкончания);
			КодСтрокиОКАТО  = "П000120001003";
			КодСтрокиКБК_ФБ = "П000120011003";
			КодСтрокиСумма_ФБ = Новый Соответствие; 
			КодСтрокиСумма_ФБ.Вставить(1, "П000120012003");
			КодСтрокиСумма_ФБ.Вставить(2, "П000120013003");
			КодСтрокиСумма_ФБ.Вставить(3, "П000120014003");
			
			Если Месяц(Период) = 9 Тогда
				КодСтрокиСумма_ФБ.Вставить(4, "П000120012003");
				КодСтрокиСумма_ФБ.Вставить(5, "П000120013003");
				КодСтрокиСумма_ФБ.Вставить(6, "П000120014003");
			КонецЕсли;
			
			КодСтрокиКБК_РБ = "П000120021003";
			КодСтрокиСумма_РБ = Новый Соответствие; 
			КодСтрокиСумма_РБ.Вставить(1, "П000120022003");
			КодСтрокиСумма_РБ.Вставить(2, "П000120023003");
			КодСтрокиСумма_РБ.Вставить(3, "П000120024003");
			
			Если Месяц(Период) = 9 Тогда
				КодСтрокиСумма_РБ.Вставить(4, "П000120022003");
				КодСтрокиСумма_РБ.Вставить(5, "П000120023003");
				КодСтрокиСумма_РБ.Вставить(6, "П000120024003");
			КонецЕсли;
			
			Для Каждого МестоУплаты Из АвансовыеПлатежи Цикл
				
				ЗначКвартал = "";
				Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв4"
				 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
					ЗначКвартал = СокрЛП(МестоУплаты.Данные["П000120000103"]);
				КонецЕсли;
				
				// Федеральный.
				Для Каждого Месяц Из КодСтрокиСумма_ФБ Цикл
					
					Если ЗначениеЗаполнено(ЗначКвартал) И НЕ МесяцПринадлежитКварталу(ЗначКвартал, Месяц.Ключ) Тогда
						Продолжить;
					КонецЕсли;
				
					Сумма = ТаблицаДанныхРеглОтчета.Добавить();
					Сумма.Период = КонецМесяца(ДобавитьМесяц(Период, Месяц.Ключ));
					Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
					Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_ФБ];
					Сумма.Сумма  = МестоУплаты.Данные[Месяц.Значение];
					Сумма.Аванс  = Истина;
					
				КонецЦикла;
				
				// Региональный.
				Для Каждого Месяц Из КодСтрокиСумма_РБ Цикл
					
					Если ЗначениеЗаполнено(ЗначКвартал) И НЕ МесяцПринадлежитКварталу(ЗначКвартал, Месяц.Ключ) Тогда
						Продолжить;
					КонецЕсли;
					
					Сумма = ТаблицаДанныхРеглОтчета.Добавить();
					Сумма.Период = КонецМесяца(ДобавитьМесяц(Период, Месяц.Ключ));
					Сумма.ОКАТО  = МестоУплаты.Данные[КодСтрокиОКАТО];
					Сумма.КБК    = МестоУплаты.Данные[КодСтрокиКБК_РБ];
					Сумма.Сумма  = МестоУплаты.Данные[Месяц.Значение];
					Сумма.Аванс  = Истина;
					
				КонецЦикла;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20101201 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2010-12-15', "ММВ-7-3/730@", "ФормаОтчета2010Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма20101201, "5.03");
	
	Форма20120101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2012-03-22', "ММВ-7-3/174@", "ФормаОтчета2012Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20120101, "5.04");
	
	Форма20131231 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2013-11-14', "ММВ-7-3/501@", "ФормаОтчета2013Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма20131231, "5.05");
	
	Форма20141231 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2014-11-26', "ММВ-7-3/600@", "ФормаОтчета2015Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20141231, "5.06");
	
	Форма2016Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2016-10-19', "ММВ-7-3/572@", "ФормаОтчета2016Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2016Кв4, "5.07");
	
	Форма2019Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2019-09-23', "ММВ-7-3/475@", "ФормаОтчета2019Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2019Кв4, "5.08");
	
	Форма2020Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2020-09-11', "ЕД-7-3/655@", "ФормаОтчета2020Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2020Кв4, "5.09");
	
	Форма2021Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2021-10-05', "ЕД-7-3/869@", "ФормаОтчета2021Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2021Кв4, "5.10");
	
	Форма2022Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2022-08-17', "СД-7-3/753@", "ФормаОтчета2022Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2022Кв4, "5.11");
	
	Форма2025Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151006", '2024-10-02', "ЕД-7-3/830@", "ФормаОтчета2025Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма2025Кв1, "5.12");
	
	Возврат ФормыИФорматы;
	
КонецФункции

// Отбирает из списка регламентированных отчетов нужный отчет. См. ИнтерфейсыВзаимодействияБРО.АктуальныйОтчет
//
// Параметры:
//  АктуальныйОтчет				 - РегламентированныйОтчетСсылка - отобранный отчет
//  Отчеты						 - Массив - список отчетов
//  ПоОбособленномуПодразделению - Булево - признак, который определяет, что нужна декларация именно по обособленному подразделению.
//
Процедура ЗаполнитьАктуальныйОтчет(АктуальныйОтчет, Отчеты, ПоОбособленномуПодразделению) Экспорт
	
	Для Каждого Отчет Из Отчеты Цикл
		ЭтоДекларацияОбособленногоПодразделения = ЭтоДекларацияПоНалогуНаПрибыльОбособленногоПодразделения(Отчет);
		Если ПоОбособленномуПодразделению Тогда 
			Если ЭтоДекларацияОбособленногоПодразделения Тогда
				АктуальныйОтчет = Отчет;
				Прервать;
			КонецЕсли;
		ИначеЕсли Не ЭтоДекларацияОбособленногоПодразделения Тогда
			АктуальныйОтчет = Отчет;
			Прервать
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

// Определяет, является ли декларация по налогу на прибыль декларацией обособленного подразделения.
//
// Параметры:
//  РегламентированныйОтчет	 - ДокументСсылка.РегламентированныйОтчет
// 
// Возвращаемое значение:
//  Булево
//
Функция ЭтоДекларацияПоНалогуНаПрибыльОбособленногоПодразделения(РегламентированныйОтчет) Экспорт
	
	ДанныеОтчета = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегламентированныйОтчет, "ДанныеОтчета");
	Если Не ЗначениеЗаполнено(ДанныеОтчета) 
		Или ТипЗнч(ДанныеОтчета) <> Тип("ХранилищеЗначения") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	СтруктураДанныхОтчета = ДанныеОтчета.Получить();
	
	ПоказателиОтчета = Неопределено;
	Если ТипЗнч(СтруктураДанныхОтчета) <> Тип("Структура")
		Или Не СтруктураДанныхОтчета.Свойство("ПоказателиОтчета", ПоказателиОтчета) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ПоказателиТитульногоЛиста = Неопределено;
	Если ТипЗнч(ПоказателиОтчета) <> Тип("Структура")
		Или Не ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", ПоказателиТитульногоЛиста) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	КодМестаПредставления = "";
	Если ТипЗнч(ПоказателиТитульногоЛиста) <> Тип("Структура")
		Или Не ПоказателиТитульногоЛиста.Свойство("ПоМесту", КодМестаПредставления) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат КодыМестПредставленияДекларацииПоНалогуНаПрибыльОбособленныхПодразделений().Найти(СокрЛП(КодМестаПредставления)) <> Неопределено;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция КодыМестПредставленияДекларацииПоНалогуНаПрибыльОбособленныхПодразделений()
	
	Результат = Новый Массив;
	Результат.Добавить("220"); // По месту нахождения обособленного подразделения российской организации
	Результат.Добавить("223"); // По месту нахождения (учета) российской организации при представлении декларации по закрытому обособленному подразделению
	
	Возврат Результат;
	
КонецФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "",
			ИмяОбъекта = "", ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция МесяцПринадлежитКварталу(ЗначКвартал, Месяц)
	
	Возврат (ЗначКвартал = "21" И Месяц > 3) ИЛИ (ЗначКвартал = "24" И Месяц < 4);
	
КонецФункции

#КонецОбласти

#Область ПоказателиОценкиРискаВыезднойНалоговойПроверки

Процедура ПоказателиОценкиРискаВыезднойНалоговойПроверки(ТаблицаПоказателей, ОписаниеОтчета) Экспорт 
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2019Кв4" Тогда
		
		Если СведенияОтчета.Свойство("ОкружениеСохранения") Тогда // отчет сохранен в 2.0
			
		Иначе
			
			ДеревоРаздела = СведенияОтчета.ДанныеМногоуровневыхРазделов["Лист02"];
			
			Для Каждого Лист Из ДеревоРаздела.Строки Цикл
				ДанныеЛиста = Лист.Данные;
				ЗначениеПоказателя = ЗначениеПоказателя
					+ РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000020006003");
			КонецЦикла;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаПрибылиОСНО";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = 0;
			
			Для Каждого Лист Из ДеревоРаздела.Строки Цикл
				ДанныеЛиста = Лист.Данные;
				ЗначениеПоказателя = ЗначениеПоказателя
				+ РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000020019003")
				+ РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000020020003");
			КонецЦикла;
			
			ДеревоРаздела = СведенияОтчета.ДанныеМногоуровневыхРазделов["Раздел1_3"];
			
			Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1" Тогда
				
				ИменаЯчеекСуммыСрока = Новый Соответствие;
				ИменаЯчеекСуммыСрока.Вставить(1, "П00013М104003");
				ИменаЯчеекСуммыСрока.Вставить(2, "П00013М105003");
				ИменаЯчеекСуммыСрока.Вставить(3, "П00013М106003");
				
				ДеревоМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей["П00013М1"];
				Для Каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					Для НомерСрока = 1 По 3 Цикл
						ЗначениеПоказателя = ЗначениеПоказателя
							+ РегламентированнаяОтчетность.ПоказательОтчета(СтрокаМнЧ.Данные, ИменаЯчеекСуммыСрока[НомерСрока]);
					КонецЦикла;
				КонецЦикла;
				
			Иначе // "ФормаОтчета2022Кв4", "ФормаОтчета2021Кв4", "ФормаОтчета2020Кв4", "ФормаОтчета2019Кв4"
				
				ДеревоМнЧ = ДеревоРаздела.Строки[0].ДанныеМногострочныхЧастей["П00013М1"];
				Для Каждого СтрокаМнЧ Из ДеревоМнЧ.Строки Цикл
					ДеревоПодчМнЧ = СтрокаМнЧ.ДанныеМногострочныхЧастей["П00013М2"];
					Для Каждого СтрокаПодчМнЧ Из ДеревоПодчМнЧ.Строки Цикл
						ЗначениеПоказателя = ЗначениеПоказателя
							+ РегламентированнаяОтчетность.ПоказательОтчета(СтрокаПодчМнЧ.Данные, "П00013М204003");
					КонецЦикла;
				КонецЦикла;
				
			КонецЕсли;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаНалогаНаПрибыль";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = 0;
			
			ДеревоРаздела = СведенияОтчета.ДанныеМногоуровневыхРазделов["Лист02"];
			
			Для Каждого Лист Из ДеревоРаздела.Строки Цикл
				ДанныеЛиста = Лист.Данные;
				ЗначениеПоказателя = ЗначениеПоказателя
					+ РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000020003003");
			КонецЦикла;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаРасходовПоРеализации";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
			ЗначениеПоказателя = 0;
			
			Для Каждого Лист Из ДеревоРаздела.Строки Цикл
				ДанныеЛиста = Лист.Данные;
				ЗначениеПоказателя = ЗначениеПоказателя
					+ РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000020001003");
			КонецЦикла;
			
			НоваяСтрока = ТаблицаПоказателей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
			НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
			НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
			
		КонецЕсли;
		
	ИначеЕсли ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000200006003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаПрибылиОСНО";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000200019003")
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000200020003");
		КонецЦикла;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Раздел1_3 Цикл
			ДанныеЛиста = Лист.Данные;
			НомерСтроки = 1;
			Постфикс = "_" + РегламентированнаяОтчетность.ЧислоВСтрокуЧГ0(НомерСтроки);
			Пока ДанныеЛиста.Свойство("П000130004003" + Постфикс) Цикл
				ЗначениеПоказателя = ЗначениеПоказателя
				                   + ДанныеЛиста["П000130004003" + Постфикс];
				НомерСтроки = НомерСтроки + 1;
				Постфикс = "_" + РегламентированнаяОтчетность.ЧислоВСтрокуЧГ0(НомерСтроки);
			КонецЦикла;
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНаПрибыль";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000200003003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаРасходовПоРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000200001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П002000006003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаПрибылиОСНО";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П002000019003")
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П002000020003");
		КонецЦикла;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Раздел1_3 Цикл
			ДанныеЛиста = Лист.Данные;
			НомерСтроки = 1;
			Постфикс = "_" + РегламентированнаяОтчетность.ЧислоВСтрокуЧГ0(НомерСтроки);
			Пока ДанныеЛиста.Свойство("П000130004003" + Постфикс) Цикл
				ЗначениеПоказателя = ЗначениеПоказателя
				                   + ДанныеЛиста["П000130004003" + Постфикс];
				НомерСтроки = НомерСтроки + 1;
				Постфикс = "_" + РегламентированнаяОтчетность.ЧислоВСтрокуЧГ0(НомерСтроки);
			КонецЦикла;
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНаПрибыль";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П002000003003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаРасходовПоРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = 0;
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Лист02 Цикл
			ДанныеЛиста = Лист.Данные;
			ЗначениеПоказателя = ЗначениеПоказателя
			                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П002000001003");
		КонецЦикла;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаДоходовОтРеализации";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли