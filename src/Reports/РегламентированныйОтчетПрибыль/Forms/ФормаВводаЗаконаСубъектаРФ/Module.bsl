#Область ОбработчикиСобытийФормы

&НаКлиенте
Процедура Очистить(Команда)
	
	НомерСтатьи    = "";
	ПунктСтатьи    = "";
	ПодпунктСтатьи = "";
	НомерЗакона    = "";
	
	СформироватьПредставление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура СформироватьПредставление(Форма)
	
	Если ЗначениеЗаполнено(Форма.НомерСтатьи) ИЛИ ЗначениеЗаполнено(Форма.ПунктСтатьи)
		ИЛИ ЗначениеЗаполнено(Форма.ПодпунктСтатьи) ИЛИ ЗначениеЗаполнено(Форма.НомерЗакона) Тогда
		Форма.Представление = Форма.НомерСтатьи + "/" + Форма.ПунктСтатьи + "/" + Форма.ПодпунктСтатьи + "/
		|" + Форма.НомерЗакона;
	Иначе
		Форма.Представление = "";
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура НомерСтатьиПриИзменении(Элемент)
	
	НомерСтатьи = СтрЗаменить(НомерСтатьи, " ", "");
	НомерСтатьи = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(НомерСтатьи, 4, "0");
	
	СформироватьПредставление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПунктСтатьиПриИзменении(Элемент)
	
	ПунктСтатьи = СтрЗаменить(ПунктСтатьи, " ", "");
	ПунктСтатьи = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПунктСтатьи, 4, "0");
	
	СформироватьПредставление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПодпунктСтатьиПриИзменении(Элемент)
	
	ПодпунктСтатьи = СтрЗаменить(ПодпунктСтатьи, " ", "");
	ПодпунктСтатьи = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(ПодпунктСтатьи, 4, "0");
	
	СформироватьПредставление(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура НомерЗаконаПриИзменении(Элемент)
	
	НомерЗакона = СтрЗаменить(НомерЗакона, " ", "");
	НомерЗакона = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(НомерЗакона, 15, "0");
	
	СформироватьПредставление(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	НомерСтатьи    = Параметры.НомерСтатьи;
	ПунктСтатьи    = Параметры.ПунктСтатьи;
	ПодпунктСтатьи = Параметры.ПодпунктСтатьи;
	НомерЗакона    = Параметры.НомерЗакона;
	
	СформироватьПредставление(ЭтотОбъект);
	
	БылаНажатаКнопкаОК = Ложь;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность И НЕ БылаНажатаКнопкаЗакрыть Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
			
			ТекстПредупреждения = НСтр("ru = 'Данные были изменены.
			|Перед завершением работы рекомендуется сохранить измененные данные,
			|иначе изменения будут утеряны.';
			|en = 'Данные были изменены.
			|Перед завершением работы рекомендуется сохранить измененные данные,
			|иначе изменения будут утеряны.'");
			
			Возврат;
			
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Отказаться от изменений?';
							|en = 'Данные были изменены. Отказаться от изменений?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ОКОтмена);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.ОК Тогда
		Модифицированность = Ложь;
		Закрыть();
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	
	Если НЕ БылаНажатаКнопкаЗакрыть Тогда
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура Ввести(Команда)
	
	БылаНажатаКнопкаЗакрыть = Истина;
	
	ВозврСтруктура = Новый Структура;
	ВозврСтруктура.Вставить("НомерСтатьи",    НомерСтатьи);
	ВозврСтруктура.Вставить("ПунктСтатьи",    ПунктСтатьи);
	ВозврСтруктура.Вставить("ПодпунктСтатьи", ПодпунктСтатьи);
	ВозврСтруктура.Вставить("НомерЗакона",    НомерЗакона);
	
	Закрыть(ВозврСтруктура);
	
КонецПроцедуры

#КонецОбласти