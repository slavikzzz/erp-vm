// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
// * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
// * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//   поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//   нужно всегда использовать схему по умолчанию - указываем значение "null".
// * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
// Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
// поэтому обработчики используются для получения значений показателей, не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

#Область ПредОбработкаСхемыЗагрузки
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Код", "s1"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Формат = "Т";
		СтрокаДерева.ЗначениеПоУмолчанию = "";
		СтрокаДерева.Родитель.Многострочность = Истина;
		СтрокаДерева.Родитель.Раздел = "ПолеТабличногоДокументаФормаОтчета";
		Для Каждого ДочерняяСтрокаДерева Из СтрокаДерева.Родитель.Строки Цикл
			ДочерняяСтрокаДерева.Многострочность = Истина;
			ДочерняяСтрокаДерева.Ключ = СтрЗаменить(ДочерняяСтрокаДерева.Ключ, "П1", "П0");
			ДочерняяСтрокаДерева.Ключ = СтрЗаменить(ДочерняяСтрокаДерева.Ключ, "П2", "П0");
			Для Каждого ПодчиненнаяСтрокаДерева Из ДочерняяСтрокаДерева.Строки Цикл
				ПодчиненнаяСтрокаДерева.Многострочность = Истина;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	УзлыСекции2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section[@code='2']");
	Для Каждого УзелСекции2 Из УзлыСекции2 Цикл
		УзелСекции2.Обязательность = УзелСекции2.Обязательность + "П";
	КонецЦикла;
	
#КонецОбласти

#Область ПостОбработкаДокументаОтчета
	
	УзлыСтрокСекции2 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//section[@code='2']/row");
	
	НомерЗагруженнойСтроки = 2;
	
	Для Каждого УзелСтрокиСекции2 Из УзлыСтрокСекции2 Цикл
		
		УзлыКодСтроки = УзлыПоXPath(УзелСтрокиСекции2, "@code");
		КодСтроки = ?(ЗначениеЗаполнено(УзлыКодСтроки), УзлыКодСтроки[0].ЗначениеПоУмолчанию, "");
		
		Если КодСтроки = "15" Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСтрокиСекции2, П.ДанныеОтчета, П.ПараметрыОтчета);
		ИначеЕсли КодСтроки = "16" Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСтрокиСекции2, П.ДанныеОтчета, П.ПараметрыОтчета, , , 1);
		ИначеЕсли КодСтроки = "17" Тогда
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСтрокиСекции2, П.ДанныеОтчета, П.ПараметрыОтчета, , , 2);
		ИначеЕсли КодСтроки = "18" Тогда
			НомерЗагруженнойСтроки = НомерЗагруженнойСтроки + 1;
			ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСтрокиСекции2, П.ДанныеОтчета, П.ПараметрыОтчета, , , НомерЗагруженнойСтроки);
		КонецЕсли;
		
	КонецЦикла;
	
#КонецОбласти