#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	
	ИмяФормы = Неопределено;
	Если НЕ Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда
		ИмяФормы = "Форма2021_4";
	КонецЕсли;
	
	Если ИмяФормы = "Форма2021_4" Тогда
		Возврат СоздатьЗаполненноеУведомление_Форма2021_4(Параметры, СуществующийДокументСсылка);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецФункции

Функция СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы, НазначениеАдреса = Неопределено) Экспорт
	СоответствиеПоказателей = Новый Структура;
	
	Если ИмяФормы = "Форма2020_4" Или ИмяФормы = "Форма2021_4" Тогда
		ЗаполнитьСоответствиеРеквизитамАдреса_Форма2021_4(СоответствиеПоказателей, НазначениеАдреса);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
	
	Возврат СоответствиеПоказателей;
КонецФункции

Функция ДоступнаПечатьPDF417(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2021_4" Тогда
		Возврат Истина;
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт
	
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	ПолноеОписаниеФормы = Результат.Добавить();
	ПолноеОписаниеФормы.ИмяФормы = "Форма2021_4";
	ПолноеОписаниеФормы.ОписаниеФормы = "В редакции приказа ФНС России от 01.11.2021 № ЕД-7-14/948@";
	ПолноеОписаниеФормы.ДатаНачала = '2021-12-18';
	ПолноеОписаниеФормы.ДатаКонца  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));

	Возврат Результат;
	
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт
	
	Возврат "";
	
КонецФункции

Процедура СохранитьДанныеПомощника(Уведомление, ДанныеПомощникаЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	ДанныеУведомления = УведомлениеОбъект.ДанныеУведомления.Получить();
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") Тогда
		ДанныеУведомления.Вставить("ДанныеПомощникаЗаполнения", ДанныеПомощникаЗаполнения);
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	Попытка
		УведомлениеОбъект.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2021_4" Тогда
		Возврат ЭлектронноеПредставление_Форма2021_4(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция СведенияИзФормРегистрации(ИмяФормы, ДанныеУведомления) Экспорт
	
	Результат = Новый Структура;
	Результат.Вставить("КодЗаявления", "Р13014");
	Данные = ДанныеУведомления.Получить();
	
	Лист001 = Данные.ДанныеУведомления.Лист001;
	ЛистА   = Данные.ДанныеУведомления.ЛистА;
	
	Результат.Вставить("ОГРН", Лист001.П01010100);
	Результат.Вставить("НаимЮЛПолн", ЛистА.А01010100);
	
	Результат.Вставить("Заявители", Новый Массив);
	
	Если ИмяФормы = "Форма2020_4" Тогда 
		Для Каждого ЛистН Из Данные.ДанныеМногостраничныхРазделов.ЛистН Цикл
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистН.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			СвЗаяв = Новый Структура;
			СвЗаяв.Вставить("Фамилия",  ЛистН.Значение.Н01020101);
			СвЗаяв.Вставить("Имя",      ЛистН.Значение.Н01020102);
			СвЗаяв.Вставить("Отчество", ЛистН.Значение.Н01020103);
			СвЗаяв.Вставить("ЭлектроннаяПочта", ЛистН.Значение.Н01030100);
			
			Результат.Заявители.Добавить(СвЗаяв);
		КонецЦикла;
	ИначеЕсли ИмяФормы = "Форма2021_4" Тогда
		Для Каждого ЛистП Из Данные.ДанныеМногостраничныхРазделов.ЛистП Цикл
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистП.Значение) Тогда
				Продолжить;
			КонецЕсли;
			
			СвЗаяв = Новый Структура;
			СвЗаяв.Вставить("Фамилия",  ЛистП.Значение.П01020101);
			СвЗаяв.Вставить("Имя",      ЛистП.Значение.П01020102);
			СвЗаяв.Вставить("Отчество", ЛистП.Значение.П01020103);
			СвЗаяв.Вставить("ЭлектроннаяПочта", ЛистП.Значение.П01030100);
			
			Результат.Заявители.Добавить(СвЗаяв);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияОтчета

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2021_4" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2021_4();
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2020_4();
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2020_4()
	
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Стр. 1";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_Страница1";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Ложь;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "Лист001";
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_Страница", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист А";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_ЛистА";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистА";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьА010201");
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьА010202");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистА_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист Б";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_ЛистБ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистБ";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьБ010207");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистБ_", 2);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистВ_", 7);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "В", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистГ_", 10);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "Г", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистД_", 8);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "Д", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистЕ_", 7);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "Е", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистЖ_", 7);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "Ж", БланкиПечати);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист З";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_ЛистЗ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Ложь;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистЗ";
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистЗ_", 5);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистИ_", 2);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "И", БланкиПечати);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист К";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_ЛистК";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистК";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьК010102");
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьК010202");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистК_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Листы Л";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.Многостраничность = Истина;
	СтраницаУровня1.Многострочность = Истина;
	
	СтраницаУровня2 = СтраницаУровня1.Строки.Добавить();
	СтраницаУровня2.Наименование = "Стр. 1";
	СтраницаУровня2.ИндексКартинки = 1;
	СтраницаУровня2.ИмяМакета = "Форма2020_4_ЛистЛ";
	СтраницаУровня2.Многостраничность = Истина;
	СтраницаУровня2.Многострочность = Истина;
	СтраницаУровня2.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня2.ИДНаименования = "ЛистЛ";
	СтраницаУровня2.МногострочныеЧасти.Добавить("МногострочнаяЧастьЛ010408");
	СтраницаУровня2.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистЛ_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист М";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2020_4_ЛистМ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистМ";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьМ010101");
	СтраницаУровня1.МакетыПФ = "Печать_Форма2020_4_ЛистМ";
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2020_4_ЛистН_", 2);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2020_4", "Н", БланкиПечати);
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2021_4()
	
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Стр. 1";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_Страница1";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Ложь;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "Лист001";
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_Страница", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист А";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистА";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистА";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьА010201");
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьА010202");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистА_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист Б";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистБ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистБ";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьБ010207");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистБ_", 2);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистВ_", 10);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "В", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистГ_", 10);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "Г", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистД_", 8);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "Д", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистЕ_", 7);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "Е", БланкиПечати);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистЖ_", 7);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "Ж", БланкиПечати);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист З";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистЗ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Ложь;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистЗ";
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистЗ_", 5);
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистИ_", 2);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "И", БланкиПечати);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист К";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистК";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистК";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьК010102");
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьК010202");
	СтраницаУровня1.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистК_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Листы Л";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.Многостраничность = Истина;
	СтраницаУровня1.Многострочность = Истина;
	
	СтраницаУровня2 = СтраницаУровня1.Строки.Добавить();
	СтраницаУровня2.Наименование = "Стр. 1";
	СтраницаУровня2.ИндексКартинки = 1;
	СтраницаУровня2.ИмяМакета = "Форма2021_4_ЛистЛ";
	СтраницаУровня2.Многостраничность = Истина;
	СтраницаУровня2.Многострочность = Истина;
	СтраницаУровня2.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня2.ИДНаименования = "ЛистЛ";
	СтраницаУровня2.МногострочныеЧасти.Добавить("МногострочнаяЧастьЛ010408");
	СтраницаУровня2.МакетыПФ = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистЛ_", 2);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист М";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистМ";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистМ";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьМ010101");
	СтраницаУровня1.МакетыПФ = "Печать_Форма2021_4_ЛистМ";
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистН_", 3);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "Н", БланкиПечати);
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = "Лист О";
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.ИмяМакета = "Форма2021_4_ЛистО";
	СтраницаУровня1.Многостраничность = Ложь;
	СтраницаУровня1.Многострочность = Истина;
	СтраницаУровня1.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня1.ИДНаименования = "ЛистО";
	СтраницаУровня1.МногострочныеЧасти.Добавить("МногострочнаяЧастьО010101");
	СтраницаУровня1.МакетыПФ = "Печать_Форма2021_4_ЛистО";
	
	БланкиПечати = СписокПечатныхЛистовПоПрефиксу("Печать_Форма2021_4_ЛистП_", 2);
	ДобавитьМногостраничныйРазделЛист(КорневойУровень, "Форма2021_4", "П", БланкиПечати);
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Процедура ДобавитьМногостраничныйРазделЛист(КорневойУровень, ПрефиксИмениМакета, БуквенныйКодЛиста, БланкиПечати)
	
	СтраницаУровня1 = КорневойУровень.Добавить();
	СтраницаУровня1.Наименование = СтрШаблон("Листы %1", БуквенныйКодЛиста);
	СтраницаУровня1.ИндексКартинки = 1;
	СтраницаУровня1.Многостраничность = Истина;
	СтраницаУровня1.Многострочность = Ложь;
	
	СтраницаУровня2 = СтраницаУровня1.Строки.Добавить();
	СтраницаУровня2.Наименование = "Стр. 1";
	СтраницаУровня2.ИндексКартинки = 1;
	СтраницаУровня2.ИмяМакета = СтрШаблон("%1_Лист%2", ПрефиксИмениМакета, БуквенныйКодЛиста);
	СтраницаУровня2.Многостраничность = Истина;
	СтраницаУровня2.Многострочность = Ложь;
	СтраницаУровня2.УИД = Новый УникальныйИдентификатор;
	СтраницаУровня2.ИДНаименования = СтрШаблон("Лист%1", БуквенныйКодЛиста);
	СтраницаУровня2.МакетыПФ = БланкиПечати;
	
КонецПроцедуры

Функция СписокПечатныхЛистовПоПрефиксу(Префикс, Количество)
	
	СписокПечатныхЛистов = "";
	
	Для Инд = 1 По Количество Цикл
		СписокПечатныхЛистов = СписокПечатныхЛистов + ";"
		                     + Префикс + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(Инд);
	КонецЦикла;
	
	Возврат Сред(СписокПечатныхЛистов, 2);
	
КонецФункции

#КонецОбласти

#Область Печать

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы = Ложь) Экспорт
	Если Объект.ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы);
	ИначеЕсли Объект.ИмяФормы = "Форма2021_4" Тогда
		Возврат СформироватьСписокЛистовФорма2021_4(Объект, ЕстьВыходЗаГраницы);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы)
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	ДеревоСтраницОбъекта = СтруктураПараметров.ДеревоСтраниц;
	АктуализироватьПараметрыДереваСтраниц(Объект.ИмяФормы, ДеревоСтраницОбъекта);
	
	НомСтр = 0;
	Для Каждого Стр Из ДеревоСтраницОбъекта.Строки Цикл
		Если Стр.ИДНаименования = "ЛистК" Тогда
			ВывестиБланк2020_4_ЛистК(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		ИначеЕсли Стр.ИДНаименования = "ЛистМ" Тогда
			ВывестиБланк2020_4_ЛистМ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		Иначе
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Функция СформироватьСписокЛистовФорма2021_4(Объект, ЕстьВыходЗаГраницы)
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	ДеревоСтраницОбъекта = СтруктураПараметров.ДеревоСтраниц;
	АктуализироватьПараметрыДереваСтраниц(Объект.ИмяФормы, ДеревоСтраницОбъекта);
	
	НомСтр = 0;
	Для Каждого Стр Из ДеревоСтраницОбъекта.Строки Цикл
		Если Стр.ИДНаименования = "ЛистК" Тогда
			ВывестиБланк2021_4_ЛистК(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		ИначеЕсли Стр.ИДНаименования = "ЛистМ" Тогда
			ВывестиБланк2021_4_ЛистМ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		ИначеЕсли Стр.ИДНаименования = "ЛистО" Тогда
			ВывестиБланк2021_4_ЛистО(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
		
		Иначе
			
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если НЕ ЗначениеЗаполнено(МакетыПФ) И НЕ ЗначениеЗаполнено(ИмяМакета) Тогда
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
		КонецЦикла;
		Возврат;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда
		МассивИменМакетов = СтрРазделить(МакетыПФ, ";", Ложь);
	Иначе
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда
		СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
		
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(Объект, СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
				ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, СтрПарам,
					СтруктураПараметров.ДанныеДопСтрокБД, ЕстьВыходЗаГраницы);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда
					НапечататьСтруктуру(Объект, МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
					ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, СтрПарам,
						СтруктураПараметров.ДанныеДопСтрокБД, ЕстьВыходЗаГраницы);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НапечататьСтруктуру(Объект, СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
		НомСтр = НомСтр + 1;
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета);
		
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			Если СтрНачинаетсяС(КЗ.Ключ, "ВыводитьНоль_") Тогда 
				Разделение = СтрРазделить(КЗ.Ключ, "_");
				Для Инд = 1 По Разделение.ВГраница() Цикл 
					Если СтруктураДанныхСтраницы.Свойство(Разделение[Инд])
						И Не ЗначениеЗаполнено(СтруктураДанныхСтраницы[Разделение[Инд]]) Тогда 
						СтруктураДанныхСтраницы[Разделение[Инд]] = "0";
					КонецЕсли;
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			ИмяПоказателя = КЗ.Ключ;
			ЗначениеПоказателя = КЗ.Значение;
			ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
		ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
		ПечатнаяФорма.Вывести(МакетПФ);
		
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, СтраницаРаздела, МногострочныеЧасти, ЕстьВыходЗаГраницы)
	
	ИменаМногострочныхЧастей = СтраницаРаздела.МногострочныеЧасти;
	ИдСтраницы = СтраницаРаздела.УИД;
	
	Для Каждого МСЧРаздела Из ИменаМногострочныхЧастей Цикл
		ИмяМСЧ = МСЧРаздела.Значение;
		МногострочнаяЧасть = МногострочныеЧасти[ИмяМСЧ];
		
		СтрокиМСЧ = МногострочнаяЧасть.НайтиСтроки(Новый Структура("УИД", ИдСтраницы));
		
		НомерСтроки = 0;
		Для Каждого СтрокаМСЧ Из СтрокиМСЧ Цикл
			СтрокаЗаполнена = Ложь;
			Для Каждого Колонка ИЗ МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя;
				СтрокаЗаполнена = СтрокаЗаполнена
					ИЛИ ИмяПоказателя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[ИмяПоказателя]);
			КонецЦикла;
			
			Если НЕ СтрокаЗаполнена Тогда
				Продолжить;
			КонецЕсли;
			
			НомерСтроки = НомерСтроки + 1;
			Для Каждого Колонка Из МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки);
				ЗначениеПоказателя = СтрокаМСЧ[Колонка.Имя];
				ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, ПечатнаяФорма, ЕстьВыходЗаГраницы);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистК(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МСЧ1 = РазмещениеМСЧ.МногострочнаяЧастьК010102;
	МСЧ2 = РазмещениеМСЧ.МногострочнаяЧастьК010202;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МСЧ1)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МСЧ2) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполненияИПечати = Новый Структура;
	ПараметрыЗаполненияИПечати.Вставить("Объект", Объект);
	ПараметрыЗаполненияИПечати.Вставить("Листы", Листы);
	ПараметрыЗаполненияИПечати.Вставить("СтруктураПараметров", СтруктураПараметров);
	ПараметрыЗаполненияИПечати.Вставить("СтруктураДанныхСтраницы", СтруктураДанныхСтраницы);
	ПараметрыЗаполненияИПечати.Вставить("МакетыПФ", СтрРазделить(Стр.МакетыПФ, ";", Ложь));
	
	// Страница 1.
	ПараметрыЗаполненияИПечати.Вставить("ИмяОсновногоПоказателя", "К01010100");
	ПараметрыЗаполненияИПечати.Вставить("ПолноеИмяМСЧ", "МногострочнаяЧастьК010102");
	ПараметрыЗаполненияИПечати.Вставить("ИмяПоказателяМСЧ", "К01010200");
	ПараметрыЗаполненияИПечати.Вставить("ИндексМакета", 0);
	
	ВывестиБланк2020_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов);
	
	// Страница 2.
	ПараметрыЗаполненияИПечати.Вставить("ИмяОсновногоПоказателя", "К01020100");
	ПараметрыЗаполненияИПечати.Вставить("ПолноеИмяМСЧ", "МногострочнаяЧастьК010202");
	ПараметрыЗаполненияИПечати.Вставить("ИмяПоказателяМСЧ", "К01020200");
	ПараметрыЗаполненияИПечати.Вставить("ИндексМакета", 1);
	
	ВывестиБланк2020_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов);
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов)
	
	Листы = ПараметрыЗаполненияИПечати.Листы;
	СтруктураПараметров = ПараметрыЗаполненияИПечати.СтруктураПараметров;
	СтруктураДанныхСтраницы = ПараметрыЗаполненияИПечати.СтруктураДанныхСтраницы;
	МакетыПФ = ПараметрыЗаполненияИПечати.МакетыПФ;
	
	ИмяОсновногоПоказателя = ПараметрыЗаполненияИПечати.ИмяОсновногоПоказателя;
	ПолноеИмяМСЧ = ПараметрыЗаполненияИПечати.ПолноеИмяМСЧ;
	ИмяПоказателяМСЧ = ПараметрыЗаполненияИПечати.ИмяПоказателяМСЧ;
	ИндексМакета = ПараметрыЗаполненияИПечати.ИндексМакета;
	
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МногострочнаяЧасть = РазмещениеМСЧ[ПолноеИмяМСЧ];
	
	СтраницаЗаполнена = ЗначениеЗаполнено(СтруктураДанныхСтраницы[ИмяОсновногоПоказателя])
	                ИЛИ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть);
	
	Если НЕ СтраницаЗаполнена Тогда
		Возврат;
	КонецЕсли;
	
	НомСтр = НомСтр + 1;
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, МакетыПФ[ИндексМакета]);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураДанныхСтраницы[ИмяОсновногоПоказателя], ИмяОсновногоПоказателя, МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг[ИмяПоказателяМСЧ]) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг[ИмяПоказателяМСЧ], ИмяПоказателяМСЧ + "_"+РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, МакетыПФ[ИндексМакета]);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистМ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МногострочнаяЧасть = РазмещениеМСЧ.МногострочнаяЧастьМ010101;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрМнг.М01010100) Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(МакетПФ);
		ПечатнаяФорма.Области.М01010100.Текст = ВРег(СокрЛП(СтрМнг.М01010100));
		
		НомСтр = НомСтр + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиБланк2021_4_ЛистК(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МСЧ1 = РазмещениеМСЧ.МногострочнаяЧастьК010102;
	МСЧ2 = РазмещениеМСЧ.МногострочнаяЧастьК010202;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МСЧ1)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МСЧ2) Тогда
		Возврат;
	КонецЕсли;
	
	ПараметрыЗаполненияИПечати = Новый Структура;
	ПараметрыЗаполненияИПечати.Вставить("Объект", Объект);
	ПараметрыЗаполненияИПечати.Вставить("Листы", Листы);
	ПараметрыЗаполненияИПечати.Вставить("СтруктураПараметров", СтруктураПараметров);
	ПараметрыЗаполненияИПечати.Вставить("СтруктураДанныхСтраницы", СтруктураДанныхСтраницы);
	ПараметрыЗаполненияИПечати.Вставить("МакетыПФ", СтрРазделить(Стр.МакетыПФ, ";", Ложь));
	
	// Страница 1.
	ПараметрыЗаполненияИПечати.Вставить("ИмяОсновногоПоказателя", "К01010100");
	ПараметрыЗаполненияИПечати.Вставить("ПолноеИмяМСЧ", "МногострочнаяЧастьК010102");
	ПараметрыЗаполненияИПечати.Вставить("ИмяПоказателяМСЧ", "К01010200");
	ПараметрыЗаполненияИПечати.Вставить("ИндексМакета", 0);
	
	ВывестиБланк2021_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов);
	
	// Страница 2.
	ПараметрыЗаполненияИПечати.Вставить("ИмяОсновногоПоказателя", "К01020100");
	ПараметрыЗаполненияИПечати.Вставить("ПолноеИмяМСЧ", "МногострочнаяЧастьК010202");
	ПараметрыЗаполненияИПечати.Вставить("ИмяПоказателяМСЧ", "К01020200");
	ПараметрыЗаполненияИПечати.Вставить("ИндексМакета", 1);
	
	ВывестиБланк2021_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов);
	
КонецПроцедуры

Процедура ВывестиБланк2021_4_ЛистК_Страница(Объект, ПараметрыЗаполненияИПечати, НомСтр, СписокИспользуемыхМакетов)
	
	Листы = ПараметрыЗаполненияИПечати.Листы;
	СтруктураПараметров = ПараметрыЗаполненияИПечати.СтруктураПараметров;
	СтруктураДанныхСтраницы = ПараметрыЗаполненияИПечати.СтруктураДанныхСтраницы;
	МакетыПФ = ПараметрыЗаполненияИПечати.МакетыПФ;
	
	ИмяОсновногоПоказателя = ПараметрыЗаполненияИПечати.ИмяОсновногоПоказателя;
	ПолноеИмяМСЧ = ПараметрыЗаполненияИПечати.ПолноеИмяМСЧ;
	ИмяПоказателяМСЧ = ПараметрыЗаполненияИПечати.ИмяПоказателяМСЧ;
	ИндексМакета = ПараметрыЗаполненияИПечати.ИндексМакета;
	
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МногострочнаяЧасть = РазмещениеМСЧ[ПолноеИмяМСЧ];
	
	СтраницаЗаполнена = ЗначениеЗаполнено(СтруктураДанныхСтраницы[ИмяОсновногоПоказателя])
	                ИЛИ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть);
	
	Если НЕ СтраницаЗаполнена Тогда
		Возврат;
	КонецЕсли;
	
	НомСтр = НомСтр + 1;
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, МакетыПФ[ИндексМакета]);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураДанныхСтраницы[ИмяОсновногоПоказателя], ИмяОсновногоПоказателя, МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг[ИмяПоказателяМСЧ]) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг[ИмяПоказателяМСЧ], ИмяПоказателяМСЧ + "_"+РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, МакетыПФ[ИндексМакета]);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
			
		КонецЕсли;
		
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
КонецПроцедуры

Процедура ВывестиБланк2021_4_ЛистМ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МногострочнаяЧасть = РазмещениеМСЧ.МногострочнаяЧастьМ010101;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрМнг.М01010100) Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(МакетПФ);
		ПечатнаяФорма.Области.М01010100.Текст = ВРег(СокрЛП(СтрМнг.М01010100));
		
		НомСтр = НомСтр + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиБланк2021_4_ЛистО(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	РазмещениеМСЧ = СтруктураПараметров.ДанныеДопСтрокБД;
	МногострочнаяЧасть = РазмещениеМСЧ.МногострочнаяЧастьО010101;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрМнг.О01010100) Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(МакетПФ);
		ПечатнаяФорма.Области.О01010100.Текст = ВРег(СокрЛП(СтрМнг.О01010100));
		
		НомСтр = НомСтр + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы)
	
	Если ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(ИмяПоказателя) Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеПредставление

Функция ЭлектронноеПредставление_Форма2021_4(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузкиФорма2021_4");
	ЗаполнитьДанными_Форма2021_4(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура ЗаполнитьДанными_Форма2021_4(Объект, Параметры, ДеревоВыгрузки)
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_Форма2021_4(Параметры, ДанныеУведомления);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
	
КонецПроцедуры

Процедура ДополнитьПараметры_Форма2021_4(Параметры, ВсеДанные)
	
	Лист001 = ВсеДанные.ДанныеУведомления.Лист001;
	
	ДобавитьСоставляющиеСтоимости(Лист001, "П01040200");
	
	ЛистБ = ВсеДанные.ДанныеУведомления.ЛистБ;
	
	МногострочнаяЧастьБ010207 = ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьБ010207;
	ДобавитьПоказателиМСЧ(ЛистБ, МногострочнаяЧастьБ010207);
	
	ЛистыВ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистВ;
	
	Для Каждого Страница Из ЛистыВ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "В01040100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "В0162070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "В0162170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "В0162280");
			
			Если ЗначениеЗаполнено(ДанныеСтраницы.В7010106)
				Или ЗначениеЗаполнено(ДанныеСтраницы.В7010107)
				Или ЗначениеЗаполнено(ДанныеСтраницы.В7010108) Тогда 
				
				ДанныеСтраницы.Вставить("Х7010106", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010106), "", "1"));
				ДанныеСтраницы.Вставить("Х7010107", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010107), "", "1"));
				ДанныеСтраницы.Вставить("Х7010108", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010108), "", "1"));
			КонецЕсли;
			Если ЗначениеЗаполнено(ДанныеСтраницы.В7010211)
				Или ЗначениеЗаполнено(ДанныеСтраницы.В7010212)
				Или ЗначениеЗаполнено(ДанныеСтраницы.В7010213) Тогда 
				
				ДанныеСтраницы.Вставить("Х7010211", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010211), "", "1"));
				ДанныеСтраницы.Вставить("Х7010212", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010212), "", "1"));
				ДанныеСтраницы.Вставить("Х7010213", ?(ЗначениеЗаполнено(ДанныеСтраницы.В7010213), "", "1"));
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеСтраницы.В7010224) И ЗначениеЗаполнено(ДанныеСтраницы.В7010225) Тогда 
				ДанныеСтраницы.Вставить("Х7010224", ДанныеСтраницы.В7010224 + "-" + ДанныеСтраницы.В7010225);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЛистыГ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистГ;
	
	Для Каждого Страница Из ЛистыГ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0102010", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0103010", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Г0103120");
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Г01040100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0162070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0162170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Г0162280");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0171070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Г0171170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Г0171280");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыД = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистД;
	
	Для Каждого Страница Из ЛистыД Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Д0132020", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Д0132040", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Д0132120");
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Д01040100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Д0162070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Д0162170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Д0162280");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыЕ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистЕ;
	
	Для Каждого Страница Из ЛистыЕ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Е01040100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Е0162070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Е0162170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Е0162280");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыЖ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистЖ;
	
	Для Каждого Страница Из ЛистыЖ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Ж01040100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Ж0162070", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Ж0162170", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Ж0162280");
		КонецЕсли;
	КонецЦикла;
	
	ЛистЗ = ВсеДанные.ДанныеУведомления.ЛистЗ;
	
	ДобавитьСоставляющиеСтоимости(ЛистЗ,  "З01010100");
	ДобавитьПризнакиНаличияФИО(ЛистЗ,     "З0122070", Истина);
	ДобавитьПризнакиНаличияФИО(ЛистЗ,     "З0122170", Истина);
	ДобавитьПолныйКодПодразделения(ЛистЗ, "З0122280");
	
	ЛистыИ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистИ;
	
	Для Каждого Страница Из ЛистыИ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "И0102030", Истина);
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "И0103050", Истина);
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "И0103160");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыЛ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистЛ;
	
	Для Каждого Страница Из ЛистыЛ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			МногострочнаяЧастьЛ010408 = ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьЛ010408;
			ДобавитьПоказателиМСЧПоУИД(ДанныеСтраницы, МногострочнаяЧастьЛ010408, ДанныеСтраницы.УИД);
		КонецЕсли;
	КонецЦикла;
	
	ЛистМ = ВсеДанные.ДанныеУведомления.ЛистМ;
	
	МногострочнаяЧастьМ010101 = ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьМ010101;
	ДобавитьПоказателиМСЧ(ЛистМ, МногострочнаяЧастьМ010101);
	
	ЛистыН = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистН;
	Для Каждого Страница Из ЛистыН Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы, "Н4010101");
			
			Если ЗначениеЗаполнено(ДанныеСтраницы.Н3230301)
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н3230302)
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н3230303)
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н3230304) Тогда 
				
				ДанныеСтраницы.Вставить("Х3230305", "" + ДанныеСтраницы.Н3230305 + "-"+ ДанныеСтраницы.Н3230306);
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеСтраницы.Н03040100) 
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н03040200) 
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н03040300) Тогда 
				
				Если Не ЗначениеЗаполнено(ДанныеСтраницы.Н03040100) Тогда 
					ДанныеСтраницы.Вставить("Х03040100", "1");
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеСтраницы.Н03040200) Тогда 
					ДанныеСтраницы.Вставить("Х03040200", "1");
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ДанныеСтраницы.Н03040300) Тогда 
					ДанныеСтраницы.Вставить("Х03040300", "1");
				КонецЕсли;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(ДанныеСтраницы.Н3230101) 
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н3230102) 
				Или ЗначениеЗаполнено(ДанныеСтраницы.Н3230103) Тогда 
			
				ДобавитьПризнакиНаличияФИО(ДанныеСтраницы, "Н323010", Истина);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	ЛистыП = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистП;
	Для Каждого Страница Из ЛистыП Цикл
		ДанныеСтраницы = Страница.Значение;
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "П0102010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "П0102090");
		КонецЕсли;
	КонецЦикла;
	
	ВсеДанные.ДанныеМногостраничныхРазделов.Вставить("ЛистО", Новый СписокЗначений);
	Для Каждого Стр Из ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьО010101 Цикл 
		Если ЗначениеЗаполнено(Стр.О01010100) Тогда 
			ВсеДанные.ДанныеМногостраничныхРазделов.ЛистО.Добавить(
				Новый Структура("УИД, О01010100", Новый УникальныйИдентификатор, Стр.О01010100));
		КонецЕсли;
	КонецЦикла;
	ВсеДанные.ДанныеМногостраничныхРазделов.Вставить("ЛистМ", Новый СписокЗначений);
	Для Каждого Стр Из ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьМ010101 Цикл 
		Если ЗначениеЗаполнено(Стр.М01010100) Тогда 
			ВсеДанные.ДанныеМногостраничныхРазделов.ЛистМ.Добавить(
				Новый Структура("УИД, М01010100", Новый УникальныйИдентификатор, Стр.М01010100));
		КонецЕсли;
	КонецЦикла;
	
	// Сделать многострочные части видимыми для общих механизмов выгрузки.
	ВсеДанные.Вставить("МногострочнаяЧастьА010201",
		ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьА010201);
	ВсеДанные.Вставить("МногострочнаяЧастьА010202",
		ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьА010202);
	ВсеДанные.Вставить("МногострочнаяЧастьК010102",
		ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьК010102);
	ВсеДанные.Вставить("МногострочнаяЧастьК010202",
		ВсеДанные.ДанныеДопСтрокБД.МногострочнаяЧастьК010202);
	
КонецПроцедуры

Процедура ДобавитьСоставляющиеСтоимости(Показатели, ИмяПоказателя)
	
	ВыводитьНоль = Показатели.Свойство("ВыводитьНоль_" + ИмяПоказателя)
		И ЗначениеЗаполнено(Показатели["ВыводитьНоль_" + ИмяПоказателя])
		И Не ЗначениеЗаполнено(Показатели[ИмяПоказателя]);
	
	УстКапитал = Показатели[ИмяПоказателя];
	ПредставлениеУК = Формат(?(УстКапитал = Неопределено, 0, УстКапитал), "ЧРД=,; ЧГ=0" + ?(ВыводитьНоль, "; ЧН=0,0", ""));
	СоставляющиеУК = СтрРазделить(ПредставлениеУК, ",", Истина);
	Если СоставляющиеУК.Количество() = 1 Тогда
		СоставляющиеУК.Добавить("");
	КонецЕсли;
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_1", СоставляющиеУК[0]); // Рубли
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_2", СоставляющиеУК[1]); // Копейки
	
КонецПроцедуры

Процедура ДобавитьПризнакиНаличияФИО(ДанныеРаздела, Префикс, ТолькоЗаполненные = Ложь)
	
	ПоказательФ = Префикс + "1";
	ПоказательИ = Префикс + "2";
	ПоказательО = Префикс + "3";
	
	ФИОЗаполнено =  ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]);
	
	Если ТолькоЗаполненные И НЕ ФИОЗаполнено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательФ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательИ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательО, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]), "", "1"));
	
КонецПроцедуры

Процедура ДобавитьПолныйКодПодразделения(ДанныеРаздела, Префикс)
	
	КодПодразделения = "";
	Если ЗначениеЗаполнено(ДанныеРаздела[Префикс + "1"]) ИЛИ ЗначениеЗаполнено(ДанныеРаздела[Префикс + "2"]) Тогда
		КодПодразделения = ДанныеРаздела[Префикс + "1"] + "-" + ДанныеРаздела[Префикс + "2"];
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(Префикс, 2) + "0", КодПодразделения);
	
КонецПроцедуры

Процедура ДобавитьПоказателиМСЧ(ДанныеРаздела, МСЧ)
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаМСЧ Из МСЧ Цикл
		СтрокаЗаполнена = Ложь;
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			СтрокаЗаполнена = СтрокаЗаполнена
				ИЛИ КолонкаМСЧ.Имя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[КолонкаМСЧ.Имя]);
		КонецЦикла;
		
		Если НЕ СтрокаЗаполнена Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ДанныеРаздела.Вставить(ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки), СтрокаМСЧ[ИмяПоказателя]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ДобавитьПоказателиМСЧПоУИД(ДанныеРаздела, МСЧ, УИД)
	
	СтрокиМСЧ = МСЧ.НайтиСтроки(Новый Структура("УИД", УИД));
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаМСЧ Из СтрокиМСЧ Цикл
		СтрокаЗаполнена = Ложь;
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			СтрокаЗаполнена = СтрокаЗаполнена
				ИЛИ КолонкаМСЧ.Имя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[КолонкаМСЧ.Имя]);
		КонецЦикла;
		
		Если НЕ СтрокаЗаполнена Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ДанныеРаздела.Вставить(ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки), СтрокаМСЧ[ИмяПоказателя]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда
		ДатаДокумента = Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)),
			Число(Сред(СведенияОтправки.ДатаДок, 4, 2)),
			Число(Лев(СведенияОтправки.ДатаДок, 2)));
		ДатаФормированияФайла = Формат(ДатаДокумента, "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R13014";
	ИдПолучателя = "0000_0000";
	ИдОтправителя = "000000000000000";
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ПрефиксИмениФайла = Префикс + "_" + ИдПолучателя + "_" + ИдОтправителя + "_"
	                  + ДатаФормированияФайла + "_" + ИдентификационныйНомер;
	
	Возврат ПрефиксИмениФайла;
	
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2021_4" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2021_4(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_Лист1(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Лист001 = Данные.ДанныеУведомления.Лист001;
	
	РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("П01010100,П01010200", Лист001, ТаблицаОшибок, "Лист001", Истина);
	Если Не ЗначениеЗаполнено(Лист001.П01020100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид причины", "Лист001", "П01020100"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Лист001.П01030200) И Не ЗначениеЗаполнено(Лист001.П01030100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид изменения", "Лист001", "П01030100"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Лист001.П01040200) И Не ЗначениеЗаполнено(Лист001.П01040100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код вида изменения", "Лист001", "П01040100"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Лист001.П01020300) И СтрДлина(Лист001.П01020300) <> 2 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан номер типового устава", "Лист001", "П01020300"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Лист001.П01050300) Тогда 
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("П01050100,П01050200", Лист001, ТаблицаОшибок, "Лист001", Истина);
	КонецЕсли;
	Если ЗначениеЗаполнено(Лист001.П01080200) И Не ЗначениеЗаполнено(Лист001.П01080100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид действия при отсутствии (наличии) сведений в ЕГРЮЛ", "Лист001", "П01080100"));
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистА(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьА010201 Цикл 
		Если ЗначениеЗаполнено(Стр.А01020100) И СтрДлина(Стр.А01020100) <> 3 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Код языка должен состоять из трех цифр",
				"ЛистА", "А01020100_" + (Данные.ДанныеДопСтрокБД.МногострочнаяЧастьА010201.Индекс(Стр) + 1)));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьА010202 Цикл 
		Если ЗначениеЗаполнено(Стр.А01020200) И СтрДлина(Стр.А01020200) <> 3 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Код языка должен состоять из трех цифр",
				"ЛистА", "А01020200_" + (Данные.ДанныеДопСтрокБД.МногострочнаяЧастьА010202.Индекс(Стр) + 1)));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистБ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	ЛистБ = Данные.ДанныеУведомления.ЛистБ;
	
	Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистБ, "Б01010100,Б01010201,Б01010202,Б01010301,Б01010302,Б01010401,Б01010402")
		И СтрДлина(ЛистБ.Б01010100) <> 2 Тогда
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан код региона", "ЛистБ", "Б01010100"));
	КонецЕсли;
	
	РегистрационныеФормы.Проверка_Адрес("Б01020100,Б01020201,Б01020202", ЛистБ, ТаблицаОшибок, "ЛистБ", Ложь);
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистВ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл 
		ЛистВ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистВ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистВ.В01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистВ", "В01010100", ЛистВ.УИД));
		КонецЕсли;
		УчУчрЮЛРос_Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистВ, "В01020100,В01020200,В01030100,В01030200");
		УчУчрЮЛИн_Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистВ, "В01020300,В01020400,В01020500,В01030300,"
			+ "В01030400,В01030500,В01030600,В01030700,В01030800");
		Если ?(УчУчрЮЛРос_Заполнен, 1, 0) + ?(УчУчрЮЛИн_Заполнен, 1, 0) <> 1 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Заполняются либо сведения о российской организации или об иностранной", "ЛистВ", "В01020100", ЛистВ.УИД));
		КонецЕсли;
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01020100,В01020200", ЛистВ, ТаблицаОшибок, "ЛистВ");
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01030100,В01030200", ЛистВ, ТаблицаОшибок, "ЛистВ");
		РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("В01020300,В01020400,В01020500", ЛистВ, ТаблицаОшибок,  "ЛистВ");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01030300", Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01030600", Ложь);
		
		РегистрационныеФормы.Проверка_ДоляУстКап("В01040100,В01040200,В01040301,В01040302", ЛистВ, ТаблицаОшибок, "ЛистВ");
		Если ЗначениеЗаполнено(ЛистВ.В01050200) И Не ЗначениеЗаполнено(ЛистВ.В01050100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак вида действия", "ЛистВ", "В01050100", ЛистВ.УИД));
		КонецЕсли;
		
		СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол");
		СтруктураДанных_ЗалЧастДол.Вставить("В01622801");
		СтруктураДанных_ЗалЧастДол.Вставить("В01622802");
		СтруктураДанных_ЗалЧастДол.Вставить("В7010224");
		СтруктураДанных_ЗалЧастДол.Вставить("В7010225");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистВ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда 
			РегистрационныеФормы.Проверка_ДоговорНотариус(
				"В01060100,В01610100,В01610200,В01610301,В01610302,В01610303", ЛистВ, ТаблицаОшибок, "ЛистВ", Истина);
			
			СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвЗалДер");
			СтруктураДанных_СвЗалДер.Вставить("В01622801");
			СтруктураДанных_СвЗалДер.Вставить("В01622802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистВ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда 
				Если Не ЗначениеЗаполнено(ЛистВ.В01620100) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистВ", "В01620100", ЛистВ.УИД));
				КонецЕсли;
				
				СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистВ);
				Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
				СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистВ);
				Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
				СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
				СтруктураДанных_ЗалДерФЛ.Вставить("В01622801");
				СтруктураДанных_ЗалДерФЛ.Вставить("В01622802");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистВ);
				Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
				
				Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистВ", "В01620200", ЛистВ.УИД));
				КонецЕсли;
				
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01620200,В01620300", ЛистВ, ТаблицаОшибок, "ЛистВ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01620900,В01621000", ЛистВ, ТаблицаОшибок, "ЛистВ");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("В01620400,В01620500,В01620600", ЛистВ, ТаблицаОшибок, "ЛистВ");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01621100", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01621400", Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01620800", Ложь, Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01621800", Ложь, Ложь);
				РегистрационныеФормы.Проверка_СвРожд("В01622000,В01622100", ЛистВ, ТаблицаОшибок, "ЛистВ");
				РегистрационныеФормы.Проверка_СвГражд("В01622200,В01622300", ЛистВ, ТаблицаОшибок, "ЛистВ");
				РегистрационныеФормы.Проверка_УдЛичнФЛ(
					"В01622400,В01622500,В01622600,В01622700,В01622801,В01622802", ЛистВ, ТаблицаОшибок, "ЛистВ");
			КонецЕсли;
			
			СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвУправЗал");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистВ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда 
				РегистрационныеФормы.Проверка_ДоговорНотариус(
					"В01630100,В01630200,В01630300,В01630401,В01630402,В01630403", ЛистВ, ТаблицаОшибок, "ЛистВ", Истина);
				
				СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистВ);
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда
					Если Не ЗначениеЗаполнено(ЛистВ.В01630500) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не указан признак причины", "ЛистВ", "В01630500", ЛистВ.УИД));
					КонецЕсли;
					
					СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистВ);
					Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
					СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистВ);
					Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
					СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистВ);
					Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
					
					Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистВ", "В01630600", ЛистВ.УИД));
					КонецЕсли;
					
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01630600,В01630700", ЛистВ, ТаблицаОшибок, "ЛистВ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В01631300,В01631400", ЛистВ, ТаблицаОшибок, "ЛистВ");
					РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("В01630800,В01630900,В01631000", ЛистВ, ТаблицаОшибок, "ЛистВ");
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01631500", Ложь, Истина);
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01631800", Ложь);
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("В01631100,В01631200", ЛистВ, ТаблицаОшибок, "ЛистВ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("В01632100,В01632200", ЛистВ, ТаблицаОшибок, "ЛистВ");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_СвДовУправ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ");
		СтруктураДанных_СвДовУправ.Вставить("В7010224");
		СтруктураДанных_СвДовУправ.Вставить("В7010225");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУправ, ЛистВ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУправ) Тогда 
			Если Не ЗначениеЗаполнено(ЛистВ.В07000000) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистВ", "В07000000", ЛистВ.УИД));
			КонецЕсли;
			
			СтруктураДанных_СвДовУпр = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ/СвДовУпр");
			СтруктураДанных_СвДовУпр.Вставить("В7010224");
			СтруктураДанных_СвДовУпр.Вставить("В7010225");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУпр, ЛистВ);
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУпр) Тогда 
				Продолжить;
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ЛистВ.В07010000) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистВ", "В07010000", ЛистВ.УИД));
			КонецЕсли;
			СтруктураДанных_ДовУпрЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ/СвДовУпр/ДовУпрЮЛРос");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрЮЛРос, ЛистВ);
			Заполнено_ДовУпрЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрЮЛРос);
			СтруктураДанных_ДовУпрЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ/СвДовУпр/ДовУпрЮЛИн");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрЮЛИн, ЛистВ);
			Заполнено_ДовУпрЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрЮЛИн);
			СтруктураДанных_ДовУпрИп = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ/СвДовУпр/ДовУпрИп");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрИп, ЛистВ);
			Заполнено_ДовУпрИп = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрИп);
			СтруктураДанных_ДовУпрФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрЮЛ/СвДовУправ/СвДовУпр/ДовУпрФЛ");
			СтруктураДанных_ДовУпрФЛ.Вставить("В7010224");
			СтруктураДанных_ДовУпрФЛ.Вставить("В7010225");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрФЛ, ЛистВ);
			Заполнено_ДовУпрФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрФЛ);
			
			Если ?(Заполнено_ДовУпрЮЛРос, 1, 0) + ?(Заполнено_ДовУпрЮЛИн, 1, 0) 
				+ ?(Заполнено_ДовУпрИп, 1, 0) + ?(Заполнено_ДовУпрФЛ, 1, 0) <> 1 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистВ", "В7010101", ЛистВ.УИД));
			КонецЕсли;
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В7010101,В7010102", ЛистВ, ТаблицаОшибок, "ЛистВ");
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("В7010201,В7010202", ЛистВ, ТаблицаОшибок, "ЛистВ");
			РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("В7010103,В7010104,В7010105", ЛистВ, ТаблицаОшибок, "ЛистВ");
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В7010203", Ложь, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистВ, ТаблицаОшибок, "ЛистВ", "В7010206", Ложь);
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("В7010110,В7010111", ЛистВ, ТаблицаОшибок, "ЛистВ");
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("В7010209,В7010210", ЛистВ, ТаблицаОшибок, "ЛистВ");
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В7010109", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В7010214", Ложь, Ложь);
			РегистрационныеФормы.Проверка_СвРожд("В7010216,В7010217", ЛистВ, ТаблицаОшибок, "ЛистВ");
			РегистрационныеФормы.Проверка_СвГражд("В7010218,В7010219", ЛистВ, ТаблицаОшибок, "ЛистВ");
			РегистрационныеФормы.Проверка_УдЛичнФЛ("В7010220,В7010221,В7010222,В7010223,В7010224,В7010225", ЛистВ, ТаблицаОшибок, "ЛистВ");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистГ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистГ Цикл 
		ЛистГ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистГ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистГ.Г01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистГ", "Г01010100", ЛистГ.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01020200", Ложь, Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01030200", Ложь, Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01031300", Ложь, Ложь);
		РегистрационныеФормы.Проверка_СвРожд("Г01030400,Г01030500", ЛистГ, ТаблицаОшибок, "ЛистГ");
		РегистрационныеФормы.Проверка_СвГражд("Г01030600,Г01030700", ЛистГ, ТаблицаОшибок, "ЛистГ");
		РегистрационныеФормы.Проверка_УдЛичнФЛ("Г01030800,Г01030900,Г01031000,Г01031100,Г01031201,Г01031202", ЛистГ, ТаблицаОшибок, "ЛистГ");
		РегистрационныеФормы.Проверка_ДоляУстКап("Г01040100,Г01040200,Г01040301,Г01040302", ЛистГ, ТаблицаОшибок, "ЛистГ");
		Если ЗначениеЗаполнено(ЛистГ.Г01050200) И Не ЗначениеЗаполнено(ЛистГ.Г01050100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан вид действия", "ЛистГ", "Г01050100", ЛистГ.УИД));
		КонецЕсли;
		
		СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол");
		СтруктураДанных_ЗалЧастДол.Вставить("Г01622801");
		СтруктураДанных_ЗалЧастДол.Вставить("Г01622802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистГ);
		
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда 
			РегистрационныеФормы.Проверка_ДоговорНотариус("Г01060100,Г01610100,Г01610200,Г01610301,Г01610302", ЛистГ, ТаблицаОшибок, "ЛистГ", Истина);
			СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвЗалДер");
			СтруктураДанных_СвЗалДер.Вставить("Г01622801");
			СтруктураДанных_СвЗалДер.Вставить("Г01622802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистГ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда
				Если Не ЗначениеЗаполнено(ЛистГ.Г01620100) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистГ", "Г01620100", ЛистГ.УИД));
				КонецЕсли;
				
				СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистГ);
				СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистГ);
				СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
				СтруктураДанных_ЗалДерФЛ.Вставить("Г01622801");
				СтруктураДанных_ЗалДерФЛ.Вставить("Г01622802");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистГ);
				
				Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
				Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
				Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
				
				Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистГ", "Г01620200", ЛистГ.УИД));
				КонецЕсли;
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01620200,Г01620300", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01620900,Г01621000", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Г01620400,Г01620500,Г01620600", ЛистГ, ТаблицаОшибок, "ЛистГ");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01621100", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01621400", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01620800", Ложь, Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01621800", Ложь, Ложь);
				РегистрационныеФормы.Проверка_СвРожд("Г01622000,Г01622100", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_СвГражд("Г01622200,Г01622300", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_УдЛичнФЛ("Г01622400,Г01622500,Г01622600,Г01622700,Г01622801,Г01622802", ЛистГ, ТаблицаОшибок, "ЛистГ");
			КонецЕсли;
			
			СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвУправЗал");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистГ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда 
				РегистрационныеФормы.Проверка_ДоговорНотариус("Г01630100,Г01630200,Г01630300,Г01630401,Г01630402", ЛистГ, ТаблицаОшибок, "ЛистГ", Истина);
				СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистГ);
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда
					Если Не ЗначениеЗаполнено(ЛистГ.Г01630500) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не указан признак причины", "ЛистГ", "Г01630500", ЛистГ.УИД));
					КонецЕсли;
					
					СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистГ);
					Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
					СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистГ);
					Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
					СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистГ);
					Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
					
					Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистГ", "Г01630600", ЛистГ.УИД));
					КонецЕсли;
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01630600,Г01630700", ЛистГ, ТаблицаОшибок, "ЛистГ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01631300,Г01631400", ЛистГ, ТаблицаОшибок, "ЛистГ");
					РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Г01630800,Г01630900,Г01631000", ЛистГ, ТаблицаОшибок, "ЛистГ");
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01631500", Ложь, Истина);
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01631800", Ложь, Истина);
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Г01631100,Г01631200", ЛистГ, ТаблицаОшибок, "ЛистГ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Г01632100,Г01632200", ЛистГ, ТаблицаОшибок, "ЛистГ");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_СвДовУправ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ");
		СтруктураДанных_СвДовУправ.Вставить("Г01712801");
		СтруктураДанных_СвДовУправ.Вставить("Г01712802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУправ, ЛистГ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУправ) Тогда
			Если Не ЗначениеЗаполнено(ЛистГ.Г01070100) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистГ", "Г01070100", ЛистГ.УИД));
			КонецЕсли;
			
			СтруктураДанных_СвДовУпр = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ/СвДовУпр");
			СтруктураДанных_СвДовУпр.Вставить("Г01712801");
			СтруктураДанных_СвДовУпр.Вставить("Г01712802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУпр, ЛистГ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУправ) Тогда
				Если Не ЗначениеЗаполнено(ЛистГ.Г01710100) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистГ", "Г01710100", ЛистГ.УИД));
				КонецЕсли;
				
				СтруктураДанных_ДовУпрЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ/СвДовУпр/ДовУпрЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрЮЛРос, ЛистГ);
				Заполнено_ДовУпрЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрЮЛРос);
				СтруктураДанных_ДовУпрЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ/СвДовУпр/ДовУпрЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрЮЛИн, ЛистГ);
				Заполнено_ДовУпрЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрЮЛИн);
				СтруктураДанных_ДовУпрИп = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ/СвДовУпр/ДовУпрИп");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрИп, ЛистГ);
				Заполнено_ДовУпрИп = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрИп);
				СтруктураДанных_ДовУпрФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрФЛ/СвДовУправ/СвДовУпр/ДовУпрФЛ");
				СтруктураДанных_ДовУпрФЛ.Вставить("Г01712801");
				СтруктураДанных_ДовУпрФЛ.Вставить("Г01712802");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ДовУпрФЛ, ЛистГ);
				Заполнено_ДовУпрФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ДовУпрФЛ);
				
				Если ?(Заполнено_ДовУпрЮЛРос, 1, 0) + ?(Заполнено_ДовУпрЮЛИн, 1, 0) 
					+ ?(Заполнено_ДовУпрИп, 1, 0) + ?(Заполнено_ДовУпрФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистГ", "Г01710200", ЛистГ.УИД));
				КонецЕсли;
				
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01710200,Г01710300", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Г01710900,Г01711000", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Г01710400,Г01710500,Г01710600", ЛистГ, ТаблицаОшибок, "ЛистГ");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01711100", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01711400", Ложь, Истина);
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Г01710801,Г01710802", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Г01711601,Г01711602", ЛистГ, ТаблицаОшибок, "ЛистГ");
				
				
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01710800", Ложь, Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01711800", Ложь, Ложь);
				РегистрационныеФормы.Проверка_СвРожд("Г01712000,Г01712100", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_СвГражд("Г01712200,Г01712300", ЛистГ, ТаблицаОшибок, "ЛистГ");
				РегистрационныеФормы.Проверка_УдЛичнФЛ("Г01712400,Г01712500,Г01712600,Г01712700,Г01712801,Г01712802", ЛистГ, ТаблицаОшибок, "ЛистГ");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистД(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистД Цикл 
		ЛистД = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистД) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистД.Д01010100) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистД", "Д01010100", ЛистД.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистД.Д01020100) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида участника", "ЛистД", "Д01020100", ЛистД.УИД));
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистД, "Д01310100,Д01310200,Д01310300,Д01310400") Тогда 
			Если Не ЗначениеЗаполнено(ЛистД.Д01310100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистД", "Д01310100", ЛистД.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01310300", Ложь, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01310200", Ложь, Истина);
		КонецЕсли;
		
		СтруктураДанных_СвФЛОсущПр = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/СвФЛОсущПр");
		СтруктураДанных_СвФЛОсущПр.Вставить("Д01321201");
		СтруктураДанных_СвФЛОсущПр.Вставить("Д01321202");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвФЛОсущПр, ЛистД);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвФЛОсущПр) Тогда 
			Если Не ЗначениеЗаполнено(ЛистД.Д01320100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистД", "Д01320100", ЛистД.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01320300", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "Д01320500", "Д01320500", Ложь, Ложь);
			РегистрационныеФормы.Проверка_СвРожд("Д01320600,Д01320700", ЛистД, ТаблицаОшибок, "ЛистД");
			РегистрационныеФормы.Проверка_УдЛичнФЛ(
				"Д01320800,Д01320900,Д01321000,Д01321100,Д01321201,Д01321202", ЛистД, ТаблицаОшибок, "ЛистД");
		КонецЕсли;
		РегистрационныеФормы.Проверка_ДоляУстКап("Д01040100,Д01040200,Д01040301,Д01040302", ЛистД, ТаблицаОшибок, "ЛистД");
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистД, "Д01050100,Д01050200") Тогда 
			Если Не ЗначениеЗаполнено(ЛистД.Д01050100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан вид действия", "ЛистД", "Д01050100", ЛистД.УИД));
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол");
		СтруктураДанных_ЗалЧастДол.Вставить("Д01622801");
		СтруктураДанных_ЗалЧастДол.Вставить("Д01622802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистД);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда 
			РегистрационныеФормы.Проверка_ДоговорНотариус(
				"Д01060100,Д01610100,Д01610200,Д01610301,Д01610302,Д01610303", ЛистД, ТаблицаОшибок, "ЛистД", Истина);
			
			СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвЗалДер");
			СтруктураДанных_СвЗалДер.Вставить("Д01622801");
			СтруктураДанных_СвЗалДер.Вставить("Д01622802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистД);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда
				Если Не ЗначениеЗаполнено(ЛистД.Д01620100) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан код причины", "ЛистД", "Д01620100", ЛистД.УИД));
				КонецЕсли;
				
				СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистД);
				Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
				СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистД);
				Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
				СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
				СтруктураДанных_ЗалДерФЛ.Вставить("Д01622801");
				СтруктураДанных_ЗалДерФЛ.Вставить("Д01622802");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистД);
				Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
				
				Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистД", "Д01620200", ЛистД.УИД));
				КонецЕсли;
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д01620200,Д01620300", ЛистД, ТаблицаОшибок, "ЛистД");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д01620900,Д01621000", ЛистД, ТаблицаОшибок, "ЛистД");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Д01620400,Д01620500,Д01620600", ЛистД, ТаблицаОшибок, "ЛистД");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01621100", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистД, ТаблицаОшибок, "ЛистД", "Д01621400", Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01620800", Ложь, Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01621800", Ложь, Ложь);
				РегистрационныеФормы.Проверка_СвРожд("Д01622000,Д01622100", ЛистД, ТаблицаОшибок, "ЛистД");
				РегистрационныеФормы.Проверка_СвГражд("Д01622200,Д01622300", ЛистД, ТаблицаОшибок, "ЛистД");
				РегистрационныеФормы.Проверка_УдЛичнФЛ("Д01622400,Д01622500,Д01622600,Д01622700,Д01622801,Д01622802", ЛистД, ТаблицаОшибок, "ЛистД");
			КонецЕсли;
			
			СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвУправЗал");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистД);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда
				РегистрационныеФормы.Проверка_ДоговорНотариус(
					"Д01630100,Д01630200,Д01630300,Д01630401,Д01630402,Д01630403", ЛистД, ТаблицаОшибок, "ЛистД", Истина);
			
				СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвУправЗал/СвУпрЗал");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистД);
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда
					Если Не ЗначениеЗаполнено(ЛистД.Д01630500) Тогда
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не указан код причины", "ЛистД", "Д01630500", ЛистД.УИД));
					КонецЕсли;
					
					СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистД);
					Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
					СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистД);
					Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
					СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистД);
					Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
					
					Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистД", "Д01630600", ЛистД.УИД));
					КонецЕсли;
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д01630600,Д01630700", ЛистД, ТаблицаОшибок, "ЛистД");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д01631300,Д01631400", ЛистД, ТаблицаОшибок, "ЛистД");
					РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Д01630800,Д01630900,Д01631000", ЛистД, ТаблицаОшибок, "ЛистД");
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01631500", Ложь, Истина);
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистД, ТаблицаОшибок, "ЛистД", "Д01631800", Ложь);
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Д01631100,Д01631200", ЛистД, ТаблицаОшибок, "ЛистД");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Д01632100,Д01632200", ЛистД, ТаблицаОшибок, "ЛистД");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_СвДовУправ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/СвДовУправ");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУправ, ЛистД);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУправ) Тогда
			Если Не ЗначениеЗаполнено(ЛистД.Д07000000) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистД", "Д07000000", ЛистД.УИД));
			КонецЕсли;
			
			СтруктураДанных_СвДовУпр = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/УчУчрРФСубМО/СвДовУправ/СвДовУпр");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвДовУпр, ЛистД);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвДовУпр) Тогда
				Если Не ЗначениеЗаполнено(ЛистД.Д07010000) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистД", "Д07010000", ЛистД.УИД));
				КонецЕсли;
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д7010101,Д7010102", ЛистД, ТаблицаОшибок, "ЛистД");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Д7010201,Д7010202", ЛистД, ТаблицаОшибок, "ЛистД");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЕ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистЕ Цикл 
		ЛистЕ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистЕ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистЕ.Е01010100) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистЕ", "Е01010100", ЛистЕ.УИД));
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01020100,Е01020200,Е01020300") Тогда 
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01020100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование ПИФа", "ЛистЕ", "Е01020100", ЛистЕ.УИД));
			КонецЕсли;
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01020200,Е01020300", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01030100,Е01030200,Е01030300") Тогда 
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01030200,Е01030300", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
		КонецЕсли;
		РегистрационныеФормы.Проверка_ДоляУстКап("Е01040100,Е01040200,Е01040301,Е01040302", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01050100,Е01050200") Тогда 
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01050100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан вид действия", "ЛистЕ", "Е01050100", ЛистЕ.УИД));
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол");
		СтруктураДанных_ЗалЧастДол.Вставить("Е01622801");
		СтруктураДанных_ЗалЧастДол.Вставить("Е01622802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистЕ);
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда 
			Продолжить;
		КонецЕсли;
		РегистрационныеФормы.Проверка_ДоговорНотариус(
			"Е01060100,Е01610100,Е01610200,Е01610301,Е01610302,Е01610303", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
		
		СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвЗалДер");
		СтруктураДанных_СвЗалДер.Вставить("Е01622801");
		СтруктураДанных_СвЗалДер.Вставить("Е01622802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистЕ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда 
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01620100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак причины", "ЛистЕ", "Е01620100", ЛистЕ.УИД));
			КонецЕсли;
			
			СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистЕ);
			Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
			СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистЕ);
			Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
			СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
			СтруктураДанных_ЗалДерФЛ.Вставить("Е01622801");
			СтруктураДанных_ЗалДерФЛ.Вставить("Е01622802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистЕ);
			Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
			
			Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистЕ", "Е01620200", ЛистЕ.УИД));
			КонецЕсли;
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01620200,Е01620300", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01620900,Е01621000", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Е01620400,Е01620500,Е01620600", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01621100", Ложь, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01621400", Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01620800", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01621800", Ложь, Ложь);
			РегистрационныеФормы.Проверка_СвРожд("Е01622000,Е01622100", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			РегистрационныеФормы.Проверка_СвГражд("Е01622200,Е01622300", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			РегистрационныеФормы.Проверка_УдЛичнФЛ("Е01622400,Е01622500,Е01622600,Е01622700,Е01622801,Е01622802", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
		КонецЕсли;
		
		СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвУправЗал");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистЕ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда 
			РегистрационныеФормы.Проверка_ДоговорНотариус(
				"Е01630100,Е01630200,Е01630300,Е01630401,Е01630402,Е01630403", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
			СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвУправЗал/СвУпрЗал");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистЕ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда
				Если Не ЗначениеЗаполнено(ЛистЕ.Е01630500) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистЕ", "Е01630500", ЛистЕ.УИД));
				КонецЕсли;
				
				СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистЕ);
				Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
				СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистЕ);
				Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
				СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/СвПИФ/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистЕ);
				Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
				Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистЕ", "Е01630600", ЛистЕ.УИД));
				КонецЕсли;
				
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01630600,Е01630700", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Е01631300,Е01631400", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Е01630800,Е01630900,Е01631000", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01631500", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01631800", Ложь);
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Е01631100,Е01631200", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Е01632100,Е01632200", ЛистЕ, ТаблицаОшибок, "ЛистЕ");
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЖ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистЖ Цикл 
		ЛистЖ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистЖ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистЖ.Ж01010100) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистЖ", "Ж01010100", ЛистЖ.УИД));
		КонецЕсли;
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЖ, "Ж01020100,Ж01020200") Тогда 
			Если Не ЗначениеЗаполнено(ЛистЖ.Ж01020100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан регистрационный номер", "ЛистЖ", "Ж01020100", ЛистЖ.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистЖ.Ж01020200) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата", "ЛистЖ", "Ж01020200", ЛистЖ.УИД));
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_СвИнПрДогВн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/СвИнПрДогВн");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвИнПрДогВн, ЛистЖ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвИнПрДогВн) Тогда 
			СтруктураДанных_СвУпТовЮЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/СвИнПрДогВн/СвУпТовЮЛ");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпТовЮЛ, ЛистЖ);
			Заполнено_СвУпТовЮЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпТовЮЛ);
			
			СтруктураДанных_СвУпТовЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/СвИнПрДогВн/СвУпТовЮЛИн");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпТовЮЛИн, ЛистЖ);
			Заполнено_СвУпТовЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпТовЮЛИн);
			
			Если ?(Заполнено_СвУпТовЮЛ, 1, 0) + ?(Заполнено_СвУпТовЮЛИн, 1, 0) <> 1 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистЖ", "Ж01030500", ЛистЖ.УИД));
			КонецЕсли;
			РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Ж01030500,Ж01030600", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЖ, "Ж01030700,Ж01030800") Тогда 
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01030700", Истина, Истина);
				Если СтрДлина(ЛистЖ.Ж01030800) <> 11 Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан / неправильно указан номер записи об аккредитации", "ЛистЖ", "Ж01030800", ЛистЖ.УИД));
				КонецЕсли;
			КонецЕсли;
			
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЖ, "Ж01030100,Ж01030200,Ж01030300,Ж01030401,Ж01030402,Ж01030403") Тогда 
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01030100) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указано наименование договора", "ЛистЖ", "Ж01030100", ЛистЖ.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01030200) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан номер договора", "ЛистЖ", "Ж01030200", ЛистЖ.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01030300) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана дата договора", "ЛистЖ", "Ж01030300", ЛистЖ.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01030401) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указана фамилия нотариуса", "ЛистЖ", "Ж01030401", ЛистЖ.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01030402) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указано имя нотариуса", "ЛистЖ", "Ж01030402", ЛистЖ.УИД));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		РегистрационныеФормы.Проверка_ДоляУстКап("Ж01040100,Ж01040200,Ж01040301,Ж01040302", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЖ, "Ж01050100,Ж01050200") Тогда 
			Если Не ЗначениеЗаполнено(ЛистЖ.Ж01050100) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан вид действия", "ЛистЖ", "Ж01050100", ЛистЖ.УИД));
			КонецЕсли;
		КонецЕсли;
		
		СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол");
		СтруктураДанных_ЗалЧастДол.Вставить("Ж01622801");
		СтруктураДанных_ЗалЧастДол.Вставить("Ж01622802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистЖ);
		Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда
			РегистрационныеФормы.Проверка_ДоговорНотариус(
				"Ж01060100,Ж01610100,Ж01610200,Ж01610301,Ж01610302,Ж01610303", ЛистЖ, ТаблицаОшибок, "ЛистЖ", Истина);
			
			СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвЗалДер");
			СтруктураДанных_СвЗалДер.Вставить("Ж01622801");
			СтруктураДанных_СвЗалДер.Вставить("Ж01622802");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистЖ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда
				Если Не ЗначениеЗаполнено(ЛистЖ.Ж01620100) Тогда
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не указан признак причины", "ЛистЖ", "Ж01620100", ЛистЖ.УИД));
				КонецЕсли;
				
				СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистЖ);
				Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
				СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистЖ);
				Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
				СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
				СтруктураДанных_ЗалДерФЛ.Вставить("Ж01622801");
				СтруктураДанных_ЗалДерФЛ.Вставить("Ж01622802");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистЖ);
				Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
				
				Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистЖ", "Ж01620200", ЛистЖ.УИД));
				КонецЕсли;
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Ж01620200,Ж01620300", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Ж01620900,Ж01621000", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Ж01620400,Ж01620500,Ж01620600", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01621100", Ложь, Истина);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01621400", Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01620800", Ложь, Ложь);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01621800", Ложь, Ложь);
				РегистрационныеФормы.Проверка_СвРожд("Ж01622000,Ж01622100", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				РегистрационныеФормы.Проверка_СвГражд("Ж01622200,Ж01622300", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				РегистрационныеФормы.Проверка_УдЛичнФЛ("Ж01622400,Ж01622500,Ж01622600,Ж01622700,Ж01622801,Ж01622802", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
			КонецЕсли;
			
			СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
				СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвУправЗал");
			ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистЖ);
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда 
				РегистрационныеФормы.Проверка_ДоговорНотариус(
					"Ж01630100,Ж01630200,Ж01630300,Ж01630401,Ж01630402,Ж01630403", ЛистЖ, ТаблицаОшибок, "ЛистЖ", Истина);
				
				СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
					СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвУправЗал/СвУпрЗал");
				ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистЖ);
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда
					Если Не ЗначениеЗаполнено(ЛистЖ.Ж01630500) Тогда
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не указан признак причины", "ЛистЖ", "Ж01630500", ЛистЖ.УИД));
					КонецЕсли;
					
					СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистЖ);
					Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
					СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистЖ);
					Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
					СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
						СхемаВыгрузки, "Документ/СвЮЛ/ДогИнвТов/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
					ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистЖ);
					Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
					Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистЖ", "Ж01630600", ЛистЖ.УИД));
					КонецЕсли;
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Ж01630600,Ж01630700", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Ж01631300,Ж01631400", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
					РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Ж01630800,Ж01630900,Ж01631000", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01631500", Ложь, Истина);
					УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЖ, ТаблицаОшибок, "ЛистЖ", "Ж01631500", Ложь);
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Ж01631100,Ж01631200", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
					РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("Ж01632100,Ж01632200", ЛистЖ, ТаблицаОшибок, "ЛистЖ");
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЗ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	ЛистЗ = Данные.ДанныеУведомления.ЛистЗ;
	Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистЗ) Тогда 
		Возврат;
	КонецЕсли;
	
	РегистрационныеФормы.Проверка_ДоляУстКап("З01010100,З01010200,З01010301,З01010302", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	
	СтруктураДанных_ЗалЧастДол = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол");
	СтруктураДанных_ЗалЧастДол.Вставить("З01222801");
	СтруктураДанных_ЗалЧастДол.Вставить("З01222802");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалЧастДол, ЛистЗ);
	Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалЧастДол) Тогда 
		Возврат;
	КонецЕсли;
	
	РегистрационныеФормы.Проверка_ДоговорНотариус(
		"З01020100,З01210100,З01210200,З01210301,З01210302", ЛистЗ, ТаблицаОшибок, "ЛистЗ", Истина);
	
	СтруктураДанных_СвЗалДер = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвЗалДер");
	СтруктураДанных_СвЗалДер.Вставить("З01222801");
	СтруктураДанных_СвЗалДер.Вставить("З01222802");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗалДер, ЛистЗ);
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗалДер) Тогда 
		Если Не ЗначениеЗаполнено(ЛистЗ.З01220100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистЗ", "З01220100"));
		КонецЕсли;
		
		СтруктураДанных_ЗалДерЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
			СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвЗалДер/ЗалДерЮЛРос");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛРос, ЛистЗ);
		Заполнено_ЗалДерЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛРос);
		СтруктураДанных_ЗалДерЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
			СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвЗалДер/ЗалДерЮЛИн");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерЮЛИн, ЛистЗ);
		Заполнено_ЗалДерЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерЮЛИн);
		СтруктураДанных_ЗалДерФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
			СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвЗалДер/ЗалДерФЛ");
		СтруктураДанных_ЗалДерФЛ.Вставить("З01222801");
		СтруктураДанных_ЗалДерФЛ.Вставить("З01222802");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_ЗалДерФЛ, ЛистЗ);
		Заполнено_ЗалДерФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_ЗалДерФЛ);
		
		Если ?(Заполнено_ЗалДерЮЛРос, 1, 0) + ?(Заполнено_ЗалДерЮЛИн, 1, 0) + ?(Заполнено_ЗалДерФЛ, 1, 0) <> 1 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистЗ", "З01220200"));
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("З01220200,З01220300", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("З01220900,З01221000", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
		РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("З01220400,З01220500,З01220600", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01221100", Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01221400", Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01220800", Ложь, Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01221800", Ложь, Ложь);
		РегистрационныеФормы.Проверка_СвРожд("З01222000,З01222100", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
		РегистрационныеФормы.Проверка_СвГражд("З01222200,З01222300", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
		РегистрационныеФормы.Проверка_УдЛичнФЛ(
			"З01222400,З01222500,З01222600,З01222700,З01222801,З01222802", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	КонецЕсли;
	
	СтруктураДанных_СвУправЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвУправЗал");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУправЗал, ЛистЗ);
	Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУправЗал) Тогда 
		Возврат;
	КонецЕсли;
	
	РегистрационныеФормы.Проверка_ДоговорНотариус(
		"З01230100,З01230200,З01230300,З01230401,З01230402", ЛистЗ, ТаблицаОшибок, "ЛистЗ", Истина);
	
	СтруктураДанных_СвУпрЗал = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвУправЗал/СвУпрЗал");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_СвУпрЗал, ЛистЗ);
	Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвУпрЗал) Тогда 
		Возврат;
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(ЛистЗ.З01230500) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак причины", "ЛистЗ", "З01230500"));
	КонецЕсли;
	
	СтруктураДанных_УпрЗалЮЛРос = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛРос");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛРос, ЛистЗ);
	Заполнено_УпрЗалЮЛРос = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛРос);
	СтруктураДанных_УпрЗалЮЛИн = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалЮЛИн");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалЮЛИн, ЛистЗ);
	Заполнено_УпрЗалЮЛИн = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалЮЛИн);
	СтруктураДанных_УпрЗалФЛ = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(
		СхемаВыгрузки, "Документ/СвЮЛ/СвДоляУстКап/ЗалЧастДол/СвУправЗал/СвУпрЗал/УпрЗалФЛ");
	ЗаполнитьЗначенияСвойств(СтруктураДанных_УпрЗалФЛ, ЛистЗ);
	Заполнено_УпрЗалФЛ = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_УпрЗалФЛ);
	
	Если ?(Заполнено_УпрЗалЮЛРос, 1, 0) + ?(Заполнено_УпрЗалЮЛИн, 1, 0) + ?(Заполнено_УпрЗалФЛ, 1, 0) <> 1 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Заполняются либо сведения о российском либо об иностранном юрлице", "ЛистЗ", "З01230600"));
	КонецЕсли;
	
	РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("З01230600,З01230700", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("З01231300,З01231400", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("З01230800,З01230900,З01231000", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01231500", Ложь, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЗ, ТаблицаОшибок, "ЛистЗ", "З01231800", Ложь);
	РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("З01231100,З01231200", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
	РегистрационныеФормы.Проверка_ИНН_ОГРН_ФЛ("З01232100,З01232200", ЛистЗ, ТаблицаОшибок, "ЛистЗ");
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистИ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистИ Цикл 
		ЛистИ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистИ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистИ.И01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистИ", "И01010100", ЛистИ.УИД));
		КонецЕсли;
		
		СвЮЛ1Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистИ, "И01020100,И01020200");
		СвЮЛ2Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистИ, "И01030100,И01030200");
		СвЮЛ3Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистИ, "И01030300,И01030400");
		СведФЛЗаполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистИ, "И01020400,И01020301,И01020302,И01020303,И01030600,И01030700," 
			+ "И01031700,И01031800,И01030501,И01030502,И01030503,И01030800,И01030900,И01031000,И01031100,И01031200,И01031300,И01031400,И01031500,"
			+ "И01031601,И01031602");
		
		Если ?(СвЮЛ1Заполнен, 1, 0) + ?(СвЮЛ2Заполнен, 1, 0) + ?(СвЮЛ3Заполнен, 1, 0) + ?(СведФЛЗаполнен, 1, 0) <> 1 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Заполняются либо сведения о юридическом лице, либо о физлице", "ЛистИ", "И01010100", ЛистИ.УИД));
		КонецЕсли;
		Если СвЮЛ1Заполнен Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01020100", Ложь, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01020200", Истина, Истина);
		КонецЕсли;
		Если СвЮЛ2Заполнен Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01030100", Истина, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01030200", Истина, Истина);
		КонецЕсли;
		Если СвЮЛ3Заполнен Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01030300", Истина, Истина);
			Если СтрДлина(ЛистИ.И01030400) <> 11 Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан / неправильно указан номер записи об аккредитации", "ЛистИ", "И01030400", ЛистИ.УИД));
			КонецЕсли;
		КонецЕсли;
		Если СведФЛЗаполнен Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01020400", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01030600", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01031800", Ложь, Ложь);
			РегистрационныеФормы.Проверка_СвРожд("И01030800,И01030900", ЛистИ, ТаблицаОшибок, "ЛистИ");
			РегистрационныеФормы.Проверка_СвГражд("И01031000,И01031100", ЛистИ, ТаблицаОшибок, "ЛистИ");
			РегистрационныеФормы.Проверка_УдЛичнФЛ("И01031200,И01031300,И01031400,И01031500,И01031601,И01031602", ЛистИ, ТаблицаОшибок, "ЛистИ");
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистК(Данные, ТаблицаОшибок, СхемаВыгрузки)
	ЛистК = Данные.ДанныеУведомления.ЛистК;
	
	Если ЗначениеЗаполнено(ЛистК.К01010100)
		И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(ЛистК.К01010100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Некорректно указан код ОКВЭД", "ЛистК", "К01010100"));
	КонецЕсли;
	Если ЗначениеЗаполнено(ЛистК.К01020100)
		И Не РегистрационныеФормы.ПроверкаОКВЭДНаКорректностьСтарый(ЛистК.К01020100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Некорректно указан код ОКВЭД", "ЛистК", "К01020100"));
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьК010102 Цикл 
		Если ЗначениеЗаполнено(Стр.К01010200) 
			И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(Стр.К01010200) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Некорректно указан код ОКВЭД",
				"ЛистК", "К01010200_" + (Данные.ДанныеДопСтрокБД.МногострочнаяЧастьК010102.Индекс(Стр) + 1)));
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьК010202 Цикл 
		Если ЗначениеЗаполнено(Стр.К01020200) 
			И Не РегистрационныеФормы.ПроверкаОКВЭДНаКорректностьСтарый(Стр.К01020200) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Некорректно указан код ОКВЭД",
				"ЛистК", "К01020200_" + (Данные.ДанныеДопСтрокБД.МногострочнаяЧастьК010202.Индекс(Стр) + 1)));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЛ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистЛ Цикл 
		ЛистЛ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистЛ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистЛ.Л01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак филиала", "ЛистЛ", "Л01010100", ЛистЛ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистЛ.Л01020100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак причины", "ЛистЛ", "Л01020100", ЛистЛ.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистЛ.Л01030100) Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(ЛистЛ, ТаблицаОшибок, "ЛистЛ", "Л01030100", Истина);
			Если ЗначениеЗаполнено(ЛистЛ.Л01030200) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При заполненном КПП наименование не указывается", "ЛистЛ", "Л01030300", ЛистЛ.УИД));
			КонецЕсли;
			Если ЗначениеЗаполнено(ЛистЛ.Л01030300) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При заполненном КПП код по ОКСМ не указывается", "ЛистЛ", "Л01030300", ЛистЛ.УИД));
			КонецЕсли;
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЛ, ТаблицаОшибок, "ЛистЛ", "Л01030300", Истина);
		КонецЕсли;
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЛ, "Л01040200,Л01040301,Л01040302,Л01040401,Л01040402,Л01040501,"
			+ "Л01040502,Л01040601,Л01040602,Л01040701,Л01040702,Л01040901,Л01040902,Л01041001,Л01041002,"
			+ "Л01040801_1,Л01040801_2,Л01040801_3,Л01040802_1,Л01040802_2,Л01040802_3") Тогда 
			
			РегистрационныеФормы.Проверка_Адрес("Л01040200,Л01040301,Л01040302", ЛистЛ, ТаблицаОшибок, "ЛистЛ", Истина);
			Если ЗначениеЗаполнено(ЛистЛ.Л01041100) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При заполненном адресе код по ОКСМ не указывается", "ЛистЛ", "Л01041100", ЛистЛ.УИД));
			КонецЕсли;
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистЛ, ТаблицаОшибок, "ЛистЛ", "Л01041100", Ложь);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистМ(Данные, ТаблицаОшибок, СхемаВыгрузки)
	ВсегоЗаполнено = 0;
	Инд = 0;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьМ010101 Цикл 
		Инд = Инд + 1;
		ВсегоЗаполнено = ВсегоЗаполнено + ?(ЗначениеЗаполнено(Стр.М01010100), 1, 0);
		Если ВсегоЗаполнено > 3 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Указывается не более трех причин ограничения доступа к сведениям", "ЛистМ", "М01010100_" + Инд));
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистН(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистН Цикл 
		ЛистН = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистН) Тогда 
			Продолжить;
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ДоговорНотариус("Н01010100,Н02010100,Н02010200,Н02010300,Н02010400", ЛистН, ТаблицаОшибок, "ЛистН", Истина);
		
		СтруктураДанных_СвЗаймДав = РегистрационныеФормы.ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, "Документ/СвЮЛ/СвКонвЗайм/СвЗаймДав");
		ЗаполнитьЗначенияСвойств(СтруктураДанных_СвЗаймДав, ЛистН);
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанных_СвЗаймДав) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистН.Н03010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак сведений", "ЛистН", "Н03010100", ЛистН.УИД));
		КонецЕсли;
		
		ЗаймДавЮЛРос_Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н03020100,Н03020200,Н3210101,Н3210102");
		ЗаймДавЮЛИн_Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н03030100,Н03030200,Н03030300,Н3220101,"
			+ "Н3220102,Н3220103,Н3220104,Н3220105,Н3220106");
		ЗаймДавФЛ_Заполнен = УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н03040400,Н03040100,Н03040200,Н03040300,Н3230104,"
			+ "Н3230105,Н3230101,Н3230102,Н3230103,Н3230201,Н3230202,Н3230203,Н3230204,Н3230301,Н3230302,Н3230303,Н3230304,Н3230305,Н3230306");
			
		Если ?(ЗаймДавЮЛРос_Заполнен, 1, 0) + ?(ЗаймДавЮЛИн_Заполнен, 1, 0) + ?(ЗаймДавФЛ_Заполнен, 1, 0) <> 1 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"На листе Н заполняются либо сведения о российской организации либо об иностранной либо о физлице", "ЛистН", "Н03020100", ЛистН.УИД));
		КонецЕсли;
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Н03020100,Н03020200", ЛистН, ТаблицаОшибок, "ЛистН");
		РегистрационныеФормы.Проверка_ИНН_ОГРН_ЮЛ("Н3210101,Н3210102", ЛистН, ТаблицаОшибок, "ЛистН");
		РегистрационныеФормы.Проверка_ИнОргБезИННсОКСМ("Н03030100,Н03030200,Н03030300", ЛистН, ТаблицаОшибок,  "ЛистН");
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н3220101,Н3220102,Н3220103,Н3220104,Н3220105,Н3220106") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистН, ТаблицаОшибок, "ЛистН", "Н3220101", Ложь, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистН, ТаблицаОшибок, "ЛистН", "Н3220104", Ложь);
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н03040400,Н03040100,Н03040200,Н03040300") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистН, ТаблицаОшибок, "ЛистН", "Н03040400", Ложь, Истина);
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистН, "Н3230104,Н3230105,Н3230101,Н3230102,Н3230103,Н3230201,Н3230202,"
			+ "Н3230203,Н3230204,Н3230301,Н3230302,Н3230303,Н3230304,Н3230305,Н3230306") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистН, ТаблицаОшибок, "ЛистН", "Н3230104", Ложь, Ложь);
			РегистрационныеФормы.Проверка_СвРожд("Н3230201,Н3230202", ЛистН, ТаблицаОшибок, "ЛистН");
			РегистрационныеФормы.Проверка_СвГражд("Н3230203,Н3230204", ЛистН, ТаблицаОшибок, "ЛистН");
			РегистрационныеФормы.Проверка_УдЛичнФЛ("Н3230301,Н3230302,Н3230303,Н3230304,Н3230305,Н3230306", ЛистН, ТаблицаОшибок, "ЛистН");
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ДоляУстКап("Н4010101,Н4010102,Н4010103,Н4010104", ЛистН, ТаблицаОшибок, "ЛистН");
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистО(Данные, ТаблицаОшибок, СхемаВыгрузки)
	ВсегоЗаполнено = 0;
	Инд = 0;
	Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МногострочнаяЧастьО010101 Цикл 
		Инд = Инд + 1;
		ВсегоЗаполнено = ВсегоЗаполнено + ?(ЗначениеЗаполнено(Стр.О01010100), 1, 0);
		Если ВсегоЗаполнено > 3 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Указывается не более трех изменений, вносимых в учредительный документ", "ЛистО", "О01010100_" + Инд));
			Возврат;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистП(Данные, ТаблицаОшибок, СхемаВыгрузки)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистП Цикл 
		ЛистП = Элт.Значение;
		
		Если Не ЗначениеЗаполнено(ЛистП.П01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан вид заявителя", "ЛистП", "П01010100", ЛистП.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистП, ТаблицаОшибок, "ЛистП", "П01020200", Ложь, Ложь);
		РегистрационныеФормы.Проверка_СвРожд("П01020300,П01020400", ЛистП, ТаблицаОшибок, "ЛистП");
		РегистрационныеФормы.Проверка_УдЛичнФЛ("П01020500,П01020600,П01020700,П01020800,П01020901,П01020902", ЛистП, ТаблицаОшибок, "ЛистП");
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ПодписантПриСменеРуководителя(Данные, ТаблицаОшибок, СхемаВыгрузки)
	НеобходимНотариус = Ложь;
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистИ Цикл 
		НеобходимНотариус = НеобходимНотариус Или (Элт.Значение.И01010100 = "1") Или (Элт.Значение.И01010100 = "2");
	КонецЦикла;
	
	Если НеобходимНотариус Тогда 
		Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистП Цикл
			ЛистП = Элт.Значение;
			Если ЛистП.П01010100 <> "3" Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Изменение руководителя необходимо заверить через нотариуса", "ЛистП", "П01010100", ЛистП.УИД));
				Возврат;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу_Форма2021_4(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2021_4",
		"СхемаВыгрузкиФорма2021_4", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Данные.Объект.ИмяОтчета, "СхемаВыгрузкиФорма2021_4");
	
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_Лист1(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистА(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистБ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистВ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистГ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистД(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЕ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЖ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЗ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистИ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистК(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистЛ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистМ(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистН(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистО(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ЛистП(Данные, ТаблицаОшибок, СхемаВыгрузки);
	ПроверитьДокументСВыводомВТаблицу_Форма2021_4_ПодписантПриСменеРуководителя(Данные, ТаблицаОшибок, СхемаВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции
#КонецОбласти

#Область ОбработкаАдресовФИАС

Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2021_4(СоответствиеПоказателей, НазначениеАдреса)
	
	Если НазначениеАдреса = "МестоНахождения" Тогда
		СоответствиеПоказателей.Вставить("БИ1010100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("БД1010100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("Б01010100", "КодРегиона");
		СоответствиеПоказателей.Вставить("Б01010201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("Б01010202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("Б01010301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("Б01010302", "Поселение");
		СоответствиеПоказателей.Вставить("Б01010401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("Б01010402", "НаселенныйПункт");
		
	ИначеЕсли НазначениеАдреса = "АдресБ0102" Тогда
		СоответствиеПоказателей.Вставить("БИ1020100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("БД1020100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("Б01020100", "КодРегиона");
		СоответствиеПоказателей.Вставить("Б01020201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("Б01020202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("Б01020301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("Б01020302", "Поселение");
		СоответствиеПоказателей.Вставить("Б01020401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("Б01020402", "НаселенныйПункт");
		СоответствиеПоказателей.Вставить("Б01020501", "ТерриторияТип");
		СоответствиеПоказателей.Вставить("Б01020502", "Территория");
		СоответствиеПоказателей.Вставить("Б01020601", "УлицаТип");
		СоответствиеПоказателей.Вставить("Б01020602", "Улица");
		СоответствиеПоказателей.Вставить("Б01020801", "ПомещениеВЗданииТип");
		СоответствиеПоказателей.Вставить("Б01020802", "ПомещениеВЗданииНомер");
		СоответствиеПоказателей.Вставить("Б01020901", "ПомещениеВКвартиреТип");
		СоответствиеПоказателей.Вставить("Б01020902", "ПомещениеВКвартиреНомер");
		
		Здания = Новый Массив;
		Здания.Добавить("Здания");
		Здания.Добавить(Новый Структура("Б01020701, Б01020702", "ЗданиеТип", "ЗданиеНомер"));
		СоответствиеПоказателей.Вставить("Б010207", Здания);
		
	ИначеЕсли НазначениеАдреса = "АдресЛ0104" Тогда
		СоответствиеПоказателей.Вставить("ЛИ1020200", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("ЛД1020200", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("Л01040200", "КодРегиона");
		СоответствиеПоказателей.Вставить("Л01040301", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("Л01040302", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("Л01040401", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("Л01040402", "Поселение");
		СоответствиеПоказателей.Вставить("Л01040501", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("Л01040502", "НаселенныйПункт");
		СоответствиеПоказателей.Вставить("Л01040601", "ТерриторияТип");
		СоответствиеПоказателей.Вставить("Л01040602", "Территория");
		СоответствиеПоказателей.Вставить("Л01040701", "УлицаТип");
		СоответствиеПоказателей.Вставить("Л01040702", "Улица");
		СоответствиеПоказателей.Вставить("Л01040901", "ПомещениеВЗданииТип");
		СоответствиеПоказателей.Вставить("Л01040902", "ПомещениеВЗданииНомер");
		СоответствиеПоказателей.Вставить("Л01041001", "ПомещениеВКвартиреТип");
		СоответствиеПоказателей.Вставить("Л01041002", "ПомещениеВКвартиреНомер");
		
		Здания = Новый Массив;
		Здания.Добавить("Здания");
		Здания.Добавить(Новый Структура("Л01040801, Л01040802", "ЗданиеТип", "ЗданиеНомер"));
		СоответствиеПоказателей.Вставить("Л010408", Здания);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2021_4():
			|вызов процедуры с непредусмотренным значением параметра';
			|en = 'Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2021_4():
			|вызов процедуры с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Процедура АктуализироватьПараметрыДереваСтраниц(ИмяФормы, ИсходноеДерево) Экспорт
	
	НовоеДеревоСтраниц = СформироватьДеревоСтраниц(ИмяФормы);
	
	ИсходноеДерево.Колонки.Добавить("ПреобразоватьВМассив", Новый ОписаниеТипов("Булево"));
	ОтборВсехСтрок = Новый Структура("ПреобразоватьВМассив", Ложь);
	СтрокиДереваЗначений = ИсходноеДерево.Строки.НайтиСтроки(ОтборВсехСтрок, Истина);
	ИсходноеДерево.Колонки.Удалить("ПреобразоватьВМассив");
	
	Для Каждого СтрокаДерева Из СтрокиДереваЗначений Цикл
		ИДНаименования = СтрокаДерева.ИДНаименования;
		Если ЗначениеЗаполнено(ИДНаименования) Тогда
			СтрокаОбразец = НовоеДеревоСтраниц.Строки.Найти(ИДНаименования, "ИДНаименования", Истина);
			
			Если СтрокаОбразец <> Неопределено Тогда
				СтрокаДерева.МакетыПФ = СтрокаОбразец.МакетыПФ;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьЗаполненноеУведомление_Форма2021_4(Параметры, СуществующийДокументСсылка = Неопределено)
	
	ИмяОтчета = "РегламентированноеУведомлениеФормаР13014";
	ИмяФормы = "Форма2021_4";
	
	// Подготовка структуры контейнера для автозаполнения.
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", Параметры.ДополнительныеПараметры);
	ПараметрыОтчета.Вставить("ИмяФормы", ИмяФормы);
	
	Контейнер = Неопределено;
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	
	// Заполнение данными в потребителе.
	Контейнер = НовыйКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления,
		РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	// Заполнение данных в отчете.
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
	   И СуществующийДокументСсылка.Свойство("Ссылка")
	   И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
		
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
	        И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
		
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР13014;
		
	КонецЕсли;
	
	ДанныеДопСтрокБД = Новый Структура;
	ИдентификаторыОбычныхСтраниц = Новый Структура;
	
	ДанныеУведомления = ОбщегоНазначения.СкопироватьРекурсивно(РезультатКонтейнер1.ДанныеУведомления);
	
	Для Каждого Раздел Из ДанныеУведомления Цикл
		ИмяРаздела = Раздел.Ключ;
		ДанныеРаздела = Раздел.Значение;
		ДанныеВКонтейнере = Контейнер[ИмяРаздела];
		
		РазделВДереве = Дерево.Строки.Найти(ИмяРаздела, "ИДНаименования");
		ИдентификаторыОбычныхСтраниц.Вставить(РазделВДереве.ИДНаименования, РазделВДереве.УИД);
		
		Если РазделВДереве.Многострочность Тогда
			Для Каждого МСЧ Из РазделВДереве.МногострочныеЧасти Цикл
				ИмяМСЧ = МСЧ.Значение;
				ТаблицаМСЧ = ДанныеВКонтейнере[ИмяМСЧ];
				ТаблицаМСЧ.Колонки.Добавить("УИД");
				ТаблицаМСЧ.ЗаполнитьЗначения(РазделВДереве.УИД, "УИД");
				ДанныеДопСтрокБД.Вставить(ИмяМСЧ, ТаблицаМСЧ);
				ДанныеРаздела.Удалить(ИмяМСЧ);
			КонецЦикла;
		КонецЕсли;
		
		ЗаполнитьЗначенияСвойств(ДанныеРаздела, ДанныеВКонтейнере);
		
	КонецЦикла;
	
	ДанныеМногостраничныхРазделов = ОбщегоНазначения.СкопироватьРекурсивно(РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	
	Для Каждого Раздел Из ДанныеМногостраничныхРазделов Цикл
		ИмяРаздела = Раздел.Ключ;
		КореньРаздела = Дерево.Строки.Найти(ИмяРаздела, "ИДНаименования", Истина).Родитель;
		ДанныеРаздела = Раздел.Значение;
		ДанныеВКонтейнере = Контейнер[ИмяРаздела];
		
		// Страница с индексом 0 выступает в роли образца и требует удаления служебных структур.
		Если КореньРаздела.Строки[0].Многострочность Тогда
			Для Каждого МСЧ Из КореньРаздела.Строки[0].МногострочныеЧасти Цикл
				ИмяМСЧ = МСЧ.Значение;
				ДанныеРаздела[0].Значение.Удалить(ИмяМСЧ);
			КонецЦикла;
		КонецЕсли;
		
		Для Каждого СтраницаВКонтейнере Из ДанныеВКонтейнере Цикл
			ИндексСтраницы = ДанныеВКонтейнере.Индекс(СтраницаВКонтейнере);
			
			Если ИндексСтраницы + 1 > КореньРаздела.Строки.Количество() Тогда
				// Новая страница в дереве разделов отчета.
				НоваяСтраница = КореньРаздела.Строки.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтраница, КореньРаздела.Строки[0]);
				НоваяСтраница.УИД = Новый УникальныйИдентификатор;
				НоваяСтраница.Наименование = "Стр. " + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ИндексСтраницы + 1);
			КонецЕсли;
			
			Если ИндексСтраницы + 2 > ДанныеРаздела.Количество() Тогда
				// Новая страница в структуре многостраничных разделов.
				НоваяСтраницаДанных = ДанныеРаздела.Добавить();
				НоваяСтраницаДанных.Значение = ОбщегоНазначения.СкопироватьРекурсивно(ДанныеРаздела[0].Значение);
			КонецЕсли;
			
			СтраницаВДереве = КореньРаздела.Строки[ИндексСтраницы];
			СтраницаДанных = ДанныеРаздела[ИндексСтраницы + 1];
			ДанныеСтраницыВКонтейнере = СтраницаВКонтейнере.Значение;
			
			Если СтраницаВДереве.Многострочность Тогда
				Для Каждого МСЧ Из СтраницаВДереве.МногострочныеЧасти Цикл
					ИмяМСЧ = МСЧ.Значение;
					ТаблицаМСЧ = СтраницаВКонтейнере.Значение[ИмяМСЧ];
					ТаблицаМСЧ.Колонки.Добавить("УИД");
					ТаблицаМСЧ.ЗаполнитьЗначения(СтраницаВДереве.УИД, "УИД");
					ДанныеДопСтрокБД.Вставить(ИмяМСЧ, ТаблицаМСЧ);
				КонецЦикла;
			КонецЕсли;
			
			ЗаполнитьЗначенияСвойств(СтраницаДанных.Значение, СтраницаВКонтейнере.Значение);
			СтраницаДанных.Значение.Вставить("УИД", СтраницаВДереве.УИД);
			
		КонецЦикла;
		
		ДанныеРаздела.Удалить(0); // Образец больше не требуется.
		
	КонецЦикла;
	
	// Структура и содержание данных повторяет аналогичную при записи уведомления в интерактивном режиме.
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("ДеревоСтраниц", Дерево);
	ДанныеОтчета.Вставить("ДанныеУведомления", ДанныеУведомления);
	ДанныеОтчета.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	ДанныеОтчета.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	ДанныеОтчета.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
	ДанныеОтчета.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
	
	ДатаСоставления = Неопределено;
	Если Параметры.ДополнительныеПараметры.Свойство("ДатаСоставления", ДатаСоставления)
	   И ЗначениеЗаполнено(ДатаСоставления) Тогда
		НовыйДок.Дата = ДатаСоставления;
	Иначе
		НовыйДок.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	НовыйДок.ДатаПодписи = НовыйДок.Дата;
	НовыйДок.ИмяФормы = ИмяФормы;
	НовыйДок.ИмяОтчета = ИмяОтчета;
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеОтчета);
	
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
	
КонецФункции

Процедура СформироватьКонтейнерДанныхУведомления(КонтейнерВходящий, КонтейнерРезультат, ЕстьМногостраничность = Ложь)
	
	КонтейнерРезультат.Вставить("ДанныеУведомления", Новый Структура);
	Если ЕстьМногостраничность Тогда
		КонтейнерРезультат.Вставить("ДанныеМногостраничныхРазделов", Новый Структура);
	КонецЕсли;
	Разложение = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(КонтейнерВходящий.ИмяФормы, ".");
	
	Для Каждого Стр Из КонтейнерВходящий.ДеревоСтраниц.Строки Цикл
		Если Стр.Многостраничность Тогда
			Если Стр.Многострочность Тогда
				СтраницаРаздела = Стр.Строки[0];
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(СтраницаРаздела.ИмяМакета);
				
				СтруктураМногостраничнойСтраницы = Новый Структура("УИД", СтраницаРаздела.УИД);
				
				ПоказателиМСЧ = Новый Соответствие;
				Для Каждого МСЧ Из СтраницаРаздела.МногострочныеЧасти Цикл
					ПолноеИмяМСЧ = МСЧ.Значение;
					ТаблицаМСЧ = Новый ТаблицаЗначений;
					
					Для Каждого Обл Из МакетДокумента.ПолучитьОбласть(МСЧ.Значение).Области Цикл
						Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
						   И Обл.СодержитЗначение Тогда
							ПоказателиМСЧ.Вставить(Обл.Имя, Истина);
							ТаблицаМСЧ.Колонки.Добавить(Обл.Имя, Обл.ТипЗначения);
						КонецЕсли;
					КонецЦикла;
					
					ТаблицаМСЧ.Добавить();
					СтруктураМногостраничнойСтраницы.Вставить(ПолноеИмяМСЧ, ТаблицаМСЧ);
					
				КонецЦикла;
				
				Для Каждого Обл Из МакетДокумента.Области Цикл
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					   И Обл.СодержитЗначение
					   И ПоказателиМСЧ[Обл.Имя] = Неопределено Тогда
						СтруктураМногостраничнойСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				Если СтраницаРаздела.Строки.Количество() > 0 Тогда
					СформироватьКонтейнерДанныхУведомленияРек(КонтейнерВходящий, КонтейнерРезультат, Разложение[1], СтраницаРаздела);
				КонецЕсли;
				
				СЗ = Новый СписокЗначений;
				СЗ.Добавить(СтруктураМногостраничнойСтраницы);
				КонтейнерРезультат.ДанныеМногостраничныхРазделов.Вставить(СтраницаРаздела.ИДНаименования, СЗ);
				
			Иначе
				СтраницаРаздела = Стр.Строки[0];
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(СтраницаРаздела.ИмяМакета);
				
				СтруктураМногостраничнойСтраницы = Новый Структура("УИД", СтраницаРаздела.УИД);
				
				Для Каждого Обл Из МакетДокумента.Области Цикл
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					   И Обл.СодержитЗначение Тогда
						СтруктураМногостраничнойСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				Если СтраницаРаздела.Строки.Количество() > 0 Тогда
					СформироватьКонтейнерДанныхУведомленияРек(КонтейнерВходящий, КонтейнерРезультат, Разложение[1], СтраницаРаздела);
				КонецЕсли;
				
				СЗ = Новый СписокЗначений;
				СЗ.Добавить(СтруктураМногостраничнойСтраницы);
				КонтейнерРезультат.ДанныеМногостраничныхРазделов.Вставить(СтраницаРаздела.ИДНаименования, СЗ);
				
			КонецЕсли;
			
		Иначе
			Если Стр.Многострочность Тогда
				СтруктураСтраницы = Новый Структура;
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета);
				
				ПоказателиМСЧ = Новый Соответствие;
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета);
				Для Каждого МСЧ Из Стр.МногострочныеЧасти Цикл
					ПолноеИмяМСЧ = МСЧ.Значение;
					ТаблицаМСЧ = Новый ТаблицаЗначений;
					
					Для Каждого Обл Из МакетДокумента.ПолучитьОбласть(МСЧ.Значение).Области Цикл
						Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
						   И Обл.СодержитЗначение Тогда
							ПоказателиМСЧ.Вставить(Обл.Имя, Истина);
							ТаблицаМСЧ.Колонки.Добавить(Обл.Имя, Обл.ТипЗначения);
						КонецЕсли;
					КонецЦикла;
					
					ТаблицаМСЧ.Добавить();
					СтруктураСтраницы.Вставить(ПолноеИмяМСЧ, ТаблицаМСЧ);
					
				КонецЦикла;
				
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					   И Обл.СодержитЗначение
					   И ПоказателиМСЧ[Обл.Имя] = Неопределено Тогда
						СтруктураСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				КонтейнерРезультат.ДанныеУведомления.Вставить(Стр.ИДНаименования, СтруктураСтраницы);
				
			Иначе
				СтруктураСтраницы = Новый Структура;
				МакетДокумента = Отчеты[Разложение[1]].ПолучитьМакет(Стр.ИмяМакета);
				Для Каждого Обл Из МакетДокумента.Области Цикл 
					Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
					   И Обл.СодержитЗначение Тогда
						СтруктураСтраницы.Вставить(Обл.Имя);
					КонецЕсли;
				КонецЦикла;
				
				КонтейнерРезультат.ДанныеУведомления.Вставить(Стр.ИДНаименования, СтруктураСтраницы);
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СформироватьКонтейнерДанныхУведомленияРек(КонтейнерВходящий, КонтейнерРезультат, ИмяОтчета, Строка)
	
	Для Каждого ПодчМнг Из Строка.Строки Цикл
		Если ПодчМнг.Строки.Количество() > 0 Тогда
			СформироватьКонтейнерДанныхУведомленияРек(КонтейнерВходящий, КонтейнерРезультат, ИмяОтчета, ПодчМнг);
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ПодчМнг.ИДНаименования) Тогда 
			СтруктураМногостраничнойСтраницыПодч = Новый Структура("УИД, УИДРодителя", ПодчМнг.УИД, ПолучитьУИДРодителя(ПодчМнг));
			МакетДокумента = Отчеты[ИмяОтчета].ПолучитьМакет(ПодчМнг.ИмяМакета);
			Для Каждого Обл Из МакетДокумента.Области Цикл 
				Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник 
					И Обл.СодержитЗначение Тогда 
					
					СтруктураМногостраничнойСтраницыПодч.Вставить(Обл.Имя);
				КонецЕсли;
			КонецЦикла;
			
			СЗ = Новый СписокЗначений;
			СЗ.Добавить(СтруктураМногостраничнойСтраницыПодч);
			КонтейнерРезультат.ДанныеМногостраничныхРазделов.Вставить(ПодчМнг.ИДНаименования, СЗ);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НовыйКонтейнерДляАвтозаполнения(ДанныеУведомления, ДанныеМногостраничныхРазделов)
	
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ДанныеМногостраничныхРазделов Цикл
		Для Каждого Стр Из КЗ.Значение Цикл
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные",
				КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
	
КонецФункции

Функция ПолучитьУИДРодителя(Строка) Экспорт
	
	Если ТипЗнч(Строка) = Тип("СтрокаДереваЗначений") Тогда
		Родитель = Строка.Родитель;
	Иначе 
		Родитель = Строка.ПолучитьРодителя();
	КонецЕсли;
	
	Если Родитель = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Родитель.ИДНаименования) Тогда 
		Возврат Родитель.УИД;
	КонецЕсли;
	
	Возврат ПолучитьУИДРодителя(Родитель);
	
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2021_4" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2021_4"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1111520_5.02000_02.tif");
		Возврат СтруктураВыгрузки;
	ИначеЕсли ДокОбъект.ИмяФормы = "Форма2020_4" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2020_4"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1111520_5.01000_01.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецЕсли
