#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьЖурналСправокДанными(УведомлениеОбъект, ДанныеУведомления, ДанныеСправок) Экспорт 
	ХранимаяСтруктураДанных = Новый Структура;
	УИДТитульная = Новый УникальныйИдентификатор;
	Титульная = Новый Структура;
	Титульная.Вставить("ДАТА_ПОДПИСИ", УведомлениеОбъект.Дата);
	Титульная.Вставить("ОтчГод", ДанныеУведомления.ОтчГод);
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(УведомлениеОбъект.Организация) Тогда
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			УведомлениеОбъект.Организация, УведомлениеОбъект.ДатаПодписи, СтрокаСведений);
		Титульная.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		Титульная.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
	Иначе
		СтрокаСведений = "ИННФЛ,ФИО";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			УведомлениеОбъект.Организация, УведомлениеОбъект.ДатаПодписи, СтрокаСведений);
		Титульная.Вставить("ИНН", СведенияОбОрганизации.ИННФЛ);
		Титульная.Вставить("НаимОрг", СведенияОбОрганизации.ФИО);
	КонецЕсли;
	
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") И ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления, "НаимОрг", "")) Тогда 
		Титульная.Вставить("НаимОрг", ДанныеУведомления.НаимОрг);
	КонецЕсли;
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(УведомлениеОбъект.РегистрацияВИФНС);
	Титульная.Вставить("КодНО", Реквизиты.Код);
	Титульная.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		Титульная.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "2");
		СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
			УведомлениеОбъект.Организация, Титульная["КодНО"], Титульная["КПП"]);
			
		Если ЗначениеЗаполнено(СведенияОПредставителе.НаименованиеОрганизацииПредставителя) Тогда 
			ПодписантСтр = СведенияОПредставителе.ФИОПредставителя;
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(СведенияОПредставителе.ФИОПредставителя);
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ФИО.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ФИО.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ФИО.Отчество);
		Иначе
			ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Реквизиты.Представитель, , УведомлениеОбъект.ДатаПодписи);
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
			ПодписантСтр = СокрЛП(УведомлениеОбъект.ПодписантФамилия + " " + УведомлениеОбъект.ПодписантИмя + " " + УведомлениеОбъект.ПодписантОтчество);
		КонецЕсли;
		
		Титульная.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПодписантСтр);
		Титульная.Вставить("НаимДок", Реквизиты.ДокументПредставителя);
	Иначе
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьДанныеРуководителя(УведомлениеОбъект);
		Титульная.Вставить("ПРИЗНАК_НП_ПОДВАЛ", "1");
		Титульная.Вставить("НаимДок", "");
		Титульная.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ",
			СокрЛП(УведомлениеОбъект.ПодписантФамилия + " " + УведомлениеОбъект.ПодписантИмя + " " + УведомлениеОбъект.ПодписантОтчество));
	КонецЕсли;
	
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = УИДТитульная;
	Стр001.ИДНаименования = "Титульная";
	
	СтрРег = КорневойУровень.Добавить();
	СтрРег.Наименование = "Сведения о" + символы.ПС + "налогоплательщиках";
	СтрРег.ИндексКартинки = 1;
	СтрРег.Многостраничность = Истина;
	СтрРег.Многострочность = Истина;
	
	ХранимаяСтруктураДанных.Вставить("ДеревоСтраниц", ДеревоСтраниц);
	ХранимаяСтруктураДанных.Вставить("ДанныеУведомления", Новый Структура("Титульная", Титульная));
	ХранимаяСтруктураДанных.Вставить("РазрешитьВыгружатьСОшибками", ДанныеУведомления["РазрешитьВыгружатьСОшибками"]);
	ХранимаяСтруктураДанных.Вставить("ИдентификаторыОбычныхСтраниц", Новый Структура("Титульная", УИДТитульная));
	ХранимаяСтруктураДанных.Вставить("ДанныеМногостраничныхРазделов", Новый Структура("СведОплФизУсл", Новый СписокЗначений));
	ХранимаяСтруктураДанных.Вставить("ДанныеДопСтрокБД", Новый Структура);
	ХранимаяСтруктураДанных.Вставить("ДокументОснование", УведомлениеОбъект.Основание);
	
	Для Каждого Справка Из ДанныеСправок Цикл 
		СтруктураСправки = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Справка);
		СтруктураСправки.НомерСвед = Формат(СтруктураСправки.НомерСвед, "ЧГ=");
		ХранимаяСтруктураДанных.ДанныеМногостраничныхРазделов.СведОплФизУсл.Добавить(СтруктураСправки);
		
		НовСтр = СтрРег.Строки.Добавить();
		НовСтр.Наименование = ?(ЗначениеЗаполнено(СтруктураСправки.Фамилия), 
			СтруктураСправки.Фамилия + " " + СтруктураСправки.Имя + " " + СтруктураСправки.Отчество, "<Налогоплательщик не указан>");
		НовСтр.ИндексКартинки = 1;
		НовСтр.ИмяМакета = "СведОплФизУсл_2023";
		НовСтр.Многостраничность = Истина;
		НовСтр.Многострочность = Ложь;
		НовСтр.УИД = СтруктураСправки.УИД;
		НовСтр.ИДНаименования = "СведОплФизУсл";
	КонецЦикла;
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ХранимаяСтруктураДанных);
КонецПроцедуры

Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1184046";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 18.10.2023 № ЕД-7-11/756@";
	
	Возврат Результат;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
	ВызватьИсключение НСтр("ru = 'Печатная форма не реализована';
							|en = 'Печатная форма не реализована'");
	Возврат Неопределено;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ДанныеСправки(Объект, ТекстВыгрузки) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда
		Возврат ДанныеСправки2023_1(Объект, ТекстВыгрузки);
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставлениеСправки(Объект, УникальныйИдентификатор) Экспорт
	Попытка
		Возврат УведомлениеОСпецрежимахНалогообложения.ЭлектронноеПредставлениеСправки(
			Объект, УникальныйИдентификатор, ЭлектронноеПредставлениеСправки_Форма2023_1(Объект.Ссылка, УникальныйИдентификатор))
	Исключение
		Возврат Неопределено;
	КонецПопытки;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу(Объект, УникальныйИдентификатор) Экспорт 
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SVOPLFITNES";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(СведенияОтправки)
	Префикс = "UT_SPROPLFITNES";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, ЭтоЮЛ);
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации / ФИО ИП", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если ЭтоЮЛ Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", ЭтоЮЛ Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2");
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина, , 2024);
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведОплФизУсл Цикл 
		СведОплФизУсл = Стр.Значение;
		
		УведомлениеОСпецрежимахНалогообложения.ПроверкаДанныхПолучателяСправки(СведОплФизУсл, "СведОплФизУсл", ТаблицаОшибок, СведОплФизУсл.ПрКлиент);
		Если Не ЗначениеЗаполнено(СведОплФизУсл.НомерСвед) Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СведОплФизУсл.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан номер", "СведОплФизУсл", "НомерСвед", СведОплФизУсл.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведОплФизУсл.ПрКлиент) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведОплФизУсл", "ПрКлиент", СведОплФизУсл.УИД));
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
		
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, ЭтоЮЛ);
	Если ЭтоЮЛ Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчГод", Истина, , 2024);
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации / ФИО ИП", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	
	Для Каждого Стр Из Данные.ДанныеМногостраничныхРазделов.СведОплФизУсл Цикл 
		СведОплФизУсл = Стр.Значение;
		Если УникальныйИдентификатор <> СведОплФизУсл.УИД Тогда 
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ПроверкаДанныхПолучателяСправки(СведОплФизУсл, "СведОплФизУсл", ТаблицаОшибок, СведОплФизУсл.ПрКлиент);
		Если Не ЗначениеЗаполнено(СведОплФизУсл.НомерСвед) Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СведОплФизУсл.НомерСвед) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан номер", "СведОплФизУсл", "НомерСвед", СведОплФизУсл.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведОплФизУсл.ПрКлиент) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведОплФизУсл", "ПрКлиент", СведОплФизУсл.УИД));
		КонецЕсли;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиСправка2023_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Инд = 0;
	Пока Инд < ТаблицаОшибок.Количество() Цикл 
		ТекущаяОшибка = ТаблицаОшибок[Инд].Значение;
		Если ТекущаяОшибка.ИмяСтраницы = "СведОплФизУсл" И ТекущаяОшибка.УИДСтраницы <> УникальныйИдентификатор Тогда 
			ТаблицаОшибок.Удалить(Инд);
		КонецЕсли;
		Инд = Инд + 1;
	КонецЦикла;
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставленияСправки_Форма2023_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставлениеСправки_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьСправкуСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	Для Каждого Стр Из ДанныеУведомления.ДанныеМногостраничныхРазделов.СведОплФизУсл Цикл 
		Если Стр.Значение.УИД = УникальныйИдентификатор Тогда 
			ДанныеУведомления.ДанныеУведомления.Вставить("СведОплФизУсл", Стр.Значение);
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставленияСправки_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Возврат УведомлениеОСпецрежимахНалогообложения.СформироватьЖурналСправок(Объект, "СведОплФизУсл");
КонецФункции

Функция СформироватьСправку(Объект, УИДТекущаяСтраница) Экспорт
	Возврат УведомлениеОСпецрежимахНалогообложения.СформироватьСправку(Объект, УИДТекущаяСтраница, "СведОплФизУсл");
КонецФункции

Функция ДанныеСправки2023_1(Объект, ТекстВыгрузки)
	Попытка
		ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ТекстВыгрузки);
		КНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента").ЗначениеЭлемента;
		ВерсФорм = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ВерсФорм", "ИмяЭлемента").ЗначениеЭлемента;
		Если КНД <> "1151160" Или ВерсФорм <> "5.01" Тогда 
			ОбщегоНазначения.СообщитьПользователю("Ожидается файл КНД 1151160 в формате 5.01");
			Если КНД = "1184046" Тогда 
				ОбщегоНазначения.СообщитьПользователю("Выбранный файл является журналом справок (КНД 1184046), но не справкой");
			КонецЕсли;
			Возврат Неопределено;
		КонецЕсли;
		СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиСправка2023_1");
		Возврат УведомлениеОСпецрежимахНалогообложения.ЗагрузитьСправку(СхемаВыгрузки, ДеревоЗагрузки, "Документ/СпрОплФизУсл");
	Исключение
		ОбщегоНазначения.СообщитьПользователю("Файл не соответсвует формату");
		Возврат Неопределено;
	КонецПопытки;
КонецФункции
#КонецОбласти
#КонецЕсли
