#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Данные = Неопределено;
	Параметры.Свойство("Данные", Данные);
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ВыборНОТуристическийНалог;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2025_1");
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	ЭтотОбъект["ТекущееИДНаименования"] = "Титульная";
	ПоказатьТекущуюСтраницу("Титульная_2025");
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	ИначеЕсли Область.Имя = "ФамилияПолучатель" Или Область.Имя = "ИмяПолучатель" Или Область.Имя = "ОтчествоПолучатель" Тогда
		ПредставлениеУведомления.Области.Л0107.Значение = ПредставлениеУведомления.Области.ФамилияПолучатель.Значение + " "
		+ ПредставлениеУведомления.Области.ИмяПолучатель.Значение + " " + ПредставлениеУведомления.Области.ОтчествоПолучатель.Значение;
		ЭтотОбъект["ДанныеУведомления"].СвСчБанк.Л0107 = ПредставлениеУведомления.Области.Л0107.Значение;
	ИначеЕсли Область.Имя = "НаимОргЛицСч" Тогда
		ПредставлениеУведомления.Области.Л0107.Значение = ПредставлениеУведомления.Области.НаимОргЛицСч.Значение;
		ЭтотОбъект["ДанныеУведомления"].СвСчБанк.Л0107 = ПредставлениеУведомления.Области.НаимОргЛицСч.Значение;
	ИначеЕсли Область.Имя = "ПрПолучатель" Тогда
		ОбработкаПрПолучатель();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Область.Имя = "ФизЛицоЯвлИП" Тогда 
		СтандартнаяОбработка = Ложь;
		Область.Значение = Не Область.Значение;
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Ложь);
	ИначеЕсли УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СформироватьXML(Команда)
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УведомлениеОбъект = Объект.Ссылка.ПолучитьОбъект();
		Если УведомлениеОбъект.Заблокирован() Тогда 
			УведомлениеОбъект.Разблокировать();
		КонецЕсли;
		РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	Если ЭтотОбъект["ЭтоЮЛ"] Тогда
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
		ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
		ДанныеУведомленияТитульный.Вставить("ФизЛицоЯвлИП", Ложь);
	Иначе
		СтрокаСведений = "ИННФЛ,ФИО,ТелДом
			|,ФамилияИП,ИмяИП,ОтчествоИП,КодУдЛичн
			|,СерияУдЛичн,НомерУдЛичн,ДатаУдЛичн,ОрганВыданУдЛичн";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
		ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.ФИО);
		ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННФЛ);
		ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелДом);
		ДанныеУведомленияТитульный.Вставить("ФизЛицоЯвлИП", Истина);
	КонецЕсли;
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	Стр001 = ДеревоСтраниц.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2025";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МногострочныеЧасти = Новый СписокЗначений;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета)
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, Неопределено);
	Если ЭтотОбъект["ТекущееИДНаименования"] = "Титульная" Тогда 
		Если ЭтотОбъект["ЭтоЮЛ"] Тогда 
			ПредставлениеУведомления.Области["ИНН"].ТипЗначения = Новый ОписаниеТипов("Строка",,Новый КвалификаторыСтроки(10));
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ЕРН");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ДатаРожд");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "УдЛичн");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "КодВидДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "СерНомДок");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "ФизЛицоЯвлИП");
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "НаимОрг");
			УведомлениеОСпецрежимахНалогообложения.ЗащитаОбласти(ЭтотОбъект, "КПП");
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
	
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Область = ДополнительныеПараметры.Область;
	Область.Значение = РезультатВыбора.Код;
	ПриИзмененииСодержимогоОбластиВыборИзСписка(Область);
КонецПроцедуры

&НаКлиенте
Процедура ПриИзмененииСодержимогоОбластиВыборИзСписка(Область) Экспорт
	ОбластьИмя = Область.Имя;
	Модифицированность = Истина;
	Если ОбластьИмя = "ПрПолучатель" Тогда 
		ОбработкаПрПолучатель();
	КонецЕсли;
	
	Если ЭтотОбъект["ДанныеУведомления"].Свойство(ЭтотОбъект["ТекущееИДНаименования"])
		И ЭтотОбъект["ДанныеУведомления"][ЭтотОбъект["ТекущееИДНаименования"]].Свойство(ОбластьИмя) Тогда 
		
		ЭтотОбъект["ДанныеУведомления"][ЭтотОбъект["ТекущееИДНаименования"]].Вставить(ОбластьИмя, Область.Значение);
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаПрПолучатель()
	ДанныеУведомления = ЭтотОбъект["ДанныеУведомления"];
	Если ПредставлениеУведомления.Области.ПрПолучатель.Значение = "1" Тогда 
		ПредставлениеУведомления.Области.Л0107.Защита = Ложь;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ИмяПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ИмяПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Значение = "";
		ПредставлениеУведомления.Области.НаимОргЛицСч.Защита = Истина;
		ПредставлениеУведомления.Области.НаимОргЛицСч.Значение = "";
		ПредставлениеУведомления.Области.КБК.Защита = Истина;
		ПредставлениеУведомления.Области.КБК.Значение = "";
		ПредставлениеУведомления.Области.СчетПолучателя.Защита = Истина;
		ПредставлениеУведомления.Области.СчетПолучателя.Значение = "";
	ИначеЕсли ПредставлениеУведомления.Области.ПрПолучатель.Значение = "2" Тогда 
		ПредставлениеУведомления.Области.Л0107.Защита = Истина;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Защита = Ложь;
		ПредставлениеУведомления.Области.ИмяПолучатель.Защита = Ложь;
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Защита = Ложь;
		ПредставлениеУведомления.Области.НаимОргЛицСч.Защита = Истина;
		ПредставлениеУведомления.Области.НаимОргЛицСч.Значение = "";
		ПредставлениеУведомления.Области.КБК.Защита = Истина;
		ПредставлениеУведомления.Области.КБК.Значение = "";
		ПредставлениеУведомления.Области.СчетПолучателя.Защита = Истина;
		ПредставлениеУведомления.Области.СчетПолучателя.Значение = "";
	ИначеЕсли ПредставлениеУведомления.Области.ПрПолучатель.Значение = "3" Тогда 
		ПредставлениеУведомления.Области.Л0107.Защита = Истина;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ИмяПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ИмяПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Значение = "";
		ПредставлениеУведомления.Области.НаимОргЛицСч.Защита = Ложь;
		ПредставлениеУведомления.Области.КБК.Защита = Ложь;
		ПредставлениеУведомления.Области.СчетПолучателя.Защита = Ложь;
	Иначе
		ПредставлениеУведомления.Области.Л0107.Защита = Истина;
		ПредставлениеУведомления.Области.Л0107.Значение = "";
		ПредставлениеУведомления.Области.ФамилияПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ФамилияПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ИмяПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ИмяПолучатель.Значение = "";
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Защита = Истина;
		ПредставлениеУведомления.Области.ОтчествоПолучатель.Значение = "";
		ПредставлениеУведомления.Области.НаимОргЛицСч.Защита = Истина;
		ПредставлениеУведомления.Области.НаимОргЛицСч.Значение = "";
		ПредставлениеУведомления.Области.КБК.Защита = Истина;
		ПредставлениеУведомления.Области.КБК.Значение = "";
		ПредставлениеУведомления.Области.СчетПолучателя.Защита = Истина;
		ПредставлениеУведомления.Области.СчетПолучателя.Значение = "";
	КонецЕсли;
	
	ДанныеУведомления.СвСчБанк.ФамилияПолучатель = ПредставлениеУведомления.Области.ФамилияПолучатель.Значение;
	ДанныеУведомления.СвСчБанк.ИмяПолучатель = ПредставлениеУведомления.Области.ИмяПолучатель.Значение;
	ДанныеУведомления.СвСчБанк.ОтчествоПолучатель = ПредставлениеУведомления.Области.ОтчествоПолучатель.Значение;
	ДанныеУведомления.СвСчБанк.Л0107 = ПредставлениеУведомления.Области.Л0107.Значение;
	ДанныеУведомления.СвСчБанк.КБК = ПредставлениеУведомления.Области.КБК.Значение;
	ДанныеУведомления.СвСчБанк.СчетПолучателя = ПредставлениеУведомления.Области.СчетПолучателя.Значение;
	ДанныеУведомления.СвСчБанк.НаимОргЛицСч = ПредставлениеУведомления.Области.НаимОргЛицСч.Значение;
	
	ПредставлениеУведомления.Области.ФамилияПолучатель.ЦветФона = ?(ПредставлениеУведомления.Области.ФамилияПолучатель.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.ИмяПолучатель.ЦветФона = ?(ПредставлениеУведомления.Области.ИмяПолучатель.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.ОтчествоПолучатель.ЦветФона = ?(ПредставлениеУведомления.Области.ОтчествоПолучатель.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.НаимОргЛицСч.ЦветФона = ?(ПредставлениеУведомления.Области.НаимОргЛицСч.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.КБК.ЦветФона = ?(ПредставлениеУведомления.Области.КБК.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.СчетПолучателя.ЦветФона = ?(ПредставлениеУведомления.Области.СчетПолучателя.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
	ПредставлениеУведомления.Области.Л0107.ЦветФона = ?(ПредставлениеУведомления.Области.Л0107.Защита, ЭтотОбъект["ЦФБ"], ЭтотОбъект["ЦФЖ"]);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДополнительныеПараметры = Новый Структура;
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2025_1");
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	ЭтотОбъект["ЭтоЮЛ"] = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация);
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти
