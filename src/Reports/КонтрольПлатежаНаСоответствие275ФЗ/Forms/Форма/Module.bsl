#Область ОбработчикиСобытийФормы

&НаСервере 
Перем КартинкаПроверкаПройдена;

&НаСервере 
Перем КартинкаПроверкаНеПройдена;

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	// Пропускаем инициализацию, чтобы гарантировать получение формы при передаче параметра "АвтоТест".
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не Параметры.Свойство("ПараметрКоманды") Тогда
		Отказ = Истина;
		ВызватьИсключение НСтр("ru = 'Отчет не предназначен для интерактивного открытия.';
								|en = 'The report is not designed for interactive opening.'");
	КонецЕсли;
	
	Отчет.КонтролируемыйДокумент = Параметры.ПараметрКоманды.Ссылка;
	
	СчетаДокумента = СчетаДокумента(Отчет.КонтролируемыйДокумент);
	
	УправлениеЭлементамиФормы();
	
	Если СчетаДокумента.ЕстьОтдельныеСчетаГОЗ Тогда
		ОбновитьНаСервере();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура РежимВыводаПриИзменении(Элемент)
	РежимВыводаПриИзмененииНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Обновить(Команда)
	ОбновитьНаСервере();
КонецПроцедуры

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ОбновитьНаСервере()
	Результат.Очистить();
	
	МакетОтчета = Отчеты.КонтрольПлатежаНаСоответствие275ФЗ.ПолучитьМакет("СоставКонтролей");
	
	ПорядокВыводаОбластей = ПорядокВыводаОбластей();
	СоответствиеРезультатовПроверкиИОбластей = СоответствиеРезультатовПроверкиИОбластей();
	
	РезультатКонтроляДокумента = ДенежныеСредстваСерверЛокализация.КонтрольДокумента(Отчет.КонтролируемыйДокумент);
	
	Для Каждого ИмяОбласти Из ПорядокВыводаОбластей Цикл 
		Область = МакетОтчета.ПолучитьОбласть(ИмяОбласти);
		ИмяОбработчика = СоответствиеРезультатовПроверкиИОбластей[ИмяОбласти];
		
		Если ИмяОбработчика <> Неопределено Тогда
			ОписаниеРезультата = ОписаниеРезультатаПоИмениОбработчика(РезультатКонтроляДокумента, ИмяОбработчика);
			
			Если Область.Рисунки.Количество() > 0 Тогда
				Рисунок = Область.Рисунки[0];
				Рисунок.Картинка = ОписаниеРезультата.Картинка;
				Рисунок.ЦветФона = Новый Цвет();
			КонецЕсли;
			
			Область.Параметры[ИмяОбработчика] = ОписаниеРезультата.Описание;
		КонецЕсли;
		
		Если (Отчет.ТолькоСОшибками И ОбластьСОшибками(РезультатКонтроляДокумента, ИмяОбласти) 
				Или ОбязательнаяОбласть(ИмяОбласти, РезультатКонтроляДокумента))
			Или (Отчет.ТолькоКонтролируемыеПользователем И ОбластьКонтролируетсяПользователем(ИмяОбласти) 
				Или ОбязательнаяОбласть(ИмяОбласти, РезультатКонтроляДокумента)) 
			Или (НЕ Отчет.ТолькоСОшибками И НЕ Отчет.ТолькоКонтролируемыеПользователем) Тогда
				
			Результат.Вывести(Область);
		КонецЕсли;
	КонецЦикла;
	
	// Параметры печати
	Результат.ОриентацияСтраницы = ОриентацияСтраницы.Портрет;
	Результат.АвтоМасштаб = Истина;
	
	// Поля
	Результат.ПолеСверху = 5;
	Результат.ПолеСнизу = 10;
	Результат.ПолеСлева = 5;
	Результат.ПолеСправа = 5;
	
	Результат.РазмерКолонтитулаСверху = 5;
	Результат.РазмерКолонтитулаСнизу = 5;
	
	// Колонтитулы
	Результат.НижнийКолонтитул.Выводить = Истина;
	Результат.НижнийКолонтитул.ТекстСправа = НСтр("ru = 'Страница [&НомерСтраницы] из [&СтраницВсего]';
													|en = 'Page [&НомерСтраницы] of [&СтраницВсего]'");
	
	// Прочие параметры
	Результат.Защита = Истина;
	Результат.ОтображатьЗаголовки = Ложь;
	Результат.ОтображатьСетку = Ложь;
	Результат.КлючПараметровПечати = "ПечатнаяФормаКонтроляДокументов";
	Результат.ИспользуемоеИмяФайла = НСтр("ru = 'Контроль документов на соответствие 275-ФЗ';
											|en = 'Document control for compliance with 275-FZ'") + " " + Отчет.КонтролируемыйДокумент;
КонецПроцедуры

&НаСервере 
Функция ОбязательнаяОбласть(ИмяОбласти, РезультатыКонтроля)
	Области = Новый Массив;
	
	Области.Добавить("ОбщаяШапка");
	
	Если Отчет.ТолькоКонтролируемыеПользователем Тогда
		Области.Добавить("Шапка_Раздел1");
		Области.Добавить("Заголовок_Раздел1");
		Области.Добавить("Строка_Раздел1_275_83");
		Области.Добавить("Строка_Раздел1_275_83_1_2");
		Области.Добавить("Строка_Раздел1_275_83_1_2_а");
		Области.Добавить("Строка_Раздел1_275_83_1_2_д");
		Области.Добавить("Строка_Раздел1_275_84_3");
		Области.Добавить("Строка_Раздел1_275_84_9_б");
	КонецЕсли;
	
	Если Отчет.ТолькоСОшибками Тогда
		Отбор = Новый Структура("Раздел, КонтрольПройден", "Раздел1", Ложь);
		НайденныеСтроки = РезультатыКонтроля.ОписанияРезультатов.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Области.Добавить("Шапка_Раздел1");
			Области.Добавить("Заголовок_Раздел1");
			
			Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_83") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_83");
				КонецЕсли;
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_83_1_2") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_83_1_2");
				КонецЕсли;
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_84") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_84");
				КонецЕсли;
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_84_9") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_84_9");
				КонецЕсли;
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_85_1") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_85_1");
				КонецЕсли;
				Если СтрНайти(НайденнаяСтрока.ИмяОбработчикаКонтроля, "Раздел1_275_85_2") > 0 Тогда
					Области.Добавить("Строка_Раздел1_275_85_2");
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		
		Отбор = Новый Структура("Раздел, КонтрольПройден", "Раздел2", Ложь);
		НайденныеСтроки = РезультатыКонтроля.ОписанияРезультатов.НайтиСтроки(Отбор);
		Если НайденныеСтроки.Количество() > 0 Тогда
			Области.Добавить("Шапка_Раздел2");
			Области.Добавить("Заголовок_Раздел2");
		КонецЕсли;
	КонецЕсли;
	
	Возврат Области.Найти(ИмяОбласти) <> Неопределено;
КонецФункции

&НаСервере 
Функция ОбластьКонтролируетсяПользователем(ИмяОбласти)
	Области = Новый Массив;
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_а");
	Области.Добавить("Строка_Раздел1_275_83_1_2_д");
	
	Возврат Области.Найти(ИмяОбласти) <> Неопределено;
КонецФункции

&НаСервере 
Функция ОбластьСОшибками(РезультатыПроверки, ИмяОбласти)
	ОписанияРезультатов = РезультатыПроверки.ОписанияРезультатов;
	СоответствиеРезультатовПроверкиИОбластей = СоответствиеРезультатовПроверкиИОбластей();
	
	Отбор = Новый Структура("ИмяОбработчикаКонтроля, КонтрольПройден", СоответствиеРезультатовПроверкиИОбластей[ИмяОбласти], Ложь);
	НайденныеСтроки = ОписанияРезультатов.НайтиСтроки(Отбор);
	
	Возврат НайденныеСтроки.Количество() > 0;
КонецФункции

&НаСервере 
Функция СоответствиеРезультатовПроверкиИОбластей()
	СоответствиеРезультатовПроверкиИОбластей = Новый Соответствие;
	
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_1", "РезультатКонтроля_Раздел1_275_83_1_1");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_2_б", "РезультатКонтроля_Раздел1_275_83_1_2_б");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_2_в", "РезультатКонтроля_Раздел1_275_83_1_2_в");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_2_г", "РезультатКонтроля_Раздел1_275_83_1_2_г");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_2_е", "РезультатКонтроля_Раздел1_275_83_1_2_е");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_83_1_2_з", "РезультатКонтроля_Раздел1_275_83_1_2_з");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_84_2", "РезультатКонтроля_Раздел1_275_84_2");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_84_10", "РезультатКонтроля_Раздел1_275_84_10");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_85_1_1", "РезультатКонтроля_Раздел1_275_85_1_1");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_85_2_1", "РезультатКонтроля_Раздел1_275_85_2_1");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел1_275_85_2_2", "РезультатКонтроля_Раздел1_275_85_2_2");
	
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел2_3729У_2_1", "РезультатКонтроля_Раздел2_3729У_2_1");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел2_3729У_2_2", "РезультатКонтроля_Раздел2_3729У_2_2");
	СоответствиеРезультатовПроверкиИОбластей.Вставить("Строка_Раздел2_3729У_2_3", "РезультатКонтроля_Раздел2_3729У_2_3");
	
	Возврат СоответствиеРезультатовПроверкиИОбластей;
КонецФункции

&НаСервере 
Функция ПорядокВыводаОбластей()
	Области = Новый Массив;
	
	Области.Добавить("ОбщаяШапка");
	
	// Раздел 1
	Области.Добавить("Шапка_Раздел1");
	
	Области.Добавить("Заголовок_Раздел1");
	
	Области.Добавить("Строка_Раздел1_275_83");
	
	Области.Добавить("Строка_Раздел1_275_83_1_1");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_а");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_б");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_в");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_г");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_д");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_е");
	
	Области.Добавить("Строка_Раздел1_275_83_1_2_з");
	
	Области.Добавить("Строка_Раздел1_275_84");
	
	Области.Добавить("Строка_Раздел1_275_84_2");
	
	Области.Добавить("Строка_Раздел1_275_84_3");
	
	Области.Добавить("Строка_Раздел1_275_84_9");
	
	Области.Добавить("Строка_Раздел1_275_84_9_б");
	
	Области.Добавить("Строка_Раздел1_275_84_10");
	
	Области.Добавить("Строка_Раздел1_275_85_1");
	
	Области.Добавить("Строка_Раздел1_275_85_1_1");
	
	Области.Добавить("Строка_Раздел1_275_85_2");
	
	Области.Добавить("Строка_Раздел1_275_85_2_1");
	
	Области.Добавить("Строка_Раздел1_275_85_2_2");
	
	// Раздел 2
	Области.Добавить("Шапка_Раздел2");
	
	Области.Добавить("Заголовок_Раздел2");
	
	Области.Добавить("Строка_Раздел2_3729У_2");
	
	Области.Добавить("Строка_Раздел2_3729У_2_1");
	
	Области.Добавить("Строка_Раздел2_3729У_2_2");
	
	Области.Добавить("Строка_Раздел2_3729У_2_3");
	
	Возврат Области;
КонецФункции

&НаСервере 
Функция ОписаниеРезультатаПоИмениОбработчика(РезультатКонтроляДокумента, ИмяОбработчика)
	ОписаниеРезультатаПоИмениОбработчика = Новый Структура("Картинка, Описание, Символ");
	Описание = "";
	КонтрольПройденПоВсемСтрокам = Истина;
	
	ОписанияРезультатов = РезультатКонтроляДокумента.ОписанияРезультатов;
	
	Отбор = Новый Структура("ИмяОбработчикаКонтроля", ИмяОбработчика);
	НайденныеСтроки = ОписанияРезультатов.НайтиСтроки(Отбор);
	
	Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл 
		Описание = Описание + ?(ЗначениеЗаполнено(Описание), Символы.ПС, "") + НайденнаяСтрока.Описание;
		Если КонтрольПройденПоВсемСтрокам Тогда
			КонтрольПройденПоВсемСтрокам = НайденнаяСтрока.КонтрольПройден;
		КонецЕсли;
	КонецЦикла;
	
	Если НайденныеСтроки.Количество() > 0 Тогда
		ОписаниеРезультатаПоИмениОбработчика.Вставить("Описание", Описание);
		ОписаниеРезультатаПоИмениОбработчика.Вставить("Символ", ?(КонтрольПройденПоВсемСтрокам, "V", "Х"));
		ОписаниеРезультатаПоИмениОбработчика.Вставить("Картинка", ?(КонтрольПройденПоВсемСтрокам, КартинкаПроверкаПройдена, КартинкаПроверкаНеПройдена));
	Иначе
		ОписаниеРезультатаПоИмениОбработчика.Вставить("Картинка", Новый Картинка);
	КонецЕсли;
	
	Возврат ОписаниеРезультатаПоИмениОбработчика;
КонецФункции

&НаСервере
Процедура РежимВыводаПриИзмененииНаСервере()
	Отчет.ТолькоСОшибками = (РежимВывода = 1);
	Отчет.ТолькоКонтролируемыеПользователем = (РежимВывода = 2);
	
	ОбновитьНаСервере();
КонецПроцедуры

&НаСервере 
Процедура УправлениеЭлементамиФормы()
	Элементы.ФормаОбновить.Видимость = СчетаДокумента.ЕстьОтдельныеСчетаГОЗ;
	Элементы.РежимВывода.Видимость = СчетаДокумента.ЕстьОтдельныеСчетаГОЗ;
	Элементы.СтраницыРезультатовКонтроля.ОтображениеСтраниц = ОтображениеСтраницФормы.Нет;
	
	Если СчетаДокумента.ЕстьОтдельныеСчетаГОЗ Тогда
		Элементы.СтраницыРезультатовКонтроля.ТекущаяСтраница = Элементы.СтраницаКонтрольПо275ФЗ;
	Иначе
		Элементы.СтраницыРезультатовКонтроля.ТекущаяСтраница = Элементы.СтраницаКонтрольНеТребуется;
	КонецЕсли;
	
	Если Не СчетаДокумента.ЕстьОтдельныеСчетаГОЗ Тогда
		МассивПоясненийБанковскихСчетов = Новый Массив;
		Для Каждого БанковскийСчет Из СчетаДокумента.БанковскиеСчета Цикл 
			НавСсылкаСчет = ПолучитьНавигационнуюСсылку(БанковскийСчет);
			ПояснениеСсылкаНаСчет = Новый ФорматированнаяСтрока(Строка(БанковскийСчет),,,, НавСсылкаСчет);
			
			Если МассивПоясненийБанковскихСчетов.Количество() > 0 Тогда
				МассивПоясненийБанковскихСчетов.Добавить(", ");
			КонецЕсли;
			
			МассивПоясненийБанковскихСчетов.Добавить(ПояснениеСсылкаНаСчет);
		КонецЦикла;
		
		Пояснение1 = НСтр("ru = 'В документе %1';
							|en = 'In document %1'");
		Пояснение1 = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(Пояснение1, 
			?(МассивПоясненийБанковскихСчетов.Количество() = 1, НСтр("ru = 'указан собственный счет';
																	|en = 'own account is specified'"), НСтр("ru = 'указаны собственные счета';
																											|en = 'own accounts are specified'")));
		
		Пояснение2 = НСтр("ru = 'Контроль документов на соответствие 275-ФЗ проводится только для операций с отдельными счетами';
							|en = 'Document control for compliance with 275-FZ is performed only for transactions with separate accounts'");
		
		Элементы.ПояснениеКонтрольНеТребуется.Заголовок = Новый ФорматированнаяСтрока(
			Пояснение1, " ", МассивПоясненийБанковскихСчетов, ".", Символы.ПС,
			Пояснение2, ".");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста 
Функция СчетаДокумента(Ссылка)
	СчетаДокумента = Новый Структура("ЕстьОтдельныеСчетаГОЗ, БанковскиеСчета");
	
	Запрос = Новый Запрос("
	|ВЫБРАТЬ
	|	РаспределениеПоСчетам.БанковскийСчетКасса КАК БанковскийСчет
	|ПОМЕСТИТЬ БанковскиеСчета
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств.РаспределениеПоСчетам КАК РаспределениеПоСчетам
	|ГДЕ
	|	РаспределениеПоСчетам.Ссылка = &Ссылка
	|	И РаспределениеПоСчетам.БанковскийСчетКасса ССЫЛКА Справочник.БанковскиеСчетаОрганизаций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗаявкаНаРасходованиеДенежныхСредств.БанковскийСчет КАК БанковскийСчет
	|ИЗ
	|	Документ.ЗаявкаНаРасходованиеДенежныхСредств КАК ЗаявкаНаРасходованиеДенежныхСредств
	|ГДЕ
	|	ЗаявкаНаРасходованиеДенежныхСредств.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СписаниеБезналичныхДенежныхСредств.БанковскийСчет
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств КАК СписаниеБезналичныхДенежныхСредств
	|ГДЕ
	|	СписаниеБезналичныхДенежныхСредств.Ссылка = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.БанковскийСчет
	|ИЗ
	|	БанковскиеСчета КАК БанковскиеСчета
	|ГДЕ
	|	&ТекстЗапросаОтдельныйБанковскийСчет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	БанковскиеСчета.БанковскийСчет
	|ИЗ
	|	БанковскиеСчета КАК БанковскиеСчета");
	
	
	Запрос.Текст = СтрЗаменить(
		Запрос.Текст, 
		"&ТекстЗапросаОтдельныйБанковскийСчет", 
		ДенежныеСредстваСерверЛокализация.ТекстЗапросаПроверкиОтдельногоСчета("БанковскиеСчета.БанковскийСчет"));
		
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	Результат = Запрос.ВыполнитьПакет();
	
	СчетаДокумента.Вставить("ЕстьОтдельныеСчетаГОЗ", Не Результат[1].Пустой());
	СчетаДокумента.Вставить("БанковскиеСчета", Результат[2].Выгрузить().ВыгрузитьКолонку(0));
	
	Возврат СчетаДокумента;
КонецФункции

КартинкаПроверкаПройдена = БиблиотекаКартинок.ВыполненоУспешно;
КартинкаПроверкаНеПройдена = БиблиотекаКартинок.НекорректныйКонтрагент;

#КонецОбласти 
