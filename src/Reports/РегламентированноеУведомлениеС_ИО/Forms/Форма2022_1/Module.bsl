#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;

	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаСИО;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	ЭтотОбъект.ИмяМакетаАрхиваТабличныхДокументов = "ЭкранныеФормы_Форма2022_1";
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора2022_1");
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	ПриЗакрытииНаСервере();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации,ФамилияРук,ИмяРук,ОтчествоРук";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
	ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
	ДанныеУведомленияТитульный.Вставить("Наименование", СведенияОбОрганизации.НаимЮЛПол);
	ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2022";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2017_1_Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"структуре без образования"+символы.ПС+"юридического лица";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "СведИСБезЮЛ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "СведИСБезЮЛ";
	Стр001.МакетыПФ = "Печать_Форма2022_1_СведИСБезЮЛ";
	
	ИсСтроки = Стр001.ПолучитьЭлементы();
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения об иностранной"+символы.ПС+"организации-учредителе (Лист Е)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "СвИОУчрИC";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "СвИОУчрИC";
	ИсСтроки01.МакетыПФ = "Печать_Форма2022_1_СвИОУчрИC";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения о российской"+символы.ПС+"организации-учредителе (Лист Ж)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "СвРосУчрИО";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "СвРосУчрИО";
	ИсСтроки01.МакетыПФ = "Печать_Форма2022_1_СвРосУчрИО";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения о физическом"+символы.ПС+"лице-учредителе (Лист З)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "СвФЛУчрИО";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "СвФЛУчрИО";
	ИсСтроки01.МакетыПФ = "Печать_Форма2022_1_СвФЛУчрИО";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Сведения об иностранной"+символы.ПС+"структуре-учредителе (Лист И)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "СвИСУчрИО";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Ложь;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "СвИСУчрИО";
	ИсСтроки01.МакетыПФ = "Печать_Форма2022_1_СвИСУчрИО";
	
	ИсСтроки01 = ИсСтроки.Добавить();
	ИсСтроки01.Наименование = "Раскрытие порядка"+символы.ПС+"косвенного участия (Лист К)";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Истина;
	
	ИсСтроки01 = ИсСтроки01.ПолучитьЭлементы().Добавить();
	ИсСтроки01.Наименование = "Стр. 1";
	ИсСтроки01.ИндексКартинки = 1;
	ИсСтроки01.ИмяМакета = "РаскрУчИСБезЮЛКосв";
	ИсСтроки01.Многостраничность = Истина;
	ИсСтроки01.Многострочность = Истина;
	ИсСтроки01.УИД = Новый УникальныйИдентификатор;
	ИсСтроки01.ИДНаименования = "РаскрУчИСБезЮЛКосв";
	ИсСтроки01.МногострочныеЧасти.Добавить("МнгСтр2");
	ИсСтроки01.МакетыПФ = "Печать_Форма2022_1_РаскрУчИСБезЮЛКосв";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"организации (Лист А)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "СвИОУчИО";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "СвИОУчИО";
	Стр001.МакетыПФ = "Печать_Форма2022_1_СвИОУчИО";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о российской"+символы.ПС+"организации (Лист Б)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "СвРосУчИО";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "СвРосУчИО";
	Стр001.МакетыПФ = "Печать_Форма2022_1_СвРосУчИО";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения о физическом"+символы.ПС+"лице-участнике (Лист В)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "СвФЛУчИО";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "СвФЛУчИО";
	Стр001.МакетыПФ = "Печать_Форма2022_1_СвФЛУчИО";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения об иностранной"+символы.ПС+"структуре (Лист Г)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "СвИСУчИО";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "СвИСУчИО";
	Стр001.МакетыПФ = "Печать_Форма2022_1_СвИСУчИО";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Раскрытие порядка"+символы.ПС+"косвенного участия (Лист Д)";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "РаскрУчИОКосв";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "РаскрУчИОКосв";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр1");
	Стр001.МакетыПФ = "Печать_Форма2022_1_РаскрУчИОКосв";
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	Если Элемент.ТекущиеДанные.Многостраничность Тогда 
		ИмяМакета = УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
		ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьМногострочныеЧасти(Элемент.ТекущиеДанные), ПредУИД);
	Иначе 
		ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, ПредУИД);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти);
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюМногостраничнуюСтраницу(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	Если ТипЗнч(Область.Значение) = Тип("Число") И ЭтоОбластьДоля(Область) Тогда 
		Если Область.Значение > 100 Тогда 
			Область.Значение = 100;
		КонецЕсли;
	КонецЕсли;
	
	Если ЭтотОбъект["ТекущееИДНаименования"] = "РаскрУчИОКосв"
		Или ЭтотОбъект["ТекущееИДНаименования"] = "РаскрУчИСБезЮЛКосв" Тогда 
		
		Если Область.Имя = "НомерИО" Тогда 
			Обл = ПредставлениеУведомления.Области["НомерРО"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
			Обл = ПредставлениеУведомления.Области["НомерФЛ"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
		ИначеЕсли Область.Имя = "НомерРО" Тогда 
			Обл = ПредставлениеУведомления.Области["НомерИО"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
			Обл = ПредставлениеУведомления.Области["НомерФЛ"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
		ИначеЕсли Область.Имя = "НомерФЛ" Тогда 
			Обл = ПредставлениеУведомления.Области["НомерИО"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
			Обл = ПредставлениеУведомления.Области["НомерРО"];
			Обл.Значение = 0;
			УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл, Истина);
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
	
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
КонецПроцедуры

&НаСервере
Процедура СкопироватьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ЭтотОбъект["УИДТекущаяСтраница"]);
	УведомлениеОСпецрежимахНалогообложения.КопироватьСтраницуУведомления(ЭтотОбъект, Истина);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтраницуНаКлиенте() Экспорт 
	СкопироватьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	ДобавитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	УдалитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыборКодЗнач(ЭтотОбъект, Область, СтандартнаяОбработка, Истина);
	КонецЕсли;
	
	Если СтрНачинаетсяС(Область.Имя, "НомерУч_") Тогда 
		СтандартнаяОбработка = Ложь;
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти", Область.Значение, Область.Имя);
		ОткрытьФорму("Отчет." + СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИмяФормы, ".")[1] + ".Форма.ФормаВыборНомерУчастника",
			ПараметрыВыборНомерУчастника, ЭтотОбъект, , , , ВыборНомерУчастника, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		Возврат;
	ИначеЕсли Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	КонецЕсли;
	
	Если СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыборНомерУчастникаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		ТипЧисло = Новый ОписаниеТипов("Число");
		МассивДопОбл = Неопределено;
		Результат = Неопределено;
		ИмяОбласти = Неопределено;
		
		Ответ.Свойство("ИмяОбласти", ИмяОбласти);
		Ответ.Свойство("Результат", Результат);
		Если Ответ.Свойство("Очистить") Тогда 
			Результат = "";
		КонецЕсли;
		Область = ПредставлениеУведомления.Области[ИмяОбласти];
		Область.Значение = Результат;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если ЭтотОбъект["ТекущееИДНаименования"] = "СведИСБезЮЛ" 
		Или ЭтотОбъект["ТекущееИДНаименования"] = "СвИСУчрИО" 
		Или ЭтотОбъект["ТекущееИДНаименования"] = "СвИСУчИО" Тогда
		
		Возврат (Область.Имя = "СтранаУчрИС");
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "СвИОУчрИC" 
		Или ЭтотОбъект["ТекущееИДНаименования"] = "СвИОУчИО" Тогда 
		
		Возврат (Область.Имя = "СтрРег");
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "СвФЛУчрИО" 
		Или ЭтотОбъект["ТекущееИДНаименования"] = "СвФЛУчИО" Тогда 
		
		Возврат (Область.Имя = "ОКСМ" Или Область.Имя = "ОКСМИно");
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Функция ЭтоОбластьДоля(Область)
	Возврат (Область.Имя = "ДоляУчКосвИт")
		Или (Область.Имя = "ДоляКосвПослИт")
		Или (Область.Имя = "ДоляУч")
		Или СтрНачинаетсяС(Область.Имя, "ДоляУчПрям_")
		Или СтрНачинаетсяС(Область.Имя, "ДоляУчКосв_");
КонецФункции

&НаКлиенте
Процедура ДобавитьСтраницу(Команда) Экспорт 
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу() Экспорт
	ЭтотОбъект["УдалениеСтраницы"] = Истина;
	УдалитьСтраницуНаСервере();
	ЭтотОбъект["УдалениеСтраницы"] = Ложь;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	Если Модифицированность Тогда 
		СохранитьДанные();
	КонецЕсли;
	Если ЗначениеЗаполнено(Объект.Ссылка) Тогда
		УведомлениеОбъект = Объект.Ссылка.ПолучитьОбъект();
		Если УведомлениеОбъект.Заблокирован() Тогда 
			УведомлениеОбъект.Разблокировать();
		КонецЕсли;
		РазблокироватьДанныеДляРедактирования(Объект.Ссылка, УникальныйИдентификатор);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
КонецФункции

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизации(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуОсобыхПолей()
	ТаблицаОсобыхПолейВВыгрузке = УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПутейВВыгрузке();
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/СвИОУчрИC/НомерИО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/СвРосУчрИО/НомерРО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/СвФЛУчрИО/НомерФЛ";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/СвИСУчрИО/НомерИС";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/РаскрУчИСБезЮЛКосв/СвУчКосвИС/НомерИО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/РаскрУчИСБезЮЛКосв/СвУчКосвИС/НомерРО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СведИСБезЮЛ/РаскрУчИСБезЮЛКосв/СвУчКосвИС/НомерФЛ";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвИОУчИО/НомерИО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвРосУчИО/НомерРО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвФЛУчИО/НомерФЛ";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/СвИСУчИО/НомерИС";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/РаскрУчИОКосв/СвУчКосвИО/НомерИО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/РаскрУчИОКосв/СвУчКосвИО/НомерРО";
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СообУчИО/СвУчИО/РаскрУчИОКосв/СвУчКосвИО/НомерФЛ";
	
	Возврат ТаблицаОсобыхПолейВВыгрузке;
КонецФункции

&НаСервере
Процедура ЗагрузитьЛистыДК(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры, ТипЛиста)
	Если ТипЛиста = "Д" Тогда 
		МнгСтр = "МнгСтр1";
		КорневойПуть = "Файл/Документ/СообУчИО/СвУчИО/РаскрУчИОКосв";
		ЗаголовокПути = "РаскрУчИОКосв";
		ЗаголовокЦепочкиУчастия = "РаскрУчИО";
		ЗаголовокНомера = "СвУчКосвИО";
		ЗаголовокМногострочки = "УчПосл";
		ИдентификаторЛиста = "РаскрУчИОКосв";
		СтрокаЛистВДереве = ДеревоСтраниц.ПолучитьЭлементы()[ДеревоСтраниц.ПолучитьЭлементы().Количество() - 1].ПолучитьЭлементы()[0];
	ИначеЕсли ТипЛиста = "К" Тогда 
		МнгСтр = "МнгСтр2";
		КорневойПуть = "Файл/Документ/СообУчИО/СведИСБезЮЛ/РаскрУчИСБезЮЛКосв";
		ЗаголовокПути = "РаскрУчИСБезЮЛКосв";
		ЗаголовокЦепочкиУчастия = "РаскрУчИС";
		ЗаголовокНомера = "СвУчКосвИС";
		ЗаголовокМногострочки = "УчПослИС";
		ИдентификаторЛиста = "РаскрУчИСБезЮЛКосв";
		СтрКосвУч = ДеревоСтраниц.ПолучитьЭлементы()[1].ПолучитьЭлементы();
		СтрокаЛистВДереве = СтрКосвУч[СтрКосвУч.Количество() - 1].ПолучитьЭлементы()[0];
	Иначе
		Возврат;
	КонецЕсли;
	
	МассивКолонок = Новый Соответствие;
	ДанныеДопСтрокМнгСтр = ПолучитьИзВременногоХранилища(ЭтотОбъект["ДанныеДопСтрок"][МнгСтр]);
	Для Каждого Кол Из ДанныеДопСтрокМнгСтр.Колонки Цикл 
		МассивКолонок.Вставить(Кол.Имя, Истина);
	КонецЦикла;
	
	Листы0 = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, КорневойПуть, "ИмяЭлемента");
	Если Листы0 = Неопределено Тогда 
		Возврат;
	КонецЕсли;
	Листы0 = Листы0.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокПути), Ложь);
	
	ВсегоСтрок = Листы0.Количество();
	Если ВсегоСтрок = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	Для Каждого Лист0 Из Листы0 Цикл
		ПодчиненныеУзлыД1Количество = Лист0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокЦепочкиУчастия), Ложь).Количество();
		ВсегоСтрок = ВсегоСтрок + ?(ПодчиненныеУзлыД1Количество > 0, ПодчиненныеУзлыД1Количество - 1, 0);
	КонецЦикла;
	
	Для Инд = 2 По ВсегоСтрок Цикл 
		НоваяСтрокаЛистВДереве = УведомлениеОСпецрежимахНалогообложения.СкопироватьСтрокуВДереве(ЭтотОбъект, СтрокаЛистВДереве);
		НоваяСтрокаЛистВДереве.Наименование = "Стр. " + Формат(Инд, "ЧГ=0");
	КонецЦикла;
	
	ЛистЭталон = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЭтотОбъект["ДанныеМногостраничныхРазделов"][ИдентификаторЛиста][0].Значение);
	СтрокиВДереве = СтрокаЛистВДереве.ПолучитьРодителя().ПолучитьЭлементы();
	ИндексЛист0 = 0;
	
	Для Каждого Лист0 Из Листы0 Цикл
		ИндексЛист0Нач = ИндексЛист0;
		ЛистЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистЭталон);
		ЛистЗнач.УИД = Новый УникальныйИдентификатор;
		ЭтотОбъект["ДанныеМногостраничныхРазделов"][ИдентификаторЛиста].Добавить(ЛистЗнач);
		СтрокиВДереве[ИндексЛист0].УИД = ЛистЗнач.УИД;
		ИндексЛист0 = ИндексЛист0 + 1;
		
		Для Каждого Стр Из Лист0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокНомера), Ложь) Цикл 
			Для Каждого Стр Из Стр.Строки Цикл
				Если Стр.ИмяЭлемента = "НомерИО"
					Или Стр.ИмяЭлемента = "НомерРО"
					Или Стр.ИмяЭлемента = "НомерФЛ" Тогда
					
					ЛистЗнач[Стр.ИмяЭлемента] = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
				ИначеЕсли ЛистЗнач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				ИначеЕсли Стр.ИмяЭлемента = "ФИО" Тогда
					Для Каждого Стр2 Из Стр.Строки Цикл
						Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
									Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр2), 6), "Код").Ключ;
						Если ЗначениеЗаполнено(Ключ) И ЛистЗнач.Свойство(Ключ) Тогда
							ЛистЗнач[Ключ] = Стр2.ЗначениеЭлемента;
						КонецЕсли;
					КонецЦикла;
				Иначе
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если ЗначениеЗаполнено(Ключ) И ЛистЗнач.Свойство(Ключ) Тогда
						ЛистЗнач[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			Прервать;
		КонецЦикла;
		
		Инд = 0;
		Для Каждого Лист1 Из Лист0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокЦепочкиУчастия), Ложь) Цикл 
			Если Инд <> 0 Тогда
				ИндексЛист0 = ИндексЛист0 + 1;
				ЛистЗнач = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(ЛистЭталон);
				ЛистЗнач.УИД = Новый УникальныйИдентификатор;
				СтрокиВДереве[ИндексЛист0Нач + Инд].УИД = ЛистЗнач.УИД;
				ЭтотОбъект["ДанныеМногостраничныхРазделов"][ИдентификаторЛиста].Добавить(ЛистЗнач);
				Для Каждого Стр Из Лист0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокНомера), Ложь) Цикл 
					Для Каждого Стр Из Стр.Строки Цикл 
						Если Стр.ИмяЭлемента = "НомерИО"
							Или Стр.ИмяЭлемента = "НомерРО"
							Или Стр.ИмяЭлемента = "НомерФЛ" Тогда
							ЛистЗнач[Стр.ИмяЭлемента] = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(Стр.ЗначениеЭлемента, 5));
						ИначеЕсли ЛистЗнач.Свойство(Стр.ИмяЭлемента) Тогда
							ЛистЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
						ИначеЕсли Стр.ИмяЭлемента = "ФИО" Тогда
							Для Каждого Стр2 Из Стр.Строки Цикл
								Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
											Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр2), 6), "Код").Ключ;
								Если ЗначениеЗаполнено(Ключ) И ЛистЗнач.Свойство(Ключ) Тогда
									ЛистЗнач[Ключ] = Стр2.ЗначениеЭлемента;
								КонецЕсли;
							КонецЦикла;
						Иначе
							Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
										Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
							Если ЗначениеЗаполнено(Ключ) И ЛистЗнач.Свойство(Ключ) Тогда
								ЛистЗнач[Ключ] = Стр.ЗначениеЭлемента;
							КонецЕсли;
						КонецЕсли;
					КонецЦикла;
					Прервать;
				КонецЦикла;
			КонецЕсли;
			Для Каждого Стр Из Лист1.Строки Цикл 
				Если ЛистЗнач.Свойство(Стр.ИмяЭлемента) Тогда
					ЛистЗнач[Стр.ИмяЭлемента] = Стр.ЗначениеЭлемента;
				Иначе
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если ЗначениеЗаполнено(Ключ) И ЛистЗнач.Свойство(Ключ) Тогда
						ЛистЗнач[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого Лист2 Из Лист1.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ЗаголовокМногострочки), Ложь) Цикл
				НовСтр = ДанныеДопСтрокМнгСтр.Добавить();
				НовСтр.УИД = ЛистЗнач.УИД;
				Для Каждого Стр Из Лист2.Строки Цикл
					Ключ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, 
								Сред(УведомлениеОСпецрежимахНалогообложения.ПолучитьПолныйПутьВДеревеЗагрузки(Стр), 6), "Код").Ключ;
					Если МассивКолонок[Ключ] = Истина Тогда 
						НовСтр[Ключ] = Стр.ЗначениеЭлемента;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			Инд = Инд + 1;
		КонецЦикла;
	КонецЦикла;
	
	ПоместитьВоВременноеХранилище(ДанныеДопСтрокМнгСтр, ЭтотОбъект["ДанныеДопСтрок"][МнгСтр]);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТаблицаОсобыхПолейВВыгрузке", ПолучитьТаблицуОсобыхПолей());
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2022_1");
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМногостраничныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	ЗагрузитьЛистыДК(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры, "Д");
	ЗагрузитьЛистыДК(ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры, "К");
КонецПроцедуры

&НаСервере
Процедура ОсобаяОбработкаЭлементов(Путь, СтрЗагружаемоеЗначение, Страница) Экспорт 
	Разложение = СтрРазделить(Путь, "/");
	ИмяПоля = Разложение[Разложение.ВГраница()];
	Если Страница.Свойство(ИмяПоля) Тогда 
		Страница[ИмяПоля] = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьКартуМногостраничныхРазделов() Экспорт 
	КартаРазделов = УведомлениеОСпецрежимахНалогообложения.СформироватьПустуюКартуМногостраничныхРазделов();
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвИОУчИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвРосУчИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвФЛУчИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвИСУчИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвИОУчрИC";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвРосУчрИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвФЛУчрИО";
	НовСтр = КартаРазделов.Строки.Добавить();
	НовСтр.ИДНаименования = "СвИСУчрИО";
	Возврат КартаРазделов;
КонецФункции

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ПолучитьСворачиваемыеЭлементы()
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект));
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомлениеЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	ПолучитьСворачиваемыеЭлементы();
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Ложь);
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры
