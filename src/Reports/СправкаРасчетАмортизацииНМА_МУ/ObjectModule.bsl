#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ОбработкаПроверкиЗаполнения(Отказ, ПроверяемыеРеквизиты)
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	ЗначенияОтбораДанных = ПолучитьЗначенияОтбораДанных(НастройкиОсновнойСхемы);
			
	Если НЕ ЗначенияОтбораДанных.ПоказатьРасчетБУ
		И НЕ ЗначенияОтбораДанных.ПоказатьРасчетУУ Тогда
		ТекстСообщения = НСтр("ru = 'Необходимо выбрать какие данные нужно получить: БУ, УУ.';
								|en = 'Select which data you need to get: AC, MA.'");
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения,,,, Отказ); 
	КонецЕсли;
	
КонецПроцедуры

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	НастройкиОсновнойСхемы = КомпоновщикНастроек.ПолучитьНастройки();
	
	УстановитьТекстЗапроса(СхемаКомпоновкиДанных);
	
	ЗначенияОтбораДанных = ПолучитьЗначенияОтбораДанных(НастройкиОсновнойСхемы);
	
	УстановитьПараметрыОтчета(ЗначенияОтбораДанных, НастройкиОсновнойСхемы);
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОсновнойСхемы, ДанныеРасшифровки);	
	
	ПроцессорКомпоновкиДанных = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновкиДанных.Инициализировать(МакетКомпоновки, Неопределено, ДанныеРасшифровки, Истина);
	
	ПроцессорВыводаВТабличныйДокумент = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВыводаВТабличныйДокумент.УстановитьДокумент(ДокументРезультат);	
	ПроцессорВыводаВТабличныйДокумент.Вывести(ПроцессорКомпоновкиДанных);
	
	ДобавитьИнформационноеСообщениеВШапку(ДокументРезультат, ЗначенияОтбораДанных);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриСозданииНаСервере = Истина;
	Настройки.События.ПриЗагрузкеВариантаНаСервере = Истина;
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета:
//   	* Параметры - Структура - может содержать свойства:
//				** ПараметрКоманды - Произвольный -
//				** ОписаниеКоманды - Структура - 
//   Отказ - Булево - Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Параметры = ЭтаФорма.Параметры; 
	
	Если Параметры.Свойство("ПараметрКоманды")
		И Параметры.Свойство("ОписаниеКоманды")
		И Параметры.ОписаниеКоманды.Свойство("ДополнительныеПараметры") Тогда 
		
		ЭтаФорма.ФормаПараметры.КлючНазначенияИспользования = Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды;
		Параметры.КлючНазначенияИспользования = Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды;
		
		Если Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды = "СправкаРасчетПоНМА" Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("НематериальныйАктив", Параметры.ПараметрКоманды);
		ИначеЕсли Параметры.ОписаниеКоманды.ДополнительныеПараметры.ИмяКоманды = "СправкаРасчетПоДокументуАмортизацииНМА" Тогда
			ЭтаФорма.ФормаПараметры.Отбор.Вставить("ДокументРасчетаАмортизации", Параметры.ПараметрКоманды);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
//
// См. синтакс-помощник "Расширение управляемой формы для отчета.ПриЗагрузкеВариантаНаСервере" в синтакс-помощнике.
//
Процедура ПриЗагрузкеВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	Отчет = Форма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек; // КомпоновщикНастроекКомпоновкиДанных - 
	
	УстановитьПериодОтчета(Форма, КомпоновщикНастроекФормы);
	
	НовыеНастройкиКД = КомпоновщикНастроекФормы.Настройки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьЗначенияОтбораДанных(НастройкиОсновнойСхемы)

	ЭлементыОтбора = НастройкиОсновнойСхемы.Отбор.Элементы;
	
	ЗначенияОтбораДанных = Новый Структура;
	
	ЗначенияОтбораДанных.Вставить("СписокОрганизаций", ОтчетыУТСервер.ЗначениеОтбора("Организация", ЭлементыОтбора));
	Если ЗначенияОтбораДанных.СписокОрганизаций.Количество() = 0 Тогда
		ЗначенияОтбораДанных.СписокОрганизаций = ВнеоборотныеАктивыСлужебный.СписокРазрешенныхОрганизаций();
	КонецЕсли;
	
	ЗначенияОтбораДанных.Вставить("СписокНМА", ОтчетыУТСервер.ЗначениеОтбора("НематериальныйАктив", ЭлементыОтбора));
	ЗначенияОтбораДанных.Вставить("ДокументРасчетаАмортизации", ОтчетыУТСервер.ЗначениеОтбора("ДокументРасчетаАмортизации", ЭлементыОтбора));
	
	ОтчетыУТСервер.ПериодОтчета(НастройкиОсновнойСхемы, ЗначенияОтбораДанных);
	
	ПоказатьРасчетБУ = ОтчетыУТСервер.ЗначениеПараметра(НастройкиОсновнойСхемы, "ПоказатьРасчетБУ", Ложь);
	ПоказатьРасчетУУ = ОтчетыУТСервер.ЗначениеПараметра(НастройкиОсновнойСхемы, "ПоказатьРасчетУУ", Ложь);
	
	ЗначенияОтбораДанных.Вставить("ПоказатьРасчетБУ", ПоказатьРасчетБУ);
	ЗначенияОтбораДанных.Вставить("ПоказатьРасчетУУ", ПоказатьРасчетУУ);
	
	Возврат ЗначенияОтбораДанных;
	
КонецФункции

Процедура УстановитьПараметрыОтчета(ЗначенияОтбораДанных, НастройкиОсновнойСхемы)

	Если ЗначениеЗаполнено(ЗначенияОтбораДанных.НачалоПериода) Тогда
		НачалоГода = НачалоГода(ЗначенияОтбораДанных.НачалоПериода);
	Иначе
		НачалоГода = '000101010000';
	КонецЕсли;
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "НачалоГода", НачалоГода);
	
	Если ЗначениеЗаполнено(ЗначенияОтбораДанных.ОкончаниеПериода) Тогда
		КонецГода = КонецГода(ЗначенияОтбораДанных.ОкончаниеПериода);
	Иначе
		КонецГода = '000101010000';
	КонецЕсли;
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(НастройкиОсновнойСхемы, "КонецГода", КонецГода);
	
КонецПроцедуры

Процедура УстановитьТекстЗапроса(СхемаКомпоновкиДанных)

	СписокЗапросов = Новый Массив;
	
	#Область ВТ_Амортизация
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ТабАмортизация.Период КАК Период,
	|	НАЧАЛОПЕРИОДА(ТабАмортизация.Период, ГОД) КАК НачалоГода,
	|	НАЧАЛОПЕРИОДА(ТабАмортизация.Период, МЕСЯЦ) КАК НачалоМесяца,
	|
	|	ТабАмортизация.Организация КАК Организация,
	|	ТабАмортизация.Подразделение КАК Подразделение,
	|	ТабАмортизация.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|
	|	ТабАмортизация.НематериальныйАктив КАК НематериальныйАктив,
	|
	|	ТабАмортизация.Амортизация КАК АмортизацияУУ,
	|	ТабАмортизация.АмортизацияРегл + ТабАмортизация.АмортизацияЦФ КАК АмортизацияБУ,
	|	ТабАмортизация.АмортизацияНУ + ТабАмортизация.АмортизацияНУЦФ КАК АмортизацияНУ,
	|	ТабАмортизация.АмортизацияПР + ТабАмортизация.АмортизацияПРЦФ КАК АмортизацияПР,
	|	ТабАмортизация.АмортизацияВР + ТабАмортизация.АмортизацияВРЦФ КАК АмортизацияВР,
	|
	|	ТабАмортизация.РесурсВыработанныйЗаПрошлыйПериод КАК РесурсВыработанныйЗаПрошлыйПериодУУ,
	|	ТабАмортизация.РесурсВыработанныйЗаТекущийПериод КАК РесурсВыработанныйЗаТекущийПериодУУ,
	|
	|	ТабАмортизация.РесурсВыработанныйЗаПрошлыйПериодБУ КАК РесурсВыработанныйЗаПрошлыйПериодБУ,
	|	ТабАмортизация.РесурсВыработанныйЗаТекущийПериодБУ КАК РесурсВыработанныйЗаТекущийПериодБУ,
	|
	|	ТабАмортизация.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизацииУУ,
	|	ТабАмортизация.СтоимостьДляВычисленияАмортизацииРегл КАК СтоимостьДляВычисленияАмортизацииБУ,
	|
	|	ТабАмортизация.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ТабАмортизация.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|
	|	ТабАмортизация.ПорядокНачисленияАмортизацииУУ КАК ПорядокНачисленияАмортизацииУУ,
	|	ТабАмортизация.ПорядокНачисленияАмортизацииБУ КАК ПорядокНачисленияАмортизацииБУ,
	|
	|	ТабАмортизация.ЭтоДоначисление КАК ЭтоДоначислениеУУ,
	|	ТабАмортизация.ЭтоДоначислениеБУ КАК ЭтоДоначислениеБУ
	|
	|ПОМЕСТИТЬ ВТ_Амортизация
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА КАК ТабАмортизация
	|
	|ГДЕ
	|	(ТабАмортизация.Период >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ТабАмортизация.Период <= &КонецПериода
	|			ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И ТабАмортизация.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4
	|	И ТабАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|{ГДЕ
	|	ТабАмортизация.Организация.* КАК Организация,
	|	ТабАмортизация.Подразделение.* КАК Подразделение,
	|	ТабАмортизация.НематериальныйАктив.* КАК НематериальныйАктив,
	|	ВЫРАЗИТЬ(ТабАмортизация.Регистратор КАК Документ.АмортизацияНМА2_4) КАК ДокументРасчетаАмортизации,
	|	ТабАмортизация.Амортизация КАК АмортизацияУУ,
	|	(ТабАмортизация.АмортизацияРегл + ТабАмортизация.АмортизацияЦФ) КАК АмортизацияБУ,
	|	(ТабАмортизация.АмортизацияНУ + ТабАмортизация.АмортизацияНУЦФ) КАК АмортизацияНУ,
	|	(ТабАмортизация.АмортизацияПР + ТабАмортизация.АмортизацияПРЦФ) КАК АмортизацияПР,
	|	(ТабАмортизация.АмортизацияВР + ТабАмортизация.АмортизацияВРЦФ) КАК АмортизацияВР}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабАмортизация.Период,
	|	НАЧАЛОПЕРИОДА(ТабАмортизация.Период, ГОД),
	|	НАЧАЛОПЕРИОДА(ТабАмортизация.Период, МЕСЯЦ),
	|	ТабАмортизация.Организация,
	|	ТабАмортизация.Подразделение,
	|	ТабАмортизация.Организация.ГоловнаяОрганизация,
	|	ТабАмортизация.НематериальныйАктив,
	|
	|	ТабАмортизация.Стоимость,
	|	ТабАмортизация.СтоимостьРегл + ТабАмортизация.СтоимостьЦФ,
	|	ТабАмортизация.СтоимостьНУ + ТабАмортизация.СтоимостьНУЦФ,
	|	ТабАмортизация.СтоимостьПР + ТабАмортизация.СтоимостьПРЦФ,
	|	ТабАмортизация.СтоимостьВР + ТабАмортизация.СтоимостьВРЦФ,
	|
	|	ТабАмортизация.РесурсВыработанныйЗаПрошлыйПериод,
	|	ТабАмортизация.РесурсВыработанныйЗаТекущийПериод,
	|
	|	0,
	|	0,
	|
	|	ТабАмортизация.СтоимостьДляВычисленияАмортизации,
	|	0,
	|
	|	ТабАмортизация.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаВНА.ПоСтандартамРегл) КАК ПорядокУчетаБУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизацииУУ,
	|	ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СоСледующегоМесяца) КАК ПорядокНачисленияАмортизацииБУ,
	|
	|	ТабАмортизация.ЭтоДоначисление КАК ЭтоДоначисление,
	|	ЛОЖЬ КАК ЭтоДоначислениеБУ
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА КАК ТабАмортизация
	|
	|ГДЕ
	|	(ТабАмортизация.Период >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ТабАмортизация.Период <= &КонецПериода
	|			ИЛИ &КонецПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И ТабАмортизация.Регистратор ССЫЛКА Документ.АмортизацияНМА2_4
	|	И ТабАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|
	|{ГДЕ
	|	ТабАмортизация.Организация.* КАК Организация,
	|	ТабАмортизация.Подразделение.* КАК Подразделение,
	|	ТабАмортизация.НематериальныйАктив.* КАК НематериальныйАктив,
	|	ВЫРАЗИТЬ(ТабАмортизация.Регистратор КАК Документ.АмортизацияНМА2_4) КАК ДокументРасчетаАмортизации,
	|	ТабАмортизация.Стоимость КАК АмортизацияУУ,
	|	(ТабАмортизация.СтоимостьРегл + ТабАмортизация.СтоимостьЦФ) КАК АмортизацияБУ,
	|	(ТабАмортизация.СтоимостьНУ + ТабАмортизация.СтоимостьНУЦФ) КАК АмортизацияНУ,
	|	(ТабАмортизация.СтоимостьПР + ТабАмортизация.СтоимостьПРЦФ) КАК АмортизацияПР,
	|	(ТабАмортизация.СтоимостьВР + ТабАмортизация.СтоимостьВРЦФ) КАК АмортизацияВР}
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	НематериальныйАктив,
	|	Организация
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область УчетнаяПолитика
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВТ_Амортизация.Период КАК Период,
	|	ВТ_Амортизация.Организация КАК Организация,
	|	МАКСИМУМ(ТаблицаПоследнийПериод.Период) КАК ПериодСрезаПоследних
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаУУ_СрезПоследних
	|
	|ИЗ
	|	ВТ_Амортизация КАК ВТ_Амортизация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК ТаблицаПоследнийПериод
	|		ПО (ТаблицаПоследнийПериод.Организация = ВТ_Амортизация.Организация)
	|			И (ТаблицаПоследнийПериод.Период <= ВТ_Амортизация.Период)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Амортизация.Период,
	|	ВТ_Амортизация.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаСрезПоследних.Период КАК Период,
	|	ТаблицаСрезПоследних.Организация КАК Организация,
	|	ТаблицаРегистраНаДату.ПорядокНачисленияАмортизацииНМА КАК ПорядокНачисленияАмортизации,
	|	ТаблицаРегистраНаДату.ПорядокНачисленияАмортизацииНМАРегл КАК ПорядокНачисленияАмортизацииРегл
	|
	|ПОМЕСТИТЬ УчетнаяПолитикаУУ
	|
	|ИЗ
	|	УчетнаяПолитикаУУ_СрезПоследних КАК ТаблицаСрезПоследних
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК ТаблицаРегистраНаДату
	|		ПО (ТаблицаРегистраНаДату.Организация = ТаблицаСрезПоследних.Организация)
	|			И (ТаблицаРегистраНаДату.Период = ТаблицаСрезПоследних.ПериодСрезаПоследних)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ УчетнаяПолитикаУУ_СрезПоследних";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ПериодыПараметровБУ
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА (Амортизация.ПорядокНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|				ИЛИ Амортизация.ПорядокНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|					 И ЕСТЬNULL(УчетнаяПолитикаУУ.ПорядокНачисленияАмортизацииРегл, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету))
	|			ТОГДА Амортизация.Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Амортизация.Период, МЕСЯЦ, -1), МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПараметров,
	|	КОНЕЦПЕРИОДА(Амортизация.Период, МЕСЯЦ) КАК КонецПериодаПараметров,
	|	Амортизация.Период КАК Период,
	|	Амортизация.Организация КАК Организация,
	|	Амортизация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Амортизация.НематериальныйАктив КАК НематериальныйАктив
	|
	|ПОМЕСТИТЬ ПериодыПараметровБУ
	|
	|ИЗ
	|	ВТ_Амортизация КАК Амортизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаУУ КАК УчетнаяПолитикаУУ
	|		ПО УчетнаяПолитикаУУ.Организация = Амортизация.Организация
	|			И УчетнаяПолитикаУУ.Период = Амортизация.Период
	|ГДЕ
	|	(Амортизация.АмортизацияБУ <> 0
	|			ИЛИ Амортизация.АмортизацияНУ <> 0
	|			ИЛИ Амортизация.АмортизацияПР <> 0
	|			ИЛИ Амортизация.АмортизацияВР <> 0)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	ГоловнаяОрганизация,
	|	ПериодПараметров";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область ПериодыПараметровУУ
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ВЫБОР
	|		КОГДА (Амортизация.ПорядокНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)
	|				ИЛИ Амортизация.ПорядокНачисленияАмортизацииУУ = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.ПустаяСсылка)
	|						И ЕСТЬNULL(УчетнаяПолитика.ПорядокНачисленияАмортизации, ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету)) = ЗНАЧЕНИЕ(Перечисление.ПорядокНачисленияАмортизации.СДатыПринятияКУчету))
	|			ТОГДА Амортизация.Период
	|		ИНАЧЕ КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(Амортизация.Период, МЕСЯЦ, -1), МЕСЯЦ)
	|	КОНЕЦ КАК ПериодПараметров,
	|
	|	КОНЕЦПЕРИОДА(Амортизация.Период, МЕСЯЦ) КАК КонецПериодаПараметров,
	|	Амортизация.Период КАК Период,
	|	Амортизация.Организация КАК Организация,
	|	Амортизация.НематериальныйАктив КАК НематериальныйАктив
	|
	|ПОМЕСТИТЬ ПериодыПараметровУУ
	|
	|ИЗ
	|	ВТ_Амортизация КАК Амортизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаУУ КАК УчетнаяПолитика
	|		ПО УчетнаяПолитика.Организация = Амортизация.Организация
	|			И УчетнаяПолитика.Период = Амортизация.Период
	|ГДЕ
	|	Амортизация.АмортизацияУУ <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	ПериодПараметров";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область ПараметрыРасчета
	
	// УУ
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПервоначальныеСведенияНМА", "ПервоначальныеСведенияУУ", "ПериодыПараметровУУ", "НематериальныйАктив", СписокЗапросов);
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПорядокУчетаНМА", "ПорядокУчетаУпр", "ПериодыПараметровУУ", "НематериальныйАктив", СписокЗапросов);
		
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПараметрыАмортизацииНМАУУ", "ПараметрыАмортизацииУУ", "ПериодыПараметровУУ", "НематериальныйАктив", СписокЗапросов);
		
	// БУ
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПервоначальныеСведенияНМА", "ПервоначальныеСведенияБУ", "ПериодыПараметровБУ", "НематериальныйАктив", СписокЗапросов);
	
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПорядокУчетаНМА", "ПорядокУчетаРегл", "ПериодыПараметровБУ", "НематериальныйАктив", СписокЗапросов);
		
	ВнеоборотныеАктивыСлужебный.ДобавитьТекстЗапросаТаблицыСправкиРасчетАмортизации(
		"ПараметрыАмортизацииНМАБУ", "ПараметрыАмортизацииБУ", "ПериодыПараметровБУ", "НематериальныйАктив", СписокЗапросов);
		
	#КонецОбласти

	#Область Выработка
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Амортизация.Организация КАК Организация,
	|	Амортизация.НематериальныйАктив КАК НематериальныйАктив,
	|
	|	ВЫБОР
	|		КОГДА МЕСЯЦ(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ) = МЕСЯЦ(&НачалоМесяца) - 1
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ПринятоКУчетуВПрошломМесяце
	|
	|ПОМЕСТИТЬ ВТ_СписокНМА_Выработка
	|
	|ИЗ
	|	ВТ_Амортизация КАК Амортизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияБУ КАК ПервоначальныеСведенияБУ
	|		ПО (ПервоначальныеСведенияБУ.Организация = Амортизация.Организация)
	|			И (ПервоначальныеСведенияБУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПервоначальныеСведенияБУ.Период = Амортизация.Период)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииУУ КАК ПараметрыАмортизацииУУ
	|		ПО (ПараметрыАмортизацииУУ.Организация = Амортизация.Организация)
	|			И (ПараметрыАмортизацииУУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПараметрыАмортизацииУУ.Период = Амортизация.НачалоМесяца)
	|
	|ГДЕ
	|	(ПервоначальныеСведенияБУ.МетодНачисленияАмортизацииБУ = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции)
	|			ИЛИ ПараметрыАмортизацииУУ.МетодНачисленияАмортизации = ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВыработкаНМА.Период, МЕСЯЦ) КАК Период,
	|	ВыработкаНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	ВыработкаНМА.КоличествоОборот КАК ОбъемВыработки
	|
	|ПОМЕСТИТЬ ВыработкаНМА
	|
	|ИЗ
	|	РегистрНакопления.ВыработкаНМА.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			Месяц,
	|			НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					СписокНМА.НематериальныйАктив
	|				ИЗ
	|					ВТ_СписокНМА_Выработка КАК СписокНМА)) КАК ВыработкаНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СписокНМА_Выработка
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	#Область СтоимостьАмортизация_НаНачалоМесяца
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтоимостьНМА.Период КАК Период,
	|	СтоимостьНМА.Организация КАК Организация,
	|	СтоимостьНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	СтоимостьНМА.СтоимостьКонечныйОстаток КАК СтоимостьУУ,
	|	СтоимостьНМА.СтоимостьРеглКонечныйОстаток + СтоимостьНМА.СтоимостьЦФКонечныйОстаток КАК СтоимостьБУ,
	|	СтоимостьНМА.СтоимостьНУКонечныйОстаток + СтоимостьНМА.СтоимостьНУЦФКонечныйОстаток КАК СтоимостьНУ
	|
	|ПОМЕСТИТЬ ВТ_СтоимостьНМА_ЗаПериод
	|
	|ИЗ
	|	РегистрНакопления.СтоимостьНМА.ОстаткиИОбороты(
	|			&НачалоПрошлогоПериода {(&НачалоПрошлогоПериода)},
	|			&КонецПериода {(&КонецПериода)},
	|			Месяц,
	|			,
	|			НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					Амортизация.НематериальныйАктив
	|				ИЗ
	|					ВТ_Амортизация КАК Амортизация)) КАК СтоимостьНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Амортизация.Период КАК Период,
	|	ВТ_Амортизация.Организация КАК Организация,
	|	ВТ_Амортизация.НематериальныйАктив КАК НематериальныйАктив,
	|	МАКСИМУМ(ВТ_СтоимостьНМА_ЗаПериод.Период) КАК ПериодСрезаПоследних
	|
	|ПОМЕСТИТЬ ВТ_СтоимостьНМА_НаНачалоМесяца_СрезПоследних
	|
	|ИЗ
	|	ВТ_Амортизация КАК ВТ_Амортизация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьНМА_ЗаПериод КАК ВТ_СтоимостьНМА_ЗаПериод
	|		ПО (ВТ_СтоимостьНМА_ЗаПериод.НематериальныйАктив = ВТ_Амортизация.НематериальныйАктив)
	|			И (ВТ_СтоимостьНМА_ЗаПериод.Организация = ВТ_Амортизация.Организация)
	|			И (ВТ_СтоимостьНМА_ЗаПериод.Период < ВТ_Амортизация.НачалоМесяца)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Амортизация.Период,
	|	ВТ_Амортизация.Организация,
	|	ВТ_Амортизация.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	ПериодСрезаПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоследнийПериод.Период КАК Период,
	|	ТаблицаПоследнийПериод.Организация КАК Организация,
	|	ТаблицаПоследнийПериод.НематериальныйАктив КАК НематериальныйАктив,
	|	ТаблицаРегистраНаДату.СтоимостьУУ КАК СтоимостьУУ,
	|	ТаблицаРегистраНаДату.СтоимостьБУ КАК СтоимостьБУ,
	|	ТаблицаРегистраНаДату.СтоимостьНУ КАК СтоимостьНУ
	|
	|ПОМЕСТИТЬ ВТ_СтоимостьНМА_НаНачалоМесяца
	|
	|ИЗ
	|	ВТ_СтоимостьНМА_НаНачалоМесяца_СрезПоследних КАК ТаблицаПоследнийПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_СтоимостьНМА_ЗаПериод КАК ТаблицаРегистраНаДату
	|		ПО (ТаблицаРегистраНаДату.НематериальныйАктив = ТаблицаПоследнийПериод.НематериальныйАктив)
	|			И (ТаблицаРегистраНаДату.Организация = ТаблицаПоследнийПериод.Организация)
	|			И (ТаблицаРегистраНаДату.Период = ТаблицаПоследнийПериод.ПериодСрезаПоследних)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СтоимостьНМА_ЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_СтоимостьНМА_НаНачалоМесяца_СрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияНМА.Период КАК Период,
	|	АмортизацияНМА.Организация КАК Организация,
	|	АмортизацияНМА.НематериальныйАктив КАК НематериальныйАктив,
	|	-АмортизацияНМА.АмортизацияКонечныйОстаток КАК АмортизацияУУ,
	|	-(АмортизацияНМА.АмортизацияРеглКонечныйОстаток + АмортизацияНМА.АмортизацияЦФКонечныйОстаток) КАК АмортизацияБУ,
	|	-(АмортизацияНМА.АмортизацияНУКонечныйОстаток + АмортизацияНМА.АмортизацияНУЦФКонечныйОстаток) КАК АмортизацияНУ
	|
	|ПОМЕСТИТЬ ВТ_АмортизацияНМА_ЗаПериод
	|
	|ИЗ
	|	РегистрНакопления.АмортизацияНМА.ОстаткиИОбороты(
	|			&НачалоПрошлогоПериода {(&НачалоПрошлогоПериода)},
	|			&КонецПериода {(&КонецПериода)},
	|			Месяц,
	|			,
	|			НематериальныйАктив В
	|				(ВЫБРАТЬ
	|					Амортизация.НематериальныйАктив
	|				ИЗ
	|					ВТ_Амортизация КАК Амортизация)) КАК АмортизацияНМА
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Амортизация.Период КАК Период,
	|	ВТ_Амортизация.Организация КАК Организация,
	|	ВТ_Амортизация.НематериальныйАктив КАК НематериальныйАктив,
	|	МАКСИМУМ(ВТ_АмортизацияНМА_ЗаПериод.Период) КАК ПериодСрезаПоследних
	|
	|ПОМЕСТИТЬ ВТ_АмортизацияНМА_НаНачалоМесяца_СрезПоследних
	|
	|ИЗ
	|	ВТ_Амортизация КАК ВТ_Амортизация
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияНМА_ЗаПериод КАК ВТ_АмортизацияНМА_ЗаПериод
	|		ПО (ВТ_АмортизацияНМА_ЗаПериод.НематериальныйАктив = ВТ_Амортизация.НематериальныйАктив)
	|			И (ВТ_АмортизацияНМА_ЗаПериод.Организация = ВТ_Амортизация.Организация)
	|			И (ВТ_АмортизацияНМА_ЗаПериод.Период < ВТ_Амортизация.НачалоМесяца)
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Амортизация.Период,
	|	ВТ_Амортизация.Организация,
	|	ВТ_Амортизация.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	ПериодСрезаПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоследнийПериод.Период КАК Период,
	|	ТаблицаПоследнийПериод.Организация КАК Организация,
	|	ТаблицаПоследнийПериод.НематериальныйАктив КАК НематериальныйАктив,
	|	ТаблицаРегистраНаДату.АмортизацияУУ КАК АмортизацияУУ,
	|	ТаблицаРегистраНаДату.АмортизацияБУ КАК АмортизацияБУ,
	|	ТаблицаРегистраНаДату.АмортизацияНУ КАК АмортизацияНУ
	|
	|ПОМЕСТИТЬ ВТ_АмортизацияНМА_НаНачалоМесяца
	|
	|ИЗ
	|	ВТ_АмортизацияНМА_НаНачалоМесяца_СрезПоследних КАК ТаблицаПоследнийПериод
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТ_АмортизацияНМА_ЗаПериод КАК ТаблицаРегистраНаДату
	|		ПО (ТаблицаРегистраНаДату.НематериальныйАктив = ТаблицаПоследнийПериод.НематериальныйАктив)
	|			И (ТаблицаРегистраНаДату.Организация = ТаблицаПоследнийПериод.Организация)
	|			И (ТаблицаРегистраНаДату.Период = ТаблицаПоследнийПериод.ПериодСрезаПоследних)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НематериальныйАктив,
	|	Организация,
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_АмортизацияНМА_ЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_АмортизацияНМА_НаНачалоМесяца_СрезПоследних
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти
		
	#Область Амортизация
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Амортизация.Период КАК Период,
	|	Амортизация.Период КАК ПериодУУ,
	|	Амортизация.Период КАК ПериодБУ,
	|
	|	Амортизация.ЭтоДоначислениеУУ ИЛИ Амортизация.ЭтоДоначислениеБУ КАК ЭтоДоначисление,
	|
	|	Амортизация.Организация КАК Организация,
	|	Амортизация.Подразделение КАК Подразделение,
	|	Амортизация.НематериальныйАктив КАК НематериальныйАктив,
	|
	|	ЕСТЬNULL(ВыработкаНМА.ОбъемВыработки, 0) КАК ВыработкаЗаМесяц,
	|	ЕСТЬNULL(ПорядокУчетаУпр.ОбъемНаработки, ПорядокУчетаРегл.ОбъемНаработки) КАК ОбъемНаработки,
	|
	// Параметры УУ
	|	Амортизация.АмортизацияУУ КАК АмортизацияУУ,
	|
	|	Амортизация.ЭтоДоначислениеУУ КАК ЭтоДоначислениеУУ,
	|	Амортизация.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|
	|	Амортизация.РесурсВыработанныйЗаПрошлыйПериодУУ КАК РесурсВыработанныйЗаПрошлыйПериодУУ,
	|	Амортизация.РесурсВыработанныйЗаТекущийПериодУУ КАК РесурсВыработанныйЗаТекущийПериодУУ,
	|	Амортизация.СтоимостьДляВычисленияАмортизацииУУ КАК СтоимостьДляВычисленияАмортизацииУУ,
	|
	|	ПараметрыАмортизацииУУ.МетодНачисленияАмортизации КАК МетодНачисленияАмортизацииУУ,
	|	ПервоначальныеСведенияУУ.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ПараметрыАмортизацииУУ.СрокИспользования КАК СрокПолезногоИспользованияУУ,
	|	ПараметрыАмортизацииУУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизацииУУ,
	|	ПараметрыАмортизацииУУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизацииУУ,
	|	ПараметрыАмортизацииУУ.КоэффициентУскорения КАК КоэффициентУскоренияУУ,
	|	ПараметрыАмортизацииУУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|
	|	ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьУУ, 0) - ЕСТЬNULL(АмортизацияНаНачалоМесяца.АмортизацияУУ, 0) КАК ОстаточнаяСтоимостьУУ,
	|
	|	(ГОД(Амортизация.Период) - ГОД(НАЧАЛОПЕРИОДА(ПервоначальныеСведенияУУ.ДатаПринятияКУчетуУУ, МЕСЯЦ))) * 12 
	|		+ МЕСЯЦ(Амортизация.Период) - МЕСЯЦ(НАЧАЛОПЕРИОДА(ПервоначальныеСведенияУУ.ДатаПринятияКУчетуУУ, МЕСЯЦ)) КАК ФактическийСрокИспользованияУУ,
	|
	// Параметры БУ
	|	Амортизация.АмортизацияБУ КАК АмортизацияБУ,
	|	Амортизация.АмортизацияПР КАК АмортизацияПР,
	|	Амортизация.АмортизацияВР КАК АмортизацияВР,
	|
	|	Амортизация.ЭтоДоначислениеБУ КАК ЭтоДоначислениеБУ,
	|	Амортизация.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|
	|	Амортизация.РесурсВыработанныйЗаПрошлыйПериодБУ КАК РесурсВыработанныйЗаПрошлыйПериодБУ,
	|	Амортизация.РесурсВыработанныйЗаТекущийПериодБУ КАК РесурсВыработанныйЗаТекущийПериодБУ,
	|	Амортизация.СтоимостьДляВычисленияАмортизацииБУ КАК СтоимостьДляВычисленияАмортизацииБУ,
	|
	|	ПервоначальныеСведенияБУ.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияБУ.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПараметрыАмортизацииБУ.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользованияБУ,
	|	ПараметрыАмортизацииБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизацииБУ,
	|	ПараметрыАмортизацииБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизацииБУ,
	|	ПараметрыАмортизацииБУ.КоэффициентБУ КАК КоэффициентБУ,
	|	ПараметрыАмортизацииБУ.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимостьРегл,
	|
	|	ЕСТЬNULL(СтоимостьНаНачалоМесяца.СтоимостьБУ, 0) - ЕСТЬNULL(АмортизацияНаНачалоМесяца.АмортизацияБУ, 0) КАК ОстаточнаяСтоимостьБУ,
	|
	|	(ГОД(Амортизация.Период) - ГОД(НАЧАЛОПЕРИОДА(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ, МЕСЯЦ))) * 12 
	|		+ МЕСЯЦ(Амортизация.Период) - МЕСЯЦ(НАЧАЛОПЕРИОДА(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ, МЕСЯЦ)) КАК ФактическийСрокИспользованияБУ,
	|
	|	ВЫБОР
	|		КОГДА ГОД(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ) <> ГОД(Амортизация.НачалоМесяца)
	|			ТОГДА 13 - МЕСЯЦ(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ) + 12 * (ГОД(Амортизация.НачалоМесяца) - ГОД(ПервоначальныеСведенияБУ.ДатаПринятияКУчетуБУ) - 1)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ОтработанныхМесяцевПолныхЛет
	|
	|ИЗ
	|	ВТ_Амортизация КАК Амортизация
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО (НематериальныеАктивы.Ссылка = Амортизация.НематериальныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияУУ КАК ПервоначальныеСведенияУУ
	|		ПО (ПервоначальныеСведенияУУ.Период = Амортизация.Период)
	|			И (ПервоначальныеСведенияУУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПервоначальныеСведенияУУ.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияБУ КАК ПервоначальныеСведенияБУ
	|		ПО (ПервоначальныеСведенияБУ.Период = Амортизация.Период)
	|			И (ПервоначальныеСведенияБУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПервоначальныеСведенияБУ.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииУУ КАК ПараметрыАмортизацииУУ
	|		ПО (ПараметрыАмортизацииУУ.Период = Амортизация.Период)
	|			И (ПараметрыАмортизацииУУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПараметрыАмортизацииУУ.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииБУ КАК ПараметрыАмортизацииБУ
	|		ПО (ПараметрыАмортизацииБУ.Период = Амортизация.Период)
	|			И (ПараметрыАмортизацииБУ.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПараметрыАмортизацииБУ.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаУпр КАК ПорядокУчетаУпр
	|		ПО (ПорядокУчетаУпр.Период = Амортизация.Период)
	|			И (ПорядокУчетаУпр.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПорядокУчетаУпр.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаРегл КАК ПорядокУчетаРегл
	|		ПО (ПорядокУчетаРегл.Период = Амортизация.Период)
	|			И (ПорядокУчетаРегл.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|			И (ПорядокУчетаРегл.Организация = Амортизация.Организация)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаНМА КАК ВыработкаНМА
	|		ПО (ВыработкаНМА.Период = Амортизация.НачалоМесяца)
	|			И (ВыработкаНМА.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СтоимостьНМА_НаНачалоМесяца КАК СтоимостьНаНачалоМесяца
	|		ПО (СтоимостьНаНачалоМесяца.Период = Амортизация.Период)
	|			И (СтоимостьНаНачалоМесяца.Организация = Амортизация.Организация)
	|			И (СтоимостьНаНачалоМесяца.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АмортизацияНМА_НаНачалоМесяца КАК АмортизацияНаНачалоМесяца
	|		ПО (АмортизацияНаНачалоМесяца.Период = Амортизация.Период)
	|			И (АмортизацияНаНачалоМесяца.Организация = Амортизация.Организация)
	|			И (АмортизацияНаНачалоМесяца.НематериальныйАктив = Амортизация.НематериальныйАктив)
	|";
	СписокЗапросов.Добавить(ТекстЗапроса);
	#КонецОбласти

	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());

	СхемаКомпоновкиДанных.НаборыДанных.Амортизация.Запрос = ТекстЗапроса;
	
КонецПроцедуры

Процедура УстановитьПериодОтчета(Форма, КомпоновщикНастроекФормы)

	ПараметрПериод = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроекФормы, "ПериодОтчета"); 
	ПараметрПериод = ПараметрПериод.Значение; // СтандартныйПериод - 
		
	Если Форма.Параметры.КлючНазначенияИспользования = "СправкаРасчетПоДокументуАмортизацииНМА" Тогда
		
		ДокументРасчетаАмортизации = ОтчетыУТСервер.ЗначениеОтбора(
										"ДокументРасчетаАмортизации", 
										КомпоновщикНастроекФормы.Настройки.Отбор.Элементы);
										
		Если ЗначениеЗаполнено(ДокументРасчетаАмортизации) Тогда
			ДатаДокумента = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ДокументРасчетаАмортизации[0], "Дата");
			ПараметрПериод.ДатаНачала = НачалоМесяца(ДатаДокумента);
			ПараметрПериод.ДатаОкончания = КонецМесяца(ДатаДокумента);
		КонецЕсли; 
		
	КонецЕсли; 
	
КонецПроцедуры

Процедура ДобавитьИнформационноеСообщениеВШапку(ТабДок, ЗначенияОтбораДанных)

	СписокПроблем = Новый Массив;
	
	ПроверитьАктуальностьРасчетаАмортизации(ЗначенияОтбораДанных, СписокПроблем);
	
	Если СписокПроблем.Количество() = 0 Тогда
		Возврат;
	КонецЕсли; 
	
	СписокПроблем = ОбщегоНазначенияУТ.УдалитьПовторяющиесяЭлементыМассива(СписокПроблем);
	
	ТекстСообщения = СтрСоединить(СписокПроблем, Символы.ПС);

	ТабДок.Область("R1C1").Текст = ТекстСообщения;
	ТабДок.Область("R1C1").ЦветТекста = Метаданные.ЭлементыСтиля.ЦветТекстаПроблема.Значение;
	ТабДок.Область(1, 1, 1, ).ВысотаСтроки = 0;
	
КонецПроцедуры

Процедура ПроверитьАктуальностьРасчетаАмортизации(ЗначенияОтбораДанных, СписокПроблем)

	РегистрыСведений.ПакетыАмортизацииНМА.СоздатьПакетыАмортизации(ЗначенияОтбораДанных.СписокОрганизаций);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументАмортизация.Организация.Представление КАК ОрганизацияПредставление
	|ИЗ
	|	Документ.АмортизацияНМА2_4 КАК ДокументАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗаданияКРасчетуАмортизацииНМА КАК ЗаданияКРасчету
	|		ПО (ЗаданияКРасчету.Организация = ДокументАмортизация.Организация)
	|			И (ЗаданияКРасчету.Месяц <= ДокументАмортизация.Дата)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПакетыАмортизацииНМА КАК ПакетыАмортизацииНМА
	|		ПО ПакетыАмортизацииНМА.Организация = ЗаданияКРасчету.Организация
	|			И ПакетыАмортизацииНМА.НомерПакета = ЗаданияКРасчету.НомерПакета
	|			И &ОтборПоСпискуНМА
	|ГДЕ
	|	ДокументАмортизация.Организация В(&СписокОрганизаций)
	|	И (НЕ &ОтборПоСпискуНМА ИЛИ ПакетыАмортизацииНМА.НематериальныйАктив В(&СписокНМА))
	|	И (НЕ &ОтборПоДокументу ИЛИ ДокументАмортизация.Ссылка В(&ДокументРасчетаАмортизации))
	|	И ДокументАмортизация.Проведен
	|	И (ДокументАмортизация.Дата >= &НачалоПериода
	|			ИЛИ &НачалоПериода = ДАТАВРЕМЯ(1, 1, 1))
	|	И (ДокументАмортизация.Дата <= &ОкончаниеПериода
	|			ИЛИ &ОкончаниеПериода = ДАТАВРЕМЯ(1, 1, 1))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОрганизаций", ЗначенияОтбораДанных.СписокОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", ЗначенияОтбораДанных.НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ЗначенияОтбораДанных.ОкончаниеПериода);
	Запрос.УстановитьПараметр("СписокНМА", ЗначенияОтбораДанных.СписокНМА);
	Запрос.УстановитьПараметр("ОтборПоСпискуНМА", ЗначениеЗаполнено(ЗначенияОтбораДанных.СписокНМА));
	Запрос.УстановитьПараметр("ДокументРасчетаАмортизации", ЗначенияОтбораДанных.ДокументРасчетаАмортизации);
	Запрос.УстановитьПараметр("ОтборПоДокументу", ЗначениеЗаполнено(ЗначенияОтбораДанных.ДокументРасчетаАмортизации));
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли; 
	
	СписокПроблем.Добавить(НСтр("ru = 'Расчет амортизации не актуален:';
								|en = 'Depreciation calculation is not relevant:'"));
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = НСтр("ru = '- для организации ""%1"" необходимо выполнить закрытие месяца';
								|en = '- for the company ""%1"" you must perform a month-end closing'");
		ТекстСообщения = СтрШаблон(ТекстСообщения, Выборка.ОрганизацияПредставление);
		СписокПроблем.Добавить(ТекстСообщения); 
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли 