#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СоздатьЗаполненноеУведомление(Параметры, СуществующийДокументСсылка = Неопределено) Экспорт
	ИмяФормы = Неопределено;
	Если НЕ Параметры.Свойство("ИмяФормы", ИмяФормы) Тогда
		ИмяФормы = "Форма2020_4";
	КонецЕсли;
	
	Если ИмяФормы = "Форма2020_4" Тогда
		Возврат СоздатьЗаполненноеУведомление_Форма2020_4(Параметры, СуществующийДокументСсылка);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоздатьЗаполненноеУведомление():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СоответствиеПоказателейСтраницыРеквизитамАдреса(ИмяФормы, НазначениеАдреса = Неопределено) Экспорт
	
	СоответствиеПоказателей = Новый Структура;
	
	Если ИмяФормы = "Форма2020_4" Тогда
		ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4(СоответствиеПоказателей, НазначениеАдреса);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СоответствиеПоказателейСтраницыРеквизитамАдреса():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
	Возврат СоответствиеПоказателей;
	
КонецФункции

Функция ДоступнаПечатьPDF417(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2020_4" Тогда
		Возврат Истина;
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ДоступнаПечатьPDF417():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2020_4" Тогда
		Возврат ЭлектронноеПредставление_Форма2020_4(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Процедура СохранитьДанныеПомощника(Уведомление, ДанныеПомощникаЗаполнения) Экспорт
	
	Если Не ЗначениеЗаполнено(Уведомление) Тогда
		Возврат;
	КонецЕсли;
	
	УведомлениеОбъект = Уведомление.ПолучитьОбъект();
	ДанныеУведомления = УведомлениеОбъект.ДанныеУведомления.Получить();
	Если ТипЗнч(ДанныеУведомления) = Тип("Структура") Тогда
		ДанныеУведомления.Вставить("ДанныеПомощникаЗаполнения", ДанныеПомощникаЗаполнения);
	КонецЕсли;
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеУведомления);
	Попытка
		УведомлениеОбъект.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки()));
	КонецПопытки;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ИнициализацияОтчета

Функция СформироватьДеревоСтраниц(ИмяФормы) Экспорт
	Если ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьДеревоСтраниц_Форма2020_4();
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьДеревоСтраниц():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СформироватьДеревоСтраниц_Форма2020_4()
	
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_Страница1";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	Стр001.МакетыПФ = "Печать_Форма2020_4_Страница1;Печать_Форма2020_4_Страница2;Печать_Форма2020_4_Страница3;Печать_Форма2020_4_Страница4";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьП010201");
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьП010407");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы А";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистА";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистА";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистА_1;Печать_Форма2020_4_ЛистА_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Б";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистБ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистБ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистБ_1;Печать_Форма2020_4_ЛистБ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы В";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистВ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистВ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистВ_1;Печать_Форма2020_4_ЛистВ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Г";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистГ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистГ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистГ";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Д";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистД";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистД";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистД_1;Печать_Форма2020_4_ЛистД_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы Е";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЕ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЕ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЕ_1;Печать_Форма2020_4_ЛистЕ_2";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист Ж";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЖ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЖ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЖ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьЖ010201");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Лист З";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистЗ";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистЗ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистЗ";
	Стр001.МногострочныеЧасти.Добавить("МногострочнаяЧастьЗ010101");
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Листы И";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	
	Стр001 = Стр001.Строки.Добавить();
	Стр001.Наименование = "Стр. 1";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Форма2020_4_ЛистИ";
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЛистИ";
	Стр001.МакетыПФ = "Печать_Форма2020_4_ЛистИ_1;Печать_Форма2020_4_ЛистИ_2;Печать_Форма2020_4_ЛистИ_3";
	
	Возврат ДеревоСтраниц;
	
КонецФункции

Процедура ИнициализироватьМногострочныеЧасти(ИмяФормы, КонтейнерВходящий, КонтейнерРезультат) Экспорт
	
	Если ИмяФормы = "Форма2020_4" Тогда
		ДобавитьМногострочныеЧасти_Форма2020_4(КонтейнерРезультат);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция ИнициализироватьМногострочныеЧасти():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция ИнициализироватьМногострочныеЧасти():
			|вызов функции с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьМногострочныеЧасти_Форма2020_4(КонтейнерРезультат)
	
	ИмяРеквизита = "МногострочнаяЧастьП010201";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("П01020100", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(3)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьП010407";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("П01040701", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(50)));
	ТаблицаМСЧ.Колонки.Добавить("П01040702", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(255)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьЖ010201";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("Ж01020100", Новый ОписаниеТипов("Строка", , , , Новый КвалификаторыСтроки(8)));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
	ИмяРеквизита = "МногострочнаяЧастьЗ010101";
	ТаблицаМСЧ = Новый ТаблицаЗначений;
	ТаблицаМСЧ.Колонки.Добавить("З01010100", Новый ОписаниеТипов("Строка"));
	ТаблицаМСЧ.Добавить();
	КонтейнерРезультат.Вставить(ИмяРеквизита, ТаблицаМСЧ);
	
КонецПроцедуры

#КонецОбласти

#Область Печать

Функция СформироватьСписокЛистов(Объект, ЕстьВыходЗаГраницы = Ложь) Экспорт
	Если Объект.ИмяФормы = "Форма2014_1" Тогда
		Возврат СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы);
	ИначеЕсли Объект.ИмяФормы = "Форма2020_4" Тогда
		Возврат СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы);
	Иначе
		ВызватьИсключение НСтр("ru = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра';
			|en = 'Функция СформироватьСписокЛистов():
			|вызов функции с непредусмотренным значением параметра'");
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2014_1(Объект, ЕстьВыходЗаГраницы) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, , "БланкиПечати");
	
	ЕстьВыходЗаГраницы = Ложь;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистИ" Тогда
			МногострочнаяЧасть = СтруктураПараметров.МногострочнаяЧасть1;
			А01010000 = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].А01010000;
			Если Не ЗначениеЗаполнено(А01010000) Тогда
				Продолжить;
			КонецЕсли;
			
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
			НомСтр = НомСтр + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(А01010000, "А01010000", ПечатнаяФорма.Области);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
			
			ВсегоНапечатаноСтрок = 0;
			Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
				Если Не ЗначениеЗаполнено(СтрМнг.А01020000) Тогда
					Продолжить;
				КонецЕсли;
				
				Если ВсегоНапечатаноСтрок = 56 Тогда
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
					ВсегоНапечатаноСтрок = 0;
					НомСтр = НомСтр + 1;
					ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_" + Стр.ИмяМакета);
					УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
				КонецЕсли;
				
				УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(СтрМнг.А01020000, "А01020000_"+(ВсегоНапечатаноСтрок+1), ПечатнаяФорма.Области);
				ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
			КонецЦикла;
			
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
		Иначе
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2020_4(Объект, ЕстьВыходЗаГраницы) Экспорт
	СписокИспользуемыхМакетов = Новый Соответствие;
	
	ЕстьВыходЗаГраницы = Ложь;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	
	НомСтр = 0;
	Для Каждого Стр Из СтруктураПараметров.ДеревоСтраниц.Строки Цикл
		Если Стр.ИДНаименования = "ЛистЖ" Тогда
			ВывестиБланк2020_4_ЛистЖ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		ИначеЕсли Стр.ИДНаименования = "ЛистЗ" Тогда
			ВывестиБланк2020_4_ЛистЗ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов);
			
		Иначе
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, Стр, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Листы;
	
КонецФункции

Процедура НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПарам, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	
	МакетыПФ = СтрПарам.МакетыПФ;
	ИмяМакета = СтрПарам.ИмяМакета;
	
	Если Не ЗначениеЗаполнено(МакетыПФ) И Не ЗначениеЗаполнено(ИмяМакета) Тогда
		Для Каждого СтрПодч Из СтрПарам.Строки Цикл
			НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
		КонецЦикла;
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗначениеЗаполнено(МакетыПФ) Тогда
		МассивИменМакетов = СтрРазделить(МакетыПФ, ";", Ложь);
	Иначе
		МассивИменМакетов = Новый Массив;
		МассивИменМакетов.Добавить("Печать_" + ИмяМакета);
	КонецЕсли;
	
	Если СтруктураПараметров.ДанныеУведомления.Свойство(СтрПарам.ИДНаименования) Тогда
		СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[СтрПарам.ИДНаименования];
		ИменаМногострочныхЧастей = СтрПарам.МногострочныеЧасти;
		
		Если СтруктураПараметров.Свойство("МногострочныеЧасти") Тогда
			КореньМногострочныхЧастей = СтруктураПараметров.МногострочныеЧасти;
		Иначе
			КореньМногострочныхЧастей = СтруктураПараметров;
		КонецЕсли;
		
		Для Каждого ИмяМакета Из МассивИменМакетов Цикл
			Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
				НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
				ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, ИменаМногострочныхЧастей,
					КореньМногострочныхЧастей, ЕстьВыходЗаГраницы);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			КонецЕсли;
			
		КонецЦикла;
		
	ИначеЕсли СтруктураПараметров.ДанныеМногостраничныхРазделов.Свойство(СтрПарам.ИДНаименования) Тогда
		Для Каждого МнгСтр Из СтруктураПараметров.ДанныеМногостраничныхРазделов[СтрПарам.ИДНаименования] Цикл
			Если СтрПарам.УИД <> МнгСтр.Значение.УИД Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого ИмяМакета Из МассивИменМакетов Цикл
				Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(МнгСтр.Значение) Тогда
					НапечататьСтруктуру(МнгСтр.Значение, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
				КонецЕсли;
			КонецЦикла;
			
			Для Каждого СтрПодч Из СтрПарам.Строки Цикл
				НапечататьСтроку(Объект, СтруктураПараметров, Листы, СтрПодч, ПечатнаяФорма, НомСтр, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура НапечататьСтруктуру(СтруктураДанныхСтраницы, НомСтр, ИмяМакета, ПечатнаяФорма, ЕстьВыходЗаГраницы, СписокИспользуемыхМакетов)
	Если УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы) Тогда
		НомСтр = НомСтр + 1;
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(
			"РегламентированноеУведомлениеФормаР11001", СписокИспользуемыхМакетов, ИмяМакета);
		
		Для Каждого КЗ Из СтруктураДанныхСтраницы Цикл
			ИмяПоказателя = КЗ.Ключ;
			ЗначениеПоказателя = КЗ.Значение;
			ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы);
		КонецЦикла;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
		ЗаполнитьЗначенияСвойств(МакетПФ.Параметры, СтруктураДанныхСтраницы);
		ПечатнаяФорма.Вывести(МакетПФ);
	КонецЕсли;
КонецПроцедуры

Процедура ВывестиМногострочныеЧастиНаЕдинственныйЛист(ПечатнаяФорма, ИменаМногострочныхЧастей, МногострочныеЧасти, ЕстьВыходЗаГраницы)
	
	Для Каждого МСЧРаздела Из ИменаМногострочныхЧастей Цикл
		ИмяМСЧ = МСЧРаздела.Значение;
		МногострочнаяЧасть = МногострочныеЧасти[ИмяМСЧ];
		
		Для Каждого СтрокаМСЧ Из МногострочнаяЧасть Цикл
			НомерСтроки = МногострочнаяЧасть.Индекс(СтрокаМСЧ) + 1;
			
			СтрокаЗаполнена = Ложь;
			Для Каждого Колонка ИЗ МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя;
				СтрокаЗаполнена = СтрокаЗаполнена ИЛИ ЗначениеЗаполнено(СтрокаМСЧ[ИмяПоказателя]);
			КонецЦикла;
			
			Если НЕ СтрокаЗаполнена Тогда
				Продолжить;
			КонецЕсли;
			
			Для Каждого Колонка Из МногострочнаяЧасть.Колонки Цикл
				ИмяПоказателя = Колонка.Имя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки);
				ЗначениеПоказателя = СтрокаМСЧ[Колонка.Имя];
				ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, ПечатнаяФорма, ЕстьВыходЗаГраницы);
			КонецЦикла;
			
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистЖ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьЖ010201;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
	НомСтр = НомСтр + 1;
	
	УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
		СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования].Ж01010100, "Ж01010100", МакетПФ.Области);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
	
	ВсегоНапечатаноСтрок = 1;
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если Не ЗначениеЗаполнено(СтрМнг.Ж01020100) Тогда
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложения.ВывестиОКВЭДНаПечать(
			СтрМнг.Ж01020100, "Ж01020100_"+РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(ВсегоНапечатаноСтрок), МакетПФ.Области);
		ВсегоНапечатаноСтрок = ВсегоНапечатаноСтрок + 1;
		
		Если ВсегоНапечатаноСтрок > 68 Тогда
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
			
			ВсегоНапечатаноСтрок = 1;
			НомСтр = НомСтр + 1;
			МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000"+НомСтр, 3), "НомСтр", МакетПФ.Области);
		КонецЕсли;
	КонецЦикла;
	
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
КонецПроцедуры

Процедура ВывестиБланк2020_4_ЛистЗ(СтруктураПараметров, Стр, Объект, Листы, НомСтр, СписокИспользуемыхМакетов)
	СтруктураДанныхСтраницы = СтруктураПараметров.ДанныеУведомления[Стр.ИДНаименования];
	МногострочнаяЧасть = СтруктураПараметров.МногострочныеЧасти.МногострочнаяЧастьЗ010101;
	
	Если НЕ УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтруктураДанныхСтраницы)
	   И НЕ УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(МногострочнаяЧасть) Тогда
		Возврат;
	КонецЕсли;
	
	МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, Стр.МакетыПФ);
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	
	Для Каждого СтрМнг Из МногострочнаяЧасть Цикл
		Если НЕ ЗначениеЗаполнено(СтрМнг.З01010100) Тогда
			Продолжить;
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(МакетПФ);
		ПечатнаяФорма.Области.З01010100.Текст = ВРег(СокрЛП(СтрМнг.З01010100));
		
		НомСтр = НомСтр + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Прав("000" + НомСтр, 3), "НомСтр", ПечатнаяФорма.Области);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЦикла;
КонецПроцедуры

Процедура ВывестиПоказательНаБланк(ИмяПоказателя, ЗначениеПоказателя, МакетПФ, ЕстьВыходЗаГраницы)
	
	Если ТипЗнч(ЗначениеПоказателя) = Тип("Строка") Тогда
		Если УведомлениеОСпецрежимахНалогообложения.ЭтоПолеАдресаРегистрационныхЗаявлений(ИмяПоказателя) Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечатьСКонтролемДляРегистрационныхЗаявлений(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области, "-", ЕстьВыходЗаГраницы);
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(
				ВРег(ЗначениеПоказателя), ИмяПоказателя, МакетПФ.Области);
		КонецЕсли;
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Дата") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	ИначеЕсли ТипЗнч(ЗначениеПоказателя) = Тип("Число") Тогда
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоНаПечать(ЗначениеПоказателя, ИмяПоказателя, МакетПФ.Области);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ЭлектронноеПредставление

Функция ЭлектронноеПредставление_Форма2020_4(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2020_4(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(
		Объект.ИмяОтчета, "СхемаВыгрузкиФорма2020_4");
	ЗаполнитьДанными_Форма2020_4(Объект, ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
	
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2020_4(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура("ЭтоПБОЮЛ", Истина);
	ОсновныеСведения.Вставить("ДатаДок", Формат(ТекущаяДатаСеанса(), "ДФ=dd.MM.yyyy"));
	Данные = Объект.ДанныеУведомления.Получить();
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2020_4(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	ОсновныеСведения.Вставить("ВерсПрог", РегламентированнаяОтчетность.НазваниеИВерсияПрограммы());
	
	Возврат ОсновныеСведения;
КонецФункции

Процедура ЗаполнитьДанными_Форма2020_4(Объект, Параметры, ДеревоВыгрузки)
	
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	ДополнитьПараметры_Форма2020_4(Параметры, ДанныеУведомления);
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзел(ДанныеУведомления, ДеревоВыгрузки);
	
КонецПроцедуры

Процедура ДополнитьПараметры_Форма2020_4(Параметры, ВсеДанные)
	
	Лист001 = ВсеДанные.ДанныеУведомления.Лист001;
	
	ДобавитьСоставляющиеСтоимости(Лист001, "П01060102");
	
	МногострочнаяЧастьП010407 = ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьП010407;
	ДобавитьПоказателиМСЧ(Лист001, МногострочнаяЧастьП010407);
	
	ЛистыА = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистА;
	
	Для Каждого Страница Из ЛистыА Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "А01030100")
		КонецЕсли;
	КонецЦикла;
	
	ЛистыБ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистБ;
	
	Для Каждого Страница Из ЛистыБ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Б0101010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Б0106050");
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Б01080100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыВ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистВ;
	
	Для Каждого Страница Из ЛистыВ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "В01020100");
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "В0105040");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "В0105110");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыГ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистГ;
	
	Для Каждого Страница Из ЛистыГ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Г01030100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыД = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистД;
	
	Для Каждого Страница Из ЛистыД Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьСоставляющиеСтоимости(ДанныеСтраницы,  "Д01040100");
		КонецЕсли;
	КонецЦикла;
	
	ЛистыЕ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистЕ;
	
	Для Каждого Страница Из ЛистыЕ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "Е0103010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "Е0103130");
		КонецЕсли;
	КонецЦикла;
	
	ЛистЗ = ВсеДанные.ДанныеУведомления.ЛистЗ;
	
	МногострочнаяЧастьЗ010101 = ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьЗ010101;
	ДобавитьПоказателиМСЧ(ЛистЗ, МногострочнаяЧастьЗ010101);
	
	ЛистыИ = ВсеДанные.ДанныеМногостраничныхРазделов.ЛистИ;
	
	Для Каждого Страница Из ЛистыИ Цикл
		ДанныеСтраницы = Страница.Значение;
		Если СтраницаЗаполнена(ДанныеСтраницы) Тогда
			ДобавитьПризнакиНаличияФИО(ДанныеСтраницы,     "И0103010");
			ДобавитьПолныйКодПодразделения(ДанныеСтраницы, "И0103090");
		КонецЕсли;
	КонецЦикла;
	
	// Сделать многострочные части видимыми для общих механизмов выгрузки.
	ВсеДанные.Вставить("МногострочнаяЧастьП010201",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьП010201);
	ВсеДанные.Вставить("МногострочнаяЧастьЖ010201",
		ВсеДанные.МногострочныеЧасти.МногострочнаяЧастьЖ010201);
	
КонецПроцедуры

Функция СтраницаЗаполнена(Данные)
	
	Если ТипЗнч(Данные) = Тип("Структура") Тогда
		Для Каждого КЗ Из Данные Цикл
			Если ТипЗнч(КЗ.Значение) = Тип("УникальныйИдентификатор") Тогда
				Продолжить;
			КонецЕсли;
			
			Если ЗначениеЗаполнено(КЗ.Значение) Тогда
				Возврат Истина;
			КонецЕсли;
			
		КонецЦикла;
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура ДобавитьСоставляющиеСтоимости(Показатели, ИмяПоказателя)
	
	УстКапитал = Показатели[ИмяПоказателя];
	ПредставлениеУК = Формат(УстКапитал, "ЧРД=,; ЧГ=0");
	СоставляющиеУК = СтрРазделить(ПредставлениеУК, ",", Истина);
	Если СоставляющиеУК.Количество() = 1 Тогда
		СоставляющиеУК.Добавить("");
	КонецЕсли;
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_1", СоставляющиеУК[0]); // Рубли
	Показатели.Вставить("Х" + Сред(ИмяПоказателя, 2) + "_2", СоставляющиеУК[1]); // Копейки
	
КонецПроцедуры

Процедура ДобавитьПризнакиНаличияФИО(ДанныеРаздела, Префикс, ТолькоЗаполненные = Ложь)
	
	ПоказательФ = Префикс + "1";
	ПоказательИ = Префикс + "2";
	ПоказательО = Префикс + "3";
	
	ФИОЗаполнено =  ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ])
		ИЛИ ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]);
	
	Если ТолькоЗаполненные И НЕ ФИОЗаполнено Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательФ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательФ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательИ, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательИ]), "", "1"));
	ДанныеРаздела.Вставить("Х" + Сред(ПоказательО, 2), ?(ЗначениеЗаполнено(ДанныеРаздела[ПоказательО]), "", "1"));
	
КонецПроцедуры

Процедура ДобавитьПолныйКодПодразделения(ДанныеРаздела, Префикс)
	
	КодПодразделения = "";
	Если ЗначениеЗаполнено(ДанныеРаздела[Префикс + "1"]) ИЛИ ЗначениеЗаполнено(ДанныеРаздела[Префикс + "2"]) Тогда
		КодПодразделения = ДанныеРаздела[Префикс + "1"] + "-" + ДанныеРаздела[Префикс + "2"];
	КонецЕсли;
	
	ДанныеРаздела.Вставить("Х" + Сред(Префикс, 2) + "0", КодПодразделения);
	
КонецПроцедуры

Процедура ДобавитьПоказателиМСЧ(ДанныеРаздела, МСЧ)
	
	НомерСтроки = 1;
	
	Для Каждого СтрокаМСЧ Из МСЧ Цикл
		СтрокаЗаполнена = Ложь;
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			СтрокаЗаполнена = СтрокаЗаполнена
				ИЛИ КолонкаМСЧ.Имя <> "УИД" И ЗначениеЗаполнено(СтрокаМСЧ[КолонкаМСЧ.Имя]);
		КонецЦикла;
		
		Если НЕ СтрокаЗаполнена Тогда
			Продолжить;
		КонецЕсли;
		
		Для Каждого КолонкаМСЧ Из МСЧ.Колонки Цикл
			ИмяПоказателя = КолонкаМСЧ.Имя;
			ДанныеРаздела.Вставить(ИмяПоказателя + "_" + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтроки), СтрокаМСЧ[ИмяПоказателя]);
		КонецЦикла;
		
		НомерСтроки = НомерСтроки + 1;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2020_4(СведенияОтправки)
	
	Если ЗначениеЗаполнено(СведенияОтправки.ДатаДок) Тогда
		ДатаДокумента = Дата(Число(Прав(СведенияОтправки.ДатаДок, 4)),
			Число(Сред(СведенияОтправки.ДатаДок, 4, 2)),
			Число(Лев(СведенияОтправки.ДатаДок, 2)));
		ДатаФормированияФайла = Формат(ДатаДокумента, "ДФ=yyyyMMdd");
	Иначе
		ДатаФормированияФайла = "00010101";
	КонецЕсли;
	
	Префикс = "RO_R11001";
	ИдПолучателя = "0000_0000";
	ИдОтправителя = "000000000000000";
	ИдентификационныйНомер = Строка(Новый УникальныйИдентификатор);
	
	ПрефиксИмениФайла = Префикс + "_" + ИдПолучателя + "_" + ИдОтправителя + "_"
	                  + ДатаФормированияФайла + "_" + ИдентификационныйНомер;
	
	Возврат ПрефиксИмениФайла;
	
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2020_4" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2020_4(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_Лист1(Данные, ТаблицаОшибок)
	Лист001 = Данные.ДанныеУведомления.Лист001;
	Если Не ЗначениеЗаполнено(Лист001.П01010100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано полное наименование", "Лист001", "П01010100"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Лист001.П01030100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан регион места нахождения организации", "Лист001", "П01030100"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Лист001.П01030100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан регион места нахождения организации", "Лист001", "П01030100"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Лист001.П01040100) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан регион адреса юридического лица в пределах места нахождения юридического лица", "Лист001", "П01040100"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Лист001.П01060101) И Не ЗначениеЗаполнено(Лист001.П01060102) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан размер уставного капитала", "Лист001", "П01060102"));
	ИначеЕсли Не ЗначениеЗаполнено(Лист001.П01060101) И ЗначениеЗаполнено(Лист001.П01060102) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид уставного капитала", "Лист001", "П01060101"));
	КонецЕсли;
	
	Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Лист001, "П01070100,П01070200,П01070300") Тогда 
			
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Лист001, ТаблицаОшибок, "Лист001", "П01070200", Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(Лист001, ТаблицаОшибок, "Лист001", "П01070100", Истина, Истина);
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Лист001, ТаблицаОшибок, "Лист001", "П01120100", Ложь, Ложь);
	Для Каждого Стр Из Данные.МногострочныеЧасти.МногострочнаяЧастьП010201 Цикл 
		Если ЗначениеЗаполнено(Стр.П01020100) И СтрДлина(Стр.П01020100) <> 3 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Код языка должен состоять из трех цифр",
				"Лист001", "П01020100_" + (Данные.МногострочныеЧасти.МногострочнаяЧастьП010201.Индекс(Стр) + 1)));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистА(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистА Цикл 
		ЛистА = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистА) Тогда 
			Продолжить;
		КонецЕсли;
		Если ЗначениеЗаполнено(ЛистА.А01010100) Или ЗначениеЗаполнено(ЛистА.А01010200) Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистА, "А01020100,А01020200,А01020300,А01020400,А01020500,А01020600") Тогда 
				
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"На листе А необходимо заполнить либо сведения о российской организации, либо об иностранной", "ЛистА", "А01020100", ЛистА.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистА, ТаблицаОшибок, "ЛистА", "А01010200", Истина, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистА, ТаблицаОшибок, "ЛистА", "А01010100", Истина, Истина);
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистА, ТаблицаОшибок, "ЛистА", "А01020100", Ложь, Истина);
			Если Не ЗначениеЗаполнено(ЛистА.А01020200) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано полное наименование в русской транскрипции", "ЛистА", "А01020200", ЛистА.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(ЛистА, ТаблицаОшибок, "ЛистА", "А01020400", Истина);
			Если Не ЗначениеЗаполнено(ЛистА.А01020500) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан регистрационный номер", "ЛистА", "А01020500", ЛистА.УИД));
			КонецЕсли;
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ДоляУстКап("А01030100,А01030200,А01030301,А01030302", ЛистА, ТаблицаОшибок, "ЛистА", Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистБ(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистБ Цикл 
		ЛистБ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистБ) Тогда 
			Продолжить;
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистБ, ТаблицаОшибок, "ЛистБ", "Б01020100", Ложь, Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистБ, ТаблицаОшибок, "ЛистБ", "Б01070100", Ложь, Ложь);
		Если Не ЗначениеЗаполнено(ЛистБ.Б01030100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан пол", "ЛистБ", "Б01030100", ЛистБ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистБ.Б01040100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", "ЛистБ", "Б01040100", ЛистБ.УИД));
		КонецЕсли;
		РегистрационныеФормы.Проверка_СвГражд("Б01050100,Б01050200", ЛистБ, ТаблицаОшибок, "ЛистБ", Истина);
		РегистрационныеФормы.Проверка_УдЛичнФЛ("Б01060100,Б01060200,Б01060300,Б01060400", ЛистБ, ТаблицаОшибок, "ЛистБ", Истина);
		РегистрационныеФормы.Проверка_ДоляУстКап("Б01080100,Б01080200,Б01080301,Б01080302", ЛистБ, ТаблицаОшибок, "ЛистБ", Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистВ(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистВ Цикл 
		ЛистВ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистВ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистВ.В01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код вида учредителя", "ЛистВ", "В01010100", ЛистВ.УИД));
		КонецЕсли;
		Если СтрДлина(ЛистВ.В01010200) <> 2
			И (ЛистВ.В01010100 = "2" Или ЛистВ.В01010100 = "3") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код региона", "ЛистВ", "В01010200", ЛистВ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистВ.В01010300) И ЛистВ.В01010100 = "3" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование муниципального образования", "ЛистВ", "В01010300", ЛистВ.УИД));
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ДоляУстКап("В01020100,В01020200,В01020301,В01020302", ЛистВ, ТаблицаОшибок, "ЛистВ");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01050200", Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01050100", Ложь, Истина);
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистВ, "В01050401,В01050402,В01050403,В01050400,В01050401,В01050402,"
				+ "В01050403,В01050500,В01050600,В01050700,В01050800,В01050900,В01051000,В01051101,В01051102") Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистВ, ТаблицаОшибок, "ЛистВ", "В01050400", Ложь, Ложь);
			Если Не ЗначениеЗаполнено(ЛистВ.В01050500) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата рождения", "ЛистВ", "В01050500", ЛистВ.УИД));
			КонецЕсли;
			РегистрационныеФормы.Проверка_УдЛичнФЛ("В01050700,В01050800,В01050900,В01051000", ЛистВ, ТаблицаОшибок, "ЛистВ", Истина);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистГ(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистГ Цикл 
		ЛистГ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистГ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистГ.Г01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование ПИФ", "ЛистГ", "Г01010100", ЛистГ.УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01020200", Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистГ, ТаблицаОшибок, "ЛистГ", "Г01020100", Истина, Истина);
		РегистрационныеФормы.Проверка_ДоляУстКап("Г01030100,Г01030200,Г01030301,Г01030302", ЛистГ, ТаблицаОшибок, "ЛистГ", Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистД(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистД Цикл 
		ЛистД = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистД) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистД.Д01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование договора", "ЛистД", "Д01010100", ЛистД.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистД.Д01010200) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан регистрационный номер договора", "ЛистД", "Д01010200", ЛистД.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистД.Д01010300) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", "ЛистД", "Д01010300", ЛистД.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистД.Д01010401) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия нотариуса", "ЛистД", "Д01010401", ЛистД.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(ЛистД.Д01010402) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя нотариуса", "ЛистД", "Д01010402", ЛистД.УИД));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(ЛистД.Д01020100) Или ЗначениеЗаполнено(ЛистД.Д01020200) Тогда 
			Если ЗначениеЗаполнено(ЛистД.Д01030100) Или ЗначениеЗаполнено(ЛистД.Д01030200) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Сведения об уполномоченном управляющем – иностранном юридическом лице не указываются", "ЛистД", "Д01030100", ЛистД.УИД));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01020200", Истина, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01020100", Истина, Истина);
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистД, ТаблицаОшибок, "ЛистД", "Д01030100", Истина, Истина);
			Если Не ЗначениеЗаполнено(ЛистД.Д01030200) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер записи об аккредитации", "ЛистД", "Д01030200", ЛистД.УИД));
			КонецЕсли;
		КонецЕсли;
		
		РегистрационныеФормы.Проверка_ДоляУстКап("Д01040100,Д01040200,Д01040301,Д01040302", ЛистД, ТаблицаОшибок, "ЛистД", Истина);
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистЕ(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистЕ Цикл 
		ЛистЕ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистЕ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01010100,Е01010200,Е01010300") Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01010200", Истина, Истина);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01010100", Истина, Истина);
		КонецЕсли;
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01020100,Е01020200,Е01020300") Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01020100", Истина, Истина);
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01020200) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан номер записи об аккредитации", "ЛистЕ", "Е01020200", ЛистЕ.УИД));
			КонецЕсли;
		КонецЕсли;
		
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(ЛистЕ, "Е01030300,Е01030400,Е01031400,Е01031500,Е01031600,Е01030101,Е01030102,"
				+"Е01030103,Е01030500,Е01030600,Е01030700,Е01030800,Е01030900,Е01031000,Е01031100,Е01031200,Е01031301,Е01031302") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01030300", Ложь, Ложь);
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистЕ, ТаблицаОшибок, "ЛистЕ", "Е01031500", Ложь, Ложь);
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01030400) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан пол", "ЛистЕ", "Е01030400", ЛистЕ.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01031400) И Не ЗначениеЗаполнено(ЛистЕ.Е01031500) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана должность", "ЛистЕ", "Е01031400", ЛистЕ.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ЛистЕ.Е01030500) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата рождения", "ЛистЕ", "Е01030500", ЛистЕ.УИД));
			КонецЕсли;
			
			РегистрационныеФормы.Проверка_СвГражд("Е01030700,Е01030800", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
			РегистрационныеФормы.Проверка_УдЛичнФЛ("Е01030900,Е01031000,Е01031100,Е01031200", ЛистЕ, ТаблицаОшибок, "ЛистЕ", Истина);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистЖ(Данные, ТаблицаОшибок)
	ЛистЖ = Данные.ДанныеУведомления.ЛистЖ;
	Если Не ЗначениеЗаполнено(ЛистЖ.Ж01010100)
		Или Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(ЛистЖ.Ж01010100) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен / некорректно заполнен ОКВЭД", "ЛистЖ", "Ж01010100"));
	КонецЕсли;
	
	Инд = 0;
	Для Каждого Стр Из Данные.МногострочныеЧасти.МногострочнаяЧастьЖ010201 Цикл 
		Инд = Инд + 1;
		Если ЗначениеЗаполнено(Стр["Ж01020100"]) И Не УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКВЭДНаКорректность(Стр["Ж01020100"]) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Некорректно заполнен ОКВЭД", "ЛистЖ", "Ж01020100_" + Формат(Инд, "ЧГ=")));
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистИ(Данные, ТаблицаОшибок)
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.ЛистИ Цикл 
		ЛистИ = Элт.Значение;
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистИ) Тогда 
			Продолжить;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(ЛистИ.И01010100) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак заявителя", "ЛистИ", "И01010100", ЛистИ.УИД));
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01020200", Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01020100", Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(ЛистИ, ТаблицаОшибок, "ЛистИ", "И01030200", Ложь, Ложь);
		
		РегистрационныеФормы.Проверка_СвРожд("И01030300,И01030400", ЛистИ, ТаблицаОшибок, "ЛистИ");
		РегистрационныеФормы.Проверка_УдЛичнФЛ("И01030500,И01030600,И01030700,И01030800,И01030901,И01030902", ЛистИ, ТаблицаОшибок, "ЛистИ");
	КонецЦикла;
КонецПроцедуры

Функция ПроверитьДокументСВыводомВТаблицу_Форма2020_4(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку("СпискиВыбора2020_4",
		"СхемаВыгрузкиФорма2020_4", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_Лист1(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистА(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистБ(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистВ(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистГ(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистД(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистЕ(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистЖ(Данные, ТаблицаОшибок);
	ПроверитьДокументСВыводомВТаблицу_Форма2020_4_ЛистИ(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

#КонецОбласти

#Область ОбработкаАдресовФИАС

Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4(СоответствиеПоказателей, НазначениеАдреса)
	
	Если НазначениеАдреса = "МестоНахождения" Тогда
		СоответствиеПоказателей.Вставить("ПИ1030100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("ПД1030100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("П01030100", "КодРегиона");
		СоответствиеПоказателей.Вставить("П01030201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("П01030202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("П01030301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("П01030302", "Поселение");
		СоответствиеПоказателей.Вставить("П01030401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("П01030402", "НаселенныйПункт");
		
	ИначеЕсли НазначениеАдреса = "Адрес" Тогда
		СоответствиеПоказателей.Вставить("ПИ1040100", "ИдентификаторАдресногоОбъекта");
		СоответствиеПоказателей.Вставить("ПД1040100", "СтрокаАдресногоОбъекта");
		
		СоответствиеПоказателей.Вставить("П01040100", "КодРегиона");
		СоответствиеПоказателей.Вставить("П01040201", "МуниципальныйРайонВид");
		СоответствиеПоказателей.Вставить("П01040202", "МуниципальныйРайон");
		СоответствиеПоказателей.Вставить("П01040301", "ПоселениеВид");
		СоответствиеПоказателей.Вставить("П01040302", "Поселение");
		СоответствиеПоказателей.Вставить("П01040401", "НаселенныйПунктВид");
		СоответствиеПоказателей.Вставить("П01040402", "НаселенныйПункт");
		СоответствиеПоказателей.Вставить("П01040501", "ТерриторияТип");
		СоответствиеПоказателей.Вставить("П01040502", "Территория");
		СоответствиеПоказателей.Вставить("П01040601", "УлицаТип");
		СоответствиеПоказателей.Вставить("П01040602", "Улица");
		СоответствиеПоказателей.Вставить("П01040801", "ПомещениеВЗданииТип");
		СоответствиеПоказателей.Вставить("П01040802", "ПомещениеВЗданииНомер");
		СоответствиеПоказателей.Вставить("П01040901", "ПомещениеВКвартиреТип");
		СоответствиеПоказателей.Вставить("П01040902", "ПомещениеВКвартиреНомер");
		
		Здания = Новый Массив;
		Здания.Добавить("Здания");
		Здания.Добавить(Новый Структура("П01040701, П01040702", "ЗданиеТип", "ЗданиеНомер"));
		СоответствиеПоказателей.Вставить("П010407", Здания);
		
	Иначе
		ВызватьИсключение НСтр("ru = 'Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4():
			|вызов процедуры с непредусмотренным значением параметра';
			|en = 'Процедура ЗаполнитьСоответствиеРеквизитамАдреса_Форма2020_4():
			|вызов процедуры с непредусмотренным значением параметра'");
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПолучениеДанныхОтчета

Функция ПолучитьДанныеОтчета(Объект) Экспорт
	Результат = ПолучитьПустуюСтруктуруРезультата();
	ДанныеУведомления = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект, "ДанныеУведомления").Получить();
	ДанныеМногостраничныхРазделов = ДанныеУведомления.ДанныеМногостраничныхРазделов;
	
	Результат.УставныйКапитал = ДанныеУведомления.ДанныеУведомления.Лист001.П01030100;
	Для Каждого ЛистА Из ДанныеМногостраничныхРазделов.ЛистА Цикл
		Если ЗначениеЗаполнено(ЛистА.Значение.А01040100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистА.Значение.А01020000;
			НовСтр.Учредитель = ЛистА.Значение.А01030000;
			НовСтр.СуммаКапитала = ЛистА.Значение.А01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистБ Из ДанныеМногостраничныхРазделов.ЛистБ Цикл
		Если ЗначениеЗаполнено(ЛистБ.Значение.Б01040100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистБ.Значение.Б01030000;
			НовСтр.Учредитель = ЛистБ.Значение.Б01010000;
			НовСтр.СуммаКапитала = ЛистБ.Значение.Б01040100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистВ Из ДанныеМногостраничныхРазделов.ЛистВ Цикл
		Если ЗначениеЗаполнено(ЛистВ.Значение.В01070100) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистВ.Значение.В01020000;
			НовСтр.Учредитель = СокрЛП(ЛистВ.Значение.В01010100 + " " + ЛистВ.Значение.В01010200 + " " + ЛистВ.Значение.В01010300);
			НовСтр.СуммаКапитала = ЛистВ.Значение.В01070100;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистГ1 Из ДанныеМногостраничныхРазделов.ЛистГ1 Цикл
		Если ЗначениеЗаполнено(ЛистГ1.Значение.Г02010000) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.СуммаКапитала = ЛистГ1.Значение.Г02010000;
			Если ЛистГ1.Значение.Г01010100 = "1" Тогда
				НовСтр.Учредитель = "Российская Федерация";
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "2" Тогда
				НовСтр.Учредитель = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
			ИначеЕсли ЛистГ1.Значение.Г01010100 = "3" Тогда
				РегионСтр = РегламентированнаяОтчетностьВызовСервера.ПолучитьНазваниеРегионаПоКоду(ЛистГ1.Значение.Г01010200);
				НовСтр.Учредитель = ЛистГ1.Значение.Г01030000;
				Если ЗначениеЗаполнено(РегионСтр) Тогда
					НовСтр.Учредитель = НовСтр.Учредитель + " (" + РегионСтр + ")";
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЛистД Из ДанныеМногостраничныхРазделов.ЛистД Цикл
		Если ЗначениеЗаполнено(ЛистД.Значение.Д03010000) Тогда
			НовСтр = Результат.Учредители.Добавить();
			НовСтр.ИНН = ЛистД.Значение.Д02020000;
			НовСтр.Учредитель = ЛистД.Значение.Д01000000;
			НовСтр.СуммаКапитала = ЛистД.Значение.Д03010000;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
КонецФункции

Функция ПолучитьПустуюСтруктуруРезультата()
	ТЗ = Новый ТаблицаЗначений;
	
	Колонки = ТЗ.Колонки;
	Колонки.Добавить("ИНН", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("Учредитель", Новый ОписаниеТипов("Строка"));
	Колонки.Добавить("СуммаКапитала", Новый ОписаниеТипов("Число"));
	
	Возврат Новый Структура("УставныйКапитал,Учредители", Неопределено, ТЗ);
КонецФункции

#КонецОбласти

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт
	
	Возврат "";
	
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт
	
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	ПолноеОписаниеФормы = Результат.Добавить();
	ПолноеОписаниеФормы.ИмяФормы = "Форма2020_4";
	ПолноеОписаниеФормы.ОписаниеФормы = "В редакции приказа ФНС России от 31.08.2020 № ЕД-7-14/617@";
	ПолноеОписаниеФормы.ДатаНачала = '2020-11-25';
	ПолноеОписаниеФормы.ДатаКонца  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат Результат;
	
КонецФункции

Функция НовыйКонтейнерДляАвтозаполнения(ДанныеУведомления, ДанныеМногостраничныхРазделов, КонтейнерМСЧ)
	
	Контейнер = Новый Структура;
	Для Каждого КЗ Из ДанныеУведомления Цикл
		Контейнер.Вставить(КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(КЗ.Значение));
	КонецЦикла;
	
	Если ТипЗнч(КонтейнерМСЧ) = Тип("Структура") Тогда
		Для Каждого КЗ Из КонтейнерМСЧ Цикл
			Контейнер.Вставить(КЗ.Ключ, КЗ.Значение);
		КонецЦикла;
		
	Иначе
		// Многострочная часть формы Форма2014_1.
		Контейнер.Вставить("МногострочнаяЧасть1", КонтейнерМСЧ);
		
	КонецЕсли;
	
	СтруктураДерева = Новый Соответствие;
	Для Каждого КЗ Из ДанныеМногостраничныхРазделов Цикл
		Для Каждого Стр Из КЗ.Значение Цикл
			СтруктураДерева[Стр.Значение.УИД] = Новый Структура("Раздел, Данные", КЗ.Ключ, ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение));
		КонецЦикла;
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ДополнитьСлужебнымиСтруктурамиАдреса(ДанныеУведомления, ДанныеМногостраничныхРазделов);
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если КЗ.Значение.Данные.Свойство("УИДРодителя") Тогда
			Родитель = СтруктураДерева[КЗ.Значение.Данные.УИДРодителя];
			Если Не Родитель.Данные.Свойство(КЗ.Значение.Раздел) Тогда
				Родитель.Данные.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
			КонецЕсли;
			Родитель.Данные[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		ИначеЕсли Не Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер.Вставить(КЗ.Значение.Раздел, Новый СписокЗначений);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		КЗ.Значение.Данные.Удалить("УИД");
		КЗ.Значение.Данные.Удалить("УИДРодителя");
	КонецЦикла;
	
	Для Каждого КЗ Из СтруктураДерева Цикл
		Если Контейнер.Свойство(КЗ.Значение.Раздел) Тогда
			Контейнер[КЗ.Значение.Раздел].Добавить(КЗ.Значение.Данные);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
	
КонецФункции

Процедура ДобавитьДочерниеСтраницы(ВставляемыеДанные, ДанныеМногостраничныхРазделов)
	КУдалению = Новый Массив;
	
	Для Каждого КЗ Из ВставляемыеДанные Цикл
		Если ТипЗнч(КЗ.Значение) = Тип("СписокЗначений")
			И ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			
			Для Каждого Стр Из КЗ.Значение Цикл
				ДочерниеВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ДочерниеВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				ДочерниеВставляемыеДанные.Вставить("УИДРодителя", ВставляемыеДанные.УИД);
				ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ДочерниеВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ДочерниеВставляемыеДанные, ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
КонецПроцедуры

Процедура СформироватьДеревоСтраницПоДанным_Форма2020_4(ДеревоСтраниц, ДанныеМногостраничныхРазделов)
	
	Для Каждого СтрокаУровня1 Из ДеревоСтраниц.Строки Цикл
		Если СтрокаУровня1.Строки.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		// Добавление страниц многостраничного раздела.
		СтрокаОбразец = СтрокаУровня1.Строки[0];
		ДанныеСтраниц = ДанныеМногостраничныхРазделов[СтрокаОбразец.ИДНаименования];
		
		НомерСтраницы = 1;
		Для Каждого Стр Из ДанныеСтраниц Цикл
			СтрокаУровня2 = СтрокаУровня1.Строки.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаУровня2, СтрокаОбразец, , "Наименование, УИД");
			СтрокаУровня2.Наименование = "Стр. " + РегламентированнаяОтчетностьКлиентСервер.СтрЧГ0(НомерСтраницы);
			СтрокаУровня2.УИД = Стр.Значение.УИД;
			
			НомерСтраницы = НомерСтраницы + 1;
			
		КонецЦикла;
		
		Если СтрокаУровня1.Строки.Количество() > 1 Тогда
			// Были добавлены страницы из данных заполнения, исходная страница теперь лишняя.
			СтрокаУровня1.Строки.Удалить(0);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция СоздатьЗаполненноеУведомление_Форма2020_4(Параметры, СуществующийДокументСсылка = Неопределено)
	
	ИмяФормы = "Форма2020_4";
	
	Дерево = СформироватьДеревоСтраниц(ИмяФормы);
	ИмяОтчета = "РегламентированноеУведомлениеФормаР11001";
	
	ВходящийКонтейнер = Новый Структура("ИмяФормы, ДеревоСтраниц", "1."+ИмяОтчета+".1."+ИмяФормы, Дерево);
	РезультатКонтейнер1 = Новый Структура;
	УведомлениеОСпецрежимахНалогообложения.СформироватьКонтейнерДанныхУведомления(ВходящийКонтейнер, РезультатКонтейнер1, Истина);
	РезультатКонтейнер2 = Новый Структура;
	ИнициализироватьМногострочныеЧасти(ИмяФормы, ВходящийКонтейнер, РезультатКонтейнер2);
	
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("Организация", Параметры.Организация);
	ПараметрыОтчета.Вставить("ПараметрыЗаполнения", Параметры.ДополнительныеПараметры);
	ПараметрыОтчета.Вставить("ИмяФормы", ИмяФормы);
	
	Контейнер = НовыйКонтейнерДляАвтозаполнения(РезультатКонтейнер1.ДанныеУведомления,
		РезультатКонтейнер1.ДанныеМногостраничныхРазделов, РезультатКонтейнер2);
	РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(ИмяОтчета, ИмяФормы, ПараметрыОтчета, Контейнер);
	
	КУдалению = Новый Массив;
	Для Каждого КЗ Из РезультатКонтейнер1.ДанныеМногостраничныхРазделов Цикл
		КЗ.Значение.Очистить();
	КонецЦикла;
	
	Для Каждого КЗ Из Контейнер Цикл
		Если РезультатКонтейнер1.ДанныеУведомления.Свойство(КЗ.Ключ) Тогда
			ЗаполнитьЗначенияСвойств(РезультатКонтейнер1.ДанныеУведомления[КЗ.Ключ], КЗ.Значение);
		ИначеЕсли РезультатКонтейнер1.ДанныеМногостраничныхРазделов.Свойство(КЗ.Ключ) Тогда
			Для Каждого Стр Из КЗ.Значение Цикл
				ВставляемыеДанные = ОбщегоНазначения.СкопироватьРекурсивно(Стр.Значение);
				ВставляемыеДанные.Вставить("УИД", Новый УникальныйИдентификатор);
				РезультатКонтейнер1.ДанныеМногостраничныхРазделов[КЗ.Ключ].Добавить(ВставляемыеДанные);
				ДобавитьДочерниеСтраницы(ВставляемыеДанные, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
				КУдалению.Добавить(КЗ.Ключ);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Элт Из КУдалению Цикл
		ВставляемыеДанные.Удалить(Элт);
	КонецЦикла;
	
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		РезультатКонтейнер2[КЗ.Ключ] = Контейнер[КЗ.Ключ];
	КонецЦикла;
	
	СформироватьДеревоСтраницПоДанным_Форма2020_4(Дерево, РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	
	Если ТипЗнч(СуществующийДокументСсылка) = Тип("Структура")
	   И СуществующийДокументСсылка.Свойство("Ссылка")
	   И ЗначениеЗаполнено(СуществующийДокументСсылка.Ссылка) Тогда
		НовыйДок = СуществующийДокументСсылка.Ссылка.ПолучитьОбъект();
		
	ИначеЕсли ТипЗнч(СуществующийДокументСсылка) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения")
	        И ЗначениеЗаполнено(СуществующийДокументСсылка) Тогда
		НовыйДок = СуществующийДокументСсылка.ПолучитьОбъект();
		
	Иначе
		НовыйДок = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		НовыйДок.Организация = Параметры.Организация;
		НовыйДок.ИмяОтчета = ИмяОтчета;
		НовыйДок.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ФормаР11001;
		
	КонецЕсли;
	
	ДанныеОтчета = Новый Структура;
	ДанныеОтчета.Вставить("ДанныеУведомления", РезультатКонтейнер1.ДанныеУведомления);
	ДанныеОтчета.Вставить("ДанныеМногостраничныхРазделов", РезультатКонтейнер1.ДанныеМногостраничныхРазделов);
	ДанныеОтчета.Вставить("ДеревоСтраниц", Дерево);
	
	ДанныеОтчета.Вставить("МногострочныеЧасти", Новый Структура);
	Для Каждого КЗ Из РезультатКонтейнер2 Цикл
		ДанныеОтчета.МногострочныеЧасти.Вставить(
			КЗ.Ключ, РезультатКонтейнер2[КЗ.Ключ]);
	КонецЦикла;
	
	ДатаСоставления = Неопределено;
	Если Параметры.ДополнительныеПараметры.Свойство("ДатаСоставления", ДатаСоставления)
	   И ЗначениеЗаполнено(ДатаСоставления) Тогда
		НовыйДок.Дата = ДатаСоставления;
	Иначе
		НовыйДок.Дата = ОбщегоНазначения.ТекущаяДатаПользователя();
	КонецЕсли;
	
	НовыйДок.ДатаПодписи = НовыйДок.Дата;
	НовыйДок.ИмяФормы = ИмяФормы;
	НовыйДок.ДанныеУведомления = Новый ХранилищеЗначения(ДанныеОтчета);
	НовыйДок.Записать();
	
	Возврат НовыйДок.Ссылка;
	
КонецФункции

Функция СведенияИзФормРегистрации(ИмяФормы, ДанныеУведомления) Экспорт
	Результат = Новый Структура;
	Результат.Вставить("КодЗаявления", "Р11001");
	Данные = ДанныеУведомления.Получить();
	
	Лист001 = Данные.ДанныеУведомления.Лист001;
	Результат.Вставить("ОГРН", "");
	Результат.Вставить("НаимЮЛПолн", Лист001.П01010100);
	
	Если ИмяФормы = "Форма2014_1" Тогда 
		Результат.Вставить("Заявители", Новый Массив);
		Для Каждого ЛистН Из Данные.ДанныеМногостраничныхРазделов.ЛистН Цикл 
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистН.Значение) Тогда 
				Продолжить;
			КонецЕсли;
			
			СвЗаяв = Новый Структура;
			СвЗаяв.Вставить("Фамилия", ЛистН.Значение.Н04010100);
			СвЗаяв.Вставить("Имя", ЛистН.Значение.Н04010200);
			СвЗаяв.Вставить("Отчество", ЛистН.Значение.Н04010300);
			СвЗаяв.Вставить("ЭлектроннаяПочта", ЛистН.Значение.Н04060200);
			
			Результат.Заявители.Добавить(СвЗаяв);
		КонецЦикла;
	ИначеЕсли ИмяФормы = "Форма2020_4" Тогда
		Результат.Вставить("Заявители", Новый Массив);
		Для Каждого ЛистИ Из Данные.ДанныеМногостраничныхРазделов.ЛистИ Цикл 
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(ЛистИ.Значение) Тогда 
				Продолжить;
			КонецЕсли;
			
			СвЗаяв = Новый Структура;
			СвЗаяв.Вставить("Фамилия", ЛистИ.Значение.И01030101);
			СвЗаяв.Вставить("Имя", ЛистИ.Значение.И01030102);
			СвЗаяв.Вставить("Отчество", ЛистИ.Значение.И01030103);
			СвЗаяв.Вставить("ЭлектроннаяПочта", ЛистИ.Значение.И01040100);
			
			Результат.Заявители.Добавить(СвЗаяв);
		КонецЦикла;
	КонецЕсли;
	
	Возврат Результат;
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2020_4" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2020_4"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1111501_5.03000_09.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

#КонецОбласти

#КонецЕсли
