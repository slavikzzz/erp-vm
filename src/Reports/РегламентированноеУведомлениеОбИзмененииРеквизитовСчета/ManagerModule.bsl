#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.КНД = "1120106";
	Стр.ВерсияФормата = "5.06";

	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 26.04.2024 № СД-7-14/349@";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.УведомлениеОбИзмененииРеквизитовСчета;
	Стр.ДатаНачала = '20240701';
	Стр.ДатаКонца = '20991231';
	
	Возврат Результат;
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2024_1" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2024_1"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1120106_5.06000_05.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2024_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2024_1" Тогда
		Возврат СформироватьСписокЛистовФорма2024_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2024_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "UT_UVSCHIZM";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННФЛ", Ложь, Ложь);
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ)Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Ложь);
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации / ФИО физического лица", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Титульная.НомКорр) И Не ЗначениеЗаполнено(Титульная.ИдФайлКорр) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан идентификатор первичного сообщения", "Титульная", "ИдФайлКорр"));
	КонецЕсли;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Истина, Титульная, ТаблицаОшибок);
		Если Титульная.ПризРез <> "1" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Для юридического лица признак резидента должен быть равен 1", "Титульная", "ПризРез"));
		КонецЕсли;
	Иначе
		Если Титульная.ПризРез <> "2" И Титульная.ПризРез <> "3" И Титульная.ПризРез <> "4" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Для физического лица признак резидента должен быть равен 2,3 или 4", "Титульная", "ПризРез"));
		КонецЕсли;
		Если ЗначениеЗаполнено(Титульная.ИНН) Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Истина, Ложь);
		Иначе
			УведомлениеОСпецрежимахНалогообложенияСлужебный.Проверка_УдЛичнФЛ("КодВидДок,СерНомДок,ДатаДок,ВыдДок", Титульная, ТаблицаОшибок, "Титульная", Истина);
			Если Не ЗначениеЗаполнено(Титульная.ДатаРожд) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата рождения", "Титульная", "ДатаРожд"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Титульная.МестоРожд) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано место рождения", "Титульная", "МестоРожд"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, 
		"Титульная", Титульная.ПРИЗНАК_НП_ПОДВАЛ = "1" Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2");
	Если Не ЗначениеЗаполнено(Титульная.НаимДок) И Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПризИзмен) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак уведомления об изменении", "Титульная", "ПризИзмен"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПризУвед) 
		И (Титульная.ПризРез = "2" Или Титульная.ПризРез = "3" Или Титульная.ПризРез = "4") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак уведомления для резидента – физического лица", "Титульная", "ПризУвед"));
	КонецЕсли;
	
	СвСчет = Данные.ДанныеУведомления.СвСчет;
	Если Не ЗначениеЗаполнено(СвСчет.ПрФинОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак финансовой организации", "СвСчет", "ПрФинОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СвСчет.НаимБанкИно) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование", "СвСчет", "НаимБанкИно"));
	ИначеЕсли Не СоответствиеФормату(СвСчет.НаимБанкИно, 1, 1000, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указано наименование", "СвСчет", "НаимБанкИно"));
	КонецЕсли;
	Если (СвСчет.ПрФинОрг = "1" И Не ЗначениеЗаполнено(СвСчет.CODE)) 
		Или Не СоответствиеФормату(СвСчет.CODE, 3, 25, ЛатинскиеСимволыИЦифры()) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан SWIFT/БИК", "СвСчет", "CODE"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СвСчет.АдрТекст) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан адрес", "СвСчет", "АдрТекст"));
	ИначеЕсли Не СоответствиеФормату(СвСчет.АдрТекст, 1, 255, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан адрес", "СвСчет", "АдрТекст"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(СвСчет, ТаблицаОшибок, "СвСчет", "КодСтр", Истина);
	Если Титульная.ПризРез = "2" Или Титульная.ПризРез = "3" Или Титульная.ПризРез = "4" Тогда 
		Если Не ЗначениеЗаполнено(СвСчет.ПризСчет) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак личного (совместного) использования счета (вклада)", "СвСчет", "ПризСчет"));
		КонецЕсли;
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СвСчет.НомСчет) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер счета", "СвСчет", "НомСчет"));
	ИначеЕсли Не СоответствиеФормату(СвСчет.НомСчет, 1, 34, ЛатинскиеСимволыИЦифры()) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан номер счета", "СвСчет", "НомСчет"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(СвСчет.ДатаОткрСчет) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата открытия счета", "СвСчет", "ДатаОткрСчет"));
	КонецЕсли;
	
	СвСчетДо = Данные.ДанныеУведомления.СвСчетДо;
	Если Титульная.ПризИзмен = "2" Или Титульная.ПризИзмен = "3"
		Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СвСчетДо, "ПрФинОрг,НаимБанкИно,CODE,НомерНПИнГос,ДатаИзмБанк,АдрТекст,КодСтр") Тогда 
		
		Если Не ЗначениеЗаполнено(СвСчетДо.ПрФинОрг) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак финансовой организации", "СвСчетДо", "ПрФинОрг"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СвСчетДо.НаимБанкИно) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование", "СвСчетДо", "НаимБанкИно"));
		ИначеЕсли Не СоответствиеФормату(СвСчетДо.НаимБанкИно, 1, 1000, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указано наименование", "СвСчетДо", "НаимБанкИно"));
		КонецЕсли;
		Если (СвСчетДо.ПрФинОрг = "1" И Не ЗначениеЗаполнено(СвСчетДо.CODE)) 
			Или Не СоответствиеФормату(СвСчетДо.CODE, 3, 25, ЛатинскиеСимволыИЦифры()) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан SWIFT/БИК", "СвСчетДо", "CODE"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СвСчетДо.АдрТекст) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан адрес", "СвСчетДо", "АдрТекст"));
		ИначеЕсли Не СоответствиеФормату(СвСчетДо.АдрТекст, 1, 255, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан адрес", "СвСчетДо", "АдрТекст"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(СвСчетДо, ТаблицаОшибок, "СвСчетДо", "КодСтр", Истина);
		Если Не ЗначениеЗаполнено(СвСчетДо.НомСчет) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер счета", "СвСчетДо", "НомСчет"));
		ИначеЕсли Не СоответствиеФормату(СвСчетДо.НомСчет, 1, 34, ЛатинскиеСимволыИЦифры()) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан номер счета", "СвСчетДо", "НомСчет"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СвСчетДо.ДатаИзмБанк) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата изменения сведений ", "СвСчетДо", "ДатаИзмБанк"));
		КонецЕсли;
	КонецЕсли;
	Если Титульная.ПризИзмен = "1" Или Титульная.ПризИзмен = "3"
		Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СвСчетДо, "НомСчет,ПризСчетДоИзм,ДатаОткрСчет,ДатаИзмНомСчет,ДатаДог,НомДог,ИННЮЛ") Тогда 
		
		Если Не ЗначениеЗаполнено(СвСчетДо.НомСчет) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер счета", "СвСчетДо", "НомСчет"));
		ИначеЕсли Не СоответствиеФормату(СвСчетДо.НомСчет, 1, 34, ЛатинскиеСимволыИЦифры()) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан номер счета", "СвСчетДо", "НомСчет"));
		КонецЕсли;
		Если Титульная.ПризРез = "2" Или Титульная.ПризРез = "3" Или Титульная.ПризРез = "4" Тогда 
			Если Не ЗначениеЗаполнено(СвСчетДо.ПризСчетДоИзм) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак личного (совместного) использования счета (вклада)", "СвСчетДо", "ПризСчетДоИзм"));
			КонецЕсли;
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СвСчетДо.ДатаОткрСчет) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата открытия счета", "СвСчетДо", "ДатаОткрСчет"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СвСчетДо.ДатаИзмНомСчет) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата изменения номера счета", "СвСчетДо", "ДатаИзмНомСчет"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(СвСчетДо, ТаблицаОшибок, "СвСчетДо", "ИННЮЛ", Ложь, Истина);
	КонецЕсли;
	
	Если Титульная.ПризРез = "1" И РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		СвЮЛ = Данные.ДанныеУведомления.СвЮЛ;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СвЮЛ, "НаимОрг,СтрРег,ДатаРегИО,РегНомер,КодНПРег,ИННРФ") Тогда 
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(СвЮЛ, ТаблицаОшибок, "СвЮЛ", "СтрРег", Истина);
			Если Не ЗначениеЗаполнено(СвЮЛ.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование организации", "СвЮЛ", "НаимОрг"));
			ИначеЕсли Не СоответствиеФормату(СвЮЛ.НаимОрг, 1, 1000, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указано наименование организации", "СвЮЛ", "НаимОрг"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СвЮЛ.ДатаРегИО) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана дата регистрации", "СвЮЛ", "ДатаРегИО"));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(СвЮЛ, ТаблицаОшибок, "СвЮЛ", "ИННРФ", Ложь, Истина);
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СвЮЛ, "ПрЮЛРез,НаимМГКРус,НаимМГКЛат") Тогда 
			Если Не ЗначениеЗаполнено(СвЮЛ.ПрЮЛРез) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак юридического лица – резидента", "СвЮЛ", "ПрЮЛРез"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СвЮЛ.НаимМГКРус) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование международной группы компании (рус)", "СвЮЛ", "НаимМГКРус"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СвЮЛ.НаимМГКЛат) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование международной группы компании (лат)", "СвЮЛ", "НаимМГКЛат"));
			ИначеЕсли Не СоответствиеФормату(СвЮЛ.НаимМГКЛат, 1, 1000, ЛатинскиеСимволыИЦифры() + ДопустимыеСимволыВНазвании()) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Неправильно указано наименование организации (лат)", "СвЮЛ", "НаимМГКЛат"));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;

	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2024_1", "СхемаВыгрузкиФорма2024_1",
		Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("НомКорр", ?(ЗначениеЗаполнено(Данные.ДанныеУведомления.Титульная.НомКорр), Формат(Данные.ДанныеУведомления.Титульная.НомКорр, "ЧН=0"), "0"));
	ОсновныеСведения.Вставить("ПризРез", Данные.ДанныеУведомления.Титульная.ПризРез);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	ЗаполнитьДанными(Объект, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ЗаполнитьДанными(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	НомКорр = ?(ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр), Формат(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр, "ЧЦ=2; ЧН=00; ЧВН="), "00");
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2017_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(НомКорр, "НомКорр", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист001"], НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2017_1_Лист001"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2017_1_Лист002"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2019_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	НомКорр = ?(ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр),
		Формат(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр, "ЧЦ=2; ЧН=00; ЧВН="), "00");
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2019_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(НомКорр, "НомКорр", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Для ИндСтрИтер = 1 По 2 Цикл 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист00" + ИндСтрИтер], НомСтр,
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2019_1_Лист00" + ИндСтрИтер), ПечатнаяФорма, ИННКПП);
		ВсеВалюты = Новый Соответствие;
		Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД["МнгСтр" + ИндСтрИтер] Цикл 
			Если ЗначениеЗаполнено(Стр.КодВалСчет) Тогда 
				ВсеВалюты.Вставить(Стр.КодВалСчет)
			КонецЕсли;
		КонецЦикла;
		
		Инд = 0;
		Для Каждого КЗ Из ВсеВалюты Цикл 
			Инд = Инд + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(КЗ.Ключ), "КодВалСчет" + Инд, ПечатнаяФорма.Области, "-");
			Если Инд = 8 Тогда 
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Пока Инд < 8 Цикл
			Инд = Инд + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("---", "КодВалСчет" + Инд, ПечатнаяФорма.Области, "-");
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	НомКорр = ?(ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр), Формат(СтруктураПараметров.ДанныеУведомления.Титульная.НомКорр, "ЧЦ=2; ЧН=00; ЧВН="), "00");
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, "Печать_Титульная_2024_1", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(НомКорр, "НомКорр", ПечатнаяФорма.Области, "-");
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["СвСчет"],
		НомСтр, "Печать_СвСчет_2024_1", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["СвСчетДо"],
		НомСтр, "Печать_СвСчетДо_2024_1", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["СвЮЛ"],
			НомСтр, "Печать_СвЮЛ_2024_1", ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Функция ЛатинскиеСимволыИЦифры()
	Возврат "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789";
КонецФункции

Функция ДопустимыеСимволыВНазвании()
	Возврат "!""` @#№$%&'()[]<>{}*+~=_-.,:;/|\^?";
КонецФункции

Функция СоответствиеФормату(СтрокаДляПроверки, Мин, Макс, ДопустимыеСимволы)
	Если СтрДлина(СтрокаДляПроверки) > Макс
		Или (ЗначениеЗаполнено(СтрокаДляПроверки) И СтрДлина(СтрокаДляПроверки) < Мин) Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	
	Для Инд = 1 По СтрДлина(СтрокаДляПроверки) Цикл 
		Если СтрНайти(ДопустимыеСимволы, Сред(СтрокаДляПроверки, Инд, 1)) = 0 Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

#КонецОбласти
#КонецЕсли
