#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Выполняет выгрузку отчета в XML
// Используется в 1С:Финотчетность
//
// Параметры:
//
// Возвращаемое значение:
//
//
Функция УниверсальнаяВыгрузка(Параметры) Экспорт
	
	СохраненныйОтчет = Параметры.СохраненныйОтчет;
	ИсточникОтчета = Параметры.ИсточникОтчета;
	ВыбраннаяФорма = Параметры.ВыбраннаяФорма;
	
	Результат = Новый Структура("ТаблицаСообщений");
	
	Организация = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СохраненныйОтчет, "Организация");
	Период = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СохраненныйОтчет, "Дата");
	РеквизитыФормы = Отчеты.РегламентированныйОтчет3НДФЛ.РеквизитыСохраненногоОтчета(СохраненныйОтчет, ВыбраннаяФорма);
	
	ПараметрыВыгрузки = Отчеты.РегламентированныйОтчет3НДФЛ.ПараметрыВыгрузки(ВыбраннаяФорма, РеквизитыФормы.ДанныеОтчета.Титульный);
	
	Если Не Отчеты.РегламентированныйОтчет3НДФЛ.ВыгрузкаВозможна(РеквизитыФормы) Тогда
		Результат.ТаблицаСообщений = РеквизитыФормы.ТаблицаСообщений;
		Возврат Результат;
	КонецЕсли;
	
	СтруктураРеквизитовФормы = Отчеты.РегламентированныйОтчет3НДФЛ.СтруктураРеквизитовФормы(
		Организация,
		Период,
		ВыбраннаяФорма);
	
	СтруктураПоказателей = Отчеты.РегламентированныйОтчет3НДФЛ.СформироватьСтруктуруПоказателей(
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СохраненныйОтчет, "ДанныеОтчета"),
		ВыбраннаяФорма);
	
	ДеревоВыгрузки = Отчеты.РегламентированныйОтчет3НДФЛ.ИзвлечьСтруктуруXML(ВыбраннаяФорма);
	Отчеты.РегламентированныйОтчет3НДФЛ.ЗаполнитьДаннымиДеревоВыгрузки(ДеревоВыгрузки, ПараметрыВыгрузки, РеквизитыФормы);
	
	Если Не Отчеты.РегламентированныйОтчет3НДФЛ.ПроверитьДанные(ДеревоВыгрузки, РеквизитыФормы) Тогда
		Результат.ТаблицаСообщений = РеквизитыФормы.ТаблицаСообщений;
		Возврат Результат;
	КонецЕсли;
	
	КодировкаФайлаВыгрузки = "windows-1251";
	
	ТекстФайлаВыгрузки = Отчеты.РегламентированныйОтчет3НДФЛ.ВыгрузитьДеревоВXML(
		ДеревоВыгрузки,
		ПараметрыВыгрузки,
		КодировкаФайлаВыгрузки);
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("xml");
	ЗаписьТекста = Новый ЗаписьТекста(ИмяВременногоФайла, КодировкаФайлаВыгрузки);
	ЗаписьТекста.Записать(ТекстФайлаВыгрузки);
	ЗаписьТекста.Закрыть();
	ЗаписьТекста = Неопределено;
	
	ФайлВыгрузки = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлВыгрузки, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	Параметры.РезультатВыгрузки.ИмяФайлаВыгрузки = СтрШаблон("%1.xml", ПараметрыВыгрузки.ИдФайл);
	Параметры.РезультатВыгрузки.АдресФайлаВыгрузки = АдресВоВременномХранилище;
	Параметры.РезультатВыгрузки.КодировкаФайлаВыгрузки = КодировкаФайлаВыгрузки;
	Параметры.РезультатВыгрузки.РеглОтчетВыгружен = Истина;
	
	Для Каждого ТекущаяОшибка Из РеквизитыФормы.ТаблицаСообщений Цикл
		Параметры.РезультатВыгрузки.Ошибки.Добавить(ТекущаяОшибка.Описание);
	КонецЦикла;
	
	Параметры.РезультатВыгрузки.ТаблицаСообщений = РеквизитыФормы.ТаблицаСообщений;
	Результат.ТаблицаСообщений = РеквизитыФормы.ТаблицаСообщений;
	
	Возврат Результат;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеРегламентированногоОтчета

// Для единообразия с иной отчетностью БРО, в которой программный интерфейс в модуле объекта.
//
Процедура СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы) Экспорт
	
	Перем Организация, Период;
	
	Если СтруктураРеквизитовФормы <> Неопределено Тогда
		СтруктураРеквизитовФормы.Свойство("Организация", Организация);
		СтруктураРеквизитовФормы.Свойство("Период", Период);
	КонецЕсли;
	
	СтруктураРеквизитовФормы = Отчеты.РегламентированныйОтчет3НДФЛ.СтруктураРеквизитовФормы(Организация, Период, ИмяФормы, СтруктураРеквизитовФормы);
	
	// ПроцессыОбработкиДокументов
	//
	СтруктураРеквизитовФормы.Вставить("ПустаяСсылкаНаРегламентированныйОтчет",
		Документы.РегламентированныйОтчет.ПустаяСсылка());
	//
	// ПроцессыОбработкиДокументов
	
КонецПроцедуры

#КонецОбласти

#Область ФормированиеПечатногоБланка

Функция ПечатныйБланк(ПараметрыПечати) Экспорт
	
	Перем СтруктураРеквизитовФормы;
	Перем ДанныеРазделов;
	Перем ВидПечати;
	Перем ДеревоВыбранныхСтраниц;
	
	ИмяФормы = ПараметрыПечати.ВыбраннаяФорма;
	
	ПечатныйБланкФормируетсяВФорматеPDF = Ложь;
	
	Если Не ПараметрыПечати.Свойство("СтруктураРеквизитовФормы", СтруктураРеквизитовФормы) Тогда
		
		СтруктураРеквизитовФормы = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыПечати.СохраненныйОтчет, "Организация, ДатаОкончания");
		СтруктураРеквизитовФормы.Вставить("Период", КонецДня(СтруктураРеквизитовФормы.ДатаОкончания));
		СформироватьСтруктуруРеквизитовФормы(ИмяФормы, СтруктураРеквизитовФормы);
		ПараметрыПечати.Свойство("СохраненныйОтчет", СтруктураРеквизитовФормы.мСохраненныйДок);
		
	КонецЕсли;
	
	Если Не ПараметрыПечати.Свойство("ДеревоВыбранныхСтраниц", ДеревоВыбранныхСтраниц) Тогда
		ДеревоВыбранныхСтраниц = ПараметрыПечати.СохраненныйОтчет.ДеревоНастройкиСтраниц.Получить();
		ПечатныйБланкФормируетсяВФорматеPDF = Истина;
	КонецЕсли;
	
	Если Не ПараметрыПечати.Свойство("ВидПечати", ВидПечати) Тогда
		ВидПечати = "";
	КонецЕсли;

	ИменаМногостраничныхРазделов = ИменаМногостраничныхРазделов(ИмяФормы);
	Если Не ПараметрыПечати.Свойство("ДанныеРазделов", ДанныеРазделов) Тогда
		ДанныеРазделов = Отчеты.РегламентированныйОтчет3НДФЛ.ДанныеСохраненногоОтчета(
			ПараметрыПечати.СохраненныйОтчет,
			СтруктураРеквизитовФормы.мВыбраннаяФорма);
	КонецЕсли;
	
	ОбщиеРеквизитыРазделов = ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, ДанныеРазделов.Титульный);
	
	Для Каждого СтраницаОтчета Из ДеревоВыбранныхСтраниц.Строки Цикл
	
		Если СтраницаОтчета.ВыводНаПечать = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		СтруктураПараметров.Вставить("НаименованиеЛиста",  СтраницаОтчета.Представление);
		СтруктураПараметров.Вставить("ОриентацияЛиста",    СтраницаОтчета.ОриентацияСтраницы);
		СтруктураПараметров.Вставить("ИмяСтраницы",        СтраницаОтчета.ИмяСтраницы);
		Структурапараметров.Вставить("ИмяОбластиТаблПоля", СтраницаОтчета.ИмяОбластиТабличногоПоля);
		Структурапараметров.Вставить("ВидПечати",		   ВидПечати);

		Если ИменаМногостраничныхРазделов.Найти(СтраницаОтчета.ИмяСтраницы) <> Неопределено Тогда
			
			ДанныеРазделаДляПечати = Новый Структура;
			Для Каждого Страница Из ДанныеРазделов[СтраницаОтчета.ИмяСтраницы] Цикл
				
				ДанныеРазделаДляПечати.Вставить(СтраницаОтчета.ИмяСтраницы,
					?(ТипЗнч(Страница.Данные) = Тип("СписокЗначений"), Страница.Данные[0].Значение, Страница.Данные));
				
				ИдГруппы = ИдентификаторГруппыПоИмениСтраницы(СтруктураПараметров.ИмяСтраницы, СтруктураРеквизитовФормы);
				Если ИдГруппы <> Неопределено Тогда
					
					Если ТипЗнч(Страница.ДанныеДопСтрок) = Тип("СписокЗначений") Тогда
						Если Страница.ДанныеДопСтрок.Количество() > 0 Тогда
							ДанныеРазделаДляПечати.Вставить(ИдГруппы, Страница.ДанныеДопСтрок[0].Значение);
						КонецЕсли;
					Иначе
						ДанныеРазделаДляПечати.Вставить(ИдГруппы, Страница.ДанныеДопСтрок);
					КонецЕсли;
					
				КонецЕсли;
					
				ВывестиНаПечатьЛист(ИмяФормы, СтруктураПараметров, ОбщиеРеквизитыРазделов, СтруктураРеквизитовФормы, ДанныеРазделаДляПечати);

			КонецЦикла;
			
		Иначе
		
			ВывестиНаПечатьЛист(ИмяФормы, СтруктураПараметров, ОбщиеРеквизитыРазделов, СтруктураРеквизитовФормы, ДанныеРазделов);
			
		КонецЕсли;
	
	КонецЦикла;
	
	РегламентированнаяОтчетностьКлиентСервер.ПроставлениеНомеровЛистов(
		СтруктураРеквизитовФормы, , СтруктураРеквизитовФормы.СписокПечатаемыхЛистов);
	
	Если Не ПечатныйБланкФормируетсяВФорматеPDF Тогда
		Возврат "";
	КонецЕсли;
	
	ПакетОтображаемыхДокументов = Новый ПакетОтображаемыхДокументов;
	
	Для Каждого Лист Из СтруктураРеквизитовФормы.СписокПечатаемыхЛистов Цикл
	
		ПакетОтображаемыхДокументов.Состав.Добавить(Лист.Значение[0]);
	
	КонецЦикла;
	
	ИмяВременногоФайла = ПолучитьИмяВременногоФайла("pdf");
	
	ПакетОтображаемыхДокументов.ЗаписатьФайлДляПечати(ИмяВременногоФайла);
	
	ФайлПечатногоБланка = Новый ДвоичныеДанные(ИмяВременногоФайла);
	
	АдресВоВременномХранилище = ПоместитьВоВременноеХранилище(ФайлПечатногоБланка, Новый УникальныйИдентификатор);
	
	УдалитьФайлы(ИмяВременногоФайла);
	
	ПредставлениеПериода = ПредставлениеПериода(НачалоДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаНачала),
		КонецДня(СтруктураРеквизитовФормы.мСохраненныйДок.ДатаОкончания),
		"ФП = Истина");
	
	ИмяФайлаПечатногоБланка = СтрШаблон(НСтр("ru = '%1 за %2 (%3).pdf';
											|en = '%1 за %2 (%3).pdf'"),
		СтруктураРеквизитовФормы.НаименованиеОтчета,
		ПредставлениеПериода,
		СтруктураРеквизитовФормы.мСохраненныйДок.Организация);
	
	ПечатныйБланк = Новый Структура;
	ПечатныйБланк.Вставить("АдресПечатногоБланка", АдресВоВременномХранилище);
	ПечатныйБланк.Вставить("ИмяФайлаПечатногоБланка",
		ОбщегоНазначенияКлиентСервер.ЗаменитьНедопустимыеСимволыВИмениФайла(ИмяФайлаПечатногоБланка));
	
	Возврат ПечатныйБланк;
	
КонецФункции

Функция ИменаМногостраничныхРазделов(ИмяФормы)
	
	ИменаМногостраничныхРазделов = Новый Массив;
	
	Если Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяСтруктураРазделовФормы2023(ИмяФормы) Тогда
		
		ИменаМногостраничныхРазделов2023(ИменаМногостраничныхРазделов);
		
	ИначеЕсли ИмяФормы = "ФормаОтчета2022кв1" Тогда
		
		ИменаМногостраничныхРазделов2022(ИменаМногостраничныхРазделов);
		
	Иначе
		
		ИменаМногостраничныхРазделов2021(ИменаМногостраничныхРазделов);
		
	КонецЕсли;
	
	Возврат ИменаМногостраничныхРазделов;
	
КонецФункции

Процедура ЗаполнитьМассивСимволами(МассивРеквизита, НаборРеквизитов, ИмяРеквизита, ЗначениеРеквизита)
	
	Перем РазбиваемаяСтрока;
	
	Если Не НаборРеквизитов.Свойство(ИмяРеквизита, РазбиваемаяСтрока) Тогда
		Возврат;
	КонецЕсли;
	ЗначениеРеквизита = РазбиваемаяСтрока;

	ДлинаРеквизита = СтрДлина(РазбиваемаяСтрока);
	Для НомерСимвола = 1 По МассивРеквизита.Количество() Цикл
		МассивРеквизита[НомерСимвола - 1] = ?(НомерСимвола > ДлинаРеквизита, "-", Сред(РазбиваемаяСтрока, НомерСимвола, 1));
	КонецЦикла;
	
КонецПроцедуры

Функция ПолучитьОбщиеРеквизитыСТитульногоЛиста(ИмяФормы, СтруктураДанныхТитульный)
	
	ОбщиеРеквизитыРазделов = Новый Структура;
	
	Если Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяОсновнаяФорма2022(ИмяФормы) Тогда
		ОбщиеРеквизитыСТитульногоЛиста2022(ОбщиеРеквизитыРазделов, СтруктураДанныхТитульный);
	Иначе
		ОбщиеРеквизитыСТитульногоЛиста2021(ОбщиеРеквизитыРазделов, СтруктураДанныхТитульный);
	КонецЕсли;
	
	Возврат ОбщиеРеквизитыРазделов;
	
КонецФункции

Функция ИдентификаторГруппыПоИмениСтраницы(ИмяСтраницы, СтруктураРеквизитовФормы)
	
	ВыбраннаяФорма = СтруктураРеквизитовФормы.мВыбраннаяФорма;
	
	Если ВыбраннаяФорма = "ФормаОтчета2025кв1" Тогда
		
		ИдГруппы = ИдентификаторГруппыПоИмениСтраницы2025(ИмяСтраницы, СтруктураРеквизитовФормы);
		
	ИначеЕсли Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяСтруктураРазделовФормы2023(ВыбраннаяФорма) Тогда
		
		ИдГруппы = ИдентификаторГруппыПоИмениСтраницы2023(ИмяСтраницы, СтруктураРеквизитовФормы);
		
	ИначеЕсли ВыбраннаяФорма = "ФормаОтчета2022кв1" Тогда
		
		ИдГруппы = ИдентификаторГруппыПоИмениСтраницы2022(ИмяСтраницы, СтруктураРеквизитовФормы);
		
	Иначе
		
		ИдГруппы = ИдентификаторГруппыПоИмениСтраницы2021(ИмяСтраницы, СтруктураРеквизитовФормы);
		
	КонецЕсли;
	
	Возврат ИдГруппы;
	
КонецФункции

Процедура ВывестиНаПечатьЛист(ИмяФормы,
							  СтруктураПараметров,
							  ОбщиеРеквизитыРазделов,
							  СтруктураРеквизитовФормы,
							  ДанныеРазделов)
	
	СоответствиеРазделовМакетам =
		Отчеты.РегламентированныйОтчет3НДФЛ.СоответствиеРазделовМакетамМЧБ(ИмяФормы);
	
	МЧБРаздела = СоответствиеРазделовМакетам[СтруктураПараметров.ИмяСтраницы];
	
	МакетПечатнойФормы = ЭтотОбъект.ПолучитьМакет(МЧБРаздела);
	МакетПечатнойФормы.ПолеСверху = 5;
	МакетПечатнойФормы.ПолеСправа = 5;
	МакетПечатнойФормы.ПолеСнизу = 5;
	МакетПечатнойФормы.ПолеСлева = 5;
	
	СтрПоля = "ПолеСверху, ПолеСправа, ПолеСнизу, ПолеСлева";
	
	//Определение: является ли раздел многострочным 
	ИдГруппы = ИдентификаторГруппыПоИмениСтраницы(СтруктураПараметров.ИмяСтраницы, СтруктураРеквизитовФормы);
	
	//Специальный алгоритм для многострочных разделов
	Если ИдГруппы <> Неопределено Тогда
		
		//определение исходного количества строк на листе МЧБ
		ИсхКолвоСтрокБлока = ИсходноеКоличествоСтрокБлока(СтруктураПараметров.ИмяСтраницы);
		
		ТекКолвоСтрокБлока = ДанныеРазделов[ИдГруппы].Количество();
		Если ТекКолвоСтрокБлока > ИсхКолвоСтрокБлока И ИсхКолвоСтрокБлока > 0 Тогда
			//Добавляли строки - значит будут доп. листы МЧБ
			//Определение общего количества листов МЧБ
			КолвоЛистовМЧБ = Цел(ТекКолвоСтрокБлока / ИсхКолвоСтрокБлока);
			КолвоСтрокНаПоследнемЛисте = ТекКолвоСтрокБлока % ИсхКолвоСтрокБлока;
			Если КолвоСтрокНаПоследнемЛисте <> 0 Тогда
				КолвоЛистовМЧБ = КолвоЛистовМЧБ + 1;
			КонецЕсли;
			
			//заполнение строки имен показателей (для проверки перед переименованием)
			СтрИменаПоказателей = "";
			
			Колонки = ДанныеРазделов[ИдГруппы].Колонки;
			Для каждого КолонкаСтруктуры Из Колонки Цикл
				СтрИменаПоказателей = СтрИменаПоказателей + КолонкаСтруктуры.Имя;
			КонецЦикла;
			
			//Заполнение списка листов МЧБ
			СписокЛистовМЧБ = Новый СписокЗначений;
			Для Сч = 1 По КолвоЛистовМЧБ Цикл
				//переименование (начиная со второго листа)
				Если Сч > 1 Тогда
					СписокОчищаемыхОбластей = Новый Массив;
					СписокОбластейПереименования = Новый СписокЗначений;
					Для каждого ТекущаяОбласть Из МакетПечатнойФормы.Области Цикл
						ИмяЯчейки = ТекущаяОбласть.Имя;
						
						Если СтрДлина(ИмяЯчейки) < 13 ИЛИ СтрНайти(СтрИменаПоказателей, Лев(ИмяЯчейки, 13)) = 0 Тогда
							//проверка на вхождение в данную многострочную часть
							Продолжить;
						КонецЕсли;
						
						//определение и обрасывание НомерЯчейки
						ПоказательИНомерСтрокиСРазделителем = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСмысловуюЧастьИмениЯчейки(ИмяЯчейки, Истина); // ВМЕСТЕ с разделителем
						ПоказательИНомерСтроки = Лев(ПоказательИНомерСтрокиСРазделителем,СтрДлина(ПоказательИНомерСтрокиСРазделителем) - 1);
						НомерЯчейки = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСмысловуюЧастьИмениЯчейки(ИмяЯчейки, Ложь);
						//определение СмысловаяЧасть и ТекущийСчетчик
						СмысловаяЧастьСРазделителем = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСмысловуюЧастьИмениЯчейки(ПоказательИНомерСтроки, Истина); // ВМЕСТЕ с разделителем
						СмысловаяЧасть = Лев(СмысловаяЧастьСРазделителем,СтрДлина(СмысловаяЧастьСРазделителем) - 1);
						ТекущийСчетчик = РегламентированнаяОтчетностьКлиентСервер.ПолучитьСмысловуюЧастьИмениЯчейки(ПоказательИНомерСтроки, Ложь);
						
						СмысловаяЧастьСРазделителем = ?(ЗначениеЗаполнено(СмысловаяЧастьСРазделителем),СмысловаяЧастьСРазделителем, ПоказательИНомерСтрокиСРазделителем);
						СмысловаяЧасть = ?(ЗначениеЗаполнено(СмысловаяЧасть),СмысловаяЧасть, ПоказательИНомерСтроки);
						ТекущийСчетчик = ?(ЗначениеЗаполнено(ТекущийСчетчик),ТекущийСчетчик, НомерЯчейки);
						
						//Окончательная проверка на вхождение в данную многострочную часть
						Если СтрНайти(СтрИменаПоказателей,СмысловаяЧасть) = 0 Тогда
							Продолжить;
						КонецЕсли;
						
						НовыйСчетчик = Число(ТекущийСчетчик) + ИсхКолвоСтрокБлока;
						Если НовыйСчетчик > ТекКолвоСтрокБлока Тогда
							//очищение происходит после этого цикла
							СписокОчищаемыхОбластей.Добавить(ТекущаяОбласть);
							Продолжить;
						КонецЕсли;
						
						//Подготовка к переименованию
						//заполнение списка: значение - область, представление - будущее имя
						СписокОбластейПереименования.Добавить(ТекущаяОбласть, СмысловаяЧасть + "_" + НовыйСчетчик + "_" + НомерЯчейки);
					КонецЦикла;
					
					//Очищение
					Для каждого ОбластьСписка Из СписокОчищаемыхОбластей Цикл
						ОбластьСписка.Имя = "";
						ОбластьСписка.Текст = "-";
					КонецЦикла;
					
					//Переименование
					Для каждого ЭлСпискаОбластей Из СписокОбластейПереименования Цикл
						ЭлСпискаОбластей.Значение.Имя = ЭлСпискаОбластей.Представление;
					КонецЦикла;
					
				КонецЕсли; 
				//переименование
				//
				СписокЛистовМЧБ.Добавить(МакетПечатнойФормы.ПолучитьОбласть());
			КонецЦикла;
			
			Для каждого элЛистМЧБ Из СписокЛистовМЧБ Цикл
				
				ЛистМЧБ = элЛистМЧБ.Значение;
				
				ЛистМЧБ.ПолеСверху = 5;
				ЛистМЧБ.ПолеСправа = 5;
				ЛистМЧБ.ПолеСнизу  = 5;
				ЛистМЧБ.ПолеСлева  = 5;
				
				ЗаполнитьПечатнуюФорму(ИмяФормы,
									   СтруктураПараметров,
						   			   ЛистМЧБ,
						   			   ОбщиеРеквизитыРазделов,
						   			   ДанныеРазделов,
									   СтруктураРеквизитовФормы);
				
				Если СписокЛистовМЧБ.Индекс(элЛистМЧБ)<СписокЛистовМЧБ.Количество() - 1 Тогда
					//Выводится не последний лист многострочной серии листов МЧБ
					//Необходимо обнулить итоговые показатели
					ОбнулитьИтоговыеПоказателиНаЛистеМЧБ(ЛистМЧБ);
				КонецЕсли;
				
				ТабличныйДокумент = Новый ТабличныйДокумент;
				ТабличныйДокумент.Вывести(ЛистМЧБ);
				ЗаполнитьЗначенияСвойств(ТабличныйДокумент, ЛистМЧБ, СтрПоля, "Макет");
				
				РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая(
					"", СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);

			КонецЦикла;
			Возврат;
		КонецЕсли;
	КонецЕсли;

	ЗаполнитьПечатнуюФорму(ИмяФормы,
						   СтруктураПараметров,
						   МакетПечатнойФормы,
						   ОбщиеРеквизитыРазделов,
						   ДанныеРазделов,
						   СтруктураРеквизитовФормы);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Вывести(МакетПечатнойФормы);
	ЗаполнитьЗначенияСвойств(ТабличныйДокумент, МакетПечатнойФормы, СтрПоля, "Макет");
	
	РегламентированнаяОтчетность.ВывестиНаПечатьЛистОбщая("", СтруктураПараметров, ТабличныйДокумент, СтруктураРеквизитовФормы.мПечатныеФормы);
	
КонецПроцедуры

Функция ИсходноеКоличествоСтрокБлока(ИмяСтраницы)
	
	ИсхКолвоСтрокБлока = 2;
	
	Если ИмяСтраницы = "Приложение1" Тогда
		ИсхКолвоСтрокБлока = 3;
	ИначеЕсли ИмяСтраницы = "Приложение1Расчет" Тогда
		ИсхКолвоСтрокБлока = 4;
	КонецЕсли;

	Возврат ИсхКолвоСтрокБлока;
	
КонецФункции

Процедура ЗаполнитьПечатнуюФорму(ИмяФормы,
								 ПараметрыПечати,
								 МакетПечатнойФормы,
								 ОбщиеРеквизитыРазделов,
								 ДанныеРазделов,
								 СтруктураРеквизитовФормы)
	
	МакетФормыОтчета = ЭтотОбъект.ПолучитьМакет(ИмяФормы + "_" + ПараметрыПечати.ИмяСтраницы);
	
	ПоказателиОтчета = ДанныеРазделов[ПараметрыПечати.ИмяСтраницы];
	
	Показатели = ПоказателиПечатнойФормы(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы, МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы);

	ПодготовитьОтдельныеОбласти(ИмяФормы, Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати);
	
	ТекАдресЗначенияОбласти = Неопределено;
	ИндексТочкиЧислаНаМЧБ = 0;
	ИндексТочкиПоКорню = Новый Структура;
	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		Если Область.Текст = "." Тогда
			ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область);
			Корень = ТекАдресЗначенияОбласти.Корень;
			ИндексТочкиЧислаНаМЧБ = ТекАдресЗначенияОбласти.ИндексЗнакоместа;
			ИндексТочкиПоКорню.Вставить(Корень, ИндексТочкиЧислаНаМЧБ);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Область Из МакетПечатнойФормы.Области Цикл
		
		Если Не ТипОбластиПрямоугольник(Область.ТипОбласти) Или ЯчейкаВыводитсяПосимвольно(Область.Имя) Тогда
			Продолжить;
		КонецЕсли;
		
		ИмяОбласти = ПреобразоватьИмяОбластиПоказателя(ИмяФормы, ПараметрыПечати.ИмяСтраницы, Область.Имя);
		РезультатПоиска = Показатели.Найти(ИмяОбласти, "Имя");
		Если РезультатПоиска <> Неопределено Тогда
			ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ);
			Продолжить;
		КонецЕсли;
		
		ТекАдресЗначенияОбласти = АдресЗначенияОбласти(ИмяФормы, Область, ТекАдресЗначенияОбласти);
		ЗначениеВыведено = Ложь;
		Если ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда

			РезультатПоиска = Показатели.Найти(ТекАдресЗначенияОбласти.Корень, "Имя");
			Если РезультатПоиска = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Если ТипЗнч(РезультатПоиска.Значение) = Тип("Число") Тогда
				// Разделение числа на 2 части.
				ЦелаяЧасть = Цел(РезультатПоиска.Значение);
				СтрЦелаяЧасть = Формат(Цел(РезультатПоиска.Значение), "ЧГ=0");
				СтрДробнаяЧасть = Сред(Строка(РезультатПоиска.Значение - ЦелаяЧасть),3);
				// Разделение областей показателя на 2 части.

				Если ИндексТочкиПоКорню.Свойство(ТекАдресЗначенияОбласти.Корень, ИндексТочкиЧислаНаМЧБ) = Ложь Тогда
					// На МЧБ нет разделения на целую и дробную части.
					ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
						ТекАдресЗначенияОбласти.ИндексЗнакоместа);
					ЗначениеВыведено = Истина;
				Иначе
					// Определяем какая часть выводится (целая, дробная или точка).
					Если ТекАдресЗначенияОбласти.ИндексЗнакоместа < ИндексТочкиЧислаНаМЧБ Тогда
						// Выводится целая часть.
						ПрисвоитьЗначениеОбласти(ИмяФормы, Область, ?(РезультатПоиска.ЗначениеМЧБ = "-","-",СтрЦелаяЧасть),
							ТекАдресЗначенияОбласти.ИндексЗнакоместа);
						ЗначениеВыведено = Истина;
					ИначеЕсли ТекАдресЗначенияОбласти.ИндексЗнакоместа > ИндексТочкиЧислаНаМЧБ Тогда
						// Выводится дробная часть.
						ПрисвоитьЗначениеОбласти(ИмяФормы, Область, СтрДробнаяЧасть,
							ТекАдресЗначенияОбласти.ИндексЗнакоместа - ИндексТочкиЧислаНаМЧБ);
						ЗначениеВыведено = Истина;
					Иначе
						// Выводится точка.
						// Присваивать ничего не будем, но считаем, что область заполненяется корректно.
						ЗначениеВыведено = Истина;
					КонецЕсли;
				КонецЕсли;

			Иначе

				ПрисвоитьЗначениеОбласти(ИмяФормы, Область, РезультатПоиска.ЗначениеМЧБ,
					ТекАдресЗначенияОбласти.ИндексЗнакоместа,
					ТипЗнч(РезультатПоиска.Значение) <> Тип("Строка") Или НЕ ЗначениеЗаполнено(РезультатПоиска.Значение));
					
				ЗначениеВыведено = Истина;

			КонецЕсли;
			
		КонецЕсли;

	КонецЦикла;
	
КонецПроцедуры

Функция ПоказателиПечатнойФормы(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы, МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы)
	
	ДополнитьПустымиПоказателями(ПоказателиОтчета, ИмяФормы);
	
	Показатели = Новый ТаблицаЗначений;
	Показатели.Колонки.Добавить("Имя");
	Показатели.Колонки.Добавить("Значение");
	Показатели.Колонки.Добавить("ЗначениеМЧБ");
	
	Показатели.Индексы.Добавить("Имя");
	
	Если Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяСтруктураРазделовФормы2023(ИмяФормы) Тогда
		
		Если ИмяФормы = "ФормаОтчета2023кв1" Или ИмяФормы = "ФормаОтчета2024кв1" Тогда
			ЗаполнитьПечатнуюФорму2023(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
				МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, Показатели);
		Иначе
			ЗаполнитьПечатнуюФорму2025(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
				МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, Показатели);
		КонецЕсли;
		
	ИначеЕсли ИмяФормы = "ФормаОтчета2022кв1" Тогда
		
		ЗаполнитьПечатнуюФорму2022(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
			МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, Показатели);
		
	Иначе
		
		ЗаполнитьПечатнуюФорму2021(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
			МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, Показатели);
		
	КонецЕсли;
	
	Возврат Показатели;
	
КонецФункции

Функция ПреобразоватьИмяОбластиПоказателя(ИмяФормы, ИмяСтраницы, Знач ИмяОбласти)
	
	Если ИмяСтраницы = "Приложение7" Тогда
		
		Если Лев(ИмяОбласти, 15) = "П000700001070_1" Тогда
			ИмяОбласти = "П000700001070";
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ИмяОбласти;
	
КонецФункции

Процедура ПодготовитьОтдельныеОбласти(ИмяФормы, Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати)
	
	Если ИмяФормы = "ФормаОтчета2025кв1" Тогда
		
		ПодготовитьОтдельныеОбласти2025(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати);
		
	ИначеЕсли Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяОсновнаяФорма2022(ИмяФормы) Тогда
		
		ПодготовитьОтдельныеОбласти2022(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати);
		
	Иначе
		
		ПодготовитьОтдельныеОбласти2021(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбнулитьИтоговыеПоказателиНаЛистеМЧБ(ТаблДок)
	
	ОбластьИтоговыеПоказатели = ТаблДок.Области.Найти("ИтоговыеПоказатели");
	Если ОбластьИтоговыеПоказатели = Неопределено Тогда
		Возврат;
	КонецЕсли;
		
	ОбластьИтоговыеПоказателиВерх = ОбластьИтоговыеПоказатели.Верх;
	ОбластьИтоговыеПоказателиНиз = ОбластьИтоговыеПоказатели.Низ;
	
	Для Каждого Обл Из ТаблДок.Области Цикл

		Если Обл.ГраницаСлева = Неопределено Тогда
			Продолжить;
		КонецЕсли;
		
		Если Обл.Верх >= ОбластьИтоговыеПоказателиВерх
			И Обл.Низ <= ОбластьИтоговыеПоказателиНиз
			И Обл.ГраницаСлева.ТипЛинии = ТипЛинииЯчейкиТабличногоДокумента.Точечная Тогда
			
			Если Обл.СодержитЗначение = Истина Тогда
				Обл.Значение = "-";
			Иначе
				Обл.Текст = "-";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

Функция ПолучитьЗначениеМЧБ(ИмяФормы, Показатель, МакетФормыОтчета, СтруктураРеквизитовФормы)
	
	ФорматОбласти = "";
	
	ИмяОбластиДляПоиска = Показатель.Имя;
	
	Область = МакетФормыОтчета.Области.Найти(ИмяОбластиДляПоиска);
	Если Область = Неопределено Тогда
		ПозицияПодчеркивания = СтрНайти(ИмяОбластиДляПоиска, "_", НаправлениеПоиска.СКонца);
		Если ПозицияПодчеркивания <> 0 Тогда
			Область = МакетФормыОтчета.Области.Найти(Лев(ИмяОбластиДляПоиска, ПозицияПодчеркивания) + "1");
		КонецЕсли;
	КонецЕсли;
	Если Не Область = Неопределено Тогда
		ФорматОбласти = Область.Формат;
	КонецЕсли;
	
	ТипЗначения = ТипЗнч(Показатель.Значение);
	Если ТипЗначения = Тип("Число") Тогда
		
		СоотвСтрокаФормата = РазобратьСтрокуФормата(ИмяФормы, ФорматОбласти);
		СоотвСтрокаФормата.Вставить("ЧГ", "0");

		КвалификаторыЧислаЕ = СтруктураРеквизитовФормы.мОписаниеТиповЧислоЕ.КвалификаторыЧисла;
		Если Область <> Неопределено Тогда
			КвалификаторыТекущегоЧисла = Область.ТипЗначения.КвалификаторыЧисла;
			Если КвалификаторыТекущегоЧисла.Разрядность = КвалификаторыЧислаЕ
			   И КвалификаторыТекущегоЧисла.РазрядностьДробнойЧасти = КвалификаторыЧислаЕ.РазрядностьДробнойЧасти Тогда
			
				СоотвСтрокаФормата.Вставить("ЧДЦ", "0");
				СоотвСтрокаФормата.Вставить("ЧРД", ",");
				СоотвСтрокаФормата.Вставить("ЧС", "0");
				
			Иначе
				
				СоотвСтрокаФормата.Вставить("ЧДЦ", КвалификаторыТекущегоЧисла.РазрядностьДробнойЧасти);
				
			КонецЕсли;
		Иначе
			КвалификаторыТекущегоЧисла = КвалификаторыЧислаЕ;
			СоотвСтрокаФормата.Вставить("ЧДЦ", КвалификаторыТекущегоЧисла.РазрядностьДробнойЧасти);
		КонецЕсли;

		Если Лев(ИмяОбластиДляПоиска, 5) = "П0019"
		   И (Лев(ИмяОбластиДляПоиска, 13) = "П001900001020" Или Лев(ИмяОбластиДляПоиска, 13) = "П001900001040") Тогда
			ПредставлениеНуля = "-";
		Иначе
			ПредставлениеНуля = "0"
				+ ?(КвалификаторыТекущегоЧисла.РазрядностьДробнойЧасти = 0, "", Лев(".00000000", КвалификаторыТекущегоЧисла.РазрядностьДробнойЧасти + 1));
		КонецЕсли;
		СоотвСтрокаФормата.Вставить("ЧН", ПредставлениеНуля);
		СоотвСтрокаФормата.Вставить("ЧРД", ".");
		СоотвСтрокаФормата.Вставить("ЧЦ", КвалификаторыТекущегоЧисла.Разрядность);

		// выводим число с учетом разрядности
		Результат = Формат(Показатель.Значение, СобратьСтрокуФормата(ИмяФормы, СоотвСтрокаФормата));
		
	ИначеЕсли ТипЗначения = Тип("Строка") Тогда
		
		Результат = СокрЛП(Показатель.Значение);
		
	ИначеЕсли ТипЗначения = Тип("Дата") Тогда
		
		Результат = Формат(Показатель.Значение, ?(ПустаяСтрока(ФорматОбласти), "ДЛФ=D", ФорматОбласти));
		
	ИначеЕсли ТипЗначения = Тип("Булево") Тогда
		
		Результат = Формат(Показатель.Значение, ФорматОбласти);
		
	КонецЕсли;
	
	Возврат СокрЛП(Результат);

КонецФункции

Функция РазобратьСтрокуФормата(ИмяФормы, Знач СтрокаФормата)
	
	ЗначенияПараметров = Новый Соответствие;
	Пока СтрНайти(СтрокаФормата, ";") <> 0 Цикл
		ВхождениеРазделителя = СтрНайти(СтрокаФормата, ";");
		ДоРазделителя = Лев(СтрокаФормата, ВхождениеРазделителя - 1);
		ВхождениеРавно = СтрНайти(ДоРазделителя, "=");
		Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
			ЗначенияПараметров.Вставить(Лев(ДоРазделителя, ВхождениеРавно - 1), Сред(ДоРазделителя, ВхождениеРавно + 1));
		КонецЕсли;
		СтрокаФормата = Сред(СтрокаФормата, ВхождениеРазделителя + 1);
	КонецЦикла;
	ВхождениеРавно = СтрНайти(СтрокаФормата, "=");
	Если ВхождениеРавно <> 0 И ВхождениеРавно <> 1 Тогда
		ЗначенияПараметров.Вставить(Лев(СтрокаФормата, ВхождениеРавно - 1), Сред(СтрокаФормата, ВхождениеРавно + 1));
	КонецЕсли;
	Возврат ЗначенияПараметров;
	
КонецФункции

Функция СобратьСтрокуФормата(ИмяФормы, ПараметрыФормата)
	
	СтрокаФормата = "";
	Для Каждого Параметр Из ПараметрыФормата Цикл
		СтрокаФормата = СтрокаФормата + "; " + Параметр.Ключ + "=" + Параметр.Значение;
	КонецЦикла;
	Если НЕ ПустаяСтрока(СтрокаФормата) Тогда
		СтрокаФормата = Сред(СтрокаФормата, 3);
	КонецЕсли;
	Возврат СтрокаФормата;
	
КонецФункции

Функция АдресЗначенияОбласти(ИмяФормы, Область, ТекАдресЗначенияОбласти = Неопределено)
	
	Перем КореньИмениОбласти, СтрИндексЗнакоместа;
	
	Если ТекАдресЗначенияОбласти <> Неопределено И ТекАдресЗначенияОбласти.ИндексЗнакоместа <> 0 Тогда
		
		ДлинаКорня = СтрДлина(ТекАдресЗначенияОбласти.Корень);
		Если ТекАдресЗначенияОбласти.Корень = Лев(Область.Имя, ДлинаКорня) Тогда
			
			СтрИндексЗнакоместа = ?(Сред(Область.Имя, ДлинаКорня + 1, 1) = "_",
				Сред(Область.Имя, ДлинаКорня + 2),
				Сред(Область.Имя, ДлинаКорня + 1));
			Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
				
				ТекАдресЗначенияОбласти.ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
				Возврат ТекАдресЗначенияОбласти;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Имя = Область.Имя;
	ДлинаИмени = СтрДлина(Имя);
	ИндексЗнакоместа = 0;
	Для ИндексВхождения = 1 По ДлинаИмени Цикл
		
		СтрИндексЗнакоместа = Сред(Имя, ДлинаИмени - ИндексВхождения + 1);
		Если СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(СтрИндексЗнакоместа) Тогда
			
			КореньИмениОбласти = Лев(Имя, ДлинаИмени - ИндексВхождения);
			ИндексЗнакоместа = Число(СтрИндексЗнакоместа);
			
		Иначе
			
			Прервать;
			
		КонецЕсли;
		
	КонецЦикла;
	
	Если Прав(КореньИмениОбласти, 1) = "_" Тогда
		
		КореньИмениОбласти = Лев(КореньИмениОбласти, СтрДлина(КореньИмениОбласти) - 1);
		
	КонецЕсли;
		
	Возврат Новый Структура("Корень, ИндексЗнакоместа", КореньИмениОбласти, ИндексЗнакоместа);

КонецФункции

Процедура ПрисвоитьЗначениеОбласти(ИмяФормы,
								   Область,
								   Знач Значение,
								   ИндексЗнакоместа = 0,
								   Дополнять_ = Истина)
	
	Если ИндексЗнакоместа <> 0 Тогда
		Если СтрДлина(Значение) >= ИндексЗнакоместа Тогда
			Значение = Сред(Значение, ИндексЗнакоместа, 1);
		Иначе
			Значение = ?(Дополнять_, "-", "");
		КонецЕсли;
	ИначеЕсли Не ЗначениеЗаполнено(Значение) Тогда
		Значение = "-";
	КонецЕсли;
	
	Если Область.СодержитЗначение = Истина Тогда
		Область.Значение = Значение;
	Иначе
		Область.Текст = Значение;
	КонецЕсли;

КонецПроцедуры

Процедура ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, ИмяНовогоПоказателя)
	
	Если ТипЗнч(Показатель) = Тип("КлючИЗначение") Тогда
		
		Если ПоказателиОтчета.Свойство(ИмяНовогоПоказателя) Тогда
			Возврат;
		КонецЕсли;
		
	Иначе
		
		ВызватьИсключение НСтр("ru = 'Таблица не должна иметь обязательных строк';
								|en = 'Таблица не должна иметь обязательных строк'");
		
	КонецЕсли;
	
	ТипПоказателя = ТипЗнч(Показатель.Значение);
	Если ТипПоказателя = Тип("СписокЗначений") Тогда
		
		ЗначениеНовогоПоказателя = Новый СписокЗначений;
		Если Показатель.Значение.Количество() = 1 Тогда
			ЗначениеНовогоПоказателя.Добавить(Неопределено);
		КонецЕсли;
		
	ИначеЕсли ТипПоказателя = Тип("Число") Тогда
		
		ЗначениеНовогоПоказателя = 0;
		
	ИначеЕсли типПоказателя = Тип("Дата") Тогда
		
		ЗначениеНовогоПоказателя = '00010101';
		
	Иначе
		
		ЗначениеНовогоПоказателя = "";
		
	КонецЕсли;
	
	ПоказателиОтчета.Вставить(ИмяНовогоПоказателя, ЗначениеНовогоПоказателя);
	
КонецПроцедуры

Функция ОбластьСодержитЗначение(Область)
	
	Если ТипЗнч(Область) <> Тип("ОбластьЯчеекТабличногоДокумента") Тогда
		Возврат Истина;
	КонецЕсли;
	
	Возврат ТипОбластиПрямоугольник(Область.ТипОбласти) И Область.СодержитЗначение;
	
КонецФункции

Функция ТипОбластиПрямоугольник(ТипОбласти)
	
	Возврат ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник;
	
КонецФункции

Функция ЯчейкаВыводитсяПосимвольно(ИмяЯчейки)
	
	// В печатной форме ячейка преставлена в виде отдельных значений, напр:
	// номер строки на Титульном листе - 001
	
	Результат = Ложь;
	
	СписокСоставныхЯчеек = Новый Массив;
	СписокСоставныхЯчеек.Добавить("НомСтр");
	СписокСоставныхЯчеек.Добавить("СоставленаНа");
	
	Для Каждого ТекущееЗначение Из СписокСоставныхЯчеек Цикл
		Если СтрЧислоВхождений(ИмяЯчейки, ТекущееЗначение) > 0 Тогда
			Результат = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Процедура ДополнитьПустымиПоказателями(ПоказателиОтчета, ИмяФормы)
	
	Если Не Отчеты.РегламентированныйОтчет3НДФЛ.ПрименяетсяОсновнаяФорма2022(ИмяФормы) Тогда
		Возврат;
	КонецЕсли;
	
	Если ИмяФормы = "ФормаОтчета2022кв1" Или ИмяФормы = "ФормаОтчета2023кв1" Или ИмяФормы = "ФормаОтчета2024кв1" Тогда
		ДополнитьПустымиПоказателями2022(ПоказателиОтчета);
	Иначе
		ДополнитьПустымиПоказателями2025(ПоказателиОтчета);
	КонецЕсли;
	
КонецПроцедуры

#Область ФормаОтчета2021кв1

Функция ОбщиеРеквизитыСТитульногоЛиста2021(ОбщиеРеквизитыРазделов, СтруктураДанныхТитульный)
	
	МассивИНН = Новый Массив(12);
	СтрИНН = "";
	МассивКПП = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	СтрДатаПодписи = "        ";
	МассивФамилия = Новый Массив(32);
	СтрФамилия = "";
	МассивИмя = Новый Массив(32);
	СтрИмя = "";
	МассивОтчество = Новый Массив(32);
	СтрОтчество = "";
	
	ЗаполнитьМассивСимволами(МассивИНН, СтруктураДанныхТитульный, "ИНН", СтрИНН);
	Если СтрДлина(СтрИНН) = 10 Тогда
		СтрИНН = СтрИНН + "--";
	КонецЕсли;

	Если СтруктураДанныхТитульный.Свойство("ДатаПодписи", СтрДатаПодписи) Тогда
		
		Если ЗначениеЗаполнено(СтрДатаПодписи) Тогда
			СтрДатаПодписи = Лев(СтрЗаменить(СтрДатаПодписи, ".", ""), 8);
		КонецЕсли;
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
		КонецЦикла;
		
	Иначе
		СтрДатаПодписи = "        "; // если дата подписи не заполнена, подставим пустую строку соответствующей длины
	КонецЕсли;
	
	ЗаполнитьМассивСимволами(МассивФамилия, СтруктураДанныхТитульный, "Фамилия", СтрФамилия);
	ЗаполнитьМассивСимволами(МассивИмя, СтруктураДанныхТитульный, "Имя", СтрИмя);
	ЗаполнитьМассивСимволами(МассивОтчество, СтруктураДанныхТитульный, "Отчество", СтрОтчество);

	//Место рождения
	МестоРожденияПоСловам = "";
	Если СтруктураДанныхТитульный.Свойство("МестоРождения", МестоРожденияПоСловам) Тогда
		МестоРожденияПоСловам = СтрРазделить(МестоРожденияПоСловам, " ", Ложь);
	Иначе
		МестоРожденияПоСловам = "";
	КонецЕсли;
	ДлинаВСимволах = 0;
	МестоРожденияВ21Строки = Новый Структура("МестоРождения, МестоРождения2", "", "");
	Для Каждого Слово Из МестоРожденияПоСловам Цикл
		
		ДлинаВСимволах = ДлинаВСимволах + СтрДлина(Слово);
		Если ДлинаВСимволах > 18 Тогда
			МестоРожденияВ21Строки.МестоРождения2 = МестоРожденияВ21Строки.МестоРождения2 + Слово + " ";
		Иначе
			МестоРожденияВ21Строки.МестоРождения = МестоРожденияВ21Строки.МестоРождения + Слово + " ";
		КонецЕсли;
		
	КонецЦикла;
	МестоРожденияВ21Строки.МестоРождения = СокрЛП(МестоРожденияВ21Строки.МестоРождения);
	МестоРожденияВ21Строки.МестоРождения2 = СокрЛП(МестоРожденияВ21Строки.МестоРождения2);
	
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	ОбщиеРеквизитыРазделов.Вставить("Фамилия", МассивФамилия);
	ОбщиеРеквизитыРазделов.Вставить("Имя", МассивИмя);
	ОбщиеРеквизитыРазделов.Вставить("Отчество", МассивОтчество);
	ОбщиеРеквизитыРазделов.Вставить("СтрИНН", СтрИНН);
	
	ОбщиеРеквизитыРазделов.Вставить("СтрФамилия", СтрФамилия);
	ОбщиеРеквизитыРазделов.Вставить("СтрИмя", СтрИмя);
	ОбщиеРеквизитыРазделов.Вставить("СтрОтчество", СтрОтчество);
	ОбщиеРеквизитыРазделов.Вставить("МестоРождения", МестоРожденияВ21Строки);
	
КонецФункции

Функция ИдентификаторГруппыПоИмениСтраницы2021(ИмяСтраницы, СтруктураРеквизитовФормы)
	Перем ИдГруппы;
	
	Если ИмяСтраницы = "Раздел1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1;
	ИначеЕсли ИмяСтраницы = "Раздел1Приложение" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1Приложение;
	ИначеЕсли ИмяСтраницы = "Приложение1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1;
	ИначеЕсли ИмяСтраницы = "Приложение8" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение8;	
	ИначеЕсли ИмяСтраницы = "Приложение1Расчет" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1Расчет;
	КонецЕсли;
	
	Возврат ИдГруппы;
	
КонецФункции

Процедура ЗаполнитьПечатнуюФорму2021(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
									МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, ПоказателиПечати)
	
	// Для оптимизации переводим номер строкой в номер цифрой для отдельных имен приложений.
	НомерПриложения = 0;
	Если ПараметрыПечати.ИмяСтраницы = "Приложение1" Тогда
		НомерПриложения = 1;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение2" Тогда
		НомерПриложения = 2;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение3" Тогда
		НомерПриложения = 3;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение7" Тогда
		НомерПриложения = 7;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Приложение" Тогда
		НомерПриложения = 10;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение1Расчет" Тогда
		НомерПриложения = 11;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение5Расчет" Тогда
		НомерПриложения = 51;
	КонецЕсли;
	
	ПоказателиСодержащиеОКТМО = Новый Массив;
	ПоказателиСодержащиеОКТМО.Добавить("П00010000103");
	ПоказателиСодержащиеОКТМО.Добавить("П00010000107");
	ПоказателиСодержащиеОКТМО.Добавить("П00010000109");
	ПоказателиСодержащиеОКТМО.Добавить("П00010000112");
	ПоказателиСодержащиеОКТМО.Добавить("П00010000115");
	ПоказателиСодержащиеОКТМО.Добавить("П00210000102");
	ПоказателиСодержащиеОКТМО.Добавить("П00210000108");
	ПоказателиСодержащиеОКТМО.Добавить("П00210000112");
	ПоказателиСодержащиеОКТМО.Добавить("П00030000105");
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
	
		Если Не ОбластьСодержитЗначение(Показатель) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтр = ПоказателиПечати.Добавить();
		НовСтр.Имя = ?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя);
		НовСтр.Значение = ?(ТипЗнч(Показатель.Значение) = Тип("СписокЗначений") И Показатель.Значение.Количество() = 1,
			Показатель.Значение[0].Значение, Показатель.Значение);
		
		ИмяПоказателя = Лев(НовСтр.Имя, 12);
		Если ПоказателиСодержащиеОКТМО.Найти(ИмяПоказателя) <> Неопределено Тогда // ОКТМО

			ОКТМО = СокрЛП(НовСтр.Значение);
			Если Не ПустаяСтрока(ОКТМО) Тогда
				ОКТМО = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ОКТМО, 11, "-", 1);
			КонецЕсли;
			НовСтр.ЗначениеМЧБ = ОКТМО;

		ИначеЕсли НомерПриложения = 3 И ИмяПоказателя = "П00050000108" Тогда

			НовСтр.ЗначениеМЧБ = ?(НовСтр.Значение = 0, "", НовСтр.Значение);
			
		ИначеЕсли НомерПриложения = 7 И ИмяПоказателя = "П00070000107" Тогда

			Если ПоказателиОтчета.Свойство("П000700001070") Тогда
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070);
			ИначеЕсли Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_1)
			   И Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_3)  Тогда
				НовСтр.ЗначениеМЧБ = "";
			Иначе
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070_1) + "/" + СокрЛП(ПоказателиОтчета.П000700001070_3);
			КонецЕсли;
			НовСтр.Имя = "П000700001070";

		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000106" // нaимeнование источника выплаты дохода
		 Или НомерПриложения = 2 И ИмяПоказателя = "П00040000102"      // нaимeнование источника выплаты дохода
		 Или НомерПриложения = 7 И (НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033") // номер объекта или сведения о местонахождении объекта
		 Или НомерПриложения = 10 И ИмяПоказателя = "П00210000114"     // нaимeнование банка
		 Или НомерПриложения = 11 И ИмяПоказателя = "П00190000101"     // кадастровый номер отчужденного объекта недвижимого имущества
		 Или НомерПриложения = 51 И ИмяПоказателя = "П00100000103" Тогда // нaимeнование негосударственного пенсионного фонда или страховой организации
			
			МаксимальноеЧислоСтрокВМакете = 5;
			Если ИмяПоказателя = "П00210000114" Тогда
				МаксимальноеЧислоСтрокВМакете = 3;
			ИначеЕсли НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033" Тогда
				МаксимальноеЧислоСтрокВМакете = 7;
			КонецЕсли;
			
			// В исходном макете значение в одной ячейке, но в макете назначения строка разбита на несколько.
			ИмяПоказателя = НовСтр.Имя;
			ЗначениеПоказателя = НовСтр.Значение;
			Для НомерСтроки = 1 По Мин(СтрЧислоСтрок(ЗначениеПоказателя), МаксимальноеЧислоСтрокВМакете) Цикл

				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = СтрПолучитьСтроку(ЗначениеПоказателя, НомерСтроки);
				НовСтр.ЗначениеМЧБ = НовСтр.Значение;

			КонецЦикла;
		
		Иначе

			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы);

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ПодготовитьОтдельныеОбласти2021(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати)
	
	НовСтр = Показатели.Найти("ИНН", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИНН";
	КонецЕсли;
	НовСтр.Значение = ОбщиеРеквизитыРазделов.СтрИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ОбщиеРеквизитыРазделов.СтрИНН);
	
	НовСтр = Показатели.Найти("Фамилия", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "Фамилия";
	КонецЕсли;
	НовСтр.Значение = ОбщиеРеквизитыРазделов.СтрФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.СтрФамилия;
	
	НовСтр = Показатели.Найти("ИнициалИмя", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИнициалИмя";
	КонецЕсли;
	НовСтр.Значение = Лев(СокрЛП(ОбщиеРеквизитыРазделов.СтрИмя),1);
	НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	
	НовСтр = Показатели.Найти("ИнициалОтчество", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИнициалОтчество";
	КонецЕсли;
	НовСтр.Значение = Лев(СокрЛП(ОбщиеРеквизитыРазделов.СтрОтчество),1);
	НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	
	ДатаПодписиСтр = "";
	Для Счетчик = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Счетчик];
	КонецЦикла;
	НовСтр = Показатели.Найти("ДатаПодписи", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ДатаПодписи";
	КонецЕсли;
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	// Особая обработка ФИО на титульном листе.
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
			
		КонецЕсли;
		
		НовСтр = Показатели.Найти("МестоРождения", "Имя");
		Если НовСтр = Неопределено Тогда
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "МестоРождения";
		КонецЕсли;
		НовСтр.Значение = ОбщиеРеквизитыРазделов.МестоРождения.МестоРождения;
		НовСтр.ЗначениеМЧБ = НовСтр.Значение;
		
		НовСтр = Показатели.Найти("МестоРождения2", "Имя");
		Если НовСтр = Неопределено Тогда
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "МестоРождения2";
		КонецЕсли;
		НовСтр.Значение = ОбщиеРеквизитыРазделов.МестоРождения.МестоРождения2;
		НовСтр.ЗначениеМЧБ = НовСтр.Значение;
		
		НовСтр = Показатели.Найти("КемВыданДокумент", "Имя");
		Если НовСтр <> Неопределено Тогда
			
			КемВыданДокумент2 = "";
			Если СтрЧислоСтрок(НовСтр.Значение) > 1 Тогда
				
				КемВыданДокумент2 = СтрПолучитьСтроку(НовСтр.Значение, 2);
				НовСтр.Значение = СтрПолучитьСтроку(НовСтр.Значение, 1);
				
			ИначеЕсли СтрДлина(НовСтр.Значение) > 50 Тогда
				
				ПозицияПереноса = СтрНайти(НовСтр.Значение, " ", НаправлениеПоиска.СКонца, 50);
				Если ПозицияПереноса <> 0 Тогда
					КемВыданДокумент2 = Сред(НовСтр.Значение, ПозицияПереноса + 1);
					НовСтр.Значение = Лев(НовСтр.Значение, ПозицияПереноса);
				КонецЕсли;

			КонецЕсли;
			НовСтр.ЗначениеМЧБ = НовСтр.Значение;
			
			НовСтр = Показатели.Найти("КемВыданДокумент2", "Имя");
			Если НовСтр = Неопределено Тогда
				НовСтр = Показатели.Добавить();
				НовСтр.Имя = "КемВыданДокумент2";
			КонецЕсли;
			НовСтр.Значение = КемВыданДокумент2;
			НовСтр.ЗначениеМЧБ = НовСтр.Значение;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИменаМногостраничныхРазделов2021(ИменаМногостраничныхРазделов)
	
	ИменаМногостраничныхРазделов.Добавить("Приложение1");
	ИменаМногостраничныхРазделов.Добавить("Приложение1Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение2");
	ИменаМногостраничныхРазделов.Добавить("Приложение3");
	ИменаМногостраничныхРазделов.Добавить("Приложение5Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение7");
	ИменаМногостраничныхРазделов.Добавить("Приложение8");
	ИменаМногостраничныхРазделов.Добавить("Раздел1");
	ИменаМногостраничныхРазделов.Добавить("Раздел1Приложение");
	ИменаМногостраничныхРазделов.Добавить("Раздел2");
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2022кв1

Функция ОбщиеРеквизитыСТитульногоЛиста2022(ОбщиеРеквизитыРазделов, СтруктураДанныхТитульный)
	
	МассивИНН         = Новый Массив(12);
	СтрИНН = "";
	МассивКПП         = Новый Массив(9);
	МассивДатаПодписи = Новый Массив(8);
	СтрДатаПодписи = "        ";
	МассивФамилия     = Новый Массив(32);
	СтрФамилия = "";
	МассивИмя         = Новый Массив(32);
	СтрИмя = "";
	МассивОтчество    = Новый Массив(32);
	СтрОтчество = "";
	
	ЗаполнитьМассивСимволами(МассивИНН, СтруктураДанныхТитульный, "ИНН", СтрИНН);
	Если СтрДлина(СтрИНН) = 10 Тогда
		СтрИНН = СтрИНН + "--";
	КонецЕсли;
	
	Если СтруктураДанныхТитульный.Свойство("ДатаПодписи", СтрДатаПодписи) Тогда
		
		Если ЗначениеЗаполнено(СтрДатаПодписи) Тогда
			СтрДатаПодписи = Лев(СтрЗаменить(СтрДатаПодписи, ".", ""), 8);
		КонецЕсли;
		Для Ном = 1 По СтрДлина(СтрДатаПодписи) Цикл
			МассивДатаПодписи[Ном - 1] = Сред(СтрДатаПодписи, Ном, 1);
		КонецЦикла;
		
	Иначе
		СтрДатаПодписи = "        "; // если дата подписи не заполнена, подставим пустую строку соответствующей длины
	КонецЕсли;
	
	ЗаполнитьМассивСимволами(МассивФамилия, СтруктураДанныхТитульный, "Фамилия", СтрФамилия);
	ЗаполнитьМассивСимволами(МассивИмя, СтруктураДанныхТитульный, "Имя", СтрИмя);
	ЗаполнитьМассивСимволами(МассивОтчество, СтруктураДанныхТитульный, "Отчество", СтрОтчество);
	
	ОбщиеРеквизитыРазделов.Вставить("ИНН", МассивИНН);
	ОбщиеРеквизитыРазделов.Вставить("КПП", МассивКПП);
	ОбщиеРеквизитыРазделов.Вставить("ДатаПодписи", МассивДатаПодписи);
	ОбщиеРеквизитыРазделов.Вставить("Фамилия", МассивФамилия);
	ОбщиеРеквизитыРазделов.Вставить("Имя", МассивИмя);
	ОбщиеРеквизитыРазделов.Вставить("Отчество", МассивОтчество);
	ОбщиеРеквизитыРазделов.Вставить("СтрИНН", СтрИНН);
	
	ОбщиеРеквизитыРазделов.Вставить("СтрФамилия", СтрФамилия);
	ОбщиеРеквизитыРазделов.Вставить("СтрИмя", СтрИмя);
	ОбщиеРеквизитыРазделов.Вставить("СтрОтчество", СтрОтчество);
	
КонецФункции

Функция ИдентификаторГруппыПоИмениСтраницы2022(ИмяСтраницы, СтруктураРеквизитовФормы)
	Перем ИдГруппы;
	
	Если ИмяСтраницы = "Раздел1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1;
	ИначеЕсли ИмяСтраницы = "Раздел1Приложение" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1Приложение;
	ИначеЕсли ИмяСтраницы = "Приложение1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1;
	ИначеЕсли ИмяСтраницы = "Приложение8" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение8;	
	ИначеЕсли ИмяСтраницы = "Приложение1Расчет" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1Расчет;
	КонецЕсли;
	
	Возврат ИдГруппы;
	
КонецФункции

Процедура ЗаполнитьПечатнуюФорму2022(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
									МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, ПоказателиПечати)
									
	// Для оптимизации переводим номер строкой в номер цифрой для отдельных имен приложений.
	НомерПриложения = 0;
	Если ПараметрыПечати.ИмяСтраницы = "Приложение1" Тогда
		НомерПриложения = 1;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение2" Тогда
		НомерПриложения = 2;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение3" Тогда
		НомерПриложения = 3;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение7" Тогда
		НомерПриложения = 7;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Приложение" Тогда
		НомерПриложения = 10;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение1Расчет" Тогда
		НомерПриложения = 11;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение5Расчет" Тогда
		НомерПриложения = 51;
	КонецЕсли;
	
	ДлинаПоказателей = ПоказателиФиксированнойДлины2022();
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
	
		Если Не ОбластьСодержитЗначение(Показатель) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтр = ПоказателиПечати.Добавить();
		НовСтр.Имя = ?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя);
		НовСтр.Значение = ?(ТипЗнч(Показатель.Значение) = Тип("СписокЗначений") И Показатель.Значение.Количество() = 1,
			Показатель.Значение[0].Значение, Показатель.Значение);
		
		ИмяПоказателя = Лев(НовСтр.Имя, 12);
		ДлинаПоказателя = ДлинаПоказателей[ИмяПоказателя];
		Если ДлинаПоказателя <> Неопределено Тогда // дополняем прочерками

			ЗначениеПоказателя = СокрЛП(НовСтр.Значение);
			ЗначениеПоказателя = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(ЗначениеПоказателя, ДлинаПоказателя, "-", 1);
			НовСтр.ЗначениеМЧБ = ЗначениеПоказателя;

		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000102"
		 Или НомерПриложения = 2 И НовСтр.Имя = "П000400001041" Тогда
		 
			НовСтр.ЗначениеМЧБ = ?(ЗначениеЗаполнено(НовСтр.Значение),
				ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы), "-");
			
		ИначеЕсли НомерПриложения = 3 И ИмяПоказателя = "П00050000108" Тогда

			НовСтр.ЗначениеМЧБ = ?(ЗначениеЗаполнено(НовСтр.Значение), НовСтр.Значение, "----");
			
		ИначеЕсли НомерПриложения = 7 И ИмяПоказателя = "П00070000107" Тогда

			Если ПоказателиОтчета.Свойство("П000700001070") Тогда
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070);
			ИначеЕсли Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_1)
			   И Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_3)  Тогда
				НовСтр.ЗначениеМЧБ = "";
			Иначе
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070_1) + "/" + СокрЛП(ПоказателиОтчета.П000700001070_3);
			КонецЕсли;
			НовСтр.Имя = "П000700001070";

		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000106" // нaимeнование источника выплаты дохода
		 Или НомерПриложения = 2 И ИмяПоказателя = "П00040000102"      // нaимeнование источника выплаты дохода
		 Или НомерПриложения = 7 И (НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033") // номер объекта или сведения о местонахождении объекта
		 Или НомерПриложения = 10 И ИмяПоказателя = "П00210000111"     // нaимeнование банка
		 Или НомерПриложения = 11 И ИмяПоказателя = "П00190000101"     // кадастровый номер отчужденного объекта недвижимого имущества
		 Или НомерПриложения = 51 И (ИмяПоказателя = "П00100000103" Или ИмяПоказателя = "П00100000111") Тогда // нaимeнование НПФ или участника РЦБ
			
			МаксимальноеЧислоСтрокВМакете = 5;
			Если ИмяПоказателя = "П00210000111" Тогда
				МаксимальноеЧислоСтрокВМакете = 3;
			ИначеЕсли НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033" Тогда
				МаксимальноеЧислоСтрокВМакете = 7;
			КонецЕсли;
			
			// В исходном макете значение в одной ячейке, но в макете назначения строка разбита на несколько.
			ИмяПоказателя = НовСтр.Имя;
			ЗначениеПоказателя = НовСтр.Значение;
			Для НомерСтроки = 1 По Мин(СтрЧислоСтрок(ЗначениеПоказателя), МаксимальноеЧислоСтрокВМакете) Цикл

				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = СтрПолучитьСтроку(ЗначениеПоказателя, НомерСтроки);
				НовСтр.ЗначениеМЧБ = НовСтр.Значение;

			КонецЦикла;
				
		Иначе

			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы);

		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПоказателиФиксированнойДлины2022()
	
	ДлинаПоказателей = Новый Соответствие;
	
	// Содержащие БИК или КПП
	Показатели = Новый Массив;
	Показатели.Добавить("П00210000112");
	Показатели.Добавить("П00030000104");
	Показатели.Добавить("П00100000102");
	Показатели.Добавить("П00100000110");
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 9);
	КонецЦикла;
	
	// Содержащие ИНН
	ДлинаПоказателей.Вставить("П00030000103", 12);
	ДлинаПоказателей.Вставить("П00100000101", 10);
	ДлинаПоказателей.Вставить("П00100000109", 10);
	
	// Содержащие ОКТМО
	Показатели = Новый Массив;
	Показатели.Добавить("П00010000103");
	Показатели.Добавить("П00010000107");
	Показатели.Добавить("П00010000109");
	Показатели.Добавить("П00010000112");
	Показатели.Добавить("П00010000115");
	Показатели.Добавить("П00210000102");
	Показатели.Добавить("П00210000106");
	Показатели.Добавить("П00210000110");
	Показатели.Добавить("П00030000105");
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 11);
	КонецЦикла;
	
	// Содержащие КБК или номер счета
	Показатели = Новый Массив;
	Показатели.Добавить("П00010000102");
	Показатели.Добавить("П00010000106");
	Показатели.Добавить("П00210000101");
	Показатели.Добавить("П00210000105");
	Показатели.Добавить("П00210000109");
	Показатели.Добавить("П00210000114");
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 20);
	КонецЦикла;
	
	Возврат ДлинаПоказателей;
	
КонецФункции

Процедура ПодготовитьОтдельныеОбласти2022(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати)
	
	НовСтр = Показатели.Найти("ИНН", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИНН";
	КонецЕсли;
	НовСтр.Значение = ОбщиеРеквизитыРазделов.СтрИНН;
	НовСтр.ЗначениеМЧБ = СокрЛП(ОбщиеРеквизитыРазделов.СтрИНН);
	
	НовСтр = Показатели.Найти("Фамилия", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "Фамилия";
	КонецЕсли;
	НовСтр.Значение = ОбщиеРеквизитыРазделов.СтрФамилия;
	НовСтр.ЗначениеМЧБ = ОбщиеРеквизитыРазделов.СтрФамилия;
	
	НовСтр = Показатели.Найти("ИнициалИмя", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИнициалИмя";
	КонецЕсли;
	НовСтр.Значение = Лев(СокрЛП(ОбщиеРеквизитыРазделов.СтрИмя),1);
	НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	
	НовСтр = Показатели.Найти("ИнициалОтчество", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ИнициалОтчество";
	КонецЕсли;
	НовСтр.Значение = Лев(СокрЛП(ОбщиеРеквизитыРазделов.СтрОтчество),1);
	НовСтр.ЗначениеМЧБ = НовСтр.Значение;
	
	ДатаПодписиСтр = "";
	Для Счетчик = 0 По 7 Цикл
		ДатаПодписиСтр = ДатаПодписиСтр + ОбщиеРеквизитыРазделов.ДатаПодписи[Счетчик];
	КонецЦикла;
	НовСтр = Показатели.Найти("ДатаПодписи", "Имя");
	Если НовСтр = Неопределено Тогда
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = "ДатаПодписи";
	КонецЕсли;
	НовСтр.Значение = ДатаПодписиСтр;
	НовСтр.ЗначениеМЧБ = СокрЛП(ДатаПодписиСтр);
	
	// Особая обработка ФИО на титульном листе.
	Если ПараметрыПечати.ИмяСтраницы = "Титульный" Тогда
		
		ПокПодписант = Показатели.Найти("ОргПодписант", "Имя");
		Если ПокПодписант <> Неопределено Тогда
			
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(ПокПодписант.Значение);
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантФамилия";
			НовСтр.Значение = ФИО.Фамилия;
			НовСтр.ЗначениеМЧБ = ФИО.Фамилия;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантИмя";
			НовСтр.Значение = ФИО.Имя;
			НовСтр.ЗначениеМЧБ = ФИО.Имя;
			
			НовСтр = Показатели.Добавить();
			НовСтр.Имя = "ОргПодписантОтчество";
			НовСтр.Значение = ФИО.Отчество;
			НовСтр.ЗначениеМЧБ = ФИО.Отчество;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ИменаМногостраничныхРазделов2022(ИменаМногостраничныхРазделов)
	
	ИменаМногостраничныхРазделов.Добавить("Приложение1");
	ИменаМногостраничныхРазделов.Добавить("Приложение1Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение2");
	ИменаМногостраничныхРазделов.Добавить("Приложение3");
	ИменаМногостраничныхРазделов.Добавить("Приложение3Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение5Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение7");
	ИменаМногостраничныхРазделов.Добавить("Приложение8");
	ИменаМногостраничныхРазделов.Добавить("Раздел1");
	ИменаМногостраничныхРазделов.Добавить("Раздел1Приложение");
	ИменаМногостраничныхРазделов.Добавить("Раздел2");
   
КонецПроцедуры

Процедура ДополнитьПустымиПоказателями2022(ПоказателиОтчета)
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
		
		ИмяПоказателя = Сред(?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя), 4);
		Если ИмяПоказателя = "0100001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001020_2");
		ИначеЕсли ИмяПоказателя = "0100001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001030_2");
		ИначеЕсли ИмяПоказателя = "0100001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001040_2");
		ИначеЕсли ИмяПоказателя = "0100001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001050_2");
		ИначеЕсли ИмяПоказателя = "2100001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001030_2");
		ИначеЕсли ИмяПоказателя = "2100001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001040_2");
		ИначеЕсли ИмяПоказателя = "2100001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001050_2");
		ИначеЕсли ИмяПоказателя = "2100001060_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001060_2");
		ИначеЕсли ИмяПоказателя = "2100001070_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001070_2");
		ИначеЕсли ИмяПоказателя = "0300001010_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001010_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001010_3");
		ИначеЕсли ИмяПоказателя = "0300001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001020_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001020_3");
		ИначеЕсли ИмяПоказателя = "0300001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001030_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001030_3");
		ИначеЕсли ИмяПоказателя = "0300001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001040_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001040_3");
		ИначеЕсли ИмяПоказателя = "0300001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001050_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001050_3");
		ИначеЕсли ИмяПоказателя = "0300001060_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001060_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001060_3");
		ИначеЕсли ИмяПоказателя = "0300001070_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001070_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001070_3");
		ИначеЕсли ИмяПоказателя = "0300001080_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001080_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001080_3");
		ИначеЕсли ИмяПоказателя = "1200001010_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001010_2");
		ИначеЕсли ИмяПоказателя = "1200001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001020_2");
		ИначеЕсли ИмяПоказателя = "1200001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001030_2");
		ИначеЕсли ИмяПоказателя = "1200001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001040_2");
		ИначеЕсли ИмяПоказателя = "1200001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001050_2");
		ИначеЕсли ИмяПоказателя = "1200001051_1_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001051_2_1");
		ИначеЕсли ИмяПоказателя = "1200001051_1_2" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001051_2_2");
		ИначеЕсли ИмяПоказателя = "1200001051_1_3" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001051_2_3");
		ИначеЕсли ИмяПоказателя = "1200001052_1_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001052_2_1");
		ИначеЕсли ИмяПоказателя = "1200001052_1_2" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001052_2_2");
		ИначеЕсли ИмяПоказателя = "1200001052_1_3" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001052_2_3");
		ИначеЕсли ИмяПоказателя = "1200001060_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001060_2");
		ИначеЕсли ИмяПоказателя = "1200001070_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001200001070_2");
		ИначеЕсли ИмяПоказателя = "1900001010_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_4");
		ИначеЕсли ИмяПоказателя = "1900001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_4");
		ИначеЕсли ИмяПоказателя = "1900001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_4");
		ИначеЕсли ИмяПоказателя = "1900001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_4");
		ИначеЕсли ИмяПоказателя = "1900001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_4");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ФормаОтчета2023кв1

Процедура ИменаМногостраничныхРазделов2023(ИменаМногостраничныхРазделов)
	
	ИменаМногостраничныхРазделов.Добавить("Приложение1");
	ИменаМногостраничныхРазделов.Добавить("Приложение1Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение2");
	ИменаМногостраничныхРазделов.Добавить("Приложение3");
	ИменаМногостраничныхРазделов.Добавить("Приложение3Продолжение");
	ИменаМногостраничныхРазделов.Добавить("Приложение5Расчет");
	ИменаМногостраничныхРазделов.Добавить("Приложение7");
	ИменаМногостраничныхРазделов.Добавить("Приложение8");
	ИменаМногостраничныхРазделов.Добавить("Раздел1");
	ИменаМногостраничныхРазделов.Добавить("Раздел2");
	
КонецПроцедуры

Функция ИдентификаторГруппыПоИмениСтраницы2023(ИмяСтраницы, СтруктураРеквизитовФормы)
	Перем ИдГруппы;
	
	Если ИмяСтраницы = "Раздел1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1;
	ИначеЕсли ИмяСтраницы = "Приложение1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1;
	ИначеЕсли ИмяСтраницы = "Приложение8" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение8;
	ИначеЕсли ИмяСтраницы = "Приложение1Расчет" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1Расчет;
	КонецЕсли;
	
	Возврат ИдГруппы;
	
КонецФункции

Процедура ЗаполнитьПечатнуюФорму2023(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
	МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, ПоказателиПечати)
	
	// Для оптимизации переводим номер строкой в номер цифрой для отдельных имен приложений.
	НомерПриложения = 0;
	
	Если ПараметрыПечати.ИмяСтраницы = "Приложение1" Тогда
		НомерПриложения = 1;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение2" Тогда
		НомерПриложения = 2;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение3" Тогда
		НомерПриложения = 3;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение7" Тогда
		НомерПриложения = 7;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение8" Тогда
		НомерПриложения = 8;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Приложение" Тогда
		НомерПриложения = 10;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение1Расчет" Тогда
		НомерПриложения = 11;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение5Расчет" Тогда
		НомерПриложения = 51;
	КонецЕсли;
	
	ДлинаПоказателей = ПоказателиФиксированнойДлины2023();
	ДополнениеПустойЯчейки = "-";
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
		
		Если Не ОбластьСодержитЗначение(Показатель) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтр = ПоказателиПечати.Добавить();
		НовСтр.Имя = ?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя);
		НовСтр.Значение = ?(ТипЗнч(Показатель.Значение) = Тип("СписокЗначений") И Показатель.Значение.Количество() = 1,
			Показатель.Значение[0].Значение, Показатель.Значение);
		
		ИмяПоказателя = Лев(НовСтр.Имя, 12);
		ДлинаПоказателя = ДлинаПоказателей[ИмяПоказателя];
		
		Если НомерПриложения = 7 И ИмяПоказателя = "П00070000107" И ЗначениеЗаполнено(ДлинаПоказателей) Тогда
			
			Если ПоказателиОтчета.Свойство("П000700001070") Тогда
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070);
			ИначеЕсли Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_1)
				И Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_3)  Тогда
				НовСтр.ЗначениеМЧБ = "";
			Иначе
				ЦелаяЧастьДоли = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ПоказателиОтчета.П000700001070_1),
					ДлинаПоказателя,
					ДополнениеПустойЯчейки,
					1);
				ДробнаяЧастьДоли = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ПоказателиОтчета.П000700001070_3),
					ДлинаПоказателя,
					ДополнениеПустойЯчейки,
					1);
				НовСтр.ЗначениеМЧБ = СтрШаблон("%1/%2", ЦелаяЧастьДоли, ДробнаяЧастьДоли);
			КонецЕсли;
			НовСтр.Имя = "П000700001070";
			
		ИначеЕсли ДлинаПоказателя <> Неопределено Тогда // дополняем прочерками
			
			ЗначениеПоказателя = СокрЛП(НовСтр.Значение);
			ЗначениеПоказателя = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
				ЗначениеПоказателя,
				ДлинаПоказателя,
				ДополнениеПустойЯчейки,
				1);
			НовСтр.ЗначениеМЧБ = ЗначениеПоказателя;
			
		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000102"
			Или НомерПриложения = 2 И НовСтр.Имя = "П000400001041" Тогда
			
			НовСтр.ЗначениеМЧБ = ?(ЗначениеЗаполнено(НовСтр.Значение),
				ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы), ДополнениеПустойЯчейки);
			
		ИначеЕсли НомерПриложения = 3 И ИмяПоказателя = "П00050000108" Тогда
			
			НовСтр.ЗначениеМЧБ = ?(ЗначениеЗаполнено(НовСтр.Значение), НовСтр.Значение, "----");
			
		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000106" // нaимeнование источника выплаты дохода
			Или НомерПриложения = 2 И ИмяПоказателя = "П00040000102" // нaимeнование источника выплаты дохода
			Или НомерПриложения = 7 И (НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033") // номер объекта или сведения о местонахождении объектаа
			Или НомерПриложения = 11 И ИмяПоказателя = "П00190000101" // кадастровый номер отчужденного объекта недвижимого имущества
			Или НомерПриложения = 51 И (ИмяПоказателя = "П00100000103" Или ИмяПоказателя = "П00100000111") Тогда
			
			МаксимальноеЧислоСтрокВМакете = 5;
			Если НовСтр.Имя = "П000700001032" Или НовСтр.Имя = "П000700001033" Тогда
				МаксимальноеЧислоСтрокВМакете = 7;
			КонецЕсли;
			
			// В исходном макете значение в одной ячейке, но в макете назначения строка разбита на несколько.
			ИмяПоказателя = НовСтр.Имя;
			ЗначениеПоказателя = НовСтр.Значение;
			Для НомерСтроки = 1 По Мин(СтрЧислоСтрок(ЗначениеПоказателя), МаксимальноеЧислоСтрокВМакете) Цикл
				
				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = СтрПолучитьСтроку(ЗначениеПоказателя, НомерСтроки);
				НовСтр.ЗначениеМЧБ = НовСтр.Значение;
				
			КонецЦикла;
			
		ИначеЕсли НомерПриложения = 8 И (СтрНайти(НовСтр.Имя, "П001200001051") > 0) Тогда // Код вида операции, по которой принимается убыток
			
			КоличествоЗаполненных = ?(ЗначениеЗаполнено(Показатель.Значение), Показатель.Значение.Количество(), 0);
			МаксимальноеЧислоСтрокВМакете = 3;
			ИмяПоказателя = НовСтр.Имя;
			
			Для НомерСтроки = 1 По МаксимальноеЧислоСтрокВМакете Цикл
				
				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				
				Если НомерСтроки <= КоличествоЗаполненных Тогда
					ЗначениеПоказателя = Показатель.Значение[НомерСтроки - 1].Значение;
				Иначе
					ЗначениеПоказателя = "";
				КонецЕсли;
				
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = ЗначениеПоказателя;
				НовСтр.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ЗначениеПоказателя),
					2,
					ДополнениеПустойЯчейки,
					1);
				
			КонецЦикла;
			
		Иначе
			
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПоказателиФиксированнойДлины2023()
	
	ДлинаПоказателей = Новый Соответствие;
	
	// Содержащие БИК или КПП
	Показатели = Новый Массив;
	Показатели.Добавить("П00210000102");
	Показатели.Добавить("П00030000104");
	Показатели.Добавить("П00100000102");
	Показатели.Добавить("П00100000110");
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 9);
	КонецЦикла;
	
	// Содержащие ИНН
	ДлинаПоказателей.Вставить("П00030000103", 12);
	ДлинаПоказателей.Вставить("П00100000101", 10);
	ДлинаПоказателей.Вставить("П00100000109", 10);
	
	// Содержащие ОКТМО
	Показатели = Новый Массив;
	Показатели.Добавить("П00010000103");
	Показатели.Добавить("П00010000107");
	Показатели.Добавить("П00010000109");
	Показатели.Добавить("П00010000112");
	Показатели.Добавить("П00010000115");
	Показатели.Добавить("П00030000105");
	
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 11);
	КонецЦикла;
	
	// Содержащие КБК или номер счета/договора
	Показатели = Новый Массив;
	Показатели.Добавить("П00010000102");
	Показатели.Добавить("П00010000106");
	Показатели.Добавить("П00100000105");
	Показатели.Добавить("П00100000113");
	Показатели.Добавить("П00210000104");
	
	Для Каждого Показатель Из Показатели Цикл
		ДлинаПоказателей.Вставить(Показатель, 20);
	КонецЦикла;
	
	// Доля (доли) в праве собственности
	ДлинаПоказателей.Вставить("П00070000107", 6);
	
	// Вид операции
	ДлинаПоказателей.Вставить("П00120000101", 2);
	
	Возврат ДлинаПоказателей;
	
КонецФункции

#КонецОбласти

#Область ФормаОтчета2025кв1

Процедура ДополнитьПустымиПоказателями2025(ПоказателиОтчета)
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
		
		ИмяПоказателя = Сред(?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя), 4);
		Если ИмяПоказателя = "0100001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001020_2");
		ИначеЕсли ИмяПоказателя = "0100001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001030_2");
		ИначеЕсли ИмяПоказателя = "0100001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001040_2");
		ИначеЕсли ИмяПоказателя = "0100001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000100001050_2");
		ИначеЕсли ИмяПоказателя = "2100001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001030_2");
		ИначеЕсли ИмяПоказателя = "2100001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001040_2");
		ИначеЕсли ИмяПоказателя = "2100001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001050_2");
		ИначеЕсли ИмяПоказателя = "2100001060_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001060_2");
		ИначеЕсли ИмяПоказателя = "2100001070_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П002100001070_2");
		ИначеЕсли ИмяПоказателя = "0300001010_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001010_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001010_3");
		ИначеЕсли ИмяПоказателя = "0300001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001020_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001020_3");
		ИначеЕсли ИмяПоказателя = "0300001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001030_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001030_3");
		ИначеЕсли ИмяПоказателя = "0300001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001040_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001040_3");
		ИначеЕсли ИмяПоказателя = "0300001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001050_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001050_3");
		ИначеЕсли ИмяПоказателя = "0300001060_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001060_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001060_3");
		ИначеЕсли ИмяПоказателя = "0300001070_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001070_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001070_3");
		ИначеЕсли ИмяПоказателя = "0300001080_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001080_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П000300001080_3");
		ИначеЕсли ИмяПоказателя = "1900001010_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001010_4");
		ИначеЕсли ИмяПоказателя = "1900001020_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001020_4");
		ИначеЕсли ИмяПоказателя = "1900001030_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001030_4");
		ИначеЕсли ИмяПоказателя = "1900001040_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001040_4");
		ИначеЕсли ИмяПоказателя = "1900001050_1" Тогда
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_2");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_3");
			ДобавитьПустойПоказатель(ПоказателиОтчета, Показатель, "П001900001050_4");
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьПечатнуюФорму2025(ИмяФормы, ПараметрыПечати, МакетПечатнойФормы,
	МакетФормыОтчета, ПоказателиОтчета, СтруктураРеквизитовФормы, ПоказателиПечати)
	
	// Для оптимизации переводим номер строкой в номер цифрой для отдельных имен приложений.
	НомерПриложения = 0;
	
	Если ПараметрыПечати.ИмяСтраницы = "Приложение1" Тогда
		НомерПриложения = 1;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение2" Тогда
		НомерПриложения = 2;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение3" Тогда
		НомерПриложения = 3;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение7" Тогда
		НомерПриложения = 7;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение8" Тогда
		НомерПриложения = 8;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Раздел1Приложение" Тогда
		НомерПриложения = 10;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение1Расчет" Тогда
		НомерПриложения = 11;
	ИначеЕсли ПараметрыПечати.ИмяСтраницы = "Приложение5Расчет" Тогда
		НомерПриложения = 51;
	КонецЕсли;
	
	ДлинаПоказателей = ПоказателиФиксированнойДлины2023();
	ДополнениеПустойЯчейки = "-";
	
	Для Каждого Показатель Из ПоказателиОтчета Цикл
		
		Если Не ОбластьСодержитЗначение(Показатель) Тогда
			Продолжить;
		КонецЕсли;
		
		НовСтр = ПоказателиПечати.Добавить();
		НовСтр.Имя = ?(ТипЗнч(Показатель) = Тип("КлючИЗначение"), Показатель.Ключ, Показатель.Имя);
		НовСтр.Значение = ?(ТипЗнч(Показатель.Значение) = Тип("СписокЗначений") И Показатель.Значение.Количество() = 1,
			Показатель.Значение[0].Значение, Показатель.Значение);
		
		ИмяПоказателя = Лев(НовСтр.Имя, 12);
		ДлинаПоказателя = ДлинаПоказателей[ИмяПоказателя];
		
		Если НомерПриложения = 7 И ИмяПоказателя = "П00070000107" И ЗначениеЗаполнено(ДлинаПоказателей) Тогда
			
			Если ПоказателиОтчета.Свойство("П000700001070") Тогда
				НовСтр.ЗначениеМЧБ = СокрЛП(ПоказателиОтчета.П000700001070);
			ИначеЕсли Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_1)
				И Не ЗначениеЗаполнено(ПоказателиОтчета.П000700001070_3)  Тогда
				НовСтр.ЗначениеМЧБ = "";
			Иначе
				ЦелаяЧастьДоли = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ПоказателиОтчета.П000700001070_1),
					ДлинаПоказателя,
					ДополнениеПустойЯчейки,
					1);
				ДробнаяЧастьДоли = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ПоказателиОтчета.П000700001070_3),
					ДлинаПоказателя,
					ДополнениеПустойЯчейки,
					1);
				НовСтр.ЗначениеМЧБ = СтрШаблон("%1/%2", ЦелаяЧастьДоли, ДробнаяЧастьДоли);
			КонецЕсли;
			НовСтр.Имя = "П000700001070";
			
		ИначеЕсли ДлинаПоказателя <> Неопределено Тогда // дополняем прочерками
			
			ЗначениеПоказателя = СокрЛП(НовСтр.Значение);
			ЗначениеПоказателя = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
				ЗначениеПоказателя,
				ДлинаПоказателя,
				ДополнениеПустойЯчейки,
				1);
			НовСтр.ЗначениеМЧБ = ЗначениеПоказателя;
			
		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000102"
			Или НомерПриложения = 2 И НовСтр.Имя = "П000400001041" Тогда
			
			Если ЗначениеЗаполнено(НовСтр.Значение) Тогда
				НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы);
			Иначе
				НовСтр.ЗначениеМЧБ = ДополнениеПустойЯчейки;
			КонецЕсли;
			
		ИначеЕсли НомерПриложения = 3 И ИмяПоказателя = "П00050000108" Тогда
			
			НовСтр.ЗначениеМЧБ = ?(ЗначениеЗаполнено(НовСтр.Значение), НовСтр.Значение, "----");
			
		ИначеЕсли НомерПриложения = 1 И ИмяПоказателя = "П00030000106" // нaимeнование источника выплаты дохода
			Или НомерПриложения = 2 И ИмяПоказателя = "П00040000102" // нaимeнование источника выплаты дохода
			Или НомерПриложения = 7 И НовСтр.Имя = "П000700001033" // сведения о местонахождении объекта
			Или НомерПриложения = 11 И ИмяПоказателя = "П00190000101" // кадастровый номер отчужденного объекта недвижимого имущества
			Или НомерПриложения = 51 И (ИмяПоказателя = "П00100000103" Или ИмяПоказателя = "П00100000111") Тогда
			
			Если НовСтр.Имя = "П000700001033" Тогда
				МаксимальноеЧислоСтрокВМакете = 7;
			Иначе
				МаксимальноеЧислоСтрокВМакете = 5;
			КонецЕсли;
			
			// В исходном макете значение в одной ячейке, но в макете назначения строка разбита на несколько.
			ИмяПоказателя = НовСтр.Имя;
			ЗначениеПоказателя = НовСтр.Значение;
			Для НомерСтроки = 1 По Мин(СтрЧислоСтрок(ЗначениеПоказателя), МаксимальноеЧислоСтрокВМакете) Цикл
				
				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = СтрПолучитьСтроку(ЗначениеПоказателя, НомерСтроки);
				НовСтр.ЗначениеМЧБ = НовСтр.Значение;
				
			КонецЦикла;
			
		ИначеЕсли НомерПриложения = 8 И (СтрНайти(НовСтр.Имя, "П001200001051") > 0) Тогда // Код вида операции, по которой принимается убыток
			
			КоличествоЗаполненных = ?(ЗначениеЗаполнено(Показатель.Значение), Показатель.Значение.Количество(), 0);
			МаксимальноеЧислоСтрокВМакете = 3;
			ИмяПоказателя = НовСтр.Имя;
			
			Для НомерСтроки = 1 По МаксимальноеЧислоСтрокВМакете Цикл
				
				Если НомерСтроки <> 1 Тогда
					НовСтр = ПоказателиПечати.Добавить();
				КонецЕсли;
				
				Если НомерСтроки <= КоличествоЗаполненных Тогда
					ЗначениеПоказателя = Показатель.Значение[НомерСтроки - 1].Значение;
				Иначе
					ЗначениеПоказателя = "";
				КонецЕсли;
				
				НовСтр.Имя = СтрШаблон(ИмяПоказателя + "_%1", НомерСтроки);
				НовСтр.Значение = ЗначениеПоказателя;
				НовСтр.ЗначениеМЧБ = РегламентированнаяОтчетностьКлиентСервер.ДополнитьСтроку(
					СокрЛП(ЗначениеПоказателя),
					2,
					ДополнениеПустойЯчейки,
					1);
				
			КонецЦикла;
			
		Иначе
			
			НовСтр.ЗначениеМЧБ = ПолучитьЗначениеМЧБ(ИмяФормы, НовСтр, МакетФормыОтчета, СтруктураРеквизитовФормы);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ИдентификаторГруппыПоИмениСтраницы2025(ИмяСтраницы, СтруктураРеквизитовФормы)
	Перем ИдГруппы;
	
	Если ИмяСтраницы = "Раздел1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдРаздел1;
	ИначеЕсли ИмяСтраницы = "Приложение1" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1;
	ИначеЕсли ИмяСтраницы = "Приложение1Расчет" Тогда
		ИдГруппы = СтруктураРеквизитовФормы.мИдПриложение1Расчет;
	КонецЕсли;
	
	Возврат ИдГруппы;
	
КонецФункции

Процедура ПодготовитьОтдельныеОбласти2025(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати)
	
	ПодготовитьОтдельныеОбласти2022(Показатели, ОбщиеРеквизитыРазделов, ПараметрыПечати);
	
	Если ПараметрыПечати.ИмяСтраницы <> "Титульный" Тогда
		Возврат;
	КонецЕсли;
	
	// Показатель ЕРН на Титульном листе разделен на ячейки по группам - для него требуется особая обработка
	
	ЕРН = Показатели.Найти("ЕРН", "Имя");
	Если ЕРН = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПустоеЗначение = "-";
	ДлинаЕРН = 12;
	
	// ЕРН заполняем прочерками по умолчанию
	Для Индекс = 1 По ДлинаЕРН Цикл
		НовСтр = Показатели.Добавить();
		НовСтр.Имя = СтрШаблон("ЕРН%1", Формат(Индекс, "ЧГ="));
		НовСтр.Значение = ПустоеЗначение;
		НовСтр.ЗначениеМЧБ = ПустоеЗначение;
	КонецЦикла;
	
	// В форме ЕРН выводится в виде XXX-XXX-XXX-XXX - обходим каждый разряд и заполняем посимвольно ячейку в МЧД
	МассивЕРН = СтрРазделить(ЕРН.Значение, "-");
	КоличествоСимволовВРазряде = 3;
	НомерРазряда = 0;
	
	Для Каждого ТекущийРазряд Из МассивЕРН Цикл
		
		Для Индекс = 1 По КоличествоСимволовВРазряде Цикл
			
			ИмяПоказателя = СтрШаблон("ЕРН%1", Формат(НомерРазряда * КоличествоСимволовВРазряде + Индекс, "ЧГ="));
			Показатель = Показатели.Найти(ИмяПоказателя, "Имя");
			Если Показатель = Неопределено Тогда
				Показатель = Показатели.Добавить();
				Показатель.Имя = ИмяПоказателя;
			КонецЕсли;
			ЗначениеПоказателя = Сред(ТекущийРазряд, Индекс, 1);
			Показатель.Значение = ?(ЗначениеЗаполнено(ЗначениеПоказателя), ЗначениеПоказателя, ПустоеЗначение);
			Показатель.ЗначениеМЧБ = Показатель.Значение;
			
		КонецЦикла;
		
		НомерРазряда = НомерРазряда + 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#КонецЕсли
