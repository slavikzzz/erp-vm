#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если ТипЗнч(Параметры.ДанныеДляРедактирования) = Тип("ХранилищеЗначения") Тогда 
		ЗагрузкаДанных(Параметры.ДанныеДляРедактирования);
	КонецЕсли;
	
	ОтчетностьМайнеров.СправочникиМайнеровВТаблицыНаФорме(ЭтотОбъект);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Асинх Процедура ПрОтсВотчерПриИзменении(Элемент)
	Если ПрОтсВотчер И СвВотчер.Количество() > 0 Тогда 
		Если КодВозвратаДиалога.Да = Ждать ВопросАсинх("Очистить сведения о ссылках?", РежимДиалогаВопрос.ДаНетОтмена, , КодВозвратаДиалога.Нет) Тогда 
			СвВотчер.Очистить();
		Иначе
			ПрОтсВотчер = Ложь;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвВотчер

&НаКлиенте
Процедура СвВотчерВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СвВотчерСсылкаВотчер" Тогда 
		СтандартнаяОбработка = Ложь;
		АсинхСвВотчерВыбор(Элемент);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвВотчерПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ДобавитьВотчер(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СтраницыПриСменеСтраницы(Элемент, ТекущаяСтраница)
	ОчиститьСообщения();
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвДобытВалют

&НаКлиенте
Процедура СвДобытВалютВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "СвДобытВалютОписание" Тогда 
		СтандартнаяОбработка = Ложь;
		
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СозданиеНового", Ложь);
		ПараметрыФормы.Вставить("ДанныеДляРедактирования", Элемент.ТекущиеДанные.Данные);
		ПараметрыФормы.Вставить("ВыбраннаяСтрока", ВыбраннаяСтрока);
		
		ОткрытьФорму(СтрЗаменить(ИмяФормы, "ФормаСвМайнинг", "ФормаСвДобытВалют"), ПараметрыФормы, ЭтотОбъект,,,,
			Новый ОписаниеОповещения("РедактированиеСвДобытВалютЗавершение", ЭтотОбъект, ПараметрыФормы), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СвДобытВалютПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
	ДобавитьВалюты(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СвДобытВалютПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалитьВалюты(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура СвДобытВалютОписаниеОчистка(Элемент, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвОборудПроизв

&НаКлиенте
Процедура СвОборудПроизвПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалениеОборудования(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СвОборудПроизвАлгоритмНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыборИзСписка("Алгоритмы", "Алгоритм", Элемент, СтандартнаяОбработка);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыСвОборудСправоч

&НаКлиенте
Процедура СвОборудСправочПередУдалением(Элемент, Отказ)
	Отказ = Истина;
	УдалениеОборудования(Элемент);
КонецПроцедуры

&НаКлиенте
Процедура СвОборудСправочКодОборудНачалоВыбора(Элемент, ДанныеВыбора, ВыборДобавлением, СтандартнаяОбработка)
	ВыборИзСписка("Оборудование", "КодОборуд", Элемент, СтандартнаяОбработка);
КонецПроцедуры

&НаКлиенте
Процедура СвОборудСправочПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Если Не Копирование Тогда 
		Отказ = Истина;
		Элементы.СвОборудСправоч.ТекущаяСтрока = СвОборудСправоч.Добавить().ПолучитьИдентификатор();
		ВыборИзСписка("Оборудование", "КодОборуд", Элементы.СвОборудСправочКодОборуд, Ложь);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Асинх Процедура ДобавитьВотчер(Команда)
	СсылкаВотчер = Ждать ВвестиСтрокуАсинх("", "Введите watcher-link ссылку", , Ложь);
	Если ЗначениеЗаполнено(СсылкаВотчер) Тогда 
		НовСтр = СвВотчер.Добавить();
		НовСтр.СсылкаВотчер = СсылкаВотчер;
		ПрОтсВотчер = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьВотчер(Команда)
	Если Элементы.СвВотчер.ТекущиеДанные = Неопределено Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Необходимо выбрать строку для удаления");
	Иначе
		Для Каждого Элт Из ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Элементы.СвВотчер.ВыделенныеСтроки) Цикл 
			СвВотчер.Удалить(СвВотчер.НайтиПоИдентификатору(Элт));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьВалюты(Команда)
	Если СвДобытВалют.Количество() >= 500 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Допускается не более 500 строк со сведениями");
	Иначе
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("СозданиеНового", Истина);
		ПараметрыФормы.Вставить("ДанныеДляРедактирования", Неопределено);
		ПараметрыФормы.Вставить("ВыбраннаяСтрока", Неопределено);
		
		ОткрытьФорму(СтрЗаменить(ИмяФормы, "ФормаСвМайнинг", "ФормаСвДобытВалют"), ПараметрыФормы, ЭтотОбъект,,,,
			Новый ОписаниеОповещения("РедактированиеСвДобытВалютЗавершение", ЭтотОбъект, ПараметрыФормы), РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура УдалитьВалюты(Команда)
	Если Элементы.СвДобытВалют.ТекущиеДанные <> Неопределено И
		КодВозвратаДиалога.Да = Ждать ВопросАсинх("Удалить сведения?", РежимДиалогаВопрос.ДаНетОтмена) Тогда 
		
		СвДобытВалют.Удалить(Элементы.СвДобытВалют.ТекущиеДанные);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура Проверить(Команда)
	ОчиститьСообщения();
	Если СвОборудСправоч.Количество() + СвОборудПроизв.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены сведения об оборудовании", , "СвОборудСправоч");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудСправоч;
		Возврат;
	КонецЕсли;
	Если СвДобытВалют.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены сведения о валютах", , "СвДобытВалют");
		Элементы.Страницы.ТекущаяСтраница = Элементы.ДобытВалют;
		Возврат;
	КонецЕсли;
	Если Не ПрОтсВотчер И СвВотчер.Количество() = 0 Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены сведения о watcher-link ссылках и не указан признак не использования", , "ПрОтсВотчер");
		Элементы.Страницы.ТекущаяСтраница = Элементы.Вотчер;
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр Из СвОборудСправоч Цикл 
		Если СтрДлина(СокрЛП(Стр.КодОборуд)) <> 5 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Код оборудования должен содержать 5 символов", , "СвОборудСправоч");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудСправоч;
			Элементы.СвОборудСправоч.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли Не ЗначениеЗаполнено(Стр.ЗаводНом) Или Не ЗначениеЗаполнено(Стр.КоличЧасЭкспл) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены обязательные реквизиты (подчеркнуты красным)", , "СвОборудСправоч");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудСправоч;
			Элементы.СвОборудСправоч.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли Стр.КоличЧасЭкспл > 744 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Количество часов эксплуатации за месяц не более 744", , "СвОборудСправоч");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудСправоч;
			Элементы.СвОборудСправоч.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из СвОборудПроизв Цикл
		Если СтрДлина(СокрЛП(Стр.Алгоритм)) <> 4 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Код алгоритма должен содержать 4 символа", , "СвОборудПроизв");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудПроизв;
			Элементы.СвОборудПроизв.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли Не ЗначениеЗаполнено(Стр.Марка) Или Не ЗначениеЗаполнено(Стр.Модель) Или Не ЗначениеЗаполнено(Стр.ВычислитМощн)
			 Или Не ЗначениеЗаполнено(Стр.КоличЭнерг) Или Не ЗначениеЗаполнено(Стр.ЗаводНом) Или Не ЗначениеЗаполнено(Стр.КоличЧасЭкспл) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Не заполнены обязательные реквизиты (подчеркнуты красным)", , "СвОборудПроизв");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудПроизв;
			Элементы.СвОборудПроизв.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		ИначеЕсли Стр.КоличЧасЭкспл > 744 Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Количество часов эксплуатации за месяц не более 744", , "СвОборудПроизв");
			Элементы.Страницы.ТекущаяСтраница = Элементы.ОборудПроизв;
			Элементы.СвОборудПроизв.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЦикла;
	Для Каждого Стр Из СвВотчер Цикл
		Если Не ЗначениеЗаполнено(Стр.СсылкаВотчер) Тогда 
			ОбщегоНазначенияКлиент.СообщитьПользователю("Не указаны часы эксплуатации", , "СвВотчер");
			Элементы.Страницы.ТекущаяСтраница = Элементы.Вотчер;
			Элементы.СвВотчер.ТекущаяСтрока = Стр.ПолучитьИдентификатор();
			Возврат;
		КонецЕсли;
	КонецЦикла;
	
	ОбщегоНазначенияКлиент.СообщитьПользователю("Заполнение корректно");
КонецПроцедуры

&НаКлиенте
Процедура Ок(Команда)
	Если Не ЗаполненоКорректно() Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Заполнение некорректно, выполните проверку заполнения");
	Иначе
		Закрыть(ОписаниеРезультата());
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОчиститьСвОборудСправоч(Команда)
	Если ЗначениеЗаполнено(СвОборудСправоч.Количество()) 
		И КодВозвратаДиалога.Да = Ждать ВопросАсинх("Очистить сведения об оборудовании?", РежимДиалогаВопрос.ДаНетОтмена) Тогда
		СвОборудСправоч.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОчиститьСвОборудПроизв(Команда)
	Если ЗначениеЗаполнено(СвОборудПроизв.Количество()) 
		И КодВозвратаДиалога.Да = Ждать ВопросАсинх("Очистить сведения об оборудовании?", РежимДиалогаВопрос.ДаНетОтмена) Тогда
		СвОборудПроизв.Очистить();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ОчиститьСвВотчер(Команда)
	Если ЗначениеЗаполнено(СвВотчер.Количество()) 
		И КодВозвратаДиалога.Да = Ждать ВопросАсинх("Очистить сведения о watcher-link ссылках?", РежимДиалогаВопрос.ДаНетОтмена) Тогда
		СвВотчер.Очистить();
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗагрузкаДанных(ДанныеДляРедактирования)
	ОтчетностьМайнеров.JSONВРеквизитыФормы(ЭтотОбъект, ДанныеДляРедактирования.Получить());
	Для Каждого Стр Из СвДобытВалют Цикл 
		Стр.Данные = Новый ХранилищеЗначения(ПолучитьСтрокуИзДвоичныхДанных(Base64Значение(Стр.Данные)));
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Асинх Процедура АсинхСвВотчерВыбор(Элемент)
	СсылкаВотчер = Ждать ВвестиСтрокуАсинх(Элемент.ТекущиеДанные.СсылкаВотчер, "Введите watcher-link ссылку", , Ложь);
	Если ЗначениеЗаполнено(СсылкаВотчер) Тогда 
		Элемент.ТекущиеДанные.СсылкаВотчер = СсылкаВотчер;
		ПрОтсВотчер = Ложь;
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура РедактированиеСвДобытВалютЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Результат) = Тип("Структура") Тогда
		СтрДляРедактирования = ?(ДополнительныеПараметры.СозданиеНового, 
			СвДобытВалют.Добавить(), СвДобытВалют.НайтиПоИдентификатору(ДополнительныеПараметры.ВыбраннаяСтрока));
		ЗаполнитьЗначенияСвойств(СтрДляРедактирования, Результат);
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗаполненоКорректно()
	Если (СвОборудСправоч.Количество() + СвОборудПроизв.Количество() = 0)
		Или (Не ПрОтсВотчер И СвВотчер.Количество() = 0)
		Или (СвДобытВалют.Количество() = 0) Тогда 
		Возврат Ложь;
	КонецЕсли;
	
	Для Каждого Стр Из СвОборудСправоч Цикл 
		Если СтрДлина(СокрЛП(Стр.КодОборуд)) <> 5 Или Не ЗначениеЗаполнено(Стр.ЗаводНом) 
			Или Не ЗначениеЗаполнено(Стр.КоличЧасЭкспл) Или Стр.КоличЧасЭкспл > 744 Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из СвОборудПроизв Цикл
		Если Не ЗначениеЗаполнено(Стр.Марка) Или Не ЗначениеЗаполнено(Стр.Модель) Или Не ЗначениеЗаполнено(Стр.ВычислитМощн)
			Или Не ЗначениеЗаполнено(Стр.КоличЭнерг) Или Не ЗначениеЗаполнено(Стр.ЗаводНом) Или Не ЗначениеЗаполнено(Стр.КоличЧасЭкспл) 
			Или СтрДлина(СокрЛП(Стр.Алгоритм)) <> 4 Или Стр.КоличЧасЭкспл > 744 Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из СвВотчер Цикл
		Если Не ЗначениеЗаполнено(Стр.СсылкаВотчер) Тогда 
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
КонецФункции

&НаСервере
Функция ОписаниеРезультата()
	РезультатЗакрытия = Новый Структура("Описание, Данные", "", Неопределено);
	Для Каждого Стр Из СвДобытВалют Цикл 
		Стр.Данные = Base64Строка(ПолучитьДвоичныеДанныеИзСтроки(Стр.Данные.Получить()));
	КонецЦикла;
	
	РезультатЗакрытия.Описание = "Информация о " + (СвОборудСправоч.Количество() + СвОборудПроизв.Количество()) + " единицах оброрудования";
	Если СвВотчер.Количество() > 0 Тогда 
		РезультатЗакрытия.Описание = РезультатЗакрытия.Описание + " и " + СвВотчер.Количество() + " watcher-link ссылках";
	КонецЕсли;
	
	ОписаниеJSON = СвМайнингУведомлениеМайнераВJSON();
	РезультатЗакрытия.Данные = Новый ХранилищеЗначения(ОписаниеJSON, Новый СжатиеДанных(9));
	Возврат РезультатЗакрытия;
КонецФункции

&НаСервере
Функция СвМайнингУведомлениеМайнераВJSON()
	ЗаписьJSON = Новый ЗаписьJSON;
	ЗаписьJSON.УстановитьСтроку();
	ЗаписьJSON.ЗаписатьНачалоОбъекта();
	
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "version", "1.0.0");
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "Форма", "ФормаСвМайнинг");
	ОтчетностьМайнеров.ЗаписатьИмяЗначениеСвойства(ЗаписьJSON, "schema", "minerCryptoSchemas.xsd");
	ОтчетностьМайнеров.ЗаписатьПакетПоказателей(Новый Структура("ПрОтсВотчер", ПрОтсВотчер), ЗаписьJSON);
	ОтчетностьМайнеров.ЗаписатьТаблицуПоказателей(ЭтотОбъект, ЗаписьJSON, "СвВотчер");
	ОтчетностьМайнеров.ЗаписатьТаблицуПоказателей(ЭтотОбъект, ЗаписьJSON, "СвДобытВалют");
	ОтчетностьМайнеров.ЗаписатьТаблицуПоказателей(ЭтотОбъект, ЗаписьJSON, "СвОборудПроизв");
	ОтчетностьМайнеров.ЗаписатьТаблицуПоказателей(ЭтотОбъект, ЗаписьJSON, "СвОборудСправоч");
	
	ЗаписьJSON.ЗаписатьКонецОбъекта();
	Результат = ЗаписьJSON.Закрыть();
	Возврат Результат;
КонецФункции

&НаКлиенте
Асинх Процедура УдалениеОборудования(Элемент)
	Если КодВозвратаДиалога.Да = Ждать ВопросАсинх("Удалить оборудование?", РежимДиалогаВопрос.ДаНетОтмена) Тогда 
		Для Каждого Элт Из ОбщегоНазначенияКлиентСервер.СкопироватьМассив(Элементы[Элемент.Имя].ВыделенныеСтроки) Цикл 
			ЭтотОбъект[Элемент.Имя].Удалить(ЭтотОбъект[Элемент.Имя].НайтиПоИдентификатору(Элт));
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСписка(ИмяСписка, ИмяКолонки, Элемент, СтандартнаяОбработка) Экспорт 
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок", "Выбор кода");
	ПараметрыФормы.Вставить("ТаблицаЗначений", ЭтотОбъект[ИмяСписка]);
	ПараметрыФормы.Вставить("СтруктураДляПоиска", Новый Структура("Код", Элемент.Родитель.ТекущиеДанные[ИмяКолонки]));
	
	ДополнительныеПараметры = Новый Структура("Форма, Элемент, ИмяКолонки", ЭтотОбъект, Элемент, ИмяКолонки);
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборИзСпискаЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", 
		ПараметрыФормы, ЭтотОбъект,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ВыборИзСпискаЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Модифицированность = Истина;
	ДополнительныеПараметры.Элемент.Родитель.ТекущиеДанные[ДополнительныеПараметры.ИмяКолонки] = РезультатВыбора.Код;
КонецПроцедуры

#КонецОбласти
