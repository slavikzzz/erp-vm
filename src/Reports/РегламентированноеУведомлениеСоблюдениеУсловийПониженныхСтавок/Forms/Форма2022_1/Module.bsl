
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриЧтенииНаСервере(ТекущийОбъект)

	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПриЧтенииНаСервере(ЭтотОбъект, ТекущийОбъект);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом

КонецПроцедуры

&НаСервере
Процедура ПослеЗаписиНаСервере(ТекущийОбъект, ПараметрыЗаписи)
	
	// СтандартныеПодсистемы.УправлениеДоступом
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.УправлениеДоступом") Тогда
		МодульУправлениеДоступом = ОбщегоНазначения.ОбщийМодуль("УправлениеДоступом");
		МодульУправлениеДоступом.ПослеЗаписиНаСервере(ЭтотОбъект, ТекущийОбъект, ПараметрыЗаписи);
	КонецЕсли;
	// Конец СтандартныеПодсистемы.УправлениеДоступом
	
КонецПроцедуры

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Объект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СоблюдениеУсловийПониженныхСтавок;
	УведомлениеОСпецрежимахНалогообложения.НачальныеОперацииПриСозданииНаСервере(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СформироватьСпискиВыбора(ЭтотОбъект, "СпискиВыбора_2022");
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьТаблицуФорматов(ЭтотОбъект, "Форматы_2022");
	
	Если Параметры.Свойство("Ключ") И ЗначениеЗаполнено(Объект.Ссылка) Тогда
		ЗагрузитьДанные(Параметры.Ключ);
	ИначеЕсли Параметры.Свойство("ЗначениеКопирования") И ЗначениеЗаполнено(Параметры.ЗначениеКопирования) Тогда
		ЗагрузитьДанные(Параметры.ЗначениеКопирования);
	ИначеЕсли Параметры.Свойство("ПредставлениеXML") Тогда 
		Параметры.Свойство("РегистрацияВНалоговомОргане", Объект.РегистрацияВИФНС);
		ЗагрузитьИзXMLНаСервере(Новый Структура("Организация, РегистрацияВНалоговомОргане, ПредставлениеXML", 
								Объект.Организация, Объект.РегистрацияВИФНС, Параметры.ПредставлениеXML));
	Иначе
		Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
		СформироватьДеревоСтраниц();
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
		ЗаполнитьНачальныеДанные();
	КонецЕсли;
	
	Заголовок = УведомлениеОСпецрежимахНалогообложения.ДополнитьЗаголовокУведомления(Заголовок, Объект.Организация);
	ИдДляСвор = УведомлениеОСпецрежимахНалогообложенияСлужебный.ПолучитьИдентификаторыДляСворачивания(ЭтотОбъект);
	ЭтотОбъект["СворачиваемыеЭлементы"] = ПоместитьВоВременноеХранилище(ИдДляСвор);
	УведомлениеОСпецрежимахНалогообложения.СпрятатьКнопкиВыгрузкиОтправкиУНеактуальныхФорм(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура ПриЗакрытии(ЗавершениеРаботы)
	Если ЗавершениеРаботы Тогда
		Возврат;
	КонецЕсли;
	
	Если Модифицированность Тогда
		ПриЗакрытииНаСервере();
	КонецЕсли;
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	РегламентированнаяОтчетностьКлиент.ПередЗакрытиемРегламентированногоОтчета(ЭтотОбъект, Отказ, СтандартнаяОбработка, ЗавершениеРаботы, ТекстПредупреждения);
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриОткрытии(ЭтотОбъект, Отказ);
КонецПроцедуры

&НаКлиенте
Процедура ПослеЗаписи(ПараметрыЗаписи)
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения", ПараметрыЗаписи, Объект.Ссылка);
КонецПроцедуры

&НаКлиенте
Процедура ОбработкаОповещения(ИмяСобытия, Параметр, Источник)
	Если ИмяСобытия = "УведомлениеОСпецрежимахНалогообложения_НавигацияПоОшибкам" Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаОповещенияНавигацииПоОшибкам(ЭтотОбъект, Параметр, Источник);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ПоказатьСДвухмернымШтрихкодомPDF417(Команда)
	РегламентированнаяОтчетностьКлиент.ВывестиМашиночитаемуюФормуУведомленияОСпецрежимахПоСсылке(ЭтотОбъект, Объект.Ссылка);
КонецПроцедуры

#КонецОбласти

&НаКлиенте
Процедура Очистить(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОчиститьУведомление(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОчисткаОтчета() Экспорт
	Объект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Объект.Организация);
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	ЗаполнитьНачальныеДанные();
КонецПроцедуры

&НаСервере
Процедура ЗаполнитьНачальныеДанные() Экспорт
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	Объект.ДатаПодписи = ТекущаяДатаСеанса();
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", Объект.ДатаПодписи);
	
	СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		Объект.Организация, Объект.ДатаПодписи, СтрокаСведений);
	ДанныеУведомленияТитульный.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
	ДанныеУведомленияТитульный.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
	ДанныеУведомленияТитульный.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
	ДанныеУведомленияТитульный.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
	
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ДанныеУведомленияТитульный.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомленияТитульный.Вставить("КПП", Реквизиты.КПП);
	
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура СформироватьДеревоСтраниц() Экспорт
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	КорневойУровень = ДеревоСтраниц.ПолучитьЭлементы();
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2022";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Сведения";
	Стр001.ИндексКартинки = 1;
	Стр001.Многостраничность = Истина;
	Стр001.Многострочность = Истина;
	
	Стр0001 = Стр001.ПолучитьЭлементы().Добавить();
	Стр0001.Наименование = "Стр. 1";
	Стр0001.ИндексКартинки = 1;
	Стр0001.ИмяМакета = "СвСоблУслМХК_2022";
	Стр0001.Многостраничность = Истина;
	Стр0001.Многострочность = Ложь;
	Стр0001.УИД = Новый УникальныйИдентификатор;
	Стр0001.ИДНаименования = "СвСоблУслМХК";
	
	СвСоблУслМХКПериод = Стр0001.ПолучитьЭлементы().Добавить();
	СвСоблУслМХКПериод.Наименование = "Раздел 1";
	СвСоблУслМХКПериод.ИндексКартинки = 1;
	СвСоблУслМХКПериод.ИмяМакета = "СвСоблУслМХКПериод_2022";
	СвСоблУслМХКПериод.Многостраничность = Истина;
	СвСоблУслМХКПериод.Многострочность = Ложь;
	СвСоблУслМХКПериод.УИД = Новый УникальныйИдентификатор;
	СвСоблУслМХКПериод.ИДНаименования = "СвСоблУслМХКПериод";
	
	СвИОКонтрЛиц = Стр0001.ПолучитьЭлементы().Добавить();
	СвИОКонтрЛиц.Наименование = "Раздел А.1" + Символы.ПС + "иностранная организация";
	СвИОКонтрЛиц.ИндексКартинки = 1;
	СвИОКонтрЛиц.ИмяМакета = "СвИОКонтрЛиц_2022";
	СвИОКонтрЛиц.Многостраничность = Истина;
	СвИОКонтрЛиц.Многострочность = Ложь;
	СвИОКонтрЛиц.УИД = Новый УникальныйИдентификатор;
	СвИОКонтрЛиц.ИДНаименования = "СвИОКонтрЛиц";
	
	СвРосОКонтрЛиц = Стр0001.ПолучитьЭлементы().Добавить();
	СвРосОКонтрЛиц.Наименование = "Раздел А.2" + Символы.ПС + "российская организация";
	СвРосОКонтрЛиц.ИндексКартинки = 1;
	СвРосОКонтрЛиц.ИмяМакета = "СвРосОКонтрЛиц_2022";
	СвРосОКонтрЛиц.Многостраничность = Истина;
	СвРосОКонтрЛиц.Многострочность = Ложь;
	СвРосОКонтрЛиц.УИД = Новый УникальныйИдентификатор;
	СвРосОКонтрЛиц.ИДНаименования = "СвРосОКонтрЛиц";
	
	СвФЛКонтрЛиц = Стр0001.ПолучитьЭлементы().Добавить();
	СвФЛКонтрЛиц.Наименование = "Раздел А.3" + Символы.ПС + "физическое лицо";
	СвФЛКонтрЛиц.ИндексКартинки = 1;
	СвФЛКонтрЛиц.ИмяМакета = "СвФЛКонтрЛиц_2022";
	СвФЛКонтрЛиц.Многостраничность = Истина;
	СвФЛКонтрЛиц.Многострочность = Ложь;
	СвФЛКонтрЛиц.УИД = Новый УникальныйИдентификатор;
	СвФЛКонтрЛиц.ИДНаименования = "СвФЛКонтрЛиц";
	
	ОснПрКонтрЛиц = Стр0001.ПолучитьЭлементы().Добавить();
	ОснПрКонтрЛиц.Наименование = "Лист Б";
	ОснПрКонтрЛиц.ИндексКартинки = 1;
	ОснПрКонтрЛиц.ИмяМакета = "ОснПрКонтрЛиц_2022";
	ОснПрКонтрЛиц.Многостраничность = Истина;
	ОснПрКонтрЛиц.Многострочность = Ложь;
	ОснПрКонтрЛиц.УИД = Новый УникальныйИдентификатор;
	ОснПрКонтрЛиц.ИДНаименования = "ОснПрКонтрЛиц";
	
	РаскрКонтрЛицМККосв = Стр0001.ПолучитьЭлементы().Добавить();
	РаскрКонтрЛицМККосв.Наименование = "Листы В";
	РаскрКонтрЛицМККосв.ИндексКартинки = 1;
	РаскрКонтрЛицМККосв.ИмяМакета = "РаскрКонтрЛицМККосв_2022";
	РаскрКонтрЛицМККосв.Многостраничность = Истина;
	РаскрКонтрЛицМККосв.Многострочность = Ложь;
	РаскрКонтрЛицМККосв.УИД = Новый УникальныйИдентификатор;
	РаскрКонтрЛицМККосв.ИДНаименования = "РаскрКонтрЛицМККосв";
	
	СтрЦепочки = РаскрКонтрЛицМККосв.ПолучитьЭлементы().Добавить();
	СтрЦепочки.Наименование = "Раскрытие участия";
	СтрЦепочки.ИндексКартинки = 1;
	СтрЦепочки.Многостраничность = Истина;
	СтрЦепочки.Многострочность = Истина;
	
	РаскрУчМК = СтрЦепочки.ПолучитьЭлементы().Добавить();
	РаскрУчМК.Наименование = "Стр. 1";
	РаскрУчМК.ИндексКартинки = 1;
	РаскрУчМК.ИмяМакета = "РаскрУчМК_2022";
	РаскрУчМК.Многостраничность = Истина;
	РаскрУчМК.Многострочность = Истина;
	РаскрУчМК.УИД = Новый УникальныйИдентификатор;
	РаскрУчМК.МногострочныеЧасти.Добавить("МнгСтр");
	РаскрУчМК.ИДНаименования = "РаскрУчМК";
	
	СвИО = РаскрУчМК.ПолучитьЭлементы().Добавить();
	СвИО.Наименование = "Лист Г" + Символы.ПС + "иностранные организации";
	СвИО.ИндексКартинки = 1;
	СвИО.Многостраничность = Истина;
	СвИО.Многострочность = Истина;
	
	СвИО = СвИО.ПолучитьЭлементы().Добавить();
	СвИО.Наименование = "Стр. 1";
	СвИО.ИндексКартинки = 1;
	СвИО.ИмяМакета = "СвИО_2022";
	СвИО.Многостраничность = Истина;
	СвИО.Многострочность = Ложь;
	СвИО.УИД = Новый УникальныйИдентификатор;
	СвИО.ИДНаименования = "СвИО";
	
	СвРосОрг = РаскрУчМК.ПолучитьЭлементы().Добавить();
	СвРосОрг.Наименование = "Лист Г" + Символы.ПС + "российские организации";
	СвРосОрг.ИндексКартинки = 1;
	СвРосОрг.Многостраничность = Истина;
	СвРосОрг.Многострочность = Истина;
	
	СвРосОрг = СвРосОрг.ПолучитьЭлементы().Добавить();
	СвРосОрг.Наименование = "Стр. 1";
	СвРосОрг.ИндексКартинки = 1;
	СвРосОрг.ИмяМакета = "СвРосОрг_2022";
	СвРосОрг.Многостраничность = Истина;
	СвРосОрг.Многострочность = Ложь;
	СвРосОрг.УИД = Новый УникальныйИдентификатор;
	СвРосОрг.ИДНаименования = "СвРосОрг";
	
	СведИСБезЮЛ = РаскрУчМК.ПолучитьЭлементы().Добавить();
	СведИСБезЮЛ.Наименование = "Лист Г" + Символы.ПС + "иностранные структуры";
	СведИСБезЮЛ.ИндексКартинки = 1;
	СведИСБезЮЛ.Многостраничность = Истина;
	СведИСБезЮЛ.Многострочность = Истина;
	
	СведИСБезЮЛ = СведИСБезЮЛ.ПолучитьЭлементы().Добавить();
	СведИСБезЮЛ.Наименование = "Стр. 1";
	СведИСБезЮЛ.ИндексКартинки = 1;
	СведИСБезЮЛ.ИмяМакета = "СведИСБезЮЛ_2022";
	СведИСБезЮЛ.Многостраничность = Истина;
	СведИСБезЮЛ.Многострочность = Ложь;
	СведИСБезЮЛ.УИД = Новый УникальныйИдентификатор;
	СведИСБезЮЛ.ИДНаименования = "СведИСБезЮЛ";
	
	СвДохРасхМХК = Стр0001.ПолучитьЭлементы().Добавить();
	СвДохРасхМХК.Наименование = "Раздел 2." + Символы.ПС + "Сведения о доходах";
	СвДохРасхМХК.ИндексКартинки = 1;
	СвДохРасхМХК.ИмяМакета = "СвДохРасхМХК_2022";
	СвДохРасхМХК.Многостраничность = Истина;
	СвДохРасхМХК.Многострочность = Ложь;
	СвДохРасхМХК.УИД = Новый УникальныйИдентификатор;
	СвДохРасхМХК.ИДНаименования = "СвДохРасхМХК";
	
	СтрД1 = Стр0001.ПолучитьЭлементы().Добавить();
	СтрД1.Наименование = "Раздел Д.1";
	СтрД1.ИндексКартинки = 1;
	СтрД1.Многостраничность = Истина;
	СтрД1.Многострочность = Истина;
	
	СвДохРасхМХК = СтрД1.ПолучитьЭлементы().Добавить();
	СвДохРасхМХК.Наименование = "Стр. 1";
	СвДохРасхМХК.ИндексКартинки = 1;
	СвДохРасхМХК.ИмяМакета = "СвПринОфисСобств_2022";
	СвДохРасхМХК.Многостраничность = Истина;
	СвДохРасхМХК.Многострочность = Ложь;
	СвДохРасхМХК.УИД = Новый УникальныйИдентификатор;
	СвДохРасхМХК.ИДНаименования = "СвПринОфисСобств";
	
	СтрД2 = Стр0001.ПолучитьЭлементы().Добавить();
	СтрД2.Наименование = "Раздел Д.2";
	СтрД2.ИндексКартинки = 1;
	СтрД2.Многостраничность = Истина;
	СтрД2.Многострочность = Истина;
	
	СвДохРасхМХК = СтрД2.ПолучитьЭлементы().Добавить();
	СвДохРасхМХК.Наименование = "Стр. 1";
	СвДохРасхМХК.ИндексКартинки = 1;
	СвДохРасхМХК.ИмяМакета = "СвПринОфисИное_2022";
	СвДохРасхМХК.Многостраничность = Истина;
	СвДохРасхМХК.Многострочность = Ложь;
	СвДохРасхМХК.УИД = Новый УникальныйИдентификатор;
	СвДохРасхМХК.ИДНаименования = "СвПринОфисИное";
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтроки(Элемент)
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.НеобходимоФормированиеТабличногоДокумента(ЭтотОбъект, Элемент, ЭтотОбъект["УИДПереключение"]) Тогда
		ОтключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение");
		ПодключитьОбработчикОжидания("ДеревоСтраницПриАктивизацииСтрокиЗавершение", 0.1, Истина);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ДеревоСтраницПриАктивизацииСтрокиЗавершение() Экспорт 
	ПредУИД = ЭтотОбъект["УИДПереключение"];
	Элемент = Элементы.ДеревоСтраниц;
	
	Если Элемент.ТекущиеДанные.Многостраничность Тогда 
		ИмяМакета = УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьИмяВыводимогоМакета(Элемент.ТекущиеДанные);
		ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, УведомлениеОСпецрежимахНалогообложенияКлиент.ПолучитьМногострочныеЧасти(Элемент.ТекущиеДанные), ПредУИД);
	Иначе 
		ПоказатьТекущуюСтраницу(Элемент.ТекущиеДанные.ИмяМакета, Элемент.ТекущиеДанные.МногострочныеЧасти, ПредУИД);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюМногостраничнуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюМногостраничнуюСтраницу(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти, ЭтотОбъект["ЧисловыеФорматы"]);
КонецПроцедуры

&НаСервере
Процедура ПоказатьТекущуюСтраницу(ИмяМакета, МногострочныеЧасти, ПредУИД)
	Если Не ЭтотОбъект["УдалениеСтраницы"] И ЭтотОбъект["ТекущиеМногострочныеЧасти"].Количество() > 0 Тогда 
		УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
					ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ПредУИД);
	КонецЕсли;
	ЭтотОбъект["ТекущиеМногострочныеЧасти"] = ОбщегоНазначения.СкопироватьРекурсивно(МногострочныеЧасти);
	ЭтотОбъект["ТекущийМакет"] = ИмяМакета;
	Макет = УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетТабличногоДокумента(ЭтотОбъект, ИмяМакета);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьТекущуюСтраницу(ЭтотОбъект, ИмяМакета, ПредУИД);
	УведомлениеОСпецрежимахНалогообложения.ПоказатьМногострочныеЧасти(ЭтотОбъект, Макет, МногострочныеЧасти, ЭтотОбъект["ЧисловыеФорматы"]);
КонецПроцедуры

&НаКлиенте
Процедура Расчет()
	Обл150 = ПредставлениеУведомления.Области["ДолДохП4Ст3091"];
	Обл10 = ПредставлениеУведомления.Области["СумДохПериод"];
	Обл20 = ПредставлениеУведомления.Области["ОбщСумДохП4Ст3091"];
	Обл150.Значение = ?(ЗначениеЗаполнено(Обл10.Значение), (100.0 * Обл20.Значение) / Обл10.Значение, 0);
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл150, Истина);
	
	Обл180 = ПредставлениеУведомления.Области["ДолРасхРФ"];
	Обл170 = ПредставлениеУведомления.Области["СуммаРасхРФ"];
	Обл160 = ПредставлениеУведомления.Области["СуммаРасхВс"];
	Обл180.Значение = ?(ЗначениеЗаполнено(Обл160.Значение), (100.0 * Обл170.Значение) / Обл160.Значение, 0);
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Обл180, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(Элемент, Область)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, Область, Истина);
	Если ЭтотОбъект["ТекущееИДНаименования"] = "СвДохРасхМХК" Тогда
		Расчет();
	КонецЕсли;
	
	Если Область.Имя = "ДАТА_ПОДПИСИ" Тогда
		Объект.ДатаПодписи = Область.Значение;
		УстановитьДанныеПоРегистрацииВИФНС();
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура УстановитьДанныеПоРегистрацииВИФНС()
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС);
	ПредставлениеУведомления.Области["КодНО"].Значение = Реквизиты.Код;
	ПредставлениеУведомления.Области["КПП"].Значение = Реквизиты.КПП;
	ДанныеУведомленияТитульный = ЭтотОбъект["ДанныеУведомления"]["Титульная"];
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);

	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоФизЛицу(ЭтотОбъект);
	Иначе
		УведомлениеОСпецрежимахНалогообложения.УстановитьПредставителяПоОрганизации(ЭтотОбъект);
	КонецЕсли;
	
	ДанныеУведомленияТитульный.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПредставлениеУведомления.Области["ПРИЗНАК_НП_ПОДВАЛ"].Значение);
	ДанныеУведомленияТитульный.Вставить("НаимДок", ПредставлениеУведомления.Области["НаимДок"].Значение);
	ДанныеУведомленияТитульный.Вставить("ДАТА_ПОДПИСИ", ПредставлениеУведомления.Области["ДАТА_ПОДПИСИ"].Значение);
	ДанныеУведомленияТитульный.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", ПредставлениеУведомления.Области["ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ"].Значение);
	ДанныеУведомленияТитульный.Вставить("КодНО", ПредставлениеУведомления.Области["КодНО"].Значение);
	ДанныеУведомленияТитульный.Вставить("КПП", ПредставлениеУведомления.Области["КПП"].Значение);
КонецПроцедуры

&НаСервере
Процедура СохранитьДанные() Экспорт
	Если ЗначениеЗаполнено(Объект.Ссылка) И Не Модифицированность Тогда 
		Возврат;
	КонецЕсли;
	
	СтруктураПараметров = УведомлениеОСпецрежимахНалогообложения.СтруктураПараметровДляСохранения(ЭтотОбъект);
	УведомлениеОСпецрежимахНалогообложения.СохранитьДанные(ЭтотОбъект, СтруктураПараметров);
КонецПроцедуры

&НаКлиенте
Процедура Сохранить(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьДанные(СсылкаНаДанные)
	УведомлениеОСпецрежимахНалогообложения.ЗагрузкаДанныхУведомления(ЭтотОбъект, СсылкаНаДанные);
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтраницу(Команда) Экспорт 
	ДобавитьСтраницуНаСервере();
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтраницуУведомления(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтраницу(Команда = Неопределено) Экспорт
	ЭтотОбъект["УдалениеСтраницы"] = Истина;
	УдалитьСтраницуНаСервере();
	ЭтотОбъект["УдалениеСтраницы"] = Ложь;
КонецПроцедуры

&НаСервере
Процедура УдалитьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтраницуНаСервере(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура СкопироватьСтраницуНаСервере()
	УведомлениеОСпецрежимахНалогообложения.СобратьДанныеМногострочныхЧастейТекущейСтраницы(
				ЭтотОбъект, ЭтотОбъект["ТекущиеМногострочныеЧасти"], ЭтотОбъект["УИДТекущаяСтраница"]);
	УведомлениеОСпецрежимахНалогообложения.КопироватьСтраницуУведомления(ЭтотОбъект, ЭтотОбъект["СПодчиненными"]);
КонецПроцедуры

&НаКлиенте
Процедура СкопироватьСтраницуНаКлиенте() Экспорт 
	СкопироватьСтраницуНаСервере();
КонецПроцедуры

&НаКлиенте
Процедура ДобавитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	ДобавитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура УдалитьСтрокуНаКлиенте(ИмяОбласти) Экспорт 
	УдалитьСтроку(ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияВыбор(Элемент, Область, СтандартнаяОбработка)
	Если Область.Имя = "ПересчитатьДанныеЦепочек" Тогда 
		ПересчитатьДанныеЦепочек();
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли Область.Имя = "ПересчитатьИтоговыеДанныеЦепочек" Тогда 
		ПересчитатьИтоговыеДанныеЦепочек();
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(
			ЭтотОбъект, ПредставлениеУведомления.Области["ДоляУчКосвИт"], Истина);
		СтандартнаяОбработка = Ложь;
		Возврат;
	ИначеЕсли ЭтоОбластьНомер(Область.Имя) Тогда 
		ВыборНомерУчастника = Новый ОписаниеОповещения("ВыборНомерУчастникаЗавершение", ЭтотОбъект);
		ПараметрыВыборНомерУчастника = Новый Структура("ЗначениеОбласти, ИмяОбласти", Область.Значение, Область.Имя);
		ПараметрыВыборНомерУчастника.Вставить("ВводМногострочнойЧасти", 
			(СтрНачинаетсяС(Область.Имя, "НомерУчПосл") И ЭтотОбъект["ТекущееИДНаименования"] = "РаскрУчМК"));
		ОткрытьФорму("Отчет." + СтрРазделить(ИмяФормы, ".")[1] + ".Форма.ФормаВыборНомерУчастника", ПараметрыВыборНомерУчастника,
			ЭтотОбъект,,,,ВыборНомерУчастника,РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	Если УведомлениеОСпецрежимахНалогообложенияКлиент.ТиповойВыбор(ЭтотОбъект, Область, СтандартнаяОбработка) Или ЭтотОбъект["РучнойВвод"] Тогда 
		Возврат;
	КонецЕсли;
	
	Если СтандартнаяОбработка Тогда 
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПредставлениеУведомленияВыбор(ЭтотОбъект, Область, СтандартнаяОбработка, Истина, Истина);
	КонецЕсли;
	
	Если Область.Имя = "КодНО" Тогда 
		СтандартнаяОбработка = Ложь;
		РегламентированнаяОтчетностьКлиент.ОткрытьФормуВыбораРегистрацииВИФНС(ЭтотОбъект, Область.Имя);
	КонецЕсли;
	
	Если СтандартнаяОбработка И ЭтоОбластьОКСМ(Область) Тогда
		УведомлениеОСпецрежимахНалогообложенияКлиент.ВыборКодаСтраныИзСправочника(ЭтотОбъект, Область, СтандартнаяОбработка);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПересчитатьИтоговыеДанныеЦепочек()
	ИтоговоеЗначение = 0;
	СтруктураОтбора = Новый Структура("УИД");
	ДопСтроки = ПолучитьИзВременногоХранилища(ЭтотОбъект["ДанныеДопСтрок"].МнгСтр);
	Для Каждого Стр Из ЭтотОбъект["ДанныеМногостраничныхРазделов"].РаскрУчМК Цикл 
		Если ЭтотОбъект["УИДТекущаяСтраница"] <> Стр.Значение.УИДРодителя Тогда 
			Продолжить;
		КонецЕсли;
		
		СтруктураОтбора.УИД = Стр.Значение.УИД;
		ОтбСтроки = ДопСтроки.НайтиСтроки(СтруктураОтбора);
		Если ОтбСтроки.Количество() = 0 Тогда 
			Продолжить;
		КонецЕсли;
		
		ДУчИзн = ЭтотОбъект["ОТЧ"].ПривестиЗначение(ОтбСтроки[0].ДоляУчПрям);
		Для Инд = 1 По ОтбСтроки.ВГраница() Цикл 
			ДУчИзн = ДУчИзн * ЭтотОбъект["ОТЧ"].ПривестиЗначение(ОтбСтроки[Инд].ДоляУчПрям) / 100;
			ОтбСтроки[Инд].ДоляУчКосв = ДУчИзн;
		КонецЦикла;
		Стр.Значение.ДоляКосвПослИт = ДУчИзн;
		ИтоговоеЗначение = ИтоговоеЗначение + ДУчИзн;
	КонецЦикла;
	
	ЭтотОбъект["ДанныеДопСтрок"].МнгСтр = 
		ПоместитьВоВременноеХранилище(ДопСтроки, ЭтотОбъект["ДанныеДопСтрок"].МнгСтр);
	ПредставлениеУведомления.Области["ДоляУчКосвИт"].Значение = ИтоговоеЗначение;
КонецПроцедуры

&НаКлиенте
Процедура ПересчитатьДанныеЦепочек()
	Инд = 1;
	ДУчИзн = ЭтотОбъект["ОТЧ"].ПривестиЗначение(ПредставлениеУведомления.Области["ДоляУчПрям" + ЭтотОбъект["РазделительНомераСтроки"] + "1"].Значение);
	ОблИтого = ПредставлениеУведомления.Области["ДоляКосвПослИт"];
	
	ОбщаяДоляУчастия = 0;
	Пока Истина Цикл 
		Инд = Инд + 1;
		ИндСтр = ЭтотОбъект["РазделительНомераСтроки"] + Формат(Инд, "ЧГ=");
		Если ПредставлениеУведомления.Области.Найти("НомерУчПосл" + ИндСтр) = Неопределено Тогда 
			Прервать;
		КонецЕсли;
		
		ОблПрям = ПредставлениеУведомления.Области["ДоляУчПрям" + ИндСтр];
		ОблКосв = ПредставлениеУведомления.Области["ДоляУчКосв" + ИндСтр];
		ДУчИзн = ДУчИзн * ЭтотОбъект["ОТЧ"].ПривестиЗначение(ОблПрям.Значение) / 100;
		ОблКосв.Значение = ДУчИзн;
		УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ОблКосв, Истина);
		
		ОбщаяДоляУчастия = ОбщаяДоляУчастия + ДУчИзн;
	КонецЦикла;
	
	ОблИтого.Значение = ДУчИзн;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ОблИтого, Истина);
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьНомер(ОбластьИмя)
	Если ОбластьИмя = "НомерКонтрЛиц" И 
		(ЭтотОбъект["ТекущееИДНаименования"] = "ОснПрКонтрЛиц" Или ЭтотОбъект["ТекущееИДНаименования"] = "РаскрКонтрЛицМККосв") Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Если СтрНачинаетсяС(ОбластьИмя, "НомерУчПосл") И ЭтотОбъект["ТекущееИДНаименования"] = "РаскрУчМК" Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ВыборНомерУчастникаЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(Ответ) = Тип("Структура") Тогда 
		ТипЧисло = Новый ОписаниеТипов("Число");
		МассивДопОбл = Неопределено;
		Результат = Неопределено;
		ИмяОбласти = Неопределено;
		
		Ответ.Свойство("ИмяОбласти", ИмяОбласти);
		Ответ.Свойство("Результат", Результат);
		Если Ответ.Свойство("Очистить") Тогда 
			Результат = "";
		КонецЕсли;
		Область = ПредставлениеУведомления.Области[ИмяОбласти];
		Область.Значение = Результат;
		ПредставлениеУведомленияПриИзмененииСодержимогоОбласти(ПредставлениеУведомления, Область);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ДобавитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.ДобавитьСтроку(ЭтотОбъект, ИмяОбласти);
	УстановитьФорматыВМногострочныхПолях(ПредставлениеУведомления);
КонецПроцедуры

&НаСервере
Процедура УдалитьСтроку(ИмяОбласти)
	УведомлениеОСпецрежимахНалогообложения.УдалитьСтроку(ЭтотОбъект, ИмяОбласти);
КонецПроцедуры

&НаКлиенте
Функция ОпределитьПринадлежностьОбластиКМногострочномуРазделу(ОбластьИмя) Экспорт 
КонецФункции

&НаКлиенте
Процедура ОбработкаКодаНОЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда 
		Объект.РегистрацияВИФНС = Результат;
		УстановитьДанныеПоРегистрацииВИФНС();
		Модифицированность = Истина;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура ПриЗакрытииНаСервере()
	СохранитьДанные();
КонецПроцедуры

&НаСервере
Функция СформироватьXMLНаСервере(УникальныйИдентификатор)
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ВыгрузитьДокумент(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура СформироватьXML(Команда)
	
	ВыгружаемыеДанные = СформироватьXMLНаСервере(УникальныйИдентификатор);
	Если ВыгружаемыеДанные <> Неопределено Тогда 
		РегламентированнаяОтчетностьКлиент.ВыгрузитьФайлы(ВыгружаемыеДанные);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура СохранитьНаКлиенте(Автосохранение = Ложь,ВыполняемоеОповещение = Неопределено) Экспорт 
	
	СохранитьДанные();
	Если ВыполняемоеОповещение <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение);
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ЗаписатьИЗакрыть(Команда)
	СохранитьДанные();
	Оповестить("Запись_УведомлениеОСпецрежимахНалогообложения",,Объект.Ссылка);
	Закрыть(Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьВКонтролирующийОрган(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПриНажатииНаКнопкуОтправкиВКонтролирующийОрган(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПроверитьВИнтернете(Команда)
	
	РегламентированнаяОтчетностьКлиент.ПроверитьВИнтернете(ЭтотОбъект);
	
КонецПроцедуры

#Область ПанельОтправкиВКонтролирующиеОрганы

&НаКлиенте
Процедура ОбновитьОтправку(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОбновитьОтправкуИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаПротоколНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьПротоколИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ОтправитьНеотправленноеИзвещение(Команда)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОтправитьНеотправленноеИзвещениеИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ЭтапыОтправкиНажатие(Элемент)
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьСостояниеОтправкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура КритическиеОшибкиОбработкаНавигационнойСсылки(Элемент, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиент.ОткрытьКритическиеОшибкиИзПанелиОтправки(ЭтотОбъект, "ФНС");
КонецПроцедуры

&НаКлиенте
Процедура ГиперссылкаНаименованиеЭтапаНажатие(Элемент)
	
	ПараметрыИзменения = Новый Структура;
	ПараметрыИзменения.Вставить("Форма", ЭтотОбъект);
	ПараметрыИзменения.Вставить("Организация", Объект.Организация);
	ПараметрыИзменения.Вставить("КонтролирующийОрган",
		ПредопределенноеЗначение("Перечисление.ТипыКонтролирующихОрганов.ФНС"));
	ПараметрыИзменения.Вставить("ТекстВопроса", НСтр("ru = 'Вы уверены, что уведомление уже сдано?';
													|en = 'Вы уверены, что уведомление уже сдано?'"));
	
	РегламентированнаяОтчетностьКлиент.ИзменитьСтатусОтправки(ПараметрыИзменения);
	
КонецПроцедуры

#КонецОбласти

&НаСервере
Функция ПроверитьВыгрузкуНаСервере()
	СохранитьДанные();
	Документ = РеквизитФормыВЗначение("Объект");
	Возврат Документ.ПроверитьДокументСВыводомВТаблицу(УникальныйИдентификатор);
КонецФункции

&НаКлиенте
Процедура ПроверитьВыгрузку(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПроверитьВыгрузку(ЭтотОбъект, ПроверитьВыгрузкуНаСервере());
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_ОткрытьПрисоединенныеФайлы(Команда)
	
	РегламентированнаяОтчетностьКлиент.СохранитьУведомлениеИОткрытьФормуПрисоединенныеФайлы(ЭтотОбъект);
	
КонецПроцедуры

&НаКлиенте
Процедура ПечатьБРО(Команда)
	ПечатьБРОНаСервере();
	РегламентированнаяОтчетностьКлиент.ОткрытьФормуПредварительногоПросмотра(
		ЭтотОбъект, "Открыть", Ложь, ЭтотОбъект["СтруктураРеквизитовУведомления"].СписокПечатаемыхЛистов);
КонецПроцедуры

&НаСервере
Процедура ПечатьБРОНаСервере()
	УведомлениеОСпецрежимахНалогообложения.ПечатьУведомленияБРО(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РучнойВвод(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРучнойВвод(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура РазрешитьВыгружатьСОшибками(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаРазрешитьВыгружатьСОшибками(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура КомментарийПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзXML(ПараметрыЗагрузкиXML) Экспорт
	ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML);
	Элементы.ДеревоСтраниц.ТекущаяСтрока = ДеревоСтраниц.ПолучитьЭлементы()[0].ПолучитьИдентификатор();
КонецПроцедуры

&НаСервере
Процедура ЗагрузитьИзXMLНаСервере(ПараметрыЗагрузкиXML)
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПараметрыЗагрузкиXML.ПредставлениеXML);
	СхемаВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма_2022");
	УведомлениеОСпецрежимахНалогообложения.УстановитьОрганизациюПоПараметрамЗагрузки(ЭтотОбъект, ПараметрыЗагрузкиXML);
	ДеревоСтраниц.ПолучитьЭлементы().Очистить();
	СформироватьДеревоСтраниц();
	УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ЭтотОбъект);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("ТаблицаОсобыхПолейВВыгрузке", ПолучитьТаблицуОсобыхПолей());
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьОбычныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМногостраничныеСтраницы(ЭтотОбъект, ДеревоЗагрузки, СхемаВыгрузки, ДополнительныеПараметры);
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ЗагрузитьИзФайлаВФормуУведомление(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ЗагрузитьИзФайлаУведомление(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Функция ЭтоОбластьОКСМ(Область)
	Если СтрНачинаетсяС(Область.Имя, "СтрРег") Или Область.Имя = "КодСтр" Тогда 
		Возврат Истина;
	ИначеЕсли ЭтотОбъект["ТекущееИДНаименования"] = "СвФЛКонтрЛиц" И СтрНачинаетсяС(Область.Имя, "ОКСМ") Тогда 
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

&НаКлиенте
Процедура ОчиститьОКСМ(Команда)
	ПредставлениеУведомления.ТекущаяОбласть.Значение = Неопределено;
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПриИзмененииСодержимогоОбласти(ЭтотОбъект, ПредставлениеУведомления.ТекущаяОбласть, Истина);
КонецПроцедуры

&НаКлиенте
Процедура ПредставлениеУведомленияПриАктивизацииОбласти(Элемент)
	Если ПредставлениеУведомления.ТекущаяОбласть.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда 
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = ЭтоОбластьОКСМ(ПредставлениеУведомления.ТекущаяОбласть);
	Иначе
		Элементы.ПредставлениеУведомленияКонтекстноеМенюОчиститьОКСМ.Доступность = Ложь;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура КопироватьСПодчиненными(Команда)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ОбработкаКопироватьСПодчиненными(ЭтотОбъект);
КонецПроцедуры

&НаСервере
Процедура ОсобаяОбработкаЭлементов(Путь, СтрЗагружаемоеЗначение, Страница) Экспорт 
	Если Путь = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвИОКонтрЛиц/НомерКонтрЛиц"
		Или Путь = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвРосОКонтрЛиц/НомерКонтрЛиц"
		Или Путь = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвФЛКонтрЛиц/НомерКонтрЛиц" Тогда 
		Страница.НомерКонтрЛиц = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвИО/НомерУчПосл"
		Или Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвРосОрг/НомерУчПосл"
		Или Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СведИСБезЮЛ/НомерУчПосл" Тогда 
		Страница.НомерУчПосл = ЭтотОбъект["ОТЧ"].ПривестиЗначение(Прав(СтрЗагружаемоеЗначение.ЗначениеЭлемента, 5));
	ИначеЕсли Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/НомерПосл"
		Или Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвИО/НомерПосл"
		Или Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвРосОрг/НомерПосл"
		Или Путь = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СведИСБезЮЛ/НомерПосл" Тогда 
		Страница.НомерПосл = ЭтотОбъект["ОТЧ"].ПривестиЗначение(СтрЗагружаемоеЗначение.ЗначениеЭлемента);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ПолучитьТаблицуОсобыхПолей()
	ТаблицаОсобыхПолейВВыгрузке = УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПутейВВыгрузке();
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвИОКонтрЛиц/НомерКонтрЛиц";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвРосОКонтрЛиц/НомерКонтрЛиц";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/СвКонтрЛиц/СвФЛКонтрЛиц/НомерКонтрЛиц";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвИО/НомерУчПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвИО/НомерПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/НомерПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвРосОрг/НомерУчПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СвРосОрг/НомерПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СведИСБезЮЛ/НомерУчПосл";
	
	НовСтр = ТаблицаОсобыхПолейВВыгрузке.Добавить();
	НовСтр.ПутьXML = "Файл/Документ/СвСоблУслМХК/РаскрКонтрЛицМККосв/РаскрУчМК/СвУчПослКосв/СведИСБезЮЛ/НомерПосл";
	
	Возврат ТаблицаОсобыхПолейВВыгрузке;
КонецФункции

&НаСервере
Процедура УстановитьФорматыВМногострочныхПолях(ТД) Экспорт
	Для Каждого Обл Из ТД.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение Тогда 
			ОблИмя = Лев(Обл.Имя, СтрНайти(Обл.Имя, ЭтотОбъект["РазделительНомераСтроки"]) - 1);
			ОблИмя = ?(ЗначениеЗаполнено(ОблИмя), ОблИмя, Обл.Имя);
			ПоляСФорматами = ЭтотОбъект["ЧисловыеФорматы"].НайтиСтроки(Новый Структура("ИДСтраницы, Поле", ЭтотОбъект["ТекущееИДНаименования"], ОблИмя));
			Если ПоляСФорматами.Количество() > 0 Тогда 
				Знак = ?(ПоляСФорматами[0].Неотрицательный, ДопустимыйЗнак.Неотрицательный, ДопустимыйЗнак.Любой);
				ОТ = Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(ПоляСФорматами[0].Всего, ПоляСФорматами[0].ПослеЗапятой, Знак));
				Обл.ТипЗначения = ОТ;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

&НаСервере
Процедура РазрешитьРедактированиеРеквизитовОбъекта() Экспорт
	РегламентированнаяОтчетность.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры

&НаКлиенте
Процедура Подключаемый_РазрешитьРедактированиеРеквизитовОбъекта(Команда)
	РегламентированнаяОтчетностьКлиент.РазрешитьРедактированиеРеквизитовОтчета(ЭтотОбъект);
КонецПроцедуры
