#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
КонецПроцедуры

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   СвойстваНастройки - Структура - Описание настройки отчета, которая будет выведена в форме отчета:
//       * ОписаниеТипов - ОписаниеТипов -
//           Тип настройки.
//       * ЗначенияДляВыбора - СписокЗначений -
//           Объекты, которые будут предложены пользователю в списке выбора.
//           Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос -
//           Возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево -
//           Когда Истина, то выбор пользователя будет ограничен значениями,
//           указанными в ЗначенияДляВыбора (его конечным состоянием).
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	Если СвойстваНастройки.Тип = "ЗначениеПараметраНастроек"
		И СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("ПараметрыДанных.ДанныеОтчета") Тогда
		НастроитьСписокВыбораВалютыОтчета(СвойстваНастройки);
	КонецЕсли;
КонецПроцедуры
	
#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ПользовательскиеНастройкиМодифицированы = Ложь;
	
	Документы.ПлановаяКалькуляция.УстановитьОбязательныеНастройкиОтчетов(КомпоновщикНастроек, ПользовательскиеНастройкиМодифицированы);
	
	ТекстЗапроса = СхемаКомпоновкиДанных.НаборыДанных.ДанныеСебестоимости.Запрос;
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстЗапросаКоэффициентУпаковки",
			Справочники.УпаковкиЕдиницыИзмерения.ТекстЗапросаКоэффициентаУпаковки(
			"РесурсныеСпецификацииВыходныеИзделия.Упаковка",
			"РесурсныеСпецификацииВыходныеИзделия.Номенклатура"));
	СхемаКомпоновкиДанных.НаборыДанных.ДанныеСебестоимости.Запрос = ТекстЗапроса;
	
	// Сообщим форме отчета, что настройки модифицированы
	Если ПользовательскиеНастройкиМодифицированы Тогда
		КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.Вставить("ПользовательскиеНастройкиМодифицированы", Истина);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура НастроитьСписокВыбораВалютыОтчета(СвойстваНастройки)
	
	ВидЦеныПлановойСтоимости   = Константы.ВидЦеныПлановойСтоимостиМатериаловРабот.Получить();
	ПлановаяСтоимостьСНДС      = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ВидЦеныПлановойСтоимости, "ЦенаВключаетНДС");
	
	Если ПлановаяСтоимостьСНДС <> Неопределено И ПлановаяСтоимостьСНДС Тогда
		
		НайденныйЭлементСписка = СвойстваНастройки.ЗначенияДляВыбора.НайтиПоЗначению(3);
		Если НайденныйЭлементСписка <> Неопределено Тогда
			СвойстваНастройки.ЗначенияДляВыбора.Удалить(НайденныйЭлементСписка);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли

