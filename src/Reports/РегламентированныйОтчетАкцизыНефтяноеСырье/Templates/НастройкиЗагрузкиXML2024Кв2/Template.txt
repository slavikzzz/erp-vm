// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы единственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцНефт")[0];
	НайденныйУзел.МнУр = Истина;
	НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		ТекущийУзел.МнУр = Истина;
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Раздел", "Раздел21"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Раздел = "Раздел2"; // переносим подраздел в единый многоуговневый раздел
	КонецЦикла;
	
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцНефт/СумНалПУ")[0];
	НайденныйУзел.Обязательность = НайденныйУзел.Обязательность + "П"; // пропустить при автоматической загрузке
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П10001М203000"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П00001М203000"; // обработаем в структуре данных документа
		УзелНалПУ1 = СкопированныйУзел(СтрокаДерева.Родитель, СтрокаДерева);
		УзелНалПУ1.Код = "НалПУ1";
		УзелНалПУ1.Ключ = "П00001М204000";
		УзелНалПУ1.Значение = "0";
	КонецЦикла;
	
	НайденныеСтроки = П.ДеревоДляЗагрузки.Строки.НайтиСтроки(Новый Структура("Ключ", "П100030002003"), Истина);
	Для Каждого СтрокаДерева Из НайденныеСтроки Цикл
		СтрокаДерева.Ключ = "П000030002003"; // обработаем в структуре данных документа
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Период         = П.ПараметрыОтчета.Период;
		Титульный.ОтчетГод       = П.ПараметрыОтчета.ОтчетГод;
		Титульный.НалоговыйОрган = П.ПараметрыОтчета.КодНО;
		Титульный.ПоМесту        = П.ПараметрыОтчета.ПоМесту;
		
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.ФормРеорг) Тогда
			Титульный.КодФормыРеорганизации          = П.ПараметрыОтчета.ФормРеорг;
			Титульный.ИННРеорганизованнойОрганизации = П.ПараметрыОтчета.ИННРеорг;
			Титульный.КППРеорганизованнойОрганизации = П.ПараметрыОтчета.КППРеорг;
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокиРаздела1 = УзлыПоXPath(П.ДеревоДляЗагрузки, "//Документ/АкцНефт/СумНалПУ"); // Строки раздела 1
	
	Для НомСтрокиУр1 = 1 По СтрокиРаздела1.Количество() Цикл
		
		УзелСумНалПУ = СтрокиРаздела1[НомСтрокиУр1 - 1];
		
		УзлыСумНалПУКод = УзлыПоXPath(УзелСумНалПУ, "СумНалПУКод");
		Для Каждого УзелСумНалПУКод Из УзлыСумНалПУКод Цикл
			
			УзелНалПУ0 = УзлыПоXPath(УзелСумНалПУКод, "@НалПУ")[0];
			УзелНалПУ1 = УзлыПоXPath(УзелСумНалПУКод, "@НалПУ1")[0];
			
			Если Лев(УзелНалПУ0.Значение, 1) = "-" Тогда
				УзелНалПУ1.Значение = Сред(УзелНалПУ0.Значение, 2);
				УзелНалПУ0.Значение = "0";
			КонецЕсли;
			
		КонецЦикла;
		
		НомСтроки = Новый Массив(1);
		НомСтроки[0] = НомСтрокиУр1;
		
		ЗаполнитьДаннымиСохраненныйДокументИзДереваДляЗагрузки(УзелСумНалПУ, П.ДанныеОтчета, П.ПараметрыОтчета, , Новый Массив(), НомСтроки);
		
	КонецЦикла;
	
	Раздел3 = Неопределено;
	
	П.ДанныеОтчета.ДанныеМногоуровневыхРазделов.Свойство("Раздел3", Раздел3);
	Если Раздел3 <> Неопределено Тогда
		Для Каждого СтраницаРаздела Из Раздел3.Строки Цикл
			ДанныеСтраницы = СтраницаРаздела.Данные;
			
			ЗначениеПоказателя = 0;
			Если ДанныеСтраницы.Свойство("П000030002003", ЗначениеПоказателя) Тогда
				ЗначениеПоказателя = 0 + ЗначениеПоказателя;
				Если ЗначениеПоказателя >= 0 Тогда
					ДанныеСтраницы.Вставить("П000030002003", ЗначениеПоказателя);
					ДанныеСтраницы.Вставить("П000030002503", 0);
				Иначе
					ДанныеСтраницы.Вставить("П000030002003", 0);
					ДанныеСтраницы.Вставить("П000030002503", -ЗначениеПоказателя);
				КонецЕсли;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
#КонецОбласти