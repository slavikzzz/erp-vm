#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если НаДату > '20110701' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение №1 к Протоколу об обмене информацией государств-членов Евразийского экономического союза (с выгрузкой в формате 5.08).";
	НоваяФорма.РедакцияФормы      = "выгрузка в формате 5.08.";
	НоваяФорма.ДатаНачалоДействия = '2005-01-01';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20110701 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '20091211', "б/н",  "ФормаОтчета2011кв3");
	Форма20120201 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '20091211', "б/н",  "ФормаОтчета2012Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20110701, "5.03" , , , '2011-07-01');
	ОпределитьФорматВДеревеФормИФорматов(Форма20120201, "5.04" , , , '2012-02-01');
	
	Форма20120202 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2009-12-11', "б/н",  "ФормаОтчета2012Кв2");
	ОпределитьФорматВДеревеФормИФорматов(Форма20120202, "5.05" , , , '2012-06-01');
	
	Форма20121001 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2009-12-11', "б/н",  "ФормаОтчета2012Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма20121001, "5.06" , , , '2012-10-01');
	
	Форма20150101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2009-12-11', "б/н",  "ФормаОтчета2015кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20150101, "5.07");
	
	Форма20200201 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2009-12-11', "б/н",  "ФормаОтчета2020кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20200201, "5.08");
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "", ИмяОбъекта = "",
			ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ПолучитьСведенияОПредставителе(Организация, КодИФНС) Экспорт
	
	флПредставительЮрЛицо = Истина;
	НаименованиеОрганизацииПредставителя = "";
	ФИОПредставителя = "";
	ТипПредставителя = "1";
	
	Запрос = Новый Запрос("ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	                      |	РегистрацииВНалоговомОргане.Код КАК Код,
	                      |	РегистрацииВНалоговомОргане.КПП КАК КПП,
	                      |	РегистрацииВНалоговомОргане.Ссылка КАК Ссылка
	                      |ИЗ
	                      |	Справочник.РегистрацииВНалоговомОргане КАК РегистрацииВНалоговомОргане
	                      |ГДЕ
	                      |	РегистрацииВНалоговомОргане.Код = &Код
	                      |	И РегистрацииВНалоговомОргане.Владелец = &Владелец");
	Запрос.УстановитьПараметр("Код", КодИФНС);
	Запрос.УстановитьПараметр("Владелец", Организация);
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		
		ДанныеПредставителя = РегистрацияВНОСервер.ДанныеРегистрации(Выборка.Ссылка);
		
		Если ЗначениеЗаполнено(ДанныеПредставителя.Представитель) Тогда
			ТипПредставителя = "2";
			Если НЕ РегламентированнаяОтчетность.ПредставительЯвляетсяФизЛицом(ДанныеПредставителя.Представитель) Тогда
				флПредставительЮрЛицо = Истина;
				ФИОПредставителя = СокрЛП(ДанныеПредставителя.УполномоченноеЛицоПредставителя);
				ПредставительСсылка = ДанныеПредставителя.Представитель;
			Иначе
				флПредставительЮрЛицо = Ложь;
				ПредставительСсылка = ДанныеПредставителя.Представитель;
				ФИОПредставителя = СокрЛП(ПредставительСсылка);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Новый Структура("ТипПредставителя, флПредставительЮрЛицо, ФИОПредставителя, ПредставительСсылка", 
							 ТипПредставителя, флПредставительЮрЛицо, ФИОПредставителя, ПредставительСсылка);
	
КонецФункции
						 
#КонецОбласти

#КонецЕсли