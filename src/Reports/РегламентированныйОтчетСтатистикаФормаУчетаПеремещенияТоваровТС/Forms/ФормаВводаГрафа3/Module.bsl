#Область ОписаниеПеременных

&НаКлиенте
Перем Оповестить;

#КонецОбласти

#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ОтвЛицоФинУр 			          = Параметры.ОтвЛицоФинУр;
	ОтвЛицоФинУрИндекс                = Параметры.ОтвЛицоФинУрИндекс;
	ОтвЛицоФинУрНаименование          = Параметры.ОтвЛицоФинУрНаименование;
	ОтвЛицоФинУрНаселенныйПункт 	  = Параметры.ОтвЛицоФинУрНаселенныйПункт;
	ОтвЛицоФинУрОбласть 			  = Параметры.ОтвЛицоФинУрОбласть;
	ОтвЛицоФинУрПасВидДок 			  = Параметры.ОтвЛицоФинУрПасВидДок;	
	ОтвЛицоФинУрПасДатаДок 			  = Параметры.ОтвЛицоФинУрПасДатаДок;
	ОтвЛицоФинУрПасНаименование		  = Параметры.ОтвЛицоФинУрПасНаименование;
	ОтвЛицоФинУрПасНомерДок 		  = Параметры.ОтвЛицоФинУрПасНомерДок;
	Параметры.Свойство("ОтвЛицоФинУрПасСерДок", ОтвЛицоФинУрПасСерДок);
	ОтвЛицоФинУрПасОрг 			      = Параметры.ОтвЛицоФинУрПасОрг;
	ОтвЛицоФинУрПодИндекс 		      = Параметры.ОтвЛицоФинУрПодИндекс;
	ОтвЛицоФинУрПодНаименование 	  = Параметры.ОтвЛицоФинУрПодНаименование;
	ОтвЛицоФинУрПодНаселенныйПункт    = Параметры.ОтвЛицоФинУрПодНаселенныйПункт;
	ОтвЛицоФинУрПодОбласть 		      = Параметры.ОтвЛицоФинУрПодОбласть;
	ОтвЛицоФинУрПодРФ_ИНН          	  = Параметры.ОтвЛицоФинУрПодРФ_ИНН;
	ОтвЛицоФинУрПодРФ_КПП             = Параметры.ОтвЛицоФинУрПодРФ_КПП;
	ОтвЛицоФинУрПодРФ_ОГРН 			  = Параметры.ОтвЛицоФинУрПодРФ_ОГРН;
	ОтвЛицоФинУрПодСтранаКод 		  = Параметры.ОтвЛицоФинУрПодСтранаКод;
	ОтвЛицоФинУрПодСтранаНаименование = Параметры.ОтвЛицоФинУрПодСтранаНаименование;	
	ОтвЛицоФинУрПодУлицаНомерДома 	  = Параметры.ОтвЛицоФинУрПодУлицаНомерДома;
	ОтвЛицоФинУрРФ_ИНН			      = Параметры.ОтвЛицоФинУрРФ_ИНН;
	ОтвЛицоФинУрРФ_КПП 		          = Параметры.ОтвЛицоФинУрРФ_КПП;
	ОтвЛицоФинУрРФ_ОГРН 			  = Параметры.ОтвЛицоФинУрРФ_ОГРН;
	ОтвЛицоФинУрСтранаКод 		      = Параметры.ОтвЛицоФинУрСтранаКод;
	ОтвЛицоФинУрСтранаНаименование    = Параметры.ОтвЛицоФинУрСтранаНаименование;
	ОтвЛицоФинУрУлицаНомерДома        = Параметры.ОтвЛицоФинУрУлицаНомерДома;
	
	Параметры.Свойство("ОтвЛицоФинУр_ОПИндекс", ОтвЛицоФинУр_ОПИндекс);
	Параметры.Свойство("ОтвЛицоФинУр_ОПНазвание", ОтвЛицоФинУр_ОПНазвание);
	Параметры.Свойство("ОтвЛицоФинУр_ОПНаселенныйПункт", ОтвЛицоФинУр_ОПНаселенныйПункт);
	Параметры.Свойство("ОтвЛицоФинУр_ОПНСА", ОтвЛицоФинУр_ОПНСА);
	Параметры.Свойство("ОтвЛицоФинУр_ОПОбласть", ОтвЛицоФинУр_ОПОбласть);
	Параметры.Свойство("ОтвЛицоФинУр_ОПСтранаКод", ОтвЛицоФинУр_ОПСтранаКод);
	Параметры.Свойство("ОтвЛицоФинУр_ОПСтранаНаименование", ОтвЛицоФинУр_ОПСтранаНаименование);
	Параметры.Свойство("ОтвЛицоФинУр_ОПУлицаНомерДома", ОтвЛицоФинУр_ОПУлицаНомерДома);
	Параметры.Свойство("ОтвЛицоФинУр_Тел", ОтвЛицоФинУр_Тел);
	Параметры.Свойство("ОтвЛицоФинУр_Почта", ОтвЛицоФинУр_Почта);
	
	Параметры.Свойство("ОтвЛицоФинУр_Форма", ОтвЛицоФинУр_Форма);
	
	СтруктураРеквизитов = Новый Структура;
	МассивРеквизитов = ПолучитьРеквизиты();
	Для Каждого Реквизит Из МассивРеквизитов Цикл
		Если Реквизит.Имя <> "СтруктураРеквизитов" И Реквизит.Имя <> "ВидыУдостЛичности" И Реквизит.Имя <> "СтраныМира" Тогда
			СтруктураРеквизитов.Вставить(Реквизит.Имя);
		КонецЕсли;
	КонецЦикла;	
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	СтранаКодУмолч  = "RU";
	СтранаНаимУмолч = "РОССИЯ";	
	ОтвЛицоФинУрСтранаКод = СтранаКодУмолч;  
	ОтвЛицоФинУрСтранаНаименование = СтранаНаимУмолч;
	ОтвЛицоФинУрПодСтранаКод = СтранаКодУмолч;
	ОтвЛицоФинУрПодСтранаНаименование = СтранаНаимУмолч;  
	
	Если ПустаяСтрока(ОтвЛицоФинУрПасНаименование) Тогда
		 СтрокаПасРФ = ВидыУдостЛичности.НайтиСтроки(Новый Структура("Кратко", "ПасРФ"));
		 Если СтрокаПасРФ <> Неопределено И ТипЗнч(СтрокаПасРФ) = Тип("Массив") И СтрокаПасРФ.Количество() > 0 Тогда
	  		 ОтвЛицоФинУрПасВидДок = СтрокаПасРФ[0].Код; 
			 ОтвЛицоФинУрПасНаименование = СтрокаПасРФ[0].Кратко;
		 КонецЕсли;
	КонецЕсли;
	 
	Модифицированность = Ложь;
	Оповестить = Ложь;
	
 КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытием(Отказ, ЗавершениеРаботы, ТекстПредупреждения, СтандартнаяОбработка)
	
	Если Модифицированность Тогда
		
		Отказ = Истина;
		
		Если ЗавершениеРаботы Тогда
		
			ТекстПредупреждения = НСтр("ru = 'Данные были изменены.
											|Перед завершением работы рекомендуется сохранить измененные данные,
											|иначе изменения будут утеряны.';
											|en = 'Данные были изменены.
											|Перед завершением работы рекомендуется сохранить измененные данные,
											|иначе изменения будут утеряны.'");
			
			Возврат;
		
		КонецЕсли;
		
		ТекстВопроса = НСтр("ru = 'Данные были изменены. Применить изменения?';
							|en = 'Данные были изменены. Применить изменения?'");
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершение", ЭтотОбъект);
		
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса,  РежимДиалогаВопрос.ДаНетОтмена);
						
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",                      "Выберите документ, удостоверяющий личность");
	ПараметрыФормы.Вставить("ТаблицаЗначений",                ВидыУдостЛичности);
	ПараметрыФормы.Вставить("СтруктураДляПоиска",             Новый Структура("Кратко", ОтвЛицоФинУрПасНаименование));
	ПараметрыФормы.Вставить("НаимКолонкиНазвание",            "Название");
	ПараметрыФормы.Вставить("ВключитьВидимостьКолонкиКратко", Истина);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУрПасНаименованиеНачалоВыбораЗавершение", ЭтотОбъект);

	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
	 
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрИндексПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрОбластьПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаселенныйПунктПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрУлицаНомерДомаПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрРФ_КПППриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНомерДокПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасДатаДокПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасОргПриИзменении(Элемент)
	Модифицированность = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУр_ОПСтранаНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	СтандартнаяОбработка = Ложь;
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Заголовок",                      "Выберите страну");
	ПараметрыФормы.Вставить("ТаблицаЗначений",                СтраныМира);
	ПараметрыФормы.Вставить("НаимКолонкиНазвание",            "Название");
	ПараметрыФормы.Вставить("СтруктураДляПоиска",             Новый Структура("Кратко", ОтвЛицоФинУр_ОПСтранаНаименование));
	ПараметрыФормы.Вставить("ВключитьВидимостьКолонкиКратко", Ложь);
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУр_ОПСтранаНаименованиеНачалоВыбораЗавершение", ЭтотОбъект);

	ОткрытьФорму("Обработка.ОбщиеОбъектыРеглОтчетности.Форма.ФормаВыбораЗначенияИзТаблицы", ПараметрыФормы, ЭтаФорма,,,, ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрСтранаНаименованиеПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ОтвЛицоФинУрСтранаНаименование) Тогда 
		ОтвЛицоФинУрСтранаКод = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУр_ОПСтранаНаименованиеПриИзменении(Элемент)
	Если Не ЗначениеЗаполнено(ОтвЛицоФинУр_ОПСтранаНаименование) Тогда 
		ОтвЛицоФинУр_ОПСтранаКод = "";
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаименованиеНачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка)
	ИмяСправочникаДляВыбора = "Организации";
	Если НЕ ВладелецФормы.СуществуетСправочник(ИмяСправочникаДляВыбора) Тогда
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	
	ВыбранноеЗначение = Неопределено;
	ОписаниеОповещения = Новый ОписаниеОповещения("ОтвЛицоФинУрНаименованиеНачалоВыбораЗавершение", ЭтотОбъект, ИмяСправочникаДляВыбора);
	ВладелецФормы.ПолучитьСведенияИзСправочника(Элемент.ТекстРедактирования, ИмяСправочникаДляВыбора, ВыбранноеЗначение, ОписаниеОповещения);
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура КнопкаОКНажатие(Команда)
	    	
	ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершениеПродолжение", ЭтотОбъект);
	ПрименитьИзменения(ОписаниеОповещения);

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура ПередЗакрытиемЗавершение(Ответ, ДополнительныеПараметры) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("ПередЗакрытиемЗавершениеПродолжение", ЭтотОбъект);
		ПрименитьИзменения(ОписаниеОповещения);
				
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		
		Модифицированность = Ложь;
		Закрыть(Неопределено);
		
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ПередЗакрытиемЗавершениеПродолжение(Результат, ДополнительныеПараметры) Экспорт

	Если Результат = Истина Тогда
		
		Модифицированность = Ложь;
		Закрыть(СтруктураРеквизитов);
		
	КонецЕсли;
	
КонецПроцедуры

&НаСервере
Функция ПолучитьПустуюСтруктуруРеквизитов() Экспорт
	
	ПустаяСтруктураРеквизитовФормы = Новый Структура;
		
	Для Каждого ЭлементФормы Из ЭтаФорма.Элементы Цикл
		
		Если ТипЗнч(ЭлементФормы) = Тип("ПолеФормы") Тогда
			Если ЗначениеЗаполнено(ЭлементФормы.ПутьКДанным) Тогда
				
				ПустаяСтруктураРеквизитовФормы.Вставить(ЭлементФормы.ПутьКДанным);
								
			КонецЕсли; 
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ПустаяСтруктураРеквизитовФормы;
	
КонецФункции	

&НаКлиенте
Процедура ПрименитьИзменения(ВыполняемоеОповещение)
		
	РеквСтрокаСообщения	= "";
		
	Для Каждого РеквизитФормы Из СтруктураРеквизитов Цикл
						
		СтруктураРеквизитов[РеквизитФормы.Ключ] = ЭтаФорма[РеквизитФормы.Ключ];
		
		Если Элементы.Найти(РеквизитФормы.Ключ) = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
								
		//Проверка на заполненность полей, обязательных к заполнению
		Если ТипЗнч(Элементы[РеквизитФормы.Ключ]) = Тип("ПолеФормы") Тогда
			Если Элементы[РеквизитФормы.Ключ].Видимость И Элементы[РеквизитФормы.Ключ].АвтоОтметкаНезаполненного = Истина Тогда
				Если НЕ ЗначениеЗаполнено(СтруктураРеквизитов[РеквизитФормы.Ключ]) Тогда
							
					ПредставлениеРекв = Элементы[РеквизитФормы.Ключ].Заголовок;
					Если СтрНайти(СтруктураРеквизитов[РеквизитФормы.Ключ], "ПасНаим") > 0 Тогда
						ПредставлениеРекв = "Док., удост. личн. (кратко)";
					КонецЕсли; 
					РеквСтрокаСообщения = РеквСтрокаСообщения + ?(ПустаяСтрока(РеквСтрокаСообщения), "", "," + Символы.ПС) + """" + ПредставлениеРекв + """";
							 
				КонецЕсли;	
			КонецЕсли; 
		КонецЕсли;		
			
	КонецЦикла; 
	
	Если НЕ ПустаяСтрока(РеквСтрокаСообщения) Тогда 
		
		ТекстВопроса = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = 'Не заполнены поля, обязательные к заполнению: %1 %1%2. %1 %1 Продолжить редактирование ?';
																					|en = 'Не заполнены поля, обязательные к заполнению: %1 %1%2. %1 %1 Продолжить редактирование ?'"), Символы.ПС, РеквСтрокаСообщения);
		ОписаниеОповещения = Новый ОписаниеОповещения("ПрименитьИзмененияЗавершение", ЭтотОбъект, ВыполняемоеОповещение);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет);
		Возврат;
		
	КонецЕсли;		

	ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);

КонецПроцедуры

&НаКлиенте
Процедура ПрименитьИзмененияЗавершение(Ответ, ВыполняемоеОповещение) Экспорт
	
	Если Ответ = КодВозвратаДиалога.Да Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Ложь);
	ИначеЕсли Ответ = КодВозвратаДиалога.Нет Тогда
		ВыполнитьОбработкуОповещения(ВыполняемоеОповещение, Истина);	
	КонецЕсли;
	
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрПасНаименованиеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ОтвЛицоФинУрПасВидДок = Результат["Код"];
		ОтвЛицоФинУрПасНаименование = ВРег(Результат["Кратко"]);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУр_ОПСтранаНаименованиеНачалоВыбораЗавершение(Результат, ДополнительныеПараметры) Экспорт
	Если Результат <> Неопределено Тогда
		ОтвЛицоФинУр_ОПСтранаКод = Результат["Код"];
		ОтвЛицоФинУр_ОПСтранаНаименование = Результат["Кратко"];
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура ОтвЛицоФинУрНаименованиеНачалоВыбораЗавершение(СтруктураВозврата, ИмяСправочникаДляВыбора) Экспорт 
	СтруктураСведений = СтруктураВозврата.СтруктураСведений;
	ВыбранноеЗначение = СтруктураВозврата.ВыбранноеЗначение;
		
	Если ВыбранноеЗначение = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	СтруктураАдреса = ВладелецФормы.АдресВФормате9ЗапятыхВСтруктуруПорталаТСНаКлиенте(СтруктураСведений.Адрес);
	
	ОтвЛицоФинУрНаименование = СтруктураСведений.Наименование;

	ОтвЛицоФинУрИндекс  =  СтруктураАдреса.Индекс;
	ОтвЛицоФинУрОбласть = СтруктураАдреса.Область;
	ОтвЛицоФинУрНаселенныйПункт = СтруктураАдреса.НаселенныйПункт;
	ОтвЛицоФинУрУлицаНомерДома = СтруктураАдреса.УлицаНомерДома;
	
	Если ЗначениеЗаполнено(ОтвЛицоФинУрОбласть) И Не ЗначениеЗаполнено(ОтвЛицоФинУрНаселенныйПункт) Тогда 
		ОтвЛицоФинУрНаселенныйПункт = "-";
	КонецЕсли;
	
	ОтвЛицоФинУрРФ_ИНН  = СтруктураСведений.ИНН;
	ОтвЛицоФинУрРФ_КПП  = СтруктураСведений.КПП;
	СтруктураСведений.Свойство("ОГРН", ОтвЛицоФинУрРФ_ОГРН);
	СтруктураСведений.Свойство("ОргПравФорм", ОтвЛицоФинУр_Форма);
КонецПроцедуры

#КонецОбласти
