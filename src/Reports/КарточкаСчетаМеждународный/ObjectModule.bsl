#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	ПараметрПланСчетов = КомпоновкаДанныхКлиентСервер.ПолучитьПараметр(КомпоновщикНастроек, "ПланСчетов");
	ВариантФормированияПроводок = Неопределено;
	Если ПараметрПланСчетов <> Неопределено И ЗначениеЗаполнено(ПараметрПланСчетов.Значение) Тогда
		ПланСчетов = ПараметрПланСчетов.Значение; // СправочникСсылка.ПланыСчетовМеждународногоУчета -
		ВариантФормированияПроводок = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПланСчетов, "ВариантФормированияПроводок");
	КонецЕсли;
	
	Если ВариантФормированияПроводок = Перечисления.ВариантыФормированияПроводок.БезКорреспонденции Тогда
			
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "АналитикаДт");
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "АналитикаКт");
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "СчетДт");
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "СчетКт");
			
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "Аналитика");
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "Счет");

		
	Иначе
		
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "АналитикаДт");
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "АналитикаКт");
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "СчетДт");
		КомпоновкаДанныхСервер.ВключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "СчетКт");
		
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "Аналитика");
		КомпоновкаДанныхСервер.ОтключитьВыбранноеПолеВПользовательскихНастройках(КомпоновщикНастроек, "Счет");
		
	КонецЕсли;
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.КлючВарианта = "КарточкаСчетаМеждународный" Тогда
		
		ПолеСчет = Новый ПолеКомпоновкиДанных("Счет");
		ОтборПоСчету = Неопределено;
		Для каждого ЭлементОтбора Из СхемаКомпоновкиДанных.НастройкиПоУмолчанию.Отбор.Элементы Цикл
			Если ЭлементОтбора.ЛевоеЗначение = ПолеСчет Тогда
				ОтборПоСчету = ЭлементОтбора;
				Прервать;
			КонецЕсли; 
		КонецЦикла;
	
		
		Если ОтборПоСчету <> Неопределено Тогда 
			
			ИдентификаторОтбораСчета = КомпоновщикНастроек.ПользовательскиеНастройки.ПолучитьИдентификаторПоОбъекту(ОтборПоСчету);
			ОтборСчета = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ИдентификаторОтбораСчета);
			Если ОтборСчета <> Неопределено И ОтборСчета.Использование Тогда
				
				НулевойНачальныйОстаток = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("КоличествоНачальныйОстаток");
				НулевойКонечныйОстаток 	= СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("КоличествоКонечныйОстаток");
				СхемаКомпоновкиДанных.ВычисляемыеПоля.Удалить(НулевойНачальныйОстаток);
				СхемаКомпоновкиДанных.ВычисляемыеПоля.Удалить(НулевойКонечныйОстаток);
				
			КонецЕсли; 
			
		КонецЕсли;
		
	КонецЕсли;
	
	МеждународнаяОтчетностьСервер.ПриКомпоновкеРезультата(СхемаКомпоновкиДанных, КомпоновщикНастроек, ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка);
	
	Если КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.КлючВарианта = "КарточкаСчетаМеждународный" Тогда
		
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Сальдо на начало';
																						|en = 'Opening balance'"));
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Сальдо на конец';
																						|en = 'Closing balance'"));
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Оборот Дт';
																						|en = 'Dr turnover'"));
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Оборот Кт';
																						|en = 'Cr turnover'"));
		
	ИначеЕсли КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.КлючВарианта = "СводныеПроводки" Тогда
		
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Дебет';
																						|en = 'Debit'"));
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Кредит';
																						|en = 'Credit'"));
		
	ИначеЕсли КомпоновщикНастроек.ПользовательскиеНастройки.ДополнительныеСвойства.КлючВарианта = "ОтчетПоПроводкамМеждународный" Тогда
		
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Оборот Дт';
																						|en = 'Dr turnover'"));
		МеждународнаяОтчетностьСервер.ОбъединитьЗаголовкиПолей(ДокументРезультат, НСтр("ru = 'Оборот Кт';
																						|en = 'Cr turnover'"));
		
	КонецЕсли;
	
КонецПроцедуры

Функция НастроитьСхемуКомпоновкиДанных()
	
	Объединение = СхемаКомпоновкиДанных.НаборыДанных.Объединение; // НаборДанныхОбъединениеСхемыКомпоновкиДанных -
	СхемаИзменена = Ложь;
	Если Не ПолучитьФункциональнуюОпцию("ПроводкиМеждународногоУчетаСКорреспонденцией") Тогда
		НаборДанных = Объединение.Элементы.Найти("ПроводкиСКорреспонденцией");
		Если НаборДанных <> Неопределено Тогда
			Объединение.Элементы.Удалить(НаборДанных);
			СхемаИзменена = Истина;
		КонецЕсли;
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ПроводкиМеждународногоУчетаБезКорреспонденции") Тогда
		НаборДанных = Объединение.Элементы.Найти("ПроводкиБезКорреспонденции");
		Если НаборДанных <> Неопределено Тогда
			Объединение.Элементы.Удалить(НаборДанных);
			СхемаИзменена = Истина;
		КонецЕсли;
	КонецЕсли;
	Возврат СхемаИзменена;
	
КонецФункции

Процедура НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ПроводкиМеждународногоУчетаСКорреспонденцией") Тогда
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорСчет");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорСубконто1");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорСубконто2");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорСубконто3");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорПодразделение");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорНаправлениеДеятельности");
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "КорВалюта");
	КонецЕсли;
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьНесколькоОрганизаций") Тогда
		КомпоновкаДанныхСервер.УдалитьЭлементОтбораИзВсехНастроекОтчета(КомпоновщикНастроекФормы, "Организация");
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс
	
// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения, Неопределено - Форма отчета или форма настроек отчета.
//       Неопределено когда вызов без контекста.
//   КлючВарианта - Строка, Неопределено - Имя предопределенного
//       или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов без контекста.
//   Настройки - см. ОтчетыКлиентСервер.НастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриОпределенииПараметровВыбора = Истина;
	Настройки.События.ПередЗагрузкойНастроекВКомпоновщик = Истина;
	Настройки.События.ПередЗагрузкойВариантаНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в форме отчета перед выводом настройки.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения, Неопределено - форма отчета.
//   СвойстваНастройки - Структура - описание настройки отчета, которая будет выведена в форме отчета:
//       * ОписаниеТипов - ОписаниеТипов - тип настройки.
//       
//       * ЗначенияДляВыбора - СписокЗначений - объекты, которые будут предложены пользователю в списке
//         выбора. Дополняет список объектов, уже выбранных пользователем ранее.
//       * ЗапросЗначенийВыбора - Запрос - возвращает объекты, которыми необходимо дополнить ЗначенияДляВыбора.
//           Первой колонкой (с 0м индексом) должен выбираться объект,
//           который следует добавить в ЗначенияДляВыбора.Значение.
//           Для отключения автозаполнения
//           в свойство ЗапросЗначенийВыбора.Текст следует записать пустую строку.
//       * ОграничиватьВыборУказаннымиЗначениями - Булево - когда Истина, то выбор пользователя будет
//           ограничен значениями, указанными в ЗначенияДляВыбора (его конечным состоянием).
//
Процедура ПриОпределенииПараметровВыбора(Форма, СвойстваНастройки) Экспорт
	
	Если ТипЗнч(Форма) = Тип("ФормаКлиентскогоПриложения")
	   И Форма.КлючТекущегоВарианта = "СводныеПроводки" Тогда
		Если СвойстваНастройки.ПолеКД = Новый ПолеКомпоновкиДанных("ПараметрыДанных.ПланСчетов") Тогда
			СвойстваНастройки.ЗначенияДляВыбора = Справочники.ПланыСчетовМеждународногоУчета.ПланСчетовСПроводкамиСКорреспонденцией();
			СвойстваНастройки.ОграничиватьВыборУказаннымиЗначениями = Истина;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных - Настройки для загрузки в компоновщик настроек.
//
// См. ОтчетыПереопределяемый.ПередЗагрузкойВариантаНаСервере.
//
Процедура ПередЗагрузкойВариантаНаСервере(Форма, НовыеНастройкиКД) Экспорт
	
	Отчет = Форма.Отчет;
	КомпоновщикНастроекФормы = Отчет.КомпоновщикНастроек;
	
	НастроитьПараметрыОтборыПоФункциональнымОпциям(КомпоновщикНастроекФормы);
	
КонецПроцедуры

// Вызывается перед загрузкой новых настроек. Используется для изменения схемы компоновки.
//   Например, если схема отчета зависит от ключа варианта или параметров отчета.
//   Чтобы изменения схемы вступили в силу следует вызывать метод ОтчетыСервер.ПодключитьСхему().
//
// Параметры:
//   Контекст - Произвольный - 
//       Параметры контекста, в котором используется отчет.
//       Используется для передачи в параметрах метода ОтчетыСервер.ПодключитьСхему().
//   КлючСхемы - Строка -
//       Идентификатор текущей схемы компоновщика настроек.
//       По умолчанию не заполнен (это означает что компоновщик инициализирован на основании основной схемы).
//       Используется для оптимизации, чтобы переинициализировать компоновщик как можно реже.
//       Может не использоваться если переинициализация выполняется безусловно.
//   КлючВарианта - Строка, Неопределено -
//       Имя предопределенного или уникальный идентификатор пользовательского варианта отчета.
//       Неопределено когда вызов для варианта расшифровки или без контекста.
//   НовыеНастройкиКД - НастройкиКомпоновкиДанных, Неопределено -
//       Настройки варианта отчета, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда настройки варианта не надо загружать (уже загружены ранее).
//   НовыеПользовательскиеНастройкиКД - ПользовательскиеНастройкиКомпоновкиДанных, Неопределено -
//       Пользовательские настройки, которые будут загружены в компоновщик настроек после его инициализации.
//       Неопределено когда пользовательские настройки не надо загружать (уже загружены ранее).
Процедура ПередЗагрузкойНастроекВКомпоновщик(Контекст, КлючСхемы, КлючВарианта, НовыеНастройкиКД, НовыеПользовательскиеНастройкиКД) Экспорт
	
	СхемаИзменена = НастроитьСхемуКомпоновкиДанных();
	
	Если СхемаИзменена Тогда
		ОтчетыСервер.ПодключитьСхему(ЭтотОбъект, Контекст, СхемаКомпоновкиДанных, КлючСхемы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли
