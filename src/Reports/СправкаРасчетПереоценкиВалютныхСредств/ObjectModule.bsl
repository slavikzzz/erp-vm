#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

// Настройки общей формы отчета подсистемы "Варианты отчетов".
//
// Параметры:
//   Форма - ФормаКлиентскогоПриложения - Форма отчета.
//   КлючВарианта - Строка - Имя предопределенного варианта отчета или уникальный идентификатор пользовательского.
//   Настройки - См. ОтчетыКлиентСервер.ПолучитьНастройкиОтчетаПоУмолчанию
//
Процедура ОпределитьНастройкиФормы(Форма, КлючВарианта, Настройки) Экспорт
	
	Настройки.События.ПриСозданииНаСервере = Истина;
	
КонецПроцедуры

// Вызывается в обработчике одноименного события формы отчета после выполнения кода формы.
//
// Параметры:
//   ЭтаФорма - ФормаКлиентскогоПриложения - Форма отчета.
//   Отказ - Булево -Передается из параметров обработчика "как есть".
//   СтандартнаяОбработка - Булево - Передается из параметров обработчика "как есть".
//
// См. также:
//   "ФормаКлиентскогоПриложения.ПриСозданииНаСервере" в синтакс-помощнике.
//
Процедура ПриСозданииНаСервере(ЭтаФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если ЗакрытиеМесяцаСервер.ЭтаФормаОткрытаИзФормыЗакрытияМесяца(ЭтаФорма) Тогда
		
		ЭтаФорма.КлючНазначенияИспользования = "КонтекстЗакрытиеМесяца";
		Параметры = ЭтаФорма.Параметры;
		ФормаПараметры = ЭтаФорма.ФормаПараметры;
		
		ФормаПараметры.КлючНазначенияИспользования = ЭтаФорма.КлючНазначенияИспользования;
		
		ПериодОтчета = Новый СтандартныйПериод(НачалоМесяца(Параметры.ПериодРегистрации), КонецМесяца(Параметры.ПериодРегистрации));
		ФормаПараметры.Отбор.Очистить();
		ФормаПараметры.Отбор.Вставить("ПериодОтчета", ПериодОтчета);
		Если НЕ Параметры.ВсеОрганизации Тогда
			ФормаПараметры.Отбор.Вставить("Организация", Параметры.МассивОрганизаций);
		КонецЕсли;
		
	КонецЕсли;
	
	ИспользуетсяУправлениеВНА = Ложь;
	//++ НЕ УТ
	ИспользуетсяУправлениеВНА = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА();
	//-- НЕ УТ
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьДоговорыКредитовИДепозитов") 
		И НЕ ИспользуетсяУправлениеВНА Тогда
		
		ПолеРазделПереоценки = СхемаКомпоновкиДанных.НаборыДанных.Движения.Поля.Найти("РазделПереоценки");
		РазделыПереоценки = ПолеРазделПереоценки.ПолучитьДоступныеЗначения();
		ЭлементСписка = РазделыПереоценки.НайтиПоЗначению("РасчетыПоФинансовымИнструментам");
		РазделыПереоценки.Удалить(ЭлементСписка);
		ПолеРазделПереоценки.УстановитьДоступныеЗначения(РазделыПереоценки);
		
		АдресСхемы = ЭтаФорма.НастройкиОтчета.АдресСхемы;
		ПоместитьВоВременноеХранилище(СхемаКомпоновкиДанных, ЭтаФорма.НастройкиОтчета.АдресСхемы);
		КомпоновщикНастроек.Инициализировать(Новый ИсточникДоступныхНастроекКомпоновкиДанных(АдресСхемы));
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

Процедура ПриКомпоновкеРезультата(ДокументРезультат, ДанныеРасшифровки, СтандартнаяОбработка)
	
	СтандартнаяОбработка = Ложь;
	ИспользоватьДоговорыКредитовИДепозитов = Константы.ИспользоватьДоговорыКредитовИДепозитов.Получить();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ИспользоватьДоговорыКредитовИДепозитов", ИспользоватьДоговорыКредитовИДепозитов);
	//++ НЕ УТ

	//++ Локализация
	ВестиУУ = Константы.ВестиУУНаПланеСчетовХозрасчетный.Получить();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ВестиУУ", ВестиУУ);
	
	ДатаНачалаВеденияУУ = Константы.ДатаНачалаУУНаПланеСчетовХозрасчетный.Получить();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ДатаНачалаВеденияУУ", ДатаНачалаВеденияУУ);
	//-- Локализация
	ИспользоватьАренду = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА();
	КомпоновкаДанныхКлиентСервер.УстановитьПараметр(КомпоновщикНастроек, "ИспользоватьАренду", ИспользоватьАренду);
	//-- НЕ УТ
	
	Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		Движения = СхемаКомпоновкиДанных.НаборыДанных.Движения; // НаборДанныхОбъединениеСхемыКомпоновкиДанных - 
		Движения.Элементы.РасчетыСПоставщиками.Запрос = ТекстЗапросаРасчетыСПоставщиками();
		Движения.Элементы.РасчетыСКлиентами.Запрос = ТекстЗапросаРасчетыСКлиентами();
	КонецЕсли;
	
	Если ПолучитьФункциональнуюОпцию("УправлениеТорговлей") ИЛИ НЕ ПолучитьФункциональнуюОпцию("ЛокализацияРФ") Тогда
		Поле = СхемаКомпоновкиДанных.ВычисляемыеПоля.Найти("ТребуетсяНачислениеНУ");
		Поле.Выражение = "0";
		Поле = СхемаКомпоновкиДанных.ПоляИтога.Найти("ТребуетсяНачислениеНУ");
		Поле.Выражение = "0";
	КонецЕсли;
	
	КомпоновщикНастроек.Восстановить(СпособВосстановленияНастроекКомпоновкиДанных.Полное);
	НастройкиОтчета = КомпоновщикНастроек.ПолучитьНастройки();
	
	УстановитьОтборТребующиеНачисления(НастройкиОтчета);
	//++ НЕ УТ
	
	//++ Локализация
	УстановитьВидимостьНУ(НастройкиОтчета);
	//-- Локализация
	
	//-- НЕ УТ
	
	КомпоновщикМакета = Новый КомпоновщикМакетаКомпоновкиДанных;
	МакетКомпоновки = КомпоновщикМакета.Выполнить(СхемаКомпоновкиДанных, НастройкиОтчета, ДанныеРасшифровки);
	
	КомпоновкаДанныхСервер.УстановитьЗаголовкиМакетаКомпоновки(СтруктураДинамическихЗаголовков(), МакетКомпоновки);
	
	ПроцессорКомпоновки = Новый ПроцессорКомпоновкиДанных;
	ПроцессорКомпоновки.Инициализировать(МакетКомпоновки, , ДанныеРасшифровки, Истина);

	ПроцессорВывода = Новый ПроцессорВыводаРезультатаКомпоновкиДанныхВТабличныйДокумент;
	ПроцессорВывода.УстановитьДокумент(ДокументРезультат);
	ПроцессорВывода.Вывести(ПроцессорКомпоновки);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьОтборТребующиеНачисления(НастройкиОтчета)
	
	Отборы = Новый Структура;
	ПолучитьОтборыТребующиеНачисления(НастройкиОтчета.Структура, Отборы);
	Если Отборы.Свойство("Аналитика") Тогда
		НовоеИспользование = Отборы.Аналитика.Использование;
		Для Каждого Отбор Из Отборы Цикл
			Отбор.Значение.Использование = НовоеИспользование;
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура ПолучитьОтборыТребующиеНачисления(СтруктураОтчета, Отборы)
	
	Для Каждого Группировка Из СтруктураОтчета Цикл
		
		Если ТипЗнч(Группировка) = Тип("ГруппировкаКомпоновкиДанных")
			ИЛИ ТипЗнч(Группировка) = Тип("ГруппировкаТаблицыКомпоновкиДанных") Тогда
			ЭлементОтбора = НайтиОтборПоПредставлению(Группировка.Отбор.Элементы, "ТребующиеНачисления");
			Если ЭлементОтбора <> Неопределено Тогда
				Отборы.Вставить(Группировка.Имя, ЭлементОтбора);
			КонецЕсли;
			ПолучитьОтборыТребующиеНачисления(Группировка.Структура, Отборы);
			
		ИначеЕсли ТипЗнч(Группировка) = Тип("ТаблицаКомпоновкиДанных") Тогда
			ПолучитьОтборыТребующиеНачисления(Группировка.Строки, Отборы);
			ПолучитьОтборыТребующиеНачисления(Группировка.Колонки, Отборы);
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция НайтиОтборПоПредставлению(Отбор, Представление)
	
	Результат = Неопределено;
	Для Каждого Элемент Из Отбор Цикл
		Если СтрНачинаетсяС(Элемент.Представление, Представление) Тогда
			Результат = Элемент;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Возврат Результат;
	
КонецФункции

Функция СтруктураДинамическихЗаголовков()
	
	ДинамическиеЗаголовки = Новый Соответствие;
	
	ДинамическиеЗаголовки.Вставить("1", Константы.ВалютаУправленческогоУчета.Получить());
	
	Возврат ДинамическиеЗаголовки;
	
КонецФункции

Функция ТекстЗапросаРасчетыСПоставщиками()
	
	Возврат
	"ВЫБРАТЬ
	|	&НачалоПериода КАК Период,
	|	НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) КАК ДатаОстатка,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор,
	|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ДолгОстаток КАК Сумма,
	|	Расчеты.ДолгУпрОстаток КАК СуммаУпр,
	|	Расчеты.ДолгРеглОстаток КАК СуммаРегл,
	|	0 КАК ДоходУпр,
	|	0 КАК РасходУпр,
	|	0 КАК ДоходРегл,
	|	0 КАК РасходРегл,
	|	Расчеты.ПредоплатаУпрОстаток КАК ПредоплатаУпр,
	|	Расчеты.ПредоплатаРеглОстаток КАК ПредоплатаРегл,
	|	Расчеты.ЗаказПоставщику КАК ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент
	|ПОМЕСТИТЬ втОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам.Остатки(
	|			&Период,
	|			Валюта <> &ВалютаУпр
	|				ИЛИ Валюта <> АналитикаУчетаПоПартнерам.Организация.ВалютаРегламентированногоУчета {(АналитикаУчетаПоПартнерам).*, (ЗаказПоставщику).*, (РасчетныйДокумент).*, (Валюта).*}) КАК Расчеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|{ГДЕ
	|	Аналитика.Организация.*,
	|	Аналитика.Партнер.*,
	|	Аналитика.Контрагент.*,
	|	Аналитика.Договор.*,
	|	Аналитика.НаправлениеДеятельности.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Период,
	|	НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ),
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказПоставщику.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор,
	|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.Долг
	|		ИНАЧЕ -Расчеты.Долг
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.ДолгУпр
	|		ИНАЧЕ -Расчеты.ДолгУпр
	|	КОНЕЦ КАК СуммаУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.ДолгРегл
	|		ИНАЧЕ -Расчеты.ДолгРегл
	|	КОНЕЦ КАК СуммаРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА Расчеты.ДолгУпр + Расчеты.ПредоплатаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоходУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА -(Расчеты.ДолгУпр + Расчеты.ПредоплатаУпр)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА Расчеты.ДолгРегл + Расчеты.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоходРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА -(Расчеты.ДолгРегл + Расчеты.ПредоплатаРегл)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -Расчеты.ПредоплатаУпр
	|		ИНАЧЕ Расчеты.ПредоплатаУпр
	|	КОНЕЦ КАК  ПредоплатаУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -Расчеты.ПредоплатаРегл
	|		ИНАЧЕ Расчеты.ПредоплатаРегл
	|	КОНЕЦ КАК ПредоплатаРегл,
	|	Расчеты.ЗаказПоставщику,
	|	Расчеты.РасчетныйДокумент
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщикамиПоДокументам КАК Расчеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (Расчеты.Валюта <> &ВалютаУпр ИЛИ Расчеты.Валюта <> Аналитика.Организация.ВалютаРегламентированногоУчета)
	|{ГДЕ
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта.*,
	|	Расчеты.Период,
	|	Расчеты.АналитикаУчетаПоПартнерам.*,
	|	Расчеты.ЗаказПоставщику.*,
	|	Расчеты.РасчетныйДокумент.*,
	|	Аналитика.Организация.*,
	|	Аналитика.Партнер.*,
	|	Аналитика.Контрагент.*,
	|	Аналитика.Договор.*,
	|	Аналитика.НаправлениеДеятельности.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиИОбороты.Период КАК Период,
	|	ОстаткиИОбороты.ДатаОстатка КАК ДатаОстатка,
	|	ОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ОстаткиИОбороты.Валюта КАК Валюта,
	|	ОстаткиИОбороты.Контрагент КАК Аналитика,
	|	ОстаткиИОбороты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	//++ НЕ УТ

	//++ Локализация
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ОстаткиИОбороты.ПредоплатаУпр <> 0 ИЛИ ОстаткиИОбороты.ПредоплатаРегл <> 0 ТОГДА
	|			ВЫБОР КОГДА ЕСТЬNULL(НастройкиПоОрганизации.ВидСчета, ЕСТЬNULL(НастройкиПоАналитике.ВидСчета, НЕОПРЕДЕЛЕНО)) = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные)
	|						ТОГДА ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, &ПустойСчет)) ИНАЧЕ &ПустойСчет КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(НастройкиПоОрганизации.ВидСчета, ЕСТЬNULL(НастройкиПоАналитике.ВидСчета, НЕОПРЕДЕЛЕНО)) = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)
	|						ТОГДА ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, &ПустойСчет)) ИНАЧЕ &ПустойСчет КОНЕЦ
	|	КОНЕЦ) КАК СчетУчета,
	//-- Локализация

	//-- НЕ УТ
	|	ОстаткиИОбороты.Организация КАК Организация,
	|	ОстаткиИОбороты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ОстаткиИОбороты.Партнер КАК Партнер,
	|	ОстаткиИОбороты.Контрагент КАК Контрагент,
	|	ОстаткиИОбороты.Договор КАК Договор,
	|	ОстаткиИОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ОстаткиИОбороты.Сумма) КАК Сумма,
	|	СУММА(ОстаткиИОбороты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ОстаткиИОбороты.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаУпр КОНЕЦ) КАК СуммаУпрДО,
	|	СУММА(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаРегл КОНЕЦ) КАК СуммаРеглДО,
	|	СУММА(ОстаткиИОбороты.ДоходУпр) КАК ДоходУпр,
	|	-СУММА(ОстаткиИОбороты.РасходУпр) КАК РасходУпр,
	|	СУММА(ОстаткиИОбороты.ДоходРегл) КАК ДоходРегл,
	|	-СУММА(ОстаткиИОбороты.РасходРегл) КАК РасходРегл,
	|	ОстаткиИОбороты.ОбъектРасчетов КАК ОбъектРасчета,
	|	ОстаткиИОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.Переменный) КАК ВариантКурсаДоговора,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорСУстановленнымКурсом,
	|	""РасчетыСПоставщиками"" КАК РазделПереоценки,
	|	200 КАК ПорядокРазделаПереоценки
	|{ВЫБРАТЬ
	|	РазделПереоценки,
	|	Период,
	|	ДатаОстатка,
	|	Регистратор,
	|	Валюта.*,
	|	Аналитика.*,
	|	АналитикаУчетаПоПартнерам.*,
	//++ НЕ УТ

	//++ Локализация
	|	СчетУчета.*,
	//-- Локализация

	//-- НЕ УТ
	|	Организация.*,
	|	ВалютаРегламентированногоУчета.*,
	|	Партнер.*,
	|	Контрагент.*,
	|	Договор.*,
	|	НаправлениеДеятельности.*,
	|	Сумма,
	|	СуммаУпр,
	|	СуммаРегл,
	|	СуммаУпрДО,
	|	СуммаРеглДО,
	|	ДоходУпр,
	|	РасходУпр,
	|	ДоходРегл,
	|	РасходРегл,
	|	ОбъектРасчета.*,
	|	РасчетныйДокумент.*,
	|	ВариантКурсаДоговора,
	|	ДоговорСУстановленнымКурсом,
	|	ПорядокРазделаПереоценки}
	|ИЗ
	|	втОстаткиИОбороты КАК ОстаткиИОбороты
	//++ НЕ УТ

	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоОрганизации
	|	ПО 
	|		НастройкиПоОрганизации.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|											ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные))
	|		И ОстаткиИОбороты.Организация = НастройкиПоОрганизации.Организация
	|		И ОстаткиИОбороты.ГруппаФинансовогоУчета = НастройкиПоОрганизации.АналитикаУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|	ПО 
	|		НастройкиПоАналитике.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками),
	|											ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыВыданные))
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ОстаткиИОбороты.ГруппаФинансовогоУчета = НастройкиПоАналитике.АналитикаУчета
	//-- Локализация

	//-- НЕ УТ
	|{ГДЕ
	|	""РасчетыСПоставщиками"" КАК РазделПереоценки,
	|	ОстаткиИОбороты.Период,
	|	ОстаткиИОбороты.Контрагент.* КАК Аналитика,
	|	ОстаткиИОбороты.Организация.*,
	|	ОстаткиИОбороты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ОстаткиИОбороты.Партнер.*,
	|	ОстаткиИОбороты.Контрагент.*,
	|	ОстаткиИОбороты.Договор.*,
	|	ОстаткиИОбороты.НаправлениеДеятельности.*,
	|	ОстаткиИОбороты.Валюта.*,
	|	ОстаткиИОбороты.Сумма,
	|	ОстаткиИОбороты.СуммаУпр,
	|	ОстаткиИОбороты.СуммаРегл,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаУпр КОНЕЦ КАК СуммаУпрДО,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаРегл КОНЕЦ КАК СуммаРеглДО,
	|	ОстаткиИОбороты.ДоходУпр,
	|	ОстаткиИОбороты.РасходУпр,
	|	ОстаткиИОбороты.ДоходРегл,
	|	ОстаткиИОбороты.РасходРегл,
	|	ОстаткиИОбороты.ОбъектРасчетов КАК ОбъектРасчета,
	|	ОстаткиИОбороты.РасчетныйДокумент}
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиИОбороты.Период,
	|	ОстаткиИОбороты.ДатаОстатка,
	|	ОстаткиИОбороты.Регистратор,
	|	ОстаткиИОбороты.Валюта,
	|	ОстаткиИОбороты.АналитикаУчетаПоПартнерам,
	|	ОстаткиИОбороты.Организация,
	|	ОстаткиИОбороты.Партнер,
	|	ОстаткиИОбороты.Контрагент,
	|	ОстаткиИОбороты.Договор,
	|	ОстаткиИОбороты.НаправлениеДеятельности,
	|	ОстаткиИОбороты.ОбъектРасчетов,
	|	ОстаткиИОбороты.РасчетныйДокумент
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
КонецФункции

Функция ТекстЗапросаРасчетыСКлиентами()
	
	Возврат
	"ВЫБРАТЬ
	|	&НачалоПериода КАК Период,
	|	НАЧАЛОПЕРИОДА(&НачалоПериода, ДЕНЬ) КАК ДатаОстатка,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	Расчеты.Валюта КАК Валюта,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор,
	|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Расчеты.ДолгОстаток КАК Сумма,
	|	Расчеты.ДолгУпрОстаток КАК СуммаУпр,
	|	Расчеты.ДолгРеглОстаток КАК СуммаРегл,
	|	0 КАК ДоходУпр,
	|	0 КАК РасходУпр,
	|	0 КАК ДоходРегл,
	|	0 КАК РасходРегл,
	|	Расчеты.ПредоплатаУпрОстаток КАК ПредоплатаУпр,
	|	Расчеты.ПредоплатаРеглОстаток КАК ПредоплатаРегл,
	|	Расчеты.ЗаказКлиента КАК ОбъектРасчетов,
	|	Расчеты.РасчетныйДокумент КАК РасчетныйДокумент
	|ПОМЕСТИТЬ втОстаткиИОбороты
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам.Остатки(
	|			&Период,
	|			Валюта <> &ВалютаУпр
	|				ИЛИ Валюта <> АналитикаУчетаПоПартнерам.Организация.ВалютаРегламентированногоУчета {(АналитикаУчетаПоПартнерам).*, (ЗаказКлиента).*, (РасчетныйДокумент).*, (Валюта).*}) КАК Расчеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|{ГДЕ
	|	Аналитика.Организация.*,
	|	Аналитика.Партнер.*,
	|	Аналитика.Контрагент.*,
	|	Аналитика.Договор.*,
	|	Аналитика.НаправлениеДеятельности.*}
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расчеты.Период,
	|	НАЧАЛОПЕРИОДА(Расчеты.Период, ДЕНЬ),
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта,
	|	Расчеты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	|	Расчеты.ЗаказКлиента.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	Аналитика.Организация КАК Организация,
	|	Аналитика.Партнер КАК Партнер,
	|	Аналитика.Контрагент КАК Контрагент,
	|	Аналитика.Договор КАК Договор,
	|	Аналитика.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.Долг
	|		ИНАЧЕ -Расчеты.Долг
	|	КОНЕЦ КАК Долг,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.ДолгУпр
	|		ИНАЧЕ -Расчеты.ДолгУпр
	|	КОНЕЦ КАК ДолгУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА Расчеты.ДолгРегл
	|		ИНАЧЕ -Расчеты.ДолгРегл
	|	КОНЕЦ КАК ДолгРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА Расчеты.ДолгУпр + Расчеты.ПредоплатаУпр
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоходУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА -(Расчеты.ДолгУпр + Расчеты.ПредоплатаУпр)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА Расчеты.ДолгРегл + Расчеты.ПредоплатаРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ДоходРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				И ТИПЗНАЧЕНИЯ(Расчеты.Регистратор) = ТИП(Документ.РасчетКУрсовыхРазниц)
	|			ТОГДА -(Расчеты.ДолгРегл + Расчеты.ПредоплатаРегл)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК РасходРегл,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -Расчеты.ПредоплатаУпр
	|		ИНАЧЕ Расчеты.ПредоплатаУпр
	|	КОНЕЦ КАК  ПредоплатаУпр,
	|	ВЫБОР
	|		КОГДА Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -Расчеты.ПредоплатаРегл
	|		ИНАЧЕ Расчеты.ПредоплатаРегл
	|	КОНЕЦ КАК ПредоплатаРегл,
	|	Расчеты.ЗаказКлиента,
	|	Расчеты.РасчетныйДокумент
	|ИЗ
	|	РегистрНакопления.РасчетыСКлиентамиПоДокументам КАК Расчеты
	|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК Аналитика
	|	ПО Расчеты.АналитикаУчетаПоПартнерам = Аналитика.КлючАналитики
	|ГДЕ
	|	Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (Расчеты.Валюта <> &ВалютаУпр ИЛИ Расчеты.Валюта <> Аналитика.Организация.ВалютаРегламентированногоУчета)
	|{ГДЕ
	|	Расчеты.Регистратор,
	|	Расчеты.Валюта.*,
	|	Расчеты.Период,
	|	Расчеты.АналитикаУчетаПоПартнерам.*,
	|	Расчеты.ЗаказКлиента.*,
	|	Расчеты.РасчетныйДокумент.*,
	|	Аналитика.Организация.*,
	|	Аналитика.Партнер.*,
	|	Аналитика.Контрагент.*,
	|	Аналитика.Договор.*,
	|	Аналитика.НаправлениеДеятельности.*}
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиИОбороты.Период КАК Период,
	|	ОстаткиИОбороты.ДатаОстатка КАК ДатаОстатка,
	|	ОстаткиИОбороты.Регистратор КАК Регистратор,
	|	ОстаткиИОбороты.Валюта КАК Валюта,
	|	ОстаткиИОбороты.Контрагент КАК Аналитика,
	|	ОстаткиИОбороты.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам,
	//++ НЕ УТ

	//++ Локализация
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА ОстаткиИОбороты.ПредоплатаУпр <> 0 ИЛИ ОстаткиИОбороты.ПредоплатаРегл <> 0 ТОГДА
	|			ВЫБОР КОГДА ЕСТЬNULL(НастройкиПоОрганизации.ВидСчета, ЕСТЬNULL(НастройкиПоАналитике.ВидСчета, НЕОПРЕДЕЛЕНО)) = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные)
	|				ТОГДА ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, &ПустойСчет)) ИНАЧЕ &ПустойСчет КОНЕЦ
	|		ИНАЧЕ
	|			ВЫБОР КОГДА ЕСТЬNULL(НастройкиПоОрганизации.ВидСчета, ЕСТЬNULL(НастройкиПоАналитике.ВидСчета, НЕОПРЕДЕЛЕНО)) = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами)
	|				ТОГДА ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, &ПустойСчет)) ИНАЧЕ &ПустойСчет КОНЕЦ
	|	КОНЕЦ) КАК СчетУчета,
	//-- Локализация

	//-- НЕ УТ
	|	ОстаткиИОбороты.Организация КАК Организация,
	|	ОстаткиИОбороты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ОстаткиИОбороты.Партнер КАК Партнер,
	|	ОстаткиИОбороты.Контрагент КАК Контрагент,
	|	ОстаткиИОбороты.Договор КАК Договор,
	|	ОстаткиИОбороты.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(ОстаткиИОбороты.Сумма) КАК Сумма,
	|	СУММА(ОстаткиИОбороты.СуммаУпр) КАК СуммаУпр,
	|	СУММА(ОстаткиИОбороты.СуммаРегл) КАК СуммаРегл,
	|	СУММА(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаУпр КОНЕЦ) КАК СуммаУпрДО,
	|	СУММА(ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаРегл КОНЕЦ) КАК СуммаРеглДО,
	|	СУММА(ОстаткиИОбороты.ДоходУпр) КАК ДоходУпр,
	|	-СУММА(ОстаткиИОбороты.РасходУпр) КАК РасходУпр,
	|	СУММА(ОстаткиИОбороты.ДоходРегл) КАК ДоходРегл,
	|	-СУММА(ОстаткиИОбороты.РасходРегл) КАК РасходРегл,
	|	ОстаткиИОбороты.ОбъектРасчетов КАК ОбъектРасчета,
	|	ОстаткиИОбороты.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ЗНАЧЕНИЕ(Перечисление.ВариантыКурсаДоговора.Переменный) КАК ВариантКурсаДоговора,
	|	НЕОПРЕДЕЛЕНО КАК ДоговорСУстановленнымКурсом,
	|	""РасчетыСКлиентами"" КАК РазделПереоценки,
	|	100 КАК ПорядокРазделаПереоценки
	|{ВЫБРАТЬ
	|	РазделПереоценки,
	|	Период,
	|	ДатаОстатка,
	|	Регистратор,
	|	Валюта.*,
	|	Аналитика.*,
	|	АналитикаУчетаПоПартнерам.*,
	//++ НЕ УТ

	//++ Локализация
	|	СчетУчета.*,
	//-- Локализация

	//-- НЕ УТ
	|	Организация.*,
	|	ВалютаРегламентированногоУчета.*,
	|	Партнер.*,
	|	Контрагент.*,
	|	Договор.*,
	|	НаправлениеДеятельности.*,
	|	Сумма,
	|	СуммаУпр,
	|	СуммаРегл,
	|	СуммаУпрДО,
	|	СуммаРеглДО,
	|	РасходУпр,
	|	ДоходРегл,
	|	РасходРегл,
	|	ОбъектРасчета.*,
	|	РасчетныйДокумент.*,
	|	ВариантКурсаДоговора,
	|	ДоговорСУстановленнымКурсом,
	|	ПорядокРазделаПереоценки}
	|ИЗ
	|	втОстаткиИОбороты КАК ОстаткиИОбороты
	//++ НЕ УТ

	//++ Локализация
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоОрганизации
	|	ПО 
	|		НастройкиПоОрганизации.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|											ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные))
	|		И ОстаткиИОбороты.Организация = НастройкиПоОрганизации.Организация
	|		И ОстаткиИОбороты.ГруппаФинансовогоУчета = НастройкиПоОрганизации.АналитикаУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|	ПО 
	|		НастройкиПоАналитике.ВидСчета В (ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСКлиентами),
	|											ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АвансыПолученные))
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И ОстаткиИОбороты.ГруппаФинансовогоУчета = НастройкиПоАналитике.АналитикаУчета
	//-- Локализация

	//-- НЕ УТ
	|{ГДЕ
	|	""РасчетыСКлиентами"" КАК РазделПереоценки,
	|	ОстаткиИОбороты.Период,
	|	ОстаткиИОбороты.Контрагент.* КАК Аналитика,
	|	ОстаткиИОбороты.Организация.*,
	|	ОстаткиИОбороты.Организация.ВалютаРегламентированногоУчета КАК ВалютаРегламентированногоУчета,
	|	ОстаткиИОбороты.Партнер.*,
	|	ОстаткиИОбороты.Контрагент.*,
	|	ОстаткиИОбороты.Договор.*,
	|	ОстаткиИОбороты.НаправлениеДеятельности.*,
	|	ОстаткиИОбороты.Валюта.*,
	|	ОстаткиИОбороты.Сумма,
	|	ОстаткиИОбороты.СуммаУпр,
	|	ОстаткиИОбороты.СуммаРегл,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаУпр КОНЕЦ КАК СуммаУпрДО,
	|	ВЫБОР КОГДА ТИПЗНАЧЕНИЯ(ОстаткиИОбороты.Регистратор) = ТИП(Документ.РасчетКурсовыхРазниц) ТОГДА 0 ИНАЧЕ ОстаткиИОбороты.СуммаРегл КОНЕЦ КАК СуммаРеглДО,
	|	ОстаткиИОбороты.ДоходУпр,
	|	ОстаткиИОбороты.РасходУпр,
	|	ОстаткиИОбороты.ДоходРегл,
	|	ОстаткиИОбороты.РасходРегл,
	|	ОстаткиИОбороты.ОбъектРасчетов КАК ОбъектРасчета,
	|	ОстаткиИОбороты.РасчетныйДокумент}
	|
	|СГРУППИРОВАТЬ ПО
	|	ОстаткиИОбороты.Период,
	|	ОстаткиИОбороты.ДатаОстатка,
	|	ОстаткиИОбороты.Регистратор,
	|	ОстаткиИОбороты.Валюта,
	|	ОстаткиИОбороты.АналитикаУчетаПоПартнерам,
	|	ОстаткиИОбороты.Организация,
	|	ОстаткиИОбороты.Партнер,
	|	ОстаткиИОбороты.Контрагент,
	|	ОстаткиИОбороты.Договор,
	|	ОстаткиИОбороты.НаправлениеДеятельности,
	|	ОстаткиИОбороты.ОбъектРасчетов,
	|	ОстаткиИОбороты.РасчетныйДокумент
	|	
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
КонецФункции
//++ НЕ УТ

//++ Локализация
Процедура УстановитьВидимостьНУ(НастройкиОтчета)
	
	Если НастройкиОтчета.Структура[0].Структура.Количество() > 0 Тогда
		
		ОтборСуммНУ = Неопределено;
		Для Каждого Поле Из НастройкиОтчета.Структура[0].Отбор.Элементы Цикл
			Если Поле.Представление = НСтр("ru = 'Выводить суммы НУ';
											|en = 'Display amounts TA'") Тогда
				ОтборСуммНУ = Поле;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если ОтборСуммНУ = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ВыводитьСуммыНУ = ОтборСуммНУ.Использование;
		
		Если ТипЗнч(НастройкиОтчета.Структура[0].Структура[0]) <> Тип("ТаблицаКомпоновкиДанных") Тогда
			Возврат;
		КонецЕсли;
		
		Если НастройкиОтчета.Структура[0].Структура[0].Колонки.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		ВыборОтчета = НастройкиОтчета.Структура[0].Структура[0].Колонки[0].Выбор.Элементы;
		ГруппаПолей = НайтиПолеПоЗаголовку(ВыборОтчета, НСтр("ru = 'Регламентированный учет';
															|en = 'Local accounting'"));
		Если ГруппаПолей = Неопределено Тогда
			Возврат;
		КонецЕсли;
		ЭлементыВыбора = ГруппаПолей.Элементы;
		
		// выключим/включим группы
		УстановитьВидимостьГруппы(ЭлементыВыбора, НСтр("ru = 'Остаток в валюте регл. до переоценки';
														|en = 'Balance in local currency before revaluation'"), ВыводитьСуммыНУ);
		УстановитьВидимостьГруппы(ЭлементыВыбора, НСтр("ru = 'Остаток после переоценки';
														|en = 'Balance after revaluation'"), ВыводитьСуммыНУ);
		УстановитьВидимостьГруппы(ЭлементыВыбора, НСтр("ru = 'Начислен доход';
														|en = 'Income is accrued'"), ВыводитьСуммыНУ);
		УстановитьВидимостьГруппы(ЭлементыВыбора, НСтр("ru = 'Начислен расход';
														|en = 'Expense is accrued'"), ВыводитьСуммыНУ);
		УстановитьВидимостьГруппы(ЭлементыВыбора, НСтр("ru = 'Требуется начислить';
														|en = 'Accrual is required'"), ВыводитьСуммыНУ);
	
		// включим/выключим поля взамен групп
		ОдиночныеПоля = Новый Соответствие;
		ОдиночныеПоля.Вставить(Новый ПолеКомпоновкиДанных("СуммаРеглДО"), Истина);
		ОдиночныеПоля.Вставить(Новый ПолеКомпоновкиДанных("СуммаПоКурсуРегл"), Истина);
		ОдиночныеПоля.Вставить(Новый ПолеКомпоновкиДанных("ДоходРегл"), Истина);
		ОдиночныеПоля.Вставить(Новый ПолеКомпоновкиДанных("РасходРегл"), Истина);
		ОдиночныеПоля.Вставить(Новый ПолеКомпоновкиДанных("ТребуетсяНачислениеРегл"), Истина);
		Для Каждого Элемент Из ЭлементыВыбора Цикл
			Если ОдиночныеПоля[Элемент.Поле] <> Неопределено Тогда
				Элемент.Использование = НЕ ВыводитьСуммыНУ;
			КонецЕсли;
		КонецЦикла;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьВидимостьГруппы(Элементы, Заголовок, НоваяВидимость)

	Группа = НайтиПолеПоЗаголовку(Элементы, Заголовок, Истина);
	Если Группа <> Неопределено Тогда
		Группа.Использование = НоваяВидимость;
	КонецЕсли;

КонецПроцедуры

Функция НайтиПолеПоЗаголовку(КоллекцияПолей, Заголовок, ТолькоГруппы = Ложь)
	
	Для Каждого Поле Из КоллекцияПолей Цикл
		Если ТипЗнч(Поле) = Тип("АвтоВыбранноеПолеКомпоновкиДанных") Тогда
			Продолжить;
		КонецЕсли;
		Если Поле.Заголовок = Заголовок
			И (ТипЗнч(Поле) = Тип("ГруппаВыбранныхПолейКомпоновкиДанных") И ТолькоГруппы
				ИЛИ НЕ ТолькоГруппы) Тогда
			Возврат Поле;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Неопределено;
	
КонецФункции
//-- Локализация

//-- НЕ УТ

#КонецОбласти

#КонецЕсли