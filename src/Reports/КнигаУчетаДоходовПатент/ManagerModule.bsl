#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
	
Процедура СформироватьОтчет(ПараметрыОтчета, АдресХранилища = Неопределено) Экспорт
	
	ПодготовитьОтчет(ПараметрыОтчета);

	Если АдресХранилища <> Неопределено Тогда
		ПоместитьВоВременноеХранилище(ПараметрыОтчета.СписокСформированныхЛистов, АдресХранилища);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

// Заполняет структуру настроек универсального формата из реквизитов формы.
//
// Параметры:
//  ПараметрыОтчета - Структура - см. ПустыеПараметрыКомпоновкиОтчета()
//  Форма - УправляемаяФорма - содержит основновной реквизит Отчет .
//
Процедура ЗаполнитьПараметрыИзФормы(ПараметрыОтчета, Форма) Экспорт
	
	Отчет = Форма.Отчет;
	
	ПараметрыОтчета.Организация   = Отчет.Организация;
	ПараметрыОтчета.НачалоПериода = Отчет.НачалоПериода;
	ПараметрыОтчета.КонецПериода  = Отчет.КонецПериода;
	ПараметрыОтчета.Патент        = Отчет.Патент;
	
	ПараметрыОтчета.Заголовок     = Форма.Заголовок;
	ПараметрыОтчета.ТипФайла      = Форма.ТипФайла;
	ПараметрыОтчета.Расширение    = Форма.Расширение;
	
	ПараметрыОтчета.СписокСформированныхЛистов = Отчет.СписокСформированныхЛистов;
	
КонецПроцедуры

Функция ЗаполнитьПараметрыОтчета(ПараметрыОтчета) Экспорт
	
	ПараметрыОтчета.СписокСформированныхЛистов.Очистить();
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.Патент)
		И ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ПараметрыОтчета, "РежимРасшифровки", Ложь) Тогда
		СвойстваПатента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ПараметрыОтчета.Патент, "ДатаНачала, ДатаОкончания");
		ПараметрыОтчета.НачалоПериода = НачалоДня(СвойстваПатента.ДатаНачала);
		ПараметрыОтчета.КонецПериода  = КонецДня(СвойстваПатента.ДатаОкончания);
	Иначе
		ПараметрыОтчета.НачалоПериода = НачалоДня(ПараметрыОтчета.НачалоПериода);
		ПараметрыОтчета.КонецПериода  = КонецДня(ПараметрыОтчета.КонецПериода);
	КонецЕсли;
	
	Возврат ПараметрыОтчета;
	
КонецФункции

// Функция-конструктор для хранения настроек отчета в универсальном формате.
//

// Пустые параметры компоновки отчета.
// 
// Возвращаемое значение:
//  Структура - Пустые параметры компоновки отчета:
// * ИдентификаторОтчета - Строка.
// * Организация - СправочникСсылка.Организации.
// * НачалоПериода - Дата.
// * КонецПериода - Дата.
// * Патент - СправочникСсылка.Патенты.
// * СписокСформированныхЛистов - СписокЗначений.
// * Заголовок - Строка. 
// * ТипФайла - Строка.
// * Расширение - Строка.
Функция ПустыеПараметрыКомпоновкиОтчета() Экспорт
	
	// Общая структура настроек.
	ПараметрыОтчета = Новый Структура;
	ПараметрыОтчета.Вставить("ИдентификаторОтчета", "КнигаУчетаДоходовПатент"); // имя объекта метаданных
	
	// Отборы из шапки отчета.
	ПараметрыОтчета.Вставить("Организация",   Справочники.Организации.ПустаяСсылка()); // по организации
	ПараметрыОтчета.Вставить("НачалоПериода", '00010101');
	ПараметрыОтчета.Вставить("КонецПериода",  '00010101');
	ПараметрыОтчета.Вставить("Патент",        Справочники.Патенты.ПустаяСсылка());
	
	ПараметрыОтчета.Вставить("СписокСформированныхЛистов", Новый СписокЗначений);
	
	ПараметрыОтчета.Вставить("Заголовок", "");
	ПараметрыОтчета.Вставить("ТипФайла");
	ПараметрыОтчета.Вставить("Расширение", "");
	
	Возврат ПараметрыОтчета;
	
КонецФункции

Функция ПодготовитьОбщийФайлОтчета(ПараметрыОтчета) Экспорт
	
	ПодготовитьОтчет(ПараметрыОтчета);
	
	ВозвращаемыеПараметры = Новый Структура;
	Если ЗначениеЗаполнено(ПараметрыОтчета.Заголовок) Тогда
		ПараметрыОтчета.Вставить("Заголовок", ПараметрыОтчета.Заголовок);
	Иначе
		ПараметрыОтчета.Вставить("Заголовок", СтрШаблон(НСтр("ru = 'Книга доходов по патенту %1';
															|en = '%1 patent income ledger'"),
			ПараметрыОтчета.Патент));
	КонецЕсли;
	
	ВозвращаемыеПараметры = ЗаполнениеФинОтчетностиВБанки.ПодготовитьДвоичныеДанныеПакетаОтображаемыхДокументов(
		ПараметрыОтчета);
	
	Возврат ВозвращаемыеПараметры;
	
КонецФункции

Процедура ПодготовитьОтчет(ПараметрыОтчета) Экспорт

	ЗаполнитьПараметрыОтчета(ПараметрыОтчета);
	
	// ПОДГОТОВКА ОТЧЕТА ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	ПодготовитьДанныеОтчета(ПараметрыОтчета);
	
	// ПОСТРОЕНИЕ ОТЧЕТА
	
	СформироватьТитульныйЛист(ПараметрыОтчета);
	
	СформироватьТаблицуДоходы(ПараметрыОтчета);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ИмяМакетаТитульногоЛиста(Период, Организация)
	
	Если Не Справочники.Патенты.ЕстьДействующийПатент(Организация, , Период) Тогда
		ИмяМакета = "ТитульныйЛист_154н";
	ИначеЕсли Период < УчетУСНКлиентСервер.ДатаНачалаДействияФормыКнигиДоходовПоПриказу_ЕА_7_3_816() Тогда
		ИмяМакета = "ТитульныйЛист_135н";
	Иначе
		ИмяМакета = "ТитульныйЛист_патент";
	КонецЕсли;
	
	Возврат ИмяМакета;
	
КонецФункции 

Функция ИмяМакетаТаблицыДоходов(Период, Организация)
	
	Если Не Справочники.Патенты.ЕстьДействующийПатент(Организация, , Период) Тогда
		ИмяМакета = "Раздел1_154н";
	ИначеЕсли Период < УчетУСНКлиентСервер.ДатаНачалаДействияФормыКнигиДоходовПоПриказу_ЕА_7_3_816() Тогда
		ИмяМакета = "Раздел1_135н";
	Иначе
		ИмяМакета = "Раздел1_патент";
	КонецЕсли;
	
	Возврат ИмяМакета;
	
КонецФункции

Процедура ПодготовитьДанныеОтчета(ПараметрыОтчета)
	
	НомераТаблиц	= Новый Структура;
	
	Запрос	= Новый Запрос;
	Запрос.УстановитьПараметр("Организация",	ПараметрыОтчета.Организация);
	Запрос.УстановитьПараметр("Патент",			ПараметрыОтчета.Патент);
	Запрос.УстановитьПараметр("НачалоПериода",	ПараметрыОтчета.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",	ПараметрыОтчета.КонецПериода);
	Запрос.УстановитьПараметр("ПустаяДата",		Дата("00010101"));
	
	Запрос.Текст	= ТекстЗапросаТитульныйЛист(НомераТаблиц)
					+ ТекстЗапросаКнигаУчетаДоходовПатент(НомераТаблиц);
		
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;    
	
	ДобавитьВременнуюТаблицуКнигиУчетаДоходовИРасходов(Запрос.МенеджерВременныхТаблиц,
		Запрос.Параметры.НачалоПериода, Запрос.Параметры.КонецПериода, Запрос.Параметры.Организация);
		
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		
		Если Результат[НомерТаблицы.Значение] <> Неопределено Тогда
			ПараметрыОтчета.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение]);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТекстЗапросаТитульныйЛист(НомераТаблиц)
	
	НомераТаблиц.Вставить("БанковскиеСчета", НомераТаблиц.Количество());
	НомераТаблиц.Вставить("ДанныеПатента",   НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	БанковскиеСчета.НомерСчета КАК НомерСчета,
	|	ПРЕДСТАВЛЕНИЕ(БанковскиеСчета.Банк) КАК НаименованиеБанка
	|ИЗ
	|	Справочник.БанковскиеСчетаОрганизаций КАК БанковскиеСчета
	|ГДЕ
	|	БанковскиеСчета.Владелец = &Организация
	|	И НЕ БанковскиеСчета.ПометкаУдаления
	|	И НЕ БанковскиеСчета.Закрыт
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ                        
	|	Патенты.НомерПатента КАК НомерПатента,
	|	НалоговыеОрганы.КодПоОКТМО ЕСТЬ NULL КАК ВыданПоМестуЖительства,
	|	ЕСТЬNULL(НалоговыеОрганы.КодПоОКТМО, """") КАК КодПоОКТМО,
	|	"""" КАК НалоговыйОрганКодРегиона
	|ИЗ
	|	Справочник.Патенты КАК Патенты
	|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.РегистрацииВНалоговомОргане КАК НалоговыеОрганы
	|	ПО Патенты.НалоговыйОрган = НалоговыеОрганы.Ссылка
	|ГДЕ
	|	Патенты.Ссылка = &Патент";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаКнигаУчетаДоходовПатент(НомераТаблиц)
	
	НомераТаблиц.Вставить("КнигаУчетаДоходовПатент",	НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КнигаУчетаДоходовПатент.Регистратор КАК Регистратор,
	|	КнигаУчетаДоходовПатент.РеквизитыПервичногоДокумента КАК РеквизитыПервичногоДокумента,
	|	КнигаУчетаДоходовПатент.Содержание КАК Содержание,
	|	КнигаУчетаДоходовПатент.ДоходПатент КАК Графа4,
	|	КнигаУчетаДоходовПатент.ДокументВозникновенияДоходовРасходов,
	|	КнигаУчетаДоходовПатент.СторнирующийДокумент,
	|	КнигаУчетаДоходовПатент.НомерСтроки,
	|	КнигаУчетаДоходовПатент.КоличествоЗаписей
	|ИЗ
	|	ДанныеКнигиУчетаДоходовИРасходов КАК КнигаУчетаДоходовПатент
	|ГДЕ
	|	КнигаУчетаДоходовПатент.Организация = &Организация
	|	И КнигаУчетаДоходовПатент.Патент = &Патент
	|	И КнигаУчетаДоходовПатент.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И КнигаУчетаДоходовПатент.ДоходПатент <> 0
	|
	|УПОРЯДОЧИТЬ ПО
	|	КнигаУчетаДоходовПатент.Период,
	|	КнигаУчетаДоходовПатент.Регистратор,
	|	КнигаУчетаДоходовПатент.НомерСтроки
	|ИТОГИ
	|	СУММА(Графа4)
	|ПО
	|	ОБЩИЕ,
	|	ДокументВозникновенияДоходовРасходов";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Процедура ДобавитьВременнуюТаблицуКнигиУчетаДоходовИРасходов(ВременныеТаблицы, НачалоПериода, КонецПериода, Организация)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = ВременныеТаблицы;
	МассивТекстовЗапроса = Новый Массив;
	ТекстЗапроса ="ВЫБРАТЬ
	              |	ДанныеРегистра.Период КАК Период,
	              |	ДанныеРегистра.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	              |	ДанныеРегистра.Организация КАК Организация,
	              |	ДанныеРегистра.ДоходПатент КАК ДоходПатент,
	              |	ДанныеРегистра.Патент КАК Патент,
	              |	ДанныеРегистра.Регистратор КАК Регистратор,
	              |	ДанныеРегистра.Содержание КАК Содержание,
	              |	ДанныеРегистра.РеквизитыПервичногоДокумента КАК РеквизитыПервичногоДокумента,
	              |	ВЫБОР
	              |		КОГДА ДанныеРегистра.Регистратор <> ДанныеРегистра.ДокументВозникновенияДоходовРасходов
	              |			ТОГДА ДанныеРегистра.Регистратор
	              |		ИНАЧЕ НЕОПРЕДЕЛЕНО
	              |	КОНЕЦ КАК СторнирующийДокумент,
	              |	1 КАК КоличествоЗаписей,
	              |	ДанныеРегистра.НомерСтроки КАК НомерСтроки
	              |ПОМЕСТИТЬ ВРДанные
	              |ИЗ
	              |	РегистрНакопления.КнигаУчетаДоходовИРасходов.Обороты(
	              |			&НачалоПериода,
	              |			&КонецПериода,
	              |			Квартал,
	              |			Организация = &Организация
	              |				И ДокументВозникновенияДоходовРасходов <> НЕОПРЕДЕЛЕНО) КАК ОборотыРегистра
	              |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.КнигаУчетаДоходовИРасходов КАК ДанныеРегистра
	              |		ПО ОборотыРегистра.Организация = ДанныеРегистра.Организация
	              |			И ОборотыРегистра.ДокументВозникновенияДоходовРасходов = ДанныеРегистра.ДокументВозникновенияДоходовРасходов
	              |			И (ДанныеРегистра.Период >= &НачалоПериода)
	              |			И (ДанныеРегистра.Период <= &КонецПериода)
	              |			И (ДанныеРегистра.Активность)
	              |ГДЕ
	              |	ОборотыРегистра.ДоходПатентОборот <> 0
	              |;
	              |
	              |////////////////////////////////////////////////////////////////////////////////
	              |ВЫБРАТЬ
	              |	ЕСТЬNULL(СодержаниеДокументВозникновенияДоходовРасходов.Период, ВРДанные.Период) КАК Период,
	              |	ВРДанные.ДокументВозникновенияДоходовРасходов КАК ДокументВозникновенияДоходовРасходов,
	              |	ВРДанные.Организация КАК Организация,
	              |	ВРДанные.ДоходПатент КАК ДоходПатент,
	              |	ВРДанные.Патент КАК Патент,
	              |	ВРДанные.Регистратор КАК Регистратор,
	              |	МАКСИМУМ(ЕСТЬNULL(СодержаниеДокументВозникновенияДоходовРасходов.Содержание, ВРДанные.Содержание)) КАК Содержание,
	              |	МАКСИМУМ(ЕСТЬNULL(СодержаниеДокументВозникновенияДоходовРасходов.РеквизитыПервичногоДокумента, ВРДанные.РеквизитыПервичногоДокумента)) КАК РеквизитыПервичногоДокумента,
	              |	ВРДанные.СторнирующийДокумент КАК СторнирующийДокумент,
	              |	ВРДанные.КоличествоЗаписей КАК КоличествоЗаписей,
	              |	ВРДанные.НомерСтроки КАК НомерСтроки
	              |ПОМЕСТИТЬ ДанныеКнигиУчетаДоходовИРасходов
	              |ИЗ
	              |	ВРДанные КАК ВРДанные
	              |		ЛЕВОЕ СОЕДИНЕНИЕ ВРДанные КАК СодержаниеДокументВозникновенияДоходовРасходов
	              |		ПО ВРДанные.ДокументВозникновенияДоходовРасходов = СодержаниеДокументВозникновенияДоходовРасходов.Регистратор
	              |			И (ВРДанные.ДокументВозникновенияДоходовРасходов <> ВРДанные.Регистратор)
	              |ГДЕ
	              |	ВРДанные.ДоходПатент <> 0
	              |
	              |СГРУППИРОВАТЬ ПО
	              |	ЕСТЬNULL(СодержаниеДокументВозникновенияДоходовРасходов.Период, ВРДанные.Период),
	              |	ВРДанные.ДокументВозникновенияДоходовРасходов,
	              |	ВРДанные.Организация,
	              |	ВРДанные.ДоходПатент,
	              |	ВРДанные.Патент,
	              |	ВРДанные.Регистратор,
	              |	ВРДанные.СторнирующийДокумент,
	              |	ВРДанные.КоличествоЗаписей,
	              |	ВРДанные.НомерСтроки";

	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", КонецПериода);
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура СформироватьТитульныйЛист(ПараметрыОтчета)
	
	СписокПоказателей = Новый СписокЗначений;
	СписокПоказателей.Добавить("", "ФИО");
	СписокПоказателей.Добавить("", "АдрПрописки");
	СписокПоказателей.Добавить("", "ОКПО");
	СписокПоказателей.Добавить("", "ИННФЛ");
	СписокПоказателей.Добавить("", "ОргСубъект");
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
		ПараметрыОтчета.Организация, ПараметрыОтчета.КонецПериода, СписокПоказателей);
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб          = Истина;
	ТабличныйДокумент.ЧерноБелаяПечать     = Истина;
	ТабличныйДокумент.ТолькоПросмотр       = Истина;
	ТабличныйДокумент.ОриентацияСтраницы   = ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовИРасходов_ТитульныйЛист";
	
	ИмяМакета = ИмяМакетаТитульногоЛиста(ПараметрыОтчета.КонецПериода, ПараметрыОтчета.Организация);
	Макет = ПолучитьМакет(ИмяМакета);
	
	Макет.Параметры.НаПериод = СтрШаблон(НСтр("ru = 'на %1 год';
												|en = 'for %1'"), Формат(Год(ПараметрыОтчета.КонецПериода), "ЧГ="));
	Макет.Параметры.ФИО      = СведенияОбОрганизации.ФИО;
	Макет.Параметры.ОКПО     = СведенияОбОрганизации.ОКПО;
	
	ДанныеПатента = ПараметрыОтчета.ДанныеПатента.Выбрать();
	ДанныеПатента.Следующий(); // В выборке всегда одна запись
	
	Если ПараметрыОтчета.КонецПериода < УчетУСНКлиентСервер.ДатаНачалаДействияФормыКнигиДоходовПоПриказу_ЕА_7_3_816() Тогда
		
		Макет.Параметры.АдрПрописки = РегламентированнаяОтчетностьКлиентСервер.ПредставлениеАдресаВФормате9Запятых(
			СведенияОбОрганизации.АдрПрописки);
		
		Если ДанныеПатента.ВыданПоМестуЖительства Тогда
			НалоговыйОрган = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(
				ПараметрыОтчета.Организация, "РегистрацияВНалоговомОргане");
			
			Макет.Параметры.ОКАТО                  = Справочники.РегистрацииВНалоговомОргане.КодТерритории(
				НалоговыйОрган, ПараметрыОтчета.КонецПериода);
			Макет.Параметры.НаименованиеСубъектаРФ = СведенияОбОрганизации.ОргСубъект;
		Иначе
			Макет.Параметры.ОКАТО                  = ДанныеПатента.КодПоОКТМО;
			Макет.Параметры.НаименованиеСубъектаРФ = АдресныйКлассификатор.НаименованиеРегионаПоКоду(
				ДанныеПатента.НалоговыйОрганКодРегиона);
		КонецЕсли;
		
	Иначе
		
		Макет.Параметры.НомерПатента = ДанныеПатента.НомерПатента;
		
	КонецЕсли;
	
	Макет.Параметры.СрокПатента = СтрШаблон(
		НСтр("ru = 'с %1 г. по %2 г.';
			|en = 'from %1 to %2.'"),
		Формат(ПараметрыОтчета.НачалоПериода, "ДФ='дд ММММ гггг'"),
		Формат(ПараметрыОтчета.КонецПериода, "ДФ='дд ММММ гггг'"));
	
	Счета = "";
	Выборка = ПараметрыОтчета.БанковскиеСчета.Выбрать();
	Пока Выборка.Следующий() Цикл
		Счета = Счета + ?(ПустаяСтрока(Счета), "", ", ")
			+ СтрШаблон(НСтр("ru = '№ %1 в %2';
							|en = '№ %1 in %2'"), СокрЛП(Выборка.НомерСчета), СокрЛП(Выборка.НаименованиеБанка));
	КонецЦикла;
	Макет.Параметры.Счета = Счета;
	
	ТабличныйДокумент.Вывести(Макет);
	
	ИНН = СведенияОбОрганизации.ИННФЛ;
	
	Если СтрДлина(ИНН) <> 12 Тогда
		// Налогоплательщик - юр. лицо
		ИНН = "00" + ИНН;
	КонецЕсли;
	
	Ном = 1;
	Пока Ном > 0 Цикл
		ИмяОбластиИНН = "ПрИНН";
		Если Не (Ном > 12) Тогда
			ТабличныйДокумент.Область(ИмяОбластиИНН + Ном).Текст = ?(Число(ИНН) > 0, Сред(ИНН, Ном, 1), "");
			
			Ном = Ном + 1;
			Продолжить;
		КонецЕсли;
		Ном = 0;
	КонецЦикла;
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Титульный лист");
	
КонецПроцедуры


Процедура СформироватьТаблицуДоходы(ПараметрыОтчета)
	
	ТабличныйДокумент	= Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ЧерноБелаяПечать		= Истина;
	ТабличныйДокумент.ТолькоПросмотр		= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовПатент_ТаблицаДоходы";
	
	ИмяМакета = ИмяМакетаТаблицыДоходов(ПараметрыОтчета.КонецПериода,ПараметрыОтчета.Организация);
	Макет = ПолучитьМакет(ИмяМакета);
	
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого	= Макет.ПолучитьОбласть("Итого");
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	ВыборкаОбщие	   = ПараметрыОтчета.КнигаУчетаДоходовПатент.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам, "ОБЩИЕ");
	ДанныеРегистратора = Новый Структура("Документ,Сумма");  

	Если ВыборкаОбщие.Следующий() Тогда
		
		НПП = 0;
		
		ВыборкаПоДокВозникРасхода = ВыборкаОбщие.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		Пока ВыборкаПоДокВозникРасхода.Следующий() Цикл   
						
			Выборка	= ВыборкаПоДокВозникРасхода.Выбрать();
			НПП = НПП + 1;

			Регистраторы       = Новый Массив();			
			ОбластьСтрока.Параметры.ТекРасшифровка  = Новый Структура("Регистратор, ДокументВозникновенияДоходовРасходов");  
			ОбластьСтрока.Параметры.ТекРасшифровка.Регистратор = Регистраторы; //Устанавливаем для значения тип Массив
			
			Пока Выборка.Следующий() Цикл
				
				ДанныеРегистратора = Новый Структура("Документ,Сумма");
				
				Если ЗначениеЗаполнено(Выборка.СторнирующийДокумент) Тогда  					
					ДанныеРегистратора.Вставить("Документ",Выборка.СторнирующийДокумент);					
				Иначе						
					ДанныеРегистратора.Вставить("Документ",Выборка.Регистратор);					
				КонецЕсли;	
				ДанныеРегистратора.Вставить("Сумма",Выборка.Графа4);
				
				ОбластьСтрока.Параметры.ТекРасшифровка.Регистратор.Добавить(ДанныеРегистратора); 
			  	ОбластьСтрока.Параметры.Заполнить(Выборка);		
											
			КонецЦикла;     
			
			ОбластьСтрока.Параметры.Графа4  = ВыборкаПоДокВозникРасхода.Графа4;
			ОбластьСтрока.Параметры.НомерПП = НПП;  
			ОбластьСтрока.Параметры.ТекРасшифровка.ДокументВозникновенияДоходовРасходов = ВыборкаПоДокВозникРасхода.ДокументВозникновенияДоходовРасходов;
			
			ТабличныйДокумент.Вывести(ОбластьСтрока);

		КонецЦикла;
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаОбщие);
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
	КонецЕсли;

    ТабличныйДокумент.ПовторятьПриПечатиСтроки	= ТабличныйДокумент.Область(6, , 6, );
	
	ПараметрыОтчета.СписокСформированныхЛистов.Добавить(ТабличныйДокумент, "Доходы");
	
КонецПроцедуры

Функция СформироватьРасшифровкуПоДокументамСписанияРасхода(МассивДокументов)  Экспорт
	
	ТабличныйДокумент	= Новый ТабличныйДокумент;
	ТабличныйДокумент.Автомасштаб			= Истина;
	ТабличныйДокумент.ЧерноБелаяПечать		= Истина;
	ТабличныйДокумент.ТолькоПросмотр		= Истина;
	ТабличныйДокумент.ОриентацияСтраницы	= ОриентацияСтраницы.Портрет;
	ТабличныйДокумент.КлючПараметровПечати	= "ПАРАМЕТРЫ_ПЕЧАТИ_КнигаУчетаДоходовПатент_Расшифровка";
	
	Макет	= ПолучитьМакет("РасшифровкаДокументов");
		
	ОбластьШапка	= Макет.ПолучитьОбласть("Шапка");
	ОбластьСтрока	= Макет.ПолучитьОбласть("Строка");
	ОбластьИтого	= Макет.ПолучитьОбласть("Итого");
	
	ТабличныйДокумент.Вывести(ОбластьШапка);
	
	СуммаГрафа4 = 0;
	
	Для каждого СтрокаДокумент из МассивДокументов Цикл
		
		СуммаГрафа4 = СуммаГрафа4 + СтрокаДокумент.Сумма;
		
		ОбластьСтрока.Параметры.Регистратор = СтрокаДокумент.Документ;
    	ОбластьСтрока.Параметры.Графа4 = СтрокаДокумент.Сумма;;
		
		ТабличныйДокумент.Вывести(ОбластьСтрока);

	КонецЦикла;
		
	ОбластьИтого.Параметры.Графа4 = СуммаГрафа4;
	ТабличныйДокумент.Вывести(ОбластьИтого); 	
	ТабличныйДокумент.ПовторятьПриПечатиСтроки = ТабличныйДокумент.Область(6, , 6, );
	
	Возврат ТабличныйДокумент;
КонецФункции

#КонецОбласти

#КонецЕсли
