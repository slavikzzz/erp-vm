#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2022_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2022_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ДействующаяРедакцияФормы(Дата) Экспорт
	Возврат "Форма2023_1";
КонецФункции

Функция НовыйСогласиеЕНС(Организация) Экспорт 
	МодульЕдиныйНалоговыйСчетИнтеграцияКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ЕдиныйНалоговыйСчетИнтеграцияКлиентСервер");
	ДанныеСогласия = МодульЕдиныйНалоговыйСчетИнтеграцияКлиентСервер.ДанныеСогласияНаРаскрытиеНалоговойТайны(Организация);
	
	УведомлениеОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
	УведомлениеОбъект.Дата = ТекущаяДатаСеанса();
	УведомлениеОбъект.УстановитьВремя();
	УведомлениеОбъект.УстановитьНовыйНомер();
	УведомлениеОбъект.ДатаПодписи = ТекущаяДатаСеанса();
	УведомлениеОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.СогласиеНаРаскрытиеНалоговойТайны;
	УведомлениеОбъект.ИмяОтчета = "РегламентированноеУведомлениеСогласиеНаРаскрытиеНалоговойТайны";
	УведомлениеОбъект.ИмяФормы = ДействующаяРедакцияФормы(ТекущаяДатаСеанса());
	УведомлениеОбъект.Организация = Организация;
	УведомлениеОбъект.РегистрацияВИФНС = Документы.УведомлениеОСпецрежимахНалогообложения.РегистрацияВФНСОрганизации(Организация);
	
	Руководитель = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(УведомлениеОбъект.Организация,
		УведомлениеОбъект.Дата, "ФамилияИП, ИмяИП, ОтчествоИП, ИННФЛ, ТелДом");
	Реквизиты = РегистрацияВНОСервер.ДанныеРегистрации(УведомлениеОбъект.РегистрацияВИФНС);
	Если ЗначениеЗаполнено(Реквизиты.Представитель) Тогда
		ПРИЗНАК_НП_ПОДВАЛ = "2";
		НаимДок = Реквизиты.ДокументПредставителя;
		СведенияОПредставителе = РегламентированнаяОтчетностьВызовСервера.ПолучитьПоКодамСведенияОПредставителе(
			УведомлениеОбъект.Организация, Реквизиты.Код, "");
		Если ЗначениеЗаполнено(СведенияОПредставителе.НаименованиеОрганизацииПредставителя) Тогда
			ПодписантСтр = СведенияОПредставителе.ФИОПредставителя;
			ФИО = РегламентированнаяОтчетность.РазложитьФИО(СведенияОПредставителе.ФИОПредставителя);
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ФИО.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ФИО.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ФИО.Отчество);
		Иначе
			ДанныеПредставителя = РегламентированнаяОтчетностьПереопределяемый.ПолучитьСведенияОФизЛице(Реквизиты.Представитель, , ТекущаяДатаСеанса());
			УведомлениеОбъект.ПодписантФамилия = СокрЛП(ДанныеПредставителя.Фамилия);
			УведомлениеОбъект.ПодписантИмя = СокрЛП(ДанныеПредставителя.Имя);
			УведомлениеОбъект.ПодписантОтчество = СокрЛП(ДанныеПредставителя.Отчество);
		КонецЕсли;
	Иначе
		ПРИЗНАК_НП_ПОДВАЛ = "1";
		НаимДок = "";
		Документы.УведомлениеОСпецрежимахНалогообложения.УстановитьДанныеРуководителя(УведомлениеОбъект);
	КонецЕсли;
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	ДанныеУведомления = Новый Структура("Титульная, Лист001, Лист002",
		ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСогласия.Титульная),
		Новый Структура,
		ОбщегоНазначения.СкопироватьРекурсивно(ДанныеСогласия.Лист002));
	ИдентификаторыОбычныхСтраниц = Новый Структура("Титульная, Лист001, Лист002",
		Новый УникальныйИдентификатор, Новый УникальныйИдентификатор, Новый УникальныйИдентификатор);
	
	ТаблицаМнгСтр = Новый ТаблицаЗначений;
	ТаблицаМнгСтр.Колонки.Добавить("УИД", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ТаблицаМнгСтр.Колонки.Добавить("КодСвед", Новый ОписаниеТипов("Строка"));
	ТаблицаМнгСтр.Добавить();
	
	ДанныеДопСтрокБД = Новый Структура;
	ДанныеДопСтрокБД.Вставить("МнгСтр1", ТаблицаМнгСтр);
	ДанныеДопСтрокБД.Вставить("МнгСтр2", ТаблицаМнгСтр);
	
	Для Каждого Пок Из СтрРазделить("ПрПодп,ФамилияПред,ИмяПред,ОтчествоПред,ТлфПред,НаимДокПред", ",") Цикл 
		ДанныеУведомления.Титульная.Вставить(Пок, ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления.Титульная, Пок, ""));
	КонецЦикла;
	Для Каждого Пок Из СтрРазделить("ПризНП,ИННФЛ,Фамилия,Имя,Отчество,КодВидДок,СерНомДок,ДатаДок", ",") Цикл 
		ДанныеУведомления.Лист002.Вставить(Пок, ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления.Лист002, Пок, ""));
	КонецЦикла;
	
	ДанныеУведомления.Титульная.Вставить("ИмФайлСогл", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления.Титульная, "ИмФайлСогл", ""));
	ДанныеУведомления.Титульная.Вставить("РегНомСогл", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления.Титульная, "РегНомСогл", ""));
	ДанныеУведомления.Титульная.Вставить("ДатаКонПер", ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеУведомления.Титульная, "ДатаКонПер", ""));
	ДанныеУведомления.Титульная.Вставить("ДАТА_ПОДПИСИ", УведомлениеОбъект.ДатаПодписи);
	ДанныеУведомления.Титульная.Вставить("КодНО", Реквизиты.Код);
	ДанныеУведомления.Титульная.Вставить("НаимДок", НаимДок);
	ДанныеУведомления.Титульная.Вставить("ПРИЗНАК_НП_ПОДВАЛ", ПРИЗНАК_НП_ПОДВАЛ);
	ДанныеУведомления.Титульная.Вставить("ФИО_РУКОВОДИТЕЛЯ_ПРЕДСТАВИТЕЛЯ", СокрЛП(УведомлениеОбъект.ПодписантФамилия 
		+ " " + УведомлениеОбъект.ПодписантИмя + " " + УведомлениеОбъект.ПодписантОтчество));
		
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация) Тогда 
		СтрокаСведений = "ИННЮЛ,НаимЮЛПол,КППЮЛ,ТелОрганизации";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			Организация, ТекущаяДатаСеанса(), СтрокаСведений);
		ДанныеУведомления.Титульная.Вставить("ИНН", СведенияОбОрганизации.ИННЮЛ);
		ДанныеУведомления.Титульная.Вставить("КПП", СведенияОбОрганизации.КППЮЛ);
		ДанныеУведомления.Титульная.Вставить("НаимОрг", СведенияОбОрганизации.НаимЮЛПол);
		ДанныеУведомления.Титульная.Вставить("Тлф", СведенияОбОрганизации.ТелОрганизации);
		ДанныеУведомления.Титульная.Вставить("ПризНП", "");
	Иначе
		СтрокаСведений = "ФИО,ИННФЛ,ТелДом";
		СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
			Организация, ТекущаяДатаСеанса(), СтрокаСведений);
		ДанныеУведомления.Титульная.Вставить("ИНН", СведенияОбОрганизации.ИННФЛ);
		ДанныеУведомления.Титульная.Вставить("НаимОрг", СведенияОбОрганизации.ФИО);
		ДанныеУведомления.Титульная.Вставить("Тлф", СведенияОбОрганизации.ТелДом);
		ДанныеУведомления.Титульная.Вставить("ПризНП", "1");
	КонецЕсли;
	
	СтруктураПараметров = Новый Структура;
	СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ИдентификаторыОбычныхСтраниц);
	СтруктураПараметров.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
	СтруктураПараметров.Вставить("ДеревоСтраниц", ДеревоСтраниц2023());
	СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	СтруктураПараметров.Вставить("ДанныеУведомления", ДанныеУведомления);
	СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
	СтруктураПараметров.Вставить("ДокументОснование", Неопределено);
	
	УведомлениеОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
	УведомлениеОбъект.Записать();
	Возврат УведомлениеОбъект.Ссылка;
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДеревоСтраниц2023() Экспорт 
	КорневойУровень = УведомлениеОСпецрежимахНалогообложения.НовоеДеревоСтраницФормыУведомления().Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2023_1_Титульная";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Коды сведений";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Лист001_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист001";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр1");
	Стр001.МакетыПФ = "Печать_Форма2023_1_Лист001";
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Коды сведений" + Символы.ПС + "для предоставления" + Символы.ПС + "иному лицу";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Лист002_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Лист002";
	Стр001.МногострочныеЧасти.Добавить("МнгСтр2");
	Стр001.МакетыПФ = "Печать_Форма2023_1_Лист002";
	
	Возврат Стр001.Владелец();
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1110058";
	Стр.ВерсияФормата = "5.03";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 14.11.2022 № ЕД-7-19/1085@ в формате 5.03";
	Стр.ДатаНачала = Дата('20221213');
	Стр.ДатаКонца = Дата('20991231');
	
	Возврат Результат;
КонецФункции

Функция СформироватьВыгрузкуИПолучитьДанные(ДокОбъект) Экспорт 
	Выгрузка = ДокОбъект.ВыгрузитьДокумент();
	Если Выгрузка = Неопределено Тогда 
		Возврат Неопределено;
	КонецЕсли;
	СтруктураВыгрузки = Новый Структура("ТестВыгрузки,КодировкаВыгрузки", Выгрузка[0].ТестВыгрузки, Выгрузка[0].КодировкаВыгрузки);
	
	Если ДокОбъект.ИмяФормы = "Форма2023_1" Тогда 
		СтруктураВыгрузки.Вставить("Данные", УведомлениеОСпецрежимахНалогообложения.ПолучитьМакетДвоичныхДанных(ДокОбъект.ИмяОтчета, "TIFF_2023_1"));
		СтруктураВыгрузки.Вставить("ИмяФайла", "1110058_5.03000_02.tif");
		Возврат СтруктураВыгрузки;
	КонецЕсли;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			Объект, УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "IU_SOGNTOB";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Объект, Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	Лист001 = Данные.ДанныеУведомления.Лист001;
	Лист002 = Данные.ДанныеУведомления.Лист002;
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация) Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Истина, Титульная, ТаблицаОшибок);
	ИначеЕсли Титульная.ПризНП = "1" Тогда 
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(Ложь, Титульная, ТаблицаОшибок);
	ИначеЕсли Титульная.ПризНП = "2" Тогда
		Если Не ЗначениеЗаполнено(Титульная.КодВидДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код документа", "Титульная", "КодВидДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.СерНомДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана серия и номер документа", "Титульная", "СерНомДок"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДатаДок) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата выдачи документа", "Титульная", "ДатаДок"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Ложь, Ложь);
	Иначе
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан признак налогоплательщика", "Титульная", "ПризНП"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Титульная.ИмФайлСогл) И ЗначениеЗаполнено(Титульная.РегНомСогл) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Необходимо заполнить либо имя файла согласия, либо номер на бумажном носителе", "Титульная", "ИмФайлСогл"));
	ИначеЕсли Титульная.ПризДок = "2" 
		И Не ЗначениеЗаполнено(Титульная.ИмФайлСогл) 
		И Не ЗначениеЗаполнено(Титульная.РегНомСогл) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указаны сведения о выданном ранее согласии", "Титульная", "ИмФайлСогл"));
	КонецЕсли;
	
	Если (Титульная.ПризДок = "1" И Данные.ОТЧ.ПривестиЗначение(Титульная.ДатаНачПер) < 1900)
		Или (Данные.ОТЧ.ПривестиЗначение(Титульная.ДатаНачПер) > 0 И Данные.ОТЧ.ПривестиЗначение(Титульная.ДатаНачПер) < 1900) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан / неправильно указан год начала раскрытия показателей", "Титульная", "ДатаНачПер"));
	КонецЕсли;
	Если (Данные.ОТЧ.ПривестиЗначение(Титульная.ДатаКонПер) > 0 И Данные.ОТЧ.ПривестиЗначение(Титульная.ДатаКонПер) < 1900) Тогда 
		
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан год окончания раскрытия показателей", "Титульная", "ДатаКонПер"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПризДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак документа", "Титульная", "ПризДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПризРаскрСвед) И Титульная.ПризДок = "1" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак раскрытия сведений", "Титульная", "ПризРаскрСвед"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(
		Данные, ТаблицаОшибок, "Титульная", 
		Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" Или РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация));
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Дата(Титульная.ДатаНачСогл)) 
		И НачалоДня(Дата(Титульная.ДатаНачСогл)) < НачалоДня(ТекущаяДатаСеанса()) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Начало действия согласия не должно быть в прошлом", "Титульная", "ДатаНачСогл"));
	КонецЕсли;
	
	Если Титульная.ПризРаскрСвед = "1" Тогда 
		Заполненность = ЗначениеЗаполнено(Лист001.КодКомпл);
		Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл
			Если Заполненность Тогда 
				Прервать;
			КонецЕсли;
			Заполненность = Заполненность Или ЗначениеЗаполнено(Стр.КодСвед);
		КонецЦикла;
		
		Если Титульная.ПризДок = "1" И Не Заполненность Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен лист с кодами", "Лист001", "КодКомпл"));
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Лист001.КодКомпл) Тогда 
			ЗаполненностьМнгСтр = Ложь;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл 
				ЗаполненностьМнгСтр = ЗаполненностьМнгСтр Или ЗначениеЗаполнено(Стр.КодСвед);
			КонецЦикла;
			Если ЗаполненностьМнгСтр Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Указывается или код комплекта или коды сведений", "Лист001", "КодКомпл"));
			КонецЕсли;
		КонецЕсли;
	ИначеЕсли Титульная.ПризРаскрСвед = "2" Тогда
		Если ЗначениеЗаполнено(Лист002.КодКомпл) Тогда 
			ЗаполненностьМнгСтр = Ложь;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр2 Цикл 
				ЗаполненностьМнгСтр = ЗаполненностьМнгСтр Или ЗначениеЗаполнено(Стр.КодСвед);
			КонецЦикла;
			Если ЗаполненностьМнгСтр Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Указывается или код комплекта или коды сведений", "Лист002", "КодКомпл"));
			КонецЕсли;
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Титульная, "ПрПодп,ФамилияПред,ИмяПред,ОтчествоПред,ТлфПред,НаимДокПред") Тогда 
			Если Не ЗначениеЗаполнено(Титульная.ПрПодп) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан признак подписанта", "Титульная", "ПрПодп"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Титульная.ФамилияПред) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указана фамилия подписанта", "Титульная", "ФамилияПред"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Титульная.ИмяПред) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано имя подписанта", "Титульная", "ИмяПред"));
			КонецЕсли;
			Если Титульная.ПрПодп = "2" И Не ЗначениеЗаполнено(Титульная.НаимДокПред) Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан документ подписанта", "Титульная", "НаимДокПред"));
			КонецЕсли;
		КонецЕсли;
		
		Если ЗначениеЗаполнено(Лист002.ИННЮЛ) Или ЗначениеЗаполнено(Лист002.НаимОрг) Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Лист002, ТаблицаОшибок, "Лист002", "ИННЮЛ", Истина, Истина);
			Если Не ЗначениеЗаполнено(Лист002.НаимОрг) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено наименование организации", "Лист002", "НаимОрг"));
			КонецЕсли;
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Лист002, "ПризНП,ИННФЛ,Фамилия,Имя,Отчество,КодВидДок,СерНомДок,ДатаДок") Тогда
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При заполненной организации сведения о физлице не заполняются", "Лист002", "ПризНП"));
			КонецЕсли;
		ИначеЕсли УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Лист002, "ПризНП,ИННФЛ,Фамилия,Имя,Отчество,КодВидДок,СерНомДок,ДатаДок") Тогда
			Если Не ЗначениеЗаполнено(Лист002.ПризНП) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен признак", "Лист002", "ПризНП"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист002.Фамилия) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнена фамилия", "Лист002", "Фамилия"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Лист002.Имя) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено имя", "Лист002", "Имя"));
			КонецЕсли;
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Лист002, ТаблицаОшибок, "Лист002", "ИННФЛ", (Лист002.ПризНП = "1"), Ложь);
			
			Если Не ЗначениеЗаполнено(Лист002.ИННФЛ) 
				Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Лист002, "КодВидДок,СерНомДок,ДатаДок") Тогда 
				
				Если Не ЗначениеЗаполнено(Лист002.КодВидДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен код документа", "Лист002", "КодВидДок"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист002.СерНомДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнены серия и номер документа", "Лист002", "СерНомДок"));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Лист002.ДатаДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнена дата выдачи документа", "Лист002", "ДатаДок"));
				КонецЕсли;
			КонецЕсли;
		Иначе
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнены сведения, кому предоставляется доступ", "Лист002", "ИННЮЛ"));
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Процедура ЗаполнитьДанными(Объект, Параметры, ДеревоВыгрузки)
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(Параметры, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметрыСРазделами(Параметры, ДеревоВыгрузки);
	ДанныеУведомления = Объект.ДанныеУведомления.Получить();
	УведомлениеОСпецрежимахНалогообложения.ЗаполнитьДаннымиУзелНов(ДанныеУведомления, ДеревоВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(ДеревоВыгрузки);
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("ПризНП", Данные.ДанныеУведомления.Титульная.ПризНП);
	ОсновныеСведения.Вставить("ПризРаскрСвед", Данные.ДанныеУведомления.Титульная.ПризРаскрСвед);
	ОсновныеСведения.Вставить("ЮЛ_Лист002", 
		ЗначениеЗаполнено(Данные.ДанныеУведомления.Лист002.ИННЮЛ) Или ЗначениеЗаполнено(Данные.ДанныеУведомления.Лист002.НаимОрг));
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Объект, ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	ЗаполнитьДанными(Объект, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"],
		НомСтр, "Печать_Форма2017_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист002"],
		НомСтр, "Печать_Форма2017_1_Лист002", ПечатнаяФорма, ИННКПП);
	Инд = 0;
	Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр Цикл
		Если ЗначениеЗаполнено(Стр.КодСвед) Тогда 
			Инд = Инд + 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ВРег(Стр.КодСвед), "КодСвед_" + Инд, ПечатнаяФорма.Области, "-");
		КонецЕсли;
		
		Если Инд = 96 Тогда 
			Прервать;
		КонецЕсли;
	КонецЦикла;
	
	Пока Инд < 96 Цикл 
		Инд = Инд + 1;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("----", "КодСвед_" + Инд, ПечатнаяФорма.Области, "-");
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2022_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	ИННКПП.Вставить("НаимДок", СтруктураПараметров.ДанныеУведомления.Титульная.НаимДок);
	ИННКПП.Вставить("НаимДокПред", СтруктураПараметров.ДанныеУведомления.Титульная.НаимДокПред);
	ИННКПП.Вставить("КодНО", СтруктураПараметров.ДанныеУведомления.Титульная.КодНО);
	ИННКПП.Вставить("ПРИЗНАК_НП_ПОДВАЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ИННКПП.Вставить("НомСтр", 0);
	
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаДок");
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаНачСогл");
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаКонСогл");
	УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
		Титульная, "Печать_Форма2022_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	
	Лист001 = СтруктураПараметров.ДанныеУведомления.Лист001;
	Лист001Заполнен = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист001);
	Если Лист001Заполнен Тогда 
		СтруктураПечати = ОбщегоНазначения.СкопироватьРекурсивно(Лист001);
		СтруктураПечати.Вставить("НомСтр000", Формат((ИННКПП.НомСтр + 1), "ЧЦ=3; ЧВН="));
		Инд = -1;
		Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр1 Цикл
			Если ЗначениеЗаполнено(Стр.КодСвед) Тогда 
				Инд = ?(Инд = -1, 1, Инд + 1);
				СтруктураПечати.Вставить("КодСвед_" + Инд, Стр.КодСвед);
			КонецЕсли;
			Если Инд = 96 Тогда 
				УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
					СтруктураПечати, "Печать_Форма2022_1_Лист001", ПечатнаяФорма, ИННКПП);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
				Инд = 0;
				СтруктураПечати = ОбщегоНазначения.СкопироватьРекурсивно(Лист001);
				СтруктураПечати.Вставить("НомСтр000", Формат((ИННКПП.НомСтр + 1), "ЧЦ=3; ЧВН="));
			КонецЕсли;
		КонецЦикла;
		Если Инд <> 0 Тогда 
			УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
				СтруктураПечати, "Печать_Форма2022_1_Лист001", ПечатнаяФорма, ИННКПП);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
		КонецЕсли;
	КонецЕсли;
	Лист002 = СтруктураПараметров.ДанныеУведомления.Лист002;
	Лист002Заполнен = УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Лист002);
	Если Лист002Заполнен Тогда 
		СтруктураПечати = ОбщегоНазначения.СкопироватьРекурсивно(Лист002);
		СтруктураПечати.Вставить("НомСтр000", Формат((ИННКПП.НомСтр + 1), "ЧЦ=3; ЧВН="));
		Если Не ЗначениеЗаполнено(СтруктураПечати.НаимОрг) Тогда 
			СтруктураПечати.НаимОрг = СокрЛП(СтруктураПечати.Фамилия + " " + СтруктураПечати.Имя + " " + СтруктураПечати.Отчество)
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СтруктураПечати.ИННЮЛ) Тогда 
			СтруктураПечати.ИННЮЛ = СтруктураПечати.ИННФЛ;
		КонецЕсли;
		Инд = -1;
		Для Каждого Стр Из СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр2 Цикл
			Если ЗначениеЗаполнено(Стр.КодСвед) Тогда 
				Инд = ?(Инд = -1, 1, Инд + 1);
				СтруктураПечати.Вставить("КодСвед_" + Инд, Стр.КодСвед);
			КонецЕсли;
			Если Инд = 96 Тогда 
				УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
					СтруктураПечати, "Печать_Форма2022_1_Лист002", ПечатнаяФорма, ИННКПП);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
				Инд = 0;
				СтруктураПечати = ОбщегоНазначения.СкопироватьРекурсивно(Лист002);
				СтруктураПечати.Вставить("НомСтр000", Формат((ИННКПП.НомСтр + 1), "ЧЦ=3; ЧВН="));
			КонецЕсли;
		КонецЦикла;
		Если Инд <> 0 Тогда 
			УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
				СтруктураПечати, "Печать_Форма2022_1_Лист002", ПечатнаяФорма, ИННКПП);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
		КонецЕсли;
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр,
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтраницыСМногострочнойЧастью(Объект, Листы, СтруктураПараметров,
		"Лист001", "МнгСтр1", "Печать_Форма2023_1_Лист001", НомСтр, ИННКПП);
	Лист002 = СтруктураПараметров.ДанныеУведомления.Лист002;
	ИННКПП.Вставить("ИННЛист002", ?(ЗначениеЗаполнено(Лист002.ИННЮЛ), Лист002.ИННЮЛ, Лист002.ИННФЛ));
	ИННКПП.Вставить("НаимОргЛист002", ?(ЗначениеЗаполнено(Лист002.НаимОрг), Лист002.НаимОрг, 
		"" + Лист002.Фамилия + " " + Лист002.Имя + " " + Лист002.Отчество));
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтраницыСМногострочнойЧастью(Объект, Листы, СтруктураПараметров,
		"Лист002", "МнгСтр2", "Печать_Форма2023_1_Лист002", НомСтр, ИННКПП);
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
