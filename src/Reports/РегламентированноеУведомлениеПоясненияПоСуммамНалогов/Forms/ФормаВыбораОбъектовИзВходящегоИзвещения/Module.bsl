#Область ОбработчикиСобытийФормы
&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьДанныеИсходногоИзвещения(Параметры.ИзвещениеОСуммах, Отказ);
	
	ИмяОтчетаПояснения = СтрРазделить(ИмяФормы, ".")[1];
	ТФ = Отчеты[ИмяОтчетаПояснения].ПолучитьТаблицуФорм();
	ТДС = ТекущаяДатаСеанса();
	Для Каждого Стр Из ТФ Цикл 
		Если (ЗначениеЗаполнено(Стр.ДатаНачала) И НачалоДня(Стр.ДатаНачала) > ТДС)
			Или (ЗначениеЗаполнено(Стр.ДатаКонца) И КонецДня(Стр.ДатаКонца) < ТДС) Тогда 
			
			Продолжить;
		КонецЕсли;
		ИмяФормыПояснения = "Отчет." + ИмяОтчетаПояснения + ".Форма." + Стр.ИмяФормы;
	КонецЦикла;
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	Если ОписаниеТС.Количество() = 0 И ОписаниеНедвижимость.Количество() <> 0 Тогда 
		Элементы.Страницы.ТекущаяСтраница = Элементы.ОбъектыНедвижимости;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура СформироватьПояснение(Команда)

	ДанныеИзвещения = УведомлениеОСпецрежимахНалогообложенияИнтеграцияКлиент.НовыеДанныеИзвещения();
	ДанныеИзвещения.ДатаДокумента = ДатаДокумента;
	ДанныеИзвещения.НомерДокумента = НомерДокумента;

	Для Каждого Стр Из ОписаниеТС Цикл 
		Если Стр.Флаг Тогда 
			Пояснения = УведомлениеОСпецрежимахНалогообложенияИнтеграцияКлиент.НовыеПоясненияОТранспортномСредстве();
			Пояснения.РегЗнакТС = Стр["РегЗнакТС"];
			ДанныеИзвещения.ПоясненияТранспортныеСредства.Добавить(Пояснения);
		КонецЕсли;
	КонецЦикла;

	Для Каждого Стр Из ОписаниеНедвижимость Цикл 
		Если Стр.Флаг Тогда
			Пояснения = УведомлениеОСпецрежимахНалогообложенияИнтеграцияКлиент.НовыеПоясненияОНедвижимости();
			Пояснения.НомКадастр = Стр["НомКадастр"];
			ДанныеИзвещения.ПоясненияНедвижимость.Добавить(Пояснения);
		КонецЕсли;
	КонецЦикла;
	
	ОткрытьФорму(ИмяФормыПояснения, Новый Структура("Организация, ДанныеИзвещения", Организация, ДанныеИзвещения));
	Закрыть();
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
&НаСервере
Процедура ЗаполнитьДанныеИсходногоИзвещения(ИзвещениеОСуммах, Отказ)
	Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ИзвещениеОСуммах, "НомерДокумента, ДатаДокумента, Организация");
	ЗаполнитьЗначенияСвойств(ЭтотОбъект, Реквизиты);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ИзвещениеОСуммах", ИзвещениеОСуммах);
	Запрос.Текст = "ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ФайлыДокументовРеализацииПолномочийНалоговыхОрганов.ИмяФайла КАК ИмяФайла,
	|	ФайлыДокументовРеализацииПолномочийНалоговыхОрганов.Данные КАК Данные
	|ИЗ
	|	РегистрСведений.ФайлыДокументовРеализацииПолномочийНалоговыхОрганов КАК ФайлыДокументовРеализацииПолномочийНалоговыхОрганов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДокументыРеализацииПолномочийНалоговыхОрганов КАК ДокументыРеализацииПолномочийНалоговыхОрганов
	|		ПО ФайлыДокументовРеализацииПолномочийНалоговыхОрганов.Документ = ДокументыРеализацииПолномочийНалоговыхОрганов.Ссылка
	|ГДЕ
	|	ДокументыРеализацииПолномочийНалоговыхОрганов.Ссылка = &ИзвещениеОСуммах
	|	И ФайлыДокументовРеализацииПолномочийНалоговыхОрганов.ТипСодержимого = ЗНАЧЕНИЕ(Перечисление.ТипыСодержимогоФайлов.xml)";
	
	ВременныйКаталог = КаталогВременныхФайлов();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл 
		ИмяВременногоФайла = КаталогВременныхФайлов() + Выборка.ИмяФайла;
		Выборка.Данные.Получить().Записать(ИмяВременногоФайла);
		РазобратьФайл(ИмяВременногоФайла);
		УдалитьФайлы(ИмяВременногоФайла);
	КонецЦикла;
	
	Если ОписаниеНедвижимость.Количество() + ОписаниеТС.Количество() = 0 Тогда 
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Объекты налогообложения в извещении не найдены';
													|en = 'Объекты налогообложения в извещении не найдены'"));
	КонецЕсли;
КонецПроцедуры

&НаСервере
Функция ЗначениеПодчиненногоЭлемента(СтрокаДанных, ИмяПодчиненного)
	ОтобранныеСтроки = СтрокаДанных.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяПодчиненного));
	Если ОтобранныеСтроки.Количество() = 1 Тогда 
		Возврат ОтобранныеСтроки[0].ЗначениеЭлемента;
	Иначе
		Возврат "";
	КонецЕсли;
КонецФункции

&НаСервере
Процедура РазобратьФайл(ИмяФайла)
	ЧтениеТекста = Новый ЧтениеТекста(ИмяФайла);
	ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ЧтениеТекста.Прочитать());
	УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
	Если УзелКНД.ЗначениеЭлемента = "1152006" Тогда 
		РазобратьКНД_1152006(ДеревоЗагрузки);
	ИначеЕсли УзелКНД.ЗначениеЭлемента = "1153007" Тогда
		РазобратьКНД_1153007(ДеревоЗагрузки);
	ИначеЕсли УзелКНД.ЗначениеЭлемента = "1152029" Тогда 
		РазобратьКНД_1152029(ДеревоЗагрузки);
	КонецЕсли;
	
	УзелНомерСообщ = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/НомерСообщ", "ИмяЭлемента");
	Если УзелНомерСообщ <> Неопределено Тогда 
		НомерДокумента = УзелНомерСообщ.ЗначениеЭлемента;
	КонецЕсли;
	УзелДатаДок = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/ДатаДок", "ИмяЭлемента");
	Если УзелДатаДок <> Неопределено Тогда
		ДатаДокумента = РегламентированнаяОтчетностьЗагрузка.ДатаИзСтрокиЛюбогоФормата(УзелДатаДок.ЗначениеЭлемента);
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РазобратьКНД_1152006(ДеревоЗагрузки)
	ВставленныеЭлементы = Новый Соответствие;
	ОТЧ = Новый ОписаниеТипов("Число");
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ИсчТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл 
			РегЗнак = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак");
			ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
			СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
			НаимОбъект = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект");
			Если ВставленныеЭлементы["" + РегЗнак + ОКТМО] = Неопределено Тогда 
				ВставленныеЭлементы.Вставить("" + РегЗнак + ОКТМО, Истина);
				НовСтр = ОписаниеТС.Добавить();
				НовСтр.РегЗнакТС = РегЗнак;
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.СумИсчисл = СумИсчисл;
				НовСтр.Описание = "" + НаимОбъект + "; " + РегЗнак + "; " + ОКТМО;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОТрНал/ПерТрНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
				РегЗнак = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак");
				ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
				СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
				НаимОбъект = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект");
				Если ВставленныеЭлементы["" + РегЗнак + ОКТМО] = Неопределено Тогда 
					ВставленныеЭлементы.Вставить("" + РегЗнак + ОКТМО, Истина);
					НовСтр = ОписаниеТС.Добавить();
					НовСтр.РегЗнакТС = РегЗнак;
					НовСтр.ОКТМО = ОКТМО;
					НовСтр.СумИсчисл = СумИсчисл;
					НовСтр.Описание = "Пересчет: " + НаимОбъект + "; " + РегЗнак + "; " + ОКТМО;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РазобратьКНД_1153007(ДеревоЗагрузки)
	ВставленныеЭлементы = Новый Соответствие;
	ОТЧ = Новый ОписаниеТипов("Число");
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ИсчЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Для Каждого СтрокаДанных Из ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл 
			НомКадастрЗУ = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ");
			ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
			СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
			Если ВставленныеЭлементы["" + НомКадастрЗУ + ОКТМО] = Неопределено Тогда 
				ВставленныеЭлементы.Вставить("" + НомКадастрЗУ + ОКТМО, Истина);
				НовСтр = ОписаниеНедвижимость.Добавить();
				НовСтр.НомКадастр = НомКадастрЗУ;
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.СумИсчисл = СумИсчисл;
				НовСтр.Описание = "" + НомКадастрЗУ + "; " + ОКТМО;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	ДанныеПоПересчету = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОЗемНал/ПерЗемНал", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчету) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = ДанныеПоПересчету.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
				НомКадастрЗУ = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ");
				ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
				СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
				Если ВставленныеЭлементы["" + НомКадастрЗУ + ОКТМО] = Неопределено Тогда 
					ВставленныеЭлементы.Вставить("" + НомКадастрЗУ + ОКТМО, Истина);
					НовСтр = ОписаниеНедвижимость.Добавить();
					НовСтр.НомКадастр = НомКадастрЗУ;
					НовСтр.ОКТМО = ОКТМО;
					НовСтр.СумИсчисл = СумИсчисл;
					НовСтр.Описание = "Пересчет: " + НомКадастрЗУ + "; " + ОКТМО;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
КонецПроцедуры

&НаСервере
Процедура РазобратьКНД_1152029(ДеревоЗагрузки)
	ВставленныеЭлементы = Новый Соответствие;
	ОТЧ = Новый ОписаниеТипов("Число");
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ИсчТрНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ТрНалог/ПерТрНал", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчТрНал")) Цикл 
				РегЗнак = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак");
				ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
				НаимОбъект = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект");
				СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
				Если ВставленныеЭлементы["" + РегЗнак + ОКТМО] = Неопределено Тогда 
					ВставленныеЭлементы.Вставить("" + РегЗнак + ОКТМО, Истина);
					НовСтр = ОписаниеТС.Добавить();
					НовСтр.РегЗнакТС = РегЗнак;
					НовСтр.ОКТМО = ОКТМО;
					НовСтр.СумИсчисл = СумИсчисл;
					НовСтр.Описание = "" + НаимОбъект + "; " + РегЗнак + "; " + ОКТМО;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда 
			СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерТрНал"));
			Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл
				СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведТСПер"));
				Если СтрокиСведений.Количество() = 0 Тогда 
					Продолжить;
				КонецЕсли;
				
				Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
					РегЗнак = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "РегЗнак");
					ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
					НаимОбъект = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НаимОбъект");
					СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
					Если ВставленныеЭлементы["" + РегЗнак + ОКТМО] = Неопределено Тогда 
						ВставленныеЭлементы.Вставить("" + РегЗнак + ОКТМО, Истина);
						НовСтр = ОписаниеТС.Добавить();
						НовСтр.РегЗнакТС = РегЗнак;
						НовСтр.ОКТМО = ОКТМО;
						НовСтр.СумИсчисл = СумИсчисл;
						НовСтр.Описание = "Пересчет: " + НаимОбъект + "; " + РегЗнак + "; " + ОКТМО;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	ДанныеПоНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог", "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоНалогу) = Тип("СтрокаДереваЗначений") Тогда 
		Исчислено = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ИсчЗемНал", "ИмяЭлемента");
		Перерасчет = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/СообщИсчНОНал/ЗемНалог/ПерЗемНал", "ИмяЭлемента");
		
		Если ТипЗнч(Исчислено) = Тип("СтрокаДереваЗначений") Тогда 
			Для Каждого СтрокаДанных Из Исчислено.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ИсчЗемНал")) Цикл 
				НомКадастрЗУ = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ");
				ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
				СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
				Если ВставленныеЭлементы["" + НомКадастрЗУ + ОКТМО] = Неопределено Тогда 
					ВставленныеЭлементы.Вставить("" + НомКадастрЗУ + ОКТМО, Истина);
					НовСтр = ОписаниеНедвижимость.Добавить();
					НовСтр.НомКадастр = НомКадастрЗУ;
					НовСтр.ОКТМО = ОКТМО;
					НовСтр.СумИсчисл = СумИсчисл;
					НовСтр.Описание = "" + НомКадастрЗУ + "; " + ОКТМО;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	Если ТипЗнч(Перерасчет) = Тип("СтрокаДереваЗначений") Тогда 
		СтрокиПоПересчету = Перерасчет.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "ПерЗемНал"));
		Для Каждого СтрокаПерерасчета0 Из СтрокиПоПересчету Цикл
			СтрокиСведений = СтрокаПерерасчета0.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", "СведЗУПер"));
			Если СтрокиСведений.Количество() = 0 Тогда 
				Продолжить;
			КонецЕсли;
			
			Для Каждого СтрокаДанных Из СтрокиСведений Цикл 
				НомКадастрЗУ = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "НомКадастрЗУ");
				ОКТМО = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "ОКТМО");
				СумИсчисл = ЗначениеПодчиненногоЭлемента(СтрокаДанных, "СумИсчисл");
				Если ВставленныеЭлементы["" + НомКадастрЗУ + ОКТМО] = Неопределено Тогда 
					ВставленныеЭлементы.Вставить("" + НомКадастрЗУ + ОКТМО, Истина);
					НовСтр = ОписаниеНедвижимость.Добавить();
					НовСтр.НомКадастр = НомКадастрЗУ;
					НовСтр.ОКТМО = ОКТМО;
					НовСтр.СумИсчисл = СумИсчисл;
					НовСтр.Описание = "Пересчет: " + НомКадастрЗУ + "; " + ОКТМО;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти