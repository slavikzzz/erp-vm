#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс
#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаОтзыв501";
	Стр.КНД = "1150142";
	Стр.ВерсияФормата = "5.03";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаЗамена501";
	Стр.КНД = "1150141";
	Стр.ВерсияФормата = "5.03";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаОтзыв501";
	Стр.ОписаниеФормы = "Заявление об отзыве банковской гарантии, по приказу ФНС России от 20.03.2024 № ЕД-7-15/217@";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОтзывБанковскойГарантии;
	Стр.ДатаНачала = '20230101';
	Стр.ДатаКонца = '20991231';

	Стр = Результат.Добавить();
	Стр.ИмяФормы = "ФормаЗамена501";
	Стр.ОписаниеФормы = "Заявление о замене банковской гарантии, по приказу ФНС России от 20.03.2024 № ЕД-7-15/217@";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаменаБанковскойГарантии;
	Стр.ДатаНачала = '20230101';
	Стр.ДатаКонца = '20991231';

	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "ФормаОтзыв501"  Тогда 
		Возврат ЭлектронноеПредставление_ФормаОтзыв501(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "ФормаЗамена501"  Тогда 
		Возврат ЭлектронноеПредставление_ФормаЗамена501(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_ФормаОтзыв501(СведенияОтправки)
	Префикс = "ON_OSVGARBG";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_ФормаЗамена501(СведенияОтправки)
	Префикс = "ON_ZAMBG";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_ФормаОтзыв501(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_ФормаОтзыв501(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_ФормаЗамена501(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_ФормаЗамена501(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_ФормаОтзыв501(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_ФормаОтзыв501(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_ФормаОтзыв501(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиОтзыв501");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_ФормаЗамена501(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_ФормаЗамена501(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_ФормаЗамена501(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиЗамена501");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "ФормаОтзыв501" Тогда 
		Возврат СформироватьСписокЛистовФормаОтзыв501(Объект);
	ИначеЕсли Объект.ИмяФормы = "ФормаЗамена501" Тогда 
		Возврат СформироватьСписокЛистовФормаЗамена501(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "ФормаОтзыв501"  Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_ФормаОтзыв501(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "ФормаЗамена501"  Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_ФормаЗамена501(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор)
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_ФормаОтзыв501(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная",
		ЭтоЮЛ Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2");
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрОсвБГ) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан код основания", "Титульная", "ПрОсвБГ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер заявления", "Титульная", "НомерЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата заявления", "Титульная", "ДатаЗаяв"));
	КонецЕсли;
	Если ЭтоЮЛ Тогда
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(ЭтоЮЛ, Титульная, ТаблицаОшибок);
	Иначе
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИНН", Ложь, Ложь);
		СтруктураДокумент = Новый Структура("КодВидДок,СерНомДок");
		ЗаполнитьЗначенияСвойств(СтруктураДокумент, Титульная);
		Если ЗначениеЗаполнено(Титульная.ИНН) Тогда 
			Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(СтруктураДокумент, "КодВидДок,СерНомДок") Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Если указан ИНН, блок со сведениями о документе не заполняется", "Титульная", "КодВидДок"));
			КонецЕсли;
		Иначе
			Если Не ЗначениеЗаполнено(СтруктураДокумент.КодВидДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан код документа", "Титульная", "КодВидДок"));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(СтруктураДокумент.СерНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан серия и номер документа", "Титульная", "СерНомДок"));
			КонецЕсли;
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(Титульная, ТаблицаОшибок, "Титульная", "ОГРНИП", Ложь, Ложь);
	КонецЕсли;
	
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.СведБГ Цикл 
		СведБГ = Элт.Значение;
		
		Если Не ЗначениеЗаполнено(СведБГ.Дата) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата", "СведБГ", "Дата", СведБГ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведБГ.Номер) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер", "СведБГ", "Номер", СведБГ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведБГ.КемВыд) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведБГ", "КемВыд", СведБГ.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведБГ.Наим) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование", "СведБГ", "Наим", СведБГ.УИД));
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(СведБГ, ТаблицаОшибок, "СведБГ", "БИК", СведБГ.КемВыд = "1" Или СведБГ.КемВыд = "2");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(СведБГ, ТаблицаОшибок, "СведБГ", "ИНН", Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(СведБГ, ТаблицаОшибок, "СведБГ", "КПП", Истина);
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбораОтзыв501", "СхемаВыгрузкиОтзыв501", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_ФормаЗамена501(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(ЭтоЮЛ, Титульная, ТаблицаОшибок);
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная",
		ЭтоЮЛ Или Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2");
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер заявления", "Титульная", "НомерЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаЗаяв) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата заявления", "Титульная", "ДатаЗаяв"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ВидНалог) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид налога", "Титульная", "ВидНалог"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.СпосПред) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан способ представления", "Титульная", "СпосПред"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.ВидДокГар) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан вид документа", "Титульная", "ВидДокГар"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДатаГар) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата", "Титульная", "ДатаГар"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НомерГар) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан номер", "Титульная", "НомерГар"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КемВыдГар) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "Титульная", "КемВыдГар"));
	ИначеЕсли Титульная.ВидДокГар = "1" И Титульная.КемВыдГар = "4" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Признак должен принимать значение 1,2,3 для банковской гарантии", "Титульная", "КемВыдГар"));
	ИначеЕсли Титульная.ВидДокГар = "2" И Титульная.КемВыдГар <> "4" Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Признак должен принимать значение 4 для договора поручительства", "Титульная", "КемВыдГар"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.НаимГар) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование", "Титульная", "НаимГар"));
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(Титульная, ТаблицаОшибок, "Титульная", "БИКГар", Титульная.КемВыдГар = "1" Или Титульная.КемВыдГар = "2");
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННГар", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КППГар", Истина);
	
	Если Титульная.СпосПред = "1" Тогда 
		Если Не ЗначениеЗаполнено(Титульная.ИмяФайлДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя файла декларации", "Титульная", "ИмяФайлДекл"));
		КонецЕсли;
		Если УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Титульная, "КНДДекл,ОтчетГод,Период,НомКорр,ДатаДекл") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке подачи уведомления в электронном виде блок ""Сведения о декларации"" не заполняется", "Титульная", "КНДДекл"));
		КонецЕсли;
	ИначеЕсли Титульная.СпосПред = "2" Тогда 
		Если ЗначениеЗаполнено(Титульная.ИмяФайлДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке 2 имя файла не заполняется", "Титульная", "ИмяФайлДекл"));
		КонецЕсли;
		
		Если Титульная.ВидНалог = "1" И ЗначениеЗаполнено(Титульная.КНДДекл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"При признаке 1 КНД декларации должен отсутствовать", "Титульная", "КНДДекл"));
		ИначеЕсли Титульная.ВидНалог = "2" И Не ЗначениеЗаполнено(Титульная.КНДДекл) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан КНД", "Титульная", "КНДДекл"));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаГода(Титульная, ТаблицаОшибок, "Титульная", "ОтчетГод", Истина);
		Если Не ЗначениеЗаполнено(Титульная.Период) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан налоговый период", "Титульная", "Период"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Титульная.ДатаДекл) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата декларации", "Титульная", "ДатаДекл"));
		КонецЕсли;
	КонецЕсли;
	
	Для Каждого Элт Из Данные.ДанныеМногостраничныхРазделов.СведДокПредЗам Цикл 
		СведДокПредЗам = Элт.Значение;
		
		Если СведДокПредЗам.ВидДок <> Титульная.ВидДокГар Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Вид документа должен соответствовать виду документа на титульной странице", "СведДокПредЗам", "ВидДок", СведДокПредЗам.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведДокПредЗам.Дата) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата", "СведДокПредЗам", "Дата", СведДокПредЗам.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведДокПредЗам.Номер) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер", "СведДокПредЗам", "Номер", СведДокПредЗам.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведДокПредЗам.КемВыд) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак", "СведДокПредЗам", "КемВыд", СведДокПредЗам.УИД));
		ИначеЕсли СведДокПредЗам.ВидДок = "1" И СведДокПредЗам.КемВыд = "4" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Признак должен принимать значение 1,2,3 для банковской гарантии", "СведДокПредЗам", "КемВыд", СведДокПредЗам.УИД));
		ИначеЕсли СведДокПредЗам.ВидДок = "2" И СведДокПредЗам.КемВыд <> "4" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Признак должен принимать значение 4 для договора поручительства", "СведДокПредЗам", "КемВыд", СведДокПредЗам.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(СведДокПредЗам.Наим) Тогда
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано наименование", "СведДокПредЗам", "Наим", СведДокПредЗам.УИД));
		КонецЕсли;
		
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаБИК(СведДокПредЗам, ТаблицаОшибок, "СведДокПредЗам", "БИК", СведДокПредЗам.КемВыд = "1" Или СведДокПредЗам.КемВыд = "2");
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(СведДокПредЗам, ТаблицаОшибок, "СведДокПредЗам", "ИНН", Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(СведДокПредЗам, ТаблицаОшибок, "СведДокПредЗам", "КПП", Истина);
	КонецЦикла;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбораЗамена501", "СхемаВыгрузкиЗамена501", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция СформироватьСписокЛистовФормаОтзыв501(Объект) Экспорт
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Ссылка,ПодписантФамилия,ПодписантИмя,ПодписантОтчество,ДанныеУведомления");
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = Объект;
	КонецЕсли;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбъектРеквизиты.ДанныеУведомления.Получить();
	БланкПечати = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_ФормаОтзыв501");
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	СведБГ = СтруктураПараметров.ДанныеМногостраничныхРазделов.СведБГ;
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаЗаяв");
	
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть1"));
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1"));
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть2"));
	УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(Титульная, ПечатнаяФорма);
	Если СведБГ.Количество() > 0 Тогда
		СведБГТитульная = СведБГ[0].Значение;
		УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СведБГТитульная, "Дата");
		УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведБГТитульная, ПечатнаяФорма);
	КонецЕсли;
	
	ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
	ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
	ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Листы.Количество() + 1, "ЧЦ=3; ЧВН=");
	ПечатнаяФорма.Области["ФамилияПодп"].Текст = ОбъектРеквизиты.ПодписантФамилия;
	ПечатнаяФорма.Области["ИмяПодп"].Текст = ОбъектРеквизиты.ПодписантИмя;
	ПечатнаяФорма.Области["ОтчествоПодп"].Текст = ОбъектРеквизиты.ПодписантОтчество;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
	
	Инд = 1;
	Пока Инд < СтруктураПараметров.ДанныеМногостраничныхРазделов.СведБГ.Количество() Цикл
		СведБГТекущая = СведБГ[Инд].Значение;
		УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СведБГТекущая, "Дата");
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_0"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_2"));
		ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
		ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
		ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Листы.Количество() + 1, "ЧЦ=3; ЧВН=");
		ПечатнаяФорма.Области["ТекстПриказа"].Текст = "";
		УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведБГТекущая, ПечатнаяФорма);
		
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1"));
		Инд = Инд + 1;
		Если Инд < СтруктураПараметров.ДанныеМногостраничныхРазделов.СведБГ.Количество() Тогда 
			СведБГТекущая = СведБГ[Инд].Значение;
			УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СведБГТекущая, "Дата");
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведБГТекущая, ПечатнаяФорма);
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть4"));
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
		Инд = Инд + 1;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФормаЗамена501(Объект) Экспорт
	Если ТипЗнч(Объект) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Объект, "Ссылка,ПодписантФамилия,ПодписантИмя,ПодписантОтчество,ДанныеУведомления");
	ИначеЕсли ТипЗнч(Объект) = Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения") Тогда 
		ОбъектРеквизиты = Объект;
	КонецЕсли;
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбъектРеквизиты.ДанныеУведомления.Получить();
	БланкПечати = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_ФормаЗамена501");
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	СведДокПредЗам = СтруктураПараметров.ДанныеМногостраничныхРазделов.СведДокПредЗам;
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаЗаяв");
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаГар");
	УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(Титульная, "ДатаДекл");
	
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть1"));
	ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть2"));
	УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(Титульная, ПечатнаяФорма);
	ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
	ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
	ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Листы.Количество() + 1, "ЧЦ=3; ЧВН=");
	ПечатнаяФорма.Области["ФамилияПодп"].Текст = ОбъектРеквизиты.ПодписантФамилия;
	ПечатнаяФорма.Области["ИмяПодп"].Текст = ОбъектРеквизиты.ПодписантИмя;
	ПечатнаяФорма.Области["ОтчествоПодп"].Текст = ОбъектРеквизиты.ПодписантОтчество;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
	
	Инд = 0;
	Пока Инд < СтруктураПараметров.ДанныеМногостраничныхРазделов.СведДокПредЗам.Количество() Цикл
		СведДокПредЗамТекущая = СведДокПредЗам[Инд].Значение;
		УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СведДокПредЗамТекущая, "Дата");
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("ШапкаИННКПП"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_0"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1_0"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1"));
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_2"));
		ПечатнаяФорма.Области["ИННШапка"].Текст = Титульная.ИНН;
		ПечатнаяФорма.Области["КППШапка"].Текст = Титульная.КПП;
		ПечатнаяФорма.Области["НомСтр000"].Текст = Формат(Листы.Количество() + 1, "ЧЦ=3; ЧВН=");
		ПечатнаяФорма.Области["ТекстПриказа"].Текст = "";
		УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведДокПредЗамТекущая, ПечатнаяФорма);
		
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть3_1"));
		Инд = Инд + 1;
		Если Инд < СтруктураПараметров.ДанныеМногостраничныхРазделов.СведДокПредЗам.Количество() Тогда 
			СведДокПредЗамТекущая = СведДокПредЗам[Инд].Значение;
			УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СведДокПредЗамТекущая, "Дата");
			УведомлениеОСпецрежимахНалогообложения.ПечатьСтруктурыНаФорму(СведДокПредЗамТекущая, ПечатнаяФорма);
		КонецЕсли;
		
		ПечатнаяФорма.Вывести(БланкПечати.ПолучитьОбласть("Часть4"));
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, Листы.Количество() + 1, Ложь);
		Инд = Инд + 1;
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
