#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныеПроцедурыИФункции

#Область ФормированиеРегламентированногоОтчета

Процедура ВосстановитьВариантыАвтозаполненияПоказателейРаздела(ВариантыЗаполнения, СохраненныеВарианты) Экспорт
	
	Для Каждого СохраненныйВариант Из СохраненныеВарианты.Значение Цикл
		Для Каждого ОписаниеПоказателя Из СохраненныйВариант Цикл
			ИмяПоказателя = ОписаниеПоказателя.КодПоказателя;
			КодВарианта = ОписаниеПоказателя.ВариантЗаполнения;
			Если КодВарианта <> 1 И КодВарианта <> 2 Тогда
				Продолжить; // Корректировка не требуется
			КонецЕсли;
			
			СтрокиВарианта = ВариантыЗаполнения.НайтиСтроки(Новый Структура("КодПоказателя", ИмяПоказателя));
			Если СтрокиВарианта.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			СтрокаВарианта = СтрокиВарианта[0];
			Если СтрокаВарианта.ВариантЗаполнения = 3 Тогда
				ЗаполнитьЗначенияСвойств(СтрокаВарианта, ОписаниеПоказателя);
			КонецЕсли;
			
		КонецЦикла;
		
		Прервать; // Исключение избыточных таблиц из ранее сохраненных отчетов
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ПечатьОтчетности

Процедура УдалитьНенужноеИзПечатнойФормы(ПечатнаяФорма) Экспорт
	
	ПоляПолнойОчистки = "НомерКорректировки, НомерКорректировкиЗаголовок,
		|ВидОтчетности, ВидОтчетностиЗаголовок, ОрганизацииДляЗаполненияОтчета";
	ОчищаемыеОбласти = СтрРазделить(ПоляПолнойОчистки, ",", Ложь);
	
	// Очистка областей по именам.
	Для Каждого ИмяОчищаемойОбласти Из ОчищаемыеОбласти Цикл
		ОчищаемаяОбласть = ПечатнаяФорма.Области.Найти(СокрЛП(ИмяОчищаемойОбласти));
		Если ОчищаемаяОбласть <> Неопределено Тогда
			ОчищаемаяОбласть.Очистить(Истина, Истина, Истина);
			ОчищаемаяОбласть.Гиперссылка = Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ОбластьТД Из ПечатнаяФорма.Области Цикл
		Если ОбластьТД.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник Тогда
			// Очистка элементов удаления строки многострочной части.
			Если СтрНайти(ОбластьТД.Имя, "УдалитьСтроку") = 1 И ОбластьТД.СодержитЗначение = Ложь Тогда
				ОбластьТД.Текст = "";
				ОбластьТД.Гиперссылка = Ложь;
			КонецЕсли;
			
			// Очистка примечаний на форме отчета.
			Если ЗначениеЗаполнено(ОбластьТД.Примечание.Текст) Тогда
				ОбластьТД.Примечание.Текст = "";
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ВерсионированиеФорм

Функция ВерсияСтруктурыДанных(ИмяФормы) Экспорт
	
	Если ИмяФормы = "ФормаОтчета2012Кв4" Тогда
		Возврат "БРО.2022.08.08";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

Функция ОбновитьСтруктурыДанныхСохраненногоОтчета(ИмяФормы, СохраненныеДанные, ПараметрыОбновления = Неопределено) Экспорт
	
	СохраненныеДанныеИзменены = Ложь;
	
	СохраненнаяВерсия = "РО.2000.01.01"; // Версия формы до использования обновления структур данных
	Если СохраненныеДанные.Свойство("ВерсияСтруктурыДанных") Тогда
		СохраненнаяВерсия = СохраненныеДанные.ВерсияСтруктурыДанных;
	КонецЕсли;
	
	Если ИмяФормы = "ФормаОтчета2012Кв4" Тогда
		ВыполнитьОбработчикиОбновленияФормаОтчета2012Кв4(СохраненныеДанные, СохраненнаяВерсия, СохраненныеДанныеИзменены);
		СохраненныеДанные.Вставить("ВерсияСтруктурыДанных", ВерсияСтруктурыДанных(ИмяФормы));
	КонецЕсли;
	
	Возврат СохраненныеДанныеИзменены;
	
КонецФункции

Функция ВыполнитьПриПереходеНаВерсию(НоваяВерсия, СохраненнаяВерсия)
	
	Возврат ЧисловоеПредставлениеВерсии(НоваяВерсия) > ЧисловоеПредставлениеВерсии(СохраненнаяВерсия);
	
КонецФункции

Функция ЧисловоеПредставлениеВерсии(ВерсияСтруктурыДанных)
	
	ЧисловоеПредставление = СтрЗаменить(ВерсияСтруктурыДанных, "БРО.", "");
	ЧисловоеПредставление = СтрЗаменить(ЧисловоеПредставление, "РО.", "");
	ЧисловоеПредставление = СтрЗаменить(ЧисловоеПредставление, ".", "");
	ЧисловоеПредставление = Число(ЧисловоеПредставление);
	
	Возврат ЧисловоеПредставление;
	
КонецФункции

Процедура ВыполнитьОбработчикиОбновленияФормаОтчета2012Кв4(СохраненныеДанные, СохраненнаяВерсия, СохраненныеДанныеИзменены)
	
	Если СтрНайти(СохраненнаяВерсия, "БРО.") = 1 Тогда
		Если ВыполнитьПриПереходеНаВерсию("БРО.2022.08.08", СохраненнаяВерсия) Тогда
			СохраненныеДанныеИзменены = Истина;
		КонецЕсли;
		
	ИначеЕсли СтрНайти(СохраненнаяВерсия, "РО.") = 1 Тогда
		Если ВыполнитьПриПереходеНаВерсию("РО.2022.08.08", СохраненнаяВерсия) Тогда
			СохраненныеДанныеИзменены = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

Функция СохраненныеДанные(СохраненныйДокумент) Экспорт
	
	СохраненныеДанные = СохраненныйДокумент.ДанныеОтчета.Получить();
	ОбновитьСтруктурыДанныхСохраненногоОтчета(СохраненныйДокумент.ВыбраннаяФорма, СохраненныеДанные);
	
	Возврат СохраненныеДанные;
	
КонецФункции

#КонецОбласти

#КонецЕсли


