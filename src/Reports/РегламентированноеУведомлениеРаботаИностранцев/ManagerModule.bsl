#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция КонтейнерЗаполнения(ВидУведомления, РедакцияФормы = "2023") Экспорт 
	Если ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаключениеТрудовогоДоговора Тогда 
		ИмяМакета = "Титульная_2023_Заключение";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РасторжениеТрудовогоДоговора Тогда 
		ИмяМакета = "Титульная_2023_Расторжение";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОбязательстваВыплатаЗП Тогда 
		ИмяМакета = "Титульная_2023_Обязательства";
	ИначеЕсли ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ХодатайствоОПривлечении Тогда 
		ИмяМакета = "Титульная_2023_Ходатайство";
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Контейнер = Новый Структура("Основание");
	Контейнер.Вставить("Данные", Новый Структура);
	Контейнер.Данные.Вставить("Титульная", Новый Структура);	
	Титульная = Контейнер.Данные.Титульная;
	Макет = Отчеты["РегламентированноеУведомлениеРаботаИностранцев"].ПолучитьМакет(ИмяМакета);
	Для Каждого Обл Из Макет.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник
			И Обл.СодержитЗначение = Истина  Тогда 
			
			Титульная.Вставить(Обл.Имя);
		КонецЕсли;
	КонецЦикла;
	
	Возврат Контейнер;
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьФормуПоУмолчанию() Экспорт
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2023_Заключение" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_Заключение(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_Расторжение" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_Расторжение(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_Обязательства" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_Обязательства(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_Ходатайство" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_Ходатайство(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_ХодатайствоПатент" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_ХодатайствоПатент(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_РаботаПоПатенту" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_РаботаПоПатенту(Объект);
	КонецЕсли;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_Заключение";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаключениеТрудовогоДоговора;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 30.07.2020 № 536 (в редакции от 22.11.2023 № 887)";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_Расторжение";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РасторжениеТрудовогоДоговора;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 30.07.2020 № 536 (в редакции от 22.11.2023 № 887)";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_Обязательства";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ОбязательстваВыплатаЗП;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 30.07.2020 № 536 (в редакции от 22.11.2023 № 887)";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_Ходатайство";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ХодатайствоОПривлечении;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 30.07.2020 № 536 (в редакции от 22.11.2023 № 887)";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_ХодатайствоПатент";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ХодатайствоОПереоформленииПатента;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 05.10.2020 № 695";
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_РаботаПоПатенту";
	Стр.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.РаботаПоПатенту;
	Стр.ОписаниеФормы = "В соответствии с приказом МВД России от 05.09.2023 № 655";
	
	Возврат Результат;
КонецФункции

Функция СформироватьМакет(Объект, ИмяФормы) Экспорт
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	ОбщегоНазначения.СообщитьПользователю("Данное уведомление не подается в электронном виде");
КонецФункции

Функция ЭлементСтруктурыДлинныхПолей(ПорядковыйНомер, НаименованиеПоля, КоличествоЗнакомест, КлючНаФорме)
	СтруктураДлинныхПолей = Новый Структура;
	СтруктураДлинныхПолей.Вставить("ПорядковыйНомер", ПорядковыйНомер);
	СтруктураДлинныхПолей.Вставить("НаименованиеПоля", НаименованиеПоля);
	СтруктураДлинныхПолей.Вставить("КоличествоЗнакомест", КоличествоЗнакомест);
	СтруктураДлинныхПолей.Вставить("КлючНаФорме", КлючНаФорме);
	Возврат СтруктураДлинныхПолей;
КонецФункции

Процедура ПечатьПриложения(СтруктураПечати, СтруктураДлинныхПолей, Объект, ИННКПП, СписокИспользуемыхМакетов, ПечатнаяФорма, Листы, ИмяМакета)
	Инд = 0;
	Дельта = 170;
	
	Для Каждого Элт Из СтруктураДлинныхПолей Цикл
		ДанныеПоля = Элт.Значение;
		СтрокаДляПечати = Сред(СокрЛП(Строка(СтруктураПечати[ДанныеПоля["КлючНаФорме"]])), ДанныеПоля["КоличествоЗнакомест"] + 1);
		
		Пока Истина Цикл
			Если Не ЗначениеЗаполнено(СтрокаДляПечати) Тогда 
				Прервать;
			КонецЕсли;
			
			Инд = Инд + 1;
			ПечатьВОбласть = Лев(СтрокаДляПечати, Дельта);
			СтрокаДляПечати = СокрЛП(Сред(СтрокаДляПечати, Дельта + 1));
			СтруктураПечати.Вставить("Описание" + Инд, ПечатьВОбласть);
			СтруктураПечати.Вставить("ПорядковыйНомер" + Инд, ДанныеПоля["ПорядковыйНомер"]);
			СтруктураПечати.Вставить("НаименованиеПоля" + Инд, ДанныеПоля["НаименованиеПоля"]);
			
			Если Инд = 4 Тогда 
				УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
					УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета + "1"),
					ПечатнаяФорма, ИННКПП, Истина, Ложь);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
				УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
					УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета + "2"),
					ПечатнаяФорма, ИННКПП, Истина, Ложь);
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
				Инд = 0;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Если Инд > 0 Тогда 
		Пока Инд < 4 Цикл 
			Инд = Инд + 1;
			СтруктураПечати.Вставить("Описание" + Инд, "");
			СтруктураПечати.Вставить("ПорядковыйНомер" + Инд, "");
			СтруктураПечати.Вставить("НаименованиеПоля" + Инд, "");
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета + "1"),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, ИмяМакета + "2"),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2023_Заключение(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ДанныеВВерхнийРегистр(Титульная);
	Для Инд = 2 По 10 Цикл 
		Титульная.Вставить("Работодательч" + Инд, Сред(Строка(Титульная.Работодатель), 1 + 34*(1+Инд)));
	КонецЦикла;
	Титульная.Вставить("Описание34п_стр4", Сред(Строка(Титульная.Описание34п), 1+34*2));
	
	ИННКПП = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная);
	ИННКПП.Вставить("НомСтр", 0);
	Для Инд = 1 По 4 Цикл 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, Титульная, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_Заключение_стр" + Инд),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	
	СтруктураДлинныхПолей = Новый СписокЗначений;
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("-", "Наименование органа МВД", 102, "НаимОргМВД"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("1.2", "Сведения о работодателе", 408, "Работодатель"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.1", "Фамилия", 28, "Фамилия"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.2", "Имя", 28, "Имя"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.3", "Отчество", 28, "Отчество"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.4", "Гражданство", 27, "Гражданство"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.7", "Наименование документа", 20, "Документ"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.7", "Кем выдан", 74, "КемВыдан"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3", "Наименование документа", 20, "ДокументРазр"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3", "Кем выдан", 61, "КемВыданРазр"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.1", "Разъяснения по пункту 3.1", 102, "Описание31п"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.2", "Профессия", 102, "Описание32п"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.4", "Адрес", 102, "Описание34п"));
	
	ПечатьПриложения(ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная), СтруктураДлинныхПолей,
		Объект, ИННКПП, СписокИспользуемыхМакетов, ПечатнаяФорма, Листы, "Печать_Форма2023_Приложение_стр");
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_Расторжение(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ДанныеВВерхнийРегистр(Титульная);
	Для Инд = 2 По 10 Цикл 
		Титульная.Вставить("Работодательч" + Инд, Сред(Строка(Титульная.Работодатель), 1 + 34*(1+Инд)));
	КонецЦикла;
	
	ИННКПП = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная);
	ИННКПП.Вставить("НомСтр", 0);
	Для Инд = 1 По 4 Цикл 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, Титульная, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_Расторжение_стр" + Инд),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	
	СтруктураДлинныхПолей = Новый СписокЗначений;
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("-", "Наименование органа МВД", 102, "НаимОргМВД"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("1.2", "Сведения о работодателе", 408, "Работодатель"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.1", "Фамилия", 28, "Фамилия"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.2", "Имя", 28, "Имя"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.3", "Отчество", 28, "Отчество"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.4", "Гражданство", 27, "Гражданство"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.7", "Наименование документа", 20, "Документ"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.7", "Кем выдан", 74, "КемВыдан"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3", "Наименование документа", 20, "ДокументРазр"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3", "Кем выдан", 61, "КемВыданРазр"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.1", "Разъяснения по пункту 3.1", 102, "Описание31п"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.2", "Профессия", 102, "Описание32п"));
	
	ПечатьПриложения(ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная), СтруктураДлинныхПолей,
		Объект, ИННКПП, СписокИспользуемыхМакетов, ПечатнаяФорма, Листы, "Печать_Форма2023_Приложение_стр");
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_Обязательства(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ДанныеВВерхнийРегистр(Титульная);
	Титульная.Вставить("Работодательч2", Сред(Строка(Титульная.Работодатель), 1 + 34*3));
	Титульная.Вставить("Работодательч3", Сред(Строка(Титульная.Работодатель), 1 + 34*5));
	Титульная.Вставить("Работодательч4", Сред(Строка(Титульная.Работодатель), 1 + 34*6));
	Титульная.Вставить("Работодательч5", Сред(Строка(Титульная.Работодатель), 1 + 34*7));
	
	ИННКПП = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная);
	ИННКПП.Вставить("НомСтр", 0);
	Для Инд = 1 По 4 Цикл 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, Титульная, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_Обязательства_стр" + Инд),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	
	СтруктураДлинныхПолей = Новый СписокЗначений;
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("-", "Наименование органа МВД", 102, "НаимОргМВД"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("1.2", "Сведения о работодателе", 374, "Работодатель"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.1", "Фамилия", 28, "Фамилия"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.2", "Имя", 28, "Имя"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.3", "Отчество", 28, "Отчество"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.4", "Гражданство", 27, "Гражданство"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("2.7", "Наименование документа", 20, "Документ"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.4", "Профессия", 61, "Описание34п"));
	СтруктураДлинныхПолей.Добавить(ЭлементСтруктурыДлинныхПолей("3.5", "Территория действия", 68, "Описание35п"));
	
	ПечатьПриложения(ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная), СтруктураДлинныхПолей,
		Объект, ИННКПП, СписокИспользуемыхМакетов, ПечатнаяФорма, Листы, "Печать_Форма2023_ПриложениеЗП_стр");
	
	Возврат Листы;
КонецФункции

Функция НеперносимыйОстаток()
	Возврат 15;
КонецФункции

Процедура ОтрезатьПоСловам(ИмяПоля, Исходник, Приемник, Индекс, Макс)
	ИмяПоляПриемника = ?(Индекс = 1, ИмяПоля, ИмяПоля + Индекс);
	Приемник.Вставить(ИмяПоляПриемника, "");
	Пока Истина Цикл
		Исходник[ИмяПоля] = СокрЛП(Исходник[ИмяПоля]);
		Если СтрДлина(Исходник[ИмяПоля]) = 0 Тогда 
			Прервать;
		КонецЕсли;
		ИндексПробела = СтрНайти(Исходник[ИмяПоля], " ");
		Если ИндексПробела = 0 Тогда
			СловоДляВывода = Исходник[ИмяПоля];
		Иначе
			СловоДляВывода = Лев(Исходник[ИмяПоля], ИндексПробела - 1);
		КонецЕсли;
		
		Если Макс - СтрДлина(Приемник[ИмяПоляПриемника]) < НеперносимыйОстаток() 
			И СтрДлина(Приемник[ИмяПоляПриемника]) + СтрДлина(СловоДляВывода) > Макс Тогда 
			
			Возврат;
		Иначе
			Приемник[ИмяПоляПриемника] = СокрЛ(Приемник[ИмяПоляПриемника]) + " " + СловоДляВывода;
			Исходник[ИмяПоля] = Сред(Исходник[ИмяПоля], СтрДлина(СловоДляВывода) + 1);
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Процедура ОтрезатьСтроку(ИмяПоля, Исходник, Приемник, КоличествоСтрок = 1, Дл1 = 115, Дл2 = 115)
	Если Не ЗначениеЗаполнено(Исходник[ИмяПоля]) Тогда 
		Возврат;
	КонецЕсли;
	Если ТипЗнч(Исходник[ИмяПоля]) = Тип("Дата") Тогда 
		Приемник.Вставить(ИмяПоля, Исходник[ИмяПоля]);
		Исходник[ИмяПоля] = Неопределено;
	ИначеЕсли ТипЗнч(Исходник[ИмяПоля]) = Тип("Строка") Тогда 
		Исходник[ИмяПоля] = СокрЛП(Исходник[ИмяПоля]);
		Пока СтрНайти(Исходник[ИмяПоля], "  ") > 0 Цикл 
			Исходник[ИмяПоля] = СтрЗаменить(Исходник[ИмяПоля], "  ", " ");
		КонецЦикла;
		ОтрезатьПоСловам(ИмяПоля, Исходник, Приемник, 1, Дл1);
		Для Инд = 2 По КоличествоСтрок Цикл
			ОтрезатьПоСловам(ИмяПоля, Исходник, Приемник, Инд, Дл2);
		КонецЦикла;
	Иначе
		Исходник[ИмяПоля] = Неопределено;
	КонецЕсли;
КонецПроцедуры

Процедура ОтрезатьФиксированнуюСтроку(ИмяПоля, Исходник, Приемник, КоличествоСимволов)
	Приемник.Вставить(ИмяПоля, Лев(Исходник[ИмяПоля], КоличествоСимволов));
	Исходник[ИмяПоля] = Сред(Исходник[ИмяПоля], КоличествоСимволов + 1);
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2023_Ходатайство(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ОпытРаботы = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр1;
	ИННКПП = Новый Структура("НомСтр", 0);
	
	Пока Истина Цикл 
		Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(Титульная) И ОпытРаботы.Количество() = 0 Тогда 
			Прервать;
		КонецЕсли;
		
		СтруктураПечати = Новый Структура;
		ОтрезатьСтроку("ДатаВыдачи", Титульная, СтруктураПечати);
		ОтрезатьСтроку("ДатаРождения", Титульная, СтруктураПечати);
		ОтрезатьФиксированнуюСтроку("Серия", Титульная, СтруктураПечати, 7);
		ОтрезатьФиксированнуюСтроку("Номер", Титульная, СтруктураПечати, 14);
		ОтрезатьСтроку("ФамилияРус", Титульная, СтруктураПечати, 1, 45);
		ОтрезатьСтроку("ФамилияЛат", Титульная, СтруктураПечати, 1, 45);
		ОтрезатьСтроку("ИмяРус", Титульная, СтруктураПечати, 1, 45);
		ОтрезатьСтроку("ИмяЛат", Титульная, СтруктураПечати, 1, 45);
		ОтрезатьСтроку("ОтчествоРус", Титульная, СтруктураПечати, 1, 45);
		ОтрезатьСтроку("Пол", Титульная, СтруктураПечати, 1, 12);
		ОтрезатьСтроку("Гражданство", Титульная, СтруктураПечати, 1, 60);
		ОтрезатьСтроку("МестоПроживанияГосударство", Титульная, СтруктураПечати, 1, 50);
		ОтрезатьСтроку("МестоПроживанияНаселенныйПункт", Титульная, СтруктураПечати, 1, 60);
		ОтрезатьСтроку("КемВыдан", Титульная, СтруктураПечати, 3, 85);
		ОтрезатьСтроку("НаимОбрОрг", Титульная, СтруктураПечати, 3, 65);
		ОтрезатьСтроку("НомерДок", Титульная, СтруктураПечати, 1, 55);
		ОтрезатьСтроку("ДатаВыдачиДок", Титульная, СтруктураПечати, 1, 65);
		ОтрезатьСтроку("Специальность", Титульная, СтруктураПечати, 1, 95);
		ОтрезатьСтроку("Квалификация", Титульная, СтруктураПечати, 1, 95);
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_Ходатайство_стр1"),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
		
		СтруктураПечати = Новый Структура;
		Для Инд = 1 По 3 Цикл 
			Если ОпытРаботы.Количество() = 0 Тогда 
				Прервать;
			КонецЕсли;
			
			СтруктураПечати.Вставить("Поступление_" + Инд, ОпытРаботы[0].Поступление);
			СтруктураПечати.Вставить("Увольнение_" + Инд, ОпытРаботы[0].Увольнение);
			СтруктураПечати.Вставить("РаботодательНаименование_" + Инд, ОпытРаботы[0].РаботодательНаименование);
			СтруктураПечати.Вставить("РаботодательАдрес_" + Инд, ОпытРаботы[0].РаботодательАдрес);
			ОпытРаботы.Удалить(0);
		КонецЦикла;
		
		ОтрезатьСтроку("СведенияОНавыках", Титульная, СтруктураПечати, 7);
		ОтрезатьСтроку("РекомендациюДал", Титульная, СтруктураПечати, 2, 70);
		ОтрезатьСтроку("РодДеятельности", Титульная, СтруктураПечати, 3, 70);
		ОтрезатьСтроку("ОценкаКачеств", Титульная, СтруктураПечати, 3, 70);
		ОтрезатьСтроку("ЛичнаяХарактеристика", Титульная, СтруктураПечати, 10, 70);
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПечати, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_Ходатайство_стр2"),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_ХодатайствоПатент(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	ОпытРаботы = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр1;
	ИННКПП = Новый Структура("НомСтр", 0);
	НомСтр = 1;
	
	СтруктураПечати = Новый Структура;
	ОтрезатьСтроку("Адрес", Титульная, СтруктураПечати, 3, 125, 125);
	ОтрезатьСтроку("АдресУчет", Титульная, СтруктураПечати, 2, 80, 125);
	МакетУведомления = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_ХодатайствоПатент_стр1");
	
	ОбластьЧасть = МакетУведомления.ПолучитьОбласть("Часть1");
	ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, Титульная);
	ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, СтруктураПечати);
	Для Каждого КЗ Из Титульная Цикл
		Если ОбластьЧасть.Области.Найти(КЗ.Ключ + "_1") = Неопределено Тогда 
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда
			УведомлениеОСпецрежимахНалогообложения.ВывестиДатуНаПечать(КЗ.Значение, КЗ.Ключ, ОбластьЧасть.Области, " ");
		Иначе
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(КЗ.Значение, КЗ.Ключ, ОбластьЧасть.Области);
		КонецЕсли;
	КонецЦикла;
	ПечатнаяФорма.Вывести(ОбластьЧасть);
	ПечатнаяФорма.Вывести(МакетУведомления.ПолучитьОбласть("Часть2"));
	
	Для Каждого МнгСтр Из ОпытРаботы Цикл 
		ОбластьЧасть = МакетУведомления.ПолучитьОбласть("МнгСтр");
		ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, МнгСтр);
		
		Если Не ПечатнаяФорма.ПроверитьВывод(ОбластьЧасть) Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
			ПечатнаяФорма.Вывести(МакетУведомления.ПолучитьОбласть("Часть2"));
		КонецЕсли;
		ПечатнаяФорма.Вывести(ОбластьЧасть);
	КонецЦикла;
	
	ОбластьЧасть = МакетУведомления.ПолучитьОбласть("Часть3");
	ЗаполнитьЗначенияСвойств(ОбластьЧасть.Параметры, Титульная);
	Если Не ПечатнаяФорма.ПроверитьВывод(ОбластьЧасть) Тогда
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
		ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	КонецЕсли;
	ПечатнаяФорма.Вывести(ОбластьЧасть);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2023_РаботаПоПатенту(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.ДанныеВВерхнийРегистр(Титульная);
	Для Инд = 2 По 12 Цикл 
		Титульная.Вставить("Работодательч" + Инд, Сред(Строка(Титульная.Работодатель), 1 + 34*(Инд-1)));
	КонецЦикла;
	
	ИННКПП = ОбщегоНазначенияКлиентСервер.СкопироватьСтруктуру(Титульная);
	ИННКПП.Вставить("НомСтр", 0);
	Для Инд = 1 По 3 Цикл 
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, Титульная, ИННКПП.НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2023_РаботаПоПатенту_стр" + Инд),
			ПечатнаяФорма, ИННКПП, Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	КонецЦикла;
	
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
