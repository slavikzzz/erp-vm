#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.КНД = "1111620";
	Стр.ВерсияФормата = "5.01";
	
	Возврат Результат;
КонецФункции

Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Ложь;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2017_1";
	Стр.ОписаниеФормы = "Форму уведомления о контролируемых иностранных компаниях в соответствии с приказом ФНС России от 20.03.2017 № ММВ-7-14/222@";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
	Возврат Неопределено;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2017_1" Тогда
		Попытка
			Данные = Объект.ДанныеУведомления.Получить();
			Проверить_Форма2017_1(Данные, УникальныйИдентификатор);
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("Проверка уведомления прошла успешно.", УникальныйИдентификатор);
		Исключение
			РегламентированнаяОтчетность.СообщитьПользователюОбОшибкеВУведомлении("При проверке уведомления обнаружены ошибки.", УникальныйИдентификатор);
		КонецПопытки;
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2017_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2017_1(УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(СведенияОтправки)
	Префикс = "UT_POSTSNNALAG";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2017_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Титульная, ТаблицаОшибок, "Титульная", "ИННЮЛ", Истина, Истина);
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Титульная, ТаблицаОшибок, "Титульная", "КПП", Истина);
	Если Не ЗначениеЗаполнено(Титульная.ОГРН) Тогда
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан ОГРН на титульном листе", "Титульная", "ОГРН"));
	ИначеЕсли СтрДлина(СокрЛП(Титульная.ОГРН)) <> 13 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Неправильно указан ОГРН на титульном листе", "Титульная", "ОГРН"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	Если Не ЗначениеЗаполнено(Титульная.НаимОрг) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано наименование организации", "Титульная", "НаимОрг"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПрПодп"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.КоличНО) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано количество налоговых органов", "Титульная", "КоличНО"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ПрПост) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак", "Титульная", "ПрПост"));
	КонецЕсли;
	
	Если Не ЗначениеЗаполнено(Титульная.Фамилия) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана фамилия подписанта", "Титульная", "Фамилия"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.Имя) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указано имя подписанта", "Титульная", "Имя"));
	КонецЕсли;
	Если Титульная.ПрПодп = "2" И (Не ЗначениеЗаполнено(Титульная.НаимДок)) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ подписанта", "Титульная", "НаимДок"));
	КонецЕсли;
	
	ПрПост = Титульная.ПрПост;
	Для Каждого ДопЛист Из Данные.ДанныеМногостраничныхРазделов.СведМО Цикл 
		ДопЛистЗначение = ДопЛист.Значение;
		Если Не ЗначениеЗаполнено(ДопЛистЗначение.КодНО) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код налогового органа на доп.странице", "СведМО", "КодНО", ДопЛистЗначение.УИД));
		ИначеЕсли СтрДлина(СокрЛП(ДопЛистЗначение.КодНО)) <> 4 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Неправильно указан код налогового органа на доп.странице", "СведМО", "КодНО", ДопЛистЗначение.УИД));
		КонецЕсли;
		Если (ПрПост = "2" Или ПрПост = "3") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(ДопЛистЗначение, ТаблицаОшибок, "СведМО", "КПП", Истина);
		ИначеЕсли (ПрПост = "2" Или ПрПост = "3") Тогда
			УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(ДопЛистЗначение, ТаблицаОшибок, "СведМО", "КПП", Истина);
		КонецЕсли;
		Если ПрПост = "3" И Не ЗначениеЗаполнено(ДопЛистЗначение.ПрИзм) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан признак на доп.странице", "СведМО", "ПрИзм", ДопЛистЗначение.УИД));
		КонецЕсли;
		
		Если ПрПост = "3" Или ПрПост = "1" Тогда 
			ДопСтроки = Данные.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", ДопЛистЗначение.УИД));
			ИндДС = 0;
			Для Каждого ДопСтрока Из ДопСтроки Цикл 
				ИндДС = ИндДС + 1;
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКТМО(ДопСтрока, ТаблицаОшибок, "СведМО", "ОКТМО", Истина, ИндДС);
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	Возврат ТаблицаОшибок;
КонецФункции

Процедура Проверить_Форма2017_1(Данные, УникальныйИдентификатор)
КонецПроцедуры

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);;
	
	Данные = Объект.ДанныеУведомления.Получить();
	ОсновныеСведения.Вставить("КодНО", Данные.ДанныеУведомления.Титульная.КодНО);
	ОсновныеСведения.Вставить("ПрПодп", Данные.ДанныеУведомления.Титульная.ПрПодп);
	ОсновныеСведения.Вставить("ИННТитул", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ИННЮЛ", Данные.ДанныеУведомления.Титульная.ИННЮЛ);
	ОсновныеСведения.Вставить("ПрПост", Данные.ДанныеУведомления.Титульная.ПрПост);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления_Форма2017_1(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2017_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2017_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2017_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2017_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Процедура ПоложитьВОбласти(Макет, Данные)
	ЗначОбл = Неопределено;
	Для Каждого Обл Из Макет.Области Цикл 
		Если Обл.ТипОбласти = ТипОбластиЯчеекТабличногоДокумента.Прямоугольник И Обл.СодержитЗначение = Истина Тогда 
			Если Данные.Свойство(Обл.Имя, ЗначОбл) Тогда 
				Обл.Значение = ЗначОбл;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = Новый Структура();
	ИННКПП.Вставить("ИННЮЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ИННЮЛ);
	ИННКПП.Вставить("КПП", СтруктураПараметров.ДанныеУведомления.Титульная.КПП);
	
	НомСтр = 1;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_Титульная");
	ПоложитьВОбласти(МакетПФ, СтруктураПараметров.ДанныеУведомления.Титульная);
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	НомСтр = НомСтр + 1;
	
	ТекЧастьСведМО = 1;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_СведМО");
	ПоложитьВОбласти(МакетПФ, ИННКПП);
	Для Каждого Л1 Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СведМО Цикл 
		Если Не ЗначениеЗаполнено(Л1.Значение.КПП) Тогда 
			Прервать;
		КонецЕсли;
		
		Если ТекЧастьСведМО = 4 Тогда
			МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
			ПечатнаяФорма.Вывести(МакетПФ);
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_СведМО");
			ПоложитьВОбласти(МакетПФ, ИННКПП);
			НомСтр = НомСтр + 1;
			ТекЧастьСведМО = 1;
		КонецЕсли;
		
		МакетПФ.Области["КПП_"+ТекЧастьСведМО].Значение = Л1.Значение.КПП;
		МакетПФ.Области["КодНО_"+ТекЧастьСведМО].Значение = Л1.Значение.КодНО;
		МакетПФ.Области["ПрИзм_"+ТекЧастьСведМО].Значение = Л1.Значение.ПрИзм;
		
		ДопСтроки = СтруктураПараметров.ДанныеДопСтрокБД.МнгСтр.НайтиСтроки(Новый Структура("УИД", Л1.Значение.УИД));
		Инд = ДопСтроки.ВГраница();
		Пока Инд >= 0 Цикл 
			Если Не ЗначениеЗаполнено(ДопСтроки[Инд].ОКТМО) Тогда 
				ДопСтроки.Удалить(Инд);
			КонецЕсли;
			Инд = Инд - 1;
		КонецЦикла;
		
		ПорНомДопСтр = 1;
		Для Каждого Стр Из ДопСтроки Цикл
			Если ПорНомДопСтр = 11 Тогда
				ПорНомДопСтр = 1;
				ТекЧастьСведМО = ТекЧастьСведМО + 1;
				Если ТекЧастьСведМО = 4 Тогда
					МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
					ПечатнаяФорма.Вывести(МакетПФ);
					УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
					ТекЧастьСведМО = 1;
					МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2017_1_СведМО");
					ПоложитьВОбласти(МакетПФ, ИННКПП);
					НомСтр = НомСтр + 1;
				КонецЕсли;
				МакетПФ.Области["КПП_"+ТекЧастьСведМО].Значение = Л1.Значение.КПП;
				МакетПФ.Области["КодНО_"+ТекЧастьСведМО].Значение = Л1.Значение.КодНО;
				МакетПФ.Области["ПрИзм_"+ТекЧастьСведМО].Значение = Л1.Значение.ПрИзм;
			КонецЕсли;
			МакетПФ.Области["ОКТМО_"+ТекЧастьСведМО+"_"+ПорНомДопСтр].Значение = Стр.ОКТМО;
			ПорНомДопСтр = ПорНомДопСтр + 1;
		КонецЦикла;
		
		ТекЧастьСведМО = ТекЧастьСведМО + 1;
	КонецЦикла;
	
	МакетПФ.Области["НомСтр"].Значение = Формат(НомСтр, "ЧЦ=4; ЧВН=; ЧГ=");
	ПечатнаяФорма.Вывести(МакетПФ);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	Возврат Листы;
КонецФункции

#КонецОбласти
#КонецЕсли
