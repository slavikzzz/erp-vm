#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2016Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 14.10.2015 № ММВ-7-11/450@.";
	НоваяФорма.РедакцияФормы      = "от 14.10.2015 № ММВ-7-11/450@.";
	НоваяФорма.ДатаНачалоДействия = '20160101';
	НоваяФорма.ДатаКонецДействия  = '20171231';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2017Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 14.10.2015 № ММВ-7-11/450@ (в редакции приказа ФНС России от 17.01.2018 № ММВ-7-11/18@).";
	НоваяФорма.РедакцияФормы      = "от 17.01.2018 № ММВ-7-11/18@.";
	НоваяФорма.ДатаНачалоДействия = '20171001';
	НоваяФорма.ДатаКонецДействия  = '20201231';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета) Экспорт
	
	Возврат Неопределено;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма2016Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2015-10-14', "ММВ-7-11/450@", "ФормаОтчета2016Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма2016Кв1, "5.01");
	
	Форма2017Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1151099", '2018-01-17', "ММВ-7-11/18@", "ФормаОтчета2017Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма2017Кв4, "5.02");
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СформироватьАвтоматическиРеглОтчет(Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет = Ложь,
			ИмяФормыОтчета = Неопределено, ПараметрыАвтоФормирования = Неопределено) Экспорт
	
	Если ИмяФормыОтчета = "ФормаОтчета2016Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчет6НДФЛФормаОтчета2016Кв1(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2017Кв4" Тогда
		Возврат СформироватьАвтоматическиРеглОтчет6НДФЛФормаОтчета2017Кв4(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	КонецЕсли;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "", ИмяОбъекта = "",
			ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

#КонецОбласти

#Область ПроцедурыИФункцииАвтоФормированияФормы6НДФЛ

Функция СформироватьАвтоматическиРеглОтчет6НДФЛФормаОтчета2017Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел2",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002501",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010003001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010004001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010004501",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010005001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Добавить();
			
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020010001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020011001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020012001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020013001",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020014001",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел2.Добавить();
				
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1,  "П00001"));
	РазделыОтчета.Вставить("Раздел2",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел2,  "П00002"));
		
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ЗаполнитьРеглОтчет6НДФЛФормаОтчета2017Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП            = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.НалоговыйОрган = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	РазделыОтчета.Титульный.Данные.ОКТМО          = СокрЛП(ПараметрыАвтоФормирования.ОКТМО);
	
	Если НЕ РазделыОтчета.Титульный.Данные.Свойство("КодФормыРеорганизации") Тогда
		РазделыОтчета.Титульный.Данные.Вставить("КодФормыРеорганизации", "");
		РазделыОтчета.Титульный.Данные.Вставить("ИННРеорганизованнойОрганизации", "");
		РазделыОтчета.Титульный.Данные.Вставить("КППРеорганизованнойОрганизации", "");
	КонецЕсли;
	
	ТаблицаВариантыЗаполненияРаздел1 = Новый ТаблицаЗначений;
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("КодПоказателя",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("ВариантЗаполнения",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("ЗначениеАвто",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("Дельта",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("Комментарий",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("КодПоказателяПоСтруктуре",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	ТаблицаВариантыЗаполненияРаздел2 = Новый ТаблицаЗначений;
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("КодПоказателя",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("ВариантЗаполнения",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("ЗначениеАвто",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("Дельта",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("Комментарий",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("КодПоказателяПоСтруктуре",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
		
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблицаВариантыЗаполненияРаздел1);
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблицаВариантыЗаполненияРаздел2);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
		
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчет6НДФЛФормаОтчета2017Кв4(ДеревоСтраницОтчета);
	                                	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/10/2017");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Организация",   Организация);
	ДополнительныеПараметры.Вставить("ДатаНачала",    ДатаНачала);
	ДополнительныеПараметры.Вставить("ДатаОкончания", ДатаОкончания);
	
	Возврат ЗаписатьРеглОтчет6НДФЛФормаОтчета2017Кв4(ИмяФормыОтчета, РазделыОтчета, ДанныеРеглОтчета,
													 ПараметрыАвтоФормирования, ДополнительныеПараметры);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчет6НДФЛФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1",  Новый ТаблицаЗначений);
	ДанныеДопСтрок.Вставить("Раздел2",  Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(2, 0, ДопустимыйЗнак.Неотрицательный)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002501",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010003001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010004001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010004501",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010005001",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 0)));
	ДанныеДопСтрок.Раздел1.Добавить();
			
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020010001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020011001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020012001",
		Новый ОписаниеТипов("Дата", , , Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020013001",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел2.Колонки.Добавить("П000020014001",
		Новый ОписаниеТипов("Число",    Новый КвалификаторыЧисла(17, 2)));
	ДанныеДопСтрок.Раздел2.Добавить();
				
	РазделыОтчета = Новый Структура;
	РазделыОтчета.Вставить("Титульный",
		Новый Структура("МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	РазделыОтчета.Вставить("Раздел1",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1,  "П00001"));
	РазделыОтчета.Вставить("Раздел2",
		Новый Структура("МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел2,  "П00002"));
		
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ЗаполнитьРеглОтчет6НДФЛФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП            = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.НалоговыйОрган = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	РазделыОтчета.Титульный.Данные.ОКТМО          = СокрЛП(ПараметрыАвтоФормирования.ОКТМО);
			
	ТаблицаВариантыЗаполненияРаздел1 = Новый ТаблицаЗначений;
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("КодПоказателя",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("ВариантЗаполнения",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("ЗначениеАвто",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("Дельта",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("Комментарий",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаВариантыЗаполненияРаздел1.Колонки.Добавить("КодПоказателяПоСтруктуре",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	ТаблицаВариантыЗаполненияРаздел2 = Новый ТаблицаЗначений;
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("КодПоказателя",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("ВариантЗаполнения",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("ЗначениеАвто",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("Дельта",
	Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("Комментарий",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаВариантыЗаполненияРаздел2.Колонки.Добавить("КодПоказателяПоСтруктуре",
	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
		
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблицаВариантыЗаполненияРаздел1);
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблицаВариантыЗаполненияРаздел2);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
		
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчет6НДФЛФормаОтчета2016Кв1(ДеревоСтраницОтчета);
	                                	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИФНС", РазделыОтчета.Титульный.Данные.НалоговыйОрган);
	ДанныеРеглОтчета.Вставить("КПП", РазделыОтчета.Титульный.Данные.КПП);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/01/2016");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	ДополнительныеПараметры = Новый Структура();
	ДополнительныеПараметры.Вставить("Организация",   Организация);
	ДополнительныеПараметры.Вставить("ДатаНачала",    ДатаНачала);
	ДополнительныеПараметры.Вставить("ДатаОкончания", ДатаОкончания);
	
	Возврат ЗаписатьРеглОтчет6НДФЛФормаОтчета2016Кв1(ИмяФормыОтчета, РазделыОтчета, ДанныеРеглОтчета,
													 ПараметрыАвтоФормирования, ДополнительныеПараметры);
	
КонецФункции

Функция ЗаполнитьРеглОтчет6НДФЛФормаОтчета2017Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
			
	КПП   = ПараметрыАвтоФормирования.КПП;
	КодНО = ПараметрыАвтоФормирования.НалоговыйОрган;
	ОКТМО = ПараметрыАвтоФормирования.ОКТМО;
			
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
			
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
									
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан КПП.'",
											   СокрЛП(Организация.Наименование),
			                                   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
						
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. КПП указан некорректно.'",
											   СокрЛП(Организация.Наименование),
											   СокрЛП(КПП), СокрЛП(КодНО),	СокрЛП(ОКТМО))));
			
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
						
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан код налогового органа.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ СтрДлина(КодНО) = 4
		ИЛИ НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО) Тогда
				
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. код налогового органа указан некорректно.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОКТМО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан ОКТМО.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ СтрДлина(ОКТМО) = 11
		И НЕ СтрДлина(ОКТМО) = 8 Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. ОКТМО указан некорректно.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;

	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	ПараметрыОтбораРегистрацийВНО.Вставить("ОКТМО", ОКТМО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("НомерКорректировки",      ПараметрыАвтоФормирования.НомерКорректировки);
		ПараметрыОтчета.Вставить("ДатаПодписи",             ПараметрыАвтоФормирования.ДатаПодписи);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура();
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
		Контейнер.Вставить("Раздел1_ДанныеДопСтрок", РазделыОтчета.Раздел1.ДанныеДопСтрок);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел2_ДанныеДопСтрок", РазделыОтчета.Раздел2.ДанныеДопСтрок);
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет("РегламентированныйОтчет6НДФЛ", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
		
		НомСтр = 1;
		
		Для Каждого ДопСтрока Из РазделыОтчета.Раздел1.ДанныеДопСтрок Цикл
			
			Для Каждого Колонка Из РазделыОтчета.Раздел1.ДанныеДопСтрок.Колонки Цикл
				
				РазделыОтчета.Раздел1.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
				
			КонецЦикла;
			
			НомСтр = НомСтр + 1;
			
		КонецЦикла;
		
		НомСтр = 1;
		
		Для Каждого ДопСтрока Из РазделыОтчета.Раздел2.ДанныеДопСтрок Цикл
			
			Для Каждого Колонка Из РазделыОтчета.Раздел2.ДанныеДопСтрок.Колонки Цикл
				
				РазделыОтчета.Раздел2.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
				
			КонецЦикла;
			
			НомСтр = НомСтр + 1;
			
		КонецЦикла;
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета);
		
		Если РазделыОтчета.Раздел1.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел1.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		Если РазделыОтчета.Раздел2.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел2.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		// Расчет итого по строкам 130 и 140 раздела 2 (справочно).
		ИтогоСтр130 = 0;
		ИтогоСтр140 = 0;
		
		Ном = 1;
		Постфикс = "_1";
		
		ЕстьПокСтр130 = Истина;
		
		ЗначСтр130 = РазделыОтчета.Раздел2.Данные["П000020013001" + Постфикс];
		ЗначСтр140 = РазделыОтчета.Раздел2.Данные["П000020014001" + Постфикс];
		
		Пока ЕстьПокСтр130 Цикл
			
			ИтогоСтр130 = ИтогоСтр130 + ЗначСтр130;
			ИтогоСтр140 = ИтогоСтр140 + ЗначСтр140;
			
			Ном = Ном + 1;
			Постфикс = "_" + Формат(Ном, "ЧГ=");
			
			ЕстьПокСтр130 = РазделыОтчета.Раздел2.Данные.Свойство("П000020013001" + Постфикс);
			
			Если ЕстьПокСтр130 Тогда
				
				ЗначСтр130 = РазделыОтчета.Раздел2.Данные["П000020013001" + Постфикс];
				ЗначСтр140 = РазделыОтчета.Раздел2.Данные["П000020014001" + Постфикс];
				
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел2.Данные.Вставить("П000020013002", ИтогоСтр130);
		РазделыОтчета.Раздел2.Данные.Вставить("П000020014002", ИтогоСтр140);
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО),	СокрЛП(ОКТМО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции

Функция ЗаполнитьРеглОтчет6НДФЛФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
			
	КПП   = ПараметрыАвтоФормирования.КПП;
	КодНО = ПараметрыАвтоФормирования.НалоговыйОрган;
	ОКТМО = ПараметрыАвтоФормирования.ОКТМО;
			
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
			
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
									
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан КПП.'",
											   СокрЛП(Организация.Наименование),
			                                   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
						
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
											   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. КПП указан некорректно.'",
											   СокрЛП(Организация.Наименование),
											   СокрЛП(КПП), СокрЛП(КодНО),	СокрЛП(ОКТМО))));
			
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
						
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан код налогового органа.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ СтрДлина(КодНО) = 4
		ИЛИ НЕ СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО) Тогда
				
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. код налогового органа указан некорректно.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(ОКТМО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не указан ОКТМО.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ СтрДлина(ОКТМО) = 11
		И НЕ СтрДлина(ОКТМО) = 8 Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. ОКТМО указан некорректно.'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО), СокрЛП(ОКТМО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;

	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	ПараметрыОтбораРегистрацийВНО.Вставить("ОКТМО", ОКТМО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("НомерКорректировки",      ПараметрыАвтоФормирования.НомерКорректировки);
		ПараметрыОтчета.Вставить("ДатаПодписи",             ПараметрыАвтоФормирования.ДатаПодписи);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура();
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел1",   РазделыОтчета.Раздел1.Данные);
		Контейнер.Вставить("Раздел1_ДанныеДопСтрок", РазделыОтчета.Раздел1.ДанныеДопСтрок);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел2_ДанныеДопСтрок", РазделыОтчета.Раздел2.ДанныеДопСтрок);
		
		РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет("РегламентированныйОтчет6НДФЛ", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
		
		НомСтр = 1;
		
		Для Каждого ДопСтрока Из РазделыОтчета.Раздел1.ДанныеДопСтрок Цикл
			
			Для Каждого Колонка Из РазделыОтчета.Раздел1.ДанныеДопСтрок.Колонки Цикл
				
				РазделыОтчета.Раздел1.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
				
			КонецЦикла;
			
			НомСтр = НомСтр + 1;
			
		КонецЦикла;
		
		НомСтр = 1;
		
		Для Каждого ДопСтрока Из РазделыОтчета.Раздел2.ДанныеДопСтрок Цикл
			
			Для Каждого Колонка Из РазделыОтчета.Раздел2.ДанныеДопСтрок.Колонки Цикл
				
				РазделыОтчета.Раздел2.Данные.Вставить(Колонка.Имя + "_" + НомСтр, ДопСтрока[Колонка.Имя]);
				
			КонецЦикла;
			
			НомСтр = НомСтр + 1;
			
		КонецЦикла;
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета);
		
		Если РазделыОтчета.Раздел1.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел1.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		Если РазделыОтчета.Раздел2.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел2.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		// Расчет итого по строкам 130 и 140 раздела 2 (справочно).
		ИтогоСтр130 = 0;
		ИтогоСтр140 = 0;
		
		Ном = 1;
		Постфикс = "_1";
		
		ЕстьПокСтр130 = Истина;
		
		ЗначСтр130 = РазделыОтчета.Раздел2.Данные["П000020013001" + Постфикс];
		ЗначСтр140 = РазделыОтчета.Раздел2.Данные["П000020014001" + Постфикс];
		
		Пока ЕстьПокСтр130 Цикл
			
			ИтогоСтр130 = ИтогоСтр130 + ЗначСтр130;
			ИтогоСтр140 = ИтогоСтр140 + ЗначСтр140;
			
			Ном = Ном + 1;
			Постфикс = "_" + Формат(Ном, "ЧГ=");
			
			ЕстьПокСтр130 = РазделыОтчета.Раздел2.Данные.Свойство("П000020013001" + Постфикс);
			
			Если ЕстьПокСтр130 Тогда
				
				ЗначСтр130 = РазделыОтчета.Раздел2.Данные["П000020013001" + Постфикс];
				ЗначСтр140 = РазделыОтчета.Раздел2.Данные["П000020014001" + Постфикс];
				
			КонецЕсли;
			
		КонецЦикла;
		
		РазделыОтчета.Раздел2.Данные.Вставить("П000020013002", ИтогоСтр130);
		РазделыОтчета.Раздел2.Данные.Вставить("П000020014002", ИтогоСтр140);
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
										   "ru='Форма 6-НДФЛ (Организация: %1, КПП: %2, код ИФНС: %3, ОКТМО: %4) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
										   СокрЛП(Организация.Наименование),
										   СокрЛП(КПП), СокрЛП(КодНО),	СокрЛП(ОКТМО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
		
КонецФункции

Процедура СохранитьДанныеРазделаРеглОтчет6НДФЛФормаОтчета2017Кв4(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	Если НаимРаздела = "Раздел1" ИЛИ НаимРаздела = "Раздел2" Тогда
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
	Иначе
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
	КонецЕсли;
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчет6НДФЛФормаОтчета2016Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета)
	Если НаимРаздела = "Раздел1" ИЛИ НаимРаздела = "Раздел2" Тогда
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
	Иначе
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
	КонецЕсли;
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчет6НДФЛФормаОтчета2017Кв4(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
		                                                   	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
			
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчет6НДФЛФормаОтчета2016Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
		                                                   	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
			
КонецПроцедуры

Функция ЗаписатьРеглОтчет6НДФЛФормаОтчета2017Кв4(ИмяФормыОтчета, РазделыОтчета, ДанныеРеглОтчета,
												 ПараметрыАвтоФормирования, ДополнительныеПараметры)
	
	Организация   = ДополнительныеПараметры.Организация;
	ДатаНачала    = ДополнительныеПараметры.ДатаНачала;
	ДатаОкончания = ДополнительныеПараметры.ДатаОкончания;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчет6НДФЛ";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "6-НДФЛ";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 31;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 33;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 34;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
		
	ЗаполнитьСведенияОбОрганизацииРеглОтчет6НДФЛФормаОтчета2017Кв4(
	Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания, ПараметрыАвтоФормирования);
		
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);

	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	Возврат ДокументРегламентированныйОтчет.Ссылка;
КонецФункции

Функция ЗаписатьРеглОтчет6НДФЛФормаОтчета2016Кв1(ИмяФормыОтчета, РазделыОтчета, ДанныеРеглОтчета,
												 ПараметрыАвтоФормирования, ДополнительныеПараметры)
	
	Организация   = ДополнительныеПараметры.Организация;
	ДатаНачала    = ДополнительныеПараметры.ДатаНачала;
	ДатаОкончания = ДополнительныеПараметры.ДатаОкончания;
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчет6НДФЛ";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "6-НДФЛ";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИФНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 31;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 33;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 34;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
		
	ЗаполнитьСведенияОбОрганизацииРеглОтчет6НДФЛФормаОтчета2016Кв1(
	Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания, ПараметрыАвтоФормирования);
		
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);

	ДанныеМногострочныхРазделов = Новый Структура;
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
		КонецЕсли;
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	Возврат ДокументРегламентированныйОтчет.Ссылка;
КонецФункции

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчет6НДФЛФормаОтчета2017Кв4(Организация, РазделыОтчета, ДатаПодписи,
	ДатаОкончания, ПараметрыАвтоФормирования)
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Если ПБОЮЛ Тогда
		РазделыОтчета.Титульный.Данные.ПоМесту = "120";
	Иначе
		Если Организация = РегламентированнаяОтчетность.ГоловнаяОрганизация(Организация) Тогда
			
			СтруктураПараметров = Новый Структура("Организация, ДатаЗначения", Организация, ДатаПодписи);
			
			РазделыОтчета.Титульный.Данные.ПоМесту
			= ?(РегламентированнаяОтчетность.ОрганизацияЯвляетсяКрупнейшимНалогоплательщиком(СтруктураПараметров),
			"213", "214");
			
			РегистрацияВНалоговомОрганеВладелец = ПараметрыАвтоФормирования.РегистрацияВНалоговомОргане.Владелец;
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОрганеВладелец) Тогда
				
				РегистрацияВНалоговомОрганеВладелецЭтоСправочникСсылка
				= Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(РегистрацияВНалоговомОрганеВладелец));
				
				Если РегистрацияВНалоговомОрганеВладелецЭтоСправочникСсылка Тогда
					
					РегистрацияВНалоговомОрганеВладелецЕстьРеквизитРегистрацияВНалоговомОргане
					= РегистрацияВНалоговомОрганеВладелец.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено;
					
					Если РегистрацияВНалоговомОрганеВладелец.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане")
						<> Неопределено И ТипЗнч(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОрганеВладелец,
						"РегистрацияВНалоговомОргане")) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане")
						И РегистрацияВНалоговомОрганеВладелец.РегистрацияВНалоговомОргане
						<> ПараметрыАвтоФормирования.РегистрацияВНалоговомОргане Тогда
						
						РазделыОтчета.Титульный.Данные.ПоМесту = "220";
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			РазделыОтчета.Титульный.Данные.ПоМесту = "220";
		КонецЕсли;
	КонецЕсли;
	
	СтрокаСведений = "ИННЮЛ, НаимЮЛПол, НаимЮЛСокр, НаимНО, ТипНП, ТелОрганизации, ФИО";
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, СтрокаСведений);
	РазделыОтчета.Титульный.Данные.ИНН = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
	
	Если ПБОЮЛ Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		Если ЗначениеЗаполнено(СведенияОбОрганизации.НаимЮЛСокр) Тогда
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮЛСокр);
		Иначе
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
		КонецЕсли;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НаимОрг = НаименованиеОрганизации;
	РазделыОтчета.Титульный.Данные.ТелОрганизации = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчет6НДФЛФормаОтчета2016Кв1(Организация, РазделыОтчета, ДатаПодписи,
	ДатаОкончания, ПараметрыАвтоФормирования)
	
	ПБОЮЛ = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	Если ПБОЮЛ Тогда
		
		РазделыОтчета.Титульный.Данные.ПоМесту = "120";
		
	Иначе
		
		Если Организация = РегламентированнаяОтчетность.ГоловнаяОрганизация(Организация) Тогда
			
			СтруктураПараметров = Новый Структура("Организация, ДатаЗначения", Организация, ДатаПодписи);
			
			РазделыОтчета.Титульный.Данные.ПоМесту
			= ?(РегламентированнаяОтчетность.ОрганизацияЯвляетсяКрупнейшимНалогоплательщиком(СтруктураПараметров),
			"213", "212");
			
			РегистрацияВНалоговомОрганеВладелец = ПараметрыАвтоФормирования.РегистрацияВНалоговомОргане.Владелец;
			
			Если ЗначениеЗаполнено(РегистрацияВНалоговомОрганеВладелец) Тогда
				
				РегистрацияВНалоговомОрганеВладелецЭтоСправочникСсылка
				= Справочники.ТипВсеСсылки().СодержитТип(ТипЗнч(РегистрацияВНалоговомОрганеВладелец));
				
				Если РегистрацияВНалоговомОрганеВладелецЭтоСправочникСсылка Тогда
					
					РегистрацияВНалоговомОрганеВладелецЕстьРеквизитРегистрацияВНалоговомОргане
					= РегистрацияВНалоговомОрганеВладелец.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане") <> Неопределено;
					
					Если РегистрацияВНалоговомОрганеВладелец.Метаданные().Реквизиты.Найти("РегистрацияВНалоговомОргане")
						<> Неопределено И ТипЗнч(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(РегистрацияВНалоговомОрганеВладелец,
						"РегистрацияВНалоговомОргане")) = Тип("СправочникСсылка.РегистрацииВНалоговомОргане")
						И РегистрацияВНалоговомОрганеВладелец.РегистрацияВНалоговомОргане
						<> ПараметрыАвтоФормирования.РегистрацияВНалоговомОргане Тогда
						
						РазделыОтчета.Титульный.Данные.ПоМесту = "220";
						
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		Иначе
			
			РазделыОтчета.Титульный.Данные.ПоМесту = "220";
			
		КонецЕсли;
		
	КонецЕсли;
	
	СтрокаСведений = "ИННЮЛ, НаимЮЛПол, НаимЮЛСокр, НаимНО, ТипНП, ТелОрганизации, ФИО";
	
	СведенияОбОрганизации = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Организация, ДатаПодписи, СтрокаСведений);
	
	РазделыОтчета.Титульный.Данные.ИНН = СокрЛП(СведенияОбОрганизации.ИННЮЛ);
			
	Если ПБОЮЛ Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		Если ЗначениеЗаполнено(СведенияОбОрганизации.НаимЮЛСокр) Тогда
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮЛСокр);
		Иначе
			НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
		КонецЕсли;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НаимОрг = НаименованиеОрганизации;
	РазделыОтчета.Титульный.Данные.ТелОрганизации = СокрЛП(СведенияОбОрганизации.ТелОрганизации);
			
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(Организация, РазделыОтчета, ДатаПодписи);
	
КонецПроцедуры

Процедура ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры = Неопределено)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если (НЕ Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные.Количество() = 0)
		   ИЛИ (Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные[0].Данные.Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(Отчеты["РегламентированныйОтчет6НДФЛ"].ПолучитьМакет(ИмяФормыОтчета + "_" + Раздел.Ключ));
			
			Если ИмяФормыОтчета = "ФормаОтчета2016Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчет6НДФЛФормаОтчета2016Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2017Кв4" Тогда
				СохранитьДанныеРазделаРеглОтчет6НДФЛФормаОтчета2017Кв4(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета);
			КонецЕсли;
			
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли