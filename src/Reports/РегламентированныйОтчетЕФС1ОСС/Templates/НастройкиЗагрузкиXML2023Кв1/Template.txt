// Область "Настройки" описывает параметры инициализации механизма загрузки
// регламентированных отчетов из файлов выгрузки. Формат области настроек - JSON.
//
// Описание параметров:
//  * Установкой параметра "РазрешитьЗагрузку" в "true" или "false" регулируем видимость
//    кнопки "Загрузить" и возможность загрузки из файла в форме отчета.
//  * Параметр "ФорматыСхемВыгрузки" описывает соответствие имен макетов схем выгрузки
//    поддерживаемым форматам загрузки. Если у формы едиственная схема выгрузки или
//    нужно всегда использовать схему по умолчанию - указываем значение "null".
//  * Параметр "ОбластиОбработчиков" содержит список имен используемых обработчиков
//    загружаемых данных. Имена соответствуют областям макета, в которых можно размещать
//    произвольные алгоритмы на языке "1С:Предприятие" для обработки доступных объектов.
//
// Примечание:
//  Сопоставление имен узлов из файла XML и имен показателей отчета выполняется по данным схемы выгрузки,
//  поэтому обработчики используются для получения значений показателей не описанных в схеме выгрузки.
//
#Область Настройки
{
	"РазрешитьЗагрузку"   : true,
	
	"ФорматыСхемВыгрузки" : null,
	"ОбластиОбработчиков" : {
		"ПередЗагрузкой"  : "ПредОбработкаСхемыЗагрузки",
		"ПослеЗагрузки"   : "ПостОбработкаДокументаОтчета",
	}
}
#КонецОбласти

// Доступны параметры:
//
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПредОбработкаСхемыЗагрузки
	
	ДобавитьКолонкуВДеревоЕслиНеНайдена(П.ДеревоДляЗагрузки, "МнУр"); // для определения многоуровневых разделов
	НайденныйУзел = УзлыПоXPath(П.ДеревоДляЗагрузки, "//ЕФС-1/ОСС")[0];
	НайденныйУзел.МнУр = Истина;
	НайденныеУзлыИерархия = УзлыПоXPath(НайденныйУзел, "//node()"); // вся иерархия подчиненных узлов любого типа
	Для Каждого ТекущийУзел Из НайденныеУзлыИерархия Цикл
		Если ПустаяСтрока(ТекущийУзел.Раздел) Тогда
			Продолжить;
		КонецЕсли;
		ТекущийУзел.МнУр = Истина;
	КонецЦикла;
	
#КонецОбласти

// Доступны параметры:
//
//  П.ДанныеОтчета      - заполненные данные документа регламентированного отчета;
//  П.ДеревоДляЗагрузки - выбранное дерево схемы загрузки, не заполненное данными;
//  П.ПараметрыОтчета   - параметры, сформированные в форме отчета, используются для выгрузки.
//
#Область ПостОбработкаДокументаОтчета
	
	Титульный = Неопределено;
	
	П.ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаТитульный", Титульный);
	Если Титульный <> Неопределено Тогда
		
		Титульный.Предст_РегНомер = П.ПараметрыОтчета.Предст_РегНомер;
		Титульный.Предст_НаимОрг  = П.ПараметрыОтчета.Предст_НаимОрг;
		Титульный.Предст_ИНН      = П.ПараметрыОтчета.Предст_ИНН;
		
		П.ПараметрыОтчета.Свойство("Предст_КПП",     Титульный.Предст_КПП);
		П.ПараметрыОтчета.Свойство("Предст_ОКФС",    Титульный.Предст_ОКФС);
		П.ПараметрыОтчета.Свойство("Предст_ОКОГУ",   Титульный.Предст_ОКОГУ);
		П.ПараметрыОтчета.Свойство("Предст_ОКПО",    Титульный.Предст_ОКПО);
		П.ПараметрыОтчета.Свойство("Предст_ОКВЭД",   Титульный.Предст_ОКВЭД);
		П.ПараметрыОтчета.Свойство("Предст_ОГРН",    Титульный.Предст_ОГРН);
		П.ПараметрыОтчета.Свойство("Предст_Телефон", Титульный.Предст_Телефон);
		П.ПараметрыОтчета.Свойство("Предст_ЭлПочта", Титульный.Предст_ЭлПочта);
		
		Титульный.РегНомер = П.ПараметрыОтчета.РегНомер;
		Титульный.НаимОрг  = П.ПараметрыОтчета.НаимОрг;
		Титульный.ИНН      = П.ПараметрыОтчета.ИНН;
		
		П.ПараметрыОтчета.Свойство("КПП",     Титульный.КПП);
		П.ПараметрыОтчета.Свойство("ОКФС",    Титульный.ОКФС);
		П.ПараметрыОтчета.Свойство("ОКОГУ",   Титульный.ОКОГУ);
		П.ПараметрыОтчета.Свойство("ОКПО",    Титульный.ОКПО);
		П.ПараметрыОтчета.Свойство("ОКВЭД",   Титульный.ОКВЭД);
		П.ПараметрыОтчета.Свойство("ОГРН",    Титульный.ОГРН);
		П.ПараметрыОтчета.Свойство("Телефон", Титульный.Телефон);
		П.ПараметрыОтчета.Свойство("ЭлПочта", Титульный.ЭлПочта);
	
		Если ЗначениеЗаполнено(П.ПараметрыОтчета.Предст_РегНомер)
		   И ЗначениеЗаполнено(П.ПараметрыОтчета.Предст_НаимОрг)
		   И НЕ ЗначениеЗаполнено(П.ПараметрыОтчета.РегНомер) Тогда
			Титульный.ПризнакСтрахователя = "V";
		Иначе
			Титульный.ПризнакСтрахователя = "";
		КонецЕсли;
		
		П.ПараметрыОтчета.Свойство("Рук_Фамилия",   Титульный.Рук_Фамилия);
		П.ПараметрыОтчета.Свойство("Рук_Имя",       Титульный.Рук_Имя);
		П.ПараметрыОтчета.Свойство("Рук_Отчество",  Титульный.Рук_Отчество);
		П.ПараметрыОтчета.Свойство("Рук_Должность", Титульный.Рук_Должность);
		П.ПараметрыОтчета.Свойство("Предст_ОКВЭД",  Титульный.Предст_ОКВЭД);
		
		П.ПараметрыОтчета.Свойство("ПрекращениеДеятельности", Титульный.ПрекращениеДеятельности);
		Титульный.ОтчетГод = П.ПараметрыОтчета.ОтчетГод;
		//Титульный.Период   = П.ПараметрыОтчета.Период;
		
		ЧастиИмениФайлаВыгрузки = СтрРазделить(П.ПараметрыОтчета.ИмяФайлаВыгрузки, "_");
		Если ЧастиИмениФайлаВыгрузки.Количество() >= 4 И ВРег(ЧастиИмениФайлаВыгрузки[3]) = "ЕФС-1" Тогда
			Титульный.КодОргана = ЧастиИмениФайлаВыгрузки[2];
		КонецЕсли;
		
	КонецЕсли;
	
#КонецОбласти