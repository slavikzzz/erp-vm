#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ПолучитьПараметрыИсполненияОтчета() Экспорт
	
	Структура = Новый Структура;
	Структура.Вставить("ИспользоватьПриВыводеЗаголовка",     Истина);
	Структура.Вставить("ИспользоватьДанныеРасшифровки",      Ложь);
	Структура.Вставить("ИспользоватьВнешниеНаборыДанных",    Истина);
	Структура.Вставить("ИспользоватьПривилегированныйРежим", Ложь);
	Возврат Структура;

КонецФункции

Функция ПолучитьВнешниеНаборыДанных(ПараметрыОтчета, МакетКомпоновки) Экспорт
	
	КлючСтруктуры 			= "ВнешнийНаборДанных" + Сред(ПараметрыОтчета.КоллекцияНастроек["ИдентификаторМакета"],12);
	ТребуемыйНаборДанных 	= ПараметрыОтчета.СтруктураВнешнихНаборов[КлючСтруктуры];
	
	Возврат ТребуемыйНаборДанных;
	
КонецФункции				

Функция ПолучитьТекстЗаголовка(ПараметрыОтчета, ОрганизацияВНачале = Истина) Экспорт 
	
	ЗаголовокОтчета = БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	
	Если ЗначениеЗаполнено(ПараметрыОтчета.ОрганизацияРасшифровки) Тогда		
		ЗаголовокОтчета = ЗаголовокОтчета + " " 
						+ БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(ПараметрыОтчета.ОрганизацияРасшифровки, Ложь);
	КонецЕсли;
	
	Возврат ЗаголовокОтчета;
	
КонецФункции	

Процедура ПриВыводеЗаголовка(ПараметрыОтчета, КомпоновщикНастроек, Результат) Экспорт 
	
	ИдентификаторМакета = ПараметрыОтчета.КоллекцияНастроек["ИдентификаторМакета"];
	Если ИдентификаторМакета = "РасшифровкаНачислениеРеализация" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по реализации';
								|en = 'Sale accruals '");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеАвансыПолученные" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по авансам полученным';
								|en = 'Accruals by received advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеИсполнениеОНА"  Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления при исполнении обязанностей налогового агента';
								|en = 'Accruals when acting as a tax agent'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеСВыданныхАвансов" Тогда
		ТекстЗаголовок = Нстр("ru = 'Восстановление с авансов выданных';
								|en = 'Restore from issued advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеСМРХозСпособом"  Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления при выполнении строительно-монтажных работ хоз. способом';
								|en = 'Accruals while executing construction and installation works independently'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПриобретенныеЦенности" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет по приобретенным ценностям';
								|en = 'Acquired asset deduction'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетИсполнениеОНА" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет при исполнении обязанностей налогового агента';
								|en = 'Deduction when performing duties of a tax agent'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовПолученных" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет с авансов полученных';
								|en = 'Deduction from received advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовВыданных" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет с авансов выданных';
								|en = 'Deduction from issued advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеРеализацияУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по реализации';
								|en = 'Sale accruals '");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеАвансыПолученныеУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по авансам полученным';
								|en = 'Accruals by received advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Восстановление с авансов выданных';
								|en = 'Restore from issued advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеДругиеОперацииУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по прочим операциям';
								|en = 'Accruals on other transactions'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПоПриобретеннымЦенностямУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет по приобретенным ценностям';
								|en = 'Acquired asset deduction'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетАвансыВыданныеУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет с авансов выданных';
								|en = 'Deduction from issued advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетСАвансовПолученныхУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет с авансов полученных';
								|en = 'Deduction from received advances'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетДругиеОперацииУпрощенныйУчетНДС" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет по прочим операциям';
								|en = 'Other transaction deduction'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетПоПриобретеннымЦенностям0" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет по приобретенным ценностям, реализованным по ставке 0%';
								|en = 'Deduction of acquired assets sold at a rate of 0%'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаВычетИсполнениеОНА0" Тогда
		ТекстЗаголовок = Нстр("ru = 'Вычет при исполнении обязанностей налогового агента при реализации по ставке 0%';
								|en = 'Deduction when performing duties of a tax agent on sale at a rate of 0%'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеРеализация0" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления по реализации по ставке 0%';
								|en = 'Sale accruals at a rate of 0%'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеВосстановлениеДругиеОперации" Тогда
		ТекстЗаголовок = Нстр("ru = 'Восстановление НДС по прочим операциям';
								|en = 'Restore VAT of other transactions'");
	ИначеЕсли ИдентификаторМакета = "РасшифровкаНачислениеНеОтражаетсяВКнигеПродаж" Тогда
		ТекстЗаголовок = Нстр("ru = 'Начисления, не отражающиеся в книге продаж';
								|en = 'Accruals not recorded in the sales ledger'");
	Иначе 
		ТекстЗаголовок = Нстр("ru = 'Не задан заголовок';
								|en = 'Title is not specified'");
	КонецЕсли;	
	
КонецПроцедуры

Процедура СформироватьКарту(Знач ПараметрыОтчета, АдресХранилища) Экспорт	
	
	Запрос         = ПолучитьПараметрыЗапроса(ПараметрыОтчета);
	РезультатСхема = ПолучитьМакет("УчетНДС");
	ЭлементыСхемы  = РезультатСхема.ЭлементыГрафическойСхемы;
	
	УстановитьПривилегированныйРежим(Истина); 
	
	//	Получение необходимых наборов
	
	//	1 - НДС НАЧИСЛЕННЫЙ
	
	//	1.1 - Начисления по реализации
	НачислениеРеализация = ПолучитьНаборДанныхНачислениеРеализацияСложныйУчетНДС(Запрос); 
	//	1.2 - Авансы полученные
	НачислениеАвансыПолученные = ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос); 
	//	1.3 - Начисления при исполнении обязанностей налогового агента
	НачислениеИсполнениеОНА = ПолучитьНаборДанныхНачислениеНалоговыйАгент(Запрос);
	//	1.4 - Восстановление (начисление) по ранее выданным авансам
	НачислениеВосстановлениеСАвансовВыданных = ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос);
	//	1.5 - Начисления при выполнении СМР хоз. способом
	НачислениеСМРХозСпособом = ПолучитьНаборДанныхНачислениеСМРХозСпособом(Запрос);
	//	1.6 - Начисления по реализации по ставке 0%
	НачислениеРеализация0 = ПолучитьНаборДанныхНачислениеРеализация0(Запрос);
	//	1.7 - Восстановление по другим операциям
	НачислениеВосстановлениеДругиеОперации = ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации(Запрос);
	
	//	2 - НДС ВЫЧЕТЫ
	
	//	2.1 - Вычет по приобретенным ценностям
	ВычетПоПриобретеннымЦенностям = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям(Запрос);
	//	2.2 - Вычет при исполнении обязанностей налогового агента
	ВычетИсполнениеОНА = ПолучитьНаборДанныхВычетНалоговыйАгент(Запрос);
	//	2.3 - Вычет с авансов полученных (восстановление)
	ВычетСАвансовПолученных = ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос);
	//	2.4 - Вычет с авансов выданных
	ВычетСАвансовВыданных   = ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос);
	//	2.5 - Вычет по приобретенным ценностям по ставке 0%
	ВычетПоПриобретеннымЦенностям0 = ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0(Запрос);
	//	2.6 - Вычет при исполнении обязанностей налогого агента по ставке 0%
	ВычетИсполнениеОНА0 = ПолучитьНаборДанныхВычетНалоговыйАгент0(Запрос);
	//	Итоги
	
	СуммаВсехНачислений = НачислениеРеализация.Включенные
						+ НачислениеАвансыПолученные.Включенные
						+ НачислениеИсполнениеОНА.Включенные
						+ НачислениеВосстановлениеСАвансовВыданных.Включенные
						+ НачислениеСМРХозСпособом.Включенные
						+ НачислениеРеализация0.Включенные
						+ НачислениеВосстановлениеДругиеОперации.Включенные;
	
	СуммаВсехВычетов    = ВычетПоПриобретеннымЦенностям.Включенные
						+ ВычетИсполнениеОНА.Включенные
						+ ВычетСАвансовПолученных.Включенные
						+ ВычетСАвансовВыданных.Включенные
						+ ВычетПоПриобретеннымЦенностям0.Включенные
						+ ВычетИсполнениеОНА0.Включенные;

	//	Вывод параметров на карту
	
	//	1.1 Начисления по реализации
	ЭлементыСхемы.НачислениеРеализацияВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация.Включенные,
		НачислениеРеализация.ИмеютсяЗаписи);
	
	//	1.2 Авансы полученные
	ЭлементыСхемы.АвансыПолученныеВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.Включенные,
		НачислениеАвансыПолученные.ИмеютсяЗаписи);
	ЭлементыСхемы.АвансыПолученныеНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеАвансыПолученные.НеВключенные,
		НачислениеАвансыПолученные.ИмеютсяЗаписи);
	
	//	1.4 Восстановление (начисление) по ранее выданным авансам
	ЭлементыСхемы.НачисленияВосстановлениеПоАвансамВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.Включенные,
		НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
	ЭлементыСхемы.НачисленияВосстановлениеПоАвансамНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеСАвансовВыданных.НеВключенные,
		НачислениеВосстановлениеСАвансовВыданных.ИмеютсяЗаписи);
		
	//	1.3 Начисления при исполнении обязанностей налогового агента
	ЭлементыСхемы.НачисленияИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.Включенные,
		НачислениеИсполнениеОНА.ИмеютсяЗаписи);
	ЭлементыСхемы.НачисленияИсполнениеОНАНеВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеИсполнениеОНА.НеВключенные,
		НачислениеИсполнениеОНА.ИмеютсяЗаписи);
	
	//	1.5 Начисление НДС при строительно-монтажных работах хоз. способом
	ЭлементыСхемы.НачислениеСМРХозСпособомВключенные.Наименование = ПодготовитьПоказательКВыводу(НачислениеСМРХозСпособом.Включенные,
		НачислениеСМРХозСпособом.ИмеютсяЗаписи);
	
	//	1.6 Начисления по реализации под 0%
	ЭлементыСхемы.НачислениеРеализация0Включенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеРеализация0.Включенные,
		НачислениеРеализация0.ИмеютсяЗаписи);
		
	//	1.7. Начисление по восстановлению НДС по прочим операциям
	ЭлементыСхемы.НачислениеВосстановлениеДругиеОперацииВключенные.Наименование   = ПодготовитьПоказательКВыводу(НачислениеВосстановлениеДругиеОперации.Включенные,
		НачислениеВосстановлениеДругиеОперации.ИмеютсяЗаписи);
	
	//	Операции, не отражающиеся в книге продаж
	
	// 2.1 Вычет НДС по приобретенным ценностям
	ЭлементыСхемы.ВычетПриобретенныеЦенностиВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.Включенные,
		ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
	ЭлементыСхемы.ВычетПриобретенныеЦенностиНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям.НеВключенные,
		ВычетПоПриобретеннымЦенностям.ИмеютсяЗаписи);
	//
	// 2.4 Вычет с авансов выданных
	ЭлементыСхемы.ВычетСАвансовВыданныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.Включенные,
		ВычетСАвансовВыданных.ИмеютсяЗаписи);
	ЭлементыСхемы.ВычетСАвансовВыданныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовВыданных.НеВключенные,
		ВычетСАвансовВыданных.ИмеютсяЗаписи);
	
	// 2.3 Вычет с авансов полученных (восстановление)
	ЭлементыСхемы.ВычетСАвансовПолученныхВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.Включенные,
		ВычетСАвансовПолученных.ИмеютсяЗаписи);
	ЭлементыСхемы.ВычетСАвансовПолученныхНеВключенные.Наименование = ПодготовитьПоказательКВыводу(ВычетСАвансовПолученных.НеВключенные,
		ВычетСАвансовПолученных.ИмеютсяЗаписи);
	
	// 2.2 Вычет при исполнении обязанностей налогового агента
	ЭлементыСхемы.ВычетИсполнениеОНАВключенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА.Включенные,
		ВычетИсполнениеОНА.ИмеютсяЗаписи);
		
	// 2.5 Вычет по приобретенным ценностям, реализованным по ставке 0%
	ЭлементыСхемы.ВычетПриобретенныеЦенности0Включенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетПоПриобретеннымЦенностям0.Включенные,
		ВычетПоПриобретеннымЦенностям0.ИмеютсяЗаписи);
		
	// 2.6 Вычет при исполнении ОНА под 0%
	ЭлементыСхемы.ВычетИсполнениеОНА0Включенные.Наименование   = ПодготовитьПоказательКВыводу(ВычетИсполнениеОНА0.Включенные,
		ВычетИсполнениеОНА0.ИмеютсяЗаписи);
	
	Если СуммаВсехВычетов > СуммаВсехНачислений Тогда
		ЭлементыСхемы.НалоговаяБаза.Наименование = НСтр("ru = 'НДС к возмещению';
														|en = 'VAT recoverable'");
		ЭлементыСхемы.База.Наименование          = Формат(СуммаВсехВычетов - СуммаВсехНачислений, "ЧДЦ=2");
	Иначе
		ЭлементыСхемы.НалоговаяБаза.Наименование = НСтр("ru = 'НДС к уплате';
														|en = 'VAT payable'");
		ЭлементыСхемы.База.Наименование          = Формат(СуммаВсехНачислений - СуммаВсехВычетов, "ЧДЦ=2");
	КонецЕсли;
		
	ЭлементыСхемы.Вычеты.Наименование     = Формат(СуммаВсехВычетов, "ЧДЦ=2");
	ЭлементыСхемы.Начисления.Наименование = Формат(СуммаВсехНачислений, "ЧДЦ=2");
	
	КоллекцияНастроек = ПараметрыОтчета.КоллекцияНастроек;
	
	//	Добавим описание сформированных данных
	ТекстОписаниярасшифровок = БухгалтерскиеОтчетыВызовСервера.ПолучитьТекстОрганизация(
		ПараметрыОтчета.Организация, ПараметрыОтчета.ВключатьОбособленныеПодразделения) + ", "
		+ БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(ПараметрыОтчета.НачалоПериода, ПараметрыОтчета.КонецПериода);
	КоллекцияНастроек.Вставить("ТекстОписаниярасшифровок",          ТекстОписаниярасшифровок);
	КоллекцияНастроек.Вставить("ВключатьОбособленныеПодразделения", ПараметрыОтчета.ВключатьОбособленныеПодразделения);
	
	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("КоллекцияНастроек"      , КоллекцияНастроек);
	РезультатВыполнения.Вставить("РезультатСхема"         , РезультатСхема);
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
	
КонецПроцедуры

Процедура СформироватьРасшифровку(Знач ПараметрыОтчета, АдресХранилища) Экспорт
	
	СхемаКомпоновкиДанных = Отчеты.АнализСостоянияНалоговогоУчетаПоНДС.ПолучитьМакет(ПараметрыОтчета.ИмяМакета);
	
	КомпоновщикНастроек = Новый КомпоновщикНастроекКомпоновкиДанных;
	КомпоновщикНастроек.ЗагрузитьНастройки(ПолучитьНастройкуМакета(ПараметрыОтчета, СхемаКомпоновкиДанных));
	
	ПараметрыОтчета.КоллекцияНастроек.Вставить("ИдентификаторМакета", ПараметрыОтчета.ИмяМакета);
	
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.Вставить("ВыводитьПодвал");
	КомпоновщикНастроек.Настройки.ДополнительныеСвойства.ВыводитьПодвал = Ложь;
	
	ПараметрыОтчета.Вставить("ДанныеРасшифровки"        , Неопределено);
	ПараметрыОтчета.Вставить("СхемаКомпоновкиДанных"    , СхемаКомпоновкиДанных);
	ПараметрыОтчета.Вставить("ИдентификаторОтчета"      , "АнализСостоянияНалоговогоУчетаПоНДС");
	ПараметрыОтчета.Вставить("НастройкиКомпоновкиДанных", КомпоновщикНастроек.ПолучитьНастройки());
	
	АдресПромежуточногоХранилища = ПоместитьВоВременноеХранилище(Неопределено, Новый УникальныйИдентификатор);
	БухгалтерскиеОтчетыВызовСервера.СформироватьОтчет(ПараметрыОтчета, АдресПромежуточногоХранилища);
	РезультатВыполнения = ПолучитьИзВременногоХранилища(АдресПромежуточногоХранилища);
	ДокументРезультат = РезультатВыполнения.Результат;
	
	ДокументРезультат.ФиксацияСверху = ?(ПараметрыОтчета.КоллекцияНастроек["ВключатьОбособленныеПодразделения"], 7, 5);
	
	РезультатВыполнения = Новый Структура;
	РезультатВыполнения.Вставить("Результат", ДокументРезультат);
	
	ПоместитьВоВременноеХранилище(РезультатВыполнения, АдресХранилища);
							
КонецПроцедуры 

Функция ПолучитьНастройкуМакета(ПараметрыОтчета, СхемаКомпоновкиДанных = Неопределено) Экспорт
	
	Если ПараметрыОтчета.КоллекцияНастроек <> Неопределено 
		И ПараметрыОтчета.КоллекцияНастроек.Свойство(ПараметрыОтчета.ИмяМакета) Тогда				
		Возврат ПараметрыОтчета.КоллекцияНастроек[ПараметрыОтчета.ИмяМакета];
	ИначеЕсли СхемаКомпоновкиДанных = Неопределено Тогда		
		Возврат Отчеты.АнализСостоянияНалоговогоУчетаПоНДС.ПолучитьМакет(ПараметрыОтчета.ИмяМакета).НастройкиПоУмолчанию;
	Иначе		
		Возврат СхемаКомпоновкиДанных.НастройкиПоУмолчанию;
	КонецЕсли;

КонецФункции

//  Создает запрос, устанавливает параметры запроса 
//
// Параметры:
//   ПараметрыОтчета - Структура параметров отчета
// Возвращаемое значение:
//   Запрос   - заготовка запроса, с установленными параметрами.
//
Функция ПолучитьПараметрыЗапроса(ПараметрыОтчета) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ВидыЦенностейАвансыВсе = Новый СписокЗначений;
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыВыданные);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАвансыВсе.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	ВидыЦенностейАвансыПолученные = Новый СписокЗначений;
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные);
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.АвансыПолученные0);
	ВидыЦенностейАвансыПолученные.Добавить(Перечисления.ВидыЦенностей.ВозвратАвансовПолученных);
	
	ВидыЦенностейНалоговыйАгент = Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгент();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ВидыЦенностейНалоговыйАгент,
		Перечисления.ВидыЦенностей.МассивВидовЦенностиНалоговыйАгентРеализацияТоваров());
	
	СписокСчетовАвансовПолученных = Новый СписокЗначений;
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученным); 
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымВал);
	СписокСчетовАвансовПолученных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамПолученнымУЕ);
	
	СписокСчетовАвансовВыданных = Новый СписокЗначений;
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданным);
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымВал);
	СписокСчетовАвансовВыданных.Добавить(ПланыСчетов.Хозрасчетный.РасчетыПоАвансамВыданнымУЕ);
	
	СписокВидовСубконто = Новый СписокЗначений;
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	СписокВидовСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами);
	
	СчетВыручкиЕНВД = ПланыСчетов.Хозрасчетный.ВыручкаЕНВД;
	
	ВидыСубконтоКонтрагентыДоговоры = Новый Массив;
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
		
	ВедетсяУчетОбособленныхПодразделений = ПолучитьФункциональнуюОпцию("ИспользоватьОбособленныеПодразделения");
									
	Если ВедетсяУчетОбособленныхПодразделений И ПараметрыОтчета.ВключатьОбособленныеПодразделения Тогда
		
		СписокОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьСписокОбособленныхПодразделений(ПараметрыОтчета.Организация);
		
	Иначе
		
		СписокОрганизаций = Новый СписокЗначений;
		СписокОрганизаций.Добавить(ПараметрыОтчета.Организация);
		
	КонецЕсли;	
	
	ОрганизацииНеНаЛьготномНалогообложении = УчетНДСРФ.ОрганизацииНеНаЛьготномНалогообложении(СписокОрганизаций, НачалоДня(ПараметрыОтчета.НачалоПериода));
	
	//	Установка параметров запроса
	Запрос.УстановитьПараметр("НачалоСледующегоПериода", 							КонецДня(ПараметрыОтчета.КонецПериода) + 1);
	Запрос.УстановитьПараметр("НачалоПериода",										НачалоДня(ПараметрыОтчета.НачалоПериода));
	Запрос.УстановитьПараметр("КонецПериодаГраница", 								Новый Граница(КонецДня(ПараметрыОтчета.КонецПериода), ВидГраницы.Включая));
	Запрос.УстановитьПараметр("КонецПериода", 										КонецДня(ПараметрыОтчета.КонецПериода));
	Запрос.УстановитьПараметр("Организация",										СписокОрганизаций);
	Запрос.УстановитьПараметр("ОрганизацииНеНаЛьготномНалогообложении",				ОрганизацииНеНаЛьготномНалогообложении);
	Запрос.УстановитьПараметр("ПустаяСсылкаНаСчетФактуруВыданный", 					Документы.СчетФактураВыданный.ПустаяСсылка());
	Запрос.УстановитьПараметр("СписокСчетовАвансовПолученных",						СписокСчетовАвансовПолученных);
	Запрос.УстановитьПараметр("СписокСчетовАвансовВыданных", 						СписокСчетовАвансовВыданных);
	Запрос.УстановитьПараметр("ВидыСубконто",										СписокВидовСубконто);
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыДоговоры",					ВидыСубконтоКонтрагентыДоговоры);
	Запрос.УстановитьПараметр("ВидыЦенностейНалоговыйАгент",						ВидыЦенностейНалоговыйАгент); 
	Запрос.УстановитьПараметр("ВидыЦенностейАвансыВсе", 							ВидыЦенностейАвансыВсе);
	Запрос.УстановитьПараметр("ВидыЦенностейАвансыПолученные",						ВидыЦенностейАвансыПолученные);
	Запрос.УстановитьПараметр("ВыручкаЕНВД",										СчетВыручкиЕНВД);
	Запрос.УстановитьПараметр("ПустаяНоменклатура", 								Справочники.Номенклатура.ПустаяСсылка());
	Запрос.УстановитьПараметр("СобытияНеОтражаемыеВРазделеНачисленияПоРеализации",	СобытияНеОтражаемыеВРазделеРеализация());
	Запрос.УстановитьПараметр("НоваяАрхитектураВзаиморасчетов",						ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов"));
	
	Возврат Запрос;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция СобытияНеОтражаемыеВРазделеРеализация() Экспорт
	
	СобытияНеРеализация = Новый СписокЗначений;
	СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НалогИсчисляетПокупатель);
	СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.ПодтвержденаСтавка0);
	СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.НеПодтвержденаСтавка0);
	СобытияНеРеализация.Добавить(Перечисления.СобытияПоНДСПродажи.ВосстановлениеНДС);
	
	Возврат СобытияНеРеализация;

КонецФункции

Функция ПодготовитьПоказательКВыводу(Показатель, ИмеютсяЗаписи)
	
	Если Показатель = 0 И ИмеютсяЗаписи Тогда
		Возврат "0";
	Иначе
		Возврат Строка(Формат(Показатель,"ЧДЦ=2"));
	КонецЕсли;
	
КонецФункции

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС по реализации в случае сложного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеРеализацияСложныйУчетНДС(Запрос)
	
	// Документы включенные в книгу продаж (НДС по реализации)
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура КАК СчетФактура,
	|	КнигаПродаж.СтавкаНДС КАК СтавкаНДС,
	|	КнигаПродаж.СуммаБезНДСОборот КАК Сумма,
	|	КнигаПродаж.НДСОборот КАК СуммаНДС
	|ПОМЕСТИТЬ ВТСоставКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, 
	|									&ВидыЦенностейНалоговыйАгент, 
	|									ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК КнигаПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	КнигаПродаж.СтавкаНДС,
	|	КнигаПродаж.СуммаБезНДСОборот,
	|	КнигаПродаж.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе,
	|									&ВидыЦенностейНалоговыйАгент,
	|									ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами))
	|				И НЕ Событие В (&СобытияНеОтражаемыеВРазделеНачисленияПоРеализации)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК КнигаПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродаж.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ВТСоставКнигиПродаж.СуммаНДС) КАК СуммаНДС,
	|	0 КАК КоличествоОшибок
	|ИЗ
	|	ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачисленияПоРеализацииВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0; 
	Если НачисленияПоРеализацииВключенные.Следующий() Тогда
		ВключенныеВБазу   = НачисленияПоРеализацииВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", ВключенныеВБазу);
	
	КоличествоЗаписей = НачисленияПоРеализацииВключенные.Количество();
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачислениеРеализацияСложныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС с полученных авансов в случае ведения упрощенного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС(Запрос)

	ПараметрыРасчетаАвансов = УчетНДСУПСлужебный.ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала    = Запрос.Параметры.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания = Запрос.Параметры.КонецПериода;
	ПараметрыРасчетаАвансов.Организации   = Запрос.Параметры.Организация;
	
	УчетНДСУПСлужебный.ПодготовитьВТ_АвансыПолученные(
			Запрос.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура КАК СчетФактура,
	|	СоставКнигиПродаж.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот,
	|	СоставКнигиПродаж.ВидЦенности,
	|	СоставКнигиПродаж.Событие,
	|	СоставКнигиПродаж.Регистратор,
	|	СоставКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	СоставКнигиПродаж.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТСоставКнигиПродаж
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура,
	|	СоставКнигиПродаж.ДоговорКонтрагента,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот,
	|	СоставКнигиПродаж.ВидЦенности,
	|	СоставКнигиПродаж.Событие,
	|	СоставКнигиПродаж.Регистратор,
	|	СоставКнигиПродаж.ЗаписьДополнительногоЛиста,
	|	СоставКнигиПродаж.НомерСтроки
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И ЗаписьДополнительногоЛиста
	|				И НЕ Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НалогИсчисляетПокупатель)
	|				И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)) КАК СоставКнигиПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура КАК Реализация,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот
	|ПОМЕСТИТЬ ВТРеализации
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Авто,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПродаж.СчетФактура,
	|	СоставКнигиПродаж.СтавкаНДС,
	|	СоставКнигиПродаж.СуммаБезНДСОборот,
	|	СоставКнигиПродаж.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			Авто,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И ЗаписьДополнительногоЛиста
	|				И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода)) КАК СоставКнигиПродаж
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Расчеты.Контрагент          КАК Контрагент,
	|	Расчеты.Договор             КАК ДоговорКонтрагента,
	|	Расчеты.РасчетныйДокумент   КАК СчетФактура,
	|	Расчеты.ДокументРегистратор КАК Реализация
	|ПОМЕСТИТЬ ВТРеализацииДокументыОплаты
	|ИЗ
	|	БазаНДС_АвансыПолученные КАК Расчеты
	|ГДЕ
	|	Расчеты.ДатаПогашения <> ДАТАВРЕМЯ(1,1,1)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС20_120)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС18_118)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС10_110)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.НДС0)
	|		КОГДА ВТРеализации.СтавкаНДС = ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.СтавкиНДС.БезНДС)
	|	КОНЕЦ КАК СтавкаНДС,
	|	ВТРеализации.СуммаБезНДСОборот,
	|	ВТРеализации.НДСОборот,
	|	ВТРеализацииДокументыОплаты.ДоговорКонтрагента,
	|	ВТРеализацииДокументыОплаты.СчетФактура
	|ПОМЕСТИТЬ ВТЗачетАвансовПоРеализации
	|ИЗ
	|	ВТРеализации КАК ВТРеализации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРеализацииДокументыОплаты КАК ВТРеализацииДокументыОплаты
	|		ПО ВТРеализации.Реализация = ВТРеализацииДокументыОплаты.Реализация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Договор           КАК ДоговорКонтрагента,
	|	Расчеты.РасчетныйДокумент КАК СчетФактура,
	|	&СтавкаНДСПоУмолчанию     КАК СтавкаНДСПредположительная,
	|	СУММА(ВЫРАЗИТЬ(Расчеты.Сумма
	|		- Расчеты.Сумма * &ПроцентНДС / (100 + &ПроцентНДС) КАК ЧИСЛО(31,2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(Расчеты.Сумма * &ПроцентНДС / (100 + &ПроцентНДС) КАК ЧИСЛО(31,2))) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТХозрасчетныйВсеОстаткиАвансыПолученные
	|ИЗ
	|	БазаНДС_АвансыПолученные КАК Расчеты
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеРасчетныхДокументов
	|		ПО Расчеты.РасчетныйДокумент = ДанныеРасчетныхДокументов.Документ
	|			И Расчеты.Организация    = ДанныеРасчетныхДокументов.Организация
	|ГДЕ
	|	Расчеты.ДатаПогашения = ДАТАВРЕМЯ(1,1,1)
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Договор,
	|	Расчеты.РасчетныйДокумент,
	|	ДанныеРасчетныхДокументов.Дата
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Платежи.Ссылка КАК Ссылка,
	|	ВЫБОР
	|		КОГДА Платежи.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА &СтавкаНДСПоУмолчанию
	|		КОГДА Платежи.СтавкаНДС.Ставка > 0
	|				И Платежи.СтавкаНДС.РасчетнаяСтавка = ЛОЖЬ
	|			ТОГДА Платежи.СтавкаНДС.СоответствующаяРасчетнаяСтавка
	|		ИНАЧЕ Платежи.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(Платежи.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Платежи.Сумма - Платежи.СуммаНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ СуммыПлатежей
	|ИЗ
	|	Документ.ПоступлениеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК Платежи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеБезналичныхДенежныхСредств КАК ДанныеРасчетныхДокументов
	|		ПО Платежи.Ссылка = ДанныеРасчетныхДокументов.Ссылка
	|ГДЕ
	|	Платежи.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Платежи.Ссылка,
	|	ДанныеРасчетныхДокументов.Дата,
	|	Платежи.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Платежи.Ссылка,
	|	ВЫБОР
	|		КОГДА Платежи.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА &СтавкаНДСПоУмолчанию
	|		КОГДА Платежи.СтавкаНДС.Ставка > 0
	|				И Платежи.СтавкаНДС.РасчетнаяСтавка = ЛОЖЬ
	|			ТОГДА Платежи.СтавкаНДС.СоответствующаяРасчетнаяСтавка
	|		ИНАЧЕ Платежи.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(Платежи.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Платежи.Сумма - Платежи.СуммаНДС) КАК СуммаБезНДС
	|ИЗ
	|	Документ.ПриходныйКассовыйОрдер.РасшифровкаПлатежа КАК Платежи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриходныйКассовыйОрдер КАК ДанныеРасчетныхДокументов
	|		ПО Платежи.Ссылка = ДанныеРасчетныхДокументов.Ссылка
	|ГДЕ
	|	Платежи.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Платежи.Ссылка,
	|	ДанныеРасчетныхДокументов.Дата,
	|	Платежи.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Платежи.Ссылка,
	|	ВЫБОР
	|		КОГДА Платежи.СтавкаНДС = ЗНАЧЕНИЕ(Справочник.СтавкиНДС.ПустаяСсылка)
	|			ТОГДА &СтавкаНДСПоУмолчанию
	|		КОГДА Платежи.СтавкаНДС.Ставка > 0
	|				И Платежи.СтавкаНДС.РасчетнаяСтавка = ЛОЖЬ
	|			ТОГДА Платежи.СтавкаНДС.СоответствующаяРасчетнаяСтавка
	|		ИНАЧЕ Платежи.СтавкаНДС
	|	КОНЕЦ КАК СтавкаНДС,
	|	СУММА(Платежи.СуммаНДС) КАК СуммаНДС,
	|	СУММА(Платежи.Сумма - Платежи.СуммаНДС) КАК СуммаБезНДС
	|ИЗ
	|	Документ.ОперацияПоПлатежнойКарте.РасшифровкаПлатежа КАК Платежи
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ОперацияПоПлатежнойКарте КАК ДанныеРасчетныхДокументов
	|		ПО Платежи.Ссылка = ДанныеРасчетныхДокументов.Ссылка
	|ГДЕ
	|	Платежи.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные.СчетФактура
	|			ИЗ
	|				ВТХозрасчетныйВсеОстаткиАвансыПолученные)
	|
	|СГРУППИРОВАТЬ ПО
	|	Платежи.Ссылка,
	|	ДанныеРасчетныхДокументов.Дата,
	|	Платежи.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАвансыПолученныеВременнаяТаблица.СчетФактура,
	|	ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента,
	|	ЕСТЬNULL(СуммыПлатежей.СтавкаНДС, ВТАвансыПолученныеВременнаяТаблица.СтавкаНДСПредположительная) КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыПлатежей.СуммаБезНДС, ВТАвансыПолученныеВременнаяТаблица.СуммаБезНДС) КАК СуммаБезНДС,
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыПолученныеВременнаяТаблица.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТАвансыПолученные
	|ИЗ
	|	ВТХозрасчетныйВсеОстаткиАвансыПолученные КАК ВТАвансыПолученныеВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммыПлатежей КАК СуммыПлатежей
	|		ПО ВТАвансыПолученныеВременнаяТаблица.СчетФактура = СуммыПлатежей.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыПолученныеВременнаяТаблица.СуммаНДС) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ВТАвансыПолученныеВременнаяТаблица.СчетФактура,
	|	ВТАвансыПолученныеВременнаяТаблица.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АвансыПолученные.СчетФактура,
	|	АвансыПолученные.ДоговорКонтрагента,
	|	АвансыПолученные.СтавкаНДС,
	|	АвансыПолученные.СуммаБезНДС 
	|					- ЕСТЬNULL(ВТСоставКнигиПродаж.СуммаБезНДСОборот, 0) 
	|					- ЕСТЬNULL(ВТЗачетАвансовПоРеализации.СуммаБезНДСОборот, 0) КАК СуммаБезНДС,
	|	АвансыПолученные.СуммаНДС
	|					- ЕСТЬNULL(ВТСоставКнигиПродаж.НДСОборот, 0)
	|					- ЕСТЬNULL(ВТЗачетАвансовПоРеализации.НДСОборот, 0) КАК СуммаНДС,
	|	ВТСоставКнигиПродаж.ВидЦенности,
	|	ВТСоставКнигиПродаж.Событие
	|ПОМЕСТИТЬ НевосстановленныеАвансы
	|ИЗ
	|	ВТАвансыПолученные КАК АвансыПолученные
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|		ПО АвансыПолученные.СчетФактура = ВТСоставКнигиПродаж.СчетФактура
	|			И АвансыПолученные.ДоговорКонтрагента = ВТСоставКнигиПродаж.ДоговорКонтрагента
	|			И АвансыПолученные.СтавкаНДС.ПеречислениеСтавкаНДС = ВТСоставКнигиПродаж.СтавкаНДС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗачетАвансовПоРеализации КАК ВТЗачетАвансовПоРеализации
	|		ПО АвансыПолученные.СчетФактура = ВТЗачетАвансовПоРеализации.СчетФактура
	|			И АвансыПолученные.ДоговорКонтрагента = ВТЗачетАвансовПоРеализации.ДоговорКонтрагента
	|			И АвансыПолученные.СтавкаНДС.ПеречислениеСтавкаНДС = ВТЗачетАвансовПоРеализации.СтавкаНДС
	|ГДЕ
	|	АвансыПолученные.СуммаНДС 
	|					- ЕСТЬNULL(ВТСоставКнигиПродаж.НДСОборот, 0) 
	|					- ЕСТЬNULL(ВТЗачетАвансовПоРеализации.НДСОборот, 0) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АвансыПолученные.СчетФактура,
	|	АвансыПолученные.ДоговорКонтрагента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТХозрасчетныйВсеОстаткиАвансыПолученные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТь БазаНДС_АвансыПолученные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.СчетФактура КАК СчетФактура,
	|	СУММА(0) КАК СуммаВключенные,
	|	СУММА(ХозрасчетныйОстатки.СуммаНДС) КАК СуммаНеВключенные
	|ИЗ
	|	НевосстановленныеАвансы КАК ХозрасчетныйОстатки
	|ГДЕ
	|	НЕ ХозрасчетныйОстатки.СчетФактура В 
	|			(ВЫБРАТЬ
	|				ВТСоставКнигиПродаж.СчетФактура
	|			ИЗ
	|				ВТСоставКнигиПродаж)
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйОстатки.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ВТСоставКнигиПродаж.СчетФактура,
	|	СУММА(ВТСоставКнигиПродаж.НДСОборот),
	|	СУММА(0)
	|ИЗ
	|	ВТСоставКнигиПродаж КАК ВТСоставКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТСоставКнигиПродаж", "ВТСоставКнигиПродаж_Упрощенный");
	
	ПодстановкаСтавкаНДС = УчетНДСРФ.ТекстВыбораСтавкиНДСПоУмолчанию(Запрос.Параметры, "ДанныеРасчетныхДокументов.Дата", Истина);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&СтавкаНДСПоУмолчанию", ПодстановкаСтавкаНДС);
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ПроцентНДС", УчетНДСРФ.ТекстВыбораПроцентаНДС(ПодстановкаСтавкаНДС));
	
	Запрос.Текст = ТекстЗапроса;
	
	НачислениеАвансыПолученныеУпрощенныйУчетНДС = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;

	Если НачислениеАвансыПолученныеУпрощенныйУчетНДС.Следующий() Тогда
		ВключенныеВБазу   = НачислениеАвансыПолученныеУпрощенныйУчетНДС.СуммаВключенные;
		НеВключенныеВБазу = НачислениеАвансыПолученныеУпрощенныйУчетНДС.СуммаНеВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	 	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", 
											  НачислениеАвансыПолученныеУпрощенныйУчетНДС.Количество() > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;	

КонецФункции // ПолучитьНаборДанныхНачислениеАвансыПолученныеУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС при исполнении обязанностей налогового агента.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеНалоговыйАгент(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель КАК Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот КАК СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот КАК НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	Покупатель
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расчеты.Период КАК Период,
	|	Расчеты.Регистратор КАК Регистратор,
	|	Расчеты.Регистратор КАК ДокументОснование,
	|	АналитикаУчетаПоПартнерамДанные.Контрагент КАК Контрагент,
	|	Расчеты.Валюта КАК Валюта,
	|	ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов.Договор КАК Справочник.ДоговорыКонтрагентов) КАК Договор,
	|	СУММА(Расчеты.СуммаРегл) КАК СуммаОборот,
	|	ВЫРАЗИТЬ(СУММА(Расчеты.СуммаРегл * &ПроцентНДС /100) КАК ЧИСЛО(31,2)) КАК СуммаНДСОборот
	|ПОМЕСТИТЬ ОплатыПоставщику
	|ИЗ
	|	РегистрНакопления.РасчетыСПоставщиками КАК Расчеты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерамДанные
	|		ПО Расчеты.АналитикаУчетаПоПартнерам = АналитикаУчетаПоПартнерамДанные.КлючАналитики
	|			И (АналитикаУчетаПоПартнерамДанные.Организация В (&Организация))
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО Расчеты.ОбъектРасчетов.Договор = ДоговорыКонтрагентов.Ссылка
	|			И (ДоговорыКонтрагентов.УчетАгентскогоНДС)
	|ГДЕ
	|	Расчеты.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И (Расчеты.Регистратор ССЫЛКА Документ.СписаниеБезналичныхДенежныхСредств
	|			ИЛИ Расчеты.Регистратор ССЫЛКА Документ.РасходныйКассовыйОрдер)
	|	И Расчеты.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ЕСТЬNULL(ДоговорыКонтрагентов.УчетАгентскогоНДС, 
	|		Расчеты.ОбъектРасчетов.НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.НалоговыйАгентПоНДС))
	|
	|СГРУППИРОВАТЬ ПО
	|	Расчеты.Период,
	|	Расчеты.Регистратор,
	|	ВЫРАЗИТЬ(Расчеты.ОбъектРасчетов.Договор КАК Справочник.ДоговорыКонтрагентов),
	|	АналитикаУчетаПоПартнерамДанные.Контрагент,
	|	Расчеты.Валюта
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОснование
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот)КАК СуммаВключенныхВБазу,
	|	СУММА(0) КАК СуммаНеВключенныхВБазу
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СУММА(0),
	|	СУММА(ОплатыПоставщику.СуммаНДСОборот)
	|ИЗ
	|	ОплатыПоставщику КАК ОплатыПоставщику
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродажОбороты
	|	ПО
	|		НДСЗаписиКнигиПродажОбороты.СчетФактура = ОплатыПоставщику.ДокументОснование
	|ГДЕ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура ЕСТЬ NULL
	|
	|СГРУППИРОВАТЬ ПО
	|	ОплатыПоставщику.ДокументОснование
	|
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ПодстановкаСтавкаНДС = УчетНДСРФ.ТекстВыбораСтавкиНДСПоУмолчанию(Запрос.Параметры, "Расчеты.Период", Истина);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПроцентНДС", УчетНДСРФ.ТекстВыбораПроцентаНДС(ПодстановкаСтавкаНДС));
	
	НачисленияИсполнениеОНА = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если НачисленияИсполнениеОНА.Следующий() Тогда
		
		ВключенныеВБазу   = НачисленияИсполнениеОНА.СуммаВключенныхВБазу;
		НеВключенныеВБазу = НачисленияИсполнениеОНА.СуммаНеВключенныхВБазу;
		
	КонецЕсли;	
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", НачисленияИсполнениеОНА.Количество() > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачислениеИсполнениеОНА()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС с выданных авансов (по факту поступления) в случае ведения упрощенного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1
	|ПОМЕСТИТЬ ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, 
	|											Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСпоАвансамИПредоплатамВыданным)), 
	|											ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФПолученные), 
	|											Организация В (&ОрганизацииНеНаЛьготномНалогообложении)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТЗаписиКнигиПокупокОборотыСАвансовВыданныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&ОрганизацииНеНаЛьготномНалогообложении)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&ОрганизацииНеНаЛьготномНалогообложении)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТЗаписиКнигиПродажОборотыСАвансовВыданныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&ОрганизацииНеНаЛьготномНалогообложении)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиНДСпоАвансамИПредоплатамВыданным КАК ХозрасчетныйОстатки)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ВидЦенности,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СчетФактура, НДСЗаписиКнигиПродажОбороты.СчетФактура) КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0)) КАК СуммаНДС
	|ИЗ
	|	ВТЗаписиКнигиПокупокОборотыСАвансовВыданныхУпрощенныйУчет КАК НДСЗаписиКнигиПокупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТЗаписиКнигиПродажОборотыСАвансовВыданныхУпрощенныйУчет КАК НДСЗаписиКнигиПродажОбороты
	|		ПО НДСЗаписиКнигиПокупокОбороты.СчетФактура = НДСЗаписиКнигиПродажОбороты.СчетФактура
	|			И НДСЗаписиКнигиПокупокОбороты.ВидЦенности = НДСЗаписиКнигиПродажОбороты.ВидЦенности
	|			И НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = НДСЗаписиКнигиПродажОбороты.СтавкаНДС
	|
	|СГРУППИРОВАТЬ ПО
	|	ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СчетФактура, НДСЗаписиКнигиПродажОбороты.СчетФактура)
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	
	ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные = Запрос.Выполнить().Выбрать();
		
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродаж.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОбороты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&ОрганизацииНеНаЛьготномНалогообложении)
	|				И НЕ ЗаписьДополнительногоЛиста
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСЗаписиКнигиПродаж
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажДопЛисты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажДопЛисты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&ОрганизацииНеНаЛьготномНалогообложении) 
	|				И ЗаписьДополнительногоЛиста
	|				И КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)) КАК НДСЗаписиКнигиПродажДопЛисты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродаж.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПродаж.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОбороты КАК НДСЗаписиКнигиПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";	
	
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0; 
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТНДСЗаписиКнигиПродажОбороты", "ВТНДСЗаписиКнигиПродажОбороты_Упрощенный");
	
	Запрос.Текст = ТекстЗапроса;
	ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	Если ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.Следующий() Тогда 
		ВключенныеВБазу   = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.СуммаНДС;
	КонецЕсли;
	
	Если ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.Следующий() Тогда 
		НеВключенныеВБазу = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСВключенные.Количество()
	+ ВосстановлениеСАвансовВыданныхУпрощенныйУчетНДСНеВключенные.Количество();
		
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхНачислениеВосстановлениеСАвансовВыданныхУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начисленному НДС при выполнении строительно-монтажных работ хозяйственным способом.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеСМРХозСпособом(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ЗаписиКнигиПродажВЧастиСМР
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.СМРСобственнымиСилами)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК ВключенныйНДС
	|ИЗ
	|	ЗаписиКнигиПродажВЧастиСМР КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеСМРХозСпособом = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	
	Если НачислениеСМРХозСпособом.Следующий() Тогда
		ВключенныеВБазу = НачислениеСМРХозСпособом.ВключенныйНДС;
	КонецЕсли;	
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	  ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", НачислениеСМРХозСпособом.Количество() > 0);	
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхНачисление()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начислению НДС в случае реализации по ставке НДС 0%.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеРеализация0(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура КАК ДокументРегистратор,
	|	СУММА(КнигаПродаж.НДСОборот) КАК СуммаВключенные
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0), 
	|							 ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК КнигаПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаПродаж.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КнигаПродаж.СчетФактура,
	|	СУММА(КнигаПродаж.НДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ПодтвержденаСтавка0), 
	|							 ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.НеПодтвержденаСтавка0))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК КнигаПродаж
	|
	|СГРУППИРОВАТЬ ПО
	|	КнигаПродаж.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	НачислениеРеализация0 = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;	
	Если НачислениеРеализация0.Следующий() Тогда
		ВключенныеВБазу   = НачислениеРеализация0.СуммаВключенные;
	КонецЕсли;	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеРеализация0.Количество();
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхНачислениеРеализация0()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	начислению НДС по прочим операциям в случае ведения сложного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации(Запрос)

	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот) КАК СуммаВключенные
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	СУММА(НДСЗаписиКнигиПродажОбороты.НДСОборот)
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПродажи.ВосстановлениеНДС)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданныеНалоговыйАгент)
	|				И ВидЦенности <> ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ТоварыНалоговыйАгент)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	
	НачислениеВосстановлениеДругиеОперации = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	
	Если НачислениеВосстановлениеДругиеОперации.Следующий() Тогда
		ВключенныеВБазу   = НачислениеВосстановлениеДругиеОперации.СуммаВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные", 	 ВключенныеВБазу);
	
	КоличествоЗаписей = НачислениеВосстановлениеДругиеОперации.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхНачислениеВосстановлениеДругиеОперации()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по приобретенным ценностям.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК ДокументРегистратор,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупок
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТСоставКнигиПокупок.ДокументРегистратор,
	|	СУММА(ВТСоставКнигиПокупок.СуммаБезНДСОборот) КАК Сумма,
	|	СУММА(ВТСоставКнигиПокупок.НДСОборот) КАК СуммаНДС,
	|	СУММА(0) КАК КоличествоОшибок
	|ИЗ
	|	ВТСоставКнигиПокупок КАК ВТСоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТСоставКнигиПокупок.ДокументРегистратор
	|ИТОГИ ПО
	|	ОБЩИЕ";

	ВычетПоПриобретеннымЦенностямВключенные = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСПредъявленныйОстатки.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСПредъявленныйОстатки.СуммаБезНДСОстаток) КАК СуммаБезНДС,
	|	СУММА(НДСПредъявленныйОстатки.НДСОстаток) КАК СуммаНДС
	|ИЗ
	|	РегистрНакопления.НДСПредъявленный.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&Организация)
	|			И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе, &ВидыЦенностейНалоговыйАгент)
	|			И ВидДеятельностиНДС <> ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНаЭкспорт)) КАК НДСПредъявленныйОстатки
	|СГРУППИРОВАТЬ ПО
	|	НДСПредъявленныйОстатки.СчетФактура
	|
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты = Запрос.Выполнить().Выбрать();
	СтруктураВозвращаемыхПараметров = Новый Структура();
	ВключенныеВБазу = 0;
	Если ВычетПоПриобретеннымЦенностямВключенные.Следующий() Тогда
		
		ВключенныеВБазу   = ВычетПоПриобретеннымЦенностямВключенные.СуммаНДС;
		Если ВычетПоПриобретеннымЦенностямВключенные.КоличествоОшибок > 0 Тогда
			СтруктураВозвращаемыхПараметров.Вставить("НаличиеОшибок", Истина);
		КонецЕсли;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	Если ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.Следующий() Тогда
		НеВключенныеВБазу = ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.СуммаНДС;
	КонецЕсли;
		
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетПоПриобретеннымЦенностямВключенные.Количество()
		+ ВычетПоПриобретеннымЦенностямНеВключенныеРегламенты.Количество();
		
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);	
	
	Возврат СтруктураВозвращаемыхПараметров;

КонецФункции // ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС при исполнении обязанностей налогового агента.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетНалоговыйАгент(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты КАК ДокументОплаты
	|ПОМЕСТИТЬ НДСЗаписиКнигиПокупокОборотыНалоговыйАгентВычеты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Организация В (&Организация)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДокументОплаты
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Организация В (&Организация)
	|				И Событие <> ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОбороты.Регистратор
	|ПОМЕСТИТЬ ХозрасчетныйОборотыОплатаНалоговыйАгентВычет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(, &КонецПериодаГраница, 
	|												Регистратор, 
	|												Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСНалоговогоАгента), 
	|												ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), 
	|												Организация В (&Организация), 
	|												КорСчет В (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетныеСчета), 
	|															ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ВалютныеСчета)),
	|											) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК ДокументРегистратор,
	|	СУММА(НДСЗаписиКнигиПокупокОбороты.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	НДСЗаписиКнигиПокупокОборотыНалоговыйАгентВычеты КАК НДСЗаписиКнигиПокупокОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОборотыОплатаНалоговыйАгентВычет КАК ХозрасчетныйОбороты
	|		ПО НДСЗаписиКнигиПокупокОбороты.ДокументОплаты = ХозрасчетныйОбороты.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПриИсполненииОНАВключенные = Запрос.Выполнить().Выбрать();
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	
	ВключенныеВБазу = 0;
	Если ВычетПриИсполненииОНАВключенные.Следующий() Тогда
		ВключенныеВБазу   = ВычетПриИсполненииОНАВключенные.СуммаНДС;
	КонецЕсли;
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	
	КоличествоЗаписей = ВычетПриИсполненииОНАВключенные.Количество();
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхВычетИсполнениеОНА()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС с полученных авансов (по факту реализации) в случае ведения упрощенного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1
	|ПОМЕСТИТЬ ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, 
	|											Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.НДСПоАвансамИПредоплатам)), 
	|											ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СФВыданные), 
	|											Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента1,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПродажОборотыСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПродажОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПродажОбороты.Покупатель,
	|	НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПродажОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПродаж.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПродажОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности КАК ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПокупокОборотыСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.ВидЦенности,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И СчетФактура В
	|					(ВЫБРАТЬ
	|						ХозрасчетныйОстатки.Субконто1 КАК СчетФактура
	|					ИЗ
	|						ВТХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура,
	|	ДоговорКонтрагента,
	|	СтавкаНДС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ПОМЕСТИТЬ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(&НачалоСледующегоПериода, 
	|											Счет В (&СписокСчетовАвансовПолученных), 
	|											ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами), 
	|											Организация В (&Организация)) КАК ХозрасчетныйОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура КАК ДокументРегистратор,
	|	СУММА(ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0)) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПродажОборотыСАвансовПолученныхУпрощенныйУчет КАК НДСЗаписиКнигиПродажОбороты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНДСЗаписиКнигиПокупокОборотыСАвансовПолученныхУпрощенныйУчет КАК НДСЗаписиКнигиПокупокОбороты
	|		ПО (НДСЗаписиКнигиПокупокОбороты.СчетФактура = НДСЗаписиКнигиПродажОбороты.СчетФактура)
	|			И (НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента = НДСЗаписиКнигиПродажОбороты.ДоговорКонтрагента)
	|			И (НДСЗаписиКнигиПокупокОбороты.СтавкаНДС = НДСЗаписиКнигиПродажОбороты.СтавкаНДС)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки
	|		ПО НДСЗаписиКнигиПродажОбороты.СчетФактура = ХозрасчетныйОстатки.Субконто1
	|ГДЕ
	|	ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.СуммаБезНДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.СуммаБезНДСОборот, 0) > 0
	|	И ЕСТЬNULL(НДСЗаписиКнигиПродажОбороты.НДСОборот, 0) - ЕСТЬNULL(НДСЗаписиКнигиПокупокОбороты.НДСОборот, 0) > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПродажОбороты.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные = Запрос.Выполнить().Выбрать();
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента КАК ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТНДСЗаписиКнигиПокупокВЧастиАвансовПолученных
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура,
	|	НДСЗаписиКнигиПокупок.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупок.СуммаБезНДСОборот,
	|	НДСЗаписиКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейАвансыПолученные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СУММА(НДСЗаписиКнигиПокупок.НДСОборот) КАК СуммаНДС
	|ИЗ
	|	ВТНДСЗаписиКнигиПокупокВЧастиАвансовПолученных КАК НДСЗаписиКнигиПокупок
	|		ЛЕВОЕ СОЕДИНЕНИЕ ХозрасчетныйОстаткиСАвансовПолученныхУпрощенныйУчет КАК ХозрасчетныйОстатки
	|		ПО НДСЗаписиКнигиПокупок.СчетФактура = ХозрасчетныйОстатки.Субконто1
	|
	|СГРУППИРОВАТЬ ПО
	|	НДСЗаписиКнигиПокупок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу = 0;
	
	Если ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.Следующий() Тогда	
		ВключенныеВБазу   = ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.СуммаНДС;
	КонецЕсли;
	
	НеВключенныеВБазу = 0;
	
	Если ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.Следующий() Тогда	
		НеВключенныеВБазу = ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.СуммаНДС;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетСАвансовПолученныхУпрощенныйУчетНДСВключенные.Количество()
		+ ВычетСАвансовПолученныхУпрощенныйУчетНДСНеВключенные.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;	
	
КонецФункции // ПолучитьНаборДанныхВычетСАвансовПолученныхУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС с выданных авансов в случае ведения упрощенного учета НДС.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС(Запрос)
	
	ПараметрыРасчетаАвансов = УчетНДСУПСлужебный.ИнициализироватьПараметрыПодготовкиРасчетовАвансовВЦеляхНДС();
	
	ПараметрыРасчетаАвансов.ДатаНачала    = Запрос.Параметры.НачалоПериода;
	ПараметрыРасчетаАвансов.ДатаОкончания = Запрос.Параметры.КонецПериода;
	ПараметрыРасчетаАвансов.Организации   = Запрос.Параметры.Организация;  
	
	ПараметрыРасчетаАвансов.Организации_АвансыВыданные          = Запрос.Параметры.ОрганизацииНеНаЛьготномНалогообложении;
	ПараметрыРасчетаАвансов.ЗаполнятьОрганизации_АвансыВыданные = Ложь;
		
	УчетНДСУПСлужебный.ПодготовитьВТ_АвансыВыданные_Возникновения(
			Запрос.МенеджерВременныхТаблиц,
			ПараметрыРасчетаАвансов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	АвансыВыданные.ДокументРегистратор                                    КАК ДокументРегистратор,
	|	&СтавкаНДСПоУмолчанию                                                 КАК СтавкаНДСПредположительная,
	|	СУММА(ВЫРАЗИТЬ(АвансыВыданные.СуммаАванса
	|			- АвансыВыданные.СуммаАванса
	|				* &ПроцентНДС / (100 + &ПроцентНДС) КАК ЧИСЛО(31,2)))     КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(АвансыВыданные.СуммаАванса
	|					* &ПроцентНДС / (100 + &ПроцентНДС) КАК ЧИСЛО(31,2))) КАК СуммаНДС
	|ПОМЕСТИТЬ ВТАвансыВыданныеВременнаяТаблица
	|ИЗ
	|	АвансыВыданные_Возникновения КАК АвансыВыданные
	|
	|СГРУППИРОВАТЬ ПО
	|	АвансыВыданные.ДокументРегистратор,
	|	АвансыВыданные.ДатаАванса
	|
	|ИМЕЮЩИЕ
	|	СУММА(АвансыВыданные.СуммаАванса) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ АвансыВыданные_Возникновения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка КАК Ссылка,
	|	РасшифровкаПлатежа.СтавкаНДС.СоответствующаяРасчетнаяСтавка КАК СтавкаНДС,
	|	СУММА(РасшифровкаПлатежа.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ РасшифровкаПлатежей
	|ИЗ
	|	Документ.СписаниеБезналичныхДенежныхСредств.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор
	|			ИЗ
	|				ВТАвансыВыданныеВременнаяТаблица)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.СтавкаНДС.СоответствующаяРасчетнаяСтавка,
	|	СУММА(РасшифровкаПлатежа.СуммаНДС)
	|ИЗ
	|	Документ.РасходныйКассовыйОрдер.РасшифровкаПлатежа КАК РасшифровкаПлатежа
	|ГДЕ
	|	РасшифровкаПлатежа.Ссылка В
	|			(ВЫБРАТЬ
	|				ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор
	|			ИЗ
	|				ВТАвансыВыданныеВременнаяТаблица)
	|
	|СГРУППИРОВАТЬ ПО
	|	РасшифровкаПлатежа.Ссылка,
	|	РасшифровкаПлатежа.СтавкаНДС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор КАК ДокументРегистратор,
	|	ЕСТЬNULL(СуммыПлатежей.СтавкаНДС, ВТАвансыВыданныеВременнаяТаблица.СтавкаНДСПредположительная) КАК СтавкаНДС,
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыВыданныеВременнаяТаблица.СуммаНДС) КАК СуммаНДС
	|ПОМЕСТИТЬ ТаблицаАвансыВыданные
	|ИЗ
	|	ВТАвансыВыданныеВременнаяТаблица КАК ВТАвансыВыданныеВременнаяТаблица
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасшифровкаПлатежей КАК СуммыПлатежей
	|		ПО ВТАвансыВыданныеВременнаяТаблица.ДокументРегистратор = СуммыПлатежей.Ссылка
	|ГДЕ
	|	ЕСТЬNULL(СуммыПлатежей.СуммаНДС, ВТАвансыВыданныеВременнаяТаблица.СуммаНДС) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура КАК ДокументРегистратор,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС КАК СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот КАК СуммаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.НомерСтроки
	|ПОМЕСТИТЬ СоставКнигиПокупокВЧастиАвансов
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НДСЗаписиКнигиПокупокОбороты.СчетФактура,
	|	НДСЗаписиКнигиПокупокОбороты.СтавкаНДС,
	|	НДСЗаписиКнигиПокупокОбороты.НДСОборот,
	|	НДСЗаписиКнигиПокупокОбороты.ДоговорКонтрагента,
	|	НДСЗаписиКнигиПокупокОбороты.НомерСтроки
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			Запись,
	|			Организация В (&Организация)
	|				И ВидЦенности = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.АвансыВыданные)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК НДСЗаписиКнигиПокупокОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументРегистратор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(ВложенныйЗапрос.СуммаНеВключеннаяВБазу) КАК СуммаНеВключеннаяВБазу,
	|	СУММА(ВложенныйЗапрос.СуммаВключеннаяВБазу) КАК СуммаВключеннаяВБазу
	|ИЗ
	|	(ВЫБРАТЬ
	|		Авансы.ДокументРегистратор КАК ДокументРегистратор,
	|		ВЫБОР
	|			КОГДА СоставКнигиПродажВЧастиАвансов.ДокументРегистратор ЕСТЬ NULL 
	|				ТОГДА ЕСТЬNULL(СоставКнигиПродажВЧастиАвансов.СуммаНДС, Авансы.СуммаНДС)
	|			ИНАЧЕ 0
	|		КОНЕЦ КАК СуммаНеВключеннаяВБазу,
	|		ВЫБОР
	|			КОГДА СоставКнигиПродажВЧастиАвансов.ДокументРегистратор ЕСТЬ NULL 
	|				ТОГДА 0
	|			ИНАЧЕ ЕСТЬNULL(СоставКнигиПродажВЧастиАвансов.СуммаНДС, Авансы.СуммаНДС)
	|		КОНЕЦ КАК СуммаВключеннаяВБазу
	|	ИЗ
	|		ТаблицаАвансыВыданные КАК Авансы
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоставКнигиПокупокВЧастиАвансов КАК СоставКнигиПродажВЧастиАвансов
	|			ПО Авансы.ДокументРегистратор = СоставКнигиПродажВЧастиАвансов.ДокументРегистратор
	|				И Авансы.СтавкаНДС.ПеречислениеСтавкаНДС = СоставКнигиПродажВЧастиАвансов.СтавкаНДС
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		СоставКнигиПродажВЧастиАвансов.ДокументРегистратор КАК ДокументРегистратор,
	|		0 КАК СуммаНеВключеннаяВБазу,
	|		СоставКнигиПродажВЧастиАвансов.СуммаНДС КАК СуммаВключеннаяВБазу
	|	ИЗ
	|		СоставКнигиПокупокВЧастиАвансов КАК СоставКнигиПродажВЧастиАвансов
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаАвансыВыданные КАК Авансы
	|			ПО Авансы.ДокументРегистратор = СоставКнигиПродажВЧастиАвансов.ДокументРегистратор
	|				И Авансы.СтавкаНДС.ПеречислениеСтавкаНДС = СоставКнигиПродажВЧастиАвансов.СтавкаНДС
	|	ГДЕ
	|		Авансы.ДокументРегистратор ЕСТЬ NULL
	|	) КАК ВложенныйЗапрос
	|	
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДокументРегистратор
	|
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ПодстановкаСтавкаНДС = УчетНДСРФ.ТекстВыбораСтавкиНДСПоУмолчанию(Запрос.Параметры, "АвансыВыданные.ДатаАванса", Истина);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&СтавкаНДСПоУмолчанию", ПодстановкаСтавкаНДС);
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "&ПроцентНДС", УчетНДСРФ.ТекстВыбораПроцентаНДС(ПодстановкаСтавкаНДС));
	
	ВычетАвансыВыданныеУпрощенныйУчетНДС = Запрос.Выполнить().Выбрать();
	ВключенныеВБазу   = 0;
	НеВключенныеВБазу = 0;
	
	Если ВычетАвансыВыданныеУпрощенныйУчетНДС.Следующий() Тогда	
		ВключенныеВБазу   = ВычетАвансыВыданныеУпрощенныйУчетНДС.СуммаВключеннаяВБазу;
		НеВключенныеВБазу = ВычетАвансыВыданныеУпрощенныйУчетНДС.СуммаНеВключеннаяВБазу;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	СтруктураВозвращаемыхПараметров.Вставить("НеВключенные", НеВключенныеВБазу);
	
	КоличествоЗаписей = ВычетАвансыВыданныеУпрощенныйУчетНДС.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
	
	Возврат СтруктураВозвращаемыхПараметров;	

КонецФункции // ПолучитьНаборДанныхВычетАвансыВыданныеУпрощенныйУчетНДС()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС по приобретенным ценностям, реализованным по ставке НДС 0%.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0(Запрос)
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупокПоПриобретеннымЦенностям0
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И НЕ ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0),
	|							 ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И НЕ ВидЦенности В (&ВидыЦенностейАвансыВсе)
	|				И НЕ ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие В (ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0),
	|							 ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.НеПодтвержденаСтавка0))
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетФактура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК ДокументРегистратор,
	|	СУММА(СоставКнигиПокупок.НДСОборот) КАК СуммаВключенные
	|ИЗ
	|	ВТСоставКнигиПокупокПоПриобретеннымЦенностям0 КАК СоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставКнигиПокупок.СчетФактура
	|
	|ИТОГИ ПО
	|	ОБЩИЕ";
	
	ВычетПоПриобретеннымЦенностям0 = Запрос.Выполнить().Выбрать();

	ВключенныеВБазу   = 0;
	
	Если ВычетПоПриобретеннымЦенностям0.Следующий() Тогда
		ВключенныеВБазу   = ВычетПоПриобретеннымЦенностям0.СуммаВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	
	КоличествоЗаписей = ВычетПоПриобретеннымЦенностям0.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;
	
КонецФункции // ПолучитьНаборДанныхВычетПоПриобретеннымЦенностям0()

// Выполняет запрос к базе данных для получения набора данных, необходимого для формирования расшифровки по
//	вычету НДС при исполнении обязанностей налогового агента при реализации ценностей по ставке НДС 0%.
//
// Параметры
//  Запрос  - Запрос - запрос к базе данных
//  СтруктураВнешнихНаборов - структура внешних источников данных для расшифровки.
//
// Возвращаемое значение:
//   Структура   - структура параметров для формирования карты отчета.
//
Функция ПолучитьНаборДанныхВычетНалоговыйАгент0(Запрос)
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.ДокументОплаты КАК ДокументОплаты,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ПОМЕСТИТЬ ВТСоставКнигиПокупокНалоговыйАгент0
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И НЕ ЗаписьДополнительногоЛиста) КАК СоставКнигиПокупок
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура,
	|	СоставКнигиПокупок.СтавкаНДС,
	|	СоставКнигиПокупок.ДокументОплаты,
	|	СоставКнигиПокупок.СуммаБезНДСОборот,
	|	СоставКнигиПокупок.НДСОборот
	|ИЗ
	|	РегистрНакопления.НДСЗаписиКнигиПокупок.Обороты(
	|			&НачалоПериода,
	|			,
	|			,
	|			Организация В (&Организация)
	|				И ВидЦенности В (&ВидыЦенностейНалоговыйАгент)
	|				И Событие = ЗНАЧЕНИЕ(Перечисление.СобытияПоНДСПокупки.ПредъявленНДСКВычету0)
	|				И (ЗаписьДополнительногоЛиста
	|					И (КорректируемыйПериод МЕЖДУ &НачалоПериода И &КонецПериода))) КАК СоставКнигиПокупок
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ДокументОплаты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СоставКнигиПокупок.СчетФактура КАК ДокументРегистратор,
	|	СУММА(СоставКнигиПокупок.НДСОборот) КАК СуммаВключенные
	|ИЗ
	|	ВТСоставКнигиПокупокНалоговыйАгент0 КАК СоставКнигиПокупок
	|
	|СГРУППИРОВАТЬ ПО
	|	СоставКнигиПокупок.СчетФактура
	|ИТОГИ ПО
	|	ОБЩИЕ";
		
	
	ВычетИсполнениеОНА0 = Запрос.Выполнить().Выбрать();
	
	ВключенныеВБазу   = 0;
	
	Если ВычетИсполнениеОНА0.Следующий() Тогда
		ВключенныеВБазу   = ВычетИсполнениеОНА0.СуммаВключенные;
	КонецЕсли;
	
	СтруктураВозвращаемыхПараметров = Новый Структура();
	СтруктураВозвращаемыхПараметров.Вставить("Включенные",   ВключенныеВБазу);
	
	КоличествоЗаписей = ВычетИсполнениеОНА0.Количество();
	
	СтруктураВозвращаемыхПараметров.Вставить("ИмеютсяЗаписи", КоличествоЗаписей > 0);
		
	Возврат СтруктураВозвращаемыхПараметров;		

КонецФункции // ПолучитьНаборДанныхВычетИсполнениеОНА0()

#КонецОбласти

#КонецЕсли