#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Если НаДату >= '20090101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	ИначеЕсли НаДату >= '20050101' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия300;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2010Кв1";
	НоваяФорма.ОписаниеОтчета     = "Форма утверждена приказом Минфина РФ от 08.12.2008 г. № 137н (в редакции приказа Минфина России от 19.11.2009 № 119н).";
	НоваяФорма.РедакцияФормы      = "от 19.11.2009 № 119н.";
	НоваяФорма.ДатаНачалоДействия = '2010-01-01';
	НоваяФорма.ДатаКонецДействия  = '2011-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2012Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 23.01.2012 № ММВ-7-3/13@.";
	НоваяФорма.РедакцияФормы      = "от 23.01.2012 № ММВ-7-3/13@.";
	НоваяФорма.ДатаНачалоДействия = '2012-01-01';
	НоваяФорма.ДатаКонецДействия  = '2013-09-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2013Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 23.01.2012 № ММВ-7-3/13@ (в ред. приказа ФНС России от 14 ноября 2013 г. № ММВ-7-3/501@).";
	НоваяФорма.РедакцияФормы      = "от 14 ноября 2013 г. № ММВ-7-3/501@.";
	НоваяФорма.ДатаНачалоДействия = '2013-10-01';
	НоваяФорма.ДатаКонецДействия  = '2014-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2015Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 04.07.2014 № ММВ-7-3/353@.";
	НоваяФорма.РедакцияФормы      = "от 04 июля 2014 г. № ММВ-7-3/353@.";
	НоваяФорма.ДатаНачалоДействия = '2015-01-01';
	НоваяФорма.ДатаКонецДействия  = '2015-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2016Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 04.07.2014 № ММВ-7-3/353@ (в редакции приказа ФНС России от 22.12.2015 № ММВ-7-3/590@).";
	НоваяФорма.РедакцияФормы      = "от 22.12.2015 № ММВ-7-3/590@.";
	НоваяФорма.ДатаНачалоДействия = '2016-01-01';
	НоваяФорма.ДатаКонецДействия  = '2016-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 04.07.2014 № ММВ-7-3/353@ (в редакции письма ФНС России от 20.02.2018 № СД-4-3/3375@).";
	НоваяФорма.РедакцияФормы      = "от 20.02.2018 № СД-4-3/3375@.";
	НоваяФорма.ДатаНачалоДействия = '2018-01-01';
	НоваяФорма.ДатаКонецДействия  = '2018-06-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв3";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к письму ФНС России от 25.07.2018 № СД-4-3/14369@.";
	НоваяФорма.РедакцияФормы      = "от 25.07.2018 № СД-4-3/14369@.";
	НоваяФорма.ДатаНачалоДействия = '2018-07-01';
	НоваяФорма.ДатаКонецДействия  = '2018-11-25';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2017Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 04.07.2014 № ММВ-7-3/353@ (в редакции приказа ФНС России от 19.10.2016 № ММВ-7-3/574@).";
	НоваяФорма.РедакцияФормы      = "от 19.10.2016 № ММВ-7-3/574@.";
	НоваяФорма.ДатаНачалоДействия = '2017-01-01';
	НоваяФорма.ДатаКонецДействия  = '2018-11-25';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2018Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение №1 к приказу ФНС России от 26.06.2018 № ММВ-7-3/414@.";
	НоваяФорма.РедакцияФормы      = "от 26.06.2018 № ММВ-7-3/414@.";
	НоваяФорма.ДатаНачалоДействия = '2018-10-01';
	НоваяФорма.ДатаКонецДействия  = '2020-12-31';
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета, ИмяРаздела = "Раздел1") Экспорт
	
	Перем Результат;
	
	Если ИмяРаздела = "Раздел1" Тогда
		Результат = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		Результат = Новый Структура;
	КонецЕсли;
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв3"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв1"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		ДанныеОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеОтчета) <> Тип("Структура") Тогда
			Возврат Результат;
		КонецЕсли;
		
		// Раздел 1 (многострочный).
		// 010 - ОКТМО налога.
		// 020 - Сумма налога.
		
		Если ИмяРаздела = "Раздел1" И ДанныеОтчета.ДанныеМногострочныхРазделов.Свойство("П00001000") Тогда
			
			Для Каждого СтрТаблицы Из ДанныеОтчета.ДанныеМногострочныхРазделов.П00001000 Цикл
				
				Сумма = Результат.Добавить();
				Сумма.ВидНалога = Перечисления.ВидыНалогов.ЕНВД;
				Сумма.Период    = ЭкземплярРеглОтчета.ДатаОкончания;
				Сумма.ОКАТО     = СтрТаблицы.П000010001003;
				Сумма.Сумма     = СтрТаблицы.П000010002003;
				
			КонецЦикла;
			
		ИначеЕсли ИмяРаздела = "Раздел3" И ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел2") Тогда
			
			// В декларации 2015 года итог по налоговой базе разделе 3
			// отсутствует, поэтому собираем базу по данным раздела 2.
			
			КодСтрокиНалоговойБазы = "П000020010003";
			
			НалоговаяБаза = 0;
			Для Каждого СтрТаблицы Из ДанныеОтчета.ДанныеМногостраничныхРазделов.Раздел2 Цикл
				НалоговаяБаза = НалоговаяБаза + СтрТаблицы.Данные[КодСтрокиНалоговойБазы]
			КонецЦикла;
			
			Результат.Вставить("НалоговаяБаза", НалоговаяБаза);
			
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2013Кв4"
		ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2012Кв1" Тогда
		
		ДанныеОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеОтчета) <> Тип("Структура") Тогда
			Возврат Результат;
		КонецЕсли;
		
		Если ИмяРаздела = "Раздел1" И ДанныеОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел1") Тогда
			
			// Раздел 1 (многостраничный).
			// 010 - Код КБК.
			// 020 - ОКАТО налога по 8 штук на каждой странице.
			// 030 - сумма.
			
			Раздел1 = ДанныеОтчета.ДанныеМногостраничныхРазделов.Раздел1;
			
			Период = ЭкземплярРеглОтчета.ДатаОкончания;
			КодСтрокиКБК   = "П000010001003";
			КодСтрокиОКАТО = "П000010002003_";
			КодСтрокиСумма = "П000010003003_";
			
			Для Каждого Страница Из Раздел1 Цикл
				
				НалогКУплате = Страница.Данные;
				
				Для НомерОКАТО = 1 По 8 Цикл
					
					Сумма = Результат.Добавить();
					Сумма.Период = Период;
					Сумма.КБК    = НалогКУплате[КодСтрокиКБК];
					Сумма.ОКАТО  = НалогКУплате[КодСтрокиОКАТО + НомерОКАТО];
					Сумма.Сумма  = НалогКУплате[КодСтрокиСумма+ НомерОКАТО];
				КонецЦикла;
				
			КонецЦикла;
			
		ИначеЕсли ИмяРаздела = "Раздел3" И ДанныеОтчета.ПоказателиОтчета.Свойство("ПолеТабличногоДокументаРаздел3") Тогда
			
			// Раздел 3.
			// 010 - Налоговая база.
			
			Раздел3 = ДанныеОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
			
			КодСтрокиНалоговойБазы = "П000030001003";
			
			Результат.Вставить("НалоговаяБаза",
				?(Раздел3.Свойство(КодСтрокиНалоговойБазы), Раздел3[КодСтрокиНалоговойБазы], 0));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20100101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2009-11-19', "119н", "ФормаОтчета2010Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20100101, "5.02");
	
	Форма20120101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2012-01-23', "ММВ-7-3/13@", "ФормаОтчета2012Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20120101, "5.03");
	
	Форма20131231 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2013-11-14', "ММВ-7-3/501@", "ФормаОтчета2013Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма20131231, "5.04");
	
	Форма20150101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2014-07-04', "ММВ-7-3/353@", "ФормаОтчета2015Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20150101, "5.05");
	
	Форма20160101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2015-12-22', "ММВ-7-3/590@", "ФормаОтчета2016Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20160101, "5.06");
	
	Форма20170101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2016-10-19', "ММВ-7-3/574@", "ФормаОтчета2017Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20170101, "5.07");
	
	Форма20180101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2018-02-20', "СД-4-3/3375@", "ФормаОтчета2018Кв1");
	ОпределитьФорматВДеревеФормИФорматов(Форма20180101, "5.07");
	
	Форма20180701 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2018-07-25', "СД-4-3/14369@", "ФормаОтчета2018Кв3");
	ОпределитьФорматВДеревеФормИФорматов(Форма20180701, "5.09");
	
	Форма20181001 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы, "1152016", '2018-06-26', "ММВ-7-3/414@", "ФормаОтчета2018Кв4");
	ОпределитьФорматВДеревеФормИФорматов(Форма20181001, "5.08");
	
	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция СформироватьАвтоматическиРеглОтчет(Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет = Ложь,
			ИмяФормыОтчета = Неопределено, ПараметрыАвтоФормирования = Неопределено) Экспорт
	
	Если ИмяФормыОтчета = "ФормаОтчета2016Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2016Кв1(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2017Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2017Кв1(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв1" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв1(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв3" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв3(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв4" Тогда
		Возврат СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв4(
			ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования);
	КонецЕсли;
КонецФункции

#КонецОбласти 

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "", ИмяОбъекта = "",
			ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

#КонецОбласти

#Область ПоказателиОценкиРискаВыезднойНалоговойПроверки

Процедура ПоказателиОценкиРискаВыезднойНалоговойПроверки(ТаблицаПоказателей, ОписаниеОтчета) Экспорт 
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	ЗначениеПоказателя = 0;
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв4"
	 ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв3"
	 ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2018Кв1"
	 ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв1"
	 ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2016Кв1"
	 ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		Если СведенияОтчета.ДанныеМногострочныхРазделов.Свойство("П00001000") Тогда
			Для Каждого СтрТаблицы Из СведенияОтчета.ДанныеМногострочныхРазделов.П00001000 Цикл
				ЗначениеПоказателя = ЗначениеПоказателя + СтрТаблицы.П000010002003;
			КонецЦикла;
		КонецЕсли;
		
	Иначе
		
		Для Каждого Лист Из СведенияОтчета.ДанныеМногостраничныхРазделов.Раздел1 Цикл
			ДанныеЛиста = Лист.Данные;
			Для Инд = 1 По 8 Цикл
				Постфикс = "_" + РегламентированнаяОтчетность.ЧислоВСтрокуЧГ0(Инд);
				ЗначениеПоказателя = ЗначениеПоказателя
				                   + РегламентированнаяОтчетность.ПоказательОтчета(ДанныеЛиста, "П000010003003" + Постфикс);
			КонецЦикла;
		КонецЦикла;
		
	КонецЕсли;
	
	НоваяСтрока = ТаблицаПоказателей.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
	НоваяСтрока.Показатель = "СуммаНалогаЕНВД";
	НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
	
КонецПроцедуры

#КонецОбласти

#Область ПроцедурыИФункцииАвтоФормированияФормыЕНВД

Функция СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
	ДанныеДопСтрок.Раздел1.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные",
		Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("ДанныеДопСтрок",
		Новый ОписаниеТипов("Структура"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Новая страница";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	П0000200062 = Новый ТаблицаЗначений;
	П0000200062.Колонки.Добавить("П000020006201",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200062.Добавить();
	П0000200065 = Новый ТаблицаЗначений;
	П0000200065.Колонки.Добавить("П000020006501",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200065.Добавить();
	ДопСтраницаРаздел2.ДанныеДопСтрок = Новый Структура("П0000200062, П0000200065", П0000200062, П0000200065);
	
	ДанныеДопСтрок.Вставить("Раздел4", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(40)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040002003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(20)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040003003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(16)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040004003",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040005003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел1", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1, "П00001000"));
	
	РазделыОтчета.Вставить("Раздел2", Новый Структура(
		"МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел4", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел4, "П00004000"));
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("РезультатАвтоформирования") Тогда
		ПараметрыАвтоФормирования.Вставить("РезультатАвтоформирования", Новый Массив);
	КонецЕсли;
		
	Если НЕ ПараметрыАвтоФормирования.Свойство("КПП")
	 ИЛИ НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", ПараметрыАвтоФормирования.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организация.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана,
		|	Организация.РегистрацияВНалоговомОргане.КПП КАК КПП
		|ИЗ
		|	Справочник.Организации КАК Организация
		|ГДЕ
		|	Организация.Ссылка = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("КПП") Тогда
				ПараметрыАвтоФормирования.Вставить("КПП", Выборка.КПП);
			КонецЕсли;
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
				ПараметрыАвтоФормирования.Вставить("НалоговыйОрган", Выборка.КодНалоговогоОргана);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв4(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП1    = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.КодИМНС = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ТаблВЗ = Новый ТаблицаЗначений;
	ТаблВЗ.Колонки.Добавить("КодПоказателя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблВЗ.Колонки.Добавить("ВариантЗаполнения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблВЗ.Колонки.Добавить("ЗначениеАвто", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Дельта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблВЗ.Колонки.Добавить("КодПоказателяПоСтруктуре", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблВЗ.Скопировать());
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	ТаблВЗРаздел2 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020007004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020008004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020009004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020010003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020011003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблВЗРаздел2);
	
	МассивВариантовЗаполненияСтраницРаздел3 = Новый Массив;
	ТаблВЗРаздел3 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030004003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030005003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел3.Добавить(ТаблВЗРаздел3);
	
	МассивВариантовЗаполненияСтраницРаздел4 = Новый Массив;
	ТаблВЗРаздел4 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел4 = ТаблВЗРаздел4.Добавить();
	НовСтр_ТаблВЗРаздел4.КодПоказателя = "П000040015003";
	НовСтр_ТаблВЗРаздел4.ВариантЗаполнения = 5;
	МассивВариантовЗаполненияСтраницРаздел4.Добавить(ТаблВЗРаздел4);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
	СтруктураВариантыЗаполнения.Вставить("Раздел3", МассивВариантовЗаполненияСтраницРаздел3);
	СтруктураВариантыЗаполнения.Вставить("Раздел4", МассивВариантовЗаполненияСтраницРаздел4);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв4(ДеревоСтраницОтчета, Организация);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИМНС", РазделыОтчета.Титульный.Данные.КодИМНС);
	ДанныеРеглОтчета.Вставить("КПП1", РазделыОтчета.Титульный.Данные.КПП1);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/10/2018");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Возврат ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв4(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв3(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
	ДанныеДопСтрок.Раздел1.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные",
		Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("ДанныеДопСтрок",
		Новый ОписаниеТипов("Структура"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Новая страница";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	П0000200062 = Новый ТаблицаЗначений;
	П0000200062.Колонки.Добавить("П000020006201",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200062.Добавить();
	П0000200065 = Новый ТаблицаЗначений;
	П0000200065.Колонки.Добавить("П000020006501",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200065.Добавить();
	ДопСтраницаРаздел2.ДанныеДопСтрок = Новый Структура("П0000200062, П0000200065", П0000200062, П0000200065);
	
	ДанныеДопСтрок.Вставить("Раздел4", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(40)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040002003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(20)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040003003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(16)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040004003",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040005003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел1", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1, "П00001000"));
	
	РазделыОтчета.Вставить("Раздел2", Новый Структура(
		"МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел4", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел4, "П00004000"));
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("РезультатАвтоформирования") Тогда
		ПараметрыАвтоФормирования.Вставить("РезультатАвтоформирования", Новый Массив);
	КонецЕсли;
		
	Если НЕ ПараметрыАвтоФормирования.Свойство("КПП")
	 ИЛИ НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", ПараметрыАвтоФормирования.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организация.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана,
		|	Организация.РегистрацияВНалоговомОргане.КПП КАК КПП
		|ИЗ
		|	Справочник.Организации КАК Организация
		|ГДЕ
		|	Организация.Ссылка = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("КПП") Тогда
				ПараметрыАвтоФормирования.Вставить("КПП", Выборка.КПП);
			КонецЕсли;
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
				ПараметрыАвтоФормирования.Вставить("НалоговыйОрган", Выборка.КодНалоговогоОргана);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв3(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП1    = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.КодИМНС = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ТаблВЗ = Новый ТаблицаЗначений;
	ТаблВЗ.Колонки.Добавить("КодПоказателя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблВЗ.Колонки.Добавить("ВариантЗаполнения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблВЗ.Колонки.Добавить("ЗначениеАвто", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Дельта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблВЗ.Колонки.Добавить("КодПоказателяПоСтруктуре", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблВЗ.Скопировать());
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	ТаблВЗРаздел2 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020007004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020008004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020009004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020010003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020011003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблВЗРаздел2);
	
	МассивВариантовЗаполненияСтраницРаздел3 = Новый Массив;
	ТаблВЗРаздел3 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030004003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030005003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел3.Добавить(ТаблВЗРаздел3);
	
	МассивВариантовЗаполненияСтраницРаздел4 = Новый Массив;
	ТаблВЗРаздел4 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел4 = ТаблВЗРаздел4.Добавить();
	НовСтр_ТаблВЗРаздел4.КодПоказателя = "П000040015003";
	НовСтр_ТаблВЗРаздел4.ВариантЗаполнения = 5;
	МассивВариантовЗаполненияСтраницРаздел4.Добавить(ТаблВЗРаздел4);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
	СтруктураВариантыЗаполнения.Вставить("Раздел3", МассивВариантовЗаполненияСтраницРаздел3);
	СтруктураВариантыЗаполнения.Вставить("Раздел4", МассивВариантовЗаполненияСтраницРаздел4);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв3(ДеревоСтраницОтчета, Организация);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИМНС", РазделыОтчета.Титульный.Данные.КодИМНС);
	ДанныеРеглОтчета.Вставить("КПП1", РазделыОтчета.Титульный.Данные.КПП1);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/07/2018");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Возврат ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв3(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2018Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
	ДанныеДопСтрок.Раздел1.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные",
		Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("ДанныеДопСтрок",
		Новый ОписаниеТипов("Структура"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Новая страница";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	П0000200062 = Новый ТаблицаЗначений;
	П0000200062.Колонки.Добавить("П000020006201",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200062.Добавить();
	П0000200065 = Новый ТаблицаЗначений;
	П0000200065.Колонки.Добавить("П000020006501",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200065.Добавить();
	ДопСтраницаРаздел2.ДанныеДопСтрок = Новый Структура("П0000200062, П0000200065", П0000200062, П0000200065);
	
	ДанныеДопСтрок.Вставить("Раздел4", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(40)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040002003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(20)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040003003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(16)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040004003",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	ДанныеДопСтрок.Раздел4.Колонки.Добавить("П000040005003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(7, 2)));
	ДанныеДопСтрок.Раздел4.Добавить();
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел1", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1, "П00001000"));
	
	РазделыОтчета.Вставить("Раздел2", Новый Структура(
		"МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел4", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел4, "П00004000"));
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("РезультатАвтоформирования") Тогда
		ПараметрыАвтоФормирования.Вставить("РезультатАвтоформирования", Новый Массив);
	КонецЕсли;
		
	Если НЕ ПараметрыАвтоФормирования.Свойство("КПП")
	 ИЛИ НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", ПараметрыАвтоФормирования.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организация.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана,
		|	Организация.РегистрацияВНалоговомОргане.КПП КАК КПП
		|ИЗ
		|	Справочник.Организации КАК Организация
		|ГДЕ
		|	Организация.Ссылка = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("КПП") Тогда
				ПараметрыАвтоФормирования.Вставить("КПП", Выборка.КПП);
			КонецЕсли;
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
				ПараметрыАвтоФормирования.Вставить("НалоговыйОрган", Выборка.КодНалоговогоОргана);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП1    = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.КодИМНС = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ТаблВЗ = Новый ТаблицаЗначений;
	ТаблВЗ.Колонки.Добавить("КодПоказателя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблВЗ.Колонки.Добавить("ВариантЗаполнения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблВЗ.Колонки.Добавить("ЗначениеАвто", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Дельта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблВЗ.Колонки.Добавить("КодПоказателяПоСтруктуре", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблВЗ.Скопировать());
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	ТаблВЗРаздел2 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020007004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020008004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020009004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020010003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020011003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблВЗРаздел2);
	
	МассивВариантовЗаполненияСтраницРаздел3 = Новый Массив;
	ТаблВЗРаздел3 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030003503";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030004003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел3.Добавить(ТаблВЗРаздел3);
	
	МассивВариантовЗаполненияСтраницРаздел4 = Новый Массив;
	ТаблВЗРаздел4 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел4 = ТаблВЗРаздел4.Добавить();
	НовСтр_ТаблВЗРаздел4.КодПоказателя = "П000040015003";
	НовСтр_ТаблВЗРаздел4.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел4.Добавить(ТаблВЗРаздел4);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
	СтруктураВариантыЗаполнения.Вставить("Раздел3", МассивВариантовЗаполненияСтраницРаздел3);
	СтруктураВариантыЗаполнения.Вставить("Раздел4", МассивВариантовЗаполненияСтраницРаздел4);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв1(ДеревоСтраницОтчета, Организация);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИМНС", РазделыОтчета.Титульный.Данные.КодИМНС);
	ДанныеРеглОтчета.Вставить("КПП1", РазделыОтчета.Титульный.Данные.КПП1);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/01/2018");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Возврат ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2017Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
	ДанныеДопСтрок.Раздел1.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные",
		Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("ДанныеДопСтрок",
		Новый ОписаниеТипов("Структура"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Новая страница";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	П0000200062 = Новый ТаблицаЗначений;
	П0000200062.Колонки.Добавить("П000020006201",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200062.Добавить();
	П0000200065 = Новый ТаблицаЗначений;
	П0000200065.Колонки.Добавить("П000020006501",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200065.Добавить();
	ДопСтраницаРаздел2.ДанныеДопСтрок = Новый Структура("П0000200062, П0000200065", П0000200062, П0000200065);
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел1", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1, "П00001000"));
	
	РазделыОтчета.Вставить("Раздел2", Новый Структура(
		"МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("РезультатАвтоформирования") Тогда
		ПараметрыАвтоФормирования.Вставить("РезультатАвтоформирования", Новый Массив);
	КонецЕсли;
		
	Если НЕ ПараметрыАвтоФормирования.Свойство("КПП")
	 ИЛИ НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", ПараметрыАвтоФормирования.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организация.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана,
		|	Организация.РегистрацияВНалоговомОргане.КПП КАК КПП
		|ИЗ
		|	Справочник.Организации КАК Организация
		|ГДЕ
		|	Организация.Ссылка = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("КПП") Тогда
				ПараметрыАвтоФормирования.Вставить("КПП", Выборка.КПП);
			КонецЕсли;
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
				ПараметрыАвтоФормирования.Вставить("НалоговыйОрган", Выборка.КодНалоговогоОргана);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеглОтчетЕНВДФормаОтчета2017Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП1    = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.КодИМНС = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ТаблВЗ = Новый ТаблицаЗначений;
	ТаблВЗ.Колонки.Добавить("КодПоказателя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблВЗ.Колонки.Добавить("ВариантЗаполнения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблВЗ.Колонки.Добавить("ЗначениеАвто", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Дельта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблВЗ.Колонки.Добавить("КодПоказателяПоСтруктуре", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблВЗ.Скопировать());
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	ТаблВЗРаздел2 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020007004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020008004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020009004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020010003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020011003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблВЗРаздел2);
	
	МассивВариантовЗаполненияСтраницРаздел3 = Новый Массив;
	ТаблВЗРаздел3 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030004003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел3.Добавить(ТаблВЗРаздел3);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
	СтруктураВариантыЗаполнения.Вставить("Раздел3", МассивВариантовЗаполненияСтраницРаздел3);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2017Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИМНС", РазделыОтчета.Титульный.Данные.КодИМНС);
	ДанныеРеглОтчета.Вставить("КПП1", РазделыОтчета.Титульный.Данные.КПП1);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/01/2017");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Возврат ЗаписатьРеглОтчетЕНВДФормаОтчета2017Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецФункции

Функция СформироватьАвтоматическиРеглОтчетЕНВДФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, КорректирующийОтчет, ПараметрыАвтоФормирования)
	
	ДанныеДопСтрок = Новый Структура;
	ДанныеДопСтрок.Вставить("Раздел1", Новый ТаблицаЗначений);
	
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010001003",
		Новый ОписаниеТипов("Строка", Новый КвалификаторыСтроки(11)));
	ДанныеДопСтрок.Раздел1.Колонки.Добавить("П000010002003",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(12, 2)));
	ДанныеДопСтрок.Раздел1.Добавить();
	
	ДанныеДопСтраниц = Новый Структура;
	ДанныеДопСтраниц.Вставить("Раздел2", Новый ТаблицаЗначений);
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254)));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АктивнаяСтраница",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("АвтоматическоеПредставление",
		Новый ОписаниеТипов("Булево"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("Данные",
		Новый ОписаниеТипов("Структура"));
	ДанныеДопСтраниц.Раздел2.Колонки.Добавить("ДанныеДопСтрок",
		Новый ОписаниеТипов("Структура"));
	ДопСтраницаРаздел2 = ДанныеДопСтраниц.Раздел2.Добавить();
	ДопСтраницаРаздел2.Представление = "Новая страница";
	ДопСтраницаРаздел2.АктивнаяСтраница = Ложь;
	ДопСтраницаРаздел2.АвтоматическоеПредставление = Истина;
	П0000200062 = Новый ТаблицаЗначений;
	П0000200062.Колонки.Добавить("П000020006201",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200062.Добавить();
	П0000200065 = Новый ТаблицаЗначений;
	П0000200065.Колонки.Добавить("П000020006501",
		Новый ОписаниеТипов("Дата", Новый КвалификаторыДаты(ЧастиДаты.Дата)));
	П0000200065.Добавить();
	ДопСтраницаРаздел2.ДанныеДопСтрок = Новый Структура("П0000200062, П0000200065", П0000200062, П0000200065);
	
	РазделыОтчета = Новый Структура;
	
	РазделыОтчета.Вставить("Титульный", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	РазделыОтчета.Вставить("Раздел1", Новый Структура(
		"МногостраничностьВРазделе, Данные, ДанныеДопСтрок, ИдентификаторДопСтрок",
		Ложь, Новый Структура, ДанныеДопСтрок.Раздел1, "П00001000"));
	
	РазделыОтчета.Вставить("Раздел2", Новый Структура(
		"МногостраничностьВРазделе, Данные", Истина, ДанныеДопСтраниц.Раздел2));
	
	РазделыОтчета.Вставить("Раздел3", Новый Структура(
		"МногостраничностьВРазделе, Данные", Ложь, Новый Структура));
	
	ДанныеРеглОтчета = Новый Структура;
	ДанныеРеглОтчета.Вставить("ДатаПодписи", ТекущаядатаСеанса());
	
	ПараметрыАвтоФормирования.Вставить("ДатаПодписи", ДанныеРеглОтчета.ДатаПодписи);
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("РезультатАвтоформирования") Тогда
		ПараметрыАвтоФормирования.Вставить("РезультатАвтоформирования", Новый Массив);
	КонецЕсли;
	
	Если НЕ ПараметрыАвтоФормирования.Свойство("КПП")
	 ИЛИ НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Организация", ПараметрыАвтоФормирования.Организация);
		
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	Организация.РегистрацияВНалоговомОргане.Код КАК КодНалоговогоОргана,
		|	Организация.РегистрацияВНалоговомОргане.КПП КАК КПП
		|ИЗ
		|	Справочник.Организации КАК Организация
		|ГДЕ
		|	Организация.Ссылка = &Организация";
		
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("КПП") Тогда
				ПараметрыАвтоФормирования.Вставить("КПП", Выборка.КПП);
			КонецЕсли;
			
			Если НЕ ПараметрыАвтоФормирования.Свойство("НалоговыйОрган") Тогда
				ПараметрыАвтоФормирования.Вставить("НалоговыйОрган", Выборка.КодНалоговогоОргана);
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЕсли;
	
	Если НЕ ЗаполнитьРеглОтчетЕНВДФормаОтчета2016Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.НомерКорректировки = ?(КорректирующийОтчет, 1, 0);
	РазделыОтчета.Титульный.Данные.КПП1    = СокрЛП(ПараметрыАвтоФормирования.КПП);
	РазделыОтчета.Титульный.Данные.КодИМНС = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ТаблВЗ = Новый ТаблицаЗначений;
	ТаблВЗ.Колонки.Добавить("КодПоказателя", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(15)));
	ТаблВЗ.Колонки.Добавить("ВариантЗаполнения", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ТаблВЗ.Колонки.Добавить("ЗначениеАвто", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Дельта", Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(15, 2)));
	ТаблВЗ.Колонки.Добавить("Комментарий", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблВЗ.Колонки.Добавить("КодПоказателяПоСтруктуре", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(50)));
	
	МассивВариантовЗаполненияСтраницРаздел1 = Новый Массив;
	МассивВариантовЗаполненияСтраницРаздел1.Добавить(ТаблВЗ.Скопировать());
	
	МассивВариантовЗаполненияСтраницРаздел2 = Новый Массив;
	ТаблВЗРаздел2 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020007004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020008004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020009004";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020010003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	НовСтр_ТаблВЗРаздел2 = ТаблВЗРаздел2.Добавить();
	НовСтр_ТаблВЗРаздел2.КодПоказателя = "П000020011003";
	НовСтр_ТаблВЗРаздел2.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел2.Добавить(ТаблВЗРаздел2);
	
	МассивВариантовЗаполненияСтраницРаздел3 = Новый Массив;
	ТаблВЗРаздел3 = ТаблВЗ.Скопировать();
	НовСтр_ТаблВЗРаздел3 = ТаблВЗРаздел3.Добавить();
	НовСтр_ТаблВЗРаздел3.КодПоказателя = "П000030004003";
	НовСтр_ТаблВЗРаздел3.ВариантЗаполнения = 4;
	МассивВариантовЗаполненияСтраницРаздел3.Добавить(ТаблВЗРаздел3);
	
	СтруктураВариантыЗаполнения = Новый Структура;
	
	СтруктураВариантыЗаполнения.Вставить("Раздел1", МассивВариантовЗаполненияСтраницРаздел1);
	СтруктураВариантыЗаполнения.Вставить("Раздел2", МассивВариантовЗаполненияСтраницРаздел2);
	СтруктураВариантыЗаполнения.Вставить("Раздел3", МассивВариантовЗаполненияСтраницРаздел3);
	
	ДеревоСтраницОтчета = Новый ДеревоЗначений;
	ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2016Кв1(ДеревоСтраницОтчета);
	
	ДанныеРеглОтчета.Вставить("ВидДокумента", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("НомерКорректировки", ?(КорректирующийОтчет, 1, 0));
	ДанныеРеглОтчета.Вставить("ЕдиницаИзмерения", Перечисления.ПорядкиОкругленияОтчетности.Окр1);
	ДанныеРеглОтчета.Вставить("ТочностьЕдиницыИзмерения", 0);
	ДанныеРеглОтчета.Вставить("Комментарий", "");
	ДанныеРеглОтчета.Вставить("КодИМНС", РазделыОтчета.Титульный.Данные.КодИМНС);
	ДанныеРеглОтчета.Вставить("КПП1", РазделыОтчета.Титульный.Данные.КПП1);
	ДанныеРеглОтчета.Вставить("ДанныеВариантовАвтоЗаполнения", СтруктураВариантыЗаполнения);
	ДанныеРеглОтчета.Вставить("ВерсияФормы", "01/01/2016");
	ДанныеРеглОтчета.Вставить("ФлПодсчетСтраниц", Неопределено);
	ДанныеРеглОтчета.Вставить("ФлОтклВыборЗначений", Ложь);
	ДанныеРеглОтчета.Вставить("Автозаполнение", Ложь);
	ДанныеРеглОтчета.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", Ложь);
	ДанныеРеглОтчета.Вставить("ДеревоСтраницОтчета", ДеревоСтраницОтчета);
	
	СсылкаНаСохрРеглОтчет = Неопределено;
	ПараметрыАвтоФормирования.Свойство("СсылкаНаСохрРеглОтчет", СсылкаНаСохрРеглОтчет);
	
	Возврат ЗаписатьРеглОтчетЕНВДФормаОтчета2016Кв1(ИмяФормыОтчета,
		Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет);
	
КонецФункции

Функция ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
	
	КПП   = СокрЛП(ПараметрыАвтоФормирования.КПП);
	КодНО = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
	
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан КПП.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. КПП указан некорректно.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан код налогового органа.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ (СтрДлина(КодНО) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО)) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. код налогового органа указан некорректно.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(
	Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ОпределятьТрудНаемныхРабочих
		= НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
		
		ИПИспользуетТрудНаемныхРаботников
		= РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация, ДатаНачала, ДатаОкончания);
		
		ДопПараметры = Новый Структура(
		"ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаКонцаПериодаОтчета",
		ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура;
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел3",   РазделыОтчета.Раздел3.Данные);
		Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
		
		Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
			
			ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
			
			РазделыОтчета.Раздел2.Данные = Контейнер.Раздел2;
			РазделыОтчета.Раздел4.ДанныеДопСтрок = Контейнер.Раздел4_ДанныеДопСтрок;
			
		Иначе
			
			РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
				"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв4(
		РазделыОтчета.Раздел2.Данные, ДатаНачала, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ТаблицаДопСтрокРаздела4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела4.Количество() Цикл
			ДопСтрокаРаздела4 = ТаблицаДопСтрокРаздела4[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела4.Колонки Цикл
				ДанныеРаздел4.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела4[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
		// Расчет данных в разделе 2.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв4(РазделыОтчета, "Раздел2", ДатаОкончания);
		
		// Расчет данных в разделе 4.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв4(РазделыОтчета, "Раздел4");
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		// Сбор данных в раздел 3 из раздела 2.
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		ЗначП000030001003 = 0;
		Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			Если Не ЗначениеЗаполнено(СтраницаРаздела2.Данные.П000020003000) Тогда
				Продолжить;
			КонецЕсли;
			ЗначП000030001003 = ЗначП000030001003 + Окр(СтраницаРаздела2.Данные.П000020011003);
		КонецЦикла;
		ДанныеРаздел3.П000030001003 = ЗначП000030001003;
		
		// Сбор данных в раздел 3 из раздела 4.
		ЗначП000030004003 = 0;
		Для каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
			ЗначП000030004003 = ЗначП000030004003 + Окр(ДопСтрока.П000040005003);
		КонецЦикла;
		ДанныеРаздел3.П000030004003 = ЗначП000030004003;
		
		// Расчет данных в разделе 3.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв4(РазделыОтчета, "Раздел3");
		
		// Формирование раздела 1.
		ИтоговаяТаблица = Новый ТаблицаЗначений;
		ИтоговаяТаблица.Колонки.Добавить("ОКТМО");
		ИтоговаяТаблица.Колонки.Добавить("Сумма");
		
		Для Каждого СтраницаРаздела2 из ТаблицаРаздела2 Цикл
			ОКТМО = СокрЛП(СтраницаРаздела2.Данные.П000020003000);
			Если НЕ ПустаяСтрока(ОКТМО) Тогда
				НовСтр = ИтоговаяТаблица.Добавить();
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.Сумма = Окр(СтраницаРаздела2.Данные.П000020011003);
			КонецЕсли;
		КонецЦикла;
		ИтоговаяТаблица.Свернуть("ОКТМО", "Сумма");
		
		ТаблицаДопСтрокРаздела1 = РазделыОтчета.Раздел1.ДанныеДопСтрок;
		ТаблицаДопСтрокРаздела1.Очистить();
		
		Раздел3Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Раздел3Строка050 = Окр(ДанныеРаздел3.П000030005003);
		
		ОсталосьОтразить = Раздел3Строка050;
		
		Если ИтоговаяТаблица.Количество() > 0 Тогда
			
			Для Инд = 0 По ИтоговаяТаблица.Количество() - 1 Цикл
				ТекСтр = ИтоговаяТаблица[Инд];
				
				ЭтоПоследняяСтрока = (Инд = ИтоговаяТаблица.Количество() - 1);
				Если ЭтоПоследняяСтрока Тогда
					// Учет округлений в последней строке.
					СуммаНалога = ОсталосьОтразить;
				Иначе
					Если Раздел3Строка010 = 0 Тогда
						СуммаНалога = 0;
					Иначе
						СуммаНалога = Окр(ТекСтр.Сумма * (Раздел3Строка050 / Раздел3Строка010), 2);
					КонецЕсли;
				КонецЕсли;
				
				НоваяДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1.Добавить();
				
				НоваяДопСтрокаРаздела1.П000010001003 = ТекСтр.ОКТМО;
				НоваяДопСтрокаРаздела1.П000010002003 = СуммаНалога;
				
				ОсталосьОтразить = ОсталосьОтразить - Окр(СуммаНалога);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаДопСтрокРаздела1.Добавить();
			
		КонецЕсли;
		
		ДанныеРаздел1 = РазделыОтчета.Раздел1.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела1.Количество() Цикл
			ДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела1.Колонки Цикл
				ДанныеРаздел1.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела1[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв3(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
	
	КПП   = СокрЛП(ПараметрыАвтоФормирования.КПП);
	КодНО = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
	
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан КПП.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. КПП указан некорректно.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан код налогового органа.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ (СтрДлина(КодНО) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО)) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. код налогового органа указан некорректно.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(
	Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ОпределятьТрудНаемныхРабочих
		= НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
		
		ИПИспользуетТрудНаемныхРаботников
		= РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация, ДатаНачала, ДатаОкончания);
		
		ДопПараметры = Новый Структура(
		"ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаКонцаПериодаОтчета",
		ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура;
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел3",   РазделыОтчета.Раздел3.Данные);
		Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
		
		Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
			
			ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
			
			РазделыОтчета.Раздел2.Данные = Контейнер.Раздел2;
			РазделыОтчета.Раздел4.ДанныеДопСтрок = Контейнер.Раздел4_ДанныеДопСтрок;
			
		Иначе
			
			РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
				"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв3(
		РазделыОтчета.Раздел2.Данные, ДатаНачала, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ТаблицаДопСтрокРаздела4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела4.Количество() Цикл
			ДопСтрокаРаздела4 = ТаблицаДопСтрокРаздела4[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела4.Колонки Цикл
				ДанныеРаздел4.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела4[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
		// Расчет данных в разделе 2.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв3(РазделыОтчета, "Раздел2", ДатаОкончания);
		
		// Расчет данных в разделе 4.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв3(РазделыОтчета, "Раздел4");
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		// Сбор данных в раздел 3 из раздела 2.
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		ЗначП000030001003 = 0;
		Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			Если Не ЗначениеЗаполнено(СтраницаРаздела2.Данные.П000020003000) Тогда
				Продолжить;
			КонецЕсли;
			ЗначП000030001003 = ЗначП000030001003 + Окр(СтраницаРаздела2.Данные.П000020011003);
		КонецЦикла;
		ДанныеРаздел3.П000030001003 = ЗначП000030001003;
		
		// Сбор данных в раздел 3 из раздела 4.
		ЗначП000030004003 = 0;
		Для каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
			ЗначП000030004003 = ЗначП000030004003 + Окр(ДопСтрока.П000040005003);
		КонецЦикла;
		ДанныеРаздел3.П000030004003 = ЗначП000030004003;
		
		// Расчет данных в разделе 3.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв3(РазделыОтчета, "Раздел3");
		
		// Формирование раздела 1.
		ИтоговаяТаблица = Новый ТаблицаЗначений;
		ИтоговаяТаблица.Колонки.Добавить("ОКТМО");
		ИтоговаяТаблица.Колонки.Добавить("Сумма");
		
		Для Каждого СтраницаРаздела2 из ТаблицаРаздела2 Цикл
			ОКТМО = СокрЛП(СтраницаРаздела2.Данные.П000020003000);
			Если НЕ ПустаяСтрока(ОКТМО) Тогда
				НовСтр = ИтоговаяТаблица.Добавить();
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.Сумма = Окр(СтраницаРаздела2.Данные.П000020011003);
			КонецЕсли;
		КонецЦикла;
		ИтоговаяТаблица.Свернуть("ОКТМО", "Сумма");
		
		ТаблицаДопСтрокРаздела1 = РазделыОтчета.Раздел1.ДанныеДопСтрок;
		ТаблицаДопСтрокРаздела1.Очистить();
		
		Раздел3Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Раздел3Строка050 = Окр(ДанныеРаздел3.П000030005003);
		
		ОсталосьОтразить = Раздел3Строка050;
		
		Если ИтоговаяТаблица.Количество() > 0 Тогда
			
			Для Инд = 0 По ИтоговаяТаблица.Количество() - 1 Цикл
				ТекСтр = ИтоговаяТаблица[Инд];
				
				ЭтоПоследняяСтрока = (Инд = ИтоговаяТаблица.Количество() - 1);
				Если ЭтоПоследняяСтрока Тогда
					// Учет округлений в последней строке.
					СуммаНалога = ОсталосьОтразить;
				Иначе
					Если Раздел3Строка010 = 0 Тогда
						СуммаНалога = 0;
					Иначе
						СуммаНалога = Окр(ТекСтр.Сумма * (Раздел3Строка050 / Раздел3Строка010), 2);
					КонецЕсли;
				КонецЕсли;
				
				НоваяДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1.Добавить();
				
				НоваяДопСтрокаРаздела1.П000010001003 = ТекСтр.ОКТМО;
				НоваяДопСтрокаРаздела1.П000010002003 = СуммаНалога;
				
				ОсталосьОтразить = ОсталосьОтразить - Окр(СуммаНалога);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаДопСтрокРаздела1.Добавить();
			
		КонецЕсли;
		
		ДанныеРаздел1 = РазделыОтчета.Раздел1.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела1.Количество() Цикл
			ДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела1.Колонки Цикл
				ДанныеРаздел1.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела1[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаполнитьРеглОтчетЕНВДФормаОтчета2018Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
	
	КПП   = СокрЛП(ПараметрыАвтоФормирования.КПП);
	КодНО = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
	
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан КПП.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. КПП указан некорректно.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан код налогового органа.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ (СтрДлина(КодНО) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО)) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. код налогового органа указан некорректно.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(
	Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ОпределятьТрудНаемныхРабочих
		= НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
		
		ИПИспользуетТрудНаемныхРаботников
		= РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация, ДатаНачала, ДатаОкончания);
		
		ДопПараметры = Новый Структура(
		"ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаКонцаПериодаОтчета",
		ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура;
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел3",   РазделыОтчета.Раздел3.Данные);
		Контейнер.Вставить("Раздел4_ДанныеДопСтрок", РазделыОтчета.Раздел4.ДанныеДопСтрок);
		
		Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
			
			ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
			
			РазделыОтчета.Раздел2.Данные = Контейнер.Раздел2;
			РазделыОтчета.Раздел4.ДанныеДопСтрок = Контейнер.Раздел4_ДанныеДопСтрок;
			
		Иначе
			
			РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
				"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		Если РазделыОтчета.Раздел4.ДанныеДопСтрок.Количество() = 0 Тогда
			РазделыОтчета.Раздел4.ДанныеДопСтрок.Добавить();
		КонецЕсли;
		
		РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв1(
		РазделыОтчета.Раздел2.Данные, ДатаНачала, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ТаблицаДопСтрокРаздела4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела4.Количество() Цикл
			ДопСтрокаРаздела4 = ТаблицаДопСтрокРаздела4[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела4.Колонки Цикл
				ДанныеРаздел4.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела4[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
		// Расчет данных в разделе 2.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв1(РазделыОтчета, "Раздел2", ДатаОкончания);
		
		// Расчет данных в разделе 4.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв1(РазделыОтчета, "Раздел4");
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		// Сбор данных в раздел 3 из раздела 2.
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		ЗначП000030001003 = 0;
		Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			Если Не ЗначениеЗаполнено(СтраницаРаздела2.Данные.П000020003000) Тогда
				Продолжить;
			КонецЕсли;
			ЗначП000030001003 = ЗначП000030001003 + Окр(СтраницаРаздела2.Данные.П000020011003);
		КонецЦикла;
		ДанныеРаздел3.П000030001003 = ЗначП000030001003;
		
		// Сбор данных в раздел 3 из пояснительной записки.
		ЗначП000030003503 = 0;
		Для каждого ДопСтрока Из РазделыОтчета.Раздел4.ДанныеДопСтрок Цикл
			ЗначП000030003503 = ЗначП000030003503 + Окр(ДопСтрока.П000040005003);
		КонецЦикла;
		ДанныеРаздел3.П000030003503 = ЗначП000030003503;
		
		// Расчет данных в разделе 3.
		РасчетРеглОтчетЕНВДФормаОтчета2018Кв1(РазделыОтчета, "Раздел3");
		
		// Формирование раздела 1.
		ИтоговаяТаблица = Новый ТаблицаЗначений;
		ИтоговаяТаблица.Колонки.Добавить("ОКТМО");
		ИтоговаяТаблица.Колонки.Добавить("Сумма");
		
		Для Каждого СтраницаРаздела2 из ТаблицаРаздела2 Цикл
			ОКТМО = СокрЛП(СтраницаРаздела2.Данные.П000020003000);
			Если НЕ ПустаяСтрока(ОКТМО) Тогда
				НовСтр = ИтоговаяТаблица.Добавить();
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.Сумма = Окр(СтраницаРаздела2.Данные.П000020011003);
			КонецЕсли;
		КонецЦикла;
		ИтоговаяТаблица.Свернуть("ОКТМО", "Сумма");
		
		ТаблицаДопСтрокРаздела1 = РазделыОтчета.Раздел1.ДанныеДопСтрок;
		ТаблицаДопСтрокРаздела1.Очистить();
		
		Раздел3Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Раздел3Строка040 = Окр(ДанныеРаздел3.П000030004003);
		
		ОсталосьОтразить = Раздел3Строка040;
		
		Если ИтоговаяТаблица.Количество() > 0 Тогда
			
			Для Инд = 0 По ИтоговаяТаблица.Количество() - 1 Цикл
				ТекСтр = ИтоговаяТаблица[Инд];
				
				ЭтоПоследняяСтрока = (Инд = ИтоговаяТаблица.Количество() - 1);
				Если ЭтоПоследняяСтрока Тогда
					// Учет округлений в последней строке.
					СуммаНалога = ОсталосьОтразить;
				Иначе
					Если Раздел3Строка010 = 0 Тогда
						СуммаНалога = 0;
					Иначе
						СуммаНалога = Окр(ТекСтр.Сумма * (Раздел3Строка040 / Раздел3Строка010), 2);
					КонецЕсли;
				КонецЕсли;
				
				НоваяДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1.Добавить();
				
				НоваяДопСтрокаРаздела1.П000010001003 = ТекСтр.ОКТМО;
				НоваяДопСтрокаРаздела1.П000010002003 = СуммаНалога;
				
				ОсталосьОтразить = ОсталосьОтразить - Окр(СуммаНалога);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаДопСтрокРаздела1.Добавить();
			
		КонецЕсли;
		
		ДанныеРаздел1 = РазделыОтчета.Раздел1.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела1.Количество() Цикл
			ДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела1.Колонки Цикл
				ДанныеРаздел1.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела1[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаполнитьРеглОтчетЕНВДФормаОтчета2017Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
	
	КПП   = СокрЛП(ПараметрыАвтоФормирования.КПП);
	КодНО = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
	
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан КПП.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. КПП указан некорректно.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан код налогового органа.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ (СтрДлина(КодНО) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО)) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. код налогового органа указан некорректно.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(
	Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ОпределятьТрудНаемныхРабочих
		= НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
		
		ИПИспользуетТрудНаемныхРаботников
		= РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация, ДатаНачала, ДатаОкончания);
		
		ДопПараметры = Новый Структура(
		"ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаКонцаПериодаОтчета",
		ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура;
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел3",   РазделыОтчета.Раздел3.Данные);
		
		Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
			
			ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
			
			РазделыОтчета.Раздел2.Данные = Контейнер.Раздел2;
			
		Иначе
			
			РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
				"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2017Кв1(
		РазделыОтчета.Раздел2.Данные, ДатаНачала, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		// Расчет данных в разделе 2.
		РасчетРеглОтчетЕНВДФормаОтчета2017Кв1(РазделыОтчета, "Раздел2", ДатаОкончания);
		
		// Сбор данных в раздел 3 из раздела 2.
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		ЗначП000030001003 = 0;
		Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			Если Не ЗначениеЗаполнено(СтраницаРаздела2.Данные.П000020003000) Тогда
				Продолжить;
			КонецЕсли;
			ЗначП000030001003 = ЗначП000030001003 + Окр(СтраницаРаздела2.Данные.П000020011003);
		КонецЦикла;
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		ДанныеРаздел3.П000030001003 = ЗначП000030001003;
		
		// Расчет данных в разделе 3.
		РасчетРеглОтчетЕНВДФормаОтчета2017Кв1(РазделыОтчета, "Раздел3");
		
		// Формирование раздела 1.
		ИтоговаяТаблица = Новый ТаблицаЗначений;
		ИтоговаяТаблица.Колонки.Добавить("ОКТМО");
		ИтоговаяТаблица.Колонки.Добавить("Сумма");
		
		Для Каждого СтраницаРаздела2 из ТаблицаРаздела2 Цикл
			ОКТМО = СокрЛП(СтраницаРаздела2.Данные.П000020003000);
			Если НЕ ПустаяСтрока(ОКТМО) Тогда
				НовСтр = ИтоговаяТаблица.Добавить();
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.Сумма = Окр(СтраницаРаздела2.Данные.П000020011003);
			КонецЕсли;
		КонецЦикла;
		ИтоговаяТаблица.Свернуть("ОКТМО", "Сумма");
		
		ТаблицаДопСтрокРаздела1 = РазделыОтчета.Раздел1.ДанныеДопСтрок;
		ТаблицаДопСтрокРаздела1.Очистить();
		
		Раздел3Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Раздел3Строка040 = Окр(ДанныеРаздел3.П000030004003);
		
		ОсталосьОтразить = Раздел3Строка040;
		
		Если ИтоговаяТаблица.Количество() > 0 Тогда
			
			Для Инд = 0 По ИтоговаяТаблица.Количество() - 1 Цикл
				ТекСтр = ИтоговаяТаблица[Инд];
				
				ЭтоПоследняяСтрока = (Инд = ИтоговаяТаблица.Количество() - 1);
				Если ЭтоПоследняяСтрока Тогда
					// Учет округлений в последней строке.
					СуммаНалога = ОсталосьОтразить;
				Иначе
					Если Раздел3Строка010 = 0 Тогда
						СуммаНалога = 0;
					Иначе
						СуммаНалога = Окр(ТекСтр.Сумма * (Раздел3Строка040 / Раздел3Строка010), 2);
					КонецЕсли;
				КонецЕсли;
				
				НоваяДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1.Добавить();
				
				НоваяДопСтрокаРаздела1.П000010001003 = ТекСтр.ОКТМО;
				НоваяДопСтрокаРаздела1.П000010002003 = СуммаНалога;
				
				ОсталосьОтразить = ОсталосьОтразить - Окр(СуммаНалога);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаДопСтрокРаздела1.Добавить();
			
		КонецЕсли;
		
		ДанныеРаздел1 = РазделыОтчета.Раздел1.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела1.Количество() Цикл
			ДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела1.Колонки Цикл
				ДанныеРаздел1.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела1[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Функция ЗаполнитьРеглОтчетЕНВДФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ПараметрыАвтоФормирования)
	
	РезультатАвтоформирования = ПараметрыАвтоФормирования.РезультатАвтоформирования;
	
	КПП   = СокрЛП(ПараметрыАвтоФормирования.КПП);
	КодНО = СокрЛП(ПараметрыАвтоФормирования.НалоговыйОрган);
	
	ИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтатусПроверки = Истина;
	
	Если НЕ ИП Тогда
		
		Если НЕ ЗначениеЗаполнено(КПП) Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан КПП.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		ИначеЕсли НЕ СтрДлина(КПП) = 9 Тогда
			
			РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. КПП указан некорректно.'",
			СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
			СтатусПроверки = Ложь;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если НЕ ЗначениеЗаполнено(КодНО) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не указан код налогового органа.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	ИначеЕсли НЕ (СтрДлина(КодНО) = 4 И СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(КодНО)) Тогда
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. код налогового органа указан некорректно.'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		СтатусПроверки = Ложь;
		
	КонецЕсли;
	
	Если НЕ СтатусПроверки Тогда
		
		Возврат Ложь;
		
	КонецЕсли;
	
	ПараметрыОтбораРегистрацийВНО = Новый Структура;
	
	ПараметрыОтбораРегистрацийВНО.Вставить("КодНО", КодНО);
	Если НЕ ИП Тогда
		ПараметрыОтбораРегистрацийВНО.Вставить("КПП", КПП);
	КонецЕсли;
	
	РегистрацииВНО = РегламентированнаяОтчетность.РегистрацииОрганизацииВНалоговомОргане(
	Организация, ПараметрыОтбораРегистрацийВНО);
	
	Если РегистрацииВНО.Количество() > 0 Тогда
		
		ОпределятьТрудНаемныхРабочих
		= НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация);
		
		ИПИспользуетТрудНаемныхРаботников
		= РегламентированнаяОтчетность.ИПИспользуетТрудНаемныхРаботников(Организация, ДатаНачала, ДатаОкончания);
		
		ДопПараметры = Новый Структура(
		"ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников",
		ИП, ОпределятьТрудНаемныхРабочих, ИПИспользуетТрудНаемныхРаботников);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		ПараметрыОтчета = Новый Структура();
		ПараметрыОтчета.Вставить("Организация",             Организация);
		ПараметрыОтчета.Вставить("ДатаНачалаПериодаОтчета", ДатаНачала);
		ПараметрыОтчета.Вставить("ДатаКонцаПериодаОтчета",  ДатаОкончания);
		ПараметрыОтчета.Вставить("РегистрацииВНО",          РегистрацииВНО);
		
		Контейнер = Новый Структура;
		Контейнер.Вставить("Титульный", РазделыОтчета.Титульный.Данные);
		Контейнер.Вставить("Раздел2",   РазделыОтчета.Раздел2.Данные);
		Контейнер.Вставить("Раздел3",   РазделыОтчета.Раздел3.Данные);
		
		Если ПараметрыАвтоформирования.Свойство("ЗаполнятьВнешнимиДанными")
		   И ПараметрыАвтоформирования.ЗаполнятьВнешнимиДанными = Истина Тогда
			
			ИнтерфейсыВзаимодействияБРО.ЗаполнитьЗначенияСвойствСтруктурыПоИсточнику(Контейнер, ПараметрыАвтоформирования.ВнешниеДанные);
			
			РазделыОтчета.Раздел2.Данные = Контейнер.Раздел2;
			
		Иначе
			
			РегламентированнаяОтчетностьПереопределяемый.ЗаполнитьОтчет(
				"РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход", ИмяФормыОтчета, ПараметрыОтчета, Контейнер);
			
		КонецЕсли;
		
		РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2016Кв1(
		РазделыОтчета.Раздел2.Данные, ДатаНачала, ДатаОкончания);
		
		ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры);
		
		// Расчет данных в разделе 2.
		РасчетРеглОтчетЕНВДФормаОтчета2016Кв1(РазделыОтчета, "Раздел2", ДатаОкончания);
		
		// Сбор данных в раздел 3 из раздела 2.
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		ЗначП000030001003 = 0;
		Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			Если Не ЗначениеЗаполнено(СтраницаРаздела2.Данные.П000020003000) Тогда
				Продолжить;
			КонецЕсли;
			ЗначП000030001003 = ЗначП000030001003 + Окр(СтраницаРаздела2.Данные.П000020011003);
		КонецЦикла;
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		ДанныеРаздел3.П000030001003 = ЗначП000030001003;
		
		// Расчет данных в разделе 3.
		РасчетРеглОтчетЕНВДФормаОтчета2016Кв1(РазделыОтчета, "Раздел3");
		
		// Формирование раздела 1.
		ИтоговаяТаблица = Новый ТаблицаЗначений;
		ИтоговаяТаблица.Колонки.Добавить("ОКТМО");
		ИтоговаяТаблица.Колонки.Добавить("Сумма");
		
		Для Каждого СтраницаРаздела2 из ТаблицаРаздела2 Цикл
			ОКТМО = СокрЛП(СтраницаРаздела2.Данные.П000020003000);
			Если НЕ ПустаяСтрока(ОКТМО) Тогда
				НовСтр = ИтоговаяТаблица.Добавить();
				НовСтр.ОКТМО = ОКТМО;
				НовСтр.Сумма = Окр(СтраницаРаздела2.Данные.П000020011003);
			КонецЕсли;
		КонецЦикла;
		ИтоговаяТаблица.Свернуть("ОКТМО", "Сумма");
		
		ТаблицаДопСтрокРаздела1 = РазделыОтчета.Раздел1.ДанныеДопСтрок;
		ТаблицаДопСтрокРаздела1.Очистить();
		
		Раздел3Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Раздел3Строка040 = Окр(ДанныеРаздел3.П000030004003);
		
		ОсталосьОтразить = Раздел3Строка040;
		
		Если ИтоговаяТаблица.Количество() > 0 Тогда
			
			Для Инд = 0 По ИтоговаяТаблица.Количество() - 1 Цикл
				ТекСтр = ИтоговаяТаблица[Инд];
				
				ЭтоПоследняяСтрока = (Инд = ИтоговаяТаблица.Количество() - 1);
				Если ЭтоПоследняяСтрока Тогда
					// Учет округлений в последней строке.
					СуммаНалога = ОсталосьОтразить;
				Иначе
					Если Раздел3Строка010 = 0 Тогда
						СуммаНалога = 0;
					Иначе
						СуммаНалога = Окр(ТекСтр.Сумма * (Раздел3Строка040 / Раздел3Строка010), 2);
					КонецЕсли;
				КонецЕсли;
				
				НоваяДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1.Добавить();
				
				НоваяДопСтрокаРаздела1.П000010001003 = ТекСтр.ОКТМО;
				НоваяДопСтрокаРаздела1.П000010002003 = СуммаНалога;
				
				ОсталосьОтразить = ОсталосьОтразить - Окр(СуммаНалога);
				
			КонецЦикла;
			
		Иначе
			
			ТаблицаДопСтрокРаздела1.Добавить();
			
		КонецЕсли;
		
		ДанныеРаздел1 = РазделыОтчета.Раздел1.Данные;
		Для Инд = 1 По ТаблицаДопСтрокРаздела1.Количество() Цикл
			ДопСтрокаРаздела1 = ТаблицаДопСтрокРаздела1[Инд - 1];
			Постфикс = "_" + Формат(Инд, "ЧГ=");
			Для каждого Колонка Из ТаблицаДопСтрокРаздела1.Колонки Цикл
				ДанныеРаздел1.Вставить(Колонка.Имя + Постфикс, ДопСтрокаРаздела1[Колонка.Имя]);
			КонецЦикла;
		КонецЦикла;
		
	Иначе
		
		РезультатАвтоформирования.Добавить(НСтр(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
		"ru='Декларация по ЕНВД (Организация: %1, КПП: %2, код ИФНС: %3) не сформирована, т. к. не найдена соответствующая запись в справочнике ""Регистрации в налоговом органе"".'",
		СокрЛП(Организация.Наименование), СокрЛП(КПП), СокрЛП(КодНО))));
		
		Возврат Ложь;
		
	КонецЕсли;
	
	Возврат Истина;
	
КонецФункции

Процедура РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв4(ТаблицаРаздела2, ДатаНачала, ДатаОкончания)
	
	// Подготовка расчетного календаря.
	РасчетныйКалендарь = Новый Массив;
	
	ПервыйМесяцКвартала = Месяц(ДатаНачала);
	ДеньПериода = НачалоДня(ДатаНачала);
	КонечнаяДата = КонецДня(ДатаОкончания);
	
	Пока ДеньПериода <= КонечнаяДата Цикл
		
		ДанныеРасчетногоКалендаря = Новый Структура;
		
		ДанныеРасчетногоКалендаря.Вставить("Дата", ДеньПериода);
		ДанныеРасчетногоКалендаря.Вставить("МесяцКвартала", Месяц(ДеньПериода) - ПервыйМесяцКвартала + 1);
		ДанныеРасчетногоКалендаря.Вставить("Деятельность", 0);
		
		РасчетныйКалендарь.Добавить(ДанныеРасчетногоКалендаря);
		
		ДеньПериода = ДеньПериода + 86400; // следующий день
		
	КонецЦикла;
	
	// Расчет дней осуществления деятельности в многостраничном разделе 2.
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	ИдМСЧ_Раздел2_1 = "П0000200062";
	ИдМСЧ_Раздел2_2 = "П0000200065";
	
	Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
		
		ДанныеСтраницыРаздела2 = СтраницаРаздела2.Данные;
		
		РассчПоказатели = Новый Соответствие();
		РассчПоказатели.Вставить(1, "П000020007003");
		РассчПоказатели.Вставить(2, "П000020008003");
		РассчПоказатели.Вставить(3, "П000020009003");
		
		ЕстьСобытиеВМесяце = Новый Соответствие;
		ЕстьСобытиеВМесяце.Вставить(1, Ложь);
		ЕстьСобытиеВМесяце.Вставить(2, Ложь);
		ЕстьСобытиеВМесяце.Вставить(3, Ложь);
		
		ДатыСобытий = Новый ТаблицаЗначений;
		ДатыСобытий.Колонки.Добавить("ДатаСобытия", ОписаниеТиповДата);
		ДатыСобытий.Колонки.Добавить("ВидСобытия", ОписаниеТиповЧисло); // 0 - постановка, 1 - снятие
		
		ДатыСобытий.Индексы.Добавить("ДатаСобытия, ВидСобытия");
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаДаты = ДатыСобытий.Добавить();
				СтрокаДаты.ДатаСобытия = ЗначениеДаты;
				СтрокаДаты.ВидСобытия  = 0;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаПроверки = ДатыСобытий.Добавить();
				СтрокаПроверки.ДатаСобытия = ЗначениеДаты;
				СтрокаПроверки.ВидСобытия  = 1;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		ДатыСобытий.Сортировать("ДатаСобытия, ВидСобытия");
		
		Если ДатыСобытий.Количество() > 0 Тогда
			Если НачалоДня(ДатыСобытий[0].ДатаСобытия) <> НачалоДня(ДатаНачала) Тогда
				НачальноеСостяние = 1 - ДатыСобытий[0].ВидСобытия;
				НачальноеСобытие = ДатыСобытий.Вставить(0);
				НачальноеСобытие.ДатаСобытия = НачалоДня(ДатаНачала);
				НачальноеСобытие.ВидСобытия = НачальноеСостяние
			КонецЕсли;
			
			Для Инд = 0 По ДатыСобытий.Количество() - 1 Цикл
				Событие = ДатыСобытий[Инд];
				ВедениеДеятельности = 1 - Событие.ВидСобытия; // 0 - деятельнось не велась, 1 - деятельность велась
				ДатаИзменения = НачалоДня(Событие.ДатаСобытия);
				Для Каждого ДеньКалендаря Из РасчетныйКалендарь Цикл
					Если ДеньКалендаря.Дата >= ДатаИзменения Тогда
						ДеньКалендаря.Деятельность = ВедениеДеятельности;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаРасчетногоКалендаря = Новый ТаблицаЗначений;
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Дата", ОписаниеТиповДата);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("МесяцКвартала", ОписаниеТиповЧисло);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Деятельность", ОписаниеТиповЧисло);
		
		Для Каждого ЭлементМассива Из РасчетныйКалендарь Цикл
			НоваяСтрока = ТаблицаРасчетногоКалендаря.Добавить();
			НоваяСтрока.Дата = ЭлементМассива.Дата;
			НоваяСтрока.МесяцКвартала = ЭлементМассива.МесяцКвартала;
			НоваяСтрока.Деятельность = ЭлементМассива.Деятельность;
		КонецЦикла;
		
		Для Инд = 1 По 3 Цикл
			Если ЕстьСобытиеВМесяце[Инд] Тогда
				СтрокиМесяца = ТаблицаРасчетногоКалендаря.НайтиСтроки(Новый Структура("МесяцКвартала", Инд));
				КалендарьМесяца = ТаблицаРасчетногоКалендаря.Скопировать(СтрокиМесяца);
				КоличествоДнейДеятельности = КалендарьМесяца.Итог("Деятельность");
			Иначе
				КоличествоДнейДеятельности = 0;
			КонецЕсли;
			ДанныеСтраницыРаздела2.Вставить(РассчПоказатели[Инд], КоличествоДнейДеятельности);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв3(ТаблицаРаздела2, ДатаНачала, ДатаОкончания)
	
	// Подготовка расчетного календаря.
	РасчетныйКалендарь = Новый Массив;
	
	ПервыйМесяцКвартала = Месяц(ДатаНачала);
	ДеньПериода = НачалоДня(ДатаНачала);
	КонечнаяДата = КонецДня(ДатаОкончания);
	
	Пока ДеньПериода <= КонечнаяДата Цикл
		
		ДанныеРасчетногоКалендаря = Новый Структура;
		
		ДанныеРасчетногоКалендаря.Вставить("Дата", ДеньПериода);
		ДанныеРасчетногоКалендаря.Вставить("МесяцКвартала", Месяц(ДеньПериода) - ПервыйМесяцКвартала + 1);
		ДанныеРасчетногоКалендаря.Вставить("Деятельность", 0);
		
		РасчетныйКалендарь.Добавить(ДанныеРасчетногоКалендаря);
		
		ДеньПериода = ДеньПериода + 86400; // следующий день
		
	КонецЦикла;
	
	// Расчет дней осуществления деятельности в многостраничном разделе 2.
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	ИдМСЧ_Раздел2_1 = "П0000200062";
	ИдМСЧ_Раздел2_2 = "П0000200065";
	
	Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
		
		ДанныеСтраницыРаздела2 = СтраницаРаздела2.Данные;
		
		РассчПоказатели = Новый Соответствие();
		РассчПоказатели.Вставить(1, "П000020007003");
		РассчПоказатели.Вставить(2, "П000020008003");
		РассчПоказатели.Вставить(3, "П000020009003");
		
		ЕстьСобытиеВМесяце = Новый Соответствие;
		ЕстьСобытиеВМесяце.Вставить(1, Ложь);
		ЕстьСобытиеВМесяце.Вставить(2, Ложь);
		ЕстьСобытиеВМесяце.Вставить(3, Ложь);
		
		ДатыСобытий = Новый ТаблицаЗначений;
		ДатыСобытий.Колонки.Добавить("ДатаСобытия", ОписаниеТиповДата);
		ДатыСобытий.Колонки.Добавить("ВидСобытия", ОписаниеТиповЧисло); // 0 - постановка, 1 - снятие
		
		ДатыСобытий.Индексы.Добавить("ДатаСобытия, ВидСобытия");
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаДаты = ДатыСобытий.Добавить();
				СтрокаДаты.ДатаСобытия = ЗначениеДаты;
				СтрокаДаты.ВидСобытия  = 0;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаПроверки = ДатыСобытий.Добавить();
				СтрокаПроверки.ДатаСобытия = ЗначениеДаты;
				СтрокаПроверки.ВидСобытия  = 1;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		ДатыСобытий.Сортировать("ДатаСобытия, ВидСобытия");
		
		Если ДатыСобытий.Количество() > 0 Тогда
			Если НачалоДня(ДатыСобытий[0].ДатаСобытия) <> НачалоДня(ДатаНачала) Тогда
				НачальноеСостяние = 1 - ДатыСобытий[0].ВидСобытия;
				НачальноеСобытие = ДатыСобытий.Вставить(0);
				НачальноеСобытие.ДатаСобытия = НачалоДня(ДатаНачала);
				НачальноеСобытие.ВидСобытия = НачальноеСостяние
			КонецЕсли;
			
			Для Инд = 0 По ДатыСобытий.Количество() - 1 Цикл
				Событие = ДатыСобытий[Инд];
				ВедениеДеятельности = 1 - Событие.ВидСобытия; // 0 - деятельнось не велась, 1 - деятельность велась
				ДатаИзменения = НачалоДня(Событие.ДатаСобытия);
				Для Каждого ДеньКалендаря Из РасчетныйКалендарь Цикл
					Если ДеньКалендаря.Дата >= ДатаИзменения Тогда
						ДеньКалендаря.Деятельность = ВедениеДеятельности;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаРасчетногоКалендаря = Новый ТаблицаЗначений;
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Дата", ОписаниеТиповДата);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("МесяцКвартала", ОписаниеТиповЧисло);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Деятельность", ОписаниеТиповЧисло);
		
		Для Каждого ЭлементМассива Из РасчетныйКалендарь Цикл
			НоваяСтрока = ТаблицаРасчетногоКалендаря.Добавить();
			НоваяСтрока.Дата = ЭлементМассива.Дата;
			НоваяСтрока.МесяцКвартала = ЭлементМассива.МесяцКвартала;
			НоваяСтрока.Деятельность = ЭлементМассива.Деятельность;
		КонецЦикла;
		
		Для Инд = 1 По 3 Цикл
			Если ЕстьСобытиеВМесяце[Инд] Тогда
				СтрокиМесяца = ТаблицаРасчетногоКалендаря.НайтиСтроки(Новый Структура("МесяцКвартала", Инд));
				КалендарьМесяца = ТаблицаРасчетногоКалендаря.Скопировать(СтрокиМесяца);
				КоличествоДнейДеятельности = КалендарьМесяца.Итог("Деятельность");
			Иначе
				КоличествоДнейДеятельности = 0;
			КонецЕсли;
			ДанныеСтраницыРаздела2.Вставить(РассчПоказатели[Инд], КоличествоДнейДеятельности);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2018Кв1(ТаблицаРаздела2, ДатаНачала, ДатаОкончания)
	
	// Подготовка расчетного календаря.
	РасчетныйКалендарь = Новый Массив;
	
	ПервыйМесяцКвартала = Месяц(ДатаНачала);
	ДеньПериода = НачалоДня(ДатаНачала);
	КонечнаяДата = КонецДня(ДатаОкончания);
	
	Пока ДеньПериода <= КонечнаяДата Цикл
		
		ДанныеРасчетногоКалендаря = Новый Структура;
		
		ДанныеРасчетногоКалендаря.Вставить("Дата", ДеньПериода);
		ДанныеРасчетногоКалендаря.Вставить("МесяцКвартала", Месяц(ДеньПериода) - ПервыйМесяцКвартала + 1);
		ДанныеРасчетногоКалендаря.Вставить("Деятельность", 0);
		
		РасчетныйКалендарь.Добавить(ДанныеРасчетногоКалендаря);
		
		ДеньПериода = ДеньПериода + 86400; // следующий день
		
	КонецЦикла;
	
	// Расчет дней осуществления деятельности в многостраничном разделе 2.
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	ИдМСЧ_Раздел2_1 = "П0000200062";
	ИдМСЧ_Раздел2_2 = "П0000200065";
	
	Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
		
		ДанныеСтраницыРаздела2 = СтраницаРаздела2.Данные;
		
		РассчПоказатели = Новый Соответствие();
		РассчПоказатели.Вставить(1, "П000020007003");
		РассчПоказатели.Вставить(2, "П000020008003");
		РассчПоказатели.Вставить(3, "П000020009003");
		
		ЕстьСобытиеВМесяце = Новый Соответствие;
		ЕстьСобытиеВМесяце.Вставить(1, Ложь);
		ЕстьСобытиеВМесяце.Вставить(2, Ложь);
		ЕстьСобытиеВМесяце.Вставить(3, Ложь);
		
		ДатыСобытий = Новый ТаблицаЗначений;
		ДатыСобытий.Колонки.Добавить("ДатаСобытия", ОписаниеТиповДата);
		ДатыСобытий.Колонки.Добавить("ВидСобытия", ОписаниеТиповЧисло); // 0 - постановка, 1 - снятие
		
		ДатыСобытий.Индексы.Добавить("ДатаСобытия, ВидСобытия");
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаДаты = ДатыСобытий.Добавить();
				СтрокаДаты.ДатаСобытия = ЗначениеДаты;
				СтрокаДаты.ВидСобытия  = 0;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаПроверки = ДатыСобытий.Добавить();
				СтрокаПроверки.ДатаСобытия = ЗначениеДаты;
				СтрокаПроверки.ВидСобытия  = 1;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		ДатыСобытий.Сортировать("ДатаСобытия, ВидСобытия");
		
		Если ДатыСобытий.Количество() > 0 Тогда
			Если НачалоДня(ДатыСобытий[0].ДатаСобытия) <> НачалоДня(ДатаНачала) Тогда
				НачальноеСостяние = 1 - ДатыСобытий[0].ВидСобытия;
				НачальноеСобытие = ДатыСобытий.Вставить(0);
				НачальноеСобытие.ДатаСобытия = НачалоДня(ДатаНачала);
				НачальноеСобытие.ВидСобытия = НачальноеСостяние
			КонецЕсли;
			
			Для Инд = 0 По ДатыСобытий.Количество() - 1 Цикл
				Событие = ДатыСобытий[Инд];
				ВедениеДеятельности = 1 - Событие.ВидСобытия; // 0 - деятельнось не велась, 1 - деятельность велась
				ДатаИзменения = НачалоДня(Событие.ДатаСобытия);
				Для Каждого ДеньКалендаря Из РасчетныйКалендарь Цикл
					Если ДеньКалендаря.Дата >= ДатаИзменения Тогда
						ДеньКалендаря.Деятельность = ВедениеДеятельности;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаРасчетногоКалендаря = Новый ТаблицаЗначений;
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Дата", ОписаниеТиповДата);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("МесяцКвартала", ОписаниеТиповЧисло);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Деятельность", ОписаниеТиповЧисло);
		
		Для Каждого ЭлементМассива Из РасчетныйКалендарь Цикл
			НоваяСтрока = ТаблицаРасчетногоКалендаря.Добавить();
			НоваяСтрока.Дата = ЭлементМассива.Дата;
			НоваяСтрока.МесяцКвартала = ЭлементМассива.МесяцКвартала;
			НоваяСтрока.Деятельность = ЭлементМассива.Деятельность;
		КонецЦикла;
		
		Для Инд = 1 По 3 Цикл
			Если ЕстьСобытиеВМесяце[Инд] Тогда
				СтрокиМесяца = ТаблицаРасчетногоКалендаря.НайтиСтроки(Новый Структура("МесяцКвартала", Инд));
				КалендарьМесяца = ТаблицаРасчетногоКалендаря.Скопировать(СтрокиМесяца);
				КоличествоДнейДеятельности = КалендарьМесяца.Итог("Деятельность");
			Иначе
				КоличествоДнейДеятельности = 0;
			КонецЕсли;
			ДанныеСтраницыРаздела2.Вставить(РассчПоказатели[Инд], КоличествоДнейДеятельности);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2017Кв1(ТаблицаРаздела2, ДатаНачала, ДатаОкончания)
	
	// Подготовка расчетного календаря.
	РасчетныйКалендарь = Новый Массив;
	
	ПервыйМесяцКвартала = Месяц(ДатаНачала);
	ДеньПериода = НачалоДня(ДатаНачала);
	КонечнаяДата = КонецДня(ДатаОкончания);
	
	Пока ДеньПериода <= КонечнаяДата Цикл
		
		ДанныеРасчетногоКалендаря = Новый Структура;
		
		ДанныеРасчетногоКалендаря.Вставить("Дата", ДеньПериода);
		ДанныеРасчетногоКалендаря.Вставить("МесяцКвартала", Месяц(ДеньПериода) - ПервыйМесяцКвартала + 1);
		ДанныеРасчетногоКалендаря.Вставить("Деятельность", 0);
		
		РасчетныйКалендарь.Добавить(ДанныеРасчетногоКалендаря);
		
		ДеньПериода = ДеньПериода + 86400; // следующий день
		
	КонецЦикла;
	
	// Расчет дней осуществления деятельности в многостраничном разделе 2.
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	ИдМСЧ_Раздел2_1 = "П0000200062";
	ИдМСЧ_Раздел2_2 = "П0000200065";
	
	Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
		
		ДанныеСтраницыРаздела2 = СтраницаРаздела2.Данные;
		
		РассчПоказатели = Новый Соответствие();
		РассчПоказатели.Вставить(1, "П000020007003");
		РассчПоказатели.Вставить(2, "П000020008003");
		РассчПоказатели.Вставить(3, "П000020009003");
		
		ЕстьСобытиеВМесяце = Новый Соответствие;
		ЕстьСобытиеВМесяце.Вставить(1, Ложь);
		ЕстьСобытиеВМесяце.Вставить(2, Ложь);
		ЕстьСобытиеВМесяце.Вставить(3, Ложь);
		
		ДатыСобытий = Новый ТаблицаЗначений;
		ДатыСобытий.Колонки.Добавить("ДатаСобытия", ОписаниеТиповДата);
		ДатыСобытий.Колонки.Добавить("ВидСобытия", ОписаниеТиповЧисло); // 0 - постановка, 1 - снятие
		
		ДатыСобытий.Индексы.Добавить("ДатаСобытия, ВидСобытия");
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаДаты = ДатыСобытий.Добавить();
				СтрокаДаты.ДатаСобытия = ЗначениеДаты;
				СтрокаДаты.ВидСобытия  = 0;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаПроверки = ДатыСобытий.Добавить();
				СтрокаПроверки.ДатаСобытия = ЗначениеДаты;
				СтрокаПроверки.ВидСобытия  = 1;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		ДатыСобытий.Сортировать("ДатаСобытия, ВидСобытия");
		
		Если ДатыСобытий.Количество() > 0 Тогда
			Если НачалоДня(ДатыСобытий[0].ДатаСобытия) <> НачалоДня(ДатаНачала) Тогда
				НачальноеСостяние = 1 - ДатыСобытий[0].ВидСобытия;
				НачальноеСобытие = ДатыСобытий.Вставить(0);
				НачальноеСобытие.ДатаСобытия = НачалоДня(ДатаНачала);
				НачальноеСобытие.ВидСобытия = НачальноеСостяние
			КонецЕсли;
			
			Для Инд = 0 По ДатыСобытий.Количество() - 1 Цикл
				Событие = ДатыСобытий[Инд];
				ВедениеДеятельности = 1 - Событие.ВидСобытия; // 0 - деятельнось не велась, 1 - деятельность велась
				ДатаИзменения = НачалоДня(Событие.ДатаСобытия);
				Для Каждого ДеньКалендаря Из РасчетныйКалендарь Цикл
					Если ДеньКалендаря.Дата >= ДатаИзменения Тогда
						ДеньКалендаря.Деятельность = ВедениеДеятельности;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаРасчетногоКалендаря = Новый ТаблицаЗначений;
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Дата", ОписаниеТиповДата);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("МесяцКвартала", ОписаниеТиповЧисло);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Деятельность", ОписаниеТиповЧисло);
		
		Для Каждого ЭлементМассива Из РасчетныйКалендарь Цикл
			НоваяСтрока = ТаблицаРасчетногоКалендаря.Добавить();
			НоваяСтрока.Дата = ЭлементМассива.Дата;
			НоваяСтрока.МесяцКвартала = ЭлементМассива.МесяцКвартала;
			НоваяСтрока.Деятельность = ЭлементМассива.Деятельность;
		КонецЦикла;
		
		Для Инд = 1 По 3 Цикл
			Если ЕстьСобытиеВМесяце[Инд] Тогда
				СтрокиМесяца = ТаблицаРасчетногоКалендаря.НайтиСтроки(Новый Структура("МесяцКвартала", Инд));
				КалендарьМесяца = ТаблицаРасчетногоКалендаря.Скопировать(СтрокиМесяца);
				КоличествоДнейДеятельности = КалендарьМесяца.Итог("Деятельность");
			Иначе
				КоличествоДнейДеятельности = 0;
			КонецЕсли;
			ДанныеСтраницыРаздела2.Вставить(РассчПоказатели[Инд], КоличествоДнейДеятельности);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура РассчитатьДниОсуществленияДеятельностиЕНВДФормаОтчета2016Кв1(ТаблицаРаздела2, ДатаНачала, ДатаОкончания)
	
	// Подготовка расчетного календаря.
	РасчетныйКалендарь = Новый Массив;
	
	ПервыйМесяцКвартала = Месяц(ДатаНачала);
	ДеньПериода = НачалоДня(ДатаНачала);
	КонечнаяДата = КонецДня(ДатаОкончания);
	
	Пока ДеньПериода <= КонечнаяДата Цикл
		
		ДанныеРасчетногоКалендаря = Новый Структура;
		
		ДанныеРасчетногоКалендаря.Вставить("Дата", ДеньПериода);
		ДанныеРасчетногоКалендаря.Вставить("МесяцКвартала", Месяц(ДеньПериода) - ПервыйМесяцКвартала + 1);
		ДанныеРасчетногоКалендаря.Вставить("Деятельность", 0);
		
		РасчетныйКалендарь.Добавить(ДанныеРасчетногоКалендаря);
		
		ДеньПериода = ДеньПериода + 86400; // следующий день
		
	КонецЦикла;
	
	// Расчет дней осуществления деятельности в многостраничном разделе 2.
	ОписаниеТиповДата = Новый ОписаниеТипов("Дата", , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	ОписаниеТиповЧисло = Новый ОписаниеТипов("Число");
	
	ИдМСЧ_Раздел2_1 = "П0000200062";
	ИдМСЧ_Раздел2_2 = "П0000200065";
	
	Для каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
		
		ДанныеСтраницыРаздела2 = СтраницаРаздела2.Данные;
		
		РассчПоказатели = Новый Соответствие();
		РассчПоказатели.Вставить(1, "П000020007003");
		РассчПоказатели.Вставить(2, "П000020008003");
		РассчПоказатели.Вставить(3, "П000020009003");
		
		ЕстьСобытиеВМесяце = Новый Соответствие;
		ЕстьСобытиеВМесяце.Вставить(1, Ложь);
		ЕстьСобытиеВМесяце.Вставить(2, Ложь);
		ЕстьСобытиеВМесяце.Вставить(3, Ложь);
		
		ДатыСобытий = Новый ТаблицаЗначений;
		ДатыСобытий.Колонки.Добавить("ДатаСобытия", ОписаниеТиповДата);
		ДатыСобытий.Колонки.Добавить("ВидСобытия", ОписаниеТиповЧисло); // 0 - постановка, 1 - снятие
		
		ДатыСобытий.Индексы.Добавить("ДатаСобытия, ВидСобытия");
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_1 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаДаты = ДатыСобытий.Добавить();
				СтрокаДаты.ДатаСобытия = ЗначениеДаты;
				СтрокаДаты.ВидСобытия  = 0;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		НомСтр = 1;
		Пока ДанныеСтраницыРаздела2.Свойство(ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")) Цикл
			ЗначениеДаты = ДанныеСтраницыРаздела2[ИдМСЧ_Раздел2_2 + "01_" + Формат(НомСтр, "ЧГ=")];
			Если ЗначениеЗаполнено(ЗначениеДаты)
				И (НачалоДня(ДатаНачала) <= ЗначениеДаты
				И ЗначениеДаты <= КонецДня(ДатаОкончания)) Тогда
				СтрокаПроверки = ДатыСобытий.Добавить();
				СтрокаПроверки.ДатаСобытия = ЗначениеДаты;
				СтрокаПроверки.ВидСобытия  = 1;
				МесяцКварталаСобытия = Месяц(ЗначениеДаты) - ПервыйМесяцКвартала + 1;
				ЕстьСобытиеВМесяце.Вставить(МесяцКварталаСобытия, Истина);
			КонецЕсли;
			НомСтр = НомСтр + 1;
		КонецЦикла;
		
		ДатыСобытий.Сортировать("ДатаСобытия, ВидСобытия");
		
		Если ДатыСобытий.Количество() > 0 Тогда
			Если НачалоДня(ДатыСобытий[0].ДатаСобытия) <> НачалоДня(ДатаНачала) Тогда
				НачальноеСостяние = 1 - ДатыСобытий[0].ВидСобытия;
				НачальноеСобытие = ДатыСобытий.Вставить(0);
				НачальноеСобытие.ДатаСобытия = НачалоДня(ДатаНачала);
				НачальноеСобытие.ВидСобытия = НачальноеСостяние
			КонецЕсли;
			
			Для Инд = 0 По ДатыСобытий.Количество() - 1 Цикл
				Событие = ДатыСобытий[Инд];
				ВедениеДеятельности = 1 - Событие.ВидСобытия; // 0 - деятельнось не велась, 1 - деятельность велась
				ДатаИзменения = НачалоДня(Событие.ДатаСобытия);
				Для Каждого ДеньКалендаря Из РасчетныйКалендарь Цикл
					Если ДеньКалендаря.Дата >= ДатаИзменения Тогда
						ДеньКалендаря.Деятельность = ВедениеДеятельности;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
		КонецЕсли;
		
		ТаблицаРасчетногоКалендаря = Новый ТаблицаЗначений;
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Дата", ОписаниеТиповДата);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("МесяцКвартала", ОписаниеТиповЧисло);
		ТаблицаРасчетногоКалендаря.Колонки.Добавить("Деятельность", ОписаниеТиповЧисло);
		
		Для Каждого ЭлементМассива Из РасчетныйКалендарь Цикл
			НоваяСтрока = ТаблицаРасчетногоКалендаря.Добавить();
			НоваяСтрока.Дата = ЭлементМассива.Дата;
			НоваяСтрока.МесяцКвартала = ЭлементМассива.МесяцКвартала;
			НоваяСтрока.Деятельность = ЭлементМассива.Деятельность;
		КонецЦикла;
		
		Для Инд = 1 По 3 Цикл
			Если ЕстьСобытиеВМесяце[Инд] Тогда
				СтрокиМесяца = ТаблицаРасчетногоКалендаря.НайтиСтроки(Новый Структура("МесяцКвартала", Инд));
				КалендарьМесяца = ТаблицаРасчетногоКалендаря.Скопировать(СтрокиМесяца);
				КоличествоДнейДеятельности = КалендарьМесяца.Итог("Деятельность");
			Иначе
				КоличествоДнейДеятельности = 0;
			КонецЕсли;
			ДанныеСтраницыРаздела2.Вставить(РассчПоказатели[Инд], КоличествоДнейДеятельности);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв4(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	// Многострочный раздел.
	Если НаимРаздела = "Раздел1"
		ИЛИ НаимРаздела = "Раздел4" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Многостраничный раздел, имеющий две многострочные части.
	ИначеЕсли НаимРаздела = "Раздел2" Тогда
		
		Если Год(ДопПараметры["ДатаКонцаПериодаОтчета"]) >= 2020 Тогда
			ЗначениеК1 = 2.005;
		ИначеЕсли Год(ДопПараметры["ДатаКонцаПериодаОтчета"]) >= 2019 Тогда
			ЗначениеК1 = 1.915;
		Иначе
			ЗначениеК1 = 1.868;
		КонецЕсли;
		
		ТабличныйДокумент.Области.П000020005003.Значение = ЗначениеК1;
		ТабличныйДокумент.Области.П000020006003.Значение = 1;
		
		ТабличныйДокумент.Области.П000020006101.Значение = "";
		ТабличныйДокумент.Области.П000020006401.Значение = "";
		ТабличныйДокумент.Области.П000020006102.Значение = "V";
		ТабличныйДокумент.Области.П000020006402.Значение = "V";
		
		ТабличныйДокумент.Области.П000020007003.Значение = 0;
		ТабличныйДокумент.Области.П000020008003.Значение = 0;
		ТабличныйДокумент.Области.П000020009003.Значение = 0;
		
		ТабличныйДокумент.Области.П000020010503.Значение = 15;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		Если НаимРаздела = "Титульный" Тогда
			
			Если ДопПараметры.ИП Тогда
				ТабличныйДокумент.Области.ПоМесту.Значение = "120";
			Иначе
				ТабличныйДокумент.Области.ПоМесту.Значение = "214";
			КонецЕсли;
			
		ИначеЕсли НаимРаздела = "Раздел3" Тогда
			
			Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
				И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
				ТабличныйДокумент.Области.П000030000503.Значение = "2";
			Иначе
				ТабличныйДокумент.Области.П000030000503.Значение = "1";
			КонецЕсли;
			
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв3(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	// Многострочный раздел.
	Если НаимРаздела = "Раздел1"
		ИЛИ НаимРаздела = "Раздел4" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Многостраничный раздел, имеющий две многострочные части.
	ИначеЕсли НаимРаздела = "Раздел2" Тогда
		
		ЗначениеК1 = 1.868;
		
		ТабличныйДокумент.Области.П000020005003.Значение = ЗначениеК1;
		ТабличныйДокумент.Области.П000020006003.Значение = 1;
		
		ТабличныйДокумент.Области.П000020006101.Значение = "";
		ТабличныйДокумент.Области.П000020006401.Значение = "";
		ТабличныйДокумент.Области.П000020006102.Значение = "V";
		ТабличныйДокумент.Области.П000020006402.Значение = "V";
		
		ТабличныйДокумент.Области.П000020007003.Значение = 0;
		ТабличныйДокумент.Области.П000020008003.Значение = 0;
		ТабличныйДокумент.Области.П000020009003.Значение = 0;
		
		ТабличныйДокумент.Области.П000020010503.Значение = 15;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		Если НаимРаздела = "Титульный" Тогда
			
			Если ДопПараметры.ИП Тогда
				ТабличныйДокумент.Области.ПоМесту.Значение = "120";
			Иначе
				ТабличныйДокумент.Области.ПоМесту.Значение = "214";
			КонецЕсли;
			
		ИначеЕсли НаимРаздела = "Раздел3" Тогда
			
			Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
				И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
				ТабличныйДокумент.Области.П000030000503.Значение = "2";
			Иначе
				ТабличныйДокумент.Области.П000030000503.Значение = "1";
			КонецЕсли;
			
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	// Многострочный раздел.
	Если НаимРаздела = "Раздел1"
		ИЛИ НаимРаздела = "Раздел4" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Многостраничный раздел, имеющий две многострочные части.
	ИначеЕсли НаимРаздела = "Раздел2" Тогда
		
		ЗначениеК1 = 1.868;
		
		ТабличныйДокумент.Области.П000020005003.Значение = ЗначениеК1;
		ТабличныйДокумент.Области.П000020006003.Значение = 1;
		
		ТабличныйДокумент.Области.П000020006101.Значение = "";
		ТабличныйДокумент.Области.П000020006401.Значение = "";
		ТабличныйДокумент.Области.П000020006102.Значение = "V";
		ТабличныйДокумент.Области.П000020006402.Значение = "V";
		
		ТабличныйДокумент.Области.П000020007003.Значение = 0;
		ТабличныйДокумент.Области.П000020008003.Значение = 0;
		ТабличныйДокумент.Области.П000020009003.Значение = 0;
		
		ТабличныйДокумент.Области.П000020010503.Значение = 15;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		Если НаимРаздела = "Титульный" Тогда
			
			Если ДопПараметры.ИП Тогда
				ТабличныйДокумент.Области.ПоМесту.Значение = "120";
			Иначе
				ТабличныйДокумент.Области.ПоМесту.Значение = "214";
			КонецЕсли;
			
		ИначеЕсли НаимРаздела = "Раздел3" Тогда
			
			Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
				И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
				ТабличныйДокумент.Области.П000030000503.Значение = "2";
			Иначе
				ТабличныйДокумент.Области.П000030000503.Значение = "1";
			КонецЕсли;
			
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2017Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	// Многострочный раздел.
	Если НаимРаздела = "Раздел1" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Многостраничный раздел, имеющий две многострочные части.
	ИначеЕсли НаимРаздела = "Раздел2" Тогда
		
		ЗначениеК1 = ?(Год(ДопПараметры["ДатаКонцаПериодаОтчета"]) >= 2018, 1.868, 1.798);
		
		ТабличныйДокумент.Области.П000020005003.Значение = ЗначениеК1;
		ТабличныйДокумент.Области.П000020006003.Значение = 1;
		
		ТабличныйДокумент.Области.П000020006101.Значение = "";
		ТабличныйДокумент.Области.П000020006401.Значение = "";
		ТабличныйДокумент.Области.П000020006102.Значение = "V";
		ТабличныйДокумент.Области.П000020006402.Значение = "V";
		
		ТабличныйДокумент.Области.П000020007003.Значение = 0;
		ТабличныйДокумент.Области.П000020008003.Значение = 0;
		ТабличныйДокумент.Области.П000020009003.Значение = 0;
		
		ТабличныйДокумент.Области.П000020010503.Значение = 15;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		Если НаимРаздела = "Титульный" Тогда
			
			Если ДопПараметры.ИП Тогда
				ТабличныйДокумент.Области.ПоМесту.Значение = "120";
			Иначе
				ТабличныйДокумент.Области.ПоМесту.Значение = "214";
			КонецЕсли;
			
		ИначеЕсли НаимРаздела = "Раздел3" Тогда
			
			Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
				И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
				ТабличныйДокумент.Области.П000030000503.Значение = "2";
			Иначе
				ТабличныйДокумент.Области.П000030000503.Значение = "1";
			КонецЕсли;
			
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2016Кв1(НаимРаздела, ТабличныйДокумент, РазделыОтчета, ДопПараметры)
	
	// Многострочный раздел.
	Если НаимРаздела = "Раздел1" Тогда
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
		ИнтерфейсыВзаимодействияБРО.ОбновитьСтруктуруМногострочногоРаздела(РазделыОтчета[НаимРаздела].ДанныеДопСтрок, ТабличныйДокумент);
		
	// Многостраничный раздел, имеющий две многострочные части.
	ИначеЕсли НаимРаздела = "Раздел2" Тогда
		
		ТабличныйДокумент.Области.П000020005003.Значение = 1.798;
		ТабличныйДокумент.Области.П000020006003.Значение = 1;
		
		ТабличныйДокумент.Области.П000020006101.Значение = "";
		ТабличныйДокумент.Области.П000020006401.Значение = "";
		ТабличныйДокумент.Области.П000020006102.Значение = "V";
		ТабличныйДокумент.Области.П000020006402.Значение = "V";
		
		ТабличныйДокумент.Области.П000020007003.Значение = 0;
		ТабличныйДокумент.Области.П000020008003.Значение = 0;
		ТабличныйДокумент.Области.П000020009003.Значение = 0;
		
		ТабличныйДокумент.Области.П000020010503.Значение = 15;
		
		РазделыОтчета[НаимРаздела].Данные[0].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	// Обычные разделы.
	Иначе
		
		Если НаимРаздела = "Титульный" Тогда
			
			Если ДопПараметры.ИП Тогда
				ТабличныйДокумент.Области.ПоМесту.Значение = "120";
			Иначе
				ТабличныйДокумент.Области.ПоМесту.Значение = "214";
			КонецЕсли;
			
		ИначеЕсли НаимРаздела = "Раздел3" Тогда
			
			Если ДопПараметры.ОпределятьТрудНаемныхРабочих И ДопПараметры.ИП
				И НЕ ДопПараметры.ИПИспользуетТрудНаемныхРаботников Тогда
				ТабличныйДокумент.Области.П000030000503.Значение = "2";
			Иначе
				ТабличныйДокумент.Области.П000030000503.Значение = "1";
			КонецЕсли;
			
		КонецЕсли;
		
		РазделыОтчета[НаимРаздела].Данные = ИнтерфейсыВзаимодействияБРО.СобратьДанные(ТабличныйДокумент);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв4(ДеревоСтраницОтчета, Организация)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел4";
	СтрокаУровня1.Представление      = "Раздел 4";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ПоказатьСтраницу   = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв3(ДеревоСтраницОтчета, Организация)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел4";
	СтрокаУровня1.Представление      = "Раздел 4";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ПоказатьСтраницу   = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2018Кв1(ДеревоСтраницОтчета, Организация)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	ЭтоИП = НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация);
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел4";
	СтрокаУровня1.Представление      = "Пояснительная записка";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ПоказатьСтраницу   = ?(ЭтоИП, 1, 0);
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2017Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

Процедура ФормироватьСтруктуруСтраницРеглОтчетЕНВДФормаОтчета2016Кв1(ДеревоСтраницОтчета)
	
	ДеревоСтраницОтчета.Колонки.Добавить("Представление",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяСтраницы",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяПоляТабличногоДокум",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ИмяОбластиТабличногоПоля",
		Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ДеревоСтраницОтчета.Колонки.Добавить("ОриентацияСтраницы");
	ДеревоСтраницОтчета.Колонки.Добавить("ВыводНаПечать",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ПоказатьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	ДеревоСтраницОтчета.Колонки.Добавить("ВыгрузитьСтраницу",
		Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(1, 0)));
	
	ДеревоСтраницОтчета.Строки.Очистить();
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Титульный";
	СтрокаУровня1.Представление      = "Титульный лист";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел1";
	СтрокаУровня1.Представление      = "Раздел 1";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел2";
	СтрокаУровня1.Представление      = "Раздел 2";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
	СтрокаУровня1 = ДеревоСтраницОтчета.Строки.Добавить();
	СтрокаУровня1.ИмяСтраницы        = "Раздел3";
	СтрокаУровня1.Представление      = "Раздел 3";
	СтрокаУровня1.ОриентацияСтраницы = "Портрет";
	СтрокаУровня1.ВыводНаПечать      = 1;
	СтрокаУровня1.ПоказатьСтраницу   = 1;
	СтрокаУровня1.ВыгрузитьСтраницу  = 2;
	
КонецПроцедуры

Функция ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв4(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по ЕНВД";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИМНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП1;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 22;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 23;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 24;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв4(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв3(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по ЕНВД";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИМНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП1;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 22;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 23;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 24;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв3(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетЕНВДФормаОтчета2018Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по ЕНВД";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИМНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП1;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 22;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 23;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 24;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетЕНВДФормаОтчета2017Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по ЕНВД";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИМНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП1;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 22;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 23;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 24;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2017Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Функция ЗаписатьРеглОтчетЕНВДФормаОтчета2016Кв1(ИмяФормыОтчета, Организация, ДатаНачала, ДатаОкончания, РазделыОтчета, ДанныеРеглОтчета, СсылкаНаСохрРеглОтчет = Неопределено)
	
	Вариант = ДанныеРеглОтчета.ВидДокумента * ДанныеРеглОтчета.НомерКорректировки;
	
	Если ЗначениеЗаполнено(СсылкаНаСохрРеглОтчет) Тогда
		
		ДокументРегламентированныйОтчет = СсылкаНаСохрРеглОтчет.ПолучитьОбъект();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		
	Иначе
		
		ДокументРегламентированныйОтчет = Документы.РегламентированныйОтчет.СоздатьДокумент();
		
		ДокументРегламентированныйОтчет.Заблокировать();
		ДокументРегламентированныйОтчет.Дата = ДатаОкончания;
		ДокументРегламентированныйОтчет.УстановитьВремя();
		ДокументРегламентированныйОтчет.УстановитьНовыйНомер();
		
	КонецЕсли;
	
	ДокументРегламентированныйОтчет.ИсточникОтчета           = "РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход";
	ДокументРегламентированныйОтчет.НаименованиеОтчета       = "Декларация по ЕНВД";
	ДокументРегламентированныйОтчет.ДатаНачала               = ДатаНачала;
	ДокументРегламентированныйОтчет.ДатаОкончания            = ДатаОкончания;
	ДокументРегламентированныйОтчет.Периодичность            = Перечисления.Периодичность.Квартал;
	ДокументРегламентированныйОтчет.ВыбраннаяФорма           = ИмяФормыОтчета;
	ДокументРегламентированныйОтчет.Организация              = Организация;
	ДокументРегламентированныйОтчет.ДатаПодписи              = ДанныеРеглОтчета.ДатаПодписи;
	ДокументРегламентированныйОтчет.ЕдиницаИзмерения         = ДанныеРеглОтчета.ЕдиницаИзмерения;
	ДокументРегламентированныйОтчет.ТочностьЕдиницыИзмерения = ДанныеРеглОтчета.ТочностьЕдиницыИзмерения;
	ДокументРегламентированныйОтчет.ВидОтчетности            = Перечисления.ВидыОтчетности.РегламентированнаяОтчетность;
	ДокументРегламентированныйОтчет.Комментарий              = ДанныеРеглОтчета.Комментарий;
	ДокументРегламентированныйОтчет.КодНалоговогоОргана      = ДанныеРеглОтчета.КодИМНС;
	ДокументРегламентированныйОтчет.КПП                      = ДанныеРеглОтчета.КПП1;
	ДокументРегламентированныйОтчет.Вид                      = Вариант;
	ДокументРегламентированныйОтчет.ПредставлениеВида        = РегламентированнаяОтчетность.ПредставлениеВидаДокумента(ДокументРегламентированныйОтчет.Вид);
	ДокументРегламентированныйОтчет.ФорматВыгрузки           = "Автоматически";
	
	МесяцОкончания = Месяц(ДатаОкончания);
	
	КодОтчетногоПериода = 0;
	Если МесяцОкончания = 3 Тогда
		КодОтчетногоПериода = 21;
	ИначеЕсли МесяцОкончания = 6 Тогда
		КодОтчетногоПериода = 22;
	ИначеЕсли МесяцОкончания = 9 Тогда
		КодОтчетногоПериода = 23;
	ИначеЕсли МесяцОкончания = 12 Тогда
		КодОтчетногоПериода = 24;
	КонецЕсли;
	
	РазделыОтчета.Титульный.Данные.Период = Формат(КодОтчетногоПериода, "ЧЦ=2; ЧВН=");
	
	РазделыОтчета.Титульный.Данные.ОтчетГод = Формат(Год(ДатаОкончания), "ЧГ=");
	
	РазделыОтчета.Титульный.Данные.ДатаПодписи = ДанныеРеглОтчета.ДатаПодписи;
	
	ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2016Кв1(Организация, РазделыОтчета, ДанныеРеглОтчета.ДатаПодписи, ДатаОкончания);
	
	ПоказателиОтчета = Новый Структура();
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьПоказателиОтчета(РазделыОтчета, ПоказателиОтчета);
	
	СписокСохранения = Новый Структура();
	
	СписокСохранения.Вставить("ПоказателиОтчета", ПоказателиОтчета);
	
	ДанныеМногострочныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если Раздел.Значение.Свойство("ДанныеДопСтрок") Тогда
			
			ДанныеМногострочныхРазделов.Вставить(Раздел.Значение.ИдентификаторДопСтрок, Раздел.Значение.ДанныеДопСтрок);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногострочныхРазделов", ДанныеМногострочныхРазделов);
	
	ДанныеМногостраничныхРазделов = Новый Структура;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		
		Если ТипЗнч(Раздел.Значение.Данные) = Тип("ТаблицаЗначений") Тогда
			
			ДанныеМногостраничныхРазделов.Вставить(Раздел.Ключ, Раздел.Значение.Данные);
			
		КонецЕсли;
		
	КонецЦикла;
	
	СписокСохранения.Вставить("ДанныеМногостраничныхРазделов", ДанныеМногостраничныхРазделов);
	
	СписокСохранения.Вставить("ДанныеВариантовАвтоЗаполнения", ДанныеРеглОтчета.ДанныеВариантовАвтоЗаполнения);
	
	СписокСохранения.Вставить("ВерсияФормы", ДанныеРеглОтчета.ВерсияФормы);
	
	СписокСохранения.Вставить("ФлПодсчетСтраниц", ДанныеРеглОтчета.ФлПодсчетСтраниц);
	
	СписокСохранения.Вставить("ФлОтклВыборЗначений", ДанныеРеглОтчета.ФлОтклВыборЗначений);
	
	СписокСохранения.Вставить("Автозаполнение", ДанныеРеглОтчета.Автозаполнение);
	
	СписокСохранения.Вставить("ФлПроверятьСоотношенияПриПечатиИВыгрузки", ДанныеРеглОтчета.ФлПроверятьСоотношенияПриПечатиИВыгрузки);
	
	ДокументРегламентированныйОтчет.ДанныеОтчета = Новый ХранилищеЗначения(СписокСохранения);
	
	ДокументРегламентированныйОтчет.ДеревоНастройкиСтраниц = Новый ХранилищеЗначения(ДанныеРеглОтчета.ДеревоСтраницОтчета);
	
	Попытка
		ДокументРегламентированныйОтчет.Записать();
	Исключение
		ОбщегоНазначения.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(НСтр("ru = '%1';
																											|en = '%1'"),
			РегламентированнаяОтчетностьКлиентСервер.СформироватьТекстСообщения(ОписаниеОшибки())));
		Возврат Ложь;
	КонецПопытки;
	
	ДокументРегламентированныйОтчет.Разблокировать();
	
	Возврат ДокументРегламентированныйОтчет.Ссылка;
	
КонецФункции

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв4(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СведенияОбОрганизации
	= РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	Организация, ДатаПодписи, "ИННЮЛ, НаимЮЛПол, ТелОрганизации, ФИО");
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
	КонецЕсли;
	
	ТитульныйДанные.Вставить("НаимОрг",        НаименованиеОрганизации);
	ТитульныйДанные.Вставить("ИНН1",           СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	
	ПереопределяемыеИменаПоказателей
	= Новый Структура("ИмяПоказателяКодНО,ИмяПоказателяКПП", "КодИМНС", "КПП1");
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(
	Организация, РазделыОтчета, ДатаПодписи, ПереопределяемыеИменаПоказателей);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв3(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СведенияОбОрганизации
	= РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	Организация, ДатаПодписи, "ИННЮЛ, НаимЮЛПол, ТелОрганизации, ФИО");
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
	КонецЕсли;
	
	ТитульныйДанные.Вставить("НаимОрг",        НаименованиеОрганизации);
	ТитульныйДанные.Вставить("ИНН1",           СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	
	ПереопределяемыеИменаПоказателей
	= Новый Структура("ИмяПоказателяКодНО,ИмяПоказателяКПП", "КодИМНС", "КПП1");
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(
	Организация, РазделыОтчета, ДатаПодписи, ПереопределяемыеИменаПоказателей);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2018Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СведенияОбОрганизации
	= РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	Организация, ДатаПодписи, "ИННЮЛ, НаимЮЛПол, ТелОрганизации, ФИО");
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
	КонецЕсли;
	
	ТитульныйДанные.Вставить("НаимОрг",        НаименованиеОрганизации);
	ТитульныйДанные.Вставить("ИНН1",           СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("ОКВЭД",          "");
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТитульныйДанные.ОКВЭД);
	
	ПереопределяемыеИменаПоказателей
	= Новый Структура("ИмяПоказателяКодНО,ИмяПоказателяКПП", "КодИМНС", "КПП1");
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(
	Организация, РазделыОтчета, ДатаПодписи, ПереопределяемыеИменаПоказателей);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2017Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СведенияОбОрганизации
	= РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	Организация, ДатаПодписи, "ИННЮЛ, НаимЮЛПол, ТелОрганизации, ФИО");
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
	КонецЕсли;
	
	ТитульныйДанные.Вставить("НаимОрг",        НаименованиеОрганизации);
	ТитульныйДанные.Вставить("ИНН1",           СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("ОКВЭД",          "");
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТитульныйДанные.ОКВЭД);
	
	ПереопределяемыеИменаПоказателей
	= Новый Структура("ИмяПоказателяКодНО,ИмяПоказателяКПП", "КодИМНС", "КПП1");
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(
	Организация, РазделыОтчета, ДатаПодписи, ПереопределяемыеИменаПоказателей);
	
КонецПроцедуры

Процедура ЗаполнитьСведенияОбОрганизацииРеглОтчетЕНВДФормаОтчета2016Кв1(Организация, РазделыОтчета, ДатаПодписи, ДатаОкончания)
	
	ТитульныйДанные = РазделыОтчета.Титульный.Данные;
	
	СведенияОбОрганизации
	= РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(
	Организация, ДатаПодписи, "ИННЮЛ, НаимЮЛПол, ТелОрганизации, ФИО");
	
	Если НЕ РегламентированнаяОтчетностьВызовСервера.ЭтоЮридическоеЛицо(Организация) Тогда
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.ФИО);
	Иначе
		НаименованиеОрганизации = СокрЛП(СведенияОбОрганизации.НаимЮлПол);
	КонецЕсли;
	
	ТитульныйДанные.Вставить("НаимОрг",        НаименованиеОрганизации);
	ТитульныйДанные.Вставить("ИНН1",           СокрЛП(СведенияОбОрганизации.ИННЮЛ));
	ТитульныйДанные.Вставить("ОКВЭД",          "");
	ТитульныйДанные.Вставить("ТелОрганизации", СокрЛП(СведенияОбОрганизации.ТелОрганизации));
	
	СтруктураРеквизитовФормы = Новый Структура;
	СтруктураРеквизитовФормы.Вставить("Организация", Организация);
	СтруктураРеквизитовФормы.Вставить("ВидДокумента", Число(СокрЛП(ТитульныйДанные.НомерКорректировки)));
	СтруктураРеквизитовФормы.Вставить("мДатаКонцаПериодаОтчета", ДатаОкончания);
	СтруктураРеквизитовФормы.Вставить("ОКВЭД", "");
	СтруктураРеквизитовФормы.Вставить("ОКВЭД2", "");
	
	РегламентированнаяОтчетность.ПолучитьЗначениеОКВЭД(ДатаПодписи, СтруктураРеквизитовФормы);
	РегламентированнаяОтчетностьКлиентСервер.УстановитьЗначениеОКВЭД(ДатаПодписи,
																	 СтруктураРеквизитовФормы,
																	 ТитульныйДанные.ОКВЭД);
	
	ПереопределяемыеИменаПоказателей
	= Новый Структура("ИмяПоказателяКодНО,ИмяПоказателяКПП", "КодИМНС", "КПП1");
	
	ИнтерфейсыВзаимодействияБРО.ЗаполнитьСведенияОПодписантах(
	Организация, РазделыОтчета, ДатаПодписи, ПереопределяемыеИменаПоказателей);
	
КонецПроцедуры

Процедура РасчетРеглОтчетЕНВДФормаОтчета2018Кв4(РазделыОтчета, ИмяРаздела = "", ДатаОкончания = Неопределено)
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КоличествоДней = Новый Структура;
		КоличествоДней.Вставить("ПервыйМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -2))));
		КоличествоДней.Вставить("ВторойМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -1))));
		КоличествоДней.Вставить("ТретийМесяц", День(КонецМесяца(ДатаОкончания)));
		
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		
		Для Каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			
			Строка040 = Окр(СтраницаРаздела2.Данные.П000020004003);
			
			Строка050 = СтраницаРаздела2.Данные.П000020005003;
			Строка060 = СтраницаРаздела2.Данные.П000020006003;
			
			Строка070Графа2 = СтраницаРаздела2.Данные.П000020007002;
			Строка080Графа2 = СтраницаРаздела2.Данные.П000020008002;
			Строка090Графа2 = СтраницаРаздела2.Данные.П000020009002;
			
			Строка070Графа3 = СтраницаРаздела2.Данные.П000020007003;
			Строка080Графа3 = СтраницаРаздела2.Данные.П000020008003;
			Строка090Графа3 = СтраницаРаздела2.Данные.П000020009003;
			
			Строка070Графа3 = ?(Строка070Графа3 = 0, КоличествоДней.ПервыйМесяц, Строка070Графа3);
			Строка080Графа3 = ?(Строка080Графа3 = 0, КоличествоДней.ВторойМесяц, Строка080Графа3);
			Строка090Графа3 = ?(Строка090Графа3 = 0, КоличествоДней.ТретийМесяц, Строка090Графа3);
			
			// Учет времени осуществления деятельности.
			ЗначениеСтроки070Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка070Графа2 * Строка070Графа3 / КоличествоДней.ПервыйМесяц);
			
			ЗначениеСтроки080Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка080Графа2 * Строка080Графа3 / КоличествоДней.ВторойМесяц);
			
			ЗначениеСтроки090Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка090Графа2 * Строка090Графа3 / КоличествоДней.ТретийМесяц);
			
			СтраницаРаздела2.Данные.Вставить("П000020007004", ЗначениеСтроки070Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020008004", ЗначениеСтроки080Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020009004", ЗначениеСтроки090Графа4);
			
			Строка070Графа4 = Окр(СтраницаРаздела2.Данные.П000020007004);
			Строка080Графа4 = Окр(СтраницаРаздела2.Данные.П000020008004);
			Строка090Графа4 = Окр(СтраницаРаздела2.Данные.П000020009004);
			
			ЗначениеСтроки100 = Строка070Графа4 + Строка080Графа4 + Строка090Графа4;
			СтраницаРаздела2.Данные.Вставить("П000020010003", ЗначениеСтроки100);
			
			Строка100 = Окр(Число(Формат(СтраницаРаздела2.Данные.П000020010003, "ЧЦ=12;ЧДЦ=2;ЧН=")));
			
			ЗначениеСтроки110 = Окр(Строка100 * СтраницаРаздела2.Данные.П000020010503 / 100);
			СтраницаРаздела2.Данные.Вставить("П000020011003", ЗначениеСтроки110);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		ПрНпл = ДанныеРаздел3.П000030000503;
		
		Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Строка020 = Окр(ДанныеРаздел3.П000030002003);
		Строка030 = Окр(ДанныеРаздел3.П000030003003);
		Строка040 = Окр(ДанныеРаздел3.П000030004003);
		
		Если ПрНпл = "1" Тогда
			РазмерОграничения = Окр(Строка010 * 50/100);
			ЗначениеСтроки050 = Макс(РазмерОграничения, Строка010 - (Строка020 + Строка030));
			ЗначениеСтроки050 = Макс(0, ЗначениеСтроки050 - Строка040);
		Иначе
			ЗначениеСтроки050 = Макс(0, Строка010 - Строка030 - Строка040);
		КонецЕсли;
		
		ДанныеРаздел3.Вставить("П000030005003", ЗначениеСтроки050);
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда
		
		ДанныеДопСтрокРаздел4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ОбщаяСумма = 0;
		
		Для каждого ДопСтрока Из ДанныеДопСтрокРаздел4 Цикл
			ОбщаяСумма = ОбщаяСумма + Окр(ДопСтрока["П000040005003"]);
		КонецЦикла;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		
		ДанныеРаздел4.П000040015003 = ОбщаяСумма;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетЕНВДФормаОтчета2018Кв3(РазделыОтчета, ИмяРаздела = "", ДатаОкончания = Неопределено)
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КоличествоДней = Новый Структура;
		КоличествоДней.Вставить("ПервыйМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -2))));
		КоличествоДней.Вставить("ВторойМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -1))));
		КоличествоДней.Вставить("ТретийМесяц", День(КонецМесяца(ДатаОкончания)));
		
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		
		Для Каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			
			Строка040 = Окр(СтраницаРаздела2.Данные.П000020004003);
			
			Строка050 = СтраницаРаздела2.Данные.П000020005003;
			Строка060 = СтраницаРаздела2.Данные.П000020006003;
			
			Строка070Графа2 = СтраницаРаздела2.Данные.П000020007002;
			Строка080Графа2 = СтраницаРаздела2.Данные.П000020008002;
			Строка090Графа2 = СтраницаРаздела2.Данные.П000020009002;
			
			Строка070Графа3 = СтраницаРаздела2.Данные.П000020007003;
			Строка080Графа3 = СтраницаРаздела2.Данные.П000020008003;
			Строка090Графа3 = СтраницаРаздела2.Данные.П000020009003;
			
			Строка070Графа3 = ?(Строка070Графа3 = 0, КоличествоДней.ПервыйМесяц, Строка070Графа3);
			Строка080Графа3 = ?(Строка080Графа3 = 0, КоличествоДней.ВторойМесяц, Строка080Графа3);
			Строка090Графа3 = ?(Строка090Графа3 = 0, КоличествоДней.ТретийМесяц, Строка090Графа3);
			
			// Учет времени осуществления деятельности.
			ЗначениеСтроки070Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка070Графа2 * Строка070Графа3 / КоличествоДней.ПервыйМесяц);
			
			ЗначениеСтроки080Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка080Графа2 * Строка080Графа3 / КоличествоДней.ВторойМесяц);
			
			ЗначениеСтроки090Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка090Графа2 * Строка090Графа3 / КоличествоДней.ТретийМесяц);
			
			СтраницаРаздела2.Данные.Вставить("П000020007004", ЗначениеСтроки070Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020008004", ЗначениеСтроки080Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020009004", ЗначениеСтроки090Графа4);
			
			Строка070Графа4 = Окр(СтраницаРаздела2.Данные.П000020007004);
			Строка080Графа4 = Окр(СтраницаРаздела2.Данные.П000020008004);
			Строка090Графа4 = Окр(СтраницаРаздела2.Данные.П000020009004);
			
			ЗначениеСтроки100 = Строка070Графа4 + Строка080Графа4 + Строка090Графа4;
			СтраницаРаздела2.Данные.Вставить("П000020010003", ЗначениеСтроки100);
			
			Строка100 = Окр(Число(Формат(СтраницаРаздела2.Данные.П000020010003, "ЧЦ=12;ЧДЦ=2;ЧН=")));
			
			ЗначениеСтроки110 = Окр(Строка100 * СтраницаРаздела2.Данные.П000020010503 / 100);
			СтраницаРаздела2.Данные.Вставить("П000020011003", ЗначениеСтроки110);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		ПрНпл = ДанныеРаздел3.П000030000503;
		
		Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Строка020 = Окр(ДанныеРаздел3.П000030002003);
		Строка030 = Окр(ДанныеРаздел3.П000030003003);
		Строка040 = Окр(ДанныеРаздел3.П000030004003);
		
		Если ПрНпл = "1" Тогда
			РазмерОграничения = Окр(Строка010 * 50/100);
			ЗначениеСтроки050 = Макс(РазмерОграничения, Строка010 - (Строка020 + Строка030));
			ЗначениеСтроки050 = Макс(0, ЗначениеСтроки050 - Строка040);
		Иначе
			ЗначениеСтроки050 = Макс(0, Строка010 - Строка030 - Строка040);
		КонецЕсли;
		
		ДанныеРаздел3.Вставить("П000030005003", ЗначениеСтроки050);
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда
		
		ДанныеДопСтрокРаздел4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ОбщаяСумма = 0;
		
		Для каждого ДопСтрока Из ДанныеДопСтрокРаздел4 Цикл
			ОбщаяСумма = ОбщаяСумма + Окр(ДопСтрока["П000040005003"]);
		КонецЦикла;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		
		ДанныеРаздел4.П000040015003 = ОбщаяСумма;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетЕНВДФормаОтчета2018Кв1(РазделыОтчета, ИмяРаздела = "", ДатаОкончания = Неопределено)
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КоличествоДней = Новый Структура;
		КоличествоДней.Вставить("ПервыйМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -2))));
		КоличествоДней.Вставить("ВторойМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -1))));
		КоличествоДней.Вставить("ТретийМесяц", День(КонецМесяца(ДатаОкончания)));
		
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		
		Для Каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			
			Строка040 = Окр(СтраницаРаздела2.Данные.П000020004003);
			
			Строка050 = СтраницаРаздела2.Данные.П000020005003;
			Строка060 = СтраницаРаздела2.Данные.П000020006003;
			
			Строка070Графа2 = СтраницаРаздела2.Данные.П000020007002;
			Строка080Графа2 = СтраницаРаздела2.Данные.П000020008002;
			Строка090Графа2 = СтраницаРаздела2.Данные.П000020009002;
			
			Строка070Графа3 = СтраницаРаздела2.Данные.П000020007003;
			Строка080Графа3 = СтраницаРаздела2.Данные.П000020008003;
			Строка090Графа3 = СтраницаРаздела2.Данные.П000020009003;
			
			Строка070Графа3 = ?(Строка070Графа3 = 0, КоличествоДней.ПервыйМесяц, Строка070Графа3);
			Строка080Графа3 = ?(Строка080Графа3 = 0, КоличествоДней.ВторойМесяц, Строка080Графа3);
			Строка090Графа3 = ?(Строка090Графа3 = 0, КоличествоДней.ТретийМесяц, Строка090Графа3);
			
			// Учет времени осуществления деятельности.
			ЗначениеСтроки070Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка070Графа2 * Строка070Графа3 / КоличествоДней.ПервыйМесяц);
			
			ЗначениеСтроки080Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка080Графа2 * Строка080Графа3 / КоличествоДней.ВторойМесяц);
			
			ЗначениеСтроки090Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка090Графа2 * Строка090Графа3 / КоличествоДней.ТретийМесяц);
			
			СтраницаРаздела2.Данные.Вставить("П000020007004", ЗначениеСтроки070Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020008004", ЗначениеСтроки080Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020009004", ЗначениеСтроки090Графа4);
			
			Строка070Графа4 = Окр(СтраницаРаздела2.Данные.П000020007004);
			Строка080Графа4 = Окр(СтраницаРаздела2.Данные.П000020008004);
			Строка090Графа4 = Окр(СтраницаРаздела2.Данные.П000020009004);
			
			ЗначениеСтроки100 = Строка070Графа4 + Строка080Графа4 + Строка090Графа4;
			СтраницаРаздела2.Данные.Вставить("П000020010003", ЗначениеСтроки100);
			
			Строка100 = Окр(Число(Формат(СтраницаРаздела2.Данные.П000020010003, "ЧЦ=12;ЧДЦ=2;ЧН=")));
			
			ЗначениеСтроки110 = Окр(Строка100 * СтраницаРаздела2.Данные.П000020010503 / 100);
			СтраницаРаздела2.Данные.Вставить("П000020011003", ЗначениеСтроки110);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		ПрНпл = ДанныеРаздел3.П000030000503;
		
		Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Строка020 = Окр(ДанныеРаздел3.П000030002003);
		Строка030 = Окр(ДанныеРаздел3.П000030003003);
		Строка035 = Окр(ДанныеРаздел3.П000030003503);
		
		Если ПрНпл = "1" Тогда
			РазмерОграничения = Окр(Строка010 * 50/100);
			ЗначениеСтроки040 = Макс(РазмерОграничения, Строка010 - (Строка020 + Строка030));
			ЗначениеСтроки040 = Макс(0, ЗначениеСтроки040 - Строка035);
		Иначе
			ЗначениеСтроки040 = Макс(0, Строка010 - Строка030 - Строка035);
		КонецЕсли;
		
		ДанныеРаздел3.Вставить("П000030004003", ЗначениеСтроки040);
		
	ИначеЕсли ИмяРаздела = "Раздел4" Тогда
		
		ДанныеДопСтрокРаздел4 = РазделыОтчета.Раздел4.ДанныеДопСтрок;
		
		ОбщаяСумма = 0;
		
		Для каждого ДопСтрока Из ДанныеДопСтрокРаздел4 Цикл
			ОбщаяСумма = ОбщаяСумма + Окр(ДопСтрока["П000040005003"]);
		КонецЦикла;
		
		ДанныеРаздел4 = РазделыОтчета.Раздел4.Данные;
		
		ДанныеРаздел4.П000040015003 = ОбщаяСумма;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетЕНВДФормаОтчета2017Кв1(РазделыОтчета, ИмяРаздела = "", ДатаОкончания = Неопределено)
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КоличествоДней = Новый Структура;
		КоличествоДней.Вставить("ПервыйМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -2))));
		КоличествоДней.Вставить("ВторойМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -1))));
		КоличествоДней.Вставить("ТретийМесяц", День(КонецМесяца(ДатаОкончания)));
		
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		
		Для Каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			
			Строка040 = Окр(СтраницаРаздела2.Данные.П000020004003);
			
			Строка050 = СтраницаРаздела2.Данные.П000020005003;
			Строка060 = СтраницаРаздела2.Данные.П000020006003;
			
			Строка070Графа2 = СтраницаРаздела2.Данные.П000020007002;
			Строка080Графа2 = СтраницаРаздела2.Данные.П000020008002;
			Строка090Графа2 = СтраницаРаздела2.Данные.П000020009002;
			
			Строка070Графа3 = СтраницаРаздела2.Данные.П000020007003;
			Строка080Графа3 = СтраницаРаздела2.Данные.П000020008003;
			Строка090Графа3 = СтраницаРаздела2.Данные.П000020009003;
			
			Строка070Графа3 = ?(Строка070Графа3 = 0, КоличествоДней.ПервыйМесяц, Строка070Графа3);
			Строка080Графа3 = ?(Строка080Графа3 = 0, КоличествоДней.ВторойМесяц, Строка080Графа3);
			Строка090Графа3 = ?(Строка090Графа3 = 0, КоличествоДней.ТретийМесяц, Строка090Графа3);
			
			// Учет времени осуществления деятельности.
			ЗначениеСтроки070Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка070Графа2 * Строка070Графа3 / КоличествоДней.ПервыйМесяц);
			
			ЗначениеСтроки080Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка080Графа2 * Строка080Графа3 / КоличествоДней.ВторойМесяц);
			
			ЗначениеСтроки090Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка090Графа2 * Строка090Графа3 / КоличествоДней.ТретийМесяц);
			
			СтраницаРаздела2.Данные.Вставить("П000020007004", ЗначениеСтроки070Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020008004", ЗначениеСтроки080Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020009004", ЗначениеСтроки090Графа4);
			
			Строка070Графа4 = Окр(СтраницаРаздела2.Данные.П000020007004);
			Строка080Графа4 = Окр(СтраницаРаздела2.Данные.П000020008004);
			Строка090Графа4 = Окр(СтраницаРаздела2.Данные.П000020009004);
			
			ЗначениеСтроки100 = Строка070Графа4 + Строка080Графа4 + Строка090Графа4;
			СтраницаРаздела2.Данные.Вставить("П000020010003", ЗначениеСтроки100);
			
			Строка100 = Окр(Число(Формат(СтраницаРаздела2.Данные.П000020010003, "ЧЦ=12;ЧДЦ=2;ЧН=")));
			
			ЗначениеСтроки110 = Окр(Строка100 * СтраницаРаздела2.Данные.П000020010503 / 100);
			СтраницаРаздела2.Данные.Вставить("П000020011003", ЗначениеСтроки110);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		ПрНпл = ДанныеРаздел3.П000030000503;
		
		Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Строка020 = Окр(ДанныеРаздел3.П000030002003);
		Строка030 = Окр(ДанныеРаздел3.П000030003003);
		
		Если ПрНпл = "1" Тогда
			РазмерОграничения = Окр(Строка010 * 50/100);
			ЗначениеСтроки040 = Макс(РазмерОграничения, Строка010 - (Строка020 + Строка030));
		Иначе
			ЗначениеСтроки040 = Макс(0, Строка010 - Строка030);
		КонецЕсли;
		
		ДанныеРаздел3.Вставить("П000030004003", ЗначениеСтроки040);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура РасчетРеглОтчетЕНВДФормаОтчета2016Кв1(РазделыОтчета, ИмяРаздела = "", ДатаОкончания = Неопределено)
	
	Если ИмяРаздела = "Раздел2" Тогда
		
		КоличествоДней = Новый Структура;
		КоличествоДней.Вставить("ПервыйМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -2))));
		КоличествоДней.Вставить("ВторойМесяц", День(КонецМесяца(ДобавитьМесяц(ДатаОкончания, -1))));
		КоличествоДней.Вставить("ТретийМесяц", День(КонецМесяца(ДатаОкончания)));
		
		ТаблицаРаздела2 = РазделыОтчета.Раздел2.Данные;
		
		Для Каждого СтраницаРаздела2 Из ТаблицаРаздела2 Цикл
			
			Строка040 = Окр(СтраницаРаздела2.Данные.П000020004003);
			
			Строка050 = СтраницаРаздела2.Данные.П000020005003;
			Строка060 = СтраницаРаздела2.Данные.П000020006003;
			
			Строка070Графа2 = СтраницаРаздела2.Данные.П000020007002;
			Строка080Графа2 = СтраницаРаздела2.Данные.П000020008002;
			Строка090Графа2 = СтраницаРаздела2.Данные.П000020009002;
			
			Строка070Графа3 = СтраницаРаздела2.Данные.П000020007003;
			Строка080Графа3 = СтраницаРаздела2.Данные.П000020008003;
			Строка090Графа3 = СтраницаРаздела2.Данные.П000020009003;
			
			Строка070Графа3 = ?(Строка070Графа3 = 0, КоличествоДней.ПервыйМесяц, Строка070Графа3);
			Строка080Графа3 = ?(Строка080Графа3 = 0, КоличествоДней.ВторойМесяц, Строка080Графа3);
			Строка090Графа3 = ?(Строка090Графа3 = 0, КоличествоДней.ТретийМесяц, Строка090Графа3);
			
			// Учет времени осуществления деятельности.
			ЗначениеСтроки070Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка070Графа2 * Строка070Графа3 / КоличествоДней.ПервыйМесяц);
			
			ЗначениеСтроки080Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка080Графа2 * Строка080Графа3 / КоличествоДней.ВторойМесяц);
			
			ЗначениеСтроки090Графа4 = Окр(
			Строка040 * Строка050 * Строка060 * Строка090Графа2 * Строка090Графа3 / КоличествоДней.ТретийМесяц);
			
			СтраницаРаздела2.Данные.Вставить("П000020007004", ЗначениеСтроки070Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020008004", ЗначениеСтроки080Графа4);
			СтраницаРаздела2.Данные.Вставить("П000020009004", ЗначениеСтроки090Графа4);
			
			Строка070Графа4 = Окр(СтраницаРаздела2.Данные.П000020007004);
			Строка080Графа4 = Окр(СтраницаРаздела2.Данные.П000020008004);
			Строка090Графа4 = Окр(СтраницаРаздела2.Данные.П000020009004);
			
			ЗначениеСтроки100 = Строка070Графа4 + Строка080Графа4 + Строка090Графа4;
			СтраницаРаздела2.Данные.Вставить("П000020010003", ЗначениеСтроки100);
			
			Строка100 = Окр(Число(Формат(СтраницаРаздела2.Данные.П000020010003, "ЧЦ=12;ЧДЦ=2;ЧН=")));
			
			ЗначениеСтроки110 = Окр(Строка100 * СтраницаРаздела2.Данные.П000020010503 / 100);
			СтраницаРаздела2.Данные.Вставить("П000020011003", ЗначениеСтроки110);
			
		КонецЦикла;
		
	ИначеЕсли ИмяРаздела = "Раздел3" Тогда
		
		ДанныеРаздел3 = РазделыОтчета.Раздел3.Данные;
		
		ПрНпл = ДанныеРаздел3.П000030000503;
		
		Строка010 = Окр(ДанныеРаздел3.П000030001003);
		Строка020 = Окр(ДанныеРаздел3.П000030002003);
		Строка030 = Окр(ДанныеРаздел3.П000030003003);
		
		Если ПрНпл = "1" Тогда
			РазмерОграничения = Окр(Строка010 * 50/100);
			ЗначениеСтроки040 = Макс(РазмерОграничения, Строка010 - Строка020);
		Иначе
			ЗначениеСтроки040 = Макс(0, Строка010 - Строка030);
		КонецЕсли;
		
		ДанныеРаздел3.Вставить("П000030004003", ЗначениеСтроки040);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПустыеСтруктурыДанных(ИмяФормыОтчета, РазделыОтчета, ДопПараметры = Неопределено)
	ТабличныйДокумент = Новый ТабличныйДокумент;
	
	Для Каждого Раздел Из РазделыОтчета Цикл
		Если (НЕ Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные.Количество() = 0)
		   ИЛИ (Раздел.Значение.МногостраничностьВРазделе
		   И Раздел.Значение.Данные[0].Данные.Количество() = 0) Тогда
			
			ТабличныйДокумент.Очистить();
			ТабличныйДокумент.Вывести(Отчеты["РегламентированныйОтчетЕдиныйНалогНаВмененныйДоход"].ПолучитьМакет(ИмяФормыОтчета + "_" + Раздел.Ключ));
			Если ИмяФормыОтчета = "ФормаОтчета2016Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2016Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2017Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2017Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв1" Тогда
				СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв1(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв3" Тогда
				СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв3(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			ИначеЕсли ИмяФормыОтчета = "ФормаОтчета2018Кв4" Тогда
				СохранитьДанныеРазделаРеглОтчетЕНВДФормаОтчета2018Кв4(Раздел.Ключ, ТабличныйДокумент, РазделыОтчета, ДопПараметры);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#КонецЕсли