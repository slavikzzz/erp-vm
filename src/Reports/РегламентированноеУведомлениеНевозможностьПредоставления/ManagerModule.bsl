#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2019_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 24.04.2019 № ММВ-7-2/204@ в формате 5.02";
	Стр.ДатаНачала = Дата("20180101");
	Стр.ДатаКонца = Дата("20500101");
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2024_1";
	Стр.ОписаниеФормы = "Приказ ФНС России от 21.02.2024 № СД-7-2/148@ в формате 5.03";
	Стр.ДатаНачала = Дата("20240430");
	Стр.ДатаКонца = Дата("20500101");
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2019_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2024_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокумент(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2015_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2015_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2019_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2019_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2024_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2024_1(Объект);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2019_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2019_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	ИначеЕсли ИмяФормы = "Форма2024_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2024_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция СформироватьСписокЛистовФорма2015_1(Объект)
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить().СтруктураРеквизитов;
	
	ПараметрыПечати = Новый Структура;
	РеквизитыИФНС = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС); 
	ПараметрыПечати.Вставить("НаимНО", РеквизитыИФНС.Наименование);
	ПараметрыПечати.Вставить("КодНО", РеквизитыИФНС.Код);
	
	ПараметрыПечати.Вставить("УведомлениеНомер", СтруктураПараметров._Номер);
	ПараметрыПечати.Вставить("Дата", Формат(Объект.ДатаПодписи, "ДЛФ=DD"));
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		НаимОргПолн = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, "НаимЮЛПол").НаимЮЛПол;
	Иначе
		НаимОргПолн = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, "ФИО").ФИО;
	КонецЕсли;
	ПараметрыПечати.Вставить("НаимОргПолн", НаимОргПолн);
	ПараметрыПечати.Вставить("ДатаЗапроса", Формат(СтруктураПараметров._ДатаТреб, "ДЛФ=DD"));
	ПараметрыПечати.Вставить("НомерЗапроса", СтруктураПараметров._НомТреб);
	
	ДокументыСтр = "";
	Информация = "";
	Приложения = "";
	
	Для Каждого Стр Из СтруктураПараметров._ПорНомДок Цикл 
		Если Стр.Информация Тогда 
			Информация = Информация + Стр.НомДок+ "; ";
		Иначе
			ДокументыСтр = ДокументыСтр + Стр.НомДок+ "; ";
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого Стр Из СтруктураПараметров._ПриложенныеФайлы.Строки Цикл 
		Приложения = Приложения + Стр.Документ+ "; ";
	КонецЦикла;
	
	ПараметрыПечати.Вставить("Документы", ДокументыСтр);
	ПараметрыПечати.Вставить("Информация", Информация);
	ПараметрыПечати.Вставить("Приложения", Приложения);
	ПараметрыПечати.Вставить("Причина", СтруктураПараметров._ОписПричНепред);
	ПараметрыПечати.Вставить("ДатаПредст", Формат(СтруктураПараметров._СрокПредст, "ДЛФ=DD"));
	ПараметрыПечати.Вставить("КП1", Строка(СтруктураПараметров._КодПрич / 10));
	ПараметрыПечати.Вставить("КП2", "0");
	ПараметрыПечати.Вставить("ПрПодп", Строка(СтруктураПараметров._ПрПодп));
	
	ПараметрыПечати.Вставить("Должность", СтруктураПараметров._ДолжнПодп);
	ПараметрыПечати.Вставить("ФИО", СтруктураПараметров._ФамилияПодп + " " + СтруктураПараметров._ИмяПодп + " " + СтруктураПараметров._ОтчествоПодп);
	ПараметрыПечати.Вставить("Телефон", СтруктураПараметров._Тлф);
	ПараметрыПечати.Вставить("ЭлектроннаяПочта", СтруктураПараметров._Email);
	ПараметрыПечати.Вставить("ДокументПредставителя", СтруктураПараметров._НаимДокПодп);
	
	НомСтр = 0;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2015_1");
	Для Инд = 1 По 4 Цикл 
		Стр = МакетПФ.ПолучитьОбласть("Стр" + Инд);
		ЗаполнитьЗначенияСвойств(Стр.Параметры, ПараметрыПечати);
		Если Не ПечатнаяФорма.ПроверитьВывод(Стр) Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЕсли;
		ПечатнаяФорма.Вывести(Стр);
	КонецЦикла;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2019_1(Объект)
	ОТД = Новый ОписаниеТипов("Дата");
	Листы = Новый СписокЗначений;
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить().СтруктураРеквизитов;
	
	ПараметрыПечати = Новый Структура;
	РеквизитыИФНС = РегистрацияВНОСервер.ДанныеРегистрации(Объект.РегистрацияВИФНС); 
	ПараметрыПечати.Вставить("НаимНО", РеквизитыИФНС.Наименование + ", " + РеквизитыИФНС.Код);
	
	ПараметрыПечати.Вставить("УведомлениеНомер", СтруктураПараметров._Номер);
	ПараметрыПечати.Вставить("Дата", Формат(Объект.ДатаПодписи, "ДЛФ=DD"));
	
	Если РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда 
		СведОрг = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, "НаимЮЛПол, ИННЮЛ, КППЮЛ");
		НаимОргПолн = СведОрг.НаимЮЛПол + " ИНН:" + СведОрг.ИННЮЛ + " КПП:" + СведОрг.КППЮЛ;
	Иначе
		СведОрг = РегламентированнаяОтчетностьВызовСервера.ПолучитьСведенияОбОрганизации(Объект.Организация, Объект.ДатаПодписи, "ФИО, ИННФЛ");
		НаимОргПолн = СведОрг.ФИО + " ИНН:" + СведОрг.ИННФЛ;
	КонецЕсли;
	ПараметрыПечати.Вставить("НаимОргПолн", НаимОргПолн);
	ПараметрыПечати.Вставить("ДатаЗапроса", Формат(СтруктураПараметров._ДатаТреб, "ДЛФ=DD"));
	ПараметрыПечати.Вставить("НомерЗапроса", СтруктураПараметров._НомТреб);
	ПараметрыПечати.Вставить("ПрПодп", Строка(СтруктураПараметров._ПрПодп));
	ПараметрыПечати.Вставить("Должность", СтруктураПараметров._ДолжнПодп);
	ПараметрыПечати.Вставить("ФИО", СтруктураПараметров._ФамилияПодп + " " + СтруктураПараметров._ИмяПодп + " " + СтруктураПараметров._ОтчествоПодп);
	ПараметрыПечати.Вставить("Телефон", СтруктураПараметров._Тлф);
	ПараметрыПечати.Вставить("ЭлектроннаяПочта", СтруктураПараметров._Email);
	ПараметрыПечати.Вставить("ДокументПредставителя", СтруктураПараметров._НаимДокПодп);
	
	Приложения = Новый Соответствие;
	НомСтр = 0;
	МакетПФ = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_MXL_Форма2019_1");
	Стр = МакетПФ.ПолучитьОбласть("СтрНачальная");
	ЗаполнитьЗначенияСвойств(Стр.Параметры, ПараметрыПечати);
	ПечатнаяФорма.Вывести(Стр);
	МП = Новый Массив;
	Для Каждого СтрТек Из СтруктураПараметров._СвНевозмПред Цикл 
		КодПричины = СтрТек.КодПричины;
		Если КодПричины = "10" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрПродление");
			Стр2.Параметры.Причина = ПолучитьЗначениеИзСписка(СтрТек, "_ОписПрич");
			Стр2.Параметры.ДатаПродления = Формат(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(СтрТек, "_СрокПредст")), "ДЛФ=DD; ДП=-");
		ИначеЕсли КодПричины = "21" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрОтсутствие");
			Стр2.Параметры.ПричинаУтраты = ПолучитьЗначениеИзСписка(СтрТек, "_ОбстоятУтрат");
			Стр2.Параметры.Причина = "документы утрачены";
		ИначеЕсли КодПричины = "22" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрОтсутствие");
			Стр2.Параметры.Причина = СтрТек.Описание;
		ИначеЕсли КодПричины = "23" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрОтсутствие");
			ОписаниеАудит = "ОРНЗ: " + ПолучитьЗначениеИзСписка(СтрТек, "_ОРНЗ") + ", ";
			Если ПолучитьЗначениеИзСписка(СтрТек, "ЮрФиз") = "0" Тогда 
				ОписаниеАудит = ОписаниеАудит + ПолучитьЗначениеИзСписка(СтрТек, "_НаимОрг") + ", ИНН: "
				+ ПолучитьЗначениеИзСписка(СтрТек, "_ИННЮЛ") + ", КПП: " + ПолучитьЗначениеИзСписка(СтрТек, "_КПП");
			 Иначе
				ОписаниеАудит = ОписаниеАудит + ПолучитьЗначениеИзСписка(СтрТек, "_Фамилия") + " "
				+ ПолучитьЗначениеИзСписка(СтрТек, "_Имя") + " "
				+ ПолучитьЗначениеИзСписка(СтрТек, "_Отчество") + ", ИНН: "
				+ ПолучитьЗначениеИзСписка(СтрТек, "_ИННФЛ");
			КонецЕсли;
			Стр2.Параметры.ПереданоАудит = ОписаниеАудит;
			Стр2.Параметры.Причина = "документы переданы аудитору";
		ИначеЕсли КодПричины = "24" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрОтсутствие");
			Стр2.Параметры.ПереданоГосОрг = ПолучитьЗначениеИзСписка(СтрТек, "_НаимПОДокПрд") + ", " + ПолучитьЗначениеИзСписка(СтрТек, "_АдрПОДокПрд");
			Стр2.Параметры.Причина = "документы переданы в правоохранительный орган";
		ИначеЕсли КодПричины = "30" Тогда
			Стр2 = МакетПФ.ПолучитьОбласть("СтрПредстРанее");
			Стр2.Параметры.Причина = "ИФНС " + ПолучитьЗначениеИзСписка(СтрТек, "_КодНОДокПред");
			Если ПолучитьЗначениеИзСписка(СтрТек, "ЭБФорма") = "0" Тогда 
				Стр2.Параметры.ДокНО = ПолучитьЗначениеИзСписка(СтрТек, "_ИмяФайлОтв") + " / " + ПолучитьЗначениеИзСписка(СтрТек, "_ИмяОпис");
			КонецЕсли;
		Иначе
			Продолжить;
		КонецЕсли;
		
		Для Каждого СтрПД Из СтрТек.ПриложенныеФайлы.Строки Цикл 
			Приложения.Вставить(СтрПД.Документ);
		КонецЦикла;
		
		Стр0 = МакетПФ.ПолучитьОбласть("СтрДок");
		Стр1 = МакетПФ.ПолучитьОбласть("СтрИнфо");
		
		ДокСтр = "";
		Для Каждого Док1 Из СтрТек.ДокИнф.Строки Цикл 
			Если Не ЗначениеЗаполнено(Док1.СведДокИнф) Тогда 
				Продолжить;
			КонецЕсли;
			ДокСтр = ДокСтр + Док1.СведДокИнф + ";";
			Если ЗначениеЗаполнено(Док1.ПорНомДок) Тогда 
				ДокСтр = ДокСтр + Док1.ПорНомДок + ";";
			КонецЕсли;
			Для Каждого Док2 Из Док1.Строки Цикл 
				Если ЗначениеЗаполнено(Док2.ПорНомДок) Тогда 
					ДокСтр = ДокСтр + Док2.ПорНомДок + ";";
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		Стр0.Параметры.Документы = ДокСтр;
		
		МП.Очистить();
		МП.Добавить(Стр0);
		МП.Добавить(Стр1);
		МП.Добавить(Стр2);
		
		Если Не ПечатнаяФорма.ПроверитьВывод(МП) Тогда 
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		КонецЕсли;
		ПечатнаяФорма.Вывести(Стр0);
		ПечатнаяФорма.Вывести(Стр1);
		ПечатнаяФорма.Вывести(Стр2);
	КонецЦикла;
	
	ПриложенияСтр = "";
	Для Каждого КЗ Из Приложения Цикл 
		ПриложенияСтр = ПриложенияСтр + КЗ.Ключ + "; ";
	КонецЦикла;
	
	Стр = МакетПФ.ПолучитьОбласть("СтрПосл");
	Стр.Параметры.Приложения = ПриложенияСтр;
	ЗаполнитьЗначенияСвойств(Стр.Параметры, ПараметрыПечати);
	Если Не ПечатнаяФорма.ПроверитьВывод(Стр) Тогда 
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
	ПечатнаяФорма.Вывести(Стр);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2024_1(Объект)
	Возврат УведомлениеОСпецрежимахНалогообложения.ПечатьВСледующихВерсиях(Объект);
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "ON_UVNPDUS";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция СтрокаСоответствуетФорматуНомераДокумента(Стр)
	Если Не ЗначениеЗаполнено(Стр) Или Стр = "Z.ZZ" Тогда 
		Возврат Истина;
	КонецЕсли;
	Если СтрДлина(Стр) <> 4 
		Или Сред(Стр, 2, 1) <> "."
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Лев(Стр, 1))
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Прав(Стр, 2)) Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2019_1(Данные, УникальныйИдентификатор)
	ОТД = Новый ОписаниеТипов("Дата");
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._Номер) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен номер уведомления", "ОсновныеСведения", "_Номер"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяФайлТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнено имя файла входящего требования", "ОсновныеСведения", "_ИмяФайлТреб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НомТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен номер входящего требования", "ОсновныеСведения", "_НомТреб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ДатаТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнена дата входящего требования", "ОсновныеСведения", "_ДатаТреб"));
	КонецЕсли;
	
	ЕстьПричины = Ложь;
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл
		Если ЗначениеЗаполнено(Стр0.КодПричины) Тогда 
			ЕстьПричины = Истина;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если Не ЕстьПричины Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен список причин невозможности передать документы", "СведенияОДокументах", "_СвНевозмПред"));
	КонецЕсли;
	
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл
		КодПричины = Стр0.КодПричины;
		Если Не ЗначениеЗаполнено(КодПричины) Тогда 
			Продолжить;
		КонецЕсли;
		НомерСтроки = Данные.СтруктураРеквизитов._СвНевозмПред.Индекс(Стр0);
		
		Если Стр0.ДокИнф.Строки.Количество() = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнены номера документов требования", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
		Для Каждого Стр1 Из Стр0.ДокИнф.Строки Цикл
			Если Не ЗначениеЗаполнено(Стр1.СведДокИнф) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указаны детали документа из требования", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Стр1.ПорНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Номер документа из требования не указан", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Если Не СтрокаСоответствуетФорматуНомераДокумента(Стр1.ПорНомДок) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Номер не соответствует формату", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Для Каждого Стр2 Из Стр1.Строки Цикл
				Если Не ЗначениеЗаполнено(Стр2.ПорНомДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Номер документа из требования не указан", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не СтрокаСоответствуетФорматуНомераДокумента(Стр2.ПорНомДок) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Номер не соответствует формату", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
		
		Если КодПричины = "10" Тогда
			Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ОписПрич")) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено описание причины", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_СрокПредст"))) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен срок представления", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
		ИначеЕсли КодПричины = "21" Тогда
			Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ОбстоятУтрат")) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнены обстоятельства утраты", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
		ИначеЕсли КодПричины = "23" Тогда
			Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ОРНЗ")) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен: Основной регистрационный номер записи из Реестра аудиторов и аудиторских организаций", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Если ПолучитьЗначениеИзСписка(Стр0, "ЮрФиз") = "0" Тогда 
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_НаимОрг")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Полное наименование организации", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ИННЮЛ")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: ИНН", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_КПП")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(	
					"Не заполнен: КПП", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
			Иначе
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ИННФЛ")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: ИНН", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_Фамилия")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: фамилия", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_Имя")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: имя", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
			КонецЕсли;
		ИначеЕсли КодПричины = "24" Тогда 
			Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_НаимПОДокПрд")) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнено наименование правоохранительного органа", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_АдрПОДокПрд")) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не заполнен адрес правоохранительного органа", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
			КонецЕсли;
		ИначеЕсли КодПричины = "30" Тогда 
			Если ПолучитьЗначениеИзСписка(Стр0, "ЭБФорма") = "0" Тогда
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ИмяФайлОтв")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Имя файла документа, в ответ на который (приложением к которому; одновременно с которым) ранее были представлены указанные документы (информация)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ИмяОпис")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Имя файла документа, необходимого для обеспечения электронного документооборота в отношениях, регулируемых законодательством о налогах и сборах (КНД 1184002)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаПрмЭ"))) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Дата приема налоговым органом  представленного ранее документа (информации)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
			Иначе
				Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_СведДокО")) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Сведения о документе, в ответ на который (приложением к которому; одновременно с которым) ранее были представлены указанные документы (информация)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаПрмБ"))) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Не заполнен: Дата приема налоговым органом  представленного ранее документа (информации)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				КонецЕсли;
				
				_СведДокО = ПолучитьЗначениеИзСписка(Стр0, "_СведДокО");
				Если (_СведДокО = "01" Или _СведДокО = "02" Или _СведДокО = "99") Тогда 
					Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_НомДокОтв")) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнен: Номер документа, в ответ на который (приложением к которому; одновременно с которым) ранее были представлены указанные документы (информация)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
					КонецЕсли;
					Если Не ЗначениеЗаполнено(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаДокОтв"))) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнен: Дата документа, в ответ на который (приложением к которому; одновременно с которым) ранее были представлены указанные документы (информация)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
					КонецЕсли;
				ИначеЕсли _СведДокО = "03" Тогда
					Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_КНДПредДок")) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнен: КНД налоговой декларации (расчета), к которой ранее были представлены указанные документы (информация)", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
					КонецЕсли;
					Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_ОтчетГод")) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнен: Отчетный год", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
					КонецЕсли;
					Если Не ЗначениеЗаполнено(ПолучитьЗначениеИзСписка(Стр0, "_Период")) Тогда 
						ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
							"Не заполнен: Отчетный период", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
					КонецЕсли;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ФамилияПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнена фамилия подписанта", "Подписант", "_ФамилияПодп"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнено имя подписанта", "Подписант", "_ИмяПодп"));
	КонецЕсли;
	Если (Данные.СтруктураРеквизитов._ПрПодп = 2 Или Данные.СтруктураРеквизитов._ПрПодп = 4) И Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НаимДокПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен документ представителя", "Подписант", "_НаимДокПодп"));
	КонецЕсли;
	Если ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИННФЛПодп) 
		И Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.СтруктураРеквизитов._ИННФЛПодп, Ложь, "") Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Некорректно заплонен ИНН", "СведенияОбОтправителе", "_ИННФЛПодп"));
	КонецЕсли;
	
	Если Данные.СтруктураРеквизитов._ОтпрЮЛ = 0 Тогда 
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НаимОргОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен отправитель", "СведенияОбОтправителе", "_НаимОргОтпр"));
		КонецЕсли;
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.СтруктураРеквизитов._ИННЮЛОтпр, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН отправителя", "СведенияОбОтправителе", "_ИННЮЛОтпр"));
		КонецЕсли;
		Если Не РегламентированныеДанныеКлиентСервер.КППСоответствуетТребованиям(Данные.СтруктураРеквизитов._КППОтпр, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен КПП отправителя", "СведенияОбОтправителе", "_КППОтпр"));
		КонецЕсли;
	ИначеЕсли Данные.СтруктураРеквизитов._ОтпрЮЛ = 1 Тогда 
		Если Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.СтруктураРеквизитов._ИННФЛОтпр, Ложь, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН отправителя", "СведенияОбОтправителе", "_ИННФЛОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ФамилияОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена фамилия", "СведенияОбОтправителе", "_ФамилияОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнено имя отправителя", "СведенияОбОтправителе", "_ИмяОтпр"));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2024_1(Данные, УникальныйИдентификатор)
	ОТД = Новый ОписаниеТипов("Дата");
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._Номер) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен номер уведомления", "ОсновныеСведения", "_Номер"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяФайлТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнено имя файла входящего требования", "ОсновныеСведения", "_ИмяФайлТреб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НомТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен номер входящего требования", "ОсновныеСведения", "_НомТреб"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ДатаТреб) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнена дата входящего требования", "ОсновныеСведения", "_ДатаТреб"));
	КонецЕсли;
	
	Если Данные.СтруктураРеквизитов._СвНевозмПред.Количество() = 0 Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен список причин невозможности передать документы", "СведенияОДокументах", "_СвНевозмПред"));
	КонецЕсли;
	
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл
		Если Не ЗначениеЗаполнено(Стр0.КодПричины) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код причины", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Стр0.ОписПричНепред) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнено описание причины", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(Стр0.СрокПредст) И Стр0.КодПричины = "20" Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Дата не указывается при отсутствии документа", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
		Если Стр0.КодЗапрДок.Количество() = 0  Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен список кодов запрашиваемых документов", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
		
		Для Каждого Стр1 Из Стр0.ПорНомДок Цикл
			Если Не ЗначениеЗаполнено(Стр1.Значение) Или Не СтрокаСоответствуетФорматуНомераДокумента(Стр1.Значение) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Номер не заполнен / не соответствует формату", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
				Прервать;
			КонецЕсли;
		КонецЦикла;
		Если Стр0.ПорНомДок.Количество() = 0 Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнены номера документов", "СведенияОДокументах", "_СвНевозмПред", Стр0.УИД));
		КонецЕсли;
	КонецЦикла;
	
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ФамилияПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнена фамилия подписанта", "Подписант", "_ФамилияПодп"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнено имя подписанта", "Подписант", "_ИмяПодп"));
	КонецЕсли;
	Если (Данные.СтруктураРеквизитов._ПрПодп = 2 Или Данные.СтруктураРеквизитов._ПрПодп = 4) И Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НаимДокПодп) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не заполнен документ представителя", "Подписант", "_НаимДокПодп"));
	КонецЕсли;
	
	Если Данные.СтруктураРеквизитов._ОтпрЮЛ = 0 Тогда 
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._НаимОргОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен отправитель", "СведенияОбОтправителе", "_НаимОргОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИННЮЛОтпр) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.СтруктураРеквизитов._ИННЮЛОтпр, Истина, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН отправителя", "СведенияОбОтправителе", "_ИННЮЛОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._КППОтпр) 
			Или Не РегламентированнаяОтчетностьВызовСервера.КППСоответствуетТребованиямФНС(Данные.СтруктураРеквизитов._КППОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен КПП отправителя", "СведенияОбОтправителе", "_КППОтпр"));
		КонецЕсли;
	ИначеЕсли Данные.СтруктураРеквизитов._ОтпрЮЛ = 1 Тогда 
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИННФЛОтпр) 
			Или Не РегламентированныеДанныеКлиентСервер.ИННСоответствуетТребованиям(Данные.СтруктураРеквизитов._ИННФЛОтпр, Ложь, "") Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнен/неправильно заполнен ИНН отправителя", "СведенияОбОтправителе", "_ИННФЛОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ФамилияОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнена фамилия", "СведенияОбОтправителе", "_ФамилияОтпр"));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные.СтруктураРеквизитов._ИмяОтпр) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не заполнено имя отправителя", "СведенияОбОтправителе", "_ИмяОтпр"));
		КонецЕсли;
	КонецЕсли;
	
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	
	ДанныеОрг = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьСведенияОбОрганизации(Объект);
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не ДанныеОрг.ЭтоЮрЛицо);
	Если Не ДанныеОрг.ЭтоЮрЛицо Тогда
		ОсновныеСведения.Вставить("ИННФЛ", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("Фамилия", ДанныеОрг.Фамилия);
		ОсновныеСведения.Вставить("Имя", ДанныеОрг.Имя);
		ОсновныеСведения.Вставить("Отчество", ДанныеОрг.Отчество);
	Иначе
		ОсновныеСведения.Вставить("НаимОрг", ДанныеОрг.НаименованиеПолное);
		ОсновныеСведения.Вставить("ИННЮЛ", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("КПП", ДанныеОрг.КПП);
		ОсновныеСведения.Вставить("ИННОрг", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("КППОрг", ДанныеОрг.КПП);
	КонецЕсли;
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	СтруктураРеквизитов = Данные.СтруктураРеквизитов;
	Для Каждого КЗ Из СтруктураРеквизитов Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка")
			Или ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ОсновныеСведения.Вставить(КЗ.Ключ, КЗ.Значение);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда
			ОсновныеСведения.Вставить(КЗ.Ключ, Формат(КЗ.Значение, "ДФ=dd.MM.yyyy"));
		КонецЕсли;
	КонецЦикла;
	
	ОсновныеСведения.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	ОсновныеСведения.Вставить("_Дата", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Новый Структура;
	
	ДанныеОрг = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьСведенияОбОрганизации(Объект);
	ОсновныеСведения.Вставить("ЭтоПБОЮЛ", Не ДанныеОрг.ЭтоЮрЛицо);
	Если Не ДанныеОрг.ЭтоЮрЛицо Тогда
		ОсновныеСведения.Вставить("ИННФЛ", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("Фамилия", ДанныеОрг.Фамилия);
		ОсновныеСведения.Вставить("Имя", ДанныеОрг.Имя);
		ОсновныеСведения.Вставить("Отчество", ДанныеОрг.Отчество);
	Иначе
		ОсновныеСведения.Вставить("НаимОрг", ДанныеОрг.НаименованиеПолное);
		ОсновныеСведения.Вставить("ИННЮЛ", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("КПП", ДанныеОрг.КПП);
		ОсновныеСведения.Вставить("ИННОрг", ДанныеОрг.ИНН);
		ОсновныеСведения.Вставить("КППОрг", ДанныеОрг.КПП);
	КонецЕсли;
	
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьОбщиеДанные(Объект, ОсновныеСведения);
	Данные = Объект.ДанныеУведомления.Получить();
	СтруктураРеквизитов = Данные.СтруктураРеквизитов;
	Для Каждого КЗ Из СтруктураРеквизитов Цикл 
		Если ТипЗнч(КЗ.Значение) = Тип("Строка")
			Или ТипЗнч(КЗ.Значение) = Тип("Число") Тогда 
			ОсновныеСведения.Вставить(КЗ.Ключ, КЗ.Значение);
		ИначеЕсли ТипЗнч(КЗ.Значение) = Тип("Дата") Тогда
			ОсновныеСведения.Вставить(КЗ.Ключ, Формат(КЗ.Значение, "ДФ=dd.MM.yyyy"));
		КонецЕсли;
	КонецЦикла;
	
	ОсновныеСведения.Вставить("КодНО", ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.РегистрацияВИФНС, "Код"));
	ОсновныеСведения.Вставить("_Дата", Формат(Объект.ДатаПодписи, "ДФ=dd.MM.yyyy"));
	
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	
	Возврат ОсновныеСведения;
КонецФункции

Функция ПолучитьЗначениеИзСписка(Строка, Имя)
	Элт = Строка.Данные.НайтиПоЗначению(Имя);
	Возврат ?(Элт = Неопределено, "", Элт.Представление);
КонецФункции

Функция ЗаполнитьДанными_Форма2019_1(Объект, СтруктураВыгрузки, СписокФайлов, ИменаФайлов, ОсновныеСведения)
	ОТД = Новый ОписаниеТипов("Дата");
	Данные = Объект.ДанныеУведомления.Получить();
	КолФайл = 0;
	
	ФайлыПоСтраницам = Новый Массив;
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл 
		МассивИмен = Новый Массив;
		ФайлыПоСтраницам.Вставить(Данные.СтруктураРеквизитов._СвНевозмПред.Индекс(Стр0), МассивИмен);
		Для Каждого Стр1 Из Стр0.ПриложенныеФайлы.Строки Цикл 
			УИД1 = Строка(Новый УникальныйИдентификатор);
			Для Каждого Стр2 Из Стр1.Строки Цикл
				ПрисоединенныйФайл = Стр2.ПрисоединенныйФайл;
				Если ЗначениеЗаполнено(ПрисоединенныйФайл) И ПрисоединенныйФайл.ПолучитьОбъект() <> Неопределено Тогда
					КолФайл = КолФайл + 1;
					УИД2 = Строка(Новый УникальныйИдентификатор);
					Расширение = Сред(Стр2.Документ, СтрНайти(Стр2.Документ, ".", НаправлениеПоиска.СКонца));
					ИмяФайлаПрод = "PR_" + ОсновныеСведения.ИдентификаторОтправителя + "_"  + ОсновныеСведения.КодНО 
									+ "_" + УИД1 + ОсновныеСведения.ДатаИмФайла + УИД2 + Расширение;
					ИменаФайлов.Добавить(ИмяФайлаПрод);
					СписокФайлов.Добавить(ПрисоединенныйФайл);
					МассивИмен.Добавить(ИмяФайлаПрод);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СтруктураВыгрузки, "Документ");
	Узел_СвНевозмПред = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "СвНевозмПред");
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл
		КодПричины = Стр0.КодПричины;
		Если Не ЗначениеЗаполнено(КодПричины) Тогда 
			Продолжить;
		КонецЕсли;
		
		Узел_СвНевозмПредТек = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_СвНевозмПред);
		Узел_КодПрич = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "КодПрич");
		Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_КодПрич, КодПричины);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
			Узел_ИмяФайл = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "ИмяФайл");
			Для Каждого ИФ Из ФайлыПоСтраницам[Данные.СтруктураРеквизитов._СвНевозмПред.Индекс(Стр0)] Цикл
				Узел_ИмяФайлТек = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ИмяФайл);
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_ИмяФайлТек, ИФ);
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(Узел_ИмяФайл);
		КонецЕсли;
		
		Узел_ДокИнф = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "ДокИнф");
		Для Каждого Стр1 Из Стр0.ДокИнф.Строки Цикл 
			Если Не ЗначениеЗаполнено(Стр1.СведДокИнф) Тогда 
				Продолжить;
			КонецЕсли;
			Узел_ДокИнфТек = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ДокИнф);
			Узел_СведДокИнф = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ДокИнфТек, "СведДокИнф");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_СведДокИнф, Стр1.СведДокИнф);
			
			Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ДокИнфТек, "ПорНомДок");
			Узел_2 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_1);
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_2, Стр1.ПорНомДок);
			Для Каждого Стр2 Из Стр1.Строки Цикл
				Узел_2 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_1);
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_2, Стр2.ПорНомДок);
			КонецЦикла;
		КонецЦикла;
		
		Если КодПричины = "10" Тогда
			Узел_ОписПрич = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "ОписПрич");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_ОписПрич, ПолучитьЗначениеИзСписка(Стр0, "_ОписПрич"));
			Узел_СрокПредст = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "СрокПредст");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_СрокПредст, Формат(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_СрокПредст")), "ДФ=dd.MM.yyyy; ДП=01.01.0001"));
		ИначеЕсли КодПричины = "21" Тогда
			Узел_ОбстоятУтрат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "ОбстоятУтрат");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_ОбстоятУтрат, ПолучитьЗначениеИзСписка(Стр0, "_ОбстоятУтрат"));
		ИначеЕсли КодПричины = "23" Тогда
			Узел_СведАудит = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "СведАудит");
			Узел_ОРНЗ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведАудит, "ОРНЗ");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_ОРНЗ, ПолучитьЗначениеИзСписка(Стр0, "_ОРНЗ"));
			Если ПолучитьЗначениеИзСписка(Стр0, "ЮрФиз") = "0" Тогда 
				Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведАудит, "АудитОрг");
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "НаимОрг");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_НаимОрг"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ИННЮЛ");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ИННЮЛ"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "КПП");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_КПП"));
			Иначе
				Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведАудит, "АудитИнд");
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ИННФЛ");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ИННФЛ"));
				Узел_ФИО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ФИО");
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ФИО, "Фамилия");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_Фамилия"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ФИО, "Имя");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_Имя"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ФИО, "Отчество");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_Отчество"));
			КонецЕсли;
		ИначеЕсли КодПричины = "24" Тогда
			Узел_СведПравОрг = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "СведПравОрг");
			Узел_НаимПОДокПрд = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведПравОрг, "НаимПОДокПрд");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_НаимПОДокПрд, ПолучитьЗначениеИзСписка(Стр0, "_НаимПОДокПрд"));
			Узел_АдрПОДокПрд = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СведПравОрг, "АдрПОДокПрд");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_АдрПОДокПрд, ПолучитьЗначениеИзСписка(Стр0, "_АдрПОДокПрд"));
		ИначеЕсли КодПричины = "30" Тогда 
			Узел_ДокПредстНО = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПредТек, "ДокПредстНО");
			Узел_КодНОДокПред = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ДокПредстНО, "КодНОДокПред");
			Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_КодНОДокПред, ПолучитьЗначениеИзСписка(Стр0, "_КодНОДокПред"));
			Если ПолучитьЗначениеИзСписка(Стр0, "ЭБФорма") = "0" Тогда 
				Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ДокПредстНО, "ДокПредЭл");
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ИмяФайлОтв");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ИмяФайлОтв"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ИмяОпис");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ИмяОпис"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ДатаПрмЭ");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, Формат(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаПрмЭ")), "ДФ=dd.MM.yyyy; ДП=01.01.0001"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ИмяДокР");
				Для Каждого Стр Из Стр0._ИмяДокР Цикл 
					Если ЗначениеЗаполнено(Стр.ИмяДокР) Тогда
						Узел_2 = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_1);
						Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_2, Стр.ИмяДокР);
					КонецЕсли;
				КонецЦикла;
			Иначе
				Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_ДокПредстНО, "ДокПредБум");
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "СведДокО");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_СведДокО"));
				Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ДатаПрмБ");
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, Формат(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаПрмБ")), "ДФ=dd.MM.yyyy; ДП=01.01.0001"));
				_СведДокО = ПолучитьЗначениеИзСписка(Стр0, "_СведДокО");
				Если (_СведДокО = "01" Или _СведДокО = "02" Или _СведДокО = "99") Тогда 
					Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "РеквДокОтв");
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "НомДокОтв");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_НомДокОтв"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "НаимДокОтв");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_НаимДокОтв"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ТипДокОтв");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ТипДокОтв"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ДатаДокОтв");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, Формат(ОТД.ПривестиЗначение(ПолучитьЗначениеИзСписка(Стр0, "_ДатаДокОтв")), "ДФ=dd.MM.yyyy; ДП=01.01.0001"));
				ИначеЕсли _СведДокО = "03" Тогда
					Узел_Св = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "НДДокПредР");
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "КНДПредДок");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_КНДПредДок"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "ОтчетГод");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_ОтчетГод"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "Период");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_Период"));
					Узел_1 = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Св, "НомКорр");
					Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_1, ПолучитьЗначениеИзСписка(Стр0, "_НомКорр"));
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Узел_СвНевозмПред);
КонецФункции

Функция ЗаполнитьДанными_Форма2024_1(Объект, СтруктураВыгрузки, СписокФайлов, ИменаФайлов, ОсновныеСведения)
	ОТД = Новый ОписаниеТипов("Дата");
	Данные = Объект.ДанныеУведомления.Получить();
	КолФайл = 0;
	
	ФайлыПоСтраницам = Новый Массив;
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл 
		МассивИмен = Новый Массив;
		ФайлыПоСтраницам.Вставить(Данные.СтруктураРеквизитов._СвНевозмПред.Индекс(Стр0), МассивИмен);
		Для Каждого Стр1 Из Стр0.ПриложенныеФайлы.Строки Цикл 
			УИД1 = Строка(Новый УникальныйИдентификатор);
			Для Каждого Стр2 Из Стр1.Строки Цикл
				ПрисоединенныйФайл = Стр2.ПрисоединенныйФайл;
				Если ЗначениеЗаполнено(ПрисоединенныйФайл) И ПрисоединенныйФайл.ПолучитьОбъект() <> Неопределено Тогда
					КолФайл = КолФайл + 1;
					УИД2 = Строка(Новый УникальныйИдентификатор);
					Расширение = Сред(Стр2.Документ, СтрНайти(Стр2.Документ, ".", НаправлениеПоиска.СКонца));
					ИмяФайлаПрод = "PR_" + ОсновныеСведения.ИдентификаторОтправителя + "_"  + ОсновныеСведения.КодНО 
									+ "_" + УИД1 + ОсновныеСведения.ДатаИмФайла + УИД2 + Расширение;
					ИменаФайлов.Добавить(ИмяФайлаПрод);
					СписокФайлов.Добавить(ПрисоединенныйФайл);
					МассивИмен.Добавить(ИмяФайлаПрод);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Узел_Документ = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(СтруктураВыгрузки, "Документ");
	Прототип_СвНевозмПред = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_Документ, "СвНевозмПред");
	Для Каждого Стр0 Из Данные.СтруктураРеквизитов._СвНевозмПред Цикл
		Узел_СвНевозмПред = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Прототип_СвНевозмПред);
		РегламентированнаяОтчетность.УстановитьЗначениеЭлемента(Узел_СвНевозмПред, "ОписПричНепред", Стр0.ОписПричНепред);
		РегламентированнаяОтчетность.УстановитьЗначениеЭлемента(Узел_СвНевозмПред, "КодПрич", Стр0.КодПричины);
		Если ЗначениеЗаполнено(Стр0.СрокПредст) Тогда 
			РегламентированнаяОтчетность.УстановитьЗначениеЭлемента(Узел_СвНевозмПред, "СрокПредст", Стр0.СрокПредст);
		КонецЕсли;
		
		Прототип_ПорНомДок = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПред, "ПорНомДок");
		Для Каждого Элт Из Стр0.ПорНомДок Цикл 
			Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Прототип_ПорНомДок).Значение = Элт.Значение;
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Прототип_ПорНомДок);
		Прототип_КодЗапрДок = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПред, "КодЗапрДок");
		Для Каждого Элт Из Стр0.КодЗапрДок Цикл 
			Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Прототип_КодЗапрДок).Значение = Элт.Значение;
		КонецЦикла;
		РегламентированнаяОтчетность.УдалитьУзел(Прототип_КодЗапрДок);
		
		Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
			Узел_ИмяФайл = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПодчиненныйЭлемент(Узел_СвНевозмПред, "ИмяФайл");
			Для Каждого ИФ Из ФайлыПоСтраницам[Данные.СтруктураРеквизитов._СвНевозмПред.Индекс(Стр0)] Цикл
				Узел_ИмяФайлТек = Документы.УведомлениеОСпецрежимахНалогообложения.НовыйУзелИзПрототипа(Узел_ИмяФайл);
				Документы.УведомлениеОСпецрежимахНалогообложения.ВывестиПоказательВXML(Узел_ИмяФайлТек, ИФ);
			КонецЦикла;
			РегламентированнаяОтчетность.УдалитьУзел(Узел_ИмяФайл);
		КонецЕсли;
	КонецЦикла;
	РегламентированнаяОтчетность.УдалитьУзел(Прототип_СвНевозмПред);
КонецФункции

Функция ЭлектронноеПредставление_Форма2019_1(Объект, УникальныйИдентификатор)
	СписокФайлов = Новый Массив;
	ИменаФайлов = Новый Массив;
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2019_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДатаИмФайла = Формат(ТекущаяДатаСеанса(), "ДФ=_yyyyMMdd_");
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2019_1(Объект, УникальныйИдентификатор);
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		ИННФЛ = ?(ЗначениеЗаполнено(ОсновныеСведения.ИННФЛ), ОсновныеСведения.ИННФЛ, "000000000000");
		ИдентификаторОтправителя = СокрЛП(ИННФЛ);
	Иначе
		ИННЮЛ = ?(ЗначениеЗаполнено(ОсновныеСведения.ИННЮЛ), ОсновныеСведения.ИННЮЛ, "0000000000");
		КПП = ?(ЗначениеЗаполнено(ОсновныеСведения.КПП), ОсновныеСведения.КПП, "000000000");
		ИдентификаторОтправителя = ИННЮЛ + КПП;
	КонецЕсли;
	ОсновныеСведения.Вставить("ДатаИмФайла", ДатаИмФайла);
	ОсновныеСведения.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2019_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(ОсновныеСведения, СтруктураВыгрузки);
	ЗаполнитьДанными_Форма2019_1(Объект, СтруктураВыгрузки, СписокФайлов, ИменаФайлов, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Инд = 0 По СписокФайлов.ВГраница() Цикл 
			Файл = СписокФайлов[Инд];
			ИмяФайлаПрод = ИменаФайлов[Инд];
			СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
			СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ИмяФайлаПрод;
			СтрокаСведенийЭлектронногоПредставления.ДвоичныеДанныеФайла = МодульРаботаСФайлами.ДвоичныеДанныеФайла(Файл);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция ЭлектронноеПредставление_Форма2024_1(Объект, УникальныйИдентификатор)
	СписокФайлов = Новый Массив;
	ИменаФайлов = Новый Массив;
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2024_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	
	ДатаИмФайла = Формат(ТекущаяДатаСеанса(), "ДФ=_yyyyMMdd_");
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2024_1(Объект, УникальныйИдентификатор);
	Если ОсновныеСведения.ЭтоПБОЮЛ Тогда
		ИННФЛ = ?(ЗначениеЗаполнено(ОсновныеСведения.ИННФЛ), ОсновныеСведения.ИННФЛ, "000000000000");
		ИдентификаторОтправителя = СокрЛП(ИННФЛ);
	Иначе
		ИННЮЛ = ?(ЗначениеЗаполнено(ОсновныеСведения.ИННЮЛ), ОсновныеСведения.ИННЮЛ, "0000000000");
		КПП = ?(ЗначениеЗаполнено(ОсновныеСведения.КПП), ОсновныеСведения.КПП, "000000000");
		ИдентификаторОтправителя = ИННЮЛ + КПП;
	КонецЕсли;
	ОсновныеСведения.Вставить("ДатаИмФайла", ДатаИмФайла);
	ОсновныеСведения.Вставить("ИдентификаторОтправителя", ИдентификаторОтправителя);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2024_1");
	Документы.УведомлениеОСпецрежимахНалогообложения.ОбработатьУсловныеЭлементы(ОсновныеСведения, СтруктураВыгрузки);
	Документы.УведомлениеОСпецрежимахНалогообложения.ЗаполнитьПараметры(ОсновныеСведения, СтруктураВыгрузки);
	ЗаполнитьДанными_Форма2024_1(Объект, СтруктураВыгрузки, СписокФайлов, ИменаФайлов, ОсновныеСведения);
	Документы.УведомлениеОСпецрежимахНалогообложения.ОтсечьНезаполненныеНеобязательныеУзлы(СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	
	Если ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
		Для Инд = 0 По СписокФайлов.ВГраница() Цикл 
			Файл = СписокФайлов[Инд];
			ИмяФайлаПрод = ИменаФайлов[Инд];
			СтрокаСведенийЭлектронногоПредставления = СведенияЭлектронногоПредставления.Добавить();
			СтрокаСведенийЭлектронногоПредставления.ИмяФайла = ИмяФайлаПрод;
			СтрокаСведенийЭлектронногоПредставления.ДвоичныеДанныеФайла = МодульРаботаСФайлами.ДвоичныеДанныеФайла(Файл);
		КонецЦикла;
	КонецЕсли;
	
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

#КонецОбласти
#КонецЕсли