#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.РаботаСФайлами") Тогда
		Отказ = Истина;
		ОбщегоНазначения.СообщитьПользователю(НСтр("ru = 'Подсистема работы с файлами недоступна, обратитесь к администратору';
													|en = 'Подсистема работы с файлами недоступна, обратитесь к администратору'"));
		Возврат;
	КонецЕсли;
	
	Параметры.Свойство("Уведомление", Уведомление);
	Параметры.Свойство("РедактируемыйУИД", РедактируемыйУИД);
	
	Для Каждого Стр1 Из Параметры.ПриложенныеФайлы.ПолучитьЭлементы() Цикл 
		НовСтр = ПриложенныеФайлы.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр1);
		Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл 
			НовСтр2 = НовСтр.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр2, Стр2);
			НовСтр2.ИндексКартинки = 1;
		КонецЦикла;
	КонецЦикла;
	
	АвтоматическиПреобразоватьВЧБ = Истина;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыПриложенныеФайлы

&НаКлиенте
Процедура ПриложенныеФайлыПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если Строка = Неопределено
		Или ПриложенныеФайлы.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено Тогда 
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
	
	СтандартнаяОбработка = Ложь;
	СтрокаВДереве = ПриложенныеФайлы.НайтиПоИдентификатору(Строка);
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл
		СтрКопирования = ПриложенныеФайлы.НайтиПоИдентификатору(Элт);
		ЗаполнитьЗначенияСвойств(СтрокаВДереве.ПолучитьЭлементы().Добавить(), СтрКопирования);
		СтрКопирования.ПолучитьРодителя().ПолучитьЭлементы().Удалить(СтрКопирования);
	КонецЦикла;
	
	Элементы.ПриложенныеФайлы.Развернуть(Строка, Истина);
	ВладелецФормы.СинхронизацияДереваПриложенныхФайлов(ПриложенныеФайлы);
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Для Каждого Элт Из ПараметрыПеретаскивания.Значение Цикл 
		Если ПриложенныеФайлы.НайтиПоИдентификатору(Элт).ПолучитьРодителя() = Неопределено Тогда 
			Выполнение = Ложь;
			Возврат;
		КонецЕсли;
	КонецЦикла;
	ПараметрыПеретаскивания.ДопустимыеДействия = ДопустимыеДействияПеретаскивания.Перемещение;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПриАктивизацииСтроки(Элемент)
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	Элементы.ПриложенныеФайлыДобавитьФайл.Доступность = (ТекущиеДанные <> Неопределено);
	Элементы.ПриложенныеФайлыУдалитьДокумент.Доступность = ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.УИДДокумент);
	Элементы.ПриложенныеФайлыУдалитьФайл.Доступность = ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.УИДФайл);
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПередУдалением(Элемент, Отказ)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыПередНачаломДобавления(Элемент, Отказ, Копирование, Родитель, Группа, Параметр)
	Отказ = Истина;
КонецПроцедуры

&НаКлиенте
Процедура ПриложенныеФайлыВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	ТекущиеДанные = ПриложенныеФайлы.НайтиПоИдентификатору(ВыбраннаяСтрока);
	Если ЗначениеЗаполнено(ТекущиеДанные.ПрисоединенныйФайл) Тогда
		СтандартнаяОбработка = Ложь;
#Если ВебКлиент Тогда
		ПоказатьПрисоединенныйФайлВВебКлиенте(ТекущиеДанные);
#Иначе
		ИмяПромежуточногоФайла = ПолучитьИмяВременногоФайла(Сред(ТекущиеДанные.Документ, СтрНайти(ТекущиеДанные.Документ, ".", НаправлениеПоиска.СКонца) + 1));
		ДанныеФайла(ТекущиеДанные.ПрисоединенныйФайл).Записать(ИмяПромежуточногоФайла);
		ЗапуститьПриложение(ИмяПромежуточногоФайла);
#КонецЕсли
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьДокумент(Команда)
	РезультатВопроса = Ждать ВвестиСтрокуАсинх("", "Введите наименование, реквизиты и прочие признаки документа");
	Если ТипЗнч(РезультатВопроса) = Тип("Строка") 
		И ЗначениеЗаполнено(РезультатВопроса) Тогда 
		
		НовДок = ПриложенныеФайлы.ПолучитьЭлементы().Добавить();
		НовДок.Документ = РезультатВопроса;
		НовДок.УИДДокумент = Новый УникальныйИдентификатор;
		ВладелецФормы.Модифицированность = Истина;
		Элементы.ПриложенныеФайлыДобавитьФайл.Доступность = Истина;
		
		ВладелецФормы.СинхронизацияДереваПриложенныхФайлов(ПриложенныеФайлы);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьФайл(Команда)
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда 
		ПоказатьПредупреждение(, "Необходимо выбрать документ для добавления файла");
		Возврат;
	КонецЕсли;
	
	Если Не Ждать РегламентированнаяОтчетностьКлиент.РезультатПодключенияРасширенияРаботыСФайламиАсинх() Тогда 
		Возврат;
	КонецЕсли;
	
	Если ВладелецФормы.Модифицированность Или Не ЗначениеЗаполнено(ВладелецФормы.Объект.Ссылка) Тогда 
		Если Ждать ВопросАсинх("Для добавления файла необходимо сохранить уведомление. Сохранить?", РежимДиалогаВопрос.ДаНет) 
			<> КодВозвратаДиалога.Да Тогда
			Возврат;
		КонецЕсли;
		ВладелецФормы.СохранитьДанные();
	КонецЕсли;
	
	ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
	ДиалогОткрытияФайла.МножественныйВыбор = Ложь;
	ДиалогОткрытияФайла.Заголовок = "Выберите файл";
	ДиалогОткрытияФайла.Фильтр = "Документы pdf, jpeg, tif, png|*.pdf;*.jpeg;*.tif;*.png;*.jpg;*.tiff";

	ВыбранныеФайлы = Ждать ДиалогОткрытияФайла.ВыбратьАсинх();
	Если ТипЗнч(ВыбранныеФайлы) <> Тип("Массив") Или ВыбранныеФайлы.Количество() = 0 Тогда 
		Возврат;
	КонецЕсли;
	
	АдресДвоичныхДанныхФайла = ПоместитьВоВременноеХранилище(Ждать СоздатьДвоичныеДанныеИзФайлаАсинх(ВыбранныеФайлы[0]), УникальныйИдентификатор);
	Каталог = Лев(ВыбранныеФайлы[0], СтрНайти(ВыбранныеФайлы[0], ПолучитьРазделительПути(), НаправлениеПоиска.СКонца));
	
	Элт = Элементы.ПриложенныеФайлы.ТекущиеДанные.ПолучитьРодителя();
	Если Элт = Неопределено Тогда 
		Элт = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	КонецЕсли;
	ПодчЭлт = Элт.ПолучитьЭлементы().Добавить();
	
	Попытка
		ЗаполнитьСтруктуруДанныхФайла(АдресДвоичныхДанныхФайла, ВыбранныеФайлы[0], Каталог, ПодчЭлт.ПолучитьИдентификатор());
		Элементы.ПриложенныеФайлы.Развернуть(ПодчЭлт.ПолучитьРодителя().ПолучитьИдентификатор());
		ВладелецФормы.ОбработкаПослеДобавленияПрисоединенногоФайла(ПодчЭлт.ПолучитьРодителя().Документ, ПодчЭлт.ПолучитьРодителя().УИДДокумент, ПодчЭлт.УИДФайл, ПодчЭлт.ПрисоединенныйФайл, ПодчЭлт.Документ);
	Исключение
		ПоказатьПредупреждение(, "При загрузке файла возникла ошибка.");
	КонецПопытки;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьФайл(Команда)
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	Если ТекущиеДанные <> Неопределено И ЗначениеЗаполнено(ТекущиеДанные.УИДФайл) Тогда 
		УИДФайл = ТекущиеДанные.УИДФайл;
		УИДДокумент = ТекущиеДанные.ПолучитьРодителя().УИДДокумент;
		ПрисоединенныйФайл = ТекущиеДанные.ПрисоединенныйФайл;
		ТекущиеДанные.ПолучитьРодителя().ПолучитьЭлементы().Удалить(ТекущиеДанные);
		УдалитьФайлНаСервере(ПрисоединенныйФайл);
		ВладелецФормы.ОбработкаПослеУдаленияПрисоединенногоФайла(УИДДокумент, УИДФайл);
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура УдалитьДокумент(Команда)
	ТекущиеДанные = Элементы.ПриложенныеФайлы.ТекущиеДанные;
	
	Если ТекущиеДанные <> Неопределено И (Не ЗначениеЗаполнено(ТекущиеДанные.УИДФайл) И ЗначениеЗаполнено(ТекущиеДанные.УИДДокумент)) Тогда 
		МассивПрисоединенныхФайлов = Новый Массив;
		Для Каждого Стр Из ТекущиеДанные.ПолучитьЭлементы() Цикл
			МассивПрисоединенныхФайлов.Добавить(Стр.ПрисоединенныйФайл);
		КонецЦикла;
		УИДДокумент = ТекущиеДанные.УИДДокумент;
		
		ПриложенныеФайлы.ПолучитьЭлементы().Удалить(ТекущиеДанные);
		УдалитьДокументНаСервере(УИДДокумент, МассивПрисоединенныхФайлов);
		ВладелецФормы.ОбработкаПослеУдаленияДокумента(УИДДокумент);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура ЗаполнитьСтруктуруДанныхФайла(АдресФайла, ПолноеИмяФайла, Каталог, ИДВДереве) Экспорт
	Если АвтоматическиПреобразоватьВЧБ И Не СтрЗаканчиваетсяНа(НРег(ПолноеИмяФайла), ".pdf") Тогда 
		ОбрабатываемаяКартинка = новый ОбрабатываемаяКартинка(Новый Картинка(ПолучитьИзВременногоХранилища(АдресФайла)));
		ОбрабатываемаяКартинка.УстановитьГлубинуЦвета(ГлубинаЦвета.БитНаПиксел1);
		ОбрабатываемаяКартинка.УстановитьПлотность(300, 300);
		АдресФайла = ПоместитьВоВременноеХранилище(ОбрабатываемаяКартинка.ПолучитьКартинку().ПолучитьДвоичныеДанные(), УникальныйИдентификатор);
	КонецЕсли;
	
	МодульРаботаСФайлами = ОбщегоНазначения.ОбщийМодуль("РаботаСФайлами");
	ИмяФайла = СтрЗаменить(ПолноеИмяФайла, Каталог, "");
	ИмяБезРасширения = Лев(ИмяФайла, СтрНайти(ИмяФайла, ".", НаправлениеПоиска.СКонца) - 1);
	ПараметрыФайла = Новый Структура;
	ПараметрыФайла.Вставить("ВладелецФайлов", Уведомление);
	ПараметрыФайла.Вставить("Автор", Неопределено);
	ПараметрыФайла.Вставить("ИмяБезРасширения", СтрЗаменить(Строка(Новый УникальныйИдентификатор), "-", ""));
	ПараметрыФайла.Вставить("РасширениеБезТочки", Неопределено);
	ПараметрыФайла.Вставить("ВремяИзменения", Неопределено);
	ПараметрыФайла.Вставить("ВремяИзмененияУниверсальное", Неопределено);
	ПараметрыФайла.Вставить("Служебный", Истина);
	НоваяСсылкаНаФайл = МодульРаботаСФайлами.ДобавитьФайл(ПараметрыФайла, АдресФайла, , "Файл создан автоматически из формы уведомления, редактирование запрещено.");
	Файл = ПриложенныеФайлы.НайтиПоИдентификатору(ИДВДереве);
	Файл.ПрисоединенныйФайл = НоваяСсылкаНаФайл;
	Файл.Документ = ИмяФайла;
	Файл.УИДФайл = Новый УникальныйИдентификатор;
	Файл.УИДДокумент = Файл.ПолучитьРодителя().УИДДокумент;
	Файл.ИндексКартинки = 1;
КонецПроцедуры

&НаСервере
Процедура УдалитьФайлНаСервере(ПрисоединенныйФайл)
	УведомлениеОСпецрежимахНалогообложения.УдалениеПрисоединенногоСлужебногоФайла(ПрисоединенныйФайл);
КонецПроцедуры

&НаСервере
Процедура УдалитьДокументНаСервере(УИДДокумент, МассивПрисоединенныхФайлов)
	ЕстьИсключение = Ложь;
	ПравоДоступаУдаление = ПравоДоступа("Удаление", Метаданные.Справочники.РегламентированныйОтчетПрисоединенныеФайлы);
	Для Каждого Элт Из МассивПрисоединенныхФайлов Цикл
		Попытка
			ПрисоединенныйФайлОбъект = Элт.ПолучитьОбъект();
			Если ПравоДоступаУдаление Тогда 
				ПрисоединенныйФайлОбъект.Удалить();
			Иначе
				ПрисоединенныйФайлОбъект.ПометкаУдаления = Истина;
				ПрисоединенныйФайлОбъект.Записать();
			КонецЕсли;
		Исключение
			ЕстьИсключение = Истина;
		КонецПопытки;
	КонецЦикла;
	
	Если ЕстьИсключение Тогда 
		ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю("При установке пометки удаления присоединенного файла произошли ошибки");
	КонецЕсли;
КонецПроцедуры

&НаСервереБезКонтекста
Функция ДанныеФайла(ПрисоединенныйФайл)
	Возврат РаботаСФайлами.ДвоичныеДанныеФайла(ПрисоединенныйФайл);
КонецФункции

#Если ВебКлиент Тогда

&НаКлиенте
Асинх Процедура ПоказатьПрисоединенныйФайлВВебКлиенте(ТекущиеДанные)
	УведомлениеОСпецрежимахНалогообложенияКлиент.ПоказатьПрисоединенныйФайлВВебКлиенте(
		ТекущиеДанные.ПрисоединенныйФайл, 
		Сред(ТекущиеДанные.Документ, СтрНайти(ТекущиеДанные.Документ, ".", НаправлениеПоиска.СКонца) + 1));
КонецПроцедуры

#КонецЕсли

#КонецОбласти
