#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	Если Параметры.Свойство("АвтоТест") Тогда
		Возврат;
	КонецЕсли;
	
	Для Каждого Стр1 Из Параметры._ДокИнф.ПолучитьЭлементы() Цикл 
		НовСтр = _ДокИнф.ПолучитьЭлементы().Добавить();
		ЗаполнитьЗначенияСвойств(НовСтр, Стр1);
		НовСтр.Валидно = СтрокаСоответствуетФорматуНомераДокумента(НовСтр.ПорНомДок);
		Для Каждого Стр2 Из Стр1.ПолучитьЭлементы() Цикл 
			НовСтр2 = НовСтр.ПолучитьЭлементы().Добавить();
			ЗаполнитьЗначенияСвойств(НовСтр2, Стр2);
			НовСтр2.Валидно = СтрокаСоответствуетФорматуНомераДокумента(НовСтр2.ПорНомДок);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормы_ДокИнф

&НаКлиенте
Процедура _ДокИнфПриАктивизацииСтроки(Элемент)
	Элементы._ДокИнфДобавить.Доступность = (Элемент.ТекущиеДанные <> Неопределено) И (Элемент.ТекущиеДанные.ПолучитьРодителя() = Неопределено);
	Элементы._ДокИнфУдалить.Доступность = (Элемент.ТекущиеДанные <> Неопределено);
КонецПроцедуры

&НаКлиенте
Процедура _ДокИнфВыбор(Элемент, ВыбраннаяСтрока, Поле, СтандартнаяОбработка)
	Если Поле.Имя = "_ДокИнфСведДокИнф" 
		И _ДокИнф.НайтиПоИдентификатору(ВыбраннаяСтрока) <> Неопределено 
		И ЗначениеЗаполнено(_ДокИнф.НайтиПоИдентификатору(ВыбраннаяСтрока).СведДокИнф) Тогда 
		
		СтандартнаяОбработка = Ложь;
		_ДокИнфВыборВводСтроки();
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ДокИнфНачалоПеретаскивания(Элемент, ПараметрыПеретаскивания, Выполнение)
	Если _ДокИнф.НайтиПоИдентификатору(ПараметрыПеретаскивания.Значение).ПолучитьРодителя() = Неопределено Тогда 
		Выполнение = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ДокИнфПеретаскивание(Элемент, ПараметрыПеретаскивания, СтандартнаяОбработка, Строка, Поле)
	Если Строка = Неопределено
		Или _ДокИнф.НайтиПоИдентификатору(Строка).ПолучитьРодителя() <> Неопределено Тогда 
		СтандартнаяОбработка = Ложь;
		Возврат;
	КонецЕсли;
КонецПроцедуры

&НаКлиенте
Процедура _ДокИнфПорНомДокПриИзменении(Элемент)
	ТекущиеДанные = Элементы._ДокИнф.ТекущиеДанные;
	ТекущиеДанные.Валидно = СтрокаСоответствуетФорматуНомераДокумента(ТекущиеДанные.ПорНомДок);
	Если Не ТекущиеДанные.Валидно Тогда 
		ОбщегоНазначенияКлиент.СообщитьПользователю("Номер документа из требования не соответствует формату");
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура Ок(Команда)
	Закрыть(Новый Структура("_ДокИнф, ТекстовоеОписание", _ДокИнф, "Сведения о " + _ДокИнф.ПолучитьЭлементы().Количество() + " документах"));
КонецПроцедуры

&НаКлиенте
Процедура Отмена(Команда)
	Закрыть();
КонецПроцедуры

&НаКлиенте
Асинх Процедура ДобавитьДокумент(Команда)
	Текст = Ждать ВвестиСтрокуАсинх(, "Наименования и реквизиты документов (сведений), указанных в требовании", 2000, Истина);
	Если Текст <> Неопределено И ЗначениеЗаполнено(Текст) Тогда
		НовСтр = _ДокИнф.ПолучитьЭлементы().Добавить();
		НовСтр.СведДокИнф = Текст;
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Асинх Процедура _ДокИнфВыборВводСтроки()
	Текст = Ждать ВвестиСтрокуАсинх(Элементы._ДокИнф.ТекущиеДанные.СведДокИнф, 
		"Наименования и реквизиты документов (сведений), указанных в требовании", 2000, Истина);
	Если Текст <> Неопределено И ЗначениеЗаполнено(Текст) Тогда
		НовСтр = Элементы._ДокИнф.ТекущиеДанные;
		НовСтр.СведДокИнф = Текст;
	КонецЕсли;
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Функция СтрокаСоответствуетФорматуНомераДокумента(Стр)
	Если Не ЗначениеЗаполнено(Стр) Или Стр = "Z.ZZ" Тогда 
		Возврат Истина;
	КонецЕсли;
	Если СтрДлина(Стр) <> 4 
		Или Сред(Стр, 2, 1) <> "."
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Лев(Стр, 1))
		Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Прав(Стр, 2)) Тогда 
		
		Возврат Ложь;
	КонецЕсли;
	Возврат Истина;
КонецФункции

#КонецОбласти
