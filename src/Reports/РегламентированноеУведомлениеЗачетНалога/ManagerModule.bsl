#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

//Данные - структура
//			Организация
//			РегистрацияВИФНС
//			ЛистыА - массив структур
//			ЛистыБ - массив структур
//			ЛистыВ - массив структур
//			Стр01 - структура
//			Стр02 - структура
Функция СформироватьНовоеУведомление(РедакцияФормы, Данные) Экспорт
	Если РедакцияФормы = "Форма2023_1" Тогда
		Возврат СформироватьНовоеУведомление_2023_1(Данные);
	КонецЕсли;
КонецФункции

// Возвращает актуальную форму отчета
//
// Возвращаемое значение:
//  Строка
//
Функция ПолучитьФормуПоУмолчанию() Экспорт 
	Возврат "";
КонецФункции

Функция СформироватьСписокЛистов(Объект) Экспорт
	Если Объект.ИмяФормы = "Форма2017_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2017_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2018_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2018_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2021_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2021_1(Объект);
	ИначеЕсли Объект.ИмяФормы = "Форма2023_1" Тогда 
		Возврат СформироватьСписокЛистовФорма2023_1(Объект);
	КонецЕсли;
КонецФункции

Функция ДействующаяРедакцияФормы(Дата) Экспорт
	Возврат "Форма2023_1"
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции
Функция ДанноеУведомлениеДоступноДляОрганизации() Экспорт 
	Возврат Истина;
КонецФункции

Функция ДанноеУведомлениеДоступноДляИП() Экспорт 
	Возврат Истина;
КонецФункции

Функция ПолучитьОсновнуюФорму() Экспорт 
	Возврат "";
КонецФункции

Функция ПолучитьТаблицуФорм() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуФормУведомления();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.ОписаниеФормы = "В соответствии с приказом ФНС России от 30.11.2022 № ЕД-7-8/1133@";
	Стр.ДатаНачала = '20230101';
	Стр.ДатаКонца = '20990101';
	
	Возврат Результат;
КонецФункции

Функция ПолучитьТаблицуПримененияФорматов() Экспорт 
	Результат = Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюТаблицуПримененияФорматов();
	
	Стр = Результат.Добавить();
	Стр.ИмяФормы = "Форма2023_1";
	Стр.КНД = "1150057";
	Стр.ВерсияФормата = "5.04";
	
	Возврат Результат;
КонецФункции

Функция ЭлектронноеПредставление(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт
	Если ИмяФормы = "Форма2023_1" Тогда
		Возврат ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу(Объект, ИмяФормы, УникальныйИдентификатор) Экспорт 
	Если ИмяФормы = "Форма2023_1" Тогда 
		Возврат ПроверитьДокументСВыводомВТаблицу_Форма2023_1(
			УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект), УникальныйИдентификатор);
	КонецЕсли;
КонецФункции

Функция ИдентификаторФайлаЭлектронногоПредставления(СведенияОтправки)
	Префикс = "UT_ZZIUN";
	Возврат Документы.УведомлениеОСпецрежимахНалогообложения.ИдентификаторФайлаЭлектронногоПредставления(Префикс, СведенияОтправки);
КонецФункции

Функция ПроверитьДокументСВыводомВТаблицу_Форма2023_1(Данные, УникальныйИдентификатор)
	ТаблицаОшибок = Новый СписокЗначений;
	УведомлениеОСпецрежимахНалогообложения.ПроверкаАктуальностиФормыПриВыгрузке(
		Данные.Объект.ИмяФормы, ТаблицаОшибок, ПолучитьТаблицуФорм());
	
	ЭтоЮЛ = РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация);
	Титульная = Данные.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИННКПП(
		РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Данные.Организация), Титульная, ТаблицаОшибок);
	
	Если Не ЗначениеЗаполнено(Титульная.ПРИЗНАК_НП_ПОДВАЛ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак подписанта", "Титульная", "ПРИЗНАК_НП_ПОДВАЛ"));
	КонецЕсли;
	Если Не ЗначениеЗаполнено(Титульная.ДАТА_ПОДПИСИ) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указана дата подписи", "Титульная", "ДАТА_ПОДПИСИ"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаПодписантаНалоговойОтчетности(Данные, ТаблицаОшибок, "Титульная", Истина);
	Если Титульная.ПРИЗНАК_НП_ПОДВАЛ = "2" И Не ЗначениеЗаполнено(Титульная.НаимДок) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан документ представителя", "Титульная", "НаимДок"));
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКодаНО(Титульная.КодНО, ТаблицаОшибок, "Титульная");
	
	Если Не ЗначениеЗаполнено(Титульная.ПрЗачет) Тогда 
		ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
			"Не указан признак зачета", "Титульная", "ПрЗачет"));
	Иначе
		ЗаполненаМнгСтр1 = УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(Данные.ДанныеДопСтрокБД.МнгСтр1);
		ЗаполненаМнгСтр2 = УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(Данные.ДанныеДопСтрокБД.МнгСтр2);
		ЗаполненаМнгСтр3 = УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(Данные.ДанныеДопСтрокБД.МнгСтр3);
		ЗаполненаМнгСтр4 = УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(Данные.ДанныеДопСтрокБД.МнгСтр4);
		ПараметрыПроверки = Новый Структура("П1,П2,П3,П4", ЗаполненаМнгСтр1, ЗаполненаМнгСтр2, ЗаполненаМнгСтр3, ЗаполненаМнгСтр4);
		
		Для Инд = 1 По 4 Цикл 
			Заполненность = ОбщегоНазначения.ВычислитьВБезопасномРежиме("Параметры.П" + Инд, ПараметрыПроверки);
			Если Титульная.ПрЗачет <> "" + Инд И Заполненность Тогда  
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При признаке зачета " + Титульная.ПрЗачет + " данная таблица не заполняется", "ЗачетСумЕНС", "СумЗачет" + Инд + "___1"));
			ИначеЕсли Титульная.ПрЗачет = "" + Инд И Не Заполненность Тогда  
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"При признаке зачета " + Титульная.ПрЗачет + " таблицу необходимо заполнить", "ЗачетСумЕНС", "СумЗачет" + Инд + "___1"));
			КонецЕсли;
		КонецЦикла;
		
		Если ЗаполненаМнгСтр1 Тогда
			Инд = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр1 Цикл 
				Инд = Инд + 1;
				Если ЗначениеЗаполнено(Стр.ИННЮЛ) И ЗначениеЗаполнено(Стр.ИННФЛ) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Заполняется либо ИНН организации, либо ИНН физлица", "ЗачетСумЕНС", "ИННЮЛ___" + Инд));
				ИначеЕсли Не ЗначениеЗаполнено(Стр.ИННЮЛ) И Не ЗначениеЗаполнено(Стр.ИННФЛ) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить ИНН", "ЗачетСумЕНС", "ИННЮЛ___" + Инд));
				КонецЕсли;
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Стр, ТаблицаОшибок, "ЗачетСумЕНС", "ИННЮЛ", Ложь, Истина, Инд);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Стр, ТаблицаОшибок, "ЗачетСумЕНС", "ИННФЛ", Ложь, Ложь, Инд);
			КонецЦикла;
		КонецЕсли;
		Если ЗаполненаМнгСтр2 Тогда
			Инд = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр2 Цикл
				Инд = Инд + 1;
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКПП(Стр, ТаблицаОшибок, "ЗачетСумЕНС", "КПП", ЭтоЮЛ, Инд);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКТМО(Стр, ТаблицаОшибок, "ЗачетСумЕНС", "ОКТМО", Истина, Инд);
				УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаКБК(Стр, ТаблицаОшибок, "ЗачетСумЕНС", "КБК", Истина, Инд);
				Если Не ЗначениеЗаполнено(Стр.ПрНалАгент) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить признак налогового агента", "ЗачетСумЕНС", "ПрНалАгент___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.СрокУпл) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить срок уплаты", "ЗачетСумЕНС", "СрокУпл___" + Инд));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ЗаполненаМнгСтр3 Тогда
			Инд = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр3 Цикл 
				Инд = Инд + 1;
				Если Не ЗначениеЗаполнено(Стр.ДокОснов1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить код документа-основание", "ЗачетСумЕНС", "ДокОснов1___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.НомерДокОснов1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить номер документа-основание", "ЗачетСумЕНС", "НомерДокОснов1___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.ДатаДокОснов1) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить дату документа-основание", "ЗачетСумЕНС", "ДатаДокОснов1___" + Инд));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		Если ЗаполненаМнгСтр4 Тогда
			Инд = 0;
			Для Каждого Стр Из Данные.ДанныеДопСтрокБД.МнгСтр4 Цикл 
				Инд = Инд + 1;
				Если Не ЗначениеЗаполнено(Стр.ДокОснов2) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить код документа-основание", "ЗачетСумЕНС", "ДокОснов2___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.НомерДокОснов2) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить номер документа-основание", "ЗачетСумЕНС", "НомерДокОснов2___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.ДатаДокОснов2) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить дату документа-основание", "ЗачетСумЕНС", "ДатаДокОснов2___" + Инд));
				КонецЕсли;
				Если Не ЗначениеЗаполнено(Стр.ДатаВступ) Тогда 
					ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
						"Необходимо заполнить дату вступления в силу", "ЗачетСумЕНС", "ДатаВступ___" + Инд));
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
	УведомлениеОСпецрежимахНалогообложения.ПроверкаДатВУведомлении(Данные, ТаблицаОшибок);
	УведомлениеОСпецрежимахНалогообложения.ПолнаяПроверкаЗаполненныхПоказателейНаСоотвествиеСписку(
		"СпискиВыбора2023_1", "СхемаВыгрузкиФорма2023_1", Данные.Объект.ИмяОтчета, ТаблицаОшибок, Данные);
	Возврат ТаблицаОшибок;
КонецФункции

Функция ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор)
	ОсновныеСведения = Документы.УведомлениеОСпецрежимахНалогообложения.НачальнаяИнициализацияОбщихРеквизитовВыгрузки(Объект);
	ИдентификаторФайла = ИдентификаторФайлаЭлектронногоПредставления(ОсновныеСведения);
	ОсновныеСведения.Вставить("ИдФайл", ИдентификаторФайла);
	Возврат ОсновныеСведения;
КонецФункции

Функция ЭлектронноеПредставление_Форма2023_1(Объект, УникальныйИдентификатор)
	СведенияЭлектронногоПредставления = УведомлениеОСпецрежимахНалогообложения.СведенияЭлектронногоПредставления();
	ДанныеУведомления = УведомлениеОСпецрежимахНалогообложения.ДанныеУведомленияДляВыгрузки(Объект);
	Ошибки = ПроверитьДокументСВыводомВТаблицу_Форма2023_1(ДанныеУведомления, УникальныйИдентификатор);
	УведомлениеОСпецрежимахНалогообложения.СообщитьОшибкиПриПроверкеВыгрузки(Объект, Ошибки, ДанныеУведомления);
	
	ОсновныеСведения = ОсновныеСведенияЭлектронногоПредставления_Форма2023_1(Объект, УникальныйИдентификатор);
	СтруктураВыгрузки = Документы.УведомлениеОСпецрежимахНалогообложения.ИзвлечьСтруктуруXMLУведомления(Объект.ИмяОтчета, "СхемаВыгрузкиФорма2023_1");
	УведомлениеОСпецрежимахНалогообложения.ТиповоеЗаполнениеДанными(ДанныеУведомления, ОсновныеСведения, СтруктураВыгрузки);
	УведомлениеОСпецрежимахНалогообложения.ВыгрузитьДеревоВТаблицу(СтруктураВыгрузки, ОсновныеСведения, СведенияЭлектронногоПредставления);
	Возврат СведенияЭлектронногоПредставления;
КонецФункции

Функция СформироватьСписокЛистовФорма2017_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	НомСтр = 0;
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], НомСтр, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2017_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2017_1_Лист002"), ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Процедура НапечататьЛистыСвед_2018(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, СписокИспользуемыхМакетов)
	Попытка
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2018_1_Свед");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	ТекИнд = 1;
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.Свед Цикл
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.КодПериода)
			И Не ЗначениеЗаполнено(Свед.Месяц)
			И Не ЗначениеЗаполнено(Свед.Год)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ПФкс = "_" + ТекИнд;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ПрЗач, "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодПериода, "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Месяц, "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.Год, "Год" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ОКТМО, "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КБК, "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодНОПрПост, "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(ОТЧ.ПривестиЗначение(Свед.Сумма), "Сумма" + ПФкс, ПечатнаяФорма.Области);
		
		Если ТекИнд = 5 Тогда 
			ТекИнд = 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(МакетПФ);
			Продолжить;
		КонецЕсли;
		
		ТекИнд = ТекИнд + 1;
	КонецЦикла;
	
	Если ТекИнд <> 1 Тогда
		Пока ТекИнд <> 5 Цикл
			ПФкс = "_" + ТекИнд;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодПериода" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Месяц" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Год" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Сумма" + ПФкс, ПечатнаяФорма.Области, "-");
			ТекИнд = ТекИнд + 1;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
	КонецЕсли;
КонецПроцедуры

Процедура НапечататьЛистыСвед_2021(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, СписокИспользуемыхМакетов)
	Попытка
		МакетПФ = УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2021_1_СвНОПрПост");
		ОТЧ = Новый ОписаниеТипов("Число");
	Исключение
		Возврат;
	КонецПопытки;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	ПечатнаяФорма.Вывести(МакетПФ);
	ТекИнд = 1;
	Для Каждого Элт Из СтруктураПараметров.ДанныеМногостраничныхРазделов.СвНОПрПост Цикл
		Свед = Элт.Значение;
		Если Не ЗначениеЗаполнено(Свед.ПрЗач)
			И Не ЗначениеЗаполнено(Свед.Сумма)
			И Не ЗначениеЗаполнено(Свед.ОКТМО)
			И Не ЗначениеЗаполнено(Свед.КБК)
			И Не ЗначениеЗаполнено(Свед.КодНОПрПост) Тогда 
			
			Продолжить;
		КонецЕсли;
		
		ПФкс = "_" + ТекИнд;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ПрЗач, "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.ОКТМО, "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КБК, "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Свед.КодНОПрПост, "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиЧислоСПрочеркамиНаПечать(ОТЧ.ПривестиЗначение(Свед.Сумма), "Сумма" + ПФкс, ПечатнаяФорма.Области);
		
		Если ТекИнд = 5 Тогда 
			ТекИнд = 1;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
			ПечатнаяФорма.Вывести(МакетПФ);
			Продолжить;
		КонецЕсли;
		
		ТекИнд = ТекИнд + 1;
	КонецЦикла;
	
	Если ТекИнд <> 1 Тогда
		Пока ТекИнд <= 5 Цикл
			ПФкс = "_" + ТекИнд;
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ПрЗач" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "ОКТМО" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КБК" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "КодНОПрПост" + ПФкс, ПечатнаяФорма.Области, "-");
			УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Сумма" + ПФкс, ПечатнаяФорма.Области, "-");
			ТекИнд = ТекИнд + 1;
		КонецЦикла;
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.ИНН, "ИННШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(ИННКПП.КПП, "КППШапка", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(Формат(НомСтр, "ЧЦ=3; ЧВН="), "НомСтр", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
		НомСтр = НомСтр + 1;
	КонецЕсли;
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2018_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], 0, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2018_1_Титульная"), ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1);
	
	НомСтр = 2;
	НапечататьЛистыСвед_2018(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, СписокИспользуемыхМакетов);
	НомСтр = НомСтр - 1;
	
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Лист002"], НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2018_1_Лист002"), ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Функция СформироватьСписокЛистовФорма2021_1(Объект) Экспорт
	СписокИспользуемыхМакетов = УведомлениеОСпецрежимахНалогообложения.ЗагрузитьМакетыИзАрхива(Объект, "БланкиПечати_");
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	
	УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["Титульная"], 0, 
		УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2021_1_Титульная"), ПечатнаяФорма, ИННКПП);
	РазложениеСтатьиНК = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(
		Строка(СтруктураПараметров.ДанныеУведомления["Титульная"].НомерСтНК), ".");
	Если РазложениеСтатьиНК.Количество() > 1 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[0], "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[1], "Подпункт", ПечатнаяФорма.Области, "-");
	ИначеЕсли РазложениеСтатьиНК.Количество() = 1 Тогда 
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать(РазложениеСтатьиНК[0], "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Подпункт", ПечатнаяФорма.Области, "-");
	Иначе
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Пункт", ПечатнаяФорма.Области, "-");
		УведомлениеОСпецрежимахНалогообложения.ВывестиСтрокуНаПечать("", "Подпункт", ПечатнаяФорма.Области, "-");
	КонецЕсли;
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, 1);
	
	НомСтр = 2;
	НапечататьЛистыСвед_2021(Объект, Листы, СтруктураПараметров, НомСтр, ИННКПП, СписокИспользуемыхМакетов);
	НомСтр = НомСтр - 1;
	
	Если Не ЗначениеЗаполнено(СтруктураПараметров.ДанныеУведомления.Титульная.ИНН)
		И Не РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Объект.Организация) Тогда
		
		УведомлениеОСпецрежимахНалогообложения.НапечататьСтруктуру(Объект.ИмяОтчета, СтруктураПараметров.ДанныеУведомления["УдЛичнФЛ"], НомСтр, 
			УведомлениеОСпецрежимахНалогообложения.ПустойМакетИзСписка(Объект, СписокИспользуемыхМакетов, "Печать_Форма2021_1_УдЛичнФЛ"), ПечатнаяФорма, ИННКПП);
		УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
	КонецЕсли;
	
	Возврат Листы;
КонецФункции

Процедура ВставитьОбласть(Макет, ПечатнаяФорма, ИмяОбласти, Данные)
	ПредставлениеОбласти = Макет.ПолучитьОбласть(ИмяОбласти);
	Для Каждого КЗ Из Данные Цикл
		Область = ПредставлениеОбласти.Области.Найти(КЗ.Ключ);
		Если ТипЗнч(Область) = Тип("ОбластьЯчеекТабличногоДокумента") Тогда 
			Область.Текст = КЗ.Значение;
		КонецЕсли;
	КонецЦикла;
	ПечатнаяФорма.ВставитьОбласть(ПредставлениеОбласти.Область(),
		ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
КонецПроцедуры

Функция СформироватьСписокЛистовФорма2023_1(Объект) Экспорт
	Листы = Новый СписокЗначений;
	
	ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
	СтруктураПараметров = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Объект.Ссылка, "ДанныеУведомления").Получить();
	ИННКПП = УведомлениеОСпецрежимахНалогообложения.ТиповаяСтруктураИННКППДляПечати(Объект, СтруктураПараметров.ДанныеУведомления.Титульная);
	ИННКПП.Вставить("КодНО", СтруктураПараметров.ДанныеУведомления.Титульная.КодНО);
	ИННКПП.Вставить("ПРИЗНАК_НП_ПОДВАЛ", СтруктураПараметров.ДанныеУведомления.Титульная.ПРИЗНАК_НП_ПОДВАЛ);
	ИННКПП.Вставить("НомСтр", 0);
	
	Титульная = СтруктураПараметров.ДанныеУведомления.Титульная;
	УведомлениеОСпецрежимахНалогообложения.НапечататьДанные(Объект.ИмяОтчета,
		Титульная, "Печать_Форма2023_1_Титульная", ПечатнаяФорма, ИННКПП);
	УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, ИННКПП.НомСтр, Ложь);
	
	Макет = Отчеты[Объект.ИмяОтчета].ПолучитьМакет("Печать_Форма2023_1_МногострочныеЧасти");
	ЗаголовокИННКПП = Макет.ПолучитьОбласть("ЗаголовокИННКПП");
	ЗаголовокИННКПП.Области.ИНН.Текст = ИННКПП.ИНН;
	ЗаголовокИННКПП.Области.КПП.Текст = ИННКПП.КПП;
	ПодчеркСнизу = Макет.ПолучитьОбласть("ПодчеркСнизу").Область();
	
	НомСтр = 2;
	КоличествоСтрокМногострочнойЧасти = Новый Соответствие;
	КоличествоСтрокМногострочнойЧасти[1] = 11;
	КоличествоСтрокМногострочнойЧасти[2] = 4;
	КоличествоСтрокМногострочнойЧасти[3] = 6;
	КоличествоСтрокМногострочнойЧасти[4] = 6;
	Для НомерМногострочнойЧасти = 1 По 4 Цикл 
		Таблица = СтруктураПараметров.ДанныеДопСтрокБД["МнгСтр" + НомерМногострочнойЧасти];
		Если Не УведомлениеОСпецрежимахНалогообложения.МногострочнаяЧастьЗаполнена(Таблица) Тогда 
			Продолжить;
		КонецЕсли;
		ПечатнаяФорма = УведомлениеОСпецрежимахНалогообложения.НовыйПустойЛист();
		ПечатнаяФорма.ВставитьОбласть(ЗаголовокИННКПП.Область(), 
			ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
		ПечатнаяФорма.ВставитьОбласть(Макет.ПолучитьОбласть("ЗаголовокМнгСтр" + НомерМногострочнойЧасти).Область(), 
			ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
		КоличествоСтрок = 0;
		Для Каждого Стр Из Таблица Цикл
			СтраницаДляПечати = ОбщегоНазначения.СтрокаТаблицыЗначенийВСтруктуру(Стр);
			Если Не УведомлениеОСпецрежимахНалогообложения.СтраницаЗаполнена(СтраницаДляПечати) Тогда 
				Продолжить;
			КонецЕсли;
			КоличествоСтрок = КоличествоСтрок + 1;
			
			Если НомерМногострочнойЧасти = 1 Тогда 
				УведомлениеОСпецрежимахНалогообложения.РазбитьЧислоДляПечатиВПрямоугольники(СтраницаДляПечати, "СумЗачет1", 2);
				СтраницаДляПечати.Вставить("ИННФЛЮЛ", ?(ЗначениеЗаполнено(Стр.ИННЮЛ), Стр.ИННЮЛ, Стр.ИННФЛ));
			ИначеЕсли НомерМногострочнойЧасти = 2 Тогда 
				УведомлениеОСпецрежимахНалогообложения.РазбитьЧислоДляПечатиВПрямоугольники(СтраницаДляПечати, "СумЗачет2", 2);
				УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СтраницаДляПечати, "СрокУпл");
				СтраницаДляПечати.Вставить("КППЮЛ", Стр.КПП);
			ИначеЕсли НомерМногострочнойЧасти = 3 Тогда
				УведомлениеОСпецрежимахНалогообложения.РазбитьЧислоДляПечатиВПрямоугольники(СтраницаДляПечати, "СумЗачет3", 2);
				УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СтраницаДляПечати, "ДатаДокОснов1");
			ИначеЕсли НомерМногострочнойЧасти = 4 Тогда 
				УведомлениеОСпецрежимахНалогообложения.РазбитьЧислоДляПечатиВПрямоугольники(СтраницаДляПечати, "СумЗачет4", 2);
				УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СтраницаДляПечати, "ДатаДокОснов2");
				УведомлениеОСпецрежимахНалогообложения.РазбитьДатуДляПечатиВПрямоугольники(СтраницаДляПечати, "ДатаВступ");
			КонецЕсли;
			
			ВставитьОбласть(Макет, ПечатнаяФорма, "МнгСтр" + НомерМногострочнойЧасти, СтраницаДляПечати);
			Если КоличествоСтрок = КоличествоСтрокМногострочнойЧасти[НомерМногострочнойЧасти] Тогда
				УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
				НомСтр = НомСтр + 1;
				ПечатнаяФорма.ВставитьОбласть(ЗаголовокИННКПП.Область(), 
					ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
				ПечатнаяФорма.ВставитьОбласть(Макет.ПолучитьОбласть("ЗаголовокМнгСтр" + НомерМногострочнойЧасти).Область(), 
					ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
				КоличествоСтрок = 0;
			Иначе
				ПечатнаяФорма.ВставитьОбласть(ПодчеркСнизу, 
					ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
			КонецЕсли;
		КонецЦикла;
		
		Если КоличествоСтрок > 0 Тогда 
			Пока КоличествоСтрок < КоличествоСтрокМногострочнойЧасти[НомерМногострочнойЧасти] Цикл 
				ПечатнаяФорма.ВставитьОбласть(Макет.ПолучитьОбласть("МнгСтр" + НомерМногострочнойЧасти).Область(), 
					ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
				Если КоличествоСтрок <> КоличествоСтрокМногострочнойЧасти[НомерМногострочнойЧасти] - 1 Тогда 
					ПечатнаяФорма.ВставитьОбласть(ПодчеркСнизу, 
						ПечатнаяФорма.Область(ПечатнаяФорма.ВысотаТаблицы + 1,,ПечатнаяФорма.ВысотаТаблицы + 1,));
				КонецЕсли;
				КоличествоСтрок = КоличествоСтрок + 1;
			КонецЦикла;
			УведомлениеОСпецрежимахНалогообложения.ПоложитьПФВСписокЛистов(Объект, Листы, ПечатнаяФорма, НомСтр, Ложь);
			НомСтр = НомСтр + 1;
		КонецЕсли;
	КонецЦикла;
	Возврат Листы;
КонецФункции

Функция СформироватьПустоеДеревоСтраниц_2023(ДанныеОтчета) Экспорт 
	Дерево = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МногострочныеЧасти = Новый СписокЗначений;
	
	Стр001 = Дерево.Строки.Добавить();
	Стр001.Наименование = "Информация";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "ЗачетСумЕНС_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Истина;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "ЗачетСумЕНС";
	Стр001.МногострочныеЧасти = Новый СписокЗначений;
	Стр001.МногострочныеЧасти.Добавить("МнгСтр1");
	Стр001.МногострочныеЧасти.Добавить("МнгСтр2");
	Стр001.МногострочныеЧасти.Добавить("МнгСтр3");
	Стр001.МногострочныеЧасти.Добавить("МнгСтр4");
	
	Возврат Дерево;
КонецФункции

#Область СозданиеЗаполненногоУведомления

Функция СформироватьНовоеУведомление_2023_1(Данные) Экспорт 
	
	Попытка
		
		Если Данные.Свойство("СсылкаНаДокумент")
			И ТипЗнч(Данные.СсылкаНаДокумент) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") Тогда
			
			ДокОбъект = Данные.СсылкаНаДокумент.ПолучитьОбъект();
		Иначе
			ДокОбъект = Документы.УведомлениеОСпецрежимахНалогообложения.СоздатьДокумент();
		КонецЕсли;
		ДокументОснование = Неопределено;
		Если Данные.Свойство("ДокументОснование") Тогда
			ДокументОснование = Данные.ДокументОснование;
		КонецЕсли;
		
		ДокОбъект.ВидУведомления = Перечисления.ВидыУведомленийОСпецрежимахНалогообложения.ЗаявлениеОЗачетеНалога;
		Данные.Свойство("Организация",          ДокОбъект.Организация);
		Данные.Свойство("ПодписантИмя",         ДокОбъект.ПодписантИмя);
		Данные.Свойство("ПодписантФамилия",     ДокОбъект.ПодписантФамилия);
		Данные.Свойство("ПодписантОтчество",    ДокОбъект.ПодписантОтчество);
		Данные.Свойство("РегистрацияВИФНС",     ДокОбъект.РегистрацияВИФНС);
		Данные.Свойство("КомментарийОснования", ДокОбъект.Комментарий);
		ДокОбъект.ИмяФормы = "Форма2023_1";
		ДокОбъект.ИмяОтчета = "РегламентированноеУведомлениеЗачетНалога";
		ДокОбъект.ДатаПодписи = ТекущаяДатаСеанса();
		ДокОбъект.Дата = ТекущаяДатаСеанса();
		
		Если ЗначениеЗаполнено(ДокументОснование) Тогда
			ДокОбъект.ДатаПодписи    = Данные.ДатаОснования;
			ДокОбъект.Дата           = Данные.ДатаОснования;
			ДокОбъект.Комментарий    = Данные.КомментарийОснования;
		КонецЕсли;
		
		СтруктураПараметров = Новый Структура;
		
		ДанныеУведомления = Новый Структура;
		ДанныеМногостраничныхРазделов = Новый Структура;
		ИдентификаторыОбычныхСтраниц = Новый Структура;
		
		СтруктураПараметров.Вставить("ДеревоСтраниц", СформироватьДеревоСтраницПоДанным_2023_1(Данные));
		ПараметрыИнициализацииФормы = Новый Структура;
		ПараметрыИнициализацииФормы.Вставить("ДанныеУведомления");
		ПараметрыИнициализацииФормы.Вставить("ДанныеМногостраничныхРазделов");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрок");
		ПараметрыИнициализацииФормы.Вставить("ДанныеДопСтрокСтраницы");
		ПараметрыИнициализацииФормы.Вставить("ИдентификаторыОбычныхСтраниц");
		ПараметрыИнициализацииФормы.Вставить("ИмяФормы", "Отчет.РегламентированноеУведомлениеЗачетНалога.Форма.Форма2023_1");
		ПараметрыИнициализацииФормы.Вставить("ДеревоСтраниц", СтруктураПараметров.ДеревоСтраниц);
		
		ПараметрыИнициализацииФормы.Вставить("Объект", Новый Структура("ИмяОтчета, ИмяФормы",
			"РегламентированноеУведомлениеЗачетНалога", "Форма2023_1"));
		ПараметрыИнициализацииФормы.Вставить("ИмяМакетаАрхиваТабличныхДокументов", "");
		УведомлениеОСпецрежимахНалогообложения.СформироватьСтруктуруДанныхУведомленияНовогоОбразца(ПараметрыИнициализацииФормы);
		ЗаполнитьЗначенияСвойств(ПараметрыИнициализацииФормы.ДанныеУведомления["Титульная"], Данные.Титульная);
		
		ДанныеДопСтрокБД = Новый Структура;
		Для НомерМногострочнойЧасти = 1 По 4 Цикл
			ИмяРаздела = "МнгСтр" + НомерМногострочнойЧасти;
			ТаблицаРаздела = ПолучитьИзВременногоХранилища(ПараметрыИнициализацииФормы.ДанныеДопСтрок[ИмяРаздела]);
			ДаныеРаздела = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Данные.ЗачетСумЕНС, ИмяРаздела);
			Если ДаныеРаздела <> Неопределено Тогда
				Для Каждого СтрокаДанных Из ДаныеРаздела Цикл
					НоваяСтрока = ТаблицаРаздела.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаДанных);
					НоваяСтрока.УИД = Новый УникальныйИдентификатор;
				КонецЦикла;
			КонецЕсли;
			ДанныеДопСтрокБД.Вставить(ИмяРаздела, ТаблицаРаздела);
		КонецЦикла;
		
		СтруктураПараметров.Вставить("ДанныеМногостраничныхРазделов", ПараметрыИнициализацииФормы.ДанныеМногостраничныхРазделов);
		СтруктураПараметров.Вставить("ДанныеУведомления", ПараметрыИнициализацииФормы.ДанныеУведомления);
		СтруктураПараметров.Вставить("ИдентификаторыОбычныхСтраниц", ПараметрыИнициализацииФормы.ИдентификаторыОбычныхСтраниц);
		СтруктураПараметров.Вставить("ДанныеДопСтрокБД", ДанныеДопСтрокБД);
		СтруктураПараметров.Вставить("РазрешитьВыгружатьСОшибками", Ложь);
		СтруктураПараметров.Вставить("ДокументОснование", ДокументОснование);
		
		ДокОбъект.ДанныеУведомления = Новый ХранилищеЗначения(СтруктураПараметров);
		ДокОбъект.Основание = ДокументОснование;
		ДокОбъект.Записать();
		Возврат ДокОбъект.Ссылка;
	Исключение
	КонецПопытки;
	
КонецФункции

Функция СформироватьДеревоСтраницПоДанным_2023_1(Данные) Экспорт 
	ДеревоСтраниц = УведомлениеОСпецрежимахНалогообложения.ПустоеДеревоСтраницУведомления();
	КорневойУровень = ДеревоСтраниц.Строки;
	
	Стр001 = КорневойУровень.Добавить();
	Стр001.Наименование = "Титульная страница";
	Стр001.ИндексКартинки = 1;
	Стр001.ИмяМакета = "Титульная_2023";
	Стр001.Многостраничность = Ложь;
	Стр001.Многострочность = Ложь;
	Стр001.УИД = Новый УникальныйИдентификатор;
	Стр001.ИДНаименования = "Титульная";
	Стр001.МакетыПФ = "Печать_Форма2023_1_Титульная";
	
	Стр002 = КорневойУровень.Добавить();
	Стр002.Наименование = "Информация";
	Стр002.ИндексКартинки = 1;
	Стр002.ИмяМакета = "ЗачетСумЕНС_2023";
	Стр002.Многостраничность = Ложь;
	Стр002.Многострочность = Истина;
	Стр002.УИД = Новый УникальныйИдентификатор;
	Стр002.ИДНаименования = "ЗачетСумЕНС";
	Стр002.МногострочныеЧасти = Новый Структура;
	Стр002.МногострочныеЧасти.Добавить("МнгСтр1");
	Стр002.МногострочныеЧасти.Добавить("МнгСтр2");
	Стр002.МногострочныеЧасти.Добавить("МнгСтр3");
	Стр002.МногострочныеЧасти.Добавить("МнгСтр4");
	
	Возврат ДеревоСтраниц;
	
КонецФункции

#КонецОбласти

#КонецОбласти
#КонецЕсли
