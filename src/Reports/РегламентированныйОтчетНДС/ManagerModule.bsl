#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область ПрограммныйИнтерфейс

Функция ВерсияФорматаВыгрузки(Знач НаДату = Неопределено, ВыбраннаяФорма = Неопределено) Экспорт
	
	Если НаДату = Неопределено Тогда
		НаДату = ТекущаяДатаСеанса();
	КонецЕсли;
		
	Если НаДату >= '20091001' Тогда
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия500;
	Иначе
		Возврат Перечисления.ВерсииФорматовВыгрузки.Версия300;
	КонецЕсли;
	
КонецФункции

Функция ТаблицаФормОтчета() Экспорт
	
	ОписаниеТиповСтрока = Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(254));
	
	МассивТипов = Новый Массив;
	МассивТипов.Добавить(Тип("Дата"));
	ОписаниеТиповДата = Новый ОписаниеТипов(МассивТипов, , Новый КвалификаторыДаты(ЧастиДаты.Дата));
	
	ТаблицаФормОтчета = Новый ТаблицаЗначений;
	ТаблицаФормОтчета.Колонки.Добавить("ФормаОтчета",        ОписаниеТиповСтрока);
	ТаблицаФормОтчета.Колонки.Добавить("ОписаниеОтчета",     ОписаниеТиповСтрока, "Утверждена",  	20);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаНачалоДействия", ОписаниеТиповДата,   "Действует с", 	5);
	ТаблицаФормОтчета.Колонки.Добавить("ДатаКонецДействия",  ОписаниеТиповДата,   "         по", 	5);
	ТаблицаФормОтчета.Колонки.Добавить("РедакцияФормы",      ОписаниеТиповСтрока, "Редакция формы", 20);
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2009Кв4";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу Минфина РФ от 15.10.2009 № 104н.";
	НоваяФорма.РедакцияФормы      = "от 15.10.2009 № 104н.";
	НоваяФорма.ДатаНачалоДействия = '2009-10-01';
	НоваяФорма.ДатаКонецДействия  = '2010-03-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2009Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу Минфина РФ от 15.10.2009 № 104н (в редакции приказа Минфина РФ от 21.04.2010 № 36н).";
	НоваяФорма.РедакцияФормы      = "от 21.04.2010 № 36н.";
	НоваяФорма.ДатаНачалоДействия = '2010-04-01';
	НоваяФорма.ДатаКонецДействия  = '2014-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2015Кв1";
	НоваяФорма.ОписаниеОтчета     = "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@.";
	НоваяФорма.РедакцияФормы      = "от 29.10.2014 № ММВ-7-3/558@.";
	НоваяФорма.ДатаНачалоДействия = '2015-01-01';
	НоваяФорма.ДатаКонецДействия  = '2016-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2017Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 20.12.2016 № ММВ-7-3/696@).";
	НоваяФорма.РедакцияФормы      = "от 20.12.2016 № ММВ-7-3/696@.";
	НоваяФорма.ДатаНачалоДействия = '2017-01-01';
	НоваяФорма.ДатаКонецДействия  = '2019-03-29';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2019Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 28.12.2018 № СА-7-3/853@).";
	НоваяФорма.РедакцияФормы      = "от 28.12.2018 № СА-7-3/853@.";
	НоваяФорма.ДатаНачалоДействия = '2019-01-01';
	НоваяФорма.ДатаКонецДействия  = '2020-09-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2020Кв4";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 19.08.2020 № ЕД-7-3/591@).";
	НоваяФорма.РедакцияФормы      = "от 19.08.2020 № ЕД-7-3/591@.";
	НоваяФорма.ДатаНачалоДействия = '2020-10-01';
	НоваяФорма.ДатаКонецДействия  = '2021-06-30';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2023Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 12.12.2022 № ЕД-7-3/1191@).";
	НоваяФорма.РедакцияФормы      = "от 12.12.2022 № ЕД-7-3/1191@.";
	НоваяФорма.ДатаНачалоДействия = '2023-01-01';
	НоваяФорма.ДатаКонецДействия  = '2024-12-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2022Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 24.12.2021 № ЕД-7-3/1149@).";
	НоваяФорма.РедакцияФормы      = "от 24.12.2021 № ЕД-7-3/1149@.";
	НоваяФорма.ДатаНачалоДействия = '2022-01-01';
	НоваяФорма.ДатаКонецДействия  = '2023-03-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2021Кв3";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 29.10.2014 № ММВ-7-3/558@ (в редакции приказа ФНС России от 26.03.2021 № ЕД-7-3/228@).";
	НоваяФорма.РедакцияФормы      = "от 26.03.2021 № ЕД-7-3/228@.";
	НоваяФорма.ДатаНачалоДействия = '2021-07-01';
	НоваяФорма.ДатаКонецДействия  = '2022-03-31';
	
	НоваяФорма = ТаблицаФормОтчета.Добавить();
	НоваяФорма.ФормаОтчета        = "ФормаОтчета2025Кв1";
	НоваяФорма.ОписаниеОтчета
	= "Приложение № 1 к приказу ФНС России от 05.11.2024 № ЕД-7-3/989@.";
	НоваяФорма.РедакцияФормы      = "от 05.11.2024 № ЕД-7-3/989@.";
	НоваяФорма.ДатаНачалоДействия = '2025-01-01';
	НоваяФорма.ДатаКонецДействия  = РегламентированнаяОтчетностьКлиентСервер.ПустоеЗначениеТипа(Тип("Дата"));
	
	Возврат ТаблицаФормОтчета;
	
КонецФункции

Функция ДанныеРеглОтчета(ЭкземплярРеглОтчета, ДополнительныеПараметры = Неопределено) Экспорт
	
	ТаблицаДанныхРеглОтчета = ИнтерфейсыВзаимодействияБРО.НовыйТаблицаДанныхРеглОтчета();
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2023Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв3"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв4"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2019Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2009Кв4" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ТаблицаДанныхРеглОтчета;
		КонецЕсли;
		
		НалогКУплате = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		
		Период = ЭкземплярРеглОтчета.ДатаОкончания;
		КодСтрокиОКАТО        = "П000100001003";
		КодСтрокиКБК          = "П000100002003";
		КодСтрокиСуммаСт173п5 = "П000100003003";
		КодСтрокиСуммаСт173п1 = "П000100004003";
		
		ОКАТО              = НалогКУплате[КодСтрокиОКАТО];
		КБК                = НалогКУплате[КодСтрокиКБК];
		СуммаЕдиновременно = НалогКУплате[КодСтрокиСуммаСт173п5];
		СуммаРассрочка     = НалогКУплате[КодСтрокиСуммаСт173п1];
		
		СуммаПлатежа = Цел(СуммаРассрочка / 3);
		
		Платежи = Новый Массив;
		Платежи.Добавить(СуммаПлатежа + СуммаЕдиновременно);
		Платежи.Добавить(СуммаПлатежа);
		Платежи.Добавить(СуммаРассрочка - 2 * СуммаПлатежа);
		
		Для НомерМесяца = 1 По 3 Цикл
			
			Платеж = ТаблицаДанныхРеглОтчета.Добавить();
			Платеж.Период = ДобавитьМесяц(Период, НомерМесяца);
			Платеж.ОКАТО  = ОКАТО;
			Платеж.КБК    = КБК;
			Платеж.Сумма  = Платежи[НомерМесяца - 1];
			
		КонецЦикла;
		
		Если ТипЗнч(ДополнительныеПараметры) = Тип("Структура")
			И ДополнительныеПараметры.Свойство("ВключатьПлатежиАгента")
			И ДополнительныеПараметры["ВключатьПлатежиАгента"] = Истина Тогда
			
			ПлатежиАгента = Новый Массив;
			Для НомерМесяца = 1 По 3 Цикл
				ПлатежиАгента.Добавить(0);
			КонецЦикла;
			
			Если ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Свойство("Раздел2") Тогда
				
				Раздел2 = ДанныеРеглОтчета.ДанныеМногостраничныхРазделов.Раздел2;
				
				Для Каждого Страница Из Раздел2 Цикл
					
					НалогКУплате = Страница.Данные;
					
					Если НалогКУплате.Свойство("П000200006003") Тогда
						
						ОбщСумАгента = Окр(НалогКУплате["П000200006003"]);
						ПлатежАгента = Цел(ОбщСумАгента / 3);
						
						ПлатежиАгента[0] = ПлатежиАгента[0] + ПлатежАгента;
						ПлатежиАгента[1] = ПлатежиАгента[1] + ПлатежАгента;
						ПлатежиАгента[2] = ПлатежиАгента[2] + ОбщСумАгента - 2 * ПлатежАгента;
						
					КонецЕсли;
					
				КонецЦикла;
				
			КонецЕсли;
			
			Для НомерМесяца = 1 По 3 Цикл
				
				Платеж = ТаблицаДанныхРеглОтчета.Добавить();
				Платеж.Период = ДобавитьМесяц(Период, НомерМесяца);
				Платеж.Агент  = Истина;
				Платеж.Сумма  = ПлатежиАгента[НомерМесяца - 1];
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ТаблицаДанныхРеглОтчета;
	
КонецФункции

Функция ДанныеДляРасчетаНалога(ЭкземплярРеглОтчета) Экспорт
	
	ДанныеДляРасчетаНалога = НовыйДанныеДляРасчетаНалога();
	
	Если Не ЗначениеЗаполнено(ЭкземплярРеглОтчета) Тогда
		Возврат ДанныеДляРасчетаНалога;
	КонецЕсли;
	
	Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2023Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв1"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв3"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв4"
	 ИЛИ ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2019Кв1" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ДанныеДляРасчетаНалога;
		КонецЕсли;
		
		ПоказателиОтчета = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
		
		// Начисления
		КодРеализация20         = "П000300001005";
		КодРеализация10         = "П000300002005";
		
		КодРеализация7          = "П000300002105";
		КодРеализация5          = "П000300002205";
		
		КодРеализация20_120     = "П000300003005";
		
		КодРеализация16_67      = "П000300003105";
		КодРеализация9_09       = "П000300003205";
		КодРеализация7_107      = "П000300003305";
		КодРеализация5_105      = "П000300003405";
		
		КодРеализация10_110     = "П000300004005";
		КодРеализация18         = "П000300004105";
		КодРеализация18_118     = "П000300004205";
		
		КодАвансыПолученные     = "П000300007005";
		КодЗачетАвансовВыданных = "П000300009005";
		КодВсегоНачисления      = "П000300011805";
		
		ДанныеДляРасчетаНалога.Реализация = ПоказателиОтчета[КодРеализация20]
			+ ПоказателиОтчета[КодРеализация10]
			+ ПоказателиОтчета[КодРеализация20_120]
			+ ПоказателиОтчета[КодРеализация10_110]
			+ ПоказателиОтчета[КодРеализация18]
			+ ПоказателиОтчета[КодРеализация18_118];
			
		Если ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1" Тогда
			
			ДанныеДляРасчетаНалога.Реализация = ДанныеДляРасчетаНалога.Реализация 
				+ ПоказателиОтчета[КодРеализация7]
				+ ПоказателиОтчета[КодРеализация5]
				+ ПоказателиОтчета[КодРеализация16_67]
				+ ПоказателиОтчета[КодРеализация9_09]
				+ ПоказателиОтчета[КодРеализация7_107]
				+ ПоказателиОтчета[КодРеализация5_105];
			
		КонецЕсли;
		
		ДанныеДляРасчетаНалога.АвансыПолученные     = ПоказателиОтчета[КодАвансыПолученные];
		ДанныеДляРасчетаНалога.ЗачетАвансовВыданных = ПоказателиОтчета[КодЗачетАвансовВыданных];
		ДанныеДляРасчетаНалога.ВсегоНачисления      = ПоказателиОтчета[КодВсегоНачисления];
		
		// Вычеты
		КодПриобретенныеЦенности  = "П000300012003";
		КодАвансыВыданные         = "П000300013003";
		КодЗачетАвансовПолученных = "П000300017003";
		КодВсегоВычеты            = "П000300019003";
		КодКУплате                = "П000300020003";
		
		ДанныеДляРасчетаНалога.ПриобретенныеЦенности  = ПоказателиОтчета[КодПриобретенныеЦенности];
		ДанныеДляРасчетаНалога.АвансыВыданные         = ПоказателиОтчета[КодАвансыВыданные];
		ДанныеДляРасчетаНалога.ЗачетАвансовПолученных = ПоказателиОтчета[КодЗачетАвансовПолученных];
		ДанныеДляРасчетаНалога.ВсегоВычеты            = ПоказателиОтчета[КодВсегоВычеты];
		ДанныеДляРасчетаНалога.НалогКУплате           = ПоказателиОтчета[КодКУплате];
		
		Если ДанныеРеглОтчета.Свойство("ДанныеПомощникаЗаполнения") Тогда 
			ПоказателиОтчетаПоВычетам = ДанныеРеглОтчета.ДанныеПомощникаЗаполнения;
			ЗаполнитьЗначенияСвойств(ДанныеДляРасчетаНалога,
			ПоказателиОтчетаПоВычетам,"ВсегоПеренесенныеВычеты,"
			+ "ПеренесенныеВычетыПриобретенныеЦенности,"
			+ "ПеренесенныеВычетыАвансыВыданные,"
			+ "ПеренесенныеВычетыЗачетАвансовПолученных");
		КонецЕсли;
		
	ИначеЕсли ЭкземплярРеглОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв1" Тогда
		
		ДанныеРеглОтчета = ЭкземплярРеглОтчета.ДанныеОтчета.Получить();
		Если ТипЗнч(ДанныеРеглОтчета) <> Тип("Структура") Тогда
			Возврат ДанныеДляРасчетаНалога;
		КонецЕсли;
		
		ПоказателиОтчета = ДанныеРеглОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
		
		// Начисления
		КодРеализация18     = "П000300001005";
		КодРеализация10     = "П000300002005";
		КодРеализация18_118 = "П000300003005";
		КодРеализация10_110 = "П000300004005";
		
		КодАвансыПолученные     = "П000300007005";
		КодЗачетАвансовВыданных = "П000300009005";
		КодВсегоНачисления      = "П000300011805";
		
		ДанныеДляРасчетаНалога.Реализация = ПоказателиОтчета[КодРеализация18]
			+ ПоказателиОтчета[КодРеализация10]
			+ ПоказателиОтчета[КодРеализация18_118]
			+ ПоказателиОтчета[КодРеализация10_110];
			
		ДанныеДляРасчетаНалога.АвансыПолученные     = ПоказателиОтчета[КодАвансыПолученные];
		ДанныеДляРасчетаНалога.ЗачетАвансовВыданных = ПоказателиОтчета[КодЗачетАвансовВыданных];
		ДанныеДляРасчетаНалога.ВсегоНачисления      = ПоказателиОтчета[КодВсегоНачисления];
		
		// Вычеты
		КодПриобретенныеЦенности  = "П000300012003";
		КодАвансыВыданные         = "П000300013003";
		КодЗачетАвансовПолученных = "П000300017003";
		КодВсегоВычеты            = "П000300019003";
		
		КодКУплате = "П000300020003";
		
		ДанныеДляРасчетаНалога.ПриобретенныеЦенности  = ПоказателиОтчета[КодПриобретенныеЦенности];
		ДанныеДляРасчетаНалога.АвансыВыданные         = ПоказателиОтчета[КодАвансыВыданные];
		ДанныеДляРасчетаНалога.ЗачетАвансовПолученных = ПоказателиОтчета[КодЗачетАвансовПолученных];
		ДанныеДляРасчетаНалога.ВсегоВычеты            = ПоказателиОтчета[КодВсегоВычеты];
		
		ДанныеДляРасчетаНалога.НалогКУплате           = ПоказателиОтчета[КодКУплате];
		
		Если ДанныеРеглОтчета.Свойство("ДанныеПомощникаЗаполнения") Тогда 
			ПоказателиОтчетаПоВычетам = ДанныеРеглОтчета.ДанныеПомощникаЗаполнения;
			ЗаполнитьЗначенияСвойств(ДанныеДляРасчетаНалога,
			ПоказателиОтчетаПоВычетам,"ВсегоПеренесенныеВычеты,"
			+ "ПеренесенныеВычетыПриобретенныеЦенности,"
			+ "ПеренесенныеВычетыАвансыВыданные,"
			+ "ПеренесенныеВычетыЗачетАвансовПолученных");
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ДанныеДляРасчетаНалога;
	
КонецФункции

Функция ДеревоФормИФорматов() Экспорт
	
	ФормыИФорматы = Новый ДеревоЗначений;
	ФормыИФорматы.Колонки.Добавить("Код");
	ФормыИФорматы.Колонки.Добавить("ДатаПриказа");
	ФормыИФорматы.Колонки.Добавить("НомерПриказа");
	ФормыИФорматы.Колонки.Добавить("ДатаНачалаДействия");
	ФормыИФорматы.Колонки.Добавить("ДатаОкончанияДействия");
	ФормыИФорматы.Колонки.Добавить("ИмяОбъекта");
	ФормыИФорматы.Колонки.Добавить("Описание");
	
	Форма20091001 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20091015', "104н", "ФормаОтчета2009Кв4", ,'20100331');
	ОпределитьФорматВДеревеФормИФорматов(Форма20091001, "5.01");
	
	Форма20100601 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20100421', "36н", "ФормаОтчета2009Кв4", '20100401', '20111231');
	ОпределитьФорматВДеревеФормИФорматов(Форма20100601, "5.01");
	
	Форма20120101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20120417', "ММВ-7-6/244@", "ФормаОтчета2009Кв4", '20120101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20120101, "5.02");
	ОпределитьФорматВДеревеФормИФорматов(Форма20120101, "5.03");
	
	Форма20150101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20141029', "ММВ-7-3/558@", "ФормаОтчета2015Кв1", '20150101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20150101, "5.04");
	
	Форма20170101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20161220', "ММВ-7-3/696@", "ФормаОтчета2017Кв1", '20170101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20170101, "5.05");
	
	Форма20190101 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20181228', "СА-7-3/853@", "ФормаОтчета2019Кв1", '20190101');
	ОпределитьФорматВДеревеФормИФорматов(Форма20190101, "5.06");
	
	Форма2020Кв4 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20200819', "ЕД-7-3/591@", "ФормаОтчета2020Кв4", '20201001');
	ОпределитьФорматВДеревеФормИФорматов(Форма2020Кв4, "5.07");
	
	Форма2021Кв3 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20210326', "ЕД-7-3/228@", "ФормаОтчета2021Кв3", '20210701');
	ОпределитьФорматВДеревеФормИФорматов(Форма2021Кв3, "5.08");
	
	Форма2022Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20211224', "ЕД-7-3/1149@", "ФормаОтчета2022Кв1", '20220101');
	ОпределитьФорматВДеревеФормИФорматов(Форма2022Кв1, "5.09");
	
	Форма2023Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20221212', "ЕД-7-3/1191@", "ФормаОтчета2023Кв1", '20230101');
	ОпределитьФорматВДеревеФормИФорматов(Форма2023Кв1, "5.10");
	
	Форма2025Кв1 = ОпределитьФормуВДеревеФормИФорматов(ФормыИФорматы,
	"1151001", '20241105', "ЕД-7-3/989@", "ФормаОтчета2025Кв1", '20250101');
	ОпределитьФорматВДеревеФормИФорматов(Форма2025Кв1, "5.11");

	Возврат ФормыИФорматы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОпределитьФормуВДеревеФормИФорматов(ДеревоФормИФорматов, Код, ДатаПриказа = '00010101', НомерПриказа = "",
			ИмяОбъекта = "", ДатаНачалаДействия = '00010101', ДатаОкончанияДействия = '00010101', Описание = "")
	
	НовСтр = ДеревоФормИФорматов.Строки.Добавить();
	НовСтр.Код = СокрЛП(Код);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ДатаНачалаДействия;
	НовСтр.ДатаОкончанияДействия = ДатаОкончанияДействия;
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция ОпределитьФорматВДеревеФормИФорматов(Форма, Версия, ДатаПриказа = '00010101', НомерПриказа = "",
			ДатаНачалаДействия = Неопределено, ДатаОкончанияДействия = Неопределено, ИмяОбъекта = "", Описание = "")
	
	НовСтр = Форма.Строки.Добавить();
	НовСтр.Код = СокрЛП(Версия);
	НовСтр.ДатаПриказа = ДатаПриказа;
	НовСтр.НомерПриказа = СокрЛП(НомерПриказа);
	НовСтр.ДатаНачалаДействия = ?(ДатаНачалаДействия = Неопределено, Форма.ДатаНачалаДействия, ДатаНачалаДействия);
	НовСтр.ДатаОкончанияДействия = ?(ДатаОкончанияДействия = Неопределено, Форма.ДатаОкончанияДействия, ДатаОкончанияДействия);
	НовСтр.ИмяОбъекта = СокрЛП(ИмяОбъекта);
	НовСтр.Описание = СокрЛП(Описание);
	Возврат НовСтр;
	
КонецФункции

Функция НовыйДанныеДляРасчетаНалога()
	
	Показатели = Новый Структура;
	
	Показатели.Вставить("Реализация",              0);
	Показатели.Вставить("АвансыПолученные",        0);
	Показатели.Вставить("ЗачетАвансовВыданных",    0);
	Показатели.Вставить("ВсегоНачисления",         0);
	Показатели.Вставить("ПриобретенныеЦенности",   0);
	Показатели.Вставить("АвансыВыданные",          0);
	Показатели.Вставить("ЗачетАвансовПолученных",  0);
	Показатели.Вставить("ВсегоВычеты",             0);
	Показатели.Вставить("НалогКУплате",            0); 
	Показатели.Вставить("ВсегоПеренесенныеВычеты", 0);
	// Перенесенные вычеты по группам.
	Показатели.Вставить("ПеренесенныеВычетыПриобретенныеЦенности",  0);
	Показатели.Вставить("ПеренесенныеВычетыАвансыВыданные",         0);
	Показатели.Вставить("ПеренесенныеВычетыЗачетАвансовПолученных", 0);
	
	Возврат Показатели;
	
КонецФункции

#КонецОбласти

#Область ПоказателиОценкиРискаВыезднойНалоговойПроверки

Процедура ПоказателиОценкиРискаВыезднойНалоговойПроверки(ТаблицаПоказателей, ОписаниеОтчета) Экспорт 
	
	СведенияОтчета = ОписаниеОтчета.РегламентированныйОтчет.ДанныеОтчета.Получить();
	
	Если ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2025Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2023Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2022Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2021Кв3"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2020Кв4"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2019Кв1"
		ИЛИ ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2017Кв1" Тогда
		
		Раздел1 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		Раздел3 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100004003")
		                   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100005003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300019003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаВычетовПоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300011805");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНачисленногоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	ИначеЕсли ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2015Кв1" Тогда
		
		Раздел1 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		Раздел3 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100004003")
		                   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100005003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300019003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаВычетовПоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300011005");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНачисленногоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	ИначеЕсли ОписаниеОтчета.ВыбраннаяФорма = "ФормаОтчета2009Кв4" Тогда
		
		Раздел1 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел1;
		Раздел3 = СведенияОтчета.ПоказателиОтчета.ПолеТабличногоДокументаРаздел3;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100004003")
		                   - РегламентированнаяОтчетность.ПоказательОтчета(Раздел1, "П000100005003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300022003");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаВычетовПоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
		ЗначениеПоказателя = РегламентированнаяОтчетность.ПоказательОтчета(Раздел3, "П000300012005");
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНачисленногоНДС";
		НоваяСтрока.ЗначениеПоказателя = ЗначениеПоказателя;
		
	Иначе
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНалогаНДС";
		НоваяСтрока.ЗначениеПоказателя = 0;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаВычетовПоНДС";
		НоваяСтрока.ЗначениеПоказателя = 0;
		
		НоваяСтрока = ТаблицаПоказателей.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, ОписаниеОтчета);
		НоваяСтрока.Показатель = "СуммаНачисленногоНДС";
		НоваяСтрока.ЗначениеПоказателя = 0;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецЕсли