////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции внеоборотных активов
// в рамках международного финансового учета.
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Выполняет проверку возможности смены статуса для переданных в качестве параметра активов.
//
// Параметры:
// 		ОбъектДокумента - ДокументСсылка.ПринятиеКУчетуНМАМеждународныйУчет, ДокументСсылка.СписаниеНМАМеждународныйУчет - Объект документа, который меняет состояние актива
// 		ВнеоборотныеАктивы - Массив, СправочникСсылка.НематериальныеАктивы - Внеоборотные активы для проверки
// 		НовоеСостояние - Перечисление.СостоянияНМА - Значение нового состояния актива
// 		Отказ - Булево - возвращаемый параметр.
//
Процедура ПроверитьВозможностьСменыСостоянияНМА(ОбъектДокумента, ВнеоборотныеАктивы, НовоеСостояние, Отказ=Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Активы.Ссылка КАК ВнеоборотныйАктив,
		|	ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) КАК ТекущееСостояние
		|ИЗ
		|	Справочник.НематериальныеАктивы КАК Активы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
		|				&Граница,
		|				НематериальныйАктив В (&ВнеоборотныеАктивы)
		|					И Регистратор <> &Регистратор) КАК ДанныеУчета
		|		ПО Активы.Ссылка = ДанныеУчета.НематериальныйАктив
		|ГДЕ
		|	Активы.Ссылка В(&ВнеоборотныеАктивы)");
		
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ВнеоборотныеАктивы);
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	Запрос.УстановитьПараметр("Регистратор", ОбъектДокумента.Ссылка);
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	Запрос.УстановитьПараметр("Граница", Новый Граница(ОбъектДокумента.Дата, ВидГраницы.Исключая));
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке = "";
		ЕстьОшибкаСменыСтатуса = Ложь;
		
		Если НовоеСостояние = Перечисления.СостоянияНМА.ПринятКУчету
			И (Выборка.ТекущееСостояние <> Перечисления.СостоянияНМА.НеПринятКУчету
				И Выборка.ТекущееСостояние <> Перечисления.СостоянияНМА.Поступил
				И Выборка.ТекущееСостояние <> Перечисления.СостоянияНМА.Списан) Тогда
			
			ЕстьОшибкаСменыСтатуса = Истина;
			СообщениеОбОшибке = НСтр(
				"ru = 'Нематериальный актив ""%1"" не может быть принят к учету, т.к. находится в состоянии ""%2""';
				|en = 'The ""%1"" intangible asset cannot be recognized as its state is ""%2""'"
			);
			
		КонецЕсли;
		
		Если НовоеСостояние = Перечисления.СостоянияНМА.Списан
			И (Выборка.ТекущееСостояние <> Перечисления.СостоянияНМА.ПринятКУчету)Тогда
			
			ЕстьОшибкаСменыСтатуса = Истина;
			СообщениеОбОшибке = НСтр(
				"ru = 'Нематериальный актив ""%1"" не может быть списан, т.к. находится в состоянии ""%2""';
				|en = 'Intangible asset ""%1"" cannot be retired as its state is ""%2""'"
			);
			
		КонецЕсли;
		
		Если ЕстьОшибкаСменыСтатуса Тогда
			
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%1", Выборка.ВнеоборотныйАктив);
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%2", Выборка.ТекущееСостояние);
			
			Если ОбъектДокумента.ЭтоНовый() Тогда
				ВызватьИсключение СообщениеОбОшибке;
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СообщениеОбОшибке,
					ОбъектДокумента
				);
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет проверку возможности смены статуса для переданных в качестве параметра активов.
//
// Параметры:
// 		ОбъектДокумента - ДокументСсылка.ПринятиеКУчетуОСМеждународныйУчет, ДокументСсылка.СписаниеОСМеждународныйУчет - Объект документа, который меняет состояние актива
// 		ВнеоборотныеАктивы - Массив, СправочникСсылка.ОбъектыЭксплуатации - Внеоборотные активы для проверки
// 		НовоеСостояние - Перечисление.СостоянияОС - Значение нового состояния актива
// 		Отказ - Булево - возвращаемый параметр.
//
Процедура ПроверитьВозможностьСменыСостоянияОС(ОбъектДокумента, ВнеоборотныеАктивы, НовоеСостояние, Отказ=Ложь) Экспорт
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Активы.Ссылка КАК ВнеоборотныйАктив,
		|	ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)) КАК ТекущееСостояние
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК Активы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
		|				&Граница,
		|				ОсновноеСредство В (&ВнеоборотныеАктивы)
		|					И Регистратор <> &Регистратор) КАК ДанныеУчета
		|		ПО Активы.Ссылка = ДанныеУчета.ОсновноеСредство
		|ГДЕ
		|	Активы.Ссылка В(&ВнеоборотныеАктивы)"
	);
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ВнеоборотныеАктивы);
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	Запрос.УстановитьПараметр("Регистратор", ОбъектДокумента.Ссылка);
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	Запрос.УстановитьПараметр("Граница", Новый Граница(ОбъектДокумента.Дата, ВидГраницы.Исключая));
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке = "";
		ЕстьОшибкаСменыСтатуса = Ложь;
		
		Если НовоеСостояние = Перечисления.СостоянияОС.ПринятоКУчету
			И (Выборка.ТекущееСостояние <> Перечисления.СостоянияОС.НеПринятоКУчету
				И Выборка.ТекущееСостояние <> Перечисления.СостоянияОС.СнятоСУчета) Тогда
			
			ЕстьОшибкаСменыСтатуса = Истина;
			СообщениеОбОшибке = НСтр("ru = 'Основное средство ""%1"" не может быть принято к учету, т.к. находится в состоянии ""%2""';
									|en = 'Fixed asset ""%1"" cannot be recognized because it has status ""%2""'");
			
		КонецЕсли;
		
		Если НовоеСостояние = Перечисления.СостоянияОС.СнятоСУчета
			И (Выборка.ТекущееСостояние <> Перечисления.СостоянияОС.ПринятоКУчету)Тогда
			
			ЕстьОшибкаСменыСтатуса = Истина;
			СообщениеОбОшибке = НСтр("ru = 'Основное средство ""%1"" не может быть списано, т.к. находится в состоянии ""%2""';
									|en = 'Fixed asset ""%1"" cannot be retired as it is in state ""%2""'");
			
		КонецЕсли;
		
		Если ЕстьОшибкаСменыСтатуса Тогда
			
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%1", Выборка.ВнеоборотныйАктив);
			СообщениеОбОшибке = СтрЗаменить(СообщениеОбОшибке, "%2", Выборка.ТекущееСостояние);
			
			Если ОбъектДокумента.ЭтоНовый() Тогда
				ВызватьИсключение СообщениеОбОшибке;
			Иначе
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
					СообщениеОбОшибке,
					ОбъектДокумента
				);
				Отказ = Истина;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет проверку принадлежности объекта внеоборотного актива условиям требуемого состояния.
//
// Параметры:
// 		ВнеоборотныеАктивы - Массив из СправочникСсылка.НематериальныеАктивы, СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.НематериальныеАктивы, СправочникСсылка.ОбъектыЭксплуатации - Внеоборотные активы для проверки
// 		ТребуемоеСостояние - Структура - Структура описания требуемого состояния:
// 			*Организация - Массив из СправочникСсылка.Организации, СправочникСсылка.Организации - (необязательно) Список организаций, которым может принадлежать актив
// 			*Подразделение - Массив из СправочникСсылка.СтруктураПредприятия, СправочникСсылка.СтруктураПредприятия - (необязательно) Список подразделений, которым может принадлежать актив
// 			*Состояние - Массив из ПеречислениеСсылка.СостоянияНМА, ПеречислениеСсылка.СостоянияОС - (необязательно) Список состояний, которым может принадлежать актив
// 			*ВидАктива - Массив из ПеречислениеСсылка.ВидыВнеоборотныхАктивов - (необязательно) Список видов актива, которым может принадлежать актив
// 		ПараметрыПроверки - Неопределено, Структура - Структура параметров проверки:
// 			*ДатаСведений - Дата - (необязательно) Дата получения сведений об активе
// 			*ИсключаемыйРегистратор - ДокументСсылка - (необязательно) Ссылка на документ, исключаемый из выборки при получении состояния активов.
//
// Возвращаемое значение:
// 		Соответствие Из КлючИЗначение - Соответствие объектов учета, не удовлетворяющих условиям заданного требуемого состояния:
// 			*Ключ - СправочникСсылка.НематериальныеАктивы, СправочникСсылка.ОбъектыЭксплуатации - объект проверки
// 			*Значение - Структура - Структура с полями описания текущего состояния объекта:
// 				** Организация - СправочникСсылка.Организации
// 				** Подразделение - СправочникСсылка.СтруктураПредприятия
//
Функция ПроверитьСостояниеВнеоборотныхАктивов(ВнеоборотныеАктивы, ТребуемоеСостояние, ПараметрыПроверки=Неопределено) Экспорт
	
	Если ТребуемоеСостояние = Неопределено Или ТребуемоеСостояние.Количество()=0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	ПроверяемыеПоля = "Организация, Подразделение, Состояние, ВидАктива";
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	Активы.Ссылка КАК ВнеоборотныйАктив,
		|	ДанныеУчета.Организация,
		|	ДанныеУчета.Подразделение,
		|	ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.НеПринятКУчету)) КАК Состояние,
		|	НЕОПРЕДЕЛЕНО КАК ВидАктива
		|ПОМЕСТИТЬ ТекущееСостояние
		|ИЗ
		|	Справочник.НематериальныеАктивы КАК Активы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
		|				&Граница,
		|				НематериальныйАктив В (&ВнеоборотныеАктивы)
		|					И Регистратор <> &ИсключаемыйРегистратор) КАК ДанныеУчета
		|		ПО Активы.Ссылка = ДанныеУчета.НематериальныйАктив
		|ГДЕ
		|	Активы.Ссылка В(&ВнеоборотныеАктивы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	Активы.Ссылка,
		|	ДанныеУчета.Организация,
		|	ДанныеУчета.Подразделение,
		|	ЕСТЬNULL(ДанныеУчета.Состояние, ЗНАЧЕНИЕ(Перечисление.СостоянияОС.НеПринятоКУчету)),
		|	ДанныеУчета.ВидАктива
		|ИЗ
		|	Справочник.ОбъектыЭксплуатации КАК Активы
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
		|				&Граница,
		|				ОсновноеСредство В (&ВнеоборотныеАктивы)
		|					И Регистратор <> &ИсключаемыйРегистратор) КАК ДанныеУчета
		|		ПО Активы.Ссылка = ДанныеУчета.ОсновноеСредство
		|ГДЕ
		|	Активы.Ссылка В(&ВнеоборотныеАктивы)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТекущееСостояние.ВнеоборотныйАктив КАК ВнеоборотныйАктив,
		|	ТекущееСостояние.Организация КАК Организация,
		|	ТекущееСостояние.Подразделение КАК Подразделение,
		|	ТекущееСостояние.Состояние КАК Состояние,
		|	ТекущееСостояние.ВидАктива КАК ВидАктива,
		|	ВЫБОР
		|		КОГДА &ТребуетсяОрганизация
		|				И НЕ ТекущееСостояние.Организация В (&Организация)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОшибкаОрганизация,
		|	ВЫБОР
		|		КОГДА &ТребуетсяПодразделение
		|				И НЕ ТекущееСостояние.Подразделение В (&Подразделение)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОшибкаПодразделение,
		|	ВЫБОР
		|		КОГДА &ТребуетсяСостояние
		|				И НЕ ТекущееСостояние.Состояние В (&Состояние)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОшибкаСостояние,
		|	ВЫБОР
		|		КОГДА &ТребуетсяВидАктива
		|				И НЕ ТекущееСостояние.ВидАктива В (&ВидАктива)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ОшибкаВидАктива
		|ИЗ
		|	ТекущееСостояние КАК ТекущееСостояние
		|ГДЕ
		|	(ЛОЖЬ
		|			ИЛИ &ТребуетсяОрганизация
		|				И НЕ ТекущееСостояние.Организация В (&Организация)
		|			ИЛИ &ТребуетсяПодразделение
		|				И НЕ ТекущееСостояние.Подразделение В (&Подразделение)
		|			ИЛИ &ТребуетсяСостояние
		|				И НЕ ТекущееСостояние.Состояние В (&Состояние)
		|			ИЛИ &ТребуетсяВидАктива
		|				И НЕ ТекущееСостояние.ВидАктива В (&ВидАктива))"
	);
	
	Запрос.УстановитьПараметр("ВнеоборотныеАктивы", ВнеоборотныеАктивы);
	
	СтруктураТребуемоеСостояние = Новый Структура(ПроверяемыеПоля);
	ЗаполнитьЗначенияСвойств(СтруктураТребуемоеСостояние, ТребуемоеСостояние);
	Для Каждого КлючИЗначение Из СтруктураТребуемоеСостояние Цикл
		Запрос.УстановитьПараметр("Требуется"+КлючИЗначение.Ключ, ЗначениеЗаполнено(КлючИЗначение.Значение));
		Запрос.УстановитьПараметр(КлючИЗначение.Ключ, КлючИЗначение.Значение);
	КонецЦикла;
	
	СтруктураПараметрыПроверки = Новый Структура("ДатаСведений, ИсключаемыйРегистратор", ТекущаяДатаСеанса(), Неопределено);
	ЗаполнитьЗначенияСвойств(СтруктураПараметрыПроверки, ПараметрыПроверки);
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", СтруктураПараметрыПроверки.ИсключаемыйРегистратор);
	Запрос.УстановитьПараметр("Граница", Новый Граница(СтруктураПараметрыПроверки.ДатаСведений, ВидГраницы.Исключая));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ВозвращаемыеОшибки = Новый Соответствие;
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СтруктураОшибки = Новый Структура(ПроверяемыеПоля);
		ЗаполнитьЗначенияСвойств(СтруктураОшибки, Выборка);
		ВозвращаемыеОшибки.Вставить(Выборка.ВнеоборотныйАктив, СтруктураОшибки);
		
	КонецЦикла;
	
	Возврат ВозвращаемыеОшибки;
	
КонецФункции

// Определяет в какой организации ОС принято к учету.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации - ОС, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой данное ОС принято к учету.
//
Функция ОрганизацияВКоторойОСПринятоКУчету(ОсновноеСредство) Экспорт

	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ОсновныеСредстваМеждународныйУчет) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СостоянияОС.Организация
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК СостоянияОС
	|ГДЕ
	|	СостоянияОС.Состояние В (ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету),
	|							ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции

// Определяет в какой организации НМА принят к учету.
//
// Параметры:
//  НематериальныйАктив - СправочникСсылка.НематериальныеАктивы - НМА, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой НМА принят к учету.
//
Функция ОрганизацияВКоторойНМАПринятКУчету(НематериальныйАктив) Экспорт

	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.НематериальныеАктивыМеждународныйУчет) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	СостоянияНМА.Организация
	|ИЗ
	|	РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(, НематериальныйАктив = &НМА) КАК СостоянияНМА
	|ГДЕ
	|	СостоянияНМА.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("НМА", НематериальныйАктив);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции

#Область Амортизация

// Возвращает таблицу с данными об амортизации к начислению и настройках отражения в заданном периоде.
//
// Параметры:
// 		Дата - Дата - Дата периода начисления амортизации
// 		Организация - СправочникСсылк.Организации - Организация, в которой приняты к учету объекты внеоборотных активов
// 		Объекты - Массив, СправочникСсылка.НематериальныеАктивы - Массив ссылок на объект или ссылка на объект для начисления амортизации.
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица в формате, который описан в процедуре МеждународныйУчетВнеоборотныеАктивы.ТаблицаАмортизационныхРасходов.
//
Функция АмортизационныеРасходыПоНМА(Знач Дата, Знач Организация, Знач Объекты=Неопределено, ТаблицаПараметровРасчетаАмортизации = Неопределено) Экспорт
	
	Если НачалоДня(Дата) = НачалоМесяца(Дата) Тогда
		Возврат МеждународныйУчетВнеоборотныеАктивы.ТаблицаАмортизационныхРасходов();
	КонецЕсли;
	
	Возврат АмортизационныеРасходы(
		ТекстЗапросаПараметровРасчетаАмортизацииНМА(),
		Дата,
		Организация,
		Объекты,
		ТаблицаПараметровРасчетаАмортизации);
	
КонецФункции

// Возвращает таблицу с данными об амортизации к начислению и настройках отражения в заданном периоде.
//
// Параметры:
// 		Дата - Дата - Дата периода начисления амортизации
// 		Организация - СправочникСсылк.Организации - Организация, в которой приняты к учету объекты внеоборотных активов
// 		Объекты - Массив, СправочникСсылка.ОбъектыЭксплуатации - Массив ссылок на объект или ссылка на объект для начисления амортизации.
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица в формате, который описан в процедуре МеждународныйУчетВнеоборотныеАктивы.ТаблицаАмортизационныхРасходов.
//
Функция АмортизационныеРасходыПоОС(Знач Дата, Знач Организация, Знач Объекты=Неопределено, ТаблицаПараметровРасчетаАмортизации = Неопределено) Экспорт
	
	Если НачалоДня(Дата) = НачалоМесяца(Дата) Тогда
		Возврат МеждународныйУчетВнеоборотныеАктивы.ТаблицаАмортизационныхРасходов();
	КонецЕсли;
	
	Возврат АмортизационныеРасходы(
		ТекстЗапросаПараметровРасчетаАмортизацииОС(),
		Дата,
		Организация,
		Объекты,
		ТаблицаПараметровРасчетаАмортизации);
	
КонецФункции

// Возвращает пустую таблицу для данных о начисленной амортизации
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица для данных о начисленной амортизации.
//
Функция ТаблицаАмортизационныхРасходов() Экспорт
	
	ТипАналитикиРасходов = Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип;
	
	КвалификаторыЧисла = Новый КвалификаторыЧисла(15, 2, ДопустимыйЗнак.Неотрицательный);
	
	МассивТиповОбъектаИнвентаризации = Новый Массив;
	МассивТиповОбъектаИнвентаризации.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектаИнвентаризации.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	
	ТаблицаРезультат = Новый ТаблицаЗначений;
	ТаблицаРезультат.Колонки.Добавить("ОбъектАмортизации", Новый ОписаниеТипов(МассивТиповОбъектаИнвентаризации));
	ТаблицаРезультат.Колонки.Добавить("Подразделение", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
	ТаблицаРезультат.Колонки.Добавить("СчетАмортизации", Новый ОписаниеТипов("ПланСчетовСсылка.Международный"));
	ТаблицаРезультат.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаРезультат.Колонки.Добавить("АналитикаРасходов", ТипАналитикиРасходов);
	ТаблицаРезультат.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
	ТаблицаРезультат.Колонки.Добавить("СуммаПредставления", Новый ОписаниеТипов("Число", КвалификаторыЧисла));
	ТаблицаРезультат.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ПустаяТаблицаПараметровРасчетаАмортизации() Экспорт

	ПараметрыАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ПараметрыАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияУУ");
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияУУ");
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьУУ");
	ПараметрыАмортизации.Колонки.Добавить("ЛиквидационнаяСтоимость");
	ПараметрыАмортизации.Колонки.Добавить("РесурсВыработанныйЗаТекущийПериод");
	ПараметрыАмортизации.Колонки.Добавить("РесурсВыработанныйЗаПрошлыйПериод");
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентУскоренияУУ");
	ПараметрыАмортизации.Колонки.Добавить("ОтработанныхМесяцевПолныхЛет");
	
	Возврат ПараметрыАмортизации;

КонецФункции

// Выполняет проверку и возвращает массив ошибок заполнения шаблонов проводок по амортизации внеоборотных активов.
//
// Параметры:
// 		Дата - Дата - Дата документа, с которой сравнивается период действия настройки
// 		Организация - СправочникСсылка.Организации - Организация
// 		СтатьиРасходов - Массив - Массив элементов типа <ПланВидовХарактеристикСсылка.СтатьиРасходов>.
//
// Возвращаемое значение:
// 		Структура - Структура списка ошибок создаваемая при первом вызове ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю.
//
Функция ОшибкиЗаполненияШаблоновПроводокАмортизации(Дата, Организация, СтатьиРасходов) Экспорт
	
	Ошибки = Неопределено;
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК СтатьяРасходов,
		|	ЕСТЬNULL(ПравилаУточненияСчетов.СчетУчета, ЕСТЬNULL(ШаблоныПроводок.СчетДебетаПоУмолчанию, ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка))) КАК СчетРасходов
		|ПОМЕСТИТЬ ТаблицаШаблоновПроводок
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(&Граница, Организация = &Организация) КАК ПланыСчетовМеждународногоУчетаОрганизаций
		|		ПО (ИСТИНА)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтраженияВМеждународномУчете
		|		ПО (ПланыСчетовМеждународногоУчетаОрганизаций.НастройкаФормированияПроводок = ПравилаОтраженияВМеждународномУчете.НастройкаФормированияПроводок)
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШаблоныПроводокДляМеждународногоУчета КАК ШаблоныПроводок
		|		ПО (ПравилаОтраженияВМеждународномУчете.ШаблонПроводки = ШаблоныПроводок.Ссылка)
		|			И (ШаблоныПроводок.Операция = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияВнеоборотныхАктивов))
		|			И (НЕ ШаблоныПроводок.ПометкаУдаления)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаУточненияСчетовВМеждународномУчете КАК ПравилаУточненияСчетов
		|		ПО (ШаблоныПроводок.Ссылка = ПравилаУточненияСчетов.ШаблонПроводки)
		|			И СтатьиРасходов.ГруппаФинансовогоУчета = ПравилаУточненияСчетов.ГруппаФинансовогоУчета
		|ГДЕ
		|	СтатьиРасходов.Ссылка В (&СтатьиРасходов)
		|	И ЕСТЬNULL(
		|		ПравилаУточненияСчетов.СчетУчета,
		|		ЕСТЬNULL(
		|			ШаблоныПроводок.СчетДебетаПоУмолчанию,
		|			ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|		)
		|	) <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтатьиРасходов.Ссылка КАК СтатьяРасходов
		|ИЗ
		|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаШаблоновПроводок КАК ТаблицаШаблоновПроводок
		|		ПО СтатьиРасходов.Ссылка = ТаблицаШаблоновПроводок.СтатьяРасходов
		|ГДЕ
		|	СтатьиРасходов.Ссылка В (&СтатьиРасходов) И ТаблицаШаблоновПроводок.СчетРасходов ЕСТЬ NULL");
	
	Запрос.УстановитьПараметр("СтатьиРасходов", СтатьиРасходов);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Граница", Новый Граница(Дата, ВидГраницы.Исключая));
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Ошибки;
	КонецЕсли;
	
	ШаблонОшибки = НСтр("ru = 'Не настроен счет по статье расходов ""%1"" в шаблоне проводок для операции ""Амортизация внеоборотных активов""';
						|en = 'Account is not set for the ""%1"" expense item in the posting template for the ""Capital asset depreciation"" transaction'");
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю(Ошибки, "", СтрЗаменить(ШаблонОшибки, "%1", Выборка.СтатьяРасходов), "");
	КонецЦикла;
	
	Возврат Ошибки;
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете

// Инициализирует параметры запроса данных проведения при отражении начисленной амортизации.
//
// Параметры:
// 		Запрос - Запрос - Объект запроса к данным.
//
Процедура ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос) Экспорт
	
	Запрос.УстановитьПараметр(
		"СтатусОтраженияДокумента",
		Перечисления.СтатусыОтраженияВМеждународномУчете.ОтраженоВУчете);
	
	Запрос.УстановитьПараметр("ТаблицаАмортизации", ТаблицаАмортизационныхРасходов());
	Запрос.УстановитьПараметр("Граница", Дата(1, 1, 1, 0, 0, 0));
	
	Запрос.УстановитьПараметр("СписаниеОстаточнойСтоимости", Ложь);
	Запрос.УстановитьПараметр("Организация", Неопределено);
	Запрос.УстановитьПараметр("Подразделение", Неопределено);
	Запрос.УстановитьПараметр("СтатьяРасходов", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаРасходов", Неопределено);
	
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихДоходовРасходов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихАктивовПассивов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	
КонецПроцедуры

// Заполняет текст запроса движений по регистру отражения документов в международном учете.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующихся к заполнению.
//
Процедура ОтражениеДокументовВМеждународномУчете(ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "ОтражениеДокументовВМеждународномУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВМеждународномУчете
	|"+
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	
	|	&Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	&СтатусОтраженияДокумента КАК Статус,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаФормированияПроводок,
	|	НЕОПРЕДЕЛЕНО КАК Комментарий";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Заполняет текст запроса движений по прочим расходам
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующихся к заполнению
// 		ДополнительныйТекстЗапроса - Строка - Текст запроса для включение в объединение с основным.
//
Процедура ПрочиеРасходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

// Заполняет текст запроса движений по партиям прочих расходов
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующихся к заполнению
// 		ДополнительныйТекстЗапроса - Строка - Текст запроса для включение в объединение с основным.
//
Процедура ПартииПрочихРасходов(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы движений прочих активов/пассивов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующихся к заполнению
// 		ДополнительныйТекстЗапроса - Строка - Текст запроса для включение в объединение с основным.
//
Процедура ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеАктивыПассивы
	|" + ПрочиеАктивыПассивы_ПустаяТаблица()
	+ Разделитель + ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "")
	+ Разделитель + РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Заполняет текст запроса проводок амортизации в регистре международного учета
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующихся к заполнению
// 		ДополнительныйТекстЗапроса - Строка - Текст запроса для включение в объединение с основным.
//
Процедура Международный(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "Международный";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаШаблоныПроводокАмортизации(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица Международный
	|" + ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), ДополнительныйТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС, "") +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	
	|	ЗНАЧЕНИЕ(Справочник.ПланыСчетовМеждународногоУчета.Международный) КАК ПланСчетов,
	|	&Организация КАК Организация,
	|	
	|	ВЫБОР КОГДА ТаблицаШаблоновПроводок.СчетРасходов.УчетПоПодразделениям
	|		ТОГДА ТаблицаАмортизации.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеДт,
	|	ВЫБОР КОГДА ТаблицаШаблоновПроводок.СчетРасходов.УчетПоНаправлениямДеятельности
	|		ТОГДА ТаблицаАмортизации.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельностиДт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаДт,
	|	ТаблицаШаблоновПроводок.СчетРасходов КАК СчетДт,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.СтатьиРасходов) КАК ВидСубконтоДт1,
	|	ТаблицаАмортизации.СтатьяРасходов КАК СубконтоДт1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ПустаяСсылка) КАК ВидСубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ПустаяСсылка) КАК ВидСубконтоДт3,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	ВЫБОР КОГДА ТаблицаАмортизации.СчетАмортизации.УчетПоПодразделениям
	|		ТОГДА ТаблицаАмортизации.Подразделение
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ПодразделениеКт,
	|	ВЫБОР КОГДА ТаблицаАмортизации.СчетАмортизации.УчетПоНаправлениямДеятельности
	|		ТОГДА ТаблицаАмортизации.НаправлениеДеятельности
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	ТаблицаАмортизации.СчетАмортизации КАК СчетКт,
	|	&ВидСубконтоОбъектаАмортизации КАК ВидСубконтоКт1,
	|	ТаблицаАмортизации.ОбъектУчета КАК СубконтоКт1,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ПустаяСсылка) КАК ВидСубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоМеждународные.ПустаяСсылка) КАК ВидСубконтоКт3,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	ТаблицаАмортизации.Сумма КАК Сумма,
	|	ТаблицаАмортизации.СуммаПредставления КАК СуммаПредставления,
	|	0 КАК ВалютнаяСумма,
	|	
	|	НЕОПРЕДЕЛЕНО КАК Содержание,
	|	НЕОПРЕДЕЛЕНО КАК ШаблонПроводки,
	|	НЕОПРЕДЕЛЕНО КАК ТипПроводки
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ втШаблоныПроводокАмортизации КАК ТаблицаШаблоновПроводок
	|		ПО ТаблицаАмортизации.ОбъектУчета = ТаблицаШаблоновПроводок.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	Текст = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	
	Разделитель = РазделительЗапросовВОбъединении();
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

#Область НачислениеАмортизацииОСиНМАМеждународныйУчет

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца -
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап_НачислениеАмортизацииОСиНМАМеждународныйУчет(ТаблицаЭтапов,ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииОСиНМАМеждународныйУчет,
		Истина, Истина, ,
		Перечисления.ОперацииЗакрытияМесяца.НачислениеАмортизацииНМА);
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Начислить';
										|en = 'Accrue'");
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"МеждународныйУчетВнеоборотныеАктивы.Использование_НачислениеАмортизацииОСиНМАМеждународныйУчет");
	НоваяСтрока.ДействиеВыполнить  = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"МеждународныйУчетВнеоборотныеАктивы.Выполнить_НачислениеАмортизацииОСиНМАМеждународныйУчет");
	НоваяСтрока.ДействиеПодробнее = ЗакрытиеМесяцаСервер.ОписаниеДействия_ОткрытьФорму(
		Метаданные.ЖурналыДокументов.РегламентныеДокументыМеждународныйУчет.Формы.ФормаСписка.ПолноеИмя(), Истина);
	// Доп. параметры формы.
	НоваяСтрока.ДействиеПодробнее.ПараметрыФормы.Отбор.Вставить("Тип", Новый Массив);
	НоваяСтрока.ДействиеПодробнее.ПараметрыФормы.Отбор.Тип.Добавить(Тип("ДокументСсылка.АмортизацияОСМеждународныйУчет"));
	НоваяСтрока.ДействиеПодробнее.ПараметрыФормы.Отбор.Тип.Добавить(Тип("ДокументСсылка.АмортизацияНМАМеждународныйУчет"));
КонецПроцедуры

Процедура Использование_НачислениеАмортизацииОСиНМАМеждународныйУчет(ПараметрыОбработчика) Экспорт
	
	МеждународныйУчетЗакрытиеМесяца.ПроверитьИспользованиеМеждународногоУчета(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	МеждународныйУчетЗакрытиеМесяца.ПроверитьНеобходимостьОтраженияВМеждународномУчете(ПараметрыОбработчика);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);

	Если ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.НачалоПериода) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Операция не используется при учете внеоборотных активов версии 2.4';
				|en = 'The operation is not used for capital asset accounting 2.4'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОсновныеСредства.Организация
	|ПОМЕСТИТЬ ТребуетсяАмортизацияОС
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(&КонецПериода, Организация В (&МассивОрганизаций)) КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И ОсновныеСредства.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НематериальныеАктивы.Организация
	|ПОМЕСТИТЬ ТребуетсяАмортизацияНМА
	|ИЗ
	|	РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(&КонецПериода, Организация В (&МассивОрганизаций)) КАК НематериальныеАктивы
	|ГДЕ
	|	НематериальныеАктивы.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И НематериальныеАктивы.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АмортизацияОС.Организация КАК Организация
	|ПОМЕСТИТЬ ЕстьАмортизацияОС
	|ИЗ
	|	Документ.АмортизацияОСМеждународныйУчет КАК АмортизацияОС
	|ГДЕ
	|	АмортизацияОС.Проведен
	|	И АмортизацияОС.Организация В(&МассивОрганизаций)
	|	И АмортизацияОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	АмортизацияНМА.Организация КАК Организация
	|ПОМЕСТИТЬ ЕстьАмортизацияНМА
	|ИЗ
	|	Документ.АмортизацияНМАМеждународныйУчет КАК АмортизацияНМА
	|ГДЕ
	|	АмортизацияНМА.Проведен
	|	И АмортизацияНМА.Организация В(&МассивОрганизаций)
	|	И АмортизацияНМА.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТребуетсяАмортизацияОС.Организация
	|ПОМЕСТИТЬ НетАмортизацииОС
	|ИЗ
	|	ТребуетсяАмортизацияОС КАК ТребуетсяАмортизацияОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьАмортизацияОС КАК ЕстьАмортизацияОС
	|		ПО ТребуетсяАмортизацияОС.Организация = ЕстьАмортизацияОС.Организация
	|ГДЕ
	|	ЕстьАмортизацияОС.Организация ЕСТЬ NULL
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТребуетсяАмортизацияНМА.Организация
	|ПОМЕСТИТЬ НетАмортизацииНМА
	|ИЗ
	|	ТребуетсяАмортизацияНМА КАК ТребуетсяАмортизацияНМА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЕстьАмортизацияНМА КАК ЕстьАмортизацияНМА
	|		ПО ТребуетсяАмортизацияНМА.Организация = ЕстьАмортизацияНМА.Организация
	|ГДЕ
	|	ЕстьАмортизацияНМА.Организация ЕСТЬ NULL";
	
	Запрос.Выполнить();
	
	РазмерыВременныхТаблиц = ЗакрытиеМесяцаСервер.РазмерыВременныхТаблиц(Запрос, ПараметрыОбработчика);
	
	Если РазмерыВременныхТаблиц.ТребуетсяАмортизацияОС = 0 И РазмерыВременныхТаблиц.ТребуетсяАмортизацияНМА = 0 Тогда
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(
			ПараметрыОбработчика,
			НСтр("ru = 'Нет ОС и НМА, по которым требуется начисление амортизации.';
				|en = 'No FA or IA to accrue depreciation for.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
	Иначе
		
		ЗакрытиеМесяцаСервер.ЗафиксироватьРезультатыОбработчикаИспользованияПоОрганизациям(
			ПараметрыОбработчика,
			НСтр("ru = 'По организации ""%1"" за период %2 не выполнено начисление амортизации ОС.';
				|en = 'FA depreciation is not accrued for the ""%1"" company for period %2.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			Запрос,
			"НетАмортизацииОС",
			Ложь,
			Истина);
		
		ЗакрытиеМесяцаСервер.ЗафиксироватьРезультатыОбработчикаИспользованияПоОрганизациям(
			ПараметрыОбработчика,
			НСтр("ru = 'По организации ""%1"" за период %2 не выполнено начисление амортизации НМА.';
				|en = 'IA depreciation is not accrued for the ""%1"" company for period %2.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			Запрос,
			"НетАмортизацииНМА",
			Ложь,
			Истина);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура Выполнить_НачислениеАмортизацииОСиНМАМеждународныйУчет(ПараметрыОбработчика) Экспорт
	
	МеждународныйУчетЗакрытиеМесяца.СформироватьДокументРегламентнаяОперацияМУ(
		ПараметрыОбработчика,
		Перечисления.ТипыРегламентныхОперацийМеждународныйУчет.ЗакрытиеСчетовДоходовРасходов,,
		Ложь); // также формирует ВТОрганизации - организации, по которым требуется отражение в международном учете
		
	Запрос = Новый Запрос;
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ОС.Организация
	|ПОМЕСТИТЬ ВТОрганизацииОС
	|ИЗ
	|	РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(&КонецПериода,
	|		Организация В (ВЫБРАТЬ Т.Ссылка ИЗ ВТОрганизации КАК Т)) КАК ОС
	|ГДЕ
	|	ОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И ОС.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НМА.Организация
	|ПОМЕСТИТЬ ВТОрганизацииНМА
	|ИЗ
	|	РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(&КонецПериода,
	|		Организация В (ВЫБРАТЬ Т.Ссылка ИЗ ВТОрганизации КАК Т)) КАК НМА
	|ГДЕ
	|	НМА.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И НМА.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	ИСТИНА КАК АмортизацияОС,
	|	ВЫБОР
	|		КОГДА РегламентнаяОперация.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РегламентнаяОперация.Ссылка
	|	КОНЕЦ КАК РегламентныйДокумент
	|ПОМЕСТИТЬ ВТДокументы
	|ИЗ
	|	ВТОрганизацииОС КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АмортизацияОСМеждународныйУчет КАК РегламентнаяОперация
	|		ПО (РегламентнаяОперация.Организация = Т.Организация)
	|			И (РегламентнаяОперация.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
	|			И (РегламентнаяОперация.Проведен)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.Организация,
	|	ЛОЖЬ,
	|	ВЫБОР
	|		КОГДА РегламентнаяОперация.Ссылка ЕСТЬ NULL
	|			ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ РегламентнаяОперация.Ссылка
	|	КОНЕЦ
	|ИЗ
	|	ВТОрганизацииНМА КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АмортизацияНМАМеждународныйУчет КАК РегламентнаяОперация
	|		ПО (РегламентнаяОперация.Организация = Т.Организация)
	|			И (РегламентнаяОперация.Дата МЕЖДУ &НачалоПериода И &КонецПериода)
	|			И (РегламентнаяОперация.Проведен)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегламентныйДокумент,
	|	АмортизацияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.АмортизацияОС КАК АмортизацияОС,
	|	МАКСИМУМ(Т.РегламентныйДокумент) КАК РегламентныйДокумент
	|ПОМЕСТИТЬ ВТАктуальныеДокументы
	|ИЗ
	|	ВТДокументы КАК Т
	|
	|СГРУППИРОВАТЬ ПО
	|	Т.Организация,
	|	Т.АмортизацияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	РегламентныйДокумент,
	|	АмортизацияОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Т.Организация КАК Организация,
	|	Т.АмортизацияОС КАК АмортизацияОС,
	|	Т.РегламентныйДокумент,
	|	ВЫБОР
	|		КОГДА Т.РегламентныйДокумент <> Т2.РегламентныйДокумент
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Удалить
	|ИЗ
	|	ВТДокументы КАК Т
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТАктуальныеДокументы КАК Т2
	|		ПО Т.Организация = Т2.Организация
	|			И Т.РегламентныйДокумент = Т2.РегламентныйДокумент
	|			И Т.АмортизацияОС = Т2.АмортизацияОС
	|
	|УПОРЯДОЧИТЬ ПО
	|	Организация,
	|	АмортизацияОС УБЫВ";

	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		МетаданныеДокумента = ?(Выборка.АмортизацияОС,
			Метаданные.Документы.АмортизацияОСМеждународныйУчет,
			Метаданные.Документы.АмортизацияНМАМеждународныйУчет);
		
		Если НЕ ЗначениеЗаполнено(Выборка.РегламентныйДокумент) Тогда
			РегламентныйДокумент = Документы[МетаданныеДокумента.Имя].СоздатьДокумент();
		Иначе
			РегламентныйДокумент = Выборка.РегламентныйДокумент.ПолучитьОбъект();
		КонецЕсли;
		
		Попытка
		
			Если Выборка.Удалить Тогда
				РегламентныйДокумент.УстановитьПометкуУдаления(Истина);
				Продолжить;
			ИначеЕсли РегламентныйДокумент.Проведен Тогда
				РегламентныйДокумент.Записать(РежимЗаписиДокумента.ОтменаПроведения);
			КонецЕсли;
			
			РегламентныйДокумент.Дата 	     	= КонецМесяца(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации);
			РегламентныйДокумент.Организация 	= Выборка.Организация;
			РегламентныйДокумент.Ответственный 	= Пользователи.ТекущийПользователь();
			
			РегламентныйДокумент.Записать(РежимЗаписиДокумента.Проведение);
			
		Исключение
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'Формирование документа ""%1"" по организации ""%2"" за период %3 завершилось с ошибкой:
					|%4';
					|en = 'Generation of the ""%1"" document by the ""%2"" company for period %3 was completed with an error:
					|%4'", ОбщегоНазначения.КодОсновногоЯзыка()),
				МетаданныеДокумента.Синоним,
				Выборка.Организация,	
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ТекстОшибки,
				Выборка.Организация);
			
		КонецПопытки;
		
	КонецЦикла;
	
	РасчетСебестоимостиПрикладныеАлгоритмы.УничтожитьВременныеТаблицы(Запрос, "ВТОрганизации");
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Амортизация

// Возвращает таблицу с данными об амортизации к начислению и настройках отражения в заданном периоде.
//
// Параметры:
// 		ТекстЗапросаВыборкиДанных - Строка - Текст запроса выборки данных для расчета амортизации
// 		Дата - Дата - Дата периода начисления амортизации
// 		Организация - СправочникСсылка.Организации - Организация, в которой приняты к учету объекты внеоборотных активов
// 		Объекты - Массив, СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.НематериальныеАктивы
// 			- Массив ссылок на объект или ссылка на объект для начисления амортизации.
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Таблица в формате, который описан в процедуре МеждународныйУчетВнеоборотныеАктивы.ТаблицаАмортизационныхРасходов.
//
Функция АмортизационныеРасходы(ТекстЗапросаВыборкиДанных, Дата, Организация, Объекты=Неопределено, ТаблицаПараметровРасчетаАмортизации = Неопределено)
	
	ТаблицаРезультат = ТаблицаАмортизационныхРасходов();
	
	Запрос = ЗапросДанныхДляРасчетаАмортизации(
		ТекстЗапросаВыборкиДанных,
		Дата,
		Организация,
		Объекты);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат ТаблицаРезультат;
	КонецЕсли;

	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Параметры расчета
		Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
			ПараметрыАмортизации = ТаблицаПараметровРасчетаАмортизации.Добавить();
			ПараметрыАмортизации.ОбъектУчета = Выборка.ОбъектАмортизации;
			ПараметрыАмортизации.МетодНачисленияУУ = Выборка.МетодНачисленияАмортизации;
			ПараметрыАмортизации.СтоимостьУУ = Выборка.Стоимость - Выборка.НакопленнаяАмортизация;
			ПараметрыАмортизации.ЛиквидационнаяСтоимость = Выборка.ЛиквидационнаяСтоимость;
			ПараметрыАмортизации.СрокИспользованияУУ = Выборка.РесурсНазначенный;
			ПараметрыАмортизации.РесурсВыработанныйЗаТекущийПериод = Выборка.РесурсВыработанныйЗаПериод;
			ПараметрыАмортизации.КоэффициентУскоренияУУ = Выборка.КоэффициентУскорения;
		КонецЕсли; 
		
		СуммаКНачислению = 0;
		СуммаКНачислениюПредставления = 0;
		
		// Признак, что это последний месяц начисления или выработано больше чем объем предполагаемой наработки.
		РесурсВыработан = (
			(Выборка.РесурсВыработанный
			+ Выборка.РесурсВыработанныйЗаПериод) >= Выборка.РесурсНазначенный);
		
		// Признак, что это последний год использования амортизируемого объекта
		ПоследнийГодИспользования = (
			(Выборка.РесурсНазначенный
			- Выборка.РесурсВыработанный
			- Выборка.РесурсВыработанныйЗаПериод) <= 12);
		
		Если ЭтоМетодЛинейный(Выборка.МетодНачисленияАмортизации)
			Или (ПоследнийГодИспользования И ЭтоМетодУменьшаемогоОстатка(Выборка.МетодНачисленияАмортизации)) Тогда
			
			// Остаточная амортизируемая стоимость объекта
			ОстаточнаяСтоимость = Макс(
				0,
				(Выборка.Стоимость
				- Выборка.НакопленнаяАмортизация
				- Выборка.ЛиквидационнаяСтоимость));
			ОстаточнаяСтоимостьПредставления = Макс(
				0,
				(Выборка.СтоимостьПредставления
				- Выборка.НакопленнаяАмортизацияПредставления
				- Выборка.ЛиквидационнаяСтоимостьПредставления));
			
			Множитель = 1;
			Если Не РесурсВыработан Тогда
				Множитель = ((Выборка.РесурсВыработанныйЗаПериод)/(Выборка.РесурсНазначенный - Выборка.РесурсВыработанный));
			КонецЕсли;
			
			СуммаКНачислению = ОстаточнаяСтоимость * Множитель;
			СуммаКНачислениюПредставления = ОстаточнаяСтоимостьПредставления * Множитель;
			
			СуммаКНачислению = Мин(СуммаКНачислению, ОстаточнаяСтоимость);
			СуммаКНачислениюПредставления = Мин(СуммаКНачислениюПредставления, ОстаточнаяСтоимостьПредставления);
			
		ИначеЕсли ЭтоМетодУменьшаемогоОстатка(Выборка.МетодНачисленияАмортизации) Тогда
			
			// Остаточная амортизируемая стоимость объекта
			ОстаточнаяСтоимость = (Выборка.Стоимость - Выборка.НакопленнаяАмортизация);
			ОстаточнаяСтоимостьПредставления = (Выборка.СтоимостьПредставления - Выборка.НакопленнаяАмортизацияПредставления);
			
			Множитель = 1;
			Если Не РесурсВыработан Тогда
				
				ОтработанныхМесяцевПолныхЛет = 0;
				Если Год(Выборка.ДатаПринятияКУчету) <> Год(Дата) Тогда
					ОтработанныхМесяцевПолныхЛет = 
						13 - Месяц(Выборка.ДатаПринятияКУчету)
						+ 12 * (Год(Дата) - Год(Выборка.ДатаПринятияКУчету) - 1);
				КонецЕсли;
				
				Множитель = (
					(Выборка.КоэффициентУскорения*Выборка.РесурсВыработанныйЗаПериод)
					/ (Выборка.РесурсНазначенный - Выборка.КоэффициентУскорения*(Выборка.РесурсВыработанный-ОтработанныхМесяцевПолныхЛет)));
					
				Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
					ПараметрыАмортизации.ОтработанныхМесяцевПолныхЛет = ОтработанныхМесяцевПолныхЛет;
				КонецЕсли; 
					
			КонецЕсли;
			
			СуммаКНачислению = ОстаточнаяСтоимость * Множитель;
			СуммаКНачислениюПредставления = ОстаточнаяСтоимостьПредставления * Множитель;
			
			СуммаКНачислению = Мин(
				СуммаКНачислению,
				Макс(0, ОстаточнаяСтоимость - Выборка.ЛиквидационнаяСтоимость));
				
			СуммаКНачислениюПредставления = Мин(
				СуммаКНачислениюПредставления,
				Макс(0, ОстаточнаяСтоимостьПредставления - Выборка.ЛиквидационнаяСтоимостьПредставления));
			
		КонецЕсли;
		
		Если СуммаКНачислению > 0 Или СуммаКНачислениюПредставления > 0 Тогда
			
			СтрокаРезультат = ТаблицаРезультат.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаРезультат, Выборка);
			СтрокаРезультат.Сумма = СуммаКНачислению;
			СтрокаРезультат.СуммаПредставления = СуммаКНачислениюПредставления;
			СтрокаРезультат.Коэффициент = СуммаКНачислению/ОстаточнаяСтоимость; // Доля начисляемой амортизации в остаточной стоимости
			
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаРезультат;
	
КонецФункции

Функция ЭтоМетодЛинейный(МетодНачисленияАмортизации)
	
	Возврат МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.Линейный
		Или МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции
		Или МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный
		Или МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции;
	
КонецФункции

Функция ЭтоМетодУменьшаемогоОстатка(МетодНачисленияАмортизации)
	
	Возврат МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииНМА.УменьшаемогоОстатка
		Или МетодНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка;
	
КонецФункции

Функция ЗапросДанныхДляРасчетаАмортизации(ТекстЗапроса, Дата, Организация, Объекты)
	
	МетодыПоНаработке = Новый Массив;
	МетодыПоНаработке.Добавить(Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции);
	МетодыПоНаработке.Добавить(Перечисления.СпособыНачисленияАмортизацииНМА.ПропорциональноОбъемуПродукции);
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Граница", Новый Граница(Дата, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("ДатаНачисления", ?(ЗначениеЗаполнено(Объекты), НачалоДня(Дата)-1, Дата));
	Запрос.УстановитьПараметр("МесяцНачало", НачалоМесяца(Дата));
	Запрос.УстановитьПараметр("МесяцОкончание", КонецМесяца(Дата));
	Запрос.УстановитьПараметр("КонецДня", КонецДня(Дата));
	Запрос.УстановитьПараметр("Объекты", Объекты);
	Запрос.УстановитьПараметр("ОтборПоОбъектам", ЗначениеЗаполнено(Объекты));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("МетодыНачисленияАмортизацииПоНаработке", МетодыПоНаработке);
	
	Возврат Запрос;
	
КонецФункции

Функция ТекстЗапросаПараметровРасчетаАмортизацииНМА()
	
	Возврат
	"ВЫБРАТЬ
	|	Объекты.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(СостоянияТекущие.Период, МЕСЯЦ) = &МесяцНачало
	|			ТОГДА НАЧАЛОПЕРИОДА(СостоянияТекущие.Период, ДЕНЬ)
	|		ИНАЧЕ &МесяцНачало
	|	КОНЕЦ КАК ДатаСостояния,
	|	СостоянияТекущие.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	СостоянияТекущие.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
	|	СостоянияТекущие.Организация КАК Организация,
	|	СостоянияТекущие.Подразделение КАК Подразделение,
	|	СостоянияТекущие.СчетУчета КАК СчетУчета,
	|	СостоянияТекущие.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	СостоянияТекущие.СчетАмортизации КАК СчетАмортизации,
	|	СостоянияТекущие.СрокИспользования КАК СрокИспользования,
	|	СостоянияТекущие.ОбъемНаработки КАК ОбъемНаработки,
	|	ЕСТЬNULL(СостоянияСписания.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоПринятияКУчету,
	|	СостоянияТекущие.СтатьяРасходов КАК СтатьяРасходов,
	|	СостоянияТекущие.АналитикаРасходов КАК АналитикаРасходов,
	|	СостоянияТекущие.КоэффициентУскорения КАК КоэффициентУскорения
	|ПОМЕСТИТЬ Объекты
	|ИЗ
	|	Справочник.НематериальныеАктивы КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
	|				&Граница,
	|				(НЕ &ОтборПоОбъектам
	|					ИЛИ НематериальныйАктив В (&Объекты))
	|					И Организация = &Организация) КАК СостоянияТекущие
	|		ПО Объекты.Ссылка = СостоянияТекущие.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет.СрезПоследних(
	|				&Граница,
	|				(НЕ &ОтборПоОбъектам
	|					ИЛИ НематериальныйАктив В (&Объекты))
	|					И Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)) КАК СостоянияСписания
	|		ПО Объекты.Ссылка = СостоянияСписания.НематериальныйАктив
	|ГДЕ
	|	СостоянияТекущие.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|	И СостоянияТекущие.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	ДатаСостояния,
	|	СчетУчета,
	|	СчетАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(НематериальныеАктивыМеждународныйУчет.Период) КАК Период,
	|	НематериальныеАктивыМеждународныйУчет.НематериальныйАктив КАК НематериальныйАктив
	|ПОМЕСТИТЬ ПериодыСостояний
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет КАК НематериальныеАктивыМеждународныйУчет
	|		ПО Объекты.Объект = НематериальныеАктивыМеждународныйУчет.НематериальныйАктив
	|			И Объекты.ДатаДоПринятияКУчету < НематериальныеАктивыМеждународныйУчет.Период
	|ГДЕ
	|	НематериальныеАктивыМеждународныйУчет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияНМА.ПринятКУчету)
	|
	|СГРУППИРОВАТЬ ПО
	|	НематериальныеАктивыМеждународныйУчет.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	НематериальныйАктив
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК Объект,
	|	СУММА(ВыработкаНМА.Количество) КАК Значение
	|ПОМЕСТИТЬ Наработки
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыработкаНМА КАК ВыработкаНМА
	|		ПО Объекты.Объект = ВыработкаНМА.НематериальныйАктив
	|			И Объекты.Организация = ВыработкаНМА.Организация
	|			И (ВыработкаНМА.Период < &ДатаНачисления)
	|			И Объекты.ДатаСостояния <= ВыработкаНМА.Период
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|
	|СГРУППИРОВАТЬ ПО
	|	Объекты.Объект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК Объект,
	|	СУММА(ВыработкаНМА.Количество) КАК Значение
	|ПОМЕСТИТЬ НаработкиДоДатыСостояния
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.ВыработкаНМА КАК ВыработкаНМА
	|		ПО Объекты.Объект = ВыработкаНМА.НематериальныйАктив
	|			И Объекты.Организация = ВыработкаНМА.Организация
	|			И Объекты.ДатаСостояния > ВыработкаНМА.Период
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|		ПО Объекты.Объект = ПериодыСостояний.НематериальныйАктив
	|			И (ВыработкаНМА.Период > ПериодыСостояний.Период)
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|
	|СГРУППИРОВАТЬ ПО
	|	Объекты.Объект
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК Объект,
	|	Объекты.СрокИспользования КАК РесурсНазначенный,
	|	(РАЗНОСТЬДАТ(Объекты.ДатаСостояния, &ДатаНачисления, ДЕНЬ) + 1) / ДЕНЬ(&МесяцОкончание) КАК РесурсВыработанныйЗаПериод,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Объекты.ДатаСостояния, МЕСЯЦ)
	|			ТОГДА РАЗНОСТЬДАТ(ПериодыСостояний.Период, Объекты.ДатаСостояния, ДЕНЬ) / ДЕНЬ(&МесяцОкончание)
	|		ИНАЧЕ (РАЗНОСТЬДАТ(ПериодыСостояний.Период, КОНЕЦПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ), ДЕНЬ)+1) / ДЕНЬ(КОНЕЦПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ))
	|			+ РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ПериодыСостояний.Период, МЕСЯЦ, 1), Объекты.ДатаСостояния, МЕСЯЦ)
	|			+ РАЗНОСТЬДАТ(&МесяцНачало, Объекты.ДатаСостояния, ДЕНЬ) / ДЕНЬ(&МесяцОкончание)
	|	КОНЕЦ КАК РесурсВыработанный
	|ПОМЕСТИТЬ РесурсыОбъектов
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|		ПО Объекты.Объект = ПериодыСостояний.НематериальныйАктив
	|ГДЕ
	|	НЕ Объекты.МетодНачисленияАмортизации В (&МетодыНачисленияАмортизацииПоНаработке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Объекты.Объект,
	|	Объекты.ОбъемНаработки,
	|	ЕСТЬNULL(Наработки.Значение, 0),
	|	ЕСТЬNULL(НаработкиДоДатыСостояния.Значение, 0)
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ Наработки КАК Наработки
	|		ПО Объекты.Объект = Наработки.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаработкиДоДатыСостояния КАК НаработкиДоДатыСостояния
	|		ПО Объекты.Объект = НаработкиДоДатыСостояния.Объект
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК НематериальныйАктив,
	|	ПринятиеКУчету.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ПринятиеКУчету.ПервоначальнаяСтоимостьПредставления КАК ПервоначальнаяСтоимостьПредставления
	|ПОМЕСТИТЬ ПервоначальныеСтоимостиОбъектов
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НематериальныеАктивыМеждународныйУчет КАК Состояния
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуНМАМеждународныйУчет КАК ПринятиеКУчету
	|			ПО Состояния.НематериальныйАктив = ПринятиеКУчету.НематериальныйАктив
	|				И Состояния.Регистратор = ПринятиеКУчету.Ссылка
	|		ПО Объекты.ДатаСостояния = Состояния.Период
	|			И Объекты.Объект = Состояния.НематериальныйАктив
	|			И (НАЧАЛОПЕРИОДА(Объекты.ДатаСостояния, МЕСЯЦ) = &МесяцНачало)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК ОбъектАмортизации,
	|	Объекты.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ПервоначальныеСтоимостиОбъектов.ПервоначальнаяСтоимость, ЕСТЬNULL(ОстаткиСчетУчета.СуммаОстаток, 0)) КАК Стоимость,
	|	ЕСТЬNULL(ПервоначальныеСтоимостиОбъектов.ПервоначальнаяСтоимостьПредставления, ЕСТЬNULL(ОстаткиСчетУчета.СуммаПредставленияОстаток, 0)) КАК СтоимостьПредставления,
	|	ЕСТЬNULL(-ОстаткиСчетАмортизации.СуммаОстаток, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(-ОстаткиСчетАмортизации.СуммаПредставленияОстаток, 0) КАК НакопленнаяАмортизацияПредставления,
	|	Объекты.СчетАмортизации КАК СчетАмортизации,
	|	Объекты.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	Объекты.КоэффициентУскорения КАК КоэффициентУскорения,
	|	Объекты.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	Объекты.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
	|	РесурсыОбъектов.РесурсНазначенный КАК РесурсНазначенный,
	|	РесурсыОбъектов.РесурсВыработанныйЗаПериод КАК РесурсВыработанныйЗаПериод,
	|	РесурсыОбъектов.РесурсВыработанный КАК РесурсВыработанный,
	|	ПериодыСостояний.Период КАК ДатаПринятияКУчету,
	|	Объекты.СтатьяРасходов КАК СтатьяРасходов,
	|	Объекты.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Международный.Остатки(
	|				&Граница,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Объекты.СчетУчета
	|					ИЗ
	|						Объекты КАК Объекты),
	|				,
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Объекты.Организация,
	|						Объекты.Объект
	|					ИЗ
	|						Объекты КАК Объекты)) КАК ОстаткиСчетУчета
	|		ПО Объекты.Объект = ОстаткиСчетУчета.Субконто1
	|			И Объекты.СчетУчета = ОстаткиСчетУчета.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Международный.Остатки(
	|				&Граница,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Объекты.СчетАмортизации
	|					ИЗ
	|						Объекты КАК Объекты),
	|				,
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Объекты.Организация,
	|						Объекты.Объект
	|					ИЗ
	|						Объекты КАК Объекты)) КАК ОстаткиСчетАмортизации
	|		ПО Объекты.Объект = ОстаткиСчетАмортизации.Субконто1
	|			И Объекты.СчетАмортизации = ОстаткиСчетАмортизации.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РесурсыОбъектов КАК РесурсыОбъектов
	|		ПО Объекты.Объект = РесурсыОбъектов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|		ПО Объекты.Объект = ПериодыСостояний.НематериальныйАктив
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСтоимостиОбъектов КАК ПервоначальныеСтоимостиОбъектов
	|		ПО Объекты.Объект = ПервоначальныеСтоимостиОбъектов.НематериальныйАктив
	|ГДЕ
	|	РесурсыОбъектов.РесурсНазначенный > РесурсыОбъектов.РесурсВыработанный";
	
КонецФункции

Функция ТекстЗапросаПараметровРасчетаАмортизацииОС()
	
	Возврат
	"ВЫБРАТЬ
	|	Объекты.Ссылка КАК Объект,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(СостоянияТекущие.Период, МЕСЯЦ) = &МесяцНачало
	|			ТОГДА НАЧАЛОПЕРИОДА(СостоянияТекущие.Период, ДЕНЬ)
	|		ИНАЧЕ &МесяцНачало
	|	КОНЕЦ КАК ДатаСостояния,
	|	СостоянияТекущие.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	СостоянияТекущие.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
	|	СостоянияТекущие.Организация КАК Организация,
	|	СостоянияТекущие.Подразделение КАК Подразделение,
	|	СостоянияТекущие.СчетУчета КАК СчетУчета,
	|	СостоянияТекущие.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	СостоянияТекущие.СчетАмортизации КАК СчетАмортизации,
	|	СостоянияТекущие.СрокИспользования КАК СрокИспользования,
	|	СостоянияТекущие.ПоказательНаработки КАК ПоказательНаработки,
	|	СостоянияТекущие.ОбъемНаработки КАК ОбъемНаработки,
	|	ЕСТЬNULL(СостоянияСписания.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоПринятияКУчету,
	|	СостоянияТекущие.СтатьяРасходов КАК СтатьяРасходов,
	|	СостоянияТекущие.АналитикаРасходов КАК АналитикаРасходов,
	|	СостоянияТекущие.КоэффициентУскорения КАК КоэффициентУскорения
	|ПОМЕСТИТЬ Объекты
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
	|				&КонецДня,
	|				(НЕ &ОтборПоОбъектам
	|					ИЛИ ОсновноеСредство В (&Объекты))
	|					И Организация = &Организация) КАК СостоянияТекущие
	|		ПО Объекты.Ссылка = СостоянияТекущие.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет.СрезПоследних(
	|				&КонецДня,
	|				(НЕ &ОтборПоОбъектам
	|					ИЛИ ОсновноеСредство В (&Объекты))
	|					И Состояние <> ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)) КАК СостоянияСписания
	|		ПО Объекты.Ссылка = СостоянияСписания.ОсновноеСредство
	|ГДЕ
	|	СостоянияТекущие.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И СостоянияТекущие.ПорядокУчета = ЗНАЧЕНИЕ(Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект,
	|	ДатаСостояния,
	|	ПоказательНаработки,
	|	СчетУчета,
	|	СчетАмортизации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МИНИМУМ(ОсновныеСредстваМеждународныйУчет.Период) КАК Период,
	|	ОсновныеСредстваМеждународныйУчет.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ПериодыСостояний
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК ОсновныеСредстваМеждународныйУчет
	|		ПО Объекты.Объект = ОсновныеСредстваМеждународныйУчет.ОсновноеСредство
	|			И Объекты.ДатаДоПринятияКУчету < ОсновныеСредстваМеждународныйУчет.Период
	|ГДЕ
	|	ОсновныеСредстваМеждународныйУчет.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|СГРУППИРОВАТЬ ПО
	|	ОсновныеСредстваМеждународныйУчет.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(НаработкиОбъектовЭксплуатации.Период) КАК Период,
	|	НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации КАК ОбъектЭксплуатации,
	|	НаработкиОбъектовЭксплуатации.ПоказательНаработки КАК ПоказательНаработки
	|ПОМЕСТИТЬ ПериодыНаработок
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации КАК НаработкиОбъектовЭксплуатации
	|		ПО Объекты.Объект = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|			И Объекты.ПоказательНаработки = НаработкиОбъектовЭксплуатации.ПоказательНаработки
	|			И Объекты.ДатаСостояния > НаработкиОбъектовЭксплуатации.Период
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|
	|СГРУППИРОВАТЬ ПО
	|	НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации,
	|	НаработкиОбъектовЭксплуатации.ПоказательНаработки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОбъектЭксплуатации,
	|	ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(НаработкиОбъектовЭксплуатации.Период) КАК Период,
	|	НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации КАК ОбъектЭксплуатации,
	|	НаработкиОбъектовЭксплуатации.ПоказательНаработки КАК ПоказательНаработки
	|ПОМЕСТИТЬ ПериодыНаработокДоПринятияКУчету
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации КАК НаработкиОбъектовЭксплуатации
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|			ПО НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации = ПериодыСостояний.ОсновноеСредство
	|				И НаработкиОбъектовЭксплуатации.Период < ПериодыСостояний.Период
	|		ПО Объекты.Объект = НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации
	|			И Объекты.ПоказательНаработки = НаработкиОбъектовЭксплуатации.ПоказательНаработки
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|
	|СГРУППИРОВАТЬ ПО
	|	НаработкиОбъектовЭксплуатации.ОбъектЭксплуатации,
	|	НаработкиОбъектовЭксплуатации.ПоказательНаработки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Период,
	|	ОбъектЭксплуатации,
	|	ПоказательНаработки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК Объект,
	|	Объекты.СрокИспользования КАК РесурсНазначенный,
	|	(РАЗНОСТЬДАТ(Объекты.ДатаСостояния, &ДатаНачисления, ДЕНЬ) + 1) / ДЕНЬ(&МесяцОкончание) КАК РесурсВыработанныйЗаПериод,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ) = НАЧАЛОПЕРИОДА(Объекты.ДатаСостояния, МЕСЯЦ)
	|			ТОГДА РАЗНОСТЬДАТ(ПериодыСостояний.Период, Объекты.ДатаСостояния, ДЕНЬ) / ДЕНЬ(&МесяцОкончание)
	|		ИНАЧЕ (РАЗНОСТЬДАТ(ПериодыСостояний.Период, КОНЕЦПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ), ДЕНЬ)+1) / ДЕНЬ(КОНЕЦПЕРИОДА(ПериодыСостояний.Период, МЕСЯЦ))
	|			+ РАЗНОСТЬДАТ(ДОБАВИТЬКДАТЕ(ПериодыСостояний.Период, МЕСЯЦ, 1), Объекты.ДатаСостояния, МЕСЯЦ)
	|			+ РАЗНОСТЬДАТ(&МесяцНачало, Объекты.ДатаСостояния, ДЕНЬ) / ДЕНЬ(&МесяцОкончание)
	|	КОНЕЦ КАК РесурсВыработанный
	|ПОМЕСТИТЬ РесурсыОбъектов
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|		ПО Объекты.Объект = ПериодыСостояний.ОсновноеСредство
	|ГДЕ
	|	НЕ Объекты.МетодНачисленияАмортизации В (&МетодыНачисленияАмортизацииПоНаработке)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Объекты.Объект,
	|	Объекты.ОбъемНаработки,
	|	ЕСТЬNULL(НаработкиОбъектовСрезПоследних.Значение, 0) - ЕСТЬNULL(НаработкиОбъектов.Значение, 0),
	|	ЕСТЬNULL(НаработкиОбъектов.Значение, 0) - ЕСТЬNULL(НаработкиОбъектовДоПринятияКУчету.Значение, 0)
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыНаработок КАК ПериодыНаработок
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации КАК НаработкиОбъектов
	|			ПО ПериодыНаработок.Период = НаработкиОбъектов.Период
	|				И ПериодыНаработок.ОбъектЭксплуатации = НаработкиОбъектов.ОбъектЭксплуатации
	|				И ПериодыНаработок.ПоказательНаработки = НаработкиОбъектов.ПоказательНаработки
	|		ПО Объекты.Объект = ПериодыНаработок.ОбъектЭксплуатации
	|			И Объекты.ПоказательНаработки = ПериодыНаработок.ПоказательНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&Граница,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						Объекты.Объект,
	|						Объекты.ПоказательНаработки
	|					ИЗ
	|						Объекты КАК Объекты)) КАК НаработкиОбъектовСрезПоследних
	|		ПО Объекты.Объект = НаработкиОбъектовСрезПоследних.ОбъектЭксплуатации
	|			И Объекты.ПоказательНаработки = НаработкиОбъектовСрезПоследних.ПоказательНаработки
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыНаработокДоПринятияКУчету КАК ПериодыНаработокДоПринятияКУчету
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации КАК НаработкиОбъектовДоПринятияКУчету
	|			ПО ПериодыНаработокДоПринятияКУчету.ОбъектЭксплуатации = НаработкиОбъектовДоПринятияКУчету.ОбъектЭксплуатации
	|				И ПериодыНаработокДоПринятияКУчету.ПоказательНаработки = НаработкиОбъектовДоПринятияКУчету.ПоказательНаработки
	|				И ПериодыНаработокДоПринятияКУчету.Период = НаработкиОбъектовДоПринятияКУчету.Период
	|		ПО Объекты.Объект = ПериодыНаработокДоПринятияКУчету.ОбъектЭксплуатации
	|			И Объекты.ПоказательНаработки = ПериодыНаработокДоПринятияКУчету.ПоказательНаработки
	|ГДЕ
	|	Объекты.МетодНачисленияАмортизации В(&МетодыНачисленияАмортизацииПоНаработке)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК ОсновноеСредство,
	|	ТабличнаяЧастьПринятиеКУчету.Ссылка.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	ТабличнаяЧастьПринятиеКУчету.Ссылка.ПервоначальнаяСтоимостьПредставления КАК ПервоначальнаяСтоимостьПредставления
	|ПОМЕСТИТЬ ПервоначальныеСтоимостиОбъектов
	|ИЗ
	|	Объекты КАК Объекты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОсновныеСредстваМеждународныйУчет КАК Состояния
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОСМеждународныйУчет.ОсновныеСредства КАК ТабличнаяЧастьПринятиеКУчету
	|			ПО Состояния.ОсновноеСредство = ТабличнаяЧастьПринятиеКУчету.ОсновноеСредство
	|				И Состояния.Регистратор = ТабличнаяЧастьПринятиеКУчету.Ссылка
	|		ПО Объекты.ДатаСостояния = Состояния.Период
	|			И Объекты.Объект = Состояния.ОсновноеСредство
	|			И (НАЧАЛОПЕРИОДА(Объекты.ДатаСостояния, МЕСЯЦ) = &МесяцНачало)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Объекты.Объект КАК ОбъектАмортизации,
	|	Объекты.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(ПервоначальныеСтоимостиОбъектов.ПервоначальнаяСтоимость, ЕСТЬNULL(ОстаткиСчетУчета.СуммаОстаток, 0)) КАК Стоимость,
	|	ЕСТЬNULL(ПервоначальныеСтоимостиОбъектов.ПервоначальнаяСтоимостьПредставления, ЕСТЬNULL(ОстаткиСчетУчета.СуммаПредставленияОстаток, 0)) КАК СтоимостьПредставления,
	|	ЕСТЬNULL(-ОстаткиСчетАмортизации.СуммаОстаток, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(-ОстаткиСчетАмортизации.СуммаПредставленияОстаток, 0) КАК НакопленнаяАмортизацияПредставления,
	|	Объекты.СчетАмортизации КАК СчетАмортизации,
	|	Объекты.МетодНачисленияАмортизации КАК МетодНачисленияАмортизации,
	|	Объекты.КоэффициентУскорения КАК КоэффициентУскорения,
	|	Объекты.ЛиквидационнаяСтоимость КАК ЛиквидационнаяСтоимость,
	|	Объекты.ЛиквидационнаяСтоимостьПредставления КАК ЛиквидационнаяСтоимостьПредставления,
	|	РесурсыОбъектов.РесурсНазначенный КАК РесурсНазначенный,
	|	РесурсыОбъектов.РесурсВыработанныйЗаПериод КАК РесурсВыработанныйЗаПериод,
	|	РесурсыОбъектов.РесурсВыработанный КАК РесурсВыработанный,
	|	ПериодыСостояний.Период КАК ДатаПринятияКУчету,
	|	Объекты.СтатьяРасходов КАК СтатьяРасходов,
	|	Объекты.АналитикаРасходов КАК АналитикаРасходов
	|ИЗ
	|	Объекты КАК Объекты
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Международный.Остатки(
	|				&Граница,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Объекты.СчетУчета
	|					ИЗ
	|						Объекты КАК Объекты),
	|				,
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Объекты.Организация,
	|						Объекты.Объект
	|					ИЗ
	|						Объекты КАК Объекты)) КАК ОстаткиСчетУчета
	|		ПО Объекты.Объект = ОстаткиСчетУчета.Субконто1
	|			И Объекты.СчетУчета = ОстаткиСчетУчета.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Международный.Остатки(
	|				&Граница,
	|				Счет В
	|					(ВЫБРАТЬ
	|						Объекты.СчетАмортизации
	|					ИЗ
	|						Объекты КАК Объекты),
	|				,
	|				(Организация, Субконто1) В
	|					(ВЫБРАТЬ
	|						Объекты.Организация,
	|						Объекты.Объект
	|					ИЗ
	|						Объекты КАК Объекты)) КАК ОстаткиСчетАмортизации
	|		ПО Объекты.Объект = ОстаткиСчетАмортизации.Субконто1
	|			И Объекты.СчетАмортизации = ОстаткиСчетАмортизации.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РесурсыОбъектов КАК РесурсыОбъектов
	|		ПО Объекты.Объект = РесурсыОбъектов.Объект
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПериодыСостояний КАК ПериодыСостояний
	|		ПО Объекты.Объект = ПериодыСостояний.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСтоимостиОбъектов КАК ПервоначальныеСтоимостиОбъектов
	|		ПО Объекты.Объект = ПервоначальныеСтоимостиОбъектов.ОсновноеСредство
	|ГДЕ
	|	РесурсыОбъектов.РесурсНазначенный > РесурсыОбъектов.РесурсВыработанный";
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_ВременныеТаблицы

Процедура ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втНачисленнаяАмортизацияДокумента";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизацияДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.ОбъектАмортизации КАК ОбъектУчета,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Подразделение КАК Справочник.СтруктураПредприятия) КАК Подразделение,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Сумма КАК ЧИСЛО) КАК Сумма,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаПредставления КАК ЧИСЛО) КАК СуммаПредставления,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Коэффициент КАК ЧИСЛО) КАК Коэффициент,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СчетАмортизации КАК ПланСчетов.Международный) КАК СчетАмортизации,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияДокумента
	|ИЗ
	|	&ТаблицаАмортизации КАК ТаблицаАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыУчета
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втПараметрыОбъектовУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	втОбъектыУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ПорядокУчетаОС.НаправлениеДеятельности, 
	|				ЕСТЬNULL(ПорядокУчетаНМА.НаправлениеДеятельности, 
	|				ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПараметрыОбъектовУчета
	|ИЗ
	|	втОбъектыУчета КАК втОбъектыУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО втОбъектыУчета.ОбъектУчета = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО втОбъектыУчета.ОбъектУчета = НематериальныеАктивы.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						втОбъектыУчета.ОбъектУчета
	|					ИЗ
	|						втОбъектыУчета КАК втОбъектыУчета)) КАК ПорядокУчетаОС
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Период,
	|				Организация = &Организация 
	|				И НематериальныйАктив В
	|					(ВЫБРАТЬ
	|						втОбъектыУчета.ОбъектУчета
	|					ИЗ
	|						втОбъектыУчета КАК втОбъектыУчета)) КАК ПорядокУчетаНМА
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втНачисленнаяАмортизация";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	ВЫРАЗИТЬ(&Организация КАК Справочник.Организации) КАК Организация,
	|	втНачисленнаяАмортизацияДокумента.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизацияДокумента.Сумма КАК Сумма,
	|	втНачисленнаяАмортизацияДокумента.СуммаПредставления КАК СуммаПредставления,
	|	втНачисленнаяАмортизацияДокумента.Коэффициент КАК Коэффициент,
	|	втНачисленнаяАмортизацияДокумента.СчетАмортизации КАК СчетАмортизации,
	|	втНачисленнаяАмортизацияДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизацияДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втНачисленнаяАмортизацияДокумента.ОбъектУчета = втПараметрыОбъектовУчета.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаШаблоныПроводокАмортизации(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втШаблоныПроводокАмортизации";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втШаблоныПроводокАмортизации
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ПравилаУточненияСчетов.СчетУчета, ШаблоныПроводок.СчетДебетаПоУмолчанию) КАК СчетРасходов
	|ПОМЕСТИТЬ втШаблоныПроводокАмортизации
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПланыСчетовМеждународногоУчетаОрганизаций.СрезПоследних(&Граница, Организация = &Организация) КАК ПланыСчетовМеждународногоУчетаОрганизаций
	|		ПО (ИСТИНА)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаОтраженияВМеждународномУчете КАК ПравилаОтраженияВМеждународномУчете
	|		ПО (ПланыСчетовМеждународногоУчетаОрганизаций.НастройкаФормированияПроводок = ПравилаОтраженияВМеждународномУчете.НастройкаФормированияПроводок)
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШаблоныПроводокДляМеждународногоУчета КАК ШаблоныПроводок
	|		ПО (ПравилаОтраженияВМеждународномУчете.ШаблонПроводки = ШаблоныПроводок.Ссылка)
	|			И (ШаблоныПроводок.Операция = ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.АмортизацияВнеоборотныхАктивов))
	|			И (НЕ ШаблоныПроводок.ПометкаУдаления)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПравилаУточненияСчетовВМеждународномУчете КАК ПравилаУточненияСчетов
	|		ПО (ШаблоныПроводок.Ссылка = ПравилаУточненияСчетов.ШаблонПроводки)
	|			И ТаблицаАмортизации.СтатьяРасходов.ГруппаФинансовогоУчета = ПравилаУточненияСчетов.ГруппаФинансовогоУчета
	|ГДЕ
	|	ЕСТЬNULL(ПравилаУточненияСчетов.СчетУчета, ЕСТЬNULL(ШаблоныПроводок.СчетДебетаПоУмолчанию, ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка))) <> ЗНАЧЕНИЕ(ПланСчетов.Международный.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивыДанные";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Организация КАК Организация,
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеАктивыПассивыОстатки.Статья КАК Статья,
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК Аналитика,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&Граница,
	|			Организация = &Организация
	|				И Статья В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|				И (Аналитика, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток > 0";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика КАК Аналитика,
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивы
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
	|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&Граница,
	|			СтатьяРасходов.ВариантРаспределенияРасходовУпр = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И Организация = &Организация
	|				И (АналитикаРасходов, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеРасходыОстатки
	|ГДЕ
	|	ПрочиеРасходыОстатки.СуммаОстаток > 0";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаБезНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходы
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса)
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеАктивы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеАктивы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеРасходы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК Сумма,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеРасходы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности), ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы), ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы), ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))),
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовУпр В (ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров), ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_Движения

Функция РазделительЗапросовВОбъединении()
	
	Возврат Символы.ПС + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС + Символы.ПС;
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втАмортизацияУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаСНДС,
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаБезНДС,
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	"""" КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции


Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(31,2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ИспользоватьУчетПрочихАктивовПассивов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	НЕОПРЕДЕЛЕНО КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции


Функция ПрочиеАктивыПассивы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеАктивыПассивы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	0 КАК Сумма
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втАмортизацияУпрПрочиеАктивы.Статья КАК Статья,
	|	втАмортизацияУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Сумма КАК Сумма
	|ИЗ
	|	втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов";
	
КонецФункции

Функция ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &СписаниеОстаточнойСтоимости";
	
КонецФункции

#КонецОбласти

#КонецОбласти