
#Область СлужебныеПроцедурыИФункции

#Область СоздатьНовыйДокументОтпуск

Процедура СоздатьНовыйДокументОтпуск(Форма) Экспорт
	
	Если ЗначениеЗаполнено(Форма.Объект.ДанныеПоВидамОтпусков) Тогда
		ОткрытьФорму("Документ.Отпуск.Форма.ФормаДокумента", ПараметрыЗаполненияДокументаОтпускПоВидамОтпусков(Форма), Форма);
	Иначе
		Если Форма.Объект.ПредоставитьКомпенсациюОтпуска Тогда
			НачатьСозданиеДокументаОтпуск(Форма);
		Иначе
			ОткрытьФорму("Документ.Отпуск.Форма.ФормаДокумента", ПараметрыЗаполненияДокументаОтпуск(Форма), Форма);
		КонецЕсли;
	КонецЕсли;

КонецПроцедуры

Процедура НачатьСозданиеДокументаОтпуск(Форма)
	
	ВидыОтпусков = ЗаявкиСотрудниковВызовСервераРасширенный.ВидыКомпенсируемыхОтпусков();
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВидаОтпускаЗавершение", ЭтотОбъект, Форма);
	ПараметрыОткрытия = Новый Структура("ВидыОтпусков,КомпенсацияОтпуска", ВидыОтпусков, Форма.Объект.ПредоставитьКомпенсациюОтпуска);
	
	ОткрытьФорму("Документ.ЗаявкаКомпенсацияОтпускаКабинетСотрудника.Форма.ВыбратьВидОтпуска", ПараметрыОткрытия, Форма,,,,
				 ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);
				 
КонецПроцедуры

Процедура ВыборВидаОтпускаЗавершение(ВидОтпуска, Форма) Экспорт
	
	Если ВидОтпуска = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ОткрытьФорму("Документ.Отпуск.Форма.ФормаДокумента", ПараметрыЗаполненияДокументаОтпуск(Форма, ВидОтпуска), Форма);
	
КонецПроцедуры

Функция ПараметрыЗаполненияДокументаОтпуск(Форма, ВидОтпуска = Неопределено)
	
	Объект = Форма.Объект;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Ссылка", 		Неопределено);
	ДанныеЗаполнения.Вставить("Действие", 		"Заполнить");
	ДанныеЗаполнения.Вставить("Сотрудник", 		Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("Организация", 	Объект.Организация);
	ДанныеЗаполнения.Вставить("ИспользоватьОбщийПериодОтпускаВДокументах", Ложь);
	
	ДанныеЗаявки = Новый Структура;
	ДанныеЗаявки.Вставить("Сотрудник", 									Объект.Сотрудник);
	ДанныеЗаявки.Вставить("ДатаНачала", 								Объект.ДатаНачала);
	ДанныеЗаявки.Вставить("ДатаОкончания", 								Объект.ДатаОкончания);
	ДанныеЗаявки.Вставить("ПредоставитьМатериальнуюПомощьПриОтпуске", 	Объект.ПредоставитьМатериальнуюПомощьПриОтпуске);
	ДанныеЗаявки.Вставить("ПредоставитьЕдиновременнуюВыплатуКОтпуску", 	Объект.ПредоставитьЕдиновременнуюВыплатуКОтпуску);
	ДанныеЗаявки.Вставить("ПредоставитьКомпенсациюОтпуска", 			Объект.ПредоставитьКомпенсациюОтпуска);
	ДанныеЗаявки.Вставить("КоличествоДнейКомпенсацииОтпуска", 			Объект.КоличествоДнейКомпенсацииОтпуска);
	ДанныеЗаявки.Вставить("ВидОтпускаКомпенсации", 						ВидОтпуска);
	
	ЗаявкиСотрудниковВызовСервераРасширенный.ЗаполнитьДанныеЗаполненияДокументаОтпуск(ДанныеЗаполнения, ДанныеЗаявки);
	
	ПараметрыЗаполнения = Новый Структура("Основание,ОсновнойОтпуск", ДанныеЗаполнения, Истина);
	Если ДанныеЗаполнения.ИспользоватьОбщийПериодОтпускаВДокументах Тогда
		ПараметрыЗаполнения.Вставить("НачалоОтпуска", 		Объект.ДатаНачала);
		ПараметрыЗаполнения.Вставить("ОкончаниеОтпуска", 	Объект.ДатаОкончания);
	КонецЕсли;

	Возврат ПараметрыЗаполнения;
	
КонецФункции

Функция ПараметрыЗаполненияДокументаОтпускПоВидамОтпусков(Форма)

	Объект = Форма.Объект;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Ссылка", 		Неопределено);
	ДанныеЗаполнения.Вставить("Действие", 		"Заполнить");
	ДанныеЗаполнения.Вставить("Сотрудник", 		Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("Организация", 	Объект.Организация);
	ДанныеЗаполнения.Вставить("ИспользоватьОбщийПериодОтпускаВДокументах", Ложь);
	ДанныеЗаполнения.Вставить("АвторасчетПериодаПредоставления", Истина);
	
	ДанныеЗаявки = Новый Структура;
	ДанныеЗаявки.Вставить("Сотрудник", 									Объект.Сотрудник);
	ДанныеЗаявки.Вставить("ДатаНачала", 								Объект.ДатаНачала);
	ДанныеЗаявки.Вставить("ДатаОкончания", 								Объект.ДатаОкончания);
	ДанныеЗаявки.Вставить("ПредоставитьМатериальнуюПомощьПриОтпуске", 	Объект.ПредоставитьМатериальнуюПомощьПриОтпуске);
	ДанныеЗаявки.Вставить("ПредоставитьЕдиновременнуюВыплатуКОтпуску", 	Объект.ПредоставитьЕдиновременнуюВыплатуКОтпуску);
	
	СписокСвойств = "ВидОтпуска,ДатаНачала,ДатаОкончания,ДнейОтпуска,ПредоставитьКомпенсациюОтпуска,КоличествоДнейКомпенсацииОтпуска";
	ДанныеПоВидамОтпусков = Новый Массив;
	Для каждого СтрокаТЧ Из Форма.Объект.ДанныеПоВидамОтпусков Цикл
		ДанныеПоВидуОтпуска = Новый Структура(СписокСвойств);
		ЗаполнитьЗначенияСвойств(ДанныеПоВидуОтпуска, СтрокаТЧ);
		ДанныеПоВидамОтпусков.Добавить(Новый ФиксированнаяСтруктура(ДанныеПоВидуОтпуска));
	КонецЦикла;
	ДанныеЗаявки.Вставить("ДанныеПоВидамОтпусков", ДанныеПоВидамОтпусков);
	
	ЗаявкиСотрудниковВызовСервераРасширенный.ЗаполнитьДанныеЗаполненияДокументаОтпускПоВидамОтпусков(ДанныеЗаполнения, ДанныеЗаявки);
	
	ЗначенияЗаполнения = Новый Структура("ДокументЗаполнения");
	ПараметрыЗаполнения = Новый Структура("Основание,ЗначенияЗаполнения", ДанныеЗаполнения, ЗначенияЗаполнения);

	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияДокументаОтпускБезОплаты(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Ссылка", 		Неопределено);
	ДанныеЗаполнения.Вставить("Действие", 		"Заполнить");
	ДанныеЗаполнения.Вставить("Сотрудник", 		Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("Организация", 	Объект.Организация);
	
	ДанныеЗаявки = Новый Структура;
	ДанныеЗаявки.Вставить("ДатаНачала", 	Объект.ДатаНачала);
	ДанныеЗаявки.Вставить("ДатаОкончания", 	Объект.ДатаОкончания);
	
	ЗаявкиСотрудниковВызовСервераРасширенный.ЗаполнитьДанныеЗаполненияДокументаОтпускБезОплаты(ДанныеЗаполнения, ДанныеЗаявки);
	
	ПараметрыЗаполнения = Новый Структура("Основание");
	ПараметрыЗаполнения.Основание = ДанныеЗаполнения;

	Возврат ПараметрыЗаполнения;

КонецФункции

#КонецОбласти

#Область СоздатьНовыйДокументПоОтсутствию

Процедура СоздатьНовыйДокументПоОтсутствию(Форма) Экспорт
	
	Объект = Форма.Объект;
	
	Если Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь") Тогда
		НачатьВыборВидаДокументаОтсутствиеБолезнь(Форма);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам") Тогда
		ОткрытьФорму("Документ.БольничныйЛист.ФормаОбъекта", ПараметрыЗаполненияБольничныйЛист(Форма, ПредопределенноеЗначение("Перечисление.ПричиныНетрудоспособности.ПоБеременностиИРодам")), Форма);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком") Тогда
		ОткрытьФорму("Документ.ОтпускПоУходуЗаРебенком.ФормаОбъекта", ПараметрыЗаполненияОтпускПоУходу(Форма), Форма);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул") Тогда
		ОткрытьФорму("Документ.Отгул.ФормаОбъекта", ПараметрыЗаполненияОтгул(Форма), Форма);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка") Тогда
		ОткрытьФорму("Документ.Командировка.ФормаОбъекта", ПараметрыЗаполненияКомандировка(Форма), Форма);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами") Тогда
		ОткрытьФорму("Документ.ОплатаДнейУходаЗаДетьмиИнвалидами.ФормаОбъекта", ПараметрыЗаполненияОплатаДнейУхода(Форма), Форма);
	КонецЕсли;

КонецПроцедуры

Процедура НачатьВыборВидаДокументаОтсутствиеБолезнь(Форма)
	
	ЗначенияДляВыбора = ЗаявкиСотрудниковВызовСервераРасширенный.ЗначенияДляВыбораВидаДокументаОтсутствиеБолезнь();
	ТекстЗаголовка = НСтр("ru = 'Выбор типа данных';
							|en = 'Выбор типа данных'");
	
	ПараметрыОткрытия = Новый Структура("Заголовок,ЗначенияДляВыбора");
	ПараметрыОткрытия.Заголовок 		= ТекстЗаголовка;
	ПараметрыОткрытия.ЗначенияДляВыбора = ЗначенияДляВыбора;
	
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборВидаДокументаОтсутствиеБолезньЗавершение", ЭтотОбъект, Форма);
	
	ОткрытьФорму("ОбщаяФорма.ВыборЗначенияИзСпискаБЗК", ПараметрыОткрытия, Форма,,,,
		ОписаниеОповещения, РежимОткрытияОкнаФормы.БлокироватьОкноВладельца);

КонецПроцедуры
	
Процедура ВыборВидаДокументаОтсутствиеБолезньЗавершение(Результат, Форма) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если Результат = "Больничный" Тогда
		ОткрытьФорму("Документ.БольничныйЛист.ФормаОбъекта", ПараметрыЗаполненияБольничныйЛист(Форма), Форма);
	Иначе
		ОткрытьФорму("Документ.ПрогулНеявка.ФормаОбъекта", ПараметрыЗаполненияПрогулНеявка(Форма), Форма);
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЗаполненияПрогулНеявка(Форма)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Действие", 		"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("ДатаНачала", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 	Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("Организация", 	Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 		Форма.Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("СостояниеСотрудника", ПредопределенноеЗначение("Перечисление.СостоянияСотрудника.Болезнь"));
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияБольничныйЛист(Форма, ПричинаНетрудоспособности = Неопределено)
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Действие", 			"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("ДатаНачала", 		Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаНачалаОплаты", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 		Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("Организация", 		Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 			Форма.Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("ПричинаНетрудоспособности", ПричинаНетрудоспособности);
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияОтпускПоУходу(Форма)

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Действие", 		"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("ДатаНачала", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 	Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("Организация", 	Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 		Форма.Объект.ФизическоеЛицо);
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияОтгул(Форма)

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Действие", 		"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("ДатаНачала", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 	Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("Организация", 	Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 		Форма.Объект.Сотрудник);
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияКомандировка(Форма)

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("ДатаНачала", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 	Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("Организация", 	Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 		Форма.Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("ЗаполнитьПоПараметрамЗаполнения", Истина);
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

Функция ПараметрыЗаполненияОплатаДнейУхода(Форма)
	
	ДниУхода = Новый Массив;
	ДеньУхода = Форма.Объект.ДатаНачала; 
	Пока ДеньУхода <= Форма.Объект.ДатаОкончания Цикл
		ДниУхода.Добавить(Новый Структура("Дата", ДеньУхода));
		ДеньУхода = ДеньУхода + 86400;
	КонецЦикла;

	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Действие", 			"ЗаполнитьПоПараметрамЗаполнения");
	ДанныеЗаполнения.Вставить("ДатаНачала", 		Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаНачалаСобытия", 	Форма.Объект.ДатаНачала);
	ДанныеЗаполнения.Вставить("ДатаОкончания", 		Форма.Объект.ДатаОкончания);
	ДанныеЗаполнения.Вставить("ДниУхода", 			ДниУхода);
	ДанныеЗаполнения.Вставить("Организация", 		Форма.Объект.Организация);
	ДанныеЗаполнения.Вставить("Сотрудник", 			Форма.Объект.Сотрудник);
	ДанныеЗаполнения.Вставить("ФизическоеЛицо", 	Форма.Объект.ФизическоеЛицо);
	
	ПараметрыЗаполнения = Новый Структура("Основание", ДанныеЗаполнения);
	
	Возврат ПараметрыЗаполнения;

КонецФункции

#КонецОбласти 

Функция ЗначенияДляВыбораДокументаПоОтсутствию(Форма) Экспорт
	
	Объект = Форма.Объект;
	Отбор = Новый Структура;
	
	Если Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Болезнь") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.Сотрудник);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоБеременностиИРодам") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.Сотрудник);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ОтпускПоУходуЗаРебенком") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.ФизическоеЛицо);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Отгул") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.Сотрудник);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.Командировка") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.Сотрудник);
	ИначеЕсли Объект.ПричинаОтсутствия = ПредопределенноеЗначение("Перечисление.ПричиныОтсутствийЗаявокКабинетСотрудника.ДниУходаЗаДетьмиИнвалидами") Тогда
		Отбор.Вставить("Организация", Объект.Организация);
		Отбор.Вставить("Сотрудник", Объект.Сотрудник);
	КонецЕсли;
	
	ЗначенияДляВыбора = ЗаявкиСотрудниковВызовСервераРасширенный.ЗначенияДляВыбораДокументаПоОтсутствию(Объект.ПричинаОтсутствия);
	
	Возврат Новый Структура("Отбор,ЗначенияДляВыбораВидаДокумента", Отбор, ЗначенияДляВыбора)

КонецФункции

#КонецОбласти



