
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры


// Дополняет параметры выбора статей и аналитик в документе.
//
// Параметры:
// 	ПараметрыВыбора - См. ДоходыИРасходыСервер.ПараметрыВыбораСтатьиИАналитики
// 	ХозяйственнаяОперация - ПеречислениеСсылка.ХозяйственныеОперации - Хозяйственная операция документа.
//
Процедура ДополнитьПараметрыВыбораСтатейИАналитик(ПараметрыВыбора, ХозяйственнаяОперация) Экспорт
	
	//++ Локализация
	ПараметрыВыбора.ВыборСтатьиДоходов = Ложь;
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация
	
	ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ);
	УчетПрослеживаемыхТоваровЛокализация.ПроверитьДанныеПрослеживаемостиНомеровГТД(Объект, Объект.Расходы, Объект.Дата, "Расходы");
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация
	
	ОчиститьКоличествоПоРНПТВТаблицеРасходы(Объект);
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	//++ Локализация
	Документы.ЗаписьКнигиПокупок.ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании);
	//-- Локализация
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	
	// Авансовый отчет
	УсловиеВидимости = Новый Структура;
	УсловиеВидимости.Вставить("Реквизит", Метаданные.Документы.ПриобретениеУслугПрочихАктивов.Реквизиты.ХозяйственнаяОперация.Имя);
	УсловиеВидимости.Вставить("ВидСравнения", ВидСравнения.Равно);
	УсловиеВидимости.Вставить("Значение", Перечисления.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо);
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Документ.АвансовыйОтчет";
	КомандаПечати.Идентификатор = "АвансовыйОтчет3";
	КомандаПечати.Представление = НСтр("ru = 'Авансовый отчет';
										|en = 'Expense report'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.СписокФорм = "ФормаДокумента";
	КомандаПечати.УсловияВидимости.Добавить(УсловиеВидимости);
	
	//++ НЕ УТ
	КомандаПечати.Обработчик = "РеглУчетКлиент.ПечатьСПроверкойОтраженияВРеглУчете";
	//-- НЕ УТ
	
	//++ НЕ УТ
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС14";
	КомандаПечати.Идентификатор = "ОС14";
	КомандаПечати.Представление = НСтр("ru = 'Акт о приеме оборудования (ОС-14)';
										|en = 'Equipment acceptance certificate (FA-14) '");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	//-- НЕ УТ

	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "АвансовыйОтчет") Тогда
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"АвансовыйОтчет",
			НСтр("ru = 'Авансовый отчет';
				|en = 'Expense report'"),
			АвансовыйОтчетЛокализация.СформироватьПечатнуюФормуАвансовогоОтчетаСтараяВерсия(МассивОбъектов, ОбъектыПечати, ПараметрыПечати));
	КонецЕсли;
	//-- Локализация
КонецПроцедуры


//++ Локализация

//++ НЕ УТ

// Функция получает данные для формирования печатной формы ОС-14
//
// Параметры:
//   ПараметрыПечати - Структура - дополнительные настройки печати.
//   МассивОбъектов - Массив - ссылки на объекты, которые нужно распечатать.
//
// Возвращаемое значение:
//   Структура:
//     * РезультатПоШапке - РезультатЗапроса - данные по шапке документа.
//     * РезультатПоТабличнойЧасти - РезультатЗапроса - данные по табличной части документа.
//
Функция ПолучитьДанныеДляПечатнойФормыОС14(ПараметрыПечати, МассивОбъектов) Экспорт
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДокументов.Ссылка КАК Ссылка,
	|	ДанныеДокументов.Валюта КАК Валюта
	|
	|ПОМЕСТИТЬ ТаблицаДанныхДокументов
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ДанныеДокументов
	|
	|ГДЕ
	|	ДанныеДокументов.Ссылка В (&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка;";
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	
	Запрос.Выполнить();
	
	ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеУслугПрочихАктивов.Ссылка КАК Ссылка,
	|	ПриобретениеУслугПрочихАктивов.Номер КАК Номер,
	|	ПриобретениеУслугПрочихАктивов.Дата КАК Дата,
	|	ПриобретениеУслугПрочихАктивов.Дата КАК ДатаДокумента,
	|	ПриобретениеУслугПрочихАктивов.ДатаВходящегоДокумента КАК ДатаДокументаСопровождения,
	|	ПриобретениеУслугПрочихАктивов.НомерВходящегоДокумента КАК НомерДокументаСопровождения,
	|	ПриобретениеУслугПрочихАктивов.Контрагент КАК Поставщик,
	|	ПриобретениеУслугПрочихАктивов.Организация КАК Организация,
	|	ПриобретениеУслугПрочихАктивов.БанковскийСчетОрганизации КАК БанковскийСчетОрганизации,
	|	ПриобретениеУслугПрочихАктивов.БанковскийСчетКонтрагента КАК БанковскийСчетКонтрагента,
	|	ПриобретениеУслугПрочихАктивов.Организация.Префикс КАК Префикс,
	|	ПриобретениеУслугПрочихАктивов.Подразделение.Наименование КАК ПредставлениеПодразделения,
	|	ПриобретениеУслугПрочихАктивов.Валюта КАК Валюта,
	|	ПриобретениеУслугПрочихАктивов.Руководитель.ФизическоеЛицо КАК Руководитель,
	|	ПриобретениеУслугПрочихАктивов.ГлавныйБухгалтер.ФизическоеЛицо КАК ГлавныйБухгалтер,
	|	ПриобретениеУслугПрочихАктивов.Руководитель.Должность КАК РуководительДолжность
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ПриобретениеУслугПрочихАктивов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ПриобретениеУслугПрочихАктивов.Ссылка = ДанныеДокументов.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаТоваров.Ссылка КАК Ссылка,
	|	ЕСТЬNULL(ТаблицаТоваров.ОС.НаименованиеПолное, """") КАК ОборудованиеНаименование,
	|	"""" КАК ХарактеристикаНаименование,
	|	1 КАК Количество,
	|	ТаблицаТоваров.Сумма КАК СтоимостьЗаЕдиницу,
	|	ТаблицаТоваров.Сумма КАК СтоимостьВсего
	|ИЗ
	|	ТаблицаТоваров КАК ТаблицаТоваров
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка
	|ИТОГИ ПО
	|	Ссылка";
	
	ПакетРезультатов = Запрос.ВыполнитьПакет();
	
	Возврат Новый Структура(
		"РезультатПоШапке, РезультатПоТабличнойЧасти",
		ПакетРезультатов[0],
		ПакетРезультатов[1]);
	
КонецФункции

// Формирует временную таблицу, содержащую табличную часть по таблице данных документов.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц, содержащий таблицу ТаблицаДанныхДокументов с полями:
//		Ссылка,
//		Валюта.
//
//	ПересчитыватьВВалютуРегл - Булево - Признак необходимости пересчета сумм табличной части в валюте регламентированного учета.
//
Процедура ПоместитьВременнуюТаблицуТоваров(МенеджерВременныхТаблиц, ПересчитыватьВВалютуРегл = Истина) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета",     Константы.ВалютаУправленческогоУчета.Получить());
	Запрос.УстановитьПараметр("ПересчитыватьВВалютуРегл", ПересчитыватьВВалютуРегл);
	
	Если ПересчитыватьВВалютуРегл Тогда
		Если НЕ ПолучитьФункциональнуюОпцию("НоваяАрхитектураВзаиморасчетов") Тогда
		
			Запрос.Текст = 
			"ВЫБРАТЬ РАЗЛИЧНЫЕ
			|	РасчетыСПоставщиками.АналитикаУчетаПоПартнерам КАК АналитикаУчетаПоПартнерам
			|ИЗ
			|	РегистрНакопления.РасчетыСПоставщиками КАК РасчетыСПоставщиками
			|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
			|		ПО РасчетыСПоставщиками.Регистратор = ДанныеДокументов.Ссылка
			|ГДЕ
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	И РасчетыСПоставщиками.Активность";
			ТаблицаАналитик = Запрос.Выполнить().Выгрузить();
			МассивАналитикУчетаПоПартнерам = ТаблицаАналитик.ВыгрузитьКолонку("АналитикаУчетаПоПартнерам");
			
			Если МассивАналитикУчетаПоПартнерам.Количество() > 0 Тогда
				КонецРасчета = КонецМесяца(ВзаиморасчетыСервер.ПолучитьМаксимальнуюДатуВКоллекцииДокументов(МенеджерВременныхТаблиц)) + 1;
				АналитикиРасчета = РаспределениеВзаиморасчетовВызовСервера.АналитикиРасчета();
				АналитикиРасчета.АналитикиУчетаПоПартнерам = МассивАналитикУчетаПоПартнерам;
				Попытка
					РаспределениеВзаиморасчетовВызовСервера.РаспределитьВсеРасчетыСПоставщиками(КонецРасчета, МассивАналитикУчетаПоПартнерам);
				Исключение
					ТекстСообщения = НСтр("ru = 'Печатная форма сформирована по неактуальным данным.
					|Необходимо актуализировать взаиморасчеты вручную и переформировать печатную форму.';
					|en = 'Print form is generated according to irrelevant data. 
					|Update AR/AP accounting manually, and then create the print form again.'");
					ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения);
				КонецПопытки;
			КонецЕсли;
		Иначе
			
			Запрос.Текст = 
			"ВЫБРАТЬ
			|	ДанныеДокументов.Ссылка КАК Ссылка
			|ИЗ
			|	ТаблицаДанныхДокументов КАК ДанныеДокументов
			|ГДЕ 
			|	ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
			|	ИЛИ ДанныеДокументов.Валюта <> &ВалютаУправленческогоУчета";
			МассивДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");
			РегистрыСведений.СуммыДокументовВВалютахУчета.РассчитатьСуммыДокументовВВалютахУчета(МассивДокументов);
			
		КонецЕсли;
	КонецЕсли;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка КАК Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов КАК ОС,
	|	СУММА(ТаблицаДокумента.СуммаСНДС - ТаблицаДокумента.СуммаНДС) КАК Сумма
	|ПОМЕСТИТЬ ТаблицаТоваров
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|ГДЕ
	|	ТаблицаДокумента.СтатьяРасходов.РасходыНаОбъектыЭксплуатации
	|	И (ДанныеДокументов.Валюта = ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
	|			ИЛИ НЕ &ПересчитыватьВВалютуРегл)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов,
	|	СУММА(ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, 0))
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаДанныхДокументов КАК ДанныеДокументов
	|		ПО ТаблицаДокумента.Ссылка = ДанныеДокументов.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО ТаблицаДокумента.Ссылка = СуммыДокументовВВалютахУчета.Регистратор
	|			И ТаблицаДокумента.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|ГДЕ
	|	ТаблицаДокумента.СтатьяРасходов.РасходыНаОбъектыЭксплуатации
	|	И ДанныеДокументов.Валюта <> ДанныеДокументов.Ссылка.Организация.ВалютаРегламентированногоУчета
	|	И &ПересчитыватьВВалютуРегл
	|	И СуммыДокументовВВалютахУчета.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаДокумента.Ссылка,
	|	ТаблицаДокумента.АналитикаРасходов";
	
	Запрос.Выполнить();
	
КонецПроцедуры
//-- НЕ УТ

//-- Локализация
#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстыОтражения = Новый Массив;
	
	//++ Локализация
	
	// Общие фрагменты проводок по включению в стоимость НДС
	ТекстыОтражения.Добавить(РеглУчетВыборкиСерверПовтИсп.ТекстВключениеНДСпоПриобретеннымЦенностям());
	
#Область ТекстПоступлениеУслуг    // (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление услуг (Дт <25, 26, 44, 20, 23, 08.3, 20> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|			ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	|		ТОГДА Суммы.СуммаПриведеннаяРегл
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|		ТОГДА Суммы.СуммаПриведеннаяРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|			ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ)
	|		ТОГДА Суммы.СуммаПриведеннаяУпр
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|		ТОГДА Суммы.СуммаПриведеннаяУпр + Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР
	|		КОГДА СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		ТОГДА ЕСТЬNULL(ОбъектыСтроительства.СпособСтроительства, ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный))
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ИСТИНА
	|		ТОГДА (ВЫБОР
	|					КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|						ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	|					ТОГДА Суммы.СуммаБезНДСРегл
	|					КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|					ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|				КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаНУДт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ЛОЖЬ
	|		ТОГДА (ВЫБОР
	|					КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|						ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|						ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	|					ТОГДА Суммы.СуммаПриведеннаяРегл
	|					КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|					ТОГДА Суммы.СуммаПриведеннаяРегл + Суммы.СуммаНДСРегл
	|				КОНЕЦ)
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаПРДт,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(СтатьиРасходов.ПринятиеКНалоговомуУчету, ИСТИНА) = ИСТИНА
	|		ТОГДА Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаВРДт,
	|	
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Расчеты.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Расчеты.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|		ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	|	ТОГДА
	|		Суммы.СуммаПриведенная
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная + Суммы.СуммаНДС
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	ВЫБОР
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|			ИЛИ СтатьиРасходов.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|			ИЛИ ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	|		ТОГДА Суммы.СуммаБезНДСРегл
	|		КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|		ТОГДА Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл КАК СуммаВРКт,
	|	""Поступление услуг"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиРасходов.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		Справочник.ОбъектыСтроительства КАК ОбъектыСтроительства
	|	ПО 
	|		ОбъектыСтроительства.Ссылка = Строки.АналитикаРасходов
	|		И СтатьиРасходов.Ссылка ЕСТЬ НЕ NULL
	|		И СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|		И ОбъектыСтроительства.СпособСтроительства <> ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.ПустаяСсылка)
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	)
	|	И СтатьиРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область ТекстПоступлениеПрочее   // (Дт <ХХ.ХХ> :: Кт <60.1, 76> )
	
	// Поддержка статей расходов с устаревшим направлением распределения "НаПрочиеАктивы".
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление на прочие активы (Дт <ХХ.ХХ> :: Кт <60.1, 76, 71> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК Сумма,
	|	(ВЫБОР КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяУпр
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяУпр + Суммы.СуммаНДСУпр
	|	КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаПриведенная
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная + Суммы.СуммаНДС
	|	КОНЕЦ) КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл КАК СуммаВРДт,
	|
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Расчеты.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Расчеты.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаПриведенная
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная + Суммы.СуммаНДС
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|		ИЛИ НЕ СтатьиНДСРаспределяется.Ссылка ЕСТЬ NULL
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл КАК СуммаВРКт,
	|	""Поступление на прочие активы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиПрочихОпераций.Ссылка
	|		И СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНДСРаспределяется
	|	ПО
	|		Строки.СтатьяРасходов = СтатьиНДСРаспределяется.Ссылка
	|		И СтатьиНДСРаспределяется.ВариантРаздельногоУчетаНДС = ЗНАЧЕНИЕ(Перечисление.ВариантыРаздельногоУчетаНДС.Распределение)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо)
	|	)
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти
	
#Область ТекстПоступлениеПрочееНаСтатьиПрочихАктивов   // (Дт <ХХ.ХХ> :: Кт <60.1, 76> )
	
	ТекстЗапроса = "
	|ВЫБРАТЬ // Поступление на прочие активы (Дт <ХХ.ХХ> :: Кт <60.1, 76> )
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	Строки.НомерСтроки КАК ИдентификаторСтроки,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК Сумма,
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяУпр
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведеннаяУпр + Суммы.СуммаНДСУпр
	|	КОНЕЦ) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеАктивыПассивы) КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	Строки.НастройкаСчетовУчета.СчетУчета КАК СчетДт,
	|
	|	Строки.НастройкаСчетовУчета.Субконто1 КАК СубконтоДт1,
	|	Строки.НастройкаСчетовУчета.Субконто2 КАК СубконтоДт2,
	|	Строки.НастройкаСчетовУчета.Субконто3 КАК СубконтоДт3,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная + Суммы.СуммаНДС
	|	КОНЕЦ) КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|		ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД))
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл КАК СуммаВРДт,
	|
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КОНЕЦ) КАК ВидСчетаКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета) КОНЕЦ) КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	(ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|			(ВЫБОР КОГДА Суммы.СуммаБезНДСРегл = Суммы.СуммаБезНДС ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|				ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал) КОНЕЦ)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО КОНЕЦ) КАК СчетКт,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА Операция.ПодотчетноеЛицо
	|		ИНАЧЕ Расчеты.Контрагент КОНЕЦ) КАК СубконтоКт1,
	|	(ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ Расчеты.Договор КОНЕЦ) КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаПриведенная + Суммы.СуммаНДС
	|	КОНЕЦ) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	(ВЫБОР КОГДА ЕСТЬNULL(УчетнаяПолитикаОрганизаций.НДСПредъявленныйПриВключенииВСтоимость, ЛОЖЬ) 
	| 		ИЛИ Операция.ЗакупкаПодДеятельность В (&ТипыОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл
	|	КОГДА Операция.ЗакупкаПодДеятельность В (&ТипыНеОблагаемыеНДС)
	|	ТОГДА
	|		Суммы.СуммаБезНДСРегл + Суммы.СуммаНДСРегл
	|	КОНЕЦ) КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	Суммы.СуммаПриведеннаяРегл - Суммы.СуммаБезНДСРегл КАК СуммаВРКт,
	|	""Поступление на прочие активы"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка 
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		СуммыДокументовВВалютахУчета КАК Суммы
	|	ПО
	|		Суммы.Регистратор = Строки.Ссылка
	|		И Суммы.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|		И Суммы.СуммаБезНДСРегл <> 0
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО
	|		Расчеты.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизаций
	|	ПО
	|		Операция.Ссылка = УчетнаяПолитикаОрганизаций.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизаций.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизаций.ДатаОтражения
	|
	|ГДЕ
	|	Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	И ТИПЗНАЧЕНИЯ(Строки.СтатьяРасходов) = ТИП(ПланВидовХарактеристик.СтатьиАктивовПассивов) 
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	
#КонецОбласти

#Область ТекстПоступлениеУслугНДС // (Дт <19.ХХ> :: Кт <60.ХХ, 76.ХХ, 71>)
	ТекстЗапроса = "
	|ВЫБРАТЬ // НДС при поступлении по рег. НДСПредъявленный (Дт <19.ХХ> :: Кт <60.ХХ, 76.ХХ, 71>) @НДСПредъявленный
	|
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	СУММА(НДСПредъявленный.НДС) КАК Сумма,
	|	СУММА(НДСПредъявленный.НДСУпр) КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаДт,
	|	НДСПредъявленный.ВидДеятельностиНДС                                    КАК АналитикаУчетаДт,
	|	НДСПредъявленный.ВидЦенности                                           КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка)                               КАК ВалютаДт,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)                 КАК ПодразделениеДт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, НДСПредъявленный.НаправлениеДеятельности) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|
	|	Операция.Контрагент КАК СубконтоДт1,
	|	Операция.Ссылка КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	Строки.Количество КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками)
	|	КОНЕЦ КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		ЕСТЬNULL(Расчеты.ГруппаФинансовогоУчета, Операция.ГруппаФинансовогоУчета)
	|	КОНЕЦ КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Операция.ВалютаВзаиморасчетов КАК ВалютаКт,
	|	ЕСТЬNULL(Расчеты.Подразделение, Операция.Подразделение) КАК ПодразделениеКт,
	|	ВЫБОР
	|		КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЕСТЬNULL(Расчеты.НаправлениеДеятельности, Операция.НаправлениеДеятельности)
	|	КОНЕЦ КАК НаправлениеДеятельностиКт,
	|
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		ВЫБОР КОГДА Операция.ВалютаВзаиморасчетов = &ВалютаРеглУчета ТОГДА
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицами)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыСПодотчетнымиЛицамиВал)
	|		КОНЕЦ
	|	ИНАЧЕ
	|		НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК СчетКт,
	|
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		Операция.ПодотчетноеЛицо
	|	ИНАЧЕ
	|		Расчеты.Контрагент
	|	КОНЕЦ КАК СубконтоКт1,
	|	ВЫБОР КОГДА Операция.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаЧерезПодотчетноеЛицо) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Расчеты.Договор
	|	КОНЕЦ КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	СУММА(Строки.СуммаНДСВзаиморасчетов) КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""НДС при поступлении"" КАК Содержание
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК Строки
	|	ПО
	|		Строки.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.НДСПредъявленный КАК НДСПредъявленный
	|	ПО
	|		НДСПредъявленный.Регистратор = Строки.Ссылка
	|		И НДСПредъявленный.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		И НДСПредъявленный.ИдентификаторСтроки = Строки.ИдентификаторСтроки
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ПланВидовХарактеристик.СтатьиРасходов КАК Статьи
	|	ПО
	|		Строки.СтатьяРасходов = Статьи.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		ВТРасчетыСПоставщиками КАК Расчеты
	|	ПО 
	|	Расчеты.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО ДокументыКОтражению.Ссылка = ВводСобственныхСредств.Ссылка
	|		И НДСПредъявленный.СчетФактура = ВводСобственныхСредств.СчетФактура
	|		И НДСПредъявленный.НаправлениеДеятельности = ВводСобственныхСредств.ИсходноеНаправлениеДеятельности
	|
	|СГРУППИРОВАТЬ ПО
	|
	|	Операция.Ссылка,
	|	Операция.Дата,
	|	Операция.Организация,
	|	Расчеты.Контрагент,
	|	Расчеты.Договор,
	|	Операция.ХозяйственнаяОперация,
	|	Операция.ВалютаВзаиморасчетов,
	|	Операция.ГруппаФинансовогоУчета,
	|	Операция.Подразделение,
	|	Операция.НаправлениеДеятельности,
	|	Операция.ПодотчетноеЛицо,
	|	НДСПредъявленный.ВидДеятельностиНДС,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, НДСПредъявленный.НаправлениеДеятельности),
	|	НДСПредъявленный.ВидЦенности,
	|	Строки.АналитикаРасходов,
	|	Строки.Количество,
	|	Статьи.ВариантРаспределенияРасходовРегл,
	|	Расчеты.ГруппаФинансовогоУчета,
	|	Расчеты.Подразделение,
	|	Расчеты.НаправлениеДеятельности
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
#КонецОбласти

	ТекстыОтражения.Добавить(ТекстПроцентыПоДисконтированию());
	
	//-- Локализация
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	ТекстыЗапроса = Новый Массив;
	
	//++ Локализация
	
	#Область СуммыДокументовВВалютахУчета
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Суммы.Регистратор КАК Регистратор,
	|	Суммы.ИдентификаторСтроки КАК ИдентификаторСтроки,
	|	
	|	ВЫБОР
	|		КОГДА Суммы.СуммаПриведеннаяРегл = 0
	|		ТОГДА Суммы.СуммаБезНДСРегл
	|		ИНАЧЕ Суммы.СуммаПриведеннаяРегл
	|	КОНЕЦ КАК СуммаПриведеннаяРегл,
	|	ВЫБОР
	|		КОГДА Суммы.СуммаПриведеннаяУпр = 0
	|		ТОГДА Суммы.СуммаБезНДСУпр
	|		ИНАЧЕ Суммы.СуммаПриведеннаяУпр
	|	КОНЕЦ КАК СуммаПриведеннаяУпр,
	|	ВЫБОР
	|		КОГДА Суммы.СуммаПриведенная = 0
	|		ТОГДА Суммы.СуммаВзаиморасчетов - Суммы.СуммаНДСВзаиморасчетов
	|		ИНАЧЕ Суммы.СуммаПриведенная
	|	КОНЕЦ КАК СуммаПриведенная,
	|	
	|	Суммы.СуммаБезНДСРегл КАК СуммаБезНДСРегл,
	|	Суммы.СуммаБезНДСУпр КАК СуммаБезНДСУпр,
	|	Суммы.СуммаБезНДС КАК СуммаБезНДС,
	|	
	|	Суммы.СуммаНДСРегл КАК СуммаНДСРегл,
	|	Суммы.СуммаНДСУпр КАК СуммаНДСУпр,
	|	Суммы.СуммаНДСВзаиморасчетов КАК СуммаНДС
	|	
	|ПОМЕСТИТЬ СуммыДокументовВВалютахУчета
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|		ПО Суммы.Регистратор = ДокументыКОтражению.Ссылка
	|	
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстыЗапроса.Добавить("");
	
	//-- Локализация
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

//++ Локализация
#Область Фискализация

// Возвращает таблицу товаров для заполнения позиций строк в параметрах чека на оплату
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для получения товарных позиций
// Возвращаемое значение:
// 	ТаблицаЗначений - Таблица с товарными позициями с количественными и суммовыми показателями
Функция ПозицииНоменклатурыПоДокументу(ДокументСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Дата, Валюта, Организация");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТаблицаДокумента.НомерСтроки КАК НомерСтроки,
	|	ТаблицаДокумента.Содержание КАК НоменклатураНаименование,
	|	"""" КАК ХарактеристикаНаименование,
	|	НЕОПРЕДЕЛЕНО КАК Упаковка,
	|	ТаблицаДокумента.Количество КАК Количество,
	|	ТаблицаДокумента.Цена КАК Цена,
	|	ТаблицаДокумента.СуммаСНДС КАК Сумма,
	|	ТаблицаДокумента.СтавкаНДС КАК СтавкаНДС,
	|	ТаблицаДокумента.СуммаНДС КАК СуммаНДС,
	|	ТаблицаДокумента.Ссылка.Валюта КАК Валюта,
	|	ТаблицаДокумента.Ссылка.ЦенаВключаетНДС КАК ЦенаВключаетНДС
	|ПОМЕСТИТЬ ТаблицаНоменклатуры
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ТаблицаДокумента
	|ГДЕ
	|	ТаблицаДокумента.Ссылка = &Ссылка
	|;
	|
	|/////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КурсВалюты.Валюта КАК Валюта,
	|	КурсВалюты.КурсЧислитель * КурсВалютыДокумента.КурсЗнаменатель / (КурсВалюты.КурсЗнаменатель * КурсВалютыДокумента.КурсЧислитель) КАК КоэффициентПересчета
	|ПОМЕСТИТЬ КурсыВалют
	|ИЗ
	|	РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаДокумента, БазоваяВалюта = &БазоваяВалюта) КАК КурсВалюты
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ОтносительныеКурсыВалют.СрезПоследних(&ДатаДокумента, Валюта = &ВалютаДокумента И БазоваяВалюта = &БазоваяВалюта) КАК КурсВалютыДокумента
	|		ПО (ИСТИНА)
	|ГДЕ
	|	КурсВалюты.КурсЗнаменатель <> 0
	|	И КурсВалютыДокумента.КурсЧислитель <> 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Валюта
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаНоменклатуры.Количество             КАК Количество,
	|	ТаблицаНоменклатуры.Сумма * ЕСТЬNULL(КурсыВалют.КоэффициентПересчета, 1) КАК Сумма,
	|	ТаблицаНоменклатуры.СтавкаНДС              КАК СтавкаНДС,
	|	ТаблицаНоменклатуры.СуммаНДС * ЕСТЬNULL(КурсыВалют.КоэффициентПересчета, 1) КАК СуммаНДС,
	|	ТаблицаНоменклатуры.Валюта                 КАК Валюта,
	|	ВЫРАЗИТЬ(ВЫБОР
	|		КОГДА ТаблицаНоменклатуры.ЦенаВключаетНДС ТОГДА
	|			ТаблицаНоменклатуры.Цена
	|		КОГДА ТаблицаНоменклатуры.Количество = 0 ТОГДА
	|			ТаблицаНоменклатуры.Сумма
	|		ИНАЧЕ
	|			ТаблицаНоменклатуры.Сумма / ТаблицаНоменклатуры.Количество
	|	КОНЕЦ * ЕСТЬNULL(КурсыВалют.КоэффициентПересчета, 1) КАК ЧИСЛО(31,2)) КАК Цена,
	|	
	|	ТаблицаНоменклатуры.НоменклатураНаименование           КАК НоменклатураНаименование,
	|	ТаблицаНоменклатуры.ХарактеристикаНаименование         КАК ХарактеристикаНаименование,
	|	ТаблицаНоменклатуры.Упаковка               КАК Упаковка,
	|	ТаблицаНоменклатуры.Упаковка               КАК УпаковкаНаименование
	|
	|ИЗ
	|	ТаблицаНоменклатуры КАК ТаблицаНоменклатуры
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ КурсыВалют
	|		ПО ТаблицаНоменклатуры.Валюта = КурсыВалют.Валюта
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаНоменклатуры.НомерСтроки
	|";
	Запрос.УстановитьПараметр("Ссылка", ДокументСсылка);
	Запрос.УстановитьПараметр("ДатаДокумента", РеквизитыДокумента.Дата);
	Запрос.УстановитьПараметр("ВалютаДокумента", РеквизитыДокумента.Валюта);
	Запрос.УстановитьПараметр("БазоваяВалюта", ЗначениеНастроекПовтИсп.ВалютаРегламентированногоУчетаОрганизации(РеквизитыДокумента.Организация));
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти
//-- Локализация

// Заполняет массив допустимых наименований входящих документов.
//
// Параметры:
//  МассивНаименований	 - Массив - массив наименования входящих документов.
//
Процедура ДополнитьНаименованияВходящихДокументов(МассивНаименований) Экспорт
	
КонецПроцедуры

#Область ОбработчикиСобытийФормыДокумента

// Возвращает параметры, используемые при установке условного оформления поля количества по РНПТ.
//
// Возвращаемое значение:
//	Структура - параметры, используемые при установке условного оформления поля количества по РНПТ, со следующими
//										свойствами:
//		* ИмяПоляВводаКоличествоПоРНПТ - Строка - имя поля количества по РНПТ.
//		* ИмяПоляЕдиницаИзмеренияТНВЭД - Строка - имя поля единица измерения ТН ВЭД.
//		* ПутьКПолюВедетсяУчетПоРНПТ - Строка - путь к значению поля, хранящему сведения о ведении учета по РНПТ.
//		* ПутьКПолюДатаДокумента - Строка - путь к значению поля, хранящему сведения о дате объекта.
//
Функция ПараметрыУстановкиУсловногоОформленияКоличестваПоРНПТ() Экспорт
	
	ПараметрыУсловногоОформления = Новый Структура;
	ПараметрыУсловногоОформления.Вставить("ИмяПоляВводаКоличествоПоРНПТ",	"РасходыКоличествоПоРНПТ");
	ПараметрыУсловногоОформления.Вставить("ИмяПоляЕдиницаИзмеренияТНВЭД",	"РасходыКодТНВЭДЕдИзм");
	ПараметрыУсловногоОформления.Вставить("ПутьКПолюВедетсяУчетПоРНПТ",		"Объект.Расходы.ВедетсяУчетПоРНПТ");
	ПараметрыУсловногоОформления.Вставить("ПутьКПолюДатаДокумента",			"Объект.Дата");
	
	Возврат ПараметрыУсловногоОформления;
	
КонецФункции

// Устанавливаем условное оформление количества по РНПТ основных средств.
//
// Параметры:
//	Форма - ДанныеФормыСтруктура, ФормаКлиентскогоПриложения - содержит данные формы, которая содержит:
//		* Элементы - ВсеЭлементыФормы - элементы формы клиентского приложения.
//		* УсловноеОформление - УсловноеОформлениеКомпоновкиДанных - условное оформление компановки данных элементов формы.
//	ПараметрыУсловногоОформления - см. ПараметрыУстановкиУсловногоОформленияКоличестваПоРНПТ
//
Процедура УстановитьУсловноеОформлениеФормыДокумента(Форма, ПараметрыУсловногоОформления = Неопределено) Экспорт
	
	Если ПараметрыУсловногоОформления = Неопределено Тогда
		ПараметрыУсловногоОформления = ПараметрыУстановкиУсловногоОформленияКоличестваПоРНПТ();
	КонецЕсли;
	
	ИмяПоляВводаКоличествоПоРНПТ = ПараметрыУсловногоОформления.ИмяПоляВводаКоличествоПоРНПТ;
	ДатаНачалаПрослеживаемости = УчетПрослеживаемыхТоваровЛокализация.ДатаНачалаУчетаПрослеживаемыхИмпортныхТоваров();
	
	ЭлементыФормы		= Форма.Элементы;
	УсловноеОформление	= Форма.УсловноеОформление;
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ИмяПоляВводаКоличествоПоРНПТ].Имя);
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПараметрыУсловногоОформления.ПутьКПолюВедетсяУчетПоРНПТ);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПараметрыУсловногоОформления.ПутьКПолюДатаДокумента);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = ДатаНачалаПрослеживаемости;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Текст", НСтр("ru = '<не прослеживается>';
																					|en = '<not traced>'"));
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ЦветТекста", ЦветаСтиля.ТекстЗапрещеннойЯчейкиЦвет);
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ТолькоПросмотр", Истина);
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("ОтметкаНезаполненного", Ложь);
	
	//
	ЭлементУсловногоОформления = УсловноеОформление.Элементы.Добавить();
	
	ПолеЭлемента = ЭлементУсловногоОформления.Поля.Элементы.Добавить();
	ПолеЭлемента.Поле = Новый ПолеКомпоновкиДанных(ЭлементыФормы[ПараметрыУсловногоОформления.ИмяПоляЕдиницаИзмеренияТНВЭД].Имя);
	
	ГруппаОтбора = ЭлементУсловногоОформления.Отбор.Элементы.Добавить(Тип("ГруппаЭлементовОтбораКомпоновкиДанных"));
	ГруппаОтбора.ТипГруппы = ТипГруппыЭлементовОтбораКомпоновкиДанных.ГруппаИли;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПараметрыУсловногоОформления.ПутьКПолюВедетсяУчетПоРНПТ);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Равно;
	ОтборЭлемента.ПравоеЗначение = Ложь;
	
	ОтборЭлемента = ГруппаОтбора.Элементы.Добавить(Тип("ЭлементОтбораКомпоновкиДанных"));
	ОтборЭлемента.ЛевоеЗначение = Новый ПолеКомпоновкиДанных(ПараметрыУсловногоОформления.ПутьКПолюДатаДокумента);
	ОтборЭлемента.ВидСравнения = ВидСравненияКомпоновкиДанных.Меньше;
	ОтборЭлемента.ПравоеЗначение = ДатаНачалаПрослеживаемости;
	
	ЭлементУсловногоОформления.Оформление.УстановитьЗначениеПараметра("Отображать", Ложь);
	
КонецПроцедуры

// Заполняет служебный реквизит 'ВедетсяУчетПоРНПТ' табличной части 'Расходы'.
//
// Параметры:
//	ТаблицаТовары - ДанныеФормыКоллекция - табличная часть документа, в которой осуществляется заполнение реквизита.
//
Процедура ЗаполнитьПризнакВедетсяУчетРНПТ(ТаблицаТовары) Экспорт
	
	//++ Локализация
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаРасходов.НомерСтроки		КАК НомерСтроки,
	|	ТаблицаРасходов.НомерГТД		КАК НомерГТД,
	|	ТаблицаРасходов.КодТНВЭД		КАК КодТНВЭД
	|ПОМЕСТИТЬ ТаблицаРасходов
	|ИЗ
	|	&ТаблицаРасходов КАК ТаблицаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРасходов.НомерСтроки	КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА ДанныеГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|				И ЕСТЬNULL(ДанныеТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ						КАК ВедетсяУчетПоРНПТ
	|ИЗ
	|	ТаблицаРасходов КАК ТаблицаРасходов
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК ДанныеГТД
	|		ПО ТаблицаРасходов.НомерГТД = ДанныеГТД.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК ДанныеТНВЭД
	|		ПО ТаблицаРасходов.КодТНВЭД = ДанныеТНВЭД.Ссылка";
	
	ВыгружаемыеКолонки = "НомерСтроки, НомерГТД, КодТНВЭД";
	
	Запрос.УстановитьПараметр("ТаблицаРасходов", ТаблицаТовары.Выгрузить(, ВыгружаемыеКолонки)); 
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		ТаблицаТовары[Выборка.НомерСтроки - 1].ВедетсяУчетПоРНПТ = Выборка.ВедетсяУчетПоРНПТ;
	КонецЦикла;
	
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

// Возвращает признак прослеживаемости ОС.
//
// Параметры:
//	НомерГТД - СправочникСсылка.НомераГТД - значение номера ГТД.
//	КодТНВЭД - СправочникСсылка.КлассификаторТНВЭД - значение кода ТН ВЭД.
//
// Возвращаемое значение:
//	Булево - признак учета ОС в системе учета прослеживаемых импортных товаров.
//
Функция ТоварПрослеживается(НомерГТД, КодТНВЭД) Экспорт
	
	ТоварПрослеживается = Ложь;
	
	//++ Локализация
	
	Если ЗначениеЗаполнено(НомерГТД) Тогда
		ТипНомераГТД = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(НомерГТД, "ТипНомераГТД");
		
		РНПТ = ТипНомераГТД = Перечисления.ТипыНомеровГТД.НомерРНПТ
				Или ТипНомераГТД = Перечисления.ТипыНомеровГТД.НомерРНПТКомплекта;
	Иначе
		РНПТ = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(КодТНВЭД) Тогда
		ПрослеживаемыйТовар = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(КодТНВЭД, "ПрослеживаемыйТовар");
	Иначе
		ПрослеживаемыйТовар = Ложь;
	КонецЕсли;
	
	Если РНПТ
		И ПрослеживаемыйТовар Тогда
		
		ТоварПрослеживается = Истина;
		
	КонецЕсли;
	
	//-- Локализация
	
	Возврат ТоварПрослеживается;
	
КонецФункции

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//  ДокументОбъект - ДокументОбъект.ПриобретениеУслугПрочихАктивов -
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры
//++ Локализация

//++ НЕ УТ

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	Расходы.НомерСтроки						КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Организация							КАК Организация,
	|	Расходы.НомерГТД						КАК РНПТ,
	|	Расходы.АналитикаРасходов				КАК ОсновноеСредство,
	|	Расходы.КодТНВЭД						КАК КодТНВЭД,
	|	Расходы.КоличествоПоРНПТ				КАК КоличествоПоРНПТ
	|ИЗ
	|	ДанныеДокументаТаблицаРасходы КАК Расходы
	|ГДЕ
	|	Расходы.Ссылка = &Ссылка
	|	И Расходы.КоличествоПоРНПТ > 0
	|	И Расходы.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ЕСТЬNULL(Расходы.КодТНВЭДПрослеживаемыйТовар, ЛОЖЬ)
	|	И ЕСТЬNULL(Расходы.НомерГТДТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Расходы.НомерСтроки						КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)	КАК ВидДвижения,
	|	&Период									КАК Период,
	|	&Организация							КАК Организация,
	|	ПрослеживаемыеКомплектующие.НомерРНПТ	КАК РНПТ,
	|	Расходы.АналитикаРасходов				КАК ОсновноеСредство,
	|	Расходы.КодТНВЭД						КАК КодТНВЭД,
	|	Расходы.КоличествоПоРНПТ * ПрослеживаемыеКомплектующие.КоличествоПоРНПТ КАК КоличествоПоРНПТ
	|ИЗ
	|	ДанныеДокументаТаблицаРасходы КАК Расходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.НомераГТД.ПрослеживаемыеКомплектующие КАК ПрослеживаемыеКомплектующие
	|		ПО Расходы.НомерГТД = ПрослеживаемыеКомплектующие.Ссылка
	|
	|ГДЕ
	|	Расходы.Ссылка = &Ссылка
	|	И Расходы.КоличествоПоРНПТ > 0
	|	И Расходы.АналитикаРасходов ССЫЛКА Справочник.ОбъектыЭксплуатации
	|	И ЕСТЬNULL(Расходы.КодТНВЭДПрослеживаемыйТовар, ЛОЖЬ)
	|	И ЕСТЬNULL(Расходы.НомерГТДТипНомераГТД, ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.ПустаяСсылка)) = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Расходы.НомерСтроки";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаПорядокОтраженияПрочихОпераций(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если ДокументОбъект = Неопределено
	 ИЛИ ДокументОбъект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.ЗакупкаУПоставщика Тогда
	 
	ТекстЗапроса = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период			КАК Дата,
	|	&Организация	КАК Организация,
	|	&Ссылка			КАК Документ,
	|	""""			КАК ИдентификаторСтроки
	|ИЗ
	|	ДанныеДокументаТаблицаРасходы КАК Строки
	|ГДЕ
	|	Строки.Ссылка = &Ссылка
	|	И &ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщика)
	|	И Строки.СтатьяРасходовВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И Строки.СтатьяРасходовВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|";
	
	Иначе
		Возврат "";
	КонецЕсли;
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры, ДокументОбъект)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		Документы.ПриобретениеУслугПрочихАктивов.ТекстЗапросаТаблицаВтПрочиеРасходы(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		Документы.ПриобретениеУслугПрочихАктивов.ТекстЗапросаТаблицаВтПартииПрочихРасходов(Запрос, ТекстыЗапроса, ДокументОбъект);
	КонецЕсли;
	
	МассивТекстовЗапроса = Новый Массив;
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения";
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = РеглУчетПроведениеСервер.ТекстЗапросаОтраженияПоОбъектамРасчетов("ДанныеДокументаТаблицаРасшифровкаПлатежа");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = РеглУчетПроведениеСервер.ТекстЗапросаОтраженияПоДоговору("&Договор");
	МассивТекстовЗапроса.Добавить(ТекстЗапроса);
	
	МассивТекстовЗапроса.Добавить(ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете());
	
	ТекстЗапроса = СтрСоединить(МассивТекстовЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении(Истина));
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

//-- Локализация

#КонецОбласти

#Область ФрагментыПроводокРеглУчета

//++ Локализация

//++ НЕ УТ

Функция ТекстПроцентыПоДисконтированию()
	
	Текст = "
	|ВЫБРАТЬ // Проценты по дисконтированию (Дт 76.хх :: Кт 60, 76)
	|	
	|	РасчетыПоДисконтированию.Регистратор КАК Ссылка,
	|	РасчетыПоДисконтированию.Период КАК Период,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	РасчетыПоДисконтированию.СуммаДисконтированияРегл КАК Сумма,
	|	РасчетыПоДисконтированию.СуммаДисконтированияУпр КАК СуммаУУ,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПроцентыПоДисконтированию) КАК ВидСчетаДт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	РасчетыПоДисконтированию.Валюта КАК ВалютаДт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Подразделение КАК ПодразделениеДт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Контрагент КАК СубконтоДт1,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Договор КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	РасчетыПоДисконтированию.СуммаДисконтирования КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	РасчетыПоДисконтированию.СуммаДисконтированияРегл КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыСПоставщиками) КАК ВидСчетаКт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.ГруппаФинансовогоУчета КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	РасчетыПоДисконтированию.Валюта КАК ВалютаКт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Подразделение КАК ПодразделениеКт,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетКт,
	|	
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Контрагент КАК СубконтоКт1,
	|	РасчетыПоДисконтированию.ОбъектРасчетов.Договор КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	РасчетыПоДисконтированию.СуммаДисконтирования КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Проценты по дисконтированию"" КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ПроцентныеРасходыДисконтирования КАК РасчетыПоДисконтированию
	|	ПО
	|		РасчетыПоДисконтированию.Регистратор = ДокументыКОтражению.Ссылка
	|";
	Возврат Текст;
	
КонецФункции

//-- НЕ УТ

//-- Локализация

#КонецОбласти

//++ Локализация

#Область Прочее

Процедура ПроверитьЗаполнениеКоличестваПоРНПТ(Объект, Отказ)
	
	Если Не УчетПрослеживаемыхТоваровЛокализация.ИспользоватьУчетПрослеживаемыхИмпортныхТоваров(Дата(1, 1, 1)) Тогда
		Возврат;
	КонецЕсли;
	
	ВыгружаемыеКолонки = "НомерСтроки, НомерГТД, КодТНВЭД, КоличествоПоРНПТ";
	
	ТаблицаОС = Объект.Расходы.Выгрузить(, ВыгружаемыеКолонки);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки		КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.НомерГТД КАК Справочник.НомераГТД) КАК НомерГТД,
	|	ВЫРАЗИТЬ(ТаблицаОС.КодТНВЭД КАК Справочник.КлассификаторТНВЭД) КАК КодТНВЭД,
	|	ТаблицаОС.КоличествоПоРНПТ	КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТаблицаОСДляЗапроса
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаОСДляЗапроса КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК ДанныеГТД
	|		ПО ТаблицаОС.НомерГТД = ДанныеГТД.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК ДанныеТНВЭД
	|		ПО ТаблицаОС.КодТНВЭД = ДанныеТНВЭД.Ссылка
	|	
	|ГДЕ
	|	ТаблицаОС.КоличествоПоРНПТ = 0
	|	И ДанныеГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|								ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|	И ЕСТЬNULL(ДанныеТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	
	ОшибкаЗаполненияКоличестваПоРНПТ = НСтр("ru = 'Не заполнена колонка ""Количество по РНПТ"" в строке %НомерСтроки% списка ""Расходы"".';
											|en = 'The ""Quantity by RNPT"" column is not filled in line %НомерСтроки% of the ""Expenses"" list.'");
	
	КлючДанных = ОбщегоНазначенияУТ.КлючДанныхДляСообщенияПользователю(Объект);
	
	Пока Выборка.Следующий() Цикл
		ТекстСообщения = СтрЗаменить(ОшибкаЗаполненияКоличестваПоРНПТ, "%НомерСтроки%", Выборка.НомерСтроки);
		
		Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти("Расходы", Выборка.НомерСтроки, "КоличествоПоРНПТ");
		
		ОбщегоНазначения.СообщитьПользователю(ТекстСообщения, КлючДанных, Поле, "Объект", Отказ);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьКоличествоПоРНПТВТаблицеРасходы(Объект)
	
	ВыгружаемыеКолонки = "НомерСтроки, НомерГТД, КодТНВЭД, КоличествоПоРНПТ";
	
	ТаблицаОС = Объект.Расходы.Выгрузить(, ВыгружаемыеКолонки);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки		КАК НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.НомерГТД КАК Справочник.НомераГТД) КАК НомерГТД,
	|	ВЫРАЗИТЬ(ТаблицаОС.КодТНВЭД КАК Справочник.КлассификаторТНВЭД) КАК КодТНВЭД,
	|	ТаблицаОС.КоличествоПоРНПТ	КАК КоличествоПоРНПТ
	|ПОМЕСТИТЬ ТаблицаОСДляЗапроса
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ТаблицаОСДляЗапроса КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НомераГТД КАК ДанныеГТД
	|		ПО ТаблицаОС.НомерГТД = ДанныеГТД.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлассификаторТНВЭД КАК ДанныеТНВЭД
	|		ПО ТаблицаОС.КодТНВЭД = ДанныеТНВЭД.Ссылка
	|	
	|ГДЕ
	|	ТаблицаОС.КоличествоПоРНПТ > 0
	|	И (НЕ (ДанныеГТД.ТипНомераГТД В(ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ),
	|									ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТКомплекта))
	|			И ЕСТЬNULL(ДанныеТНВЭД.ПрослеживаемыйТовар, ЛОЖЬ))
	|		ИЛИ НЕ &ИспользоватьУчетПрослеживаемыхИмпортныхТоваров)
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Запрос = Новый Запрос;
	Запрос.Текст = ТекстЗапроса;
	
	Запрос.УстановитьПараметр("Дата",		Объект.Дата);
	Запрос.УстановитьПараметр("ТаблицаОС",	ТаблицаОС);
	
	УчетПрослеживаемыхТоваровЛокализация.УстановитьПараметрыИспользованияУчетаПрослеживаемыхТоваров(Запрос);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Запрос.Выполнить().Выбрать();
	
	Пока Выборка.Следующий() Цикл
		Объект.Расходы[Выборка.НомерСтроки - 1].КоличествоПоРНПТ = 0;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- Локализация

#КонецОбласти
