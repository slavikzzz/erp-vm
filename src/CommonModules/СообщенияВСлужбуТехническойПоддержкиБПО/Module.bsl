#Область ПрограммныйИнтерфейс


#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ФайлыВАрхивеСРазбивкой(НайденныеФайлы) Экспорт

	Вложения = Новый Массив();
	Результаты = Новый Массив();
	
	Архив = Новый ЗаписьZipФайла();
	Архив.Добавить(НайденныеФайлы, 
		РежимСохраненияПутейZIP.СохранятьОтносительныеПути, 
		РежимОбработкиПодкаталоговZIP.ОбрабатыватьРекурсивно);
	ДвоичныеДанные = Архив.ПолучитьДвоичныеДанные();
	ДобавитьФайлВложения(Вложения, ДвоичныеДанные, "logs.b64");
	
	Для Каждого Вложение Из Вложения Цикл
		Представление = ?(Прав(Вложение.ИмяФайла,4) = ".txt", Вложение.ИмяФайла, Вложение.ИмяФайла + ".txt");
		
		Идентификатор = Новый УникальныйИдентификатор();
		АдресРезультата = ПоместитьВоВременноеХранилище("", Идентификатор);
		АдресРезультата = ПоместитьВоВременноеХранилище(Вложение.Данные, АдресРезультата);
		
		Результат = Новый Структура();
		Результат.Вставить("ИмяФайла", Представление);
		Результат.Вставить("Данные", АдресРезультата);
		Результаты.Добавить(Результат);
	КонецЦикла;
	
	Возврат Результаты;
	
КонецФункции

Функция ФайлВАрхивеСРазбивкой(ПутьКФайлу) Экспорт

	Вложения = Новый Массив();
	Результаты = Новый Массив();
	
	Архив = Новый ЗаписьZipФайла();
	Архив.Добавить(ПутьКФайлу);
	ДвоичныеДанные = Архив.ПолучитьДвоичныеДанные();
	ДобавитьФайлВложения(Вложения, ДвоичныеДанные, "logs.b64");
	
	Для Каждого Вложение Из Вложения Цикл
		Представление = ?(Прав(Вложение.ИмяФайла,4) = ".txt", Вложение.ИмяФайла, Вложение.ИмяФайла + ".txt");
		ПараметрыВложения = Новый Структура;
		ПараметрыВложения.Вставить("ВидДанных", "Адрес");
		ПараметрыВложения.Вставить("Представление", Представление);
		
		Идентификатор = Новый УникальныйИдентификатор();
		АдресРезультата = ПоместитьВоВременноеХранилище("", Идентификатор);
		АдресРезультата = ПоместитьВоВременноеХранилище(Вложение.Данные, АдресРезультата);
		
		Результат = Новый Структура();
		Результат.Вставить("ИмяФайла", Представление);
		Результат.Вставить("Данные", АдресРезультата);
		Результаты.Добавить(Результат);
	КонецЦикла;
	
	Возврат Результаты;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции


// Добавляет в массив Вложения файл преобразованный в BASE64 и разбивает его на части если файл превышает 
// допустимый размер.
//
// Параметры:
//  Вложения - Массив из Структура - массив структур содержащих вложения
//  ДвоичныеДанные - ДвоичныеДанные - данные которые требуется добавить во вложения
//  ИмяФайла - Строка - имя файла вложения
Процедура ДобавитьФайлВложения(Вложения, ДвоичныеДанные, ИмяФайла)
	
	МаксимальныйРазмерФайлаBASE64 = МаксимальныйРазмерФайлаБИП();
	// Уменьшение максимального размера файла на символов переноса, два символа переноса на каждые 80
	МаксимальныйРазмерФайла = МаксимальныйРазмерФайлаBASE64 - МаксимальныйРазмерФайлаBASE64 / 80 * 2;
	// Уменьшение максимального размера файла из-за перекодирования
	МаксимальныйРазмерФайла = МаксимальныйРазмерФайла * 3/4;
	
	Если МаксимальныйРазмерФайла > ДвоичныеДанные.Размер() Тогда
		Вложение = Новый Структура();
		Вложение.Вставить("ИмяФайла", ИмяФайла);
		Данные = ПолучитьДвоичныеДанныеИзСтроки(ПолучитьBase64СтрокуИзДвоичныхДанных(ДвоичныеДанные));
		Вложение.Вставить("Данные", Данные);
		Вложения.Добавить(Вложение);
	Иначе
		МассивДвоичныхДанных = РазделитьДвоичныеДанные(ДвоичныеДанные, МаксимальныйРазмерФайла);
		Для Номер = 0 По МассивДвоичныхДанных.ВГраница() Цикл
			Вложение = Новый Структура();
			Вложение.Вставить("ИмяФайла", Лев(ИмяФайла, СтрДлина(ИмяФайла) - 2) + Прав("00" + Номер, 2));
			Данные = ПолучитьДвоичныеДанныеИзСтроки(ПолучитьBase64СтрокуИзДвоичныхДанных(МассивДвоичныхДанных[Номер]));
			Вложение.Вставить("Данные", Данные);
			Вложения.Добавить(Вложение);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

// Определяет максимальный размер файла вложения.
//
// Возвращаемое значение:
//  Число - максимальный размер файла в байтах.
//
Функция МаксимальныйРазмерФайлаБИП()
	
	Возврат 10485760; // 10 МБ.
	
КонецФункции

#КонецОбласти
