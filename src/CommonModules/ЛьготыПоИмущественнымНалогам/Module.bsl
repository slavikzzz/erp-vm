
#Область ПрограммныйИнтерфейс

// Формирует дополнительное описание для льготы с учетом ее применения к конкретной организации и/или
// к конкретному объекту налогообложения 
// 
// Параметры:
//  Льгота - СправочникСсылка.ОснованияЛьготПоИмущественнымНалогам - льгота, для которой формируется текст подсказки
//  Организация - СправочникСсылка.Организации - организация, в отношении имущества которой применена льгота
//  Период - дата - дата, на которую выбираются данные о льготе
//  ОсновноеСредство - СправочникСсылка.ОсновныеСредства - объект налогообложения, в отношении которого применена льгота.
//  	Если не указан, то текст подсказки формируется с учетом применения льготы в целом по организации.
// 
// Возвращаемое значение:
//  ФорматированнаяСтрока - текст подсказки для льготы
//
Функция ТекстПодсказкиЛьготы(Льгота, Организация, Период, ОсновноеСредство = Неопределено) Экспорт 

	Подсказка = Новый Массив;
	ЕстьОшибки = Ложь;
	
	ЦветТекста = ?(ЕстьОшибки, ЦветаСтиля.НезаполненныйРеквизит, ЦветаСтиля.ЦветГиперссылки);
	Возврат Новый ФорматированнаяСтрока(Подсказка,, ЦветТекста,, "ПодтверждающиеДокументы");
	
КонецФункции

// Формирует наименование для федеральной льготы (поименованной в НК).
// 
// Параметры:
//  Объект - СправочникОбъект.ОснованияЛьготПоИмущественнымНалогам - объект справочника льгот,
//		для которого нужно сформировать наименование. 
// 
// Возвращаемое значение:
//  Строка - наименование федеральной льготы
//
Функция НаименованиеФедеральнойЛьготы(Объект) Экспорт
		
	Наименование = Новый Массив;
	
	Если Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.Освобождение Тогда
		Наименование.Добавить(Нстр("ru = 'Освобождение:';
									|en = 'Exemption'"));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент
		 И ЗначениеЗаполнено(Объект.ПроцентУменьшения) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru = 'Снижение ставки на %1%%:';
											|en = 'Rate reduction by %1%%:'"), Объект.ПроцентУменьшения));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент
		 Или Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиДоУказанной Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение ставки:';
									|en = 'Rate reduction:'"));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент
		 И ЗначениеЗаполнено(Объект.ПроцентУменьшения) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru = 'Снижение суммы налога на %1%%:';
											|en = 'Reduction of tax base by %1%%:'"), Объект.ПроцентУменьшения));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент
		 Или Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение суммы налога:';
									|en = 'Tax amount reduction:'"));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение налоговой базы:';
									|en = 'Tax base reduction:'"));
	ИначеЕсли Объект.ВидЛьготы = Перечисления.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади Тогда
		Наименование.Добавить(Нстр("ru = 'Доля необлагаемой площади:';
									|en = 'Share of area not subject to tax:'"));
	КонецЕсли;
	
	ОписаниеЛьгот = ЛьготыПоИмущественнымНалогамПовтИсп.ДанныеОЛьготахПоИмущественнымНалогам(Объект.Налог);
	ОписаниеЛьготы = ОписаниеЛьгот.ФедеральныеЛьготы[Объект.КодЛьготы];
	Если ОписаниеЛьготы = Неопределено Тогда
		ТекстНаименования = СтрСоединить(Наименование);
		Возврат СтрЗаменить(ТекстНаименования, ":", "");
	Иначе
		Наименование.Добавить(ОписаниеЛьготы.Категория);
	КонецЕсли;
	
	Возврат СтрСоединить(Наименование, " ");
	
КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НайтиИлиСоздатьЛьготу(Налог, ПоискЛьготы, Льготы) Экспорт
	
	СозданныеЛьготы = Льготы.НайтиСтроки(ПоискЛьготы);
	Если СозданныеЛьготы.Количество() > 0 Тогда
		ОснованиеЛьготы = СозданныеЛьготы[0].ОснованиеЛьготы;
	ИначеЕсли ПоискЛьготы.Свойство("УстановленаМестнымНормативнымАктом") И ПоискЛьготы.УстановленаМестнымНормативнымАктом Тогда
		ОснованиеЛьготы = Справочники.ОснованияЛьготПоИмущественнымНалогам.МестнаяЛьготаПоПараметрам(
			Налог,
			ПоискЛьготы);
	Иначе
		ОснованиеЛьготы = Справочники.ОснованияЛьготПоИмущественнымНалогам.ФедеральнаяЛьготаПоКоду(
			Налог,
			ПоискЛьготы.КодЛьготы);
	КонецЕсли;	
	
	Если Не ЗначениеЗаполнено(ОснованиеЛьготы) Тогда
		ОснованиеЛьготыОбъект = Справочники.ОснованияЛьготПоИмущественнымНалогам.СоздатьЭлемент();
		ОснованиеЛьготыОбъект.Налог = Налог;
		ОснованиеЛьготыОбъект.Заполнить(ПоискЛьготы);
		ОбновлениеИнформационнойБазы.ЗаписатьОбъект(ОснованиеЛьготыОбъект);
		ОснованиеЛьготы = ОснованиеЛьготыОбъект.Ссылка;
	КонецЕсли;
	
	СтрокаКэша = Льготы.Добавить();
	ЗаполнитьЗначенияСвойств(СтрокаКэша, ПоискЛьготы);
	СтрокаКэша.ОснованиеЛьготы = ОснованиеЛьготы;
	
	Возврат ОснованиеЛьготы;
	
КонецФункции

Функция ПоискМестнойЛьготы(КодРегиона, КодПоОКТМО) Экспорт

	ПоискЛьготы = Новый Структура;

	ПоискЛьготы.Вставить("КодРегиона", КодРегиона);
	ПоискЛьготы.Вставить("КодПоОКТМО", КодПоОКТМО);
	ПоискЛьготы.Вставить("УстановленаМестнымНормативнымАктом", Истина);
	
	Возврат ПоискЛьготы;
	
КонецФункции

#КонецОбласти