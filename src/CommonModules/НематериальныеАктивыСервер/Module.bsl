
#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.АмортизацияНМА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.ВыработкаНМА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА);
		
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.МестоУчетаНМА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАБУ);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАУУ);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПервоначальныеСведенияНМА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМА);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАУУ);
		
	КонецЕсли;
	
	// Контроль
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.АмортизацияНМА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.ВыработкаНМА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА);
		
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.МестоУчетаНМА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАБУ);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПараметрыАмортизацииНМАУУ);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПервоначальныеСведенияНМА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМА);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАБУ);
		Параметры.КонтрольныеРегистрыЗаданий.Добавить(Метаданные.РегистрыСведений.ПорядокУчетаНМАУУ);
		
	КонецЕсли;
	
	// Контроль даты запрета
	Если Свойства.РежимЗаписи <> РежимЗаписиДокумента.Запись Тогда
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.АмортизацияНМА);
		Параметры.КонтрольныеРегистрыДатаЗапрета.Добавить(Метаданные.РегистрыНакопления.СтоимостьНМА);
	КонецЕсли;
		
	Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.ДокументыПоНМА);
	
	НематериальныеАктивыЛокализация.ДополнитьПараметрыДляПроведенияДокумента(Параметры, Документ, Свойства);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	СоответствиеТекстовЗапросов.Вставить("АмортизацияНМАИзменение", РегистрыНакопления.АмортизацияНМА.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	СоответствиеТекстовЗапросов.Вставить("СтоимостьНМАИзменение", РегистрыНакопления.СтоимостьНМА.ТекстЗапросаКонтрольДатыЗапрета(Запрос));
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам нематериальных активов.
//
// Параметры:
//   ТаблицыДляДвижений - Структура - таблицы данных документа
//   Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//   Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "АмортизацияНМА");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ВыработкаНМА");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "СтоимостьНМА");
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "МестоУчетаНМА");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПараметрыАмортизацииНМАБУ");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПараметрыАмортизацииНМАУУ");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПервоначальныеСведенияНМА");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПорядокУчетаНМА");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПорядокУчетаНМАБУ");
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ПорядокУчетаНМАУУ");
	
	НематериальныеАктивыЛокализация.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
	
КонецПроцедуры

// Процедура формирования движений по независимым регистрам нематериальных активов.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Документ - ДокументСсылка - ссылка на документ
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ИмяТаблицы = "Таблица" + "ДокументыПоНМА";
	
	Если ТаблицыДляДвижений.Свойство(ИмяТаблицы) Тогда
		
		Набор = РегистрыСведений.ДокументыПоНМА.СоздатьНаборЗаписей();
		Набор.Отбор.Ссылка.Установить(Документ);
		Набор.Загрузить(ТаблицыДляДвижений[ИмяТаблицы]);
		Набор.Записать();
		
		ОбновлениеИнформационнойБазыУТ.ОтметитьВыполнениеОбработкиИнтерактивно(Набор);
		
	КонецЕсли;
	
	НематериальныеАктивыЛокализация.ЗаписатьДанные(ТаблицыДляДвижений, Документ, МенеджерВременныхТаблиц, Отказ);
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти