#Область ПрограммныйИнтерфейс

// Вызывается из переопределяемого модуля.
// см. ДатыЗапретаИзмененияПереопределяемый.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения
//
Процедура ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных) Экспорт

	//++ Локализация
	
	
#Область Банк
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ОперацияПоЯндексКассе.ПолноеИмя(),
										"Дата",
										"Банк",
										"БанковскийСчет");
#КонецОбласти

#Область ВводОстатков
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВводОстатковНДСПредъявленного.ПолноеИмя(),
										"Дата",
										"ВводОстатков",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.УведомлениеОбОстаткахПрослеживаемыхТоваров.ПолноеИмя(),
										"Дата",
										"ВводОстатков",
										"Организация");
	//++ НЕ УТ	
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВводОстатковРасходовПриУСН.ПолноеИмя(),
										"Дата",
										"ВводОстатков",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВводДанныхПоНалогуНаПрибыль.ПолноеИмя(),
										"Дата",
										"ВводОстатков",
										"Организация");
	//-- НЕ УТ
#КонецОбласти

#Область ВнутреннееТовародвижение
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.КорректировкаОбособленногоУчетаЗапасов.ПолноеИмя(),
										"Дата",
										"ВнутреннееТовародвижение",
										"Организация");
										
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПередачаМатериаловВПроизводство.ПолноеИмя(),
										"Дата",
										"ВнутреннееТовародвижение",
										"Организация");
										
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВозвратМатериаловИзПроизводства.ПолноеИмя(),
										"Дата",
										"ВнутреннееТовародвижение",
										"Организация");
	//-- НЕ УТ
#КонецОбласти

#Область Закупки
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВыбытиеДенежныхДокументов.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ОтчетОператораСистемыПлатон.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПоступлениеДенежныхДокументов.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");
	//-- НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.УведомлениеОВвозеПрослеживаемыхТоваров.ПолноеИмя(),
										"Дата",
										"Закупки",
										"Организация");
#КонецОбласти
	
	//++ НЕ УТ
#Область Зарплата
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ДепонированиеЗарплаты.ПолноеИмя(),
										"Дата",
										"Зарплата",
										"Организация");
#КонецОбласти
	//-- НЕ УТ
	
	//++ НЕ УТКА
#Область МеждународныйУчет
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.АмортизацияНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.АмортизацияОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ИзменениеПараметровНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ИзменениеПараметровОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПереводОсновныхСредствИнвестиционногоИмуществаМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПеремещениеНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПеремещениеОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПринятиеКУчетуНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПринятиеКУчетуОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СписаниеНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СписаниеОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВводОстатковНМАМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВводОстатковОСМеждународныйУчет.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.НачислениеРеверсивногоНДС.ПолноеИмя(),
										"Дата",
										"МеждународныйУчет",
										"Организация");
#КонецОбласти
	//-- НЕ УТКА

#Область Продажи
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ТаможеннаяДекларацияЭкспорт.ПолноеИмя(),
										"Дата",
										"Продажи",
										"Организация");
	//-- НЕ УТ
#КонецОбласти

#Область Производство
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ВыпускПродукции.ПолноеИмя(),
										"Дата",
										"Производство",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПеремещениеМатериаловВПроизводстве.ПолноеИмя(),
										"Дата",
										"Производство",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СписаниеЗатратНаВыпуск.ПолноеИмя(),
										"Дата",
										"Производство",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ИзделияИЗатратыНЗП.ПолноеИмя(),
										"Дата",
										"Производство",
										"Организация");
	//-- НЕ УТ
	
	//++ НЕ УТКА
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.МаршрутныйЛистПроизводства.ПолноеИмя(),
										"Окончание",
										"Производство",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.КорректировкаЗаказаМатериаловВПроизводство.ПолноеИмя(),
										"Дата",
										"Производство",
										"Организация");
	//-- НЕ УТКА
#КонецОбласти

#Область РегламентныеОперации
	//++ НЕ УТ
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.АмортизацияНМА.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.АмортизацияОС.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.НаработкаТМЦВЭксплуатации.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.РегламентнаяОперация.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.ПогашениеСтоимостиТМЦВЭксплуатации.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	ДатыЗапретаИзменения.ДобавитьСтроку(ИсточникиДанных,
										Метаданные.Документы.СтатистикаПерсонала.ПолноеИмя(),
										"Дата",
										"РегламентныеОперации",
										"Организация");
	//-- НЕ УТ
	
#КонецОбласти

	//++ НЕ УТ
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);
	ДатыЗапретаИзмененияБП.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);
	ЗарплатаКадры.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);
	РеглУчетСервер.ЗаполнитьИсточникиДанныхДляПроверкиЗапретаИзменения(ИсточникиДанных);
	//-- НЕ УТ

	//-- Локализация

КонецПроцедуры

// Позволяет изменить работу интерфейса при встраивании.
// см. ДатыЗапретаИзмененияПереопределяемый.НастройкаИнтерфейса
//
Процедура НастройкаИнтерфейса(НастройкиРаботыИнтерфейса) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ДатыЗапретаИзмененияБП.НастройкаИнтерфейса(НастройкиРаботыИнтерфейса);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Заполняет разделы дат запрета изменения, используемые при настройке дат запрета.
// Если не указать ни одного раздела, тогда будет доступна только настройка общей даты запрета.
//
// см. ДатыЗапретаИзмененияПереопределяемый.ПриЗаполненииРазделовДатЗапретаИзменения
//
Процедура ПриЗаполненииРазделовДатЗапретаИзменения(Разделы) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ЭлектронныйДокументооборотСКонтролирующимиОрганами.ПриЗаполненииРазделовДатЗапретаИзменения(Разделы);
	ЗарплатаКадры.ПриЗаполненииРазделовДатЗапретаИзменения(Разделы);
	//-- НЕ УТ
	
	
	//-- Локализация
	
КонецПроцедуры


// Позволяет переопределить выполнение проверки запрета изменения произвольным образом.
// см. ДатыЗапретаИзмененияПереопределяемый.ПередПроверкойЗапретаИзменения
//
Процедура ПередПроверкойЗапретаИзменения(Объект,
                                         ПроверкаЗапретаИзменения,
                                         УзелПроверкиЗапретаЗагрузки,
                                         ВерсияОбъекта) Экспорт
	
	//++ Локализация
	Если ОбщегоНазначения.ЭтоРегистр(Объект.Метаданные())
	 И Объект.Отбор.Найти("Регистратор") <> Неопределено Тогда
		ТипРегистратора = ТипЗнч(Объект.Отбор.Регистратор.Значение); // это набор записей документа-регистратора
	Иначе
		ТипРегистратора = Неопределено;
	КонецЕсли;
	
	ТипОбъекта = ТипЗнч(Объект);
		
	//++ НЕ УТ
	ЗарплатаКадры.ПередПроверкойЗапретаИзменения(
		Объект,
		ПроверкаЗапретаИзменения,
		УзелПроверкиЗапретаЗагрузки,
		ВерсияОбъекта);
	
	// Регл. учет
	// Для всех документов-регистраторов, если типом объекта является набор записей отражение документов в регл. учете, включаем проверку,
	//	так как проверка на форме дат запрета не распросраняется на проверку возможности формирования проводок:
	УстановленоСвойствоОтсутвияПроверки = Объект.ДополнительныеСвойства.Свойство("ПроверкаДатыЗапретаИзменения") И Не Объект.ДополнительныеСвойства.ПроверкаДатыЗапретаИзменения;
	Если Не ПроверкаЗапретаИзменения И ТипОбъекта = Тип("РегистрСведенийНаборЗаписей.ОтражениеДокументовВРеглУчете") И Не УстановленоСвойствоОтсутвияПроверки Тогда
		ПроверкаЗапретаИзменения = Истина;
	КонецЕсли;
	//-- НЕ УТ
	
	//++ НЕ УТКА

	// Для маршрутных листов производства исключаем проверку оффлайновых движений по регистрам.
	Если ТипРегистратора = Тип("ДокументСсылка.МаршрутныйЛистПроизводства")
	 И (ТипОбъекта = Тип("РегистрНакопленияНаборЗаписей.ПартииПроизводственныхЗатрат")
		ИЛИ ТипОбъекта = Тип("РегистрНакопленияНаборЗаписей.ПартииНезавершенногоПроизводства")
		ИЛИ ТипОбъекта = Тип("РегистрНакопленияНаборЗаписей.СебестоимостьТоваров")
		ИЛИ ТипОбъекта = Тип("РегистрНакопленияНаборЗаписей.ДетализацияПартийТоваровДляНДСиУСН")) Тогда
		
		ПроверкаЗапретаИзменения = Ложь;
	КонецЕсли;
	//-- НЕ УТКА

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти