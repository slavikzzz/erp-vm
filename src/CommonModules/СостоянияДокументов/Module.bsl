#Область ПрограммныйИнтерфейс

// Отражает изменения состояний документов в регистрах состояний.
//
// Параметры:
//  ДокументИсточник - ДокументОбъект - Документ-инициатор изменения состояния.
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицы изменений регистров.
//
Процедура ОтразитьСостоянияДокументов(ДокументИсточник, МенеджерВременныхТаблиц) Экспорт
	
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("СостоянияДокументов.ОтразитьСостоянияДокументов");

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	ШаблонЗапроса = "
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.ОтражаемыйДокумент КАК ОтражаемыйДокумент
	|ИЗ
	|	&КоллекцияДанных КАК Таблица
	|;
	|";
	
	ТекстВложенногоЗапроса = "";
	ТекстЗапросаВременныхТаблиц = "";
	ИменаВременныхТаблиц = "";
	
	ДополнитьТекстЗапросаЗаданий(
		Запрос,
		ТекстВложенногоЗапроса,
		ТекстЗапросаВременныхТаблиц,
		ИменаВременныхТаблиц);
	
	ТекстУничтожитьВт = ЗакрытиеМесяцаСервер.ТестЗапросаУничтоженияВременныхТаблиц(ИменаВременныхТаблиц);
	
	Если ЗначениеЗаполнено(ТекстВложенногоЗапроса) Тогда // есть хотя бы один контрольный регистр.
		Запрос.Текст = ТекстЗапросаВременныхТаблиц
			+ СтрЗаменить(ШаблонЗапроса, "&КоллекцияДанных", "(" + ТекстВложенногоЗапроса + ")")
			+ ТекстУничтожитьВт;
			
		МассивОтражаемыхДокументов = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ОтражаемыйДокумент");
		РаспределениеЗапасов.ИсключитьСсылкиТребующиеОтложенногоОбновления(МассивОтражаемыхДокументов);
		ОтразитьСостоянияДокументовВРегистрахСостояний(ДокументИсточник, МассивОтражаемыхДокументов);
	КонецЕсли;
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, 1);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбслуживаемыеРегистры()
	МассивРегистров = Новый Массив();
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.СостоянияЗаказовКлиентов.Имя);
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.СостоянияЗаказовПоставщикам.Имя);
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.СостоянияВнутреннихЗаказов.Имя);
	//++ НЕ УТКА
	МассивРегистров.Добавить(Метаданные.РегистрыСведений.СостоянияЭтаповПроизводства.Имя);
	//-- НЕ УТКА
	Возврат МассивРегистров
КонецФункции

// Отражает состояния документов в регистрах состояний.
// 
// Параметры:
// 	ДокументИсточник - ДокументСсылка - проводимый документ, источник информации для отражения.
// 	МассивОтражаемыхДокументов - Массив - массив ссылок на документы, которые надо отразить.
Процедура ОтразитьСостоянияДокументовВРегистрахСостояний(ДокументИсточник, МассивОтражаемыхДокументов) Экспорт
	
	Для каждого ИмяРегистра Из ОбслуживаемыеРегистры() Цикл
		РегистрыСведений[ИмяРегистра].ОтразитьСостоянияЗаказов(ДокументИсточник, МассивОтражаемыхДокументов);
	КонецЦикла;
	
КонецПроцедуры

// Дополняет текст запроса механизма расчета состояний.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 	ТекстЗапроса - Строка - строка с текстом запроса.
// 	ТекстЗапросаВременныхТаблиц - Строка - строка с текстом запроса временных таблиц.
// 	ИменаВременныхТаблиц - Строка - массив имен создаваемых временных таблиц для последующего уничтожения.
Процедура ДополнитьТекстЗапросаЗаданий(Запрос, ТекстЗапроса, ТекстЗапросаВременныхТаблиц, ИменаВременныхТаблиц)
	Для каждого ИмяРегистра Из ОбслуживаемыеРегистры() Цикл
		СоответствиеЗапросов = РегистрыСведений[ИмяРегистра].СоответствиеЗапросовКонтрольнымРегистрам(Запрос);
		
		Для Каждого ЭлементСоответствия Из СоответствиеЗапросов Цикл
			ЗакрытиеМесяцаСервер.ДополнитьТекстЗапросаЗаданий(ЭлементСоответствия.Ключ,
				ЭлементСоответствия.Значение,
				Запрос.МенеджерВременныхТаблиц.Таблицы,
				ТекстЗапроса,
				ТекстЗапросаВременныхТаблиц,
				ИменаВременныхТаблиц);
		КонецЦикла;
	КонецЦикла;
КонецПроцедуры

#КонецОбласти
