#Область СлужебныйПрограммныйИнтерфейс

// Извлекает из архива с шаблонами файл-образец заполнения отчетности по формату банка.
//
// Параметры:
//  ОписаниеШаблона - Структура - см. УниверсальныйОбменСБанкамиФормыКлиентСервер.ПараметрыФормыОписания()
//
// Возвращаемое значение:
//   Строка - адрес хранилища значений с данными файла-образца.
//
Функция АдресФайлаШаблона(ОписаниеШаблона) Экспорт
	
	ДвоичныеДанныеШаблона = ДанныеШаблона(ОписаниеШаблона);
	АдресШаблона = ?(ДвоичныеДанныеШаблона = Неопределено, "", ПоместитьВоВременноеХранилище(ДвоичныеДанныеШаблона));
	
	Возврат АдресШаблона;
	
КонецФункции

// Извлекает из архива с шаблонами файл-образец заполнения отчетности по формату банка.
//
// Параметры:
//  ОписаниеШаблона - Структура - см. УниверсальныйОбменСБанкамиФормыКлиентСервер.ПараметрыФормыОписания()
//
// Возвращаемое значение:
//   ДвоичныеДанные - данные файла-образца.
//
Функция ДанныеШаблона(ОписаниеШаблона) Экспорт
	
	Банки = ?(ЗначениеЗаполнено(ОписаниеШаблона.Банки), ОписаниеШаблона.Банки.ВыгрузитьЗначения(), Неопределено);
	
	Характеристики = УниверсальныйОбменСБанками.ХарактеристикиУслугБанков(
		ОписаниеШаблона.Сервис, ОписаниеШаблона.Характеристика, Банки);
		
	Если Характеристики.Количество() = 0 Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ТекстBase64 = Характеристики[0].Значение.Получить();
	Если Не ЗначениеЗаполнено(ТекстBase64) Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ДанныеАрхива = Base64Значение(ТекстBase64);
	Архив = Новый ЧтениеZipФайла(ДанныеАрхива.ОткрытьПотокДляЧтения());
	ИскомыйШаблон = Неопределено;
	Для Каждого ЭлементАрхива Из Архив.Элементы Цикл
		Если ЭлементАрхива.Имя = ОписаниеШаблона.ИмяФайлаШаблона Тогда
			ИскомыйШаблон = ЭлементАрхива;
			Прервать;
		КонецЕсли;
	КонецЦикла;
	Если ИскомыйШаблон = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	ПапкаШаблона = ФайловаяСистема.СоздатьВременныйКаталог(ИскомыйШаблон.Расширение);
	Архив.Извлечь(ИскомыйШаблон, ПапкаШаблона, РежимВосстановленияПутейФайловZIP.НеВосстанавливать);
	Архив.Закрыть();
	ДанныеАрхива = Неопределено;
			
	ДвоичныеДанныеШаблона = Новый ДвоичныеДанные(ПапкаШаблона + ИскомыйШаблон.Имя);
	ФайловаяСистема.УдалитьВременныйКаталог(ПапкаШаблона);
	
	Возврат ДвоичныеДанныеШаблона;
	
КонецФункции

#КонецОбласти
