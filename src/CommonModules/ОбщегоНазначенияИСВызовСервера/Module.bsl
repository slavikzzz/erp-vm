#Область ПрограммныйИнтерфейс

Функция ЭтоРасширеннаяВерсияГосИС(Подсистема = Неопределено) Экспорт
	
	Возврат ОбщегоНазначенияИС.ЭтоРасширеннаяВерсияГосИС(Подсистема);
	
КонецФункции

// Возвращает признак ведения учета маркируемой продукции.
// 
// Возвращаемое значение:
// 	Булево - Истина, если учет маркируемой продукции используется.
//
Функция ИспользуетсяМаркируемаяПродукция() Экспорт
	
	Возврат ОбщегоНазначенияИСМП.ИспользуетсяМаркируемаяПродукция();
	
КонецФункции

Функция ТекстJSONВОбъект(ТекстJSON, ПреобразовыватьВСоответствие) Экспорт
	Возврат ОбщегоНазначенияИСКлиентСервер.ТекстJSONВОбъект(ТекстJSON, ПреобразовыватьВСоответствие);	
КонецФункции

Функция ОбъектВТекстJSON(Структура, УдалитьПробелыИПереносыСтрок) Экспорт
	Возврат ОбщегоНазначенияИСКлиентСервер.ОбъектВТекстJSON(Структура, УдалитьПробелыИПереносыСтрок);
КонецФункции

// Проверка, является ли переданный документ внутренним перемещением.
// Необходимо для проверки доступности передачи по ОСУ - есть виды продукции, по которым
// разрешена передача по ОСУ между своими подразделениями
// 
// Параметры:
//  Контекст - ФормаКлиентскогоПриложения, ДокументСсылка - Контекст.
// 
// Возвращаемое значение:
//  Булево - Истина, если это документ внутреннего перемещения
Функция ЭтоДокументВнутреннегоПеремещения(Контекст) Экспорт
	
	ЭтоВнутреннееПеремещение = Ложь;
	
	Если Контекст = Неопределено Тогда
		Возврат ЭтоВнутреннееПеремещение;
	ИначеЕсли ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Контекст, "Объект") Тогда
		ИсточникДанных = Контекст.Объект;
	Иначе
		ИсточникДанных = Контекст;
	КонецЕсли;
	
	Если ТипЗнч(ИсточникДанных) = Тип("ДокументСсылка.ПеремещениеМеждуМОДИСМП")
		Или ТипЗнч(ИсточникДанных) = Тип("ДокументОбъект.ПеремещениеМеждуМОДИСМП") Тогда
		ЭтоВнутреннееПеремещение = Истина;
	Иначе
		ОбщегоНазначенияИСПереопределяемый.ЭтоДокументВнутреннегоПеремещения(Контекст, ЭтоВнутреннееПеремещение);
	КонецЕсли;
	
	Возврат ЭтоВнутреннееПеремещение;
	
КонецФункции

// Проверка, является ли партнер индивидуальным предпринимателем.
// 
// Параметры:
//  Контрагент - СправочникСсылка.Контрагенты, СправочникСсылка.Организации - Партнер
// Возвращаемое значение:
//  Булево - Истина, если это индивидуальный предприниматель
Функция ПартнерОрганизацияЭтоИндивидуальныйПредприниматель(Контрагент) Экспорт
	
	ЭтоИндивидуальныйПредприниматель = Ложь;
	ОбщегоНазначенияИСПереопределяемый.ПартнерОрганизацияЭтоИндивидуальныйПредприниматель(Контрагент, ЭтоИндивидуальныйПредприниматель);
	
	Возврат ЭтоИндивидуальныйПредприниматель;
	
КонецФункции

#Область ОбработкаОшибок

// Выполняет запись ошибки в журнал регистрации, добавляя имя события ГосИС если оно не задано.
//
// Параметры:
//  ТекстОшибки      - Строка           - текст ошибки.
//  ИмяСобытия       - Строка           - имя события.
//  ОбъектМетаданных - ОбъектМетаданных - объект метаданных с ошибкой.
//  Данные           - Произвольный     - объект данных с ошибкой.
//
Процедура ЗаписатьОшибкуВЖурналРегистрации(ТекстОшибки, ИмяСобытия = Неопределено, ОбъектМетаданных = Неопределено, Данные = Неопределено) Экспорт
	
	Если ИмяСобытия = Неопределено Тогда
		ИмяСобытия = НСтр("ru = 'ГосИС';
							|en = 'ГосИС'", ОбщегоНазначения.КодОсновногоЯзыка());
	КонецЕсли;
	
	ЗаписьЖурналаРегистрации(
		ИмяСобытия,
		УровеньЖурналаРегистрации.Ошибка,
		ОбъектМетаданных,
		Данные,
		ТекстОшибки);
	
КонецПроцедуры

#КонецОбласти

#Область ЧастичноеВыбытие

// Возвращает признак возможности для вида продукции участвовать в частичном выбытии.
// 
// Параметры:
//  ВидПродукции - ПеречислениеСсылка.ВидыПродукцииИС                - вид маркируемой продукции.
//  ОперацияИС   - ПеречислениеСсылка.ВидыОперацийИСМП, ПеречислениеСсылка.ВидыДокументовЕГАИС, Неопределено - вид операции ИСМП.
// Возвращаемое значение:
//  Булево - Вид продукци может выбывать частично.
Функция ПоддерживаетсяЧастичноеВыбытие(ВидПродукции, ОперацияИС = Неопределено) Экспорт
		
	Если ВидПродукции = Перечисления.ВидыПродукцииИС.Алкогольная Тогда
		Если Не ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ЕГАИС") Тогда
			Возврат Ложь;
		КонецЕсли;
		МодульОбщегоНазначенияЕГАИСКлиентСервер = ОбщегоНазначения.ОбщийМодуль("ОбщегоНазначенияЕГАИСКлиентСервер");
		Возврат МодульОбщегоНазначенияЕГАИСКлиентСервер.ПоддерживаетсяЧастичноеВыбытие(ВидПродукции, ОперацияИС);
	Иначе
		Если Не ОбщегоНазначенияИСПовтИсп.ЭтоПродукцияИСМП(ВидПродукции, Истина)
			Или Не ОбщегоНазначения.ПодсистемаСуществует("ГосИС.ИСМП") Тогда
			Возврат Ложь;
		КонецЕсли;
		МодульОбщегоНазначенияИСМПКлиентСерверПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбщегоНазначенияИСМПКлиентСерверПовтИсп");
		Возврат МодульОбщегоНазначенияИСМПКлиентСерверПовтИсп.ПоддерживаетсяЧастичноеВыбытие(
			ВидПродукции,
			ОперацияИС);
	КонецЕсли;
	
КонецФункции

Функция ВидыПродукцииИспользующиеВскрытыеПотребительскихУпаковок(ПродукцияИСМП = Истина, ПродукцияЕГАИС = Истина, ТолькоНастроеннаяНоменклатура = Истина) Экспорт
	
	ВозвращаемоеЗначение = Новый Массив();
	
	Если ПродукцияИСМП И ОбщегоНазначенияИС.ПодсистемаСуществует("ИСМП") Тогда
		
		МодульОбщегоНазначенияИСМПКлиентСерверПовтИсп = ОбщегоНазначения.ОбщийМодуль("ОбщегоНазначенияИСМПКлиентСерверПовтИсп");
		Для Каждого ВидПродукции Из МодульОбщегоНазначенияИСМПКлиентСерверПовтИсп.УчитываемыеВидыМаркируемойПродукции() Цикл
			Если ОбщегоНазначенияИСКлиентСерверПовтИсп.ПоддерживаетсяЧастичноеВыбытие(ВидПродукции)
				И (ТолькоНастроеннаяНоменклатура И ОбщегоНазначенияИС.ИспользуетсяЧастичноеВыбытие(ВидПродукции)
					Или Не ТолькоНастроеннаяНоменклатура) Тогда
				ВозвращаемоеЗначение.Добавить(ВидПродукции);
			КонецЕсли;
		КонецЦикла;
	
	КонецЕсли;
	
	ИмяФО                = "ВестиСведенияДляДекларацийПоАлкогольнойПродукции";
	ВидПродукцииАлкоголь = Перечисления.ВидыПродукцииИС.Алкогольная;
	Если ПродукцияЕГАИС И ОбщегоНазначенияИС.ПодсистемаСуществует("ЕГАИС")
		И ПолучитьФункциональнуюОпцию(ИмяФО)
		И ОбщегоНазначенияИСКлиентСерверПовтИсп.ПоддерживаетсяЧастичноеВыбытие(ВидПродукцииАлкоголь) Тогда
		
		Если ((ТолькоНастроеннаяНоменклатура И ОбщегоНазначенияИС.ИспользуетсяЧастичноеВыбытие(ВидПродукцииАлкоголь))
			Или Не ТолькоНастроеннаяНоменклатура) Тогда
			ВозвращаемоеЗначение.Добавить(ВидПродукцииАлкоголь);
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

// см. ОбщегоНазначения.ЗначениеРеквизитаОбъектов
//
Функция ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные = Ложь) Экспорт
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъектов(МассивСсылок, ИмяРеквизита, ВыбратьРазрешенные);
	
КонецФункции

// Классифицирует текущий сеанс, как сеанс, запущенный в фоновом задании в клиент-серверном варианте, в остальных
// случаях, сеанс имеет ту же файловую систему на стороне сервера, что и основной сеанс.
//	
// Возвращаемое значение:
// 	Булево - Описание
Функция ЭтоФоновоеЗаданиеНаСервере() Экспорт
	
	Если ПолучитьТекущийСеансИнформационнойБазы().ПолучитьФоновоеЗадание() <> Неопределено
		И Не ОбщегоНазначения.ИнформационнаяБазаФайловая() Тогда
		Возврат Истина;
	Иначе
		Возврат Ложь;
	КонецЕсли;
	
КонецФункции

// см. ОбщегоНазначенияИС.СертификатыПользователяДляПодписиПоОрганизации
Функция СертификатыПользователяДляПодписиПоОрганизации(Организация, ВключатьСертификатыБезОрганизации = Ложь, ВключатьСертификатыФЛ_СМЧД = Ложь) Экспорт
	Возврат ОбщегоНазначенияИС.СертификатыПользователяДляПодписиПоОрганизации(Организация, ВключатьСертификатыБезОрганизации, ВключатьСертификатыФЛ_СМЧД);
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// см. ОбщегоНазначения.ЗначенияРеквизитовОбъектов
Функция ЗначенияРеквизитовОбъектов(Ссылки, Знач Реквизиты, ВыбратьРазрешенные = Ложь, Знач КодЯзыка = Неопределено) Экспорт
	Возврат ОбщегоНазначения.ЗначенияРеквизитовОбъектов(Ссылки, Реквизиты, ВыбратьРазрешенные, КодЯзыка);
КонецФункции

#КонецОбласти
