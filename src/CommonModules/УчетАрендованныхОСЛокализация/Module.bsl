////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Аренда ОС".
// 
////////////////////////////////////////////////////////////////////////////////

//++ Локализация

#Область ПрограммныйИнтерфейс

#Область ПризнаниеВНУАрендныхПлатежей

// Признает услуги по аренде в расходах налогового учета.
// 
// Параметры:
// 	СтруктураШапки - Структура - 
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц -
// 	Движения - КоллекцияДвижений - 
// 	Отказ - Булево - 
Процедура ПризнаниеВНУАрендныхПлатежей(СтруктураШапки, МенеджерВременныхТаблиц, Движения, Отказ) Экспорт
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНалогаНаПрибыль",
		СтруктураШапки.Организация,
		СтруктураШапки.Дата);
	
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли; 
	
	Если ПараметрыУчетнойПолитики = Неопределено
		ИЛИ НЕ ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
		Возврат;
	КонецЕсли;
	
	КлючеваяОперация = "Лизинг.ПризнаниеВНУАрендныхПлатежей";
	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации(КлючеваяОперация);
	КоличествоОбработанныхДанных = 0;
	
	ПараметрыПроведения = ПодготовитьПараметрыПризнаниеВНУАрендныхПлатежей(СтруктураШапки);
	
	ТаблицаЗатратПоАмортизации = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПустаяТаблицаАмортизации();
	
	ПараметрыРасходыПоАренднымПлатежамНУ = ПодготовитьТаблицыРасходовПоАренднымПлатежамНУ(
											ПараметрыПроведения.ТаблицаОС, 
											ПараметрыПроведения.АрендныеПлатежи, 
											ТаблицаЗатратПоАмортизации, 
											КоличествоОбработанныхДанных,
											Отказ);
	
	Если НЕ Отказ Тогда
	
		// Формирование данных для проведения по регистрам опер учета на основании рассчитанных расходов по арендным платежам.
		ТекстыЗапроса = Новый СписокЗначений;
		ТекстЗапросаВтРасходыПоАренднымПлатежам(ТекстыЗапроса);
		ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейПрочиеРасходы(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейПартииПрочихРасходов(ТекстыЗапроса);
		ТекстЗапросаПризнаниеВНУАрендныхПлатежейСтоимостьОС(ТекстыЗапроса);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("РасходыПоАренднымПлатежам", ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРасходыПоАренднымПлатежамНУ);
		Запрос.УстановитьПараметр("КорректировкаАмортизации", ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаКорректировкаАмортизации);
		Запрос.УстановитьПараметр("Период", СтруктураШапки.Дата);
		Запрос.УстановитьПараметр("Организация", СтруктураШапки.Организация);
		Запрос.УстановитьПараметр("Ссылка", СтруктураШапки.Ссылка);
		Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(СтруктураШапки.Дата));
		
		ТаблицыДляДвижений = ПроведениеДокументов.ИнициализироватьДанныеДокументаДляПроведения(
			Запрос,
			ТекстыЗапроса,
			Неопределено);
		
		// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
		
		// По регистру ПрочиеРасходы
		ДоходыИРасходыСервер.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
		
		// По регистру ПартииПрочихРасходов
		ПартионныйУчетСервер.ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ);
		
		// По регистру СтоимостьОС
		ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "СтоимостьОС");
		
		// По регистрам РасчетРасходовПоАренде
		СформироватьДвиженияРасчетРасходовПоАренде(
			ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРасходыПоАренднымПлатежамНУ, 
			ПараметрыРасходыПоАренднымПлатежамНУ.ТаблицаРеквизиты,
			Движения, 
			Отказ);
		
	КонецЕсли;
		
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, КоличествоОбработанныхДанных);
		
КонецПроцедуры

// Определяет период, в котором требуется выполнение операции "Признание в НУ арендных платежей"
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - 
// 	НачалоПериода - Дата -
// Возвращаемое значение:
// 	Дата - 
Функция СледующийПериодПризнанияВНУАрендныхПлатежей(Организация, НачалоПериода) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДоговорыАренды.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ ВТ_ДоговорыАренды
	|ИЗ
	|	Справочник.ДоговорыАренды КАК ДоговорыАренды
	|ГДЕ
	|	(ДоговорыАренды.ДатаОкончанияДействия >= &НачалоМесяца
	|		ИЛИ ДоговорыАренды.ДатаОкончанияДействия = ДАТАВРЕМЯ(1, 1, 1))
	|	И ДоговорыАренды.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|	И ДоговорыАренды.Организация = &Организация
	|	И ДоговорыАренды.УчитыватьПредметыАрендыВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(УсловияДоговоровАренды.Период), НЕОПРЕДЕЛЕНО) КАК Период
	|ИЗ 
	|	(ВЫБРАТЬ ПЕРВЫЕ 1
	|		&НачалоМесяца КАК Период
	|	ИЗ
	|		РегистрСведений.УсловияДоговоровАренды.СрезПоследних(
	|				&КонецПредыдущегоМесяца, 
	|				Договор В
	|					(ВЫБРАТЬ
	|						ВТ_ДоговорыАренды.Ссылка
	|					ИЗ
	|						ВТ_ДоговорыАренды КАК ВТ_ДоговорыАренды)) КАК УсловияДоговоровАренды
	|	ГДЕ
	|		УсловияДоговоровАренды.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		МИНИМУМ(УсловияДоговоровАренды.Период) КАК Период
	|	ИЗ
	|		РегистрСведений.УсловияДоговоровАренды КАК УсловияДоговоровАренды
	|	ГДЕ
	|		УсловияДоговоровАренды.Период > &КонецПредыдущегоМесяца
	|		И УсловияДоговоровАренды.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияДоговоровКонтрагентов.Действует)
	|		И УсловияДоговоровАренды.Активность
	|		И УсловияДоговоровАренды.Договор В
	|					(ВЫБРАТЬ
	|						ВТ_ДоговорыАренды.Ссылка
	|					ИЗ
	|						ВТ_ДоговорыАренды КАК ВТ_ДоговорыАренды)) КАК УсловияДоговоровАренды";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("КонецПредыдущегоМесяца", НачалоМесяца(НачалоПериода)-1);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Период;
	КонецЕсли; 

	Возврат Неопределено;
	
КонецФункции

// Возвращает текст запроса с временной таблицей ВтРасходыПоАренднымПлатежам
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "ВтРасходыПоАренднымПлатежам".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаРасходыПоАренднымПлатежам() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	0 КАК СуммаПлатежаНУ,
	|	0 КАК КорректировкаАмортизацииНУ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтРасходыПоАренднымПлатежам
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Возвращает текст запроса с временной таблицей ВтКорректировкаАмортизации
//
// Возвращаемое значение:
// 		Строка - Текст запроса для получения пустой временной таблицы "ВтРасходыПоАренднымПлатежам".
//
Функция ТекстЗапросаПустаяВременнаяТаблицаКорректировкаАмортизации() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка) КАК Контрагент,
	|	ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка) КАК ДоговорКонтрагента,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК ПодразделениеЗатрат,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаРасходов,
	|	0 КАК КорректировкаАмортизацииНУ,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтКорректировкаАмортизации
	|ГДЕ
	|	ЛОЖЬ";
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти

#КонецОбласти

//-- Локализация

#Область СлужебныеПроцедурыИФункции

//++ Локализация

#Область ПризнаниеВНУАрендныхПлатежей

Процедура СформироватьЗаданиеПризнаниеВНУАрендныхПлатежей(Документ, ДанныеТаблиц, ОпределитьПериод = Ложь, ЭтоИзменениеУчетнойПолитики = Ложь)

	Если ОтложенноеФормированиеДвиженийВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ)
		ИЛИ ЗакрытиеРасходовОтВыбытияОС.ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли; 

	ИспользуемыеВременныеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ДанныеТаблиц.МенеджерВременныхТаблиц);

	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("СтоимостьОС");
	СписокТаблиц.Добавить("АмортизацияОС");
	СписокТаблиц.Добавить("АрендованныеОС_Лизинг");
	СписокТаблиц.Добавить("УчетнаяПолитикаОрганизаций_Лизинг");
	СписокТаблиц.Добавить("ПоступлениеУслугПоАренде");
	
	ОпределитьИзмененияВРегистреАрендованныеОС(ДанныеТаблиц);
	
	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, ДанныеТаблиц);
	
	Если ТекстОбъединенияДанных = "" Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаВеденияРеглУчета
	|						И &ДатаНачалаВеденияРеглУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|					ТОГДА &ДатаНачалаВеденияРеглУчета
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ВводОстатковВнеоборотныхАктивов2_4)
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатковВнеоборотныхАктивов24.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				КОГДА ТИПЗНАЧЕНИЯ(ИзмененныеДанные.Документ) = ТИП(Документ.ПринятиеКУчетуОС)
	|					ТОГДА ДОБАВИТЬКДАТЕ(ИзмененныеДанные.Период, МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	(" + ТекстОбъединенияДанных + ") КАК ИзмененныеДанные
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ВводОстатковВнеоборотныхАктивов
	|	ПО ВводОстатковВнеоборотныхАктивов.Ссылка = ИзмененныеДанные.Документ
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ВводОстатковВнеоборотныхАктивов24
	|	ПО ВводОстатковВнеоборотныхАктивов24.Ссылка = ИзмененныеДанные.Документ
	|
	|ГДЕ
	|	НЕ &ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА
	|	И НЕ &ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДатаНачалаВеденияРеглУчета", Константы.ДатаНачалаВеденияРеглУчета.Получить());
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриРасчетеСтоимостиВНА", РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриВыполненииОперации(Документ));
	Запрос.УстановитьПараметр("ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА", РасчетСтоимостиВНА.ДвиженияЗаписываютсяПриАктуализацияДвиженийПоВНА(Документ));
	
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Если НЕ ЭтоИзменениеУчетнойПолитики Тогда
			
			ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
				"НастройкиУчетаНалогаНаПрибыль",
				Выборка.Организация,
				Выборка.Месяц);
				
			Если ПараметрыУчетнойПолитики = Неопределено 
				ИЛИ НЕ ПараметрыУчетнойПолитики.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи Тогда
				Продолжить;
			КонецЕсли;
			
		КонецЕсли; 
			
		Если ОпределитьПериод Тогда
			ПериодЗадания = СледующийПериодПризнанияВНУАрендныхПлатежей(Выборка.Организация, Выборка.Месяц);
		Иначе
			ПериодЗадания = Выборка.Месяц;
		КонецЕсли; 
		
		Если ЗначениеЗаполнено(ПериодЗадания) Тогда
			
			РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписьРегистра(
				НачалоМесяца(ПериодЗадания), 
				Выборка.Документ, 
				Выборка.Организация, 
				Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеАрендныхПлатежей);
				
		КонецЕсли; 
				
	КонецЦикла; 
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ДанныеТаблиц.МенеджерВременныхТаблиц,, ИспользуемыеВременныеТаблицы);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура ОпределитьИзмененияВРегистреАрендованныеОС(ДанныеТаблиц)
	
	Если ДанныеТаблиц.МенеджерВременныхТаблиц.Таблицы.Найти("АрендованныеОСИзменение") = Неопределено Тогда
		Возврат;	
	КонецЕсли;
		
	ТекстЗапроса =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Таблица.Период КАК Период,
	|	ВЫРАЗИТЬ(Таблица.Договор КАК Справочник.ДоговорыАренды).Организация КАК Организация,
	|	Таблица.ОсновноеСредство КАК ОсновноеСредство,
	|	Таблица.Документ КАК Документ
	|ПОМЕСТИТЬ АрендованныеОС_ЛизингИзменение
	|ИЗ
	|	АрендованныеОСИзменение КАК Таблица
	|ГДЕ
	|	Таблица.Договор ССЫЛКА Справочник.ДоговорыАренды
	|	И Таблица.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ДанныеТаблиц.МенеджерВременныхТаблиц;
		
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	ДанныеТаблиц.Вставить("АрендованныеОС_ЛизингИзменение", Выборка.Количество > 0);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПризнаниеВНУАрендныхПлатежей(СтруктураШапки)

	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	Содержание = "Лизинговые платежи";
	
	Запрос.УстановитьПараметр("Ссылка",     СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("Организация",СтруктураШапки.Организация);
	Запрос.УстановитьПараметр("КонДата",    СтруктураШапки.КонДата);
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(СтруктураШапки.КонДата));
	Запрос.УстановитьПараметр("Содержание", Содержание);
	
	НомераТаблиц = Новый Структура;
	Запрос.Текст = 
		ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
		+ ТекстЗапросаТаблицаОС(НомераТаблиц);
					
	Результат = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции

Функция ТекстЗапросаРеквизитыАрендныеПлатежи(НомераТаблиц)
	
	НомераТаблиц.Вставить("АрендныеПлатежи", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	РегламентнаяОперация.Дата КАК ДатаРасчета,
	|	ИСТИНА КАК ВыдаватьСообщения,
	|	"""" КАК ИмяСписка,
	|	&Содержание КАК Содержание
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Возврат ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	
КонецФункции

Функция ТекстЗапросаТаблицаОС(НомераТаблиц)
	
	НомераТаблиц.Вставить("ТаблицаОС", НомераТаблиц.Количество() + 2);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов2_4 КАК ДокВводОстатков24
	|		ПО ДокВводОстатков24.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < &НачалоМесяца
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &НачалоМесяца
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков24.Дата, МЕСЯЦ) < &НачалоМесяца)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|			И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоМесяца И &КонДата
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	1 КАК НомерСтроки,
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонДата,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Договор <> ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)
	|	И АрендованныеОС.Договор ССЫЛКА Справочник.ДоговорыАренды";
	
	Возврат ТекстЗапроса + ОбщегоНазначения.РазделительПакетаЗапросов();
	
КонецФункции

Процедура ТекстЗапросаВтРасходыПоАренднымПлатежам(ТекстыЗапроса)
	
	ИмяТаблицы = "ВтРасходыПоАренднымПлатежам";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация                                  КАК Организация,
	|	РасходыПоАренднымПлатежам.ОсновноеСредство    КАК ОсновноеСредство,
	|	РасходыПоАренднымПлатежам.Контрагент          КАК Контрагент,
	|	ВЫРАЗИТЬ(РасходыПоАренднымПлатежам.Договор КАК Справочник.ДоговорыАренды) КАК Договор,
	|	РасходыПоАренднымПлатежам.Подразделение       КАК Подразделение,
	|	РасходыПоАренднымПлатежам.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	РасходыПоАренднымПлатежам.СуммаПлатежаНУ      КАК СуммаПлатежаНУ,
	|	РасходыПоАренднымПлатежам.КорректировкаАмортизацииНУ        КАК КорректировкаАмортизацииНУ,
	|	РасходыПоАренднымПлатежам.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	РасходыПоАренднымПлатежам.НаправлениеДеятельностиЗатрат     КАК НаправлениеДеятельностиЗатрат,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.РасходыЛизинговыеПлатежи) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтРасходыПоАренднымПлатежам
	|ИЗ
	|	&РасходыПоАренднымПлатежам КАК РасходыПоАренднымПлатежам
	|ГДЕ
	|	РасходыПоАренднымПлатежам.СуммаПлатежаНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаВтКорректировкаАмортизации(ТекстыЗапроса)

	ИмяТаблицы = "ВтКорректировкаАмортизации";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Организация                                  КАК Организация,
	|	КорректировкаАмортизации.ОсновноеСредство    КАК ОсновноеСредство,
	|	КорректировкаАмортизации.Контрагент          КАК Контрагент,
	|	ВЫРАЗИТЬ(КорректировкаАмортизации.Договор КАК Справочник.ДоговорыАренды) КАК Договор,
	|	КорректировкаАмортизации.Подразделение       КАК Подразделение,
	|	КорректировкаАмортизации.ПодразделениеЗатрат КАК ПодразделениеЗатрат,
	|	КорректировкаАмортизации.АналитикаРасходов   КАК АналитикаРасходов,
	|	КорректировкаАмортизации.КорректировкаАмортизацииНУ        КАК КорректировкаАмортизацииНУ,
	|	КорректировкаАмортизации.НаправлениеДеятельности           КАК НаправлениеДеятельности,
	|	КорректировкаАмортизации.НаправлениеДеятельностиЗатрат     КАК НаправлениеДеятельностиЗатрат,
	|	ВЫРАЗИТЬ(КорректировкаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий
	|ПОМЕСТИТЬ ВтКорректировкаАмортизации
	|ИЗ
	|	&КорректировкаАмортизации КАК КорректировкаАмортизации
	|ГДЕ
	|	КорректировкаАмортизации.КорректировкаАмортизацииНУ <> 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);

КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейПрочиеРасходы(ТекстыЗапроса)
	
	ИмяТаблицы = "ПрочиеРасходы";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	-ВтДанныеРасходы.СуммаПлатежаНУ               КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов             КАК АналитикаРасходов,
	|	-ВтДанныеРасходы.КорректировкаАмортизацииНУ   КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл <> ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейПартииПрочихРасходов(ТекстыЗапроса)
	
	ИмяТаблицы = "ПартииПрочихРасходов";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	НЕОПРЕДЕЛЕНО                                  КАК АналитикаРасходов,
	|	&Ссылка                                       КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	-ВтДанныеРасходы.СуммаПлатежаНУ               КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ПодразделениеЗатрат           КАК Подразделение,
	|	ВтДанныеРасходы.НаправлениеДеятельностиЗатрат КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СтатьяРасходов                КАК СтатьяРасходов,
	|	ВтДанныеРасходы.АналитикаРасходов             КАК АналитикаРасходов,
	|	&Ссылка                                       КАК ДокументПоступленияРасходов,
	|	ВтДанныеРасходы.АналитикаУчетаПартий          КАК АналитикаУчетаПартий,
	|	-ВтДанныеРасходы.КорректировкаАмортизацииНУ   КАК ВременнаяРазница,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|ГДЕ
	|	ВтДанныеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров)
	|	И ВтДанныеРасходы.СтатьяРасходов.ПринятиеКНалоговомуУчету";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	
КонецПроцедуры

Процедура ТекстЗапросаПризнаниеВНУАрендныхПлатежейСтоимостьОС(ТекстыЗапроса)
	
	#Область втПорядокУчетаОС
	ИмяТаблицы = "втСписокОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Т.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втСписокОС
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК Т
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Т.ОсновноеСредство
	|ИЗ
	|	ВтКорректировкаАмортизации КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

	#Область втПорядокУчетаОС
	ИмяТаблицы = "втПорядокУчетаОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.ОсновноеСредство          КАК ОсновноеСредство,
	|	ДанныеРегистра.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ДанныеРегистра.НаправлениеДеятельности   КАК НаправлениеДеятельности
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК Т)) КАК ДанныеРегистра
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

	#Область втМестонахождениеОС
	ИмяТаблицы = "втМестонахождениеОС";
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ДанныеРегистра.ОсновноеСредство  КАК ОсновноеСредство,
	|	ДанныеРегистра.Местонахождение   КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						Т.ОсновноеСредство
	|					ИЗ
	|						втСписокОС КАК Т)) КАК ДанныеРегистра
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти
	
	#Область СтоимостьОС
	ИмяТаблицы = "СтоимостьОС";

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ОсновноеСредство              КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.ПодразделениеЗатрат <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВтДанныеРасходы.ПодразделениеЗатрат
	|		ИНАЧЕ втМестонахождениеОС.Местонахождение
	|	КОНЕЦ                                         КАК Подразделение,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.СуммаПлатежаНУ                КАК НеУчитываемаяСтоимостьНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтРасходыПоАренднымПлатежам КАК ВтДанныеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втМестонахождениеОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втПорядокУчетаОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|ГДЕ
	|	ВтДанныеРасходы.СуммаПлатежаНУ <> 0
	|	И &ИспользуетсяУправлениеВНА_2_4
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)        КАК ВидДвижения,
	|	&Период                                       КАК Период,
	|	ВтДанныеРасходы.Организация                   КАК Организация,
	|	ВтДанныеРасходы.ОсновноеСредство              КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА ВтДанныеРасходы.ПодразделениеЗатрат <> ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)
	|			ТОГДА ВтДанныеРасходы.ПодразделениеЗатрат
	|		ИНАЧЕ втМестонахождениеОС.Местонахождение
	|	КОНЕЦ                                         КАК Подразделение,
	|	втПорядокУчетаОС.ГруппаФинансовогоУчета       КАК ГруппаФинансовогоУчета,
	|	втПорядокУчетаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|	ВтДанныеРасходы.КорректировкаАмортизацииНУ    КАК НеУчитываемаяСтоимостьНУ,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПризнаниеВНУАрендныхПлатежей) КАК ХозяйственнаяОперация
	|ИЗ
	|	ВтКорректировкаАмортизации КАК ВтДанныеРасходы
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втМестонахождениеОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втПорядокУчетаОС.ОсновноеСредство = ВтДанныеРасходы.ОсновноеСредство
	|ГДЕ
	|	ВтДанныеРасходы.КорректировкаАмортизацииНУ <> 0
	|	И &ИспользуетсяУправлениеВНА_2_4";
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяТаблицы);
	#КонецОбласти

КонецПроцедуры

Процедура СформироватьДвиженияРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты, Движения, Отказ)

	Параметры = ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, 
		ТаблицаРеквизиты);

	Если Параметры.Реквизиты.Количество() = 0 
		ИЛИ Параметры.ТаблицаРасходыПоАренднымПлатежамНУ.Количество() = 0 Тогда
		
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	ТаблицаРасходыПоАренднымПлатежамНУ.Свернуть(
		"ОсновноеСредство, Контрагент, Договор",
		"АмортизацияБУ, АмортизацияНУ, АмортизацияВР, АмортизацияПР, КорректировкаАмортизацииНУ,
		|СуммаПлатежаБезНДС, СуммаПлатежаНУ");
	
	Для Каждого СтрокаТаблицы Из ТаблицаРасходыПоАренднымПлатежамНУ Цикл
	
		Если СтрокаТаблицы.АмортизацияБУ = 0
			И СтрокаТаблицы.АмортизацияНУ = 0
			И СтрокаТаблицы.АмортизацияВР = 0
			И СтрокаТаблицы.АмортизацияПР = 0
			И СтрокаТаблицы.КорректировкаАмортизацииНУ = 0
			И СтрокаТаблицы.СуммаПлатежаБезНДС = 0
			И СтрокаТаблицы.СуммаПлатежаНУ = 0 Тогда
			Продолжить;
		КонецЕсли;
	
		Движение = Движения.РасчетРасходовПоАренде.Добавить();
		
		ЗаполнитьЗначенияСвойств(Движение, СтрокаТаблицы);
		Движение.ПериодРасчета 	= Реквизиты.ДатаРасчета;
		Движение.Организация	= Реквизиты.Организация;
		
	КонецЦикла;
				
	Движения.РасчетРасходовПоАренде.Записывать = Истина;
	
КонецПроцедуры

Функция ПодготовитьТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат, КоличествоОбработанныхДанных, Отказ)

	Параметры = ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат);

	Реквизиты = Параметры.Реквизиты[0];
	
	ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);

	ТаблицаРасходыПоАренднымПлатежамНУ = ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ();
	ТаблицаЗатратПоАмортизации = Параметры.ТаблицаЗатрат;
	
	ПараметрыРасходовПоАренднымПлатежам = Новый Структура;
	
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРеквизиты", Параметры.Реквизиты);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ", ТаблицаРасходыПоАренднымПлатежамНУ);
	ПараметрыРасходовПоАренднымПлатежам.Вставить("ТаблицаКорректировкаАмортизации", ТаблицаЗатратПоАмортизации);

	Если Не ПлательщикНалогаНаПрибыль Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;
	
	ТаблицаАрендныхПлатежей = ПодготовитьТаблицуАрендныхПлатежей(
								Параметры.ТаблицаОС, 
								Реквизиты, 
								КоличествоОбработанныхДанных, 
								Отказ);
	
	Если Отказ Тогда 
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Оставим в таблице затрат по амортизации только строки, 
	// относящиеся к ОС, полученным в аренду, т.е. учитываемые на субсчетах по аренде.
	Счет02_03 = ПланыСчетов.Хозрасчетный.АмортизацияАрендованногоИмущества;
	
	Инд = ТаблицаЗатратПоАмортизации.Количество() - 1;
	Пока Инд >= 0 Цикл
		СтрокаТаблицы = ТаблицаЗатратПоАмортизации[Инд];
		Если НЕ БухгалтерскийУчетПовтИсп.СчетВИерархии(СтрокаТаблицы.СчетАмортизации, Счет02_03) Тогда
			ТаблицаЗатратПоАмортизации.Удалить(Инд);
		КонецЕсли;
		Инд = Инд - 1;
	КонецЦикла;

	// Если нет арендованных ОС, то больше ничего не делаем.
	Если ТаблицаЗатратПоАмортизации.Количество() + ТаблицаАрендныхПлатежей.Количество() = 0 Тогда
		Возврат ПараметрыРасходовПоАренднымПлатежам;
	КонецЕсли;

	// Амортизация по некоторым объектам ОС могла быть рассчитана ранее в течение месяца 
	// при перемещениях ОС, эти суммы необходимо объединить с текущим расчетом.
	МассивОСвАренде = ТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ОсновноеСредство");
	ОбщегоНазначенияБПВызовСервера.УдалитьПовторяющиесяЭлементыМассива(МассивОСвАренде);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",     Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",   НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПериода",    КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("Регистратор",     Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("МассивОСвАренде", МассивОСвАренде);
	
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	ИспользуетсяУправлениеВНА_2_4 = ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.Период);
	
	ТекстыЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, 
	|				ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В (&МассивОСвАренде)) КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, 
	|				ПорядокУчетаОС.СчетНачисленияАмортизации) КАК СчетНачисленияАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|ГДЕ
	|	ПорядокУчетаОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПорядокУчетаОС.Организация = &Организация
	|	И ПорядокУчетаОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (ПорядокУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ ПорядокУчетаОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор
	|ПОМЕСТИТЬ ВТ_АрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В (&МассивОСвАренде)) КАК АрендованныеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Если ИспользуетсяУправлениеВНА_2_4 Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.ОсновноеСредство КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияРегл) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияНУ) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияВР) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.АмортизацияПР) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрНакопления.АмортизацияОС КАК РанееНачисленнаяАмортизация
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
		|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
		|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаАмортизации.АналитикаУчета = РанееНачисленнаяАмортизация.ГруппаФинансовогоУчета
		|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
		|ГДЕ
		|	РанееНачисленнаяАмортизация.Период МЕЖДУ &НачалоПериода И &КонецПериода
		|	И РанееНачисленнаяАмортизация.Регистратор ССЫЛКА Документ.АмортизацияОС2_4
		|	И РанееНачисленнаяАмортизация.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
		|	И РанееНачисленнаяАмортизация.Организация = &Организация
		|	И РанееНачисленнаяАмортизация.ОсновноеСредство В (&МассивОСвАренде)
		|	И РанееНачисленнаяАмортизация.Активность
		|
		|СГРУППИРОВАТЬ ПО
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)),
		|	РанееНачисленнаяАмортизация.ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельности
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	Иначе
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	РанееНачисленнаяАмортизация.СчетКт КАК СчетАмортизации,
		|	РанееНачисленнаяАмортизация.СубконтоКт1 КАК ОсновноеСредство,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт КАК Подразделение,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт КАК НаправлениеДеятельности,
		|	СУММА(РанееНачисленнаяАмортизация.Сумма) КАК СуммаБУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаНУКт) КАК СуммаНУ,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаВРКт) КАК СуммаВР,
		|	СУММА(РанееНачисленнаяАмортизация.СуммаПРКт) КАК СуммаПР
		|ПОМЕСТИТЬ ВТ_РанееНачисленнаяАмортизация
		|ИЗ
		|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
		|			&НачалоПериода,
		|			&КонецПериодаГраница,
		|			Организация = &Организация
		|				И СчетКт В
		|					(ВЫБРАТЬ
		|						СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|					ИЗ
		|						СчетаБухгалтерскогоУчетаОС)
		|				И НЕ СчетДт В
		|						(ВЫБРАТЬ
		|							СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации
		|						ИЗ
		|							СчетаБухгалтерскогоУчетаОС)
		|				И Регистратор <> &Регистратор
		|				И СубконтоКт1 В (&МассивОСвАренде),
		|			,
		|			) КАК РанееНачисленнаяАмортизация
		|
		|СГРУППИРОВАТЬ ПО
		|	РанееНачисленнаяАмортизация.СчетКт,
		|	РанееНачисленнаяАмортизация.СубконтоКт1,
		|	РанееНачисленнаяАмортизация.ПодразделениеКт,
		|	РанееНачисленнаяАмортизация.НаправлениеДеятельностиКт
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство";
		
		ТекстыЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли; 
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&НачалоПериода,
	|				ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|					И Организация = &Организация
	|					И ОсновноеСредство В (&МассивОСвАренде)) КАК МестонахождениеОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	МестонахождениеОС.Организация,
	|	МестонахождениеОС.ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение
	|ИЗ
	|	РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И МестонахождениеОС.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И МестонахождениеОС.Организация = &Организация
	|	И МестонахождениеОС.ОсновноеСредство В (&МассивОСвАренде) 
	|	И (МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ МестонахождениеОС.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство    КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ    КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ КАК АналитикаРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходов
	|                                                                
	|ПОМЕСТИТЬ ВТ_СпособыОтраженияРасходовБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И Организация = &Организация
	|				И ОсновноеСредство В (&МассивОСвАренде)) КАК ПорядокУчетаОСБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство      КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.СтатьяРасходовНУ      КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовНУ   КАК АналитикаРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовНУ КАК СпособОтраженияРасходов                                                                
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ОсновноеСредство В (&МассивОСвАренде)
	|	И (ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ПринятиеКУчетуОС2_4)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СпособОтраженияРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СпособыОтраженияРасходовБУ.ОсновноеСредство    КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение              КАК Подразделение,
	|	СпособыОтраженияРасходовБУ.СтатьяРасходов      КАК СтатьяРасходов,
	|	СпособыОтраженияРасходовБУ.АналитикаРасходов   КАК АналитикаРасходов,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ВТ_АрендованныеОС.НаправлениеДеятельности КАК НаправлениеДеятельности
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендованныеОС КАК ВТ_АрендованныеОС
	|		ПО (ВТ_АрендованныеОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Организация = &Организация)
	|			И (МестонахождениеОС.ОсновноеСредство = СпособыОтраженияРасходовБУ.ОсновноеСредство)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		СтатьяРасходовАмортизационнойПремии,
	|		АналитикаРасходовАмортизационнойПремии,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.Амортизация.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		NULL,
	|		NULL,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		NULL
	|	) КАК ОтражениеАмортизационныхРасходов
	|ИЗ
	|	ВТ_СпособыОтраженияРасходовБУ КАК СпособыОтраженияРасходовБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС2_4 КАК ИзменениеПараметровОС
	|		ПО СпособыОтраженияРасходовБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РанееНачисленнаяАмортизация.СчетАмортизации,
	|	ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство,
	|	ВТ_АрендованныеОС.Контрагент,
	|	ВТ_АрендованныеОС.Договор,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом,
	|	ВТ_СпособыОтраженияРасходовБУ.СпособОтраженияРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.СтатьяРасходов,
	|	ВТ_СпособыОтраженияРасходовБУ.АналитикаРасходов,
	|	ВТ_РанееНачисленнаяАмортизация.Подразделение,
	|	ВТ_АрендованныеОС.НаправлениеДеятельности,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаБУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаНУ,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаВР,
	|	ВТ_РанееНачисленнаяАмортизация.СуммаПР
	|ИЗ
	|	ВТ_РанееНачисленнаяАмортизация КАК ВТ_РанееНачисленнаяАмортизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендованныеОС КАК ВТ_АрендованныеОС
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_АрендованныеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_СпособыОтраженияРасходовБУ КАК ВТ_СпособыОтраженияРасходовБУ
	|		ПО ВТ_РанееНачисленнаяАмортизация.ОсновноеСредство = ВТ_СпособыОтраженияРасходовБУ.ОсновноеСредство";
	
	ТекстыЗапросов.Добавить(ТекстЗапроса);
	
	Запрос.Текст = СтрСоединить(ТекстыЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	СпособыОтраженияРасходовБУ = РезультатЗапроса[РезультатЗапроса.ВГраница()-2].Выгрузить();
	СпособыОтраженияРасходовБУ.Индексы.Добавить("ОсновноеСредство");
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()-1].Выбрать();
	Пока Выборка.Следующий() Цикл
		СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
	КонецЦикла;
	
	Выборка = РезультатЗапроса[РезультатЗапроса.ВГраница()].Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	Пока Выборка.Следующий() Цикл
		
		Если Выборка.СпособОтраженияРасходовЗаданДокументом Тогда
			
			ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(Выборка.СпособОтраженияРасходов);
		
			МассивБазы = Новый Массив;
			Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
				МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
			КонецЦикла;
			
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Выборка.СуммаПР, МассивБазы);
				
			Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
				
				СтрокаРаспределения = ТаблицаРаспределения[Сч];
			
				СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
				
				СтрокаТаблицы.СуммаБУ = ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
				СтрокаТаблицы.СуммаНУ = ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
				СтрокаТаблицы.СуммаВР = ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
				СтрокаТаблицы.СуммаПР = ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						
				СтрокаТаблицы.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
				СтрокаТаблицы.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
				СтрокаТаблицы.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
				СтрокаТаблицы.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
			КонецЦикла;
			
		Иначе
			
			СтрокаТаблицы = ТаблицаЗатратПоАмортизации.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			СтрокаТаблицы.ПодразделениеЗатрат = Выборка.Подразделение;
			СтрокаТаблицы.НаправлениеДеятельностиЗатрат = Выборка.НаправлениеДеятельности;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗатратПоАмортизации.Свернуть("АналитикаРасходов,Договор,Контрагент,
											|НаправлениеДеятельности,НаправлениеДеятельностиЗатрат,
											|ОсновноеСредство,Подразделение,ПодразделениеЗатрат,СтатьяРасходов,СчетАмортизации", 
										"КорректировкаАмортизацииНУ,СуммаБУ,СуммаВР,СуммаНУ,СуммаПР");
	
	// Определим общую сумму платежа в разрезе объекта ОС.
	ТаблицаАрендныхПлатежейПоОС = ТаблицаАрендныхПлатежей.Скопировать(, 
		"ОсновноеСредство, Контрагент, Договор,
		|СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	// Добавим в таблицу все ОС из таблицы затрат по амортизации для получения полного списка ОС.
	Для Каждого СтрокаТаблицы Из ТаблицаЗатратПоАмортизации Цикл
		НоваяСтрока = ТаблицаАрендныхПлатежейПоОС.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
	КонецЦикла;
	
	ТаблицаАрендныхПлатежейПоОС.Свернуть("ОсновноеСредство, Контрагент, Договор", 
		"СуммаПлатежаБезНДС, ВалютнаяСуммаНачальныйОстаток, ВалютнаяСуммаОборотКт");
	
	ТаблицаЗатратПоАмортизации.Индексы.Добавить("ОсновноеСредство");
	ТаблицаАрендныхПлатежей.Индексы.Добавить("ОсновноеСредство");
		
	СтруктураПоискаОС = Новый Структура("ОсновноеСредство");
	МассивБазы = Новый Массив;
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ТаблицаАрендныхПлатежейПоОС.Количество();
	
	Для Каждого СтрокаТаблицыАрендныхПлатежейПоОС Из ТаблицаАрендныхПлатежейПоОС Цикл
	
		СтруктураПоискаОС.ОсновноеСредство = СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство;
		
		НайденныеСтрокиАмортизации = ТаблицаЗатратПоАмортизации.НайтиСтроки(СтруктураПоискаОС);
		МассивБазы.Очистить();
		СуммаПлатежаНУ = 0;
		АмортизацияБУ = 0;
		АмортизацияНУ = 0;
		АмортизацияВР = 0;
		АмортизацияПР = 0;
		КорректировкаАмортизацииНУ = 0;
		
		Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
			АмортизацияБУ = АмортизацияБУ + НайденнаяСтрокаАмортизации.СуммаБУ;
			АмортизацияНУ = АмортизацияНУ + НайденнаяСтрокаАмортизации.СуммаНУ;
			АмортизацияВР = АмортизацияВР + НайденнаяСтрокаАмортизации.СуммаВР;
			АмортизацияПР = АмортизацияПР + НайденнаяСтрокаАмортизации.СуммаПР;
			МассивБазы.Добавить(НайденнаяСтрокаАмортизации.СуммаНУ);
		КонецЦикла;
		
		СуммаЗадолженностиПоАренде = СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаНачальныйОстаток 
			+ СтрокаТаблицыАрендныхПлатежейПоОС.ВалютнаяСуммаОборотКт;
			
		// Чтобы совокупная величина расходов НУ, состоящая из арендных платежей
		// и амортизации предметов лизинга, не превысила общей суммы выплат по договору, проверяем:
		//  - расходы в НУ относим только в период действия договора (пока задолженность по аренде > 0)
		//  - если амортизация превышает платежи текущего месяца, то суммы превышения относим на ВР или ПР.
		Если ПлательщикНалогаНаПрибыль Тогда
			Если СуммаЗадолженностиПоАренде > 0 Тогда
				СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС - АмортизацияНУ;
				
				Если СуммаПлатежаНУ < 0 Тогда
					Если СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС < 0 Тогда
						// Корректировка арендных платежей в течение месяца, учитываем только ее.
						СуммаПлатежаНУ = СтрокаТаблицыАрендныхПлатежейПоОС.СуммаПлатежаБезНДС;
					Иначе
						// Превышение амортизации НУ над суммой арендных платежей.
						// Надо скорректировать сумму амортизации НУ на величину превышения.
						КорректировкаАмортизацииНУ = СуммаПлатежаНУ;

						МассивРаспределения = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
						Если МассивРаспределения <> Неопределено Тогда
							Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
								
								НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = МассивРаспределения[Инд];
								
							КонецЦикла;
						КонецЕсли;
						СуммаПлатежаНУ = 0;
					КонецЕсли;
				КонецЕсли;
			Иначе
				// На начало месяца задолженности по аренде не было и в течение месяца
				// задолженность не увеличивалась (ОборотКт), поэтому сумму такой амортизации в НУ не признаем,
				// относим на ПР.
				КорректировкаАмортизацииНУ = - АмортизацияНУ;
				Для Инд = 0 По НайденныеСтрокиАмортизации.ВГраница() Цикл
					НайденныеСтрокиАмортизации[Инд].КорректировкаАмортизацииНУ = - НайденныеСтрокиАмортизации[Инд].СуммаНУ;
				КонецЦикла;
			КонецЕсли;
		КонецЕсли;
		
		МассивБазы.Очистить();
		НайденныеСтрокиПлатежей = ТаблицаАрендныхПлатежей.НайтиСтроки(СтруктураПоискаОС);
		
		СуммаПлатежейБезНДС = 0;
		Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
			СуммаПлатежейБезНДС = СуммаПлатежейБезНДС + НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС;
		КонецЦикла;
		
		Если НайденныеСтрокиПлатежей.Количество() = 0 ИЛИ СуммаПлатежейБезНДС = 0 Тогда
		
			// Платежи по предмету аренды уже закончились, осталась только амортизация.
			// Заполняем данные в таблице для последующей записи в регистр сведений РасчетРасходовПоАренде.
 			НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
 			ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, СтрокаТаблицыАрендныхПлатежейПоОС);
			
			НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= 0;
			НоваяСтрокаРасходов.СуммаПлатежаНУ 	= 0;
			НоваяСтрокаРасходов.АмортизацияБУ 	= АмортизацияБУ;
			НоваяСтрокаРасходов.АмортизацияНУ 	= АмортизацияНУ;
			НоваяСтрокаРасходов.АмортизацияВР 	= АмортизацияВР;
			НоваяСтрокаРасходов.АмортизацияПР 	= АмортизацияПР;
			НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = КорректировкаАмортизацииНУ;
		
		Иначе

			// Распределим вычисленную сумму расходов и амортизации между строками платежей.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				МассивБазы.Добавить(НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС);
			КонецЦикла;
			
			МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПлатежаНУ, МассивБазы);
			МассивАмортизацияБУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияБУ, МассивБазы);
			МассивАмортизацияНУ	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияНУ, МассивБазы);
			МассивАмортизацияВР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияВР, МассивБазы);
			МассивАмортизацияПР	 = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(АмортизацияПР, МассивБазы);
			МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
				КорректировкаАмортизацииНУ, МассивБазы);

			Для Инд = 0 По НайденныеСтрокиПлатежей.ВГраница() Цикл
				НайденныеСтрокиПлатежей[Инд].СуммаПлатежаНУ = ?(МассивСуммаПлатежаНУ = Неопределено, 0, МассивСуммаПлатежаНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияБУ 	= ?(МассивАмортизацияБУ  = Неопределено, 0, МассивАмортизацияБУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияНУ 	= ?(МассивАмортизацияНУ  = Неопределено, 0, МассивАмортизацияНУ[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияВР 	= ?(МассивАмортизацияВР  = Неопределено, 0, МассивАмортизацияВР[Инд]);
				НайденныеСтрокиПлатежей[Инд].АмортизацияПР 	= ?(МассивАмортизацияПР  = Неопределено, 0, МассивАмортизацияПР[Инд]);
				НайденныеСтрокиПлатежей[Инд].КорректировкаАмортизацииНУ = 
					?(МассивКорректировкаАмортизацииНУ = Неопределено, 0, МассивКорректировкаАмортизацииНУ[Инд]);
			КонецЦикла;
		
			// Относим платежи на расходы пропорционально коэффициентам.
			Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
				
				СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(СтрокаТаблицыАрендныхПлатежейПоОС.ОсновноеСредство, "ОсновноеСредство");
				Если СтрокаСпособОтраженияРасходовБУ <> Неопределено 
					И СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходовЗаданДокументом Тогда
					
					ТаблицаРаспределения = СоответствиеСпособовОтражения.Получить(СтрокаСпособОтраженияРасходовБУ.СпособОтраженияРасходов);
				
					МассивБазы.Очистить();
					Для Каждого СтрокаРаспределения Из ТаблицаРаспределения Цикл
						МассивБазы.Добавить(СтрокаРаспределения.Коэффициент);
					КонецЦикла;
					
					МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаБезНДС, МассивБазы);
						
					МассивСуммаПлатежаНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.СуммаПлатежаНУ, МассивБазы);
						
					МассивАмортизацияБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияБУ, МассивБазы);
						
					МассивАмортизацияНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияНУ, МассивБазы);
						
					МассивАмортизацияВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияВР, МассивБазы);
						
					МассивАмортизацияПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.АмортизацияПР, МассивБазы);
						
					МассивКорректировкаАмортизацииНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
						НайденнаяСтрокаПлатежа.КорректировкаАмортизацииНУ, МассивБазы);
						
					Для Сч = 0 По ТаблицаРаспределения.Количество()-1 Цикл
						
						СтрокаРаспределения = ТаблицаРаспределения[Сч];
					
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						
						НоваяСтрокаРасходов.СуммаПлатежаБезНДС 	= ?(МассивСуммаПлатежаБезНДС <> Неопределено, МассивСуммаПлатежаБезНДС[Сч], 0);
						НоваяСтрокаРасходов.СуммаПлатежаНУ 	= ?(МассивСуммаПлатежаНУ <> Неопределено, МассивСуммаПлатежаНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияБУ 	= ?(МассивАмортизацияБУ <> Неопределено, МассивАмортизацияБУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияНУ 	= ?(МассивАмортизацияНУ <> Неопределено, МассивАмортизацияНУ[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияВР 	= ?(МассивАмортизацияВР <> Неопределено, МассивАмортизацияВР[Сч], 0);
						НоваяСтрокаРасходов.АмортизацияПР 	= ?(МассивАмортизацияПР <> Неопределено, МассивАмортизацияПР[Сч], 0);
						НоваяСтрокаРасходов.КорректировкаАмортизацииНУ = ?(МассивКорректировкаАмортизацииНУ <> Неопределено, МассивКорректировкаАмортизацииНУ[Сч], 0);
						
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаРаспределения.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаРаспределения.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаРаспределения.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаРаспределения.НаправлениеДеятельности;
						
					КонецЦикла; // Для Каждого НайденнаяСтрокаАмортизации Из НайденныеСтрокиАмортизации Цикл
				
				Иначе
					
					СтрокаСпособОтраженияРасходовБУ = СпособыОтраженияРасходовБУ.Найти(НайденнаяСтрокаПлатежа.ОсновноеСредство, "ОсновноеСредство");
					Если СтрокаСпособОтраженияРасходовБУ <> Неопределено Тогда
						НоваяСтрокаРасходов = ТаблицаРасходыПоАренднымПлатежамНУ.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрокаРасходов, НайденнаяСтрокаПлатежа);
						НоваяСтрокаРасходов.ПодразделениеЗатрат = СтрокаСпособОтраженияРасходовБУ.Подразделение;
						НоваяСтрокаРасходов.СтатьяРасходов      = СтрокаСпособОтраженияРасходовБУ.СтатьяРасходов;
						НоваяСтрокаРасходов.АналитикаРасходов   = СтрокаСпособОтраженияРасходовБУ.АналитикаРасходов;
						НоваяСтрокаРасходов.НаправлениеДеятельностиЗатрат = СтрокаСпособОтраженияРасходовБУ.НаправлениеДеятельности;
					КонецЕсли; 
					
				КонецЕсли;
				
			КонецЦикла; // Для Каждого НайденнаяСтрокаПлатежа Из НайденныеСтрокиПлатежей Цикл
		
		КонецЕсли; // Если НайденныеСтрокиПлатежей.Количество() = 0 Тогда
		
	КонецЦикла;	
	
	Возврат ПараметрыРасходовПоАренднымПлатежам;

КонецФункции

Функция ПодготовитьПараметрыРасчетРасходовПоАренде(ТаблицаРасходыПоАренднымПлатежамНУ, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      	// <Дата>
	+ "Организация," 	// <СправочникСсылка.Организации>
	+ "Регистратор," 	// <ДокументСсылка.*>
	+ "ДатаРасчета"; 	// <Дата>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));


	// Подготовка таблицы Параметры.ТаблицаРасходыПоАренднымПлатежамНУ

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство,"      	// <СправочникСсылка.Контрагенты>
	+ "Контрагент,"      		// <СправочникСсылка.Контрагенты>
	+ "Договор,"            	// <СправочникСсылка.ДоговорыАренды>
	+ "АмортизацияБУ," 			// <Число(31, 2)>
	+ "АмортизацияНУ," 			// <Число(31, 2)>
	+ "АмортизацияВР," 			// <Число(31, 2)>
	+ "АмортизацияПР," 			// <Число(31, 2)>
	+ "СуммаПлатежаБезНДС," 	// <Число(31, 2)>
	+ "СуммаПлатежаНУ," 		// <Число(31, 2)>
	+ "КорректировкаАмортизацииНУ"; // <Число(31, 2)>

	Параметры.Вставить("ТаблицаРасходыПоАренднымПлатежамНУ",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРасходыПоАренднымПлатежамНУ, 
			СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПодготовитьПараметрыТаблицыРасходовПоАренднымПлатежамНУ(ТаблицаОС, ТаблицаРеквизиты, ТаблицаЗатрат)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС
	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.ТаблицаЗатратПоАмортизации
	СписокОбязательныхКолонок = ""
	+ "ОбъектУчета,"         // <СправочникСсылка.ОбъектыЭксплуатации>
	+ "СчетАмортизации,"     // <ПланСчетовСсылка.Хозрасчетный>
	+ "Подразделение,"       // <СправочникСсылка.СтруктураПредприятия>
	+ "ПодразделениеЗатрат," // <СправочникСсылка.СтруктураПредприятия>
	+ "НаправлениеДеятельности,"       // <СправочникСсылка.НаправленияДеятельности>
	+ "НаправлениеДеятельностиЗатрат," // <СправочникСсылка.НаправленияДеятельности>
	+ "СтатьяРасходов,"      // <ПланВидовХарактеристикСсылка.СтатьиРасходов>
	+ "АналитикаРасходов,"   // <Характеристика.СтатьиРасходов>
	+ "Контрагент,"          // <СправочникСсылка.Контрагенты>
	+ "Договор,"             // <СправочникСсылка.ДоговорыАренды>
	+ "Коэффициент,"         // <Число>
	+ "СуммаБУ,"             // <Число(31, 2)>
	+ "СуммаНУ,"             // <Число(31, 2)>
	+ "СуммаВР,"             // <Число(31, 2)>
	+ "СуммаПР";             // <Число(31, 2)>
	
	Параметры.Вставить("ТаблицаЗатрат",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаЗатрат, СписокОбязательныхКолонок));
		
	Параметры.ТаблицаЗатрат.Колонки.ОбъектУчета.Имя = "ОсновноеСредство";
	Параметры.ТаблицаЗатрат.Колонки.Добавить("КорректировкаАмортизацииНУ", ОбщегоНазначения.ОписаниеТипаЧисло(31, 2));

	// Подготовка таблицы Параметры.Реквизиты
	СписокОбязательныхКолонок = ""
	+ "Период,"           // <Дата>
	+ "ИмяСписка,"        // <Строка, 0>
	+ "Организация,"      // <СправочникСсылка.Организации>
	+ "Регистратор,"      // <ДокументСсылка.*>
	+ "ДатаРасчета,"      // <Дата>
	+ "Содержание,"       // <Строка, 0>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПолучитьПустуюТаблицуРасходыПоАренднымПлатежамНУ()

	ОписаниеТиповЧисло15_2     = ОбщегоНазначения.ОписаниеТипаЧисло(31, 2);
	ОписаниеТиповСубконто      = Метаданные.ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Тип;
	ОписаниеТиповПодразделения = БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения();
	ОписаниеТиповХозрасчетный  = Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный");

	ТаблицаРасходыПоАренднымПлатежамНУ = Новый ТаблицаЗначений;
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Договор",
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры", "ТипЗначения"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("Подразделение", ОписаниеТиповПодразделения);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ПодразделениеЗатрат", Новый ОписаниеТипов("СправочникСсылка.СтруктураПредприятия"));
		
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СчетАмортизации", ОписаниеТиповХозрасчетный);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("ДокументРасчетовСКонтрагентом", ОписаниеТиповСубконто);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаРасходыПоАренднымПлатежамНУ.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	Возврат ТаблицаРасходыПоАренднымПлатежамНУ;
	
КонецФункции

Функция ПодготовитьТаблицуАрендныхПлатежей(ТаблицаОС, Реквизиты, КоличествоОбработанныхДанных, Отказ)

	ТаблицаАрендныхПлатежей = ПолучитьПустуюТаблицуАрендныхПлатежей();
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	
	Запрос.УстановитьПараметр(
		"ИспользуетсяУчетАрендыПоФСБУ25_2018", 
		УчетАрендованныхОС.ИспользуетсяУчетАрендыПоФСБУ25_2018(Реквизиты.Организация, Реквизиты.Период));
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("Период", Реквизиты.Период);
		Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("Период", КонецМесяца(Реквизиты.Период));
		Запрос.Текст = ПолучитьТекстЗапросаПринятыеКУчетуОСВсе();
	КонецЕсли;
	Запрос.Выполнить();

	// Определяем суммы арендных платежей без НДС из проводок вида Дт 76.07.1,76.27.1,76.37.1 - Кт 60,76 (с поставщиком)
	// по одному и тому же контрагенту и договору в Дт и Кт.
	
	МассивСчетовЛизинговыеПлатежи = Новый Массив;
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСПоставщикамиИПодрядчиками);     // 60
	МассивСчетовЛизинговыеПлатежи.Добавить(ПланыСчетов.Хозрасчетный.РасчетыСРазнымиДебиторамиИКредиторами); // 76
	
	ВидыСубконтоКонтрагентыДоговоры = Новый Массив;
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Контрагенты);
	ВидыСубконтоКонтрагентыДоговоры.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры);
	
	Запрос.УстановитьПараметр("МассивСчетовЛизинговыеПлатежи", МассивСчетовЛизинговыеПлатежи);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(Реквизиты.Период));
	
	Если ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("КонецПериода", Реквизиты.Период);
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(Реквизиты.Регистратор.МоментВремени(), ВидГраницы.Исключая));
	Иначе
		Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.Период));
		Запрос.УстановитьПараметр("КонецПериодаГраница", Новый Граница(КонецМесяца(Реквизиты.Период), ВидГраницы.Включая));
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентыДоговоры", ВидыСубконтоКонтрагентыДоговоры);
	Запрос.УстановитьПараметр("ВалютаРегламентированногоУчета", ОбщегоНазначенияБПВызовСервераПовтИсп.ПолучитьВалютуРегламентированногоУчета());
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыАренды.Ссылка КАК Договор,
	|	АналитикаПоПартнерам.КлючАналитики КАК КлючАналитики
	|ПОМЕСТИТЬ ВТ_ОтборРасчетов
	|ИЗ
	|	Справочник.ДоговорыАренды КАК ДоговорыАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.АналитикаУчетаПоПартнерам КАК АналитикаПоПартнерам
	|		ПО (АналитикаПоПартнерам.Организация = &Организация)
	|			И (АналитикаПоПартнерам.Партнер = ДоговорыАренды.Партнер)
	|			И (АналитикаПоПартнерам.Контрагент = ДоговорыАренды.Контрагент)
	|			И (АналитикаПоПартнерам.Договор = ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка))
	|			И (АналитикаПоПартнерам.НаправлениеДеятельности = ДоговорыАренды.НаправлениеДеятельности)
	|ГДЕ
	|	ДоговорыАренды.Организация = &Организация
	|	И ДоговорыАренды.Балансодержатель = ЗНАЧЕНИЕ(Перечисление.БалансодержательПредметовАренды.Арендатор)
	|	И ДоговорыАренды.УчитыватьПредметыАрендыВРеглУчете
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КлючАналитики,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетыПоФинансовымИнструментам.АналитикаУчетаПоПартнерам.Контрагент КАК Контрагент,
	|	РасчетыПоФинансовымИнструментам.Договор КАК Договор,
	|	-РасчетыПоФинансовымИнструментам.СуммаНачальныйОстаток КАК ВалютнаяСуммаНачальныйОстаток,
	|	РасчетыПоФинансовымИнструментам.СуммаРасход КАК ВалютнаяСуммаОборотКт
	|ПОМЕСТИТЬ ВТ_ЗадолженностьПоАренде
	|ИЗ
	|	РегистрНакопления.РасчетыПоФинансовымИнструментам.ОстаткиИОбороты(
	|			&НачалоПериода,
	|			&КонецПериодаГраница,
	|			,
	|			,
	|			(АналитикаУчетаПоПартнерам, Договор) В
	|				(ВЫБРАТЬ
	|					ВТ_ОтборРасчетов.КлючАналитики,
	|					ВТ_ОтборРасчетов.Договор
	|				ИЗ
	|					ВТ_ОтборРасчетов)
	|			И ТипСуммы = ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.АрендныеОбязательства)
	|			) КАК РасчетыПоФинансовымИнструментам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоступлениеУслугПоАренде.Контрагент КАК Контрагент,
	|	ПоступлениеУслугПоАренде.Договор КАК Договор,
	|	ПоступлениеУслугПоАренде.Подразделение КАК Подразделение,
	|	НЕОПРЕДЕЛЕНО КАК ДокументРасчетовСКонтрагентом,
	|	СУММА(ЕСТЬNULL(Суммы.СуммаБезНДСРегл, ТаблицаНачисления.СуммаСНДС - ТаблицаНачисления.СуммаНДС)) КАК СуммаПлатежаБезНДС
	|ПОМЕСТИТЬ ВТ_АрендныеПлатежи
	|ИЗ
	|	Документ.ПоступлениеУслугПоАренде КАК ПоступлениеУслугПоАренде
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПоступлениеУслугПоАренде.Начисления КАК ТаблицаНачисления
	|		ПО ТаблицаНачисления.Ссылка = ПоступлениеУслугПоАренде.Ссылка
	|			И ТаблицаНачисления.ТипНачисления В (
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАренде),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.УслугаПоАрендеАванс),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыПлатежейПоАренде.ОбеспечительныйПлатеж))
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК Суммы
	|		ПО Суммы.Регистратор = ТаблицаНачисления.Ссылка
	|			И Суммы.ИдентификаторСтроки = ТаблицаНачисления.ИдентификаторСтроки
	|			И Суммы.СуммаБезНДСРегл <> 0
	|ГДЕ
	|	ПоступлениеУслугПоАренде.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПоступлениеУслугПоАренде.Организация = &Организация
	|	И ПоступлениеУслугПоАренде.Проведен
	|	И ПоступлениеУслугПоАренде.Договор В (
	|		ВЫБРАТЬ
	|			ВТ_ОтборРасчетов.Договор
	|		ИЗ
	|			ВТ_ОтборРасчетов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеУслугПоАренде.Контрагент,
	|	ПоступлениеУслугПоАренде.Договор,
	|	ПоступлениеУслугПоАренде.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор,
	|	ВЫРАЗИТЬ(АрендованныеОС.Договор КАК Справочник.ДоговорыАренды).НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	АрендованныеОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	АрендованныеОС.Стоимость КАК ПервоначальнаяСтоимость
	|ПОМЕСТИТЬ ВТ_ОСвАренде
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&КонецПериода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК АрендованныеОС
	|ГДЕ
	|	АрендованныеОС.Договор В (
	|		ВЫБРАТЬ
	|			ВТ_ОтборРасчетов.Договор
	|		ИЗ
	|			ВТ_ОтборРасчетов КАК ВТ_ОтборРасчетов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ ВТ_МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&КонецПериода,
	|			ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ВТ_ОСвАренде.ОсновноеСредство
	|					ИЗ
	|						ВТ_ОСвАренде)) КАК МестонахождениеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ЗадолженностьПоАренде.Контрагент                                  КАК Контрагент,
	|	ВТ_ЗадолженностьПоАренде.Договор                                     КАК Договор,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаНачальныйОстаток, 0)  КАК ВалютнаяСуммаНачальныйОстаток,
	|	ЕСТЬNULL(ВТ_ЗадолженностьПоАренде.ВалютнаяСуммаОборотКт, 0)          КАК ВалютнаяСуммаОборотКт,
	|	ЕСТЬNULL(ВТ_МестонахождениеОС.Местонахождение, НЕОПРЕДЕЛЕНО)         КАК Подразделение,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.ДокументРасчетовСКонтрагентом, НЕОПРЕДЕЛЕНО) КАК ДокументРасчетовСКонтрагентом,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ОсновноеСредство, НЕОПРЕДЕЛЕНО)                КАК ОсновноеСредство,
	|	ВТ_ОСвАренде.ИнвентарныйНомер                                        КАК ИнвентарныйНомер,
	|	ВТ_ОСвАренде.НаправлениеДеятельности                                 КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ВТ_ОСвАренде.ПервоначальнаяСтоимость, 0)                    КАК ПервоначальнаяСтоимость,
	|	ЕСТЬNULL(ВТ_АрендныеПлатежи.СуммаПлатежаБезНДС, 0)                   КАК СуммаПлатежаБезНДС
	|ИЗ
	|	ВТ_ЗадолженностьПоАренде КАК ВТ_ЗадолженностьПоАренде
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_АрендныеПлатежи КАК ВТ_АрендныеПлатежи
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_АрендныеПлатежи.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.Договор = ВТ_АрендныеПлатежи.Договор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ОСвАренде КАК ВТ_ОСвАренде
	|		ПО ВТ_ЗадолженностьПоАренде.Контрагент = ВТ_ОСвАренде.Контрагент
	|			И ВТ_ЗадолженностьПоАренде.Договор = ВТ_ОСвАренде.Договор
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_МестонахождениеОС КАК ВТ_МестонахождениеОС
	|		ПО ВТ_МестонахождениеОС.ОсновноеСредство = ВТ_ОСвАренде.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Договор,
	|	Подразделение,
	|	ДокументРасчетовСКонтрагентом,
	|	ОсновноеСредство";

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат ТаблицаАрендныхПлатежей;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	ЕстьДанные = Выборка.Следующий();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + Выборка.Количество();
	
	ВременнаяТаблицаАрендныхПлатежей = ТаблицаАрендныхПлатежей.СкопироватьКолонки();

	Пока ЕстьДанные Цикл
		
		ТекущийКонтрагент                    = Выборка.Контрагент;
		ТекущийДоговор                       = Выборка.Договор;
		ТекущийДокументРасчетовСКонтрагентом = Выборка.ДокументРасчетовСКонтрагентом;
		СуммаПлатежаБезНДС                   = Выборка.СуммаПлатежаБезНДС;
		ВалютнаяСуммаНачальныйОстаток        = Выборка.ВалютнаяСуммаНачальныйОстаток;
		ВалютнаяСуммаОборотКт                = Выборка.ВалютнаяСуммаОборотКт;
	
		// Проверка заполнения таблицы
		Если НЕ ЗначениеЗаполнено(Выборка.ОсновноеСредство) Тогда
			
			Если ТаблицаОС.Количество() = 0 Тогда
			
				ШаблонСообщения = НСтр("ru = 'Не определен предмет аренды для отражения расходов по арендным платежам в налоговом учете для ""%1"" по ""%2"". Расходы не будут отражены в налоговом учете.';
										|en = 'Rental object is not identified to record expenses for rental payments in tax accounting for ""%1"" by ""%2"". Expenses will not be recorded in tax accounting.'");
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
					Выборка.Контрагент, 
					Выборка.Договор);
					
				РасшифровкаПредупреждения = Новый Структура;
				РасшифровкаПредупреждения.Вставить("Контрагент", Выборка.Контрагент);
				РасшифровкаПредупреждения.Вставить("Договор", Выборка.Договор);

				// Выводим сообщение пользователю по текущему объекту, 
				// но не прерываем выполнение всей процедуры.
				ВнеоборотныеАктивыСлужебный.ЗарегистрироватьПредупреждениеВыполненияРасчета(
					Перечисления.ОперацииЗакрытияМесяца.ПризнаниеВНалоговомУчетеАрендныхПлатежей,
					Реквизиты.Период,
					Реквизиты.Организация,
					ТекстСообщения,,
					РасшифровкаПредупреждения);
					
			КонецЕсли;
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
		КонецЕсли;
		
		Если (ВалютнаяСуммаНачальныйОстаток + ВалютнаяСуммаОборотКт = 0)
			И СуммаПлатежаБезНДС <> 0 Тогда
			
			ШаблонСообщения = НСтр("ru = 'По договору ""%1"" c ""%2"" отражено начисление арендного платежа в сумме %3 руб., но кредиторской задолженности на начало месяца и кредитового оборота в течение месяца нет. Расходы по арендному платежу не будут отражены в налоговом учете.';
									|en = 'Rental payment accrual is recoded under the ""%1"" contract with ""%2"" in the amount of %3 rub., but there is no accounts payable as of the month beginning and no credit turnover during the month. Rental payment expenses will not be recorded in tax accounting.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, 
				Выборка.Договор, 
				Выборка.Контрагент,
				Выборка.СуммаПлатежаБезНДС);

			// Выводим сообщение пользователю по текущему объекту, 
			// но не прерываем выполнение всей процедуры.
			БухгалтерскийУчетПереопределяемый.СообщитьОбОшибкеРегОперацииСНавигацией(ТекстСообщения, 
				Выборка.ДокументРасчетовСКонтрагентом, , Неопределено);
				
			ЕстьДанные = Выборка.Следующий();
			Продолжить;
			
		КонецЕсли;
		
		// Распределим сумму платежа между предметами аренды по договору 
		// пропорционально их первоначальной стоимости.
		ВременнаяТаблицаАрендныхПлатежей.Очистить();
		
		Пока ЕстьДанные
			И Выборка.Контрагент                    = ТекущийКонтрагент
			И Выборка.Договор                       = ТекущийДоговор
			И Выборка.ДокументРасчетовСКонтрагентом = ТекущийДокументРасчетовСКонтрагентом Цикл
			
			СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицы, Выборка);
			
			ЕстьДанные = Выборка.Следующий();
		КонецЦикла;
		
		Если ВременнаяТаблицаАрендныхПлатежей.Количество() > 1 Тогда
			
			МассивПервоначальныхСтоимостей = ВременнаяТаблицаАрендныхПлатежей.ВыгрузитьКолонку("ПервоначальнаяСтоимость");
			
			МассивСуммаПлатежаБезНДС = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												СуммаПлатежаБезНДС, МассивПервоначальныхСтоимостей);
												
			МассивВалютнаяСуммаНачальныйОстаток = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
														ВалютнаяСуммаНачальныйОстаток, МассивПервоначальныхСтоимостей);
														
			МассивВалютнаяСуммаОборотКт = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(
												ВалютнаяСуммаОборотКт, МассивПервоначальныхСтоимостей);

			Для Инд = 0 По ВременнаяТаблицаАрендныхПлатежей.Количество() - 1 Цикл

				СтрокаТаблицы = ВременнаяТаблицаАрендныхПлатежей[Инд];
				СтрокаТаблицы.СуммаПлатежаБезНДС = 
					?(МассивСуммаПлатежаБезНДС = Неопределено, 0, МассивСуммаПлатежаБезНДС[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаНачальныйОстаток = 
					?(МассивВалютнаяСуммаНачальныйОстаток = Неопределено, 0, МассивВалютнаяСуммаНачальныйОстаток[Инд]);
					
				СтрокаТаблицы.ВалютнаяСуммаОборотКт = 
					?(МассивВалютнаяСуммаОборотКт = Неопределено, 0, МассивВалютнаяСуммаОборотКт[Инд]);
					
			КонецЦикла;

		КонецЕсли;
		
		Для Каждого СтрокаТаблицы Из ВременнаяТаблицаАрендныхПлатежей Цикл
			НоваяСтрока = ТаблицаАрендныхПлатежей.Добавить();
			ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		КонецЦикла;
		
	КонецЦикла; 

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Функция ПолучитьПустуюТаблицуАрендныхПлатежей()

	ТаблицаАрендныхПлатежей = Новый ТаблицаЗначений;

	ОписаниеТиповЧисло15_2 = ОбщегоНазначения.ОписаниеТипаЧисло(31, 2);

	ТаблицаАрендныхПлатежей.Колонки.Добавить("Контрагент",
		Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("Договор",
		Новый ОписаниеТипов("СправочникСсылка.ДоговорыАренды"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ОсновноеСредство",
		Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("Подразделение",
		БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ДокументРасчетовСКонтрагентом",
		ОбщегоНазначения.ЗначениеРеквизитаОбъекта("ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыРасчетовСКонтрагентами", "ТипЗначения"));
		
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ПервоначальнаяСтоимость", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаНачальныйОстаток", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("ВалютнаяСуммаОборотКт", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаБезНДС", ОписаниеТиповЧисло15_2);
	
	ТаблицаАрендныхПлатежей.Колонки.Добавить("СуммаПлатежаНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияБУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияВР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("АмортизацияПР", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("КорректировкаАмортизацииНУ", ОписаниеТиповЧисло15_2);
	ТаблицаАрендныхПлатежей.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));

	Возврат ТаблицаАрендныхПлатежей;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|	И ПорядокУчетаОСБУ.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Организация = &Организация
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период
	|		И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|		И ПорядокУчетаОСБУ.Активность
	|
	|	) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаПринятыеКУчетуОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И ПорядокУчетаОСБУ.Организация = &Организация
	|			И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|			И ПорядокУчетаОСБУ.Активность
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО (ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор)
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ)
	|				И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|				И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ))
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|	ИЗ
	|		ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|				И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|				И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ПорядокУчетаОСБУ.ОсновноеСредство
	|	ИЗ
	|		ТаблицаОС КАК ТаблицаОС
	|
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|			ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|				И ПорядокУчетаОСБУ.Организация = &Организация
	|				И ПорядокУчетаОСБУ.ДатаИсправления = ДАТАВРЕМЯ(1,1,1)
	|				И ПорядокУчетаОСБУ.Активность
	|	ГДЕ
	|		ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|		И ПорядокУчетаОСБУ.Период МЕЖДУ НАЧАЛОПЕРИОДА(&Период, МЕСЯЦ) И &Период) КАК ПорядокУчетаОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

//-- Локализация

#Область Прочее

// Определяет используется ли учет аренды по стандарту ФСБУ 25/2018.
//
// Параметры:
//  Организация - СправочникСсылка.Организации, Массив из СправочникСсылка.Организации, Неопределено - Организация, для которой проверяется порядок учета.
//  Период	 - Дата - На какую дату нужно проверить (если не указана, то проверяется на текущую дату).
//  УчестьНачалоПерехода - Булево - Истина, если нужно учесть начало перехода на новый стандарт.
// 
// Возвращаемое значение:
//  Булево, Неопределено - Истина, если используется учет аренды по ФСБУ 25/2018 
//                    для указанной организации или для любой организации, если организация не указана.
//
Функция ИспользуетсяУчетАрендыПоФСБУ25_2018(Организация = Неопределено, Период = '000101010000', УчестьНачалоПерехода = Ложь) Экспорт

	ИспользуетсяУчетАрендыПоФСБУ25_2018 = Неопределено;
	
	//++ Локализация
	
	ПериодНастройки = ?(Период <> '000101010000', КонецМесяца(Период), '000101010000');
	
	Если ЗначениеЗаполнено(Организация) Тогда

		ИспользуетсяУчетАрендыПоФСБУ25_2018 = Ложь;
	
		Если ТипЗнч(Организация) = Тип("Массив") Тогда
			СписокОрганизаций = Организация;
		
			УчетныеПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикПоОрганизациям(
											"УчетнаяПолитикаФинансовогоУчета",
											СписокОрганизаций,
											ПериодНастройки,
											Ложь);
											
			Для Каждого ПараметрыУчетнойПолитики Из УчетныеПолитики Цикл
				ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
				Если ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
					Прервать
				КонецЕсли;
			КонецЦикла;
			
			Если УчестьНачалоПерехода
				И НЕ ИспользуетсяУчетАрендыПоФСБУ25_2018 
				И КонецДня(Период) = КонецМесяца(Период) Тогда
				
				// При переходе на учет по стандарту дата на день раньше чем начало учета по стандарту
				УчетныеПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикПоОрганизациям(
												"УчетнаяПолитикаФинансовогоУчета",
												СписокОрганизаций,
												КонецМесяца(КонецМесяца(Период) + 1),
												Ложь);
												
				Для Каждого ПараметрыУчетнойПолитики Из УчетныеПолитики Цикл
					ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
					Если ИспользуетсяУчетАрендыПоФСБУ25_2018 Тогда
						Прервать
					КонецЕсли;
				КонецЦикла;
						
			КонецЕсли;
			
		Иначе
			
			ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
				"УчетнаяПолитикаФинансовогоУчета",
				Организация,
				ПериодНастройки,
				Ложь);
				
			Если ПараметрыУчетнойПолитики <> Неопределено Тогда	
				ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
			КонецЕсли;
			
			Если УчестьНачалоПерехода
				И НЕ ИспользуетсяУчетАрендыПоФСБУ25_2018 
				И КонецДня(Период) = КонецМесяца(Период) Тогда
				
				ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
					"УчетнаяПолитикаФинансовогоУчета",
					Организация,
					КонецДня(ПериодНастройки) + 1,
					Ложь);
					
				Если ПараметрыУчетнойПолитики <> Неопределено Тогда
					ИспользуетсяУчетАрендыПоФСБУ25_2018 = ПараметрыУчетнойПолитики.УчетАрендыПоФСБУ25_2018;
				КонецЕсли;
					
			КонецЕсли;
			
		КонецЕсли;
				
	Иначе
		
		СписокОрганизаций = НастройкиНалоговУчетныхПолитикПовтИсп.ОрганизацииСЗаданнымПараметромПолитики(
								"УчетнаяПолитикаФинансовогоУчета",
								"УчетАрендыПоФСБУ25_2018",
								Истина,,
								ПериодНастройки);
								
		ИспользуетсяУчетАрендыПоФСБУ25_2018 = (СписокОрганизаций.Количество() <> 0);
		 
	КонецЕсли;
	
	//-- Локализация

	Возврат ИспользуетсяУчетАрендыПоФСБУ25_2018;
	
КонецФункции

// Определяет дату начала учета аренды по стандарту ФСБУ 25/2018
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации -
// Возвращаемое значение:
// 	Дата, Неопределено - 
Функция НачалоУчетаАрендыПоФСБУ25_2018(Организация) Экспорт
	
	НачалоУчета = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ЕСТЬNULL(МИНИМУМ(ТаблицаРегистра.Период), ДАТАВРЕМЯ(1,1,1)) КАК Период
	|ИЗ
	|	РегистрСведений.УчетнаяПолитикаФинансовогоУчета КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.УчетАрендыПоФСБУ25_2018
	|	И ТаблицаРегистра.Организация В
	|			(ВЫБРАТЬ
	|				ГоловныеОрганизации.Организация
	|			ИЗ
	|				ВтГоловныеОрганизации КАК ГоловныеОрганизации)";
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	НастройкиНалоговУчетныхПолитик.ДополнитьМенеджерВременныхТаблицГоловнымиОрганизациями(МенеджерВременныхТаблиц, Организация);

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Следующий() Тогда
		НачалоУчета = Выборка.Период;
	КонецЕсли;
	
	//-- Локализация
	
	Возврат НачалоУчета;
	
КонецФункции

// см. ВариантыОтчетовПереопределяемый.НастроитьВариантыОтчетов.
//
Процедура НастроитьВариантыОтчетов(Настройки) Экспорт

	//++ Локализация

	#Область СправкаРасчетПризнаниеРасходовПоАрендованнымОС
	ОписаниеОтчета = ВариантыОтчетов.ОписаниеОтчета(Настройки, Метаданные.Отчеты.СправкаРасчетПризнаниеРасходовПоАрендованнымОС);
	ОписаниеВарианта = ВариантыОтчетов.ОписаниеВарианта(Настройки, ОписаниеОтчета, "");
	ОписаниеВарианта.Наименование = НСтр("ru = 'Справка-расчет ""Признание расходов по арендованным ОС""';
										|en = 'Detailed calculation ""Recognition of expenses for leased FA""'");
	ОписаниеВарианта.Описание = НСтр("ru = 'Информация о расходах, связанных с арендованными основными средствами.';
									|en = 'Information about the expenses associated with leased fixed assets.'");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнеоборотныеАктивы2_2");
	ОписаниеВарианта.ФункциональныеОпции.Добавить("ИспользоватьВнеоборотныеАктивы2_4");
	#КонецОбласти

	//-- Локализация

КонецПроцедуры

Процедура СформироватьЗаписиРегистровЗаданий(Документ, ДанныеТаблиц) Экспорт

	//++ Локализация
	СформироватьЗаданиеПризнаниеВНУАрендныхПлатежей(Документ, ДанныеТаблиц);
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти