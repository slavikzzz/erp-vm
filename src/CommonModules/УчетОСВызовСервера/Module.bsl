////////////////////////////////////////////////////////////////////////////////
// Модуль работы с объектами основных средств версии 2.2
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область РасчетАмортизации

// Возвращает пустую таблицу значений начисленной амортизации
//
// Возвращаемое значение:
// 		ТаблицаЗначений - Пустая таблица начисленной амортизации.
//
Функция ПустаяТаблицаЗначенийНачисленнойАмортизации() Экспорт
	
	ТаблицаАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ТаблицаАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	ТаблицаАмортизации.Колонки.Добавить("СчетНачисленияАмортизации", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаАмортизации.Колонки.Добавить("Подразделение", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("ПодразделениеЗатрат", БухгалтерскийУчетКлиентСерверПереопределяемый.ОписаниеТиповПодразделения());
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельности", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	ТаблицаАмортизации.Колонки.Добавить("НаправлениеДеятельностиЗатрат", Новый ОписаниеТипов("СправочникСсылка.НаправленияДеятельности"));
	
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходов", Новый ОписаниеТипов("ДокументСсылка.ИзменениеПараметровОС"));
	ТаблицаАмортизации.Колонки.Добавить("СпособОтраженияРасходовЗаданДокументом", Новый ОписаниеТипов("Булево"));
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаПР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("СуммаВР", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	
	ТаблицаАмортизации.Колонки.Добавить("СтатьяРасходов", Новый ОписаниеТипов("ПланВидовХарактеристикСсылка.СтатьиРасходов"));
	ТаблицаАмортизации.Колонки.Добавить("АналитикаРасходов", Метаданные.ПланыВидовХарактеристик.СтатьиРасходов.Тип);
	
	ТаблицаАмортизации.Колонки.Добавить("ЭтоАмортизационнаяПремия", Новый ОписаниеТипов("Булево"));
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	ТаблицаАмортизации.Колонки.Добавить("ДокументАмортизационнойПремии", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии.ТипЗначения);
	
	ТаблицаАмортизации.Колонки.Добавить("СуммаКапитальныхВложенийВключаемыхВРасходы", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ТаблицаАмортизации.Колонки.Добавить("Коэффициент", Новый ОписаниеТипов("Число"));
	
	ТаблицаАмортизации.Колонки.Добавить("ПередаватьРасходыВДругуюОрганизацию", Новый ОписаниеТипов("Булево"));
	ТаблицаАмортизации.Колонки.Добавить("ОрганизацияПолучательРасходов", Новый ОписаниеТипов("СправочникСсылка.Организации"));
	ТаблицаАмортизации.Колонки.Добавить("СчетПередачиРасходов", Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	
	ТаблицаАмортизации.Колонки.Добавить("НачислятьИзнос", Новый ОписаниеТипов("Булево"));
	ТаблицаАмортизации.Колонки.Добавить("ЭтоЦелевыеСредства", Новый ОписаниеТипов("Булево"));
	
	ТаблицаАмортизации.Колонки.Добавить("Контрагент", Новый ОписаниеТипов("СправочникСсылка.Контрагенты"));
	// исключение: устаревший функционал, планируется к удалению
	//@skip-check reading-attribute-from-database
	ТаблицаАмортизации.Колонки.Добавить("Договор", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.Договоры.ТипЗначения);
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПустаяТаблицаПараметровРасчетаАмортизации() Экспорт

	ПараметрыАмортизации = Новый ТаблицаЗначений;
	
	МассивТиповОбъектовУчета = Новый Массив;
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.ОбъектыЭксплуатации"));
	МассивТиповОбъектовУчета.Добавить(Тип("СправочникСсылка.НематериальныеАктивы"));
	ПараметрыАмортизации.Колонки.Добавить("ОбъектУчета", Новый ОписаниеТипов(МассивТиповОбъектовУчета));
	
	// БУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияБУ", Новый ОписаниеТипов("ПеречислениеСсылка.СпособыНачисленияАмортизацииОС,ПеречислениеСсылка.СпособыНачисленияАмортизацииНМА"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНаНачалоГодаБУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("ОбъемПродукцииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ПараметрыАмортизации.Колонки.Добавить("ВыработкаЗаМесяцБУ", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентАмортизацииБУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентУскоренияБУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентПериода", ОбщегоНазначения.ОписаниеТипаЧисло(15,6));
	ПараметрыАмортизации.Колонки.Добавить("ФактическийСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	ПараметрыАмортизации.Колонки.Добавить("ОставшийсяСрокИспользования", ОбщегоНазначения.ОписаниеТипаЧисло(4));
	
	// НУ
	ПараметрыАмортизации.Колонки.Добавить("МетодНачисленияНУ", Новый ОписаниеТипов("ПеречислениеСсылка.МетодыНачисленияАмортизации"));
	ПараметрыАмортизации.Колонки.Добавить("СрокИспользованияНУ", ОбщегоНазначения.ОписаниеТипаЧисло(4,0));
	ПараметрыАмортизации.Колонки.Добавить("СтоимостьНУ", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
	ПараметрыАмортизации.Колонки.Добавить("НормаАмортизацииНУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("КоэффициентНУ", ОбщегоНазначения.ОписаниеТипаЧисло(5,2));
	ПараметрыАмортизации.Колонки.Добавить("ПРДляВычисленияАмортизации", ОбщегоНазначения.ОписаниеТипаЧисло(15,2));
		
	Возврат ПараметрыАмортизации;

КонецФункции
 
// Возвращает таблицу начисленной амортизации
//
// Параметры:
//  ТаблицаОбъектовУчета	 - ТаблицаЗначений	 - Таблица объектов для начисления амортизации
//  ТаблицаРеквизитов		 - ТаблицаЗначений	 - Таблица реквизитов документа
//  ДобавитьПараметрыРасчета - Булево			 - Истина, если требуется добавить параметры расчета в таблицу начисленной амортизации
//  Отказ					 - Булево			 - Признак удачного завершения функции начисления амортизации.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Таблица начисленных расходов по амортизации (формат представлен в функции ПустаяТаблицаЗначенийНачисленнойАмортизации).
//
Функция НачисленнаяАмортизация(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, Отказ) Экспорт
	
	Возврат ПодготовитьТаблицуАмортизацияОС(ТаблицаОбъектовУчета, ТаблицаРеквизитов, ТаблицаПараметровРасчетаАмортизации, , Отказ);
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете

// Возвращает текст запроса временных таблиц для отражения амортизации в регламентированном учете.
//
// Параметры:
// 		ИмяДокумента - Строка - Строка имени метаданных.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеНачисленнойАмортизации(ИмяДокумента) Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТОбъектыДокумента(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТСчетаОтражения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТМестонахожденияОС(ИмяДокумента));
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизацияЦелевогоФинансирования());
	ТекстыОтражения.Добавить(ТекстЗапросаВТНачисленнаяАмортизационнаяПремия());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков по счетам учета
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиПоСчетам() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаБУ, 0)) КАК СуммаБУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаНУ, 0)) КАК СуммаНУ,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаПР, 0)) КАК СуммаПР,
	|	СУММА(ЕСТЬNULL(втНачисленнаяАмортизация.СуммаВР, 0)) КАК СуммаВР
	|ПОМЕСТИТЬ втАмортизацияСгруппированная
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета,
	|	ЭтоЦелевыеСредства
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втСчетаОтражения.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втВсеСчета
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетУчетаЦФ
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|ГДЕ
	|	втСчетаОтражения.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизации
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втСчетаОтражения.СчетНачисленияАмортизацииЦФ
	|ИЗ
	|	втСчетаОтражения КАК втСчетаОтражения
	|ГДЕ
	|	втСчетаОтражения.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.Организация КАК Организация,
	|	Местонахождение.Подразделение КАК Подразделение,
	|	ВЫБОР КОГДА &ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
	|		ТОГДА втПервоначальныеСведения.НаправлениеДеятельности
	|		ИНАЧЕ ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)
	|	КОНЕЦ КАК НаправлениеДеятельности,
	|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыСгруппированные
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК Местонахождение
	|		ПО втОбъектыДокумента.ОбъектУчета = Местонахождение.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокумента.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыУчета
	|		ПО втОбъектыДокумента.ОбъектУчета = ОбъектыУчета.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втВсеСчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Подразделение, НаправлениеДеятельности, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.Подразделение,
	|					Т.НаправлениеДеятельности,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеДт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втВсеСчета КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|			И Хозрасчетный.ПодразделениеКт = втОбъектыСгруппированные.Подразделение
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втОбъектыСгруппированные.НаправлениеДеятельности
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстаткиИДвиженияДокумента.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втХозрасчетныйОстатки
	|ИЗ
	|	втОстаткиИДвиженияДокумента КАК втОстаткиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиИДвиженияДокумента.Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыСгруппированные.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаПР, 0) КАК ВосстановительнаяСтоимостьПР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаВР, 0) КАК ВосстановительнаяСтоимостьВР,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаПР, 0) + ЕСТЬNULL(втАмортизация.СуммаПР, 0) КАК НакопленнаяАмортизацияПР,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизации.СуммаВР, 0) + ЕСТЬNULL(втАмортизация.СуммаВР, 0) КАК НакопленнаяАмортизацияВР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаБУ, 0) + ЕСТЬNULL(втАмортизация.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаНУ, 0) + ЕСТЬNULL(втАмортизация.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУ,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаПР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаПР, 0) + ЕСТЬNULL(втАмортизация.СуммаПР, 0)) КАК ОстаточнаяСтоимостьПР,
	|	ЕСТЬNULL(втОстаткиСчетУчета.СуммаВР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизации.СуммаВР, 0) + ЕСТЬNULL(втАмортизация.СуммаВР, 0)) КАК ОстаточнаяСтоимостьВР,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) КАК ВосстановительнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) КАК ВосстановительнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаПР, 0) КАК ВосстановительнаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаВР, 0) КАК ВосстановительнаяСтоимостьВРЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаБУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаБУ, 0) КАК НакопленнаяАмортизацияБУЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаНУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаНУ, 0) КАК НакопленнаяАмортизацияНУЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаПР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаПР, 0) КАК НакопленнаяАмортизацияПРЦФ,
	|	ЕСТЬNULL(-втОстаткиСчетАмортизацииЦФ.СуммаВР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаВР, 0) КАК НакопленнаяАмортизацияВРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаБУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаБУ, 0)) КАК ОстаточнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаНУ, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаНУ, 0)) КАК ОстаточнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаПР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаПР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаПР, 0)) КАК ОстаточнаяСтоимостьПРЦФ,
	|	ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаВР, 0) - втПервоначальныеСведения.МножительПримененияИзноса * (-ЕСТЬNULL(втОстаткиСчетАмортизацииЦФ.СуммаВР, 0) + ЕСТЬNULL(втАмортизацияЦФ.СуммаВР, 0)) КАК ОстаточнаяСтоимостьВРЦФ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0) / (ЕСТЬNULL(втОстаткиСчетУчета.СуммаБУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаБУ, 0))
	|	КОНЕЦ КАК ДоляЦФБУ,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0) / (ЕСТЬNULL(втОстаткиСчетУчета.СуммаНУ, 0) + ЕСТЬNULL(втОстаткиСчетУчетаЦФ.СуммаНУ, 0))
	|	КОНЕЦ КАК ДоляЦФНУ,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаНУ, 0) КАК НеУчитываемаяСтоимостьНУ,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаПР, 0) КАК КорректировкаСтоимостиПР,
	|	ЕСТЬNULL(втОстаткиСчетКорректировкаСтоимости.СуммаВР, 0) КАК КорректировкаСтоимостиВР
	|ПОМЕСТИТЬ втОстаткиПоСчетам
	|ИЗ
	|	втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаОтражения КАК втСчетаОтражения
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втСчетаОтражения.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизация
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизация.ОбъектУчета
	|			И (НЕ втАмортизация.ЭтоЦелевыеСредства)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияСгруппированная КАК втАмортизацияЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втАмортизацияЦФ.ОбъектУчета
	|			И (втАмортизацияЦФ.ЭтоЦелевыеСредства)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчета
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчета.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчета = втОстаткиСчетУчета.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизации
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизации.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизации = втОстаткиСчетАмортизации.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетУчетаЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетУчетаЦФ.ОбъектУчета
	|			И (втСчетаОтражения.СчетУчетаЦФ = втОстаткиСчетУчетаЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетАмортизацииЦФ
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетАмортизацииЦФ.ОбъектУчета
	|			И (втСчетаОтражения.СчетНачисленияАмортизацииЦФ = втОстаткиСчетАмортизацииЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втХозрасчетныйОстатки КАК втОстаткиСчетКорректировкаСтоимости
	|		ПО втОбъектыСгруппированные.ОбъектУчета = втОстаткиСчетКорректировкаСтоимости.ОбъектУчета
	|			И (втОстаткиСчетКорректировкаСтоимости.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества))
	|ГДЕ
	|	НЕ (
	|		втОстаткиСчетУчета.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетУчетаЦФ.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизации.ОбъектУчета ЕСТЬ NULL
	|		И втОстаткиСчетАмортизацииЦФ.ОбъектУчета ЕСТЬ NULL
	|	)";
	
КонецФункции

// Возвращает текст запроса временной таблицы остатков резерва переоценки
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчетеОстаткиРезерваПереоценки() Экспорт
	
	Возврат
	"ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ втСчетаДооценки
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В ИЕРАРХИИ(ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПриростСтоимостиПоПереоценке))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК СуммаБУ,
	|	ХозрасчетныйОстатки.СуммаНУОстатокКт КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстатокКт КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстатокКт КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиДооценкиИДвиженияДокумента
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ГраницаМесяцОкончание,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаДооценки КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыСгруппированные КАК Т)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетДт,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУДт,
	|	Хозрасчетный.СуммаПРДт,
	|	Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетДт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.СчетКт,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУКт,
	|	-Хозрасчетный.СуммаПРКт,
	|	-Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСчетаДооценки КАК втВсеСчета
	|		ПО Хозрасчетный.СчетКт = втВсеСчета.Счет
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыСгруппированные КАК втОбъектыСгруппированные
	|		ПО Хозрасчетный.Организация = втОбъектыСгруппированные.Организация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (втОбъектыСгруппированные.ОбъектУчета = ХозрасчетныйСубконто.Значение)
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет КАК Счет,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаПР) КАК СуммаПР,
	|	СУММА(втОстаткиДооценкиИДвиженияДокумента.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиРезерваДооценки
	|ИЗ
	|	втОстаткиДооценкиИДвиженияДокумента КАК втОстаткиДооценкиИДвиженияДокумента
	|
	|СГРУППИРОВАТЬ ПО
	|	втОстаткиДооценкиИДвиженияДокумента.ОбъектУчета,
	|	втОстаткиДооценкиИДвиженияДокумента.Счет";
	
КонецФункции

// Возвращает текст запроса для отражения амортизации по документу в регламентированном учете.
//
// Возвращаемое значение:
// 		Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчетеНачисленнойАмортизации() Экспорт
	
	ТекстыОтражения = Новый Массив;
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияКВ());
	ТекстыОтражения.Добавить(ТекстОтраженияИзнос());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизация());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУ());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремия());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУ());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияОтправитель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУОтправитель());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияПолучатель());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУПолучатель());
	
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизацияБезНУНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияНаПрочиеОперации());
	ТекстыОтражения.Добавить(ТекстОтраженияАмортизационнаяПремияБезНУНаПрочиеОперации());
	
	ТекстыОтражения.Добавить(ТекстОтраженияДоходыОтЦелевогоФинансирования());
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете

// Выполняет проверку ошибок в заполнении способов отражения расходов по амортизации.
//
// Параметры:
// 		ЭтотОбъект - ДокументОбъект.АмортизацияОС - Объект документа амортизации
// 		Отказ - Булево - Возврат, признак ошибки при выполнения проверки.
//
Процедура ПроверитьСпособыОтраженияРасходовНаПрочиеАктивы(ЭтотОбъект, Отказ) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втАктуальныеОбъекты
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(&Дата, Организация В (&Организация)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыКНачислению
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втАктуальныеОбъекты КАК Т)) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	(ПорядокУчетаОСБУ.НачислятьАмортизациюБУ
	|		ИЛИ ПорядокУчетаОСБУ.НачислятьАмортизациюНУ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОбъектУчета,
	|	ЕСТЬNULL(ИзменениеПараметровОСОтражениеАмортизационныхРасходов.СтатьяРасходов, ПорядокУчетаОСБУ.СтатьяРасходовБУ) КАК СтатьяРасходов
	|ПОМЕСТИТЬ втСтатьиАмортизации
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&Дата,
	|			(Организация, ОсновноеСредство) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыКНачислению КАК Т)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов КАК ИзменениеПараметровОСОтражениеАмортизационныхРасходов
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ИзменениеПараметровОСОтражениеАмортизационныхРасходов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК СтатьяРасходов,
	|	втСтатьиАмортизации.ОбъектУчета КАК ОбъектУчета
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтатьиАмортизации КАК втСтатьиАмортизации
	|		ПО (втСтатьиАмортизации.СтатьяРасходов = СтатьиРасходов.Ссылка)
	|ГДЕ
	|	СтатьиРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", КонецМесяца(ЭтотОбъект.Дата));
	Запрос.УстановитьПараметр("Организация", ЭтотОбъект.Организация);
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
		
		СообщениеОбОшибке =
		НСтр("ru = 'В способе отражения расходов по амортизации для ""%1"" использована статья ""%2"" с не поддерживаемым вариантом распределения расходов ""На прочие активы""
		|Измените способ отражения расходов для данного актива с помощью документа ""Изменение параметров ОС""';
		|en = 'The ""%2"" item which does not support the ""On other assets"" expense allocation option is used in the depreciation expense recording method for ""%1"".
		|Change the expense allocation option for this asset using the ""Change of FA parameters"" document'");
		
		СообщениеОбОшибке = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			СообщениеОбОшибке,
			Выборка.ОбъектУчета,
			Выборка.СтатьяРасходов);
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			СообщениеОбОшибке,,,,
			Отказ);
		
	КонецЦикла;
	
КонецПроцедуры

// Инициализирует параметры запроса данных проведения при отражении начисленной амортизации.
//
// Параметры:
//	Запрос			- Запрос 	- объект запроса к данным.
//	ДопПараметры	- Структура	- параметры, используемые для инициализации и получения данных документа.
//									см. описание ПроведениеДокументов.ДопПараметрыИнициализироватьДанныеДокументаДляПроведения().
//
Процедура ИнициализироватьПараметрыЗапросаПриОтраженииАмортизации(Запрос, ДопПараметры) Экспорт
	
	ДополнительныеСвойства = Неопределено;
	
	Если ДопПараметры = Неопределено
		Или Не ДопПараметры.Свойство("ДополнительныеСвойства", ДополнительныеСвойства)
		Или ДополнительныеСвойства = Неопределено
		Или Не ДополнительныеСвойства.Свойство("НачисленнаяАмортизация") Тогда
		
		Возврат;
		
	КонецЕсли;
	
	Запрос.УстановитьПараметр("ТаблицаАмортизации", ДополнительныеСвойства.НачисленнаяАмортизация);
	Запрос.УстановитьПараметр("Граница", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("КонецМесяца", Дата(1, 1, 1, 0, 0, 0));
	
	Запрос.УстановитьПараметр("СписаниеОстаточнойСтоимости", Ложь);
	Запрос.УстановитьПараметр("ЧастичнаяЛиквидация", Ложь);
	Запрос.УстановитьПараметр("ТекущееСостояниеОбъектов", Ложь);
	Запрос.УстановитьПараметр("ДатаСписанияОстаточнойСтоимости", Дата(1, 1, 1, 0, 0, 0));
	Запрос.УстановитьПараметр("Организация", Справочники.Организации.ПустаяСсылка());
	Запрос.УстановитьПараметр("Подразделение", Справочники.СтруктураПредприятия.ПустаяСсылка());
	Запрос.УстановитьПараметр("СтатьяРасходов", ПланыВидовХарактеристик.СтатьиРасходов.ПустаяСсылка());
	Запрос.УстановитьПараметр("АналитикаРасходов", Неопределено);
	
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихДоходовРасходов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихДоходовРасходов"));
	Запрос.УстановитьПараметр(
		"ИспользоватьУчетПрочихАктивовПассивов",
		ПолучитьФункциональнуюОпцию("ИспользоватьУчетПрочихАктивовПассивов"));
	Запрос.УстановитьПараметр(
		"ПогашениеУпрЗатрат",
		ПолучитьФункциональнуюОпцию("ИспользоватьАмортизациюБухгалтерскогоУчетаВУправленческомУчете"));
		
	Запрос.УстановитьПараметр("НачалоУчета2_4", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	Запрос.УстановитьПараметр("ИспользоватьВнеоборотныеАктивы2_4", Константы.ИспользоватьВнеоборотныеАктивы2_4.Получить());
		
КонецПроцедуры

// Помещает в тексты запроса временную таблицу
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса в который должны быть помещены временные таблицы
// 		ИменаТаблиц - Строка - Строка перечисленных через запятую временных таблиц, которые требуется поместить в ТекстыЗапроса.
//
Процедура ДобавитьВременныеТаблицы(ТекстыЗапроса, ИменаТаблиц) Экспорт
	
	СтруктураИменаТаблиц = Новый Структура(ИменаТаблиц);
	
	Если СтруктураИменаТаблиц.Свойство("НачисленнаяАмортизация") Тогда
		
		ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ТекущееСостояниеОбъектов") Тогда
		
		ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("ПараметрыОбъектовУчета") Тогда
		
		ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("втЦелевыеСредстваРеглСгруппированныеПоНаправлениям") Тогда
		
		ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
		
	ИначеЕсли СтруктураИменаТаблиц.Свойство("втЦелевыеСредстваУпр") Тогда
		
		ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПрочиеРасходы";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы()
	+ Разделитель + ПрочиеРасходы_АмортизацияРеглСтоимости()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в прочих расходах при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеРасходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеРасходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПрочиеРасходы", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПрочиеРасходы(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
		
КонецПроцедуры

Процедура ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтИсходныеПартииПрочихРасходов";
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстОписаниеВтИсходныеПартииПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ Разделитель + ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса)
	
	ИмяРегистра = "ВтПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтИсходныеПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтИсходныеПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаВтПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

// Текст запроса таблицы движений амортизации в партиях прочих расходов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПартииПрочихРасходов(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса = Неопределено) Экспорт
	
	ИмяРегистра = "ПартииПрочихРасходов";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Если Не ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтПартииПрочихРасходов", ТекстыЗапроса) Тогда
		ТекстЗапросаТаблицаВтПартииПрочихРасходов(ТекстыЗапроса, ДополнительныйТекстЗапроса);
	КонецЕсли;
	
	ТекстЗапроса = РегистрыНакопления.ПартииПрочихРасходов.ТекстЗапросаТаблицаПартииПрочихРасходов();
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы движений прочих доходов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеДоходы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеДоходы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеДоходы
	|" + ПрочиеДоходы_ПустаяТаблица()
	+ Разделитель + ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	+ Разделитель + ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "");
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы движений прочих активов/пассивов при проведении документа начисления амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ПрочиеАктивыПассивы(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ПрочиеАктивыПассивы";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса);
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса);
	ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса);
	ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПрочиеАктивыПассивы
	|" + ПрочиеАктивыПассивы_ПустаяТаблица()
	+ Разделитель + ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	+ Разделитель + ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	+ Разделитель + ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	+ ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), Разделитель + ДополнительныйТекстЗапроса, "")
	+ Разделитель + РегистрыНакопления.ПрочиеАктивыПассивы.ТекстЗапросаТаблицаПрочиеАктивыПассивы();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы порядка отражения прочих операций по начисленной амортизации.
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
//
Процедура ПорядокОтраженияПрочихОпераций(ТекстыЗапроса, Регистры) Экспорт
	
	ИмяРегистра = "ПорядокОтраженияПрочихОпераций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ПорядокОтраженияПрочихОпераций
	|" +
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	&Период КАК Дата,
	|	&Организация КАК Организация,
	|	&Ссылка КАК Документ,
	|	"""" КАК ИдентификаторСтроки
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиПрочихОпераций
	|	
	|ГДЕ
	|	СтатьиПрочихОпераций.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	И СтатьиПрочихОпераций.ВидЦенностиНДС = ЗНАЧЕНИЕ(Перечисление.ВидыЦенностей.ПрочиеРаботыИУслуги)
	|	И(
	|		СтатьиПрочихОпераций.Ссылка = &СтатьяРасходов
	|		ИЛИ СтатьиПрочихОпераций.Ссылка В (ВЫБРАТЬ Т.СтатьяРасходов ИЗ втНачисленнаяАмортизация КАК Т)
	|	)
	|";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

// Текст запроса таблицы отражения документа в регл. учете
//
// Параметры:
// 		ТекстыЗапроса - СписокЗначений - Список текстов запроса
// 		Регистры - Строка, Структура, Неопределено - список регистров, разделенных запятой, или структура, в ключах которой - имена регистров требующих заполнения.
// 		ДополнительныйТекстЗапроса - Строка - Строка дополнительного текста запроса объединения.
//
Процедура ОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры, ДополнительныйТекстЗапроса=Неопределено) Экспорт
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	
	Разделитель = ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении();
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ОтражениеДокументовВРеглУчете
	|" + ?(ЗначениеЗаполнено(ДополнительныйТекстЗапроса), ДополнительныйТекстЗапроса + Символы.ПС + "ОБЪЕДИНИТЬ ВСЕ" + Символы.ПС, "") +
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	
	|	&Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|	
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&Период КАК Период,
	|	
	|	НачисленнаяАмортизация.Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|ИЗ
	|	втНачисленнаяАмортизация КАК НачисленнаяАмортизация
	|ГДЕ
	|	НачисленнаяАмортизация.Организация <> &Организация
	|"
	+ Разделитель + ДоходыИРасходыСервер.ДополнитьТекстЗапросаТаблицаОтражениеДокументовВРеглУчете();
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область БлокировкаПриОбновленииИБ

// Заполняет входящие данные расчета и отражения амортизации, необходимые для проверки выполненных обновлений ИБ.
//
// Параметры:
// 		ВходящиеДанные - Соответствие из КлючИЗначение - Данные расчета и отражения амортизации:
// 			* Ключ - Строка, ОбъектМетаданных - входящие данные, используемые  операцией
// 			* Значение - см. ОбновлениеИнформационнойБазы.ЕстьДанныеДляОбработки.Отбор
//
Процедура ЗаполнитьВходящиеДанныеАмортизации(ВходящиеДанные) Экспорт
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыНакопления.ПрочиеРасходы);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыБухгалтерии.Хозрасчетный);
	
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.МестонахождениеОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПорядокУчетаОСБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПараметрыАмортизацииОСБУ);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.ПервоначальныеСведенияОС);
	ВходящиеДанные.Вставить(Метаданные.РегистрыСведений.НаработкиОбъектовЭксплуатации);
	
	ВходящиеДанные.Вставить(Метаданные.Справочники.ГодовыеГрафикиАмортизацииОС);
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Создает временную таблицу накопленных стоимостей для указанного менеджера в разрезе основных средств и документов
// 		Переданный менеджер временных таблиц должен содержать таблицу "втОбъектыДокументов",
// 		содержащую поля "Ссылка", "ОсновноеСредство", "Дата", "Организация".
//
// Параметры:
// 		МенеджерВТ - МенеджерВременныхТаблиц - Менеджер временных таблиц исходного запроса.
//
Процедура СоздатьВременнуюТаблицуСостоянияОС(МенеджерВТ) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОС.Период) КАК Период,
	|	МАКСИМУМ(СчетаУчетаЦФ.Период) КАК ПериодЦФ,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПорядокУчетаОС.Организация
	|			И втОбъектыДокументов.Ссылка <> ПорядокУчетаОС.Регистратор
	|			И втОбъектыДокументов.Дата > ПорядокУчетаОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втОбъектыДокументов.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втОбъектыДокументов.Ссылка <> СчетаУчетаЦФ.Регистратор
	|			И втОбъектыДокументов.Дата > СчетаУчетаЦФ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСПериод.Ссылка,
	|	втПорядокУчетаОСПериод.ОсновноеСредство,
	|	ПорядокУчетаОС.НаправлениеДеятельности,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ЕСТЬNULL(ПорядокУчетаОС.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЕСТЬNULL(ПорядокУчетаОС.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизации,
	|	ЕСТЬNULL(СчетУчетаСтоимостиЦФ.СчетУчета, ЕСТЬNULL(СчетаУчетаЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(СчетУчетаАмортизацииЦФ.СчетУчета, ЕСТЬNULL(СчетаУчетаЦФ.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизацииЦФ
	|ПОМЕСТИТЬ втПорядокУчетаОС
	|ИЗ
	|	втПорядокУчетаОСПериод КАК втПорядокУчетаОСПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Организация = ПорядокУчетаОС.Организация
	|			И втПорядокУчетаОСПериод.Период = ПорядокУчетаОС.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС КАК СчетаУчетаЦФ
	|		ПО втПорядокУчетаОСПериод.ОсновноеСредство = СчетаУчетаЦФ.ОсновноеСредство
	|			И втПорядокУчетаОСПериод.Период = СчетаУчетаЦФ.Период
	|			И (СчетаУчетаЦФ.ПрименениеЦелевогоФинансирования)
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимостиЦФ
	|		ПО СчетУчетаСтоимостиЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
	|			И СчетУчетаСтоимостиЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимостиЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимостиЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизацииЦФ
	|		ПО СчетУчетаАмортизацииЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
	|			И СчетУчетаАмортизацииЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизацииЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизацииЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиОборотыСчетУчета.Период КАК Период,
	|	ОстаткиОборотыСчетУчета.Регистратор КАК Регистратор,
	|	ОстаткиОборотыСчетУчета.Организация КАК Организация,
	|	ОстаткиОборотыСчетУчета.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиОборотыСчетУчета.Счет КАК Счет,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокДт КАК СуммаНачальныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаНачальныйОстатокКт КАК СуммаНачальныйОстатокКт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокДт КАК СуммаКонечныйОстатокДт,
	|	ОстаткиОборотыСчетУчета.СуммаКонечныйОстатокКт КАК СуммаКонечныйОстатокКт
	|ПОМЕСТИТЬ втСтоимостиЗаписи
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОстаткиИОбороты(
	|			,
	|			,
	|			Регистратор,
	|			Движения,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.СчетУчета
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизации
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетУчетаЦФ
	|				ИЗ
	|					втПорядокУчетаОС КАК Т
	|			
	|				ОБЪЕДИНИТЬ ВСЕ
	|			
	|				ВЫБРАТЬ
	|					Т.СчетАмортизацииЦФ
	|				ИЗ
	|					втПорядокУчетаОС КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			(Организация, Субконто1) В
	|				(ВЫБРАТЬ
	|					Т.Организация,
	|					Т.ОсновноеСредство
	|				ИЗ
	|					втОбъектыДокументов КАК Т)) КАК ОстаткиОборотыСчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация КАК Организация,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	МАКСИМУМ(втСтоимостиЗаписи.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втСтоимостиПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втОбъектыДокументов.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = втСтоимостиЗаписи.Организация
	|			И втОбъектыДокументов.Дата >= втСтоимостиЗаписи.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втСтоимостиЗаписи.Счет,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСтоимостиПериод.Ссылка,
	|	втСтоимостиЗаписи.ОсновноеСредство,
	|	втСтоимостиЗаписи.Счет КАК Счет,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокДт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокДт
	|	КОНЕЦ КАК СуммаОстатокДт,
	|	ВЫБОР
	|		КОГДА втСтоимостиПериод.Ссылка = втСтоимостиЗаписи.Регистратор
	|			ТОГДА втСтоимостиЗаписи.СуммаНачальныйОстатокКт
	|		ИНАЧЕ втСтоимостиЗаписи.СуммаКонечныйОстатокКт
	|	КОНЕЦ КАК СуммаОстатокКт
	|ПОМЕСТИТЬ втСтоимости
	|ИЗ
	|	втСтоимостиПериод КАК втСтоимостиПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиЗаписи КАК втСтоимостиЗаписи
	|		ПО втСтоимостиПериод.ОсновноеСредство = втСтоимостиЗаписи.ОсновноеСредство
	|			И втСтоимостиПериод.Организация = втСтоимостиЗаписи.Организация
	|			И втСтоимостиПериод.Счет = втСтоимостиЗаписи.Счет
	|			И втСтоимостиПериод.Период = втСтоимостиЗаписи.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПервоначальныеСведения.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПервоначальныеСведенияПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПервоначальныеСведения.Организация
	|			И втОбъектыДокументов.Ссылка <> ПервоначальныеСведения.Регистратор
	|			И втОбъектыДокументов.Дата > ПервоначальныеСведения.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПервоначальныеСведенияПериод.Ссылка КАК Ссылка,
	|	ПервоначальныеСведения.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведения.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведения.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ПервоначальныеСведения.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ втПервоначальныеСведения
	|ИЗ
	|	втПервоначальныеСведенияПериод КАК втПервоначальныеСведенияПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС КАК ПервоначальныеСведения
	|		ПО втПервоначальныеСведенияПериод.ОсновноеСредство = ПервоначальныеСведения.ОсновноеСредство
	|			И втПервоначальныеСведенияПериод.Организация = ПервоначальныеСведения.Организация
	|			И втПервоначальныеСведенияПериод.Период = ПервоначальныеСведения.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(МестонахождениеОС.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втМестонахождениеОСПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втОбъектыДокументов.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = МестонахождениеОС.Организация
	|			И втОбъектыДокументов.Ссылка <> МестонахождениеОС.Регистратор
	|			И втОбъектыДокументов.Дата > МестонахождениеОС.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втМестонахождениеОСПериод.Ссылка КАК Ссылка,
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|	МестонахождениеОС.Местонахождение КАК Местонахождение
	|ПОМЕСТИТЬ втМестонахождениеОС
	|ИЗ
	|	втМестонахождениеОСПериод КАК втМестонахождениеОСПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС КАК МестонахождениеОС
	|		ПО втМестонахождениеОСПериод.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|			И втМестонахождениеОСПериод.Организация = МестонахождениеОС.Организация
	|			И втМестонахождениеОСПериод.Период = МестонахождениеОС.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка КАК Ссылка
	|ПОМЕСТИТЬ втПорядокУчетаОСБУПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПорядокУчетаОСБУ.Организация
	|			И втОбъектыДокументов.Ссылка <> ПорядокУчетаОСБУ.Регистратор
	|			И втОбъектыДокументов.Дата > ПорядокУчетаОСБУ.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПорядокУчетаОСБУПериод.Ссылка КАК Ссылка,
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа
	|ПОМЕСТИТЬ втПорядокУчетаОСБУ
	|ИЗ
	|	втПорядокУчетаОСБУПериод КАК втПорядокУчетаОСБУПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО втПорядокУчетаОСБУПериод.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И втПорядокУчетаОСБУПериод.Организация = ПорядокУчетаОСБУ.Организация
	|			И втПорядокУчетаОСБУПериод.Период = ПорядокУчетаОСБУ.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.ОсновноеСредство,
	|	МАКСИМУМ(ПараметрыАмортизации.Период) КАК Период,
	|	втОбъектыДокументов.Ссылка
	|ПОМЕСТИТЬ втПараметрыАмортизацииПериод
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втОбъектыДокументов.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втОбъектыДокументов.Организация = ПараметрыАмортизации.Организация
	|			И втОбъектыДокументов.Ссылка <> ПараметрыАмортизации.Регистратор
	|			И втОбъектыДокументов.Дата > ПараметрыАмортизации.Период
	|
	|СГРУППИРОВАТЬ ПО
	|	втОбъектыДокументов.ОсновноеСредство,
	|	втОбъектыДокументов.Организация,
	|	втОбъектыДокументов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втПараметрыАмортизацииПериод.Ссылка КАК Ссылка,
	|	ПараметрыАмортизации.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизации.СрокПолезногоИспользованияБУ КАК СрокПолезногоИспользования,
	|	ПараметрыАмортизации.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации
	|ПОМЕСТИТЬ втПараметрыАмортизации
	|ИЗ
	|	втПараметрыАмортизацииПериод КАК втПараметрыАмортизацииПериод
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизации
	|		ПО втПараметрыАмортизацииПериод.ОсновноеСредство = ПараметрыАмортизации.ОсновноеСредство
	|			И втПараметрыАмортизацииПериод.Организация = ПараметрыАмортизации.Организация
	|			И втПараметрыАмортизацииПериод.Период = ПараметрыАмортизации.Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втОбъектыДокументов.Ссылка КАК Ссылка,
	|
	|	втОбъектыДокументов.ОсновноеСредство КАК ОсновноеСредство,
	|	втОбъектыДокументов.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	втОбъектыДокументов.ОсновноеСредство.КодПоОКОФ КАК КодПоОКОФ,
	|	втОбъектыДокументов.ОсновноеСредство.ШифрПоЕНАОФ КАК ШифрПоЕНАОФ,
	|	втОбъектыДокументов.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|
	|	ЕСТЬNULL(втПервоначальныеСведения.СпособНачисленияАмортизации, """") КАК СпособНачисленияАмортизации,
	|	ЕСТЬNULL(втПервоначальныеСведения.ДатаПринятияКУчету, ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)) КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(втПорядокУчетаОСБУ.АмортизационнаяГруппа, ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ПустаяСсылка)) КАК АмортизационнаяГруппа,
	|
	|	ЕСТЬNULL(втМестонахождениеОС.МОЛ, ЗНАЧЕНИЕ(Справочник.ФизическиеЛица.ПустаяСсылка)) КАК МОЛ,
	|	ЕСТЬNULL(втМестонахождениеОС.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Местонахождение,
	|
	|	ЕСТЬNULL(втПорядокУчетаОС.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчета,
	|	ЕСТЬNULL(втПорядокУчетаОС.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетАмортизации,
	|
	|	ЕСТЬNULL(втПараметрыАмортизации.СрокПолезногоИспользования, 0) КАК СрокПолезногоИспользования,
	|	ЕСТЬNULL(втПараметрыАмортизации.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) КАК НакопленнаяСтоимость,
	|	ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) + ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК НакопленнаяАмортизация,
	|	ЕСТЬNULL(втНакопленнаяСтоимость.СуммаОстатокДт, 0) + ЕСТЬNULL(втНакопленнаяСтоимостьЦФ.СуммаОстатокДт, 0) - ЕСТЬNULL(втНакопленнаяАмортизация.СуммаОстатокКт, 0) - ЕСТЬNULL(втНакопленнаяАмортизацияЦФ.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втСведенияОбъектовДокументов
	|ИЗ
	|	втОбъектыДокументов КАК втОбъектыДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|		ПО втОбъектыДокументов.Ссылка = втПервоначальныеСведения.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПервоначальныеСведения.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК втМестонахождениеОС
	|		ПО втОбъектыДокументов.Ссылка = втМестонахождениеОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втМестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыАмортизации КАК втПараметрыАмортизации
	|		ПО втОбъектыДокументов.Ссылка = втПараметрыАмортизации.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПараметрыАмортизации.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК втПорядокУчетаОС
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОС.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОСБУ КАК втПорядокУчетаОСБУ
	|		ПО втОбъектыДокументов.Ссылка = втПорядокУчетаОСБУ.Ссылка
	|			И втОбъектыДокументов.ОсновноеСредство = втПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимость
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяСтоимость.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяСтоимость.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетУчета = втНакопленнаяСтоимость.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяСтоимостьЦФ
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяСтоимостьЦФ.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяСтоимостьЦФ.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетУчетаЦФ = втНакопленнаяСтоимостьЦФ.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизация
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяАмортизация.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяАмортизация.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетАмортизации = втНакопленнаяАмортизация.Счет)
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимости КАК втНакопленнаяАмортизацияЦФ
	|		ПО (втПорядокУчетаОС.Ссылка = втНакопленнаяАмортизацияЦФ.Ссылка)
	|			И (втПорядокУчетаОС.ОсновноеСредство = втНакопленнаяАмортизацияЦФ.ОсновноеСредство)
	|			И (втПорядокУчетаОС.СчетАмортизацииЦФ = втНакопленнаяАмортизацияЦФ.Счет)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	втСведенияОбъектовДокументов.Ссылка,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК КоличествоРазличныхСпособНачисленияАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ГруппаОС) КАК КоличествоРазличныхГруппаОС,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КодПоОКОФ) КАК КоличествоРазличныхКодПоОКОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК КоличествоРазличныхШифрПоЕНАОФ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК КоличествоРазличныхАмортизационнаяГруппа,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.МОЛ) КАК КоличествоРазличныхМОЛ,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.Местонахождение) КАК КоличествоРазличныхМестонахождение,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетУчета) КАК КоличествоРазличныхСчетУчета,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СчетАмортизации) КАК КоличествоРазличныхСчетАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК КоличествоРазличныхСрокПолезногоИспользования,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоличествоРазличныхКоэффициентАмортизации,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК КоличествоРазличныхНакопленнаяСтоимость,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК КоличествоРазличныхНакопленнаяАмортизация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК КоличествоРазличныхОстаточнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СпособНачисленияАмортизации) КАК СпособНачисленияАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ГруппаОС) КАК ГруппаОС,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КодПоОКОФ) КАК КодПоОКОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ШифрПоЕНАОФ) КАК ШифрПоЕНАОФ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.АмортизационнаяГруппа) КАК АмортизационнаяГруппа,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.МОЛ) КАК МОЛ,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.Местонахождение) КАК Местонахождение,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетУчета) КАК СчетУчета,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СчетАмортизации) КАК СчетАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.СрокПолезногоИспользования) КАК СрокПолезногоИспользования,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.КоэффициентАмортизации) КАК КоэффициентАмортизации,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяСтоимость) КАК НакопленнаяСтоимость,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.НакопленнаяАмортизация) КАК НакопленнаяАмортизация,
	|	МАКСИМУМ(втСведенияОбъектовДокументов.ОстаточнаяСтоимость) КАК ОстаточнаяСтоимость
	|ПОМЕСТИТЬ втОбщиеСведенияОбъектовДокументов
	|ИЗ
	|	втСведенияОбъектовДокументов КАК втСведенияОбъектовДокументов
	|
	|СГРУППИРОВАТЬ ПО
	|	втСведенияОбъектовДокументов.Ссылка";
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВТ);
	ИспользуемыеТаблицы.Добавить("втСведенияОбъектовДокументов");
	ИспользуемыеТаблицы.Добавить("втОбщиеСведенияОбъектовДокументов");
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.Выполнить();
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВТ,, ИспользуемыеТаблицы);
	
КонецПроцедуры

// Определяет в какой организации ОС принято к учету.
//
// Параметры:
//  ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации - ОС, для которого нужно проверить принятие к учету.
// 
// Возвращаемое значение:
//  СправочникСсылка.Организации - организация, в которой данное ОС принято к учету.
//
Функция ОрганизацияВКоторойОСПринятоКУчету(ОсновноеСредство) Экспорт

	Если НЕ ПравоДоступа("Чтение", Метаданные.РегистрыСведений.ПорядокУчетаОСБУ) Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли; 
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
	|	ПорядокУчетаОСБУ.Организация
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(, ОсновноеСредство = &ОсновноеСредство) КАК ПорядокУчетаОСБУ
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ В (
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету),
	|		ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету))";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОсновноеСредство", ОсновноеСредство);
	
	Результат = Запрос.Выполнить();
	Если Результат.Пустой() Тогда
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Организация;

КонецФункции
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОтражениеАмортизацииВРеглУчете_ВременныеТаблицы

Функция ТекстЗапросаВТНачисленнаяАмортизация(ИмяДокумента) Экспорт
	
	Если ИмяДокумента = "АмортизацияОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР КАК СуммаВР,
		|	ВЫРАЗИТЬ(ТаблицаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втТаблицаАмортизации КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка";
		
	ИначеЕсли ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Организация                         КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета                         КАК ОбъектУчета,
		|	ТаблицаАмортизации.Подразделение                       КАК Подразделение,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.НаправлениеДеятельности             КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.СтатьяРасходов                      КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов                   КАК АналитикаРасходов,
		|
		|	ТаблицаАмортизации.СуммаБУ                             КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ                             КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР                             КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР                             КАК СуммаВР,
		|
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия            КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии       КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства                  КАК ЭтоЦелевыеСредства,
		|
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов       КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов                КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	втНачисленнаяАмортизацияДокумента КАК ТаблицаАмортизации";
		
	Иначе	
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ТаблицаАмортизации.Ссылка.Организация КАК Организация,
		|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
		|	ТаблицаАмортизации.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ТаблицаАмортизации.Подразделение КАК Подразделение,
		|	ТаблицаАмортизации.СуммаБУ КАК СуммаБУ,
		|	ТаблицаАмортизации.СуммаНУ КАК СуммаНУ,
		|	ТаблицаАмортизации.СуммаПР КАК СуммаПР,
		|	ТаблицаАмортизации.СуммаВР КАК СуммаВР,
		|	ТаблицаАмортизации.СтатьяРасходов КАК СтатьяРасходов,
		|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов,
		|	ТаблицаАмортизации.ЭтоАмортизационнаяПремия КАК ЭтоАмортизационнаяПремия,
		|	ТаблицаАмортизации.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
		|	ТаблицаАмортизации.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
		|	ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
		|	ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК ОрганизацияПолучательРасходов,
		|	ТаблицаАмортизации.СчетПередачиРасходов КАК СчетПередачиРасходов
		|ПОМЕСТИТЬ втНачисленнаяАмортизация
		|ИЗ
		|	Документ.СписаниеОС.НачисленнаяАмортизация КАК ТаблицаАмортизации
		|	ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК СправочникОбъектыУчета
		|		ПО ТаблицаАмортизации.ОбъектУчета = СправочникОбъектыУчета.Ссылка
		|ГДЕ
		|	ТаблицаАмортизации.Ссылка = &Ссылка";
		
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ." + ИмяДокумента);
		
	КонецЕсли;
	
	ПрефиксЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|";
	
	Возврат ПрефиксЗапроса + ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТОбъектыДокумента(ИмяДокумента)
	
	ТекстыЗапроса = Новый Массив;
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втВсеОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.Организация КАК Организация,
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втВсеОбъектыДокумента
	|ИЗ
	|	втНачисленнаяАмортизация КАК ТаблицаАмортизации";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Если ИмяДокумента <> "АмортизацияОС" Тогда
		
		ТекстВыборкиТаблицыПараметра = 
		"ВЫБРАТЬ
		|	ТаблицаДокумента.Ссылка.Организация КАК Организация,
		|	ТаблицаДокумента.ОсновноеСредство КАК ОбъектУчета
		|ИЗ
		|	Документ.СписаниеОС.ОС КАК ТаблицаДокумента
		|ГДЕ
		|	ТаблицаДокумента.Ссылка = &Ссылка";
		
		ТекстыЗапроса.Добавить(ТекстВыборкиТаблицыПараметра);
		
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "Документ.СписаниеОС", "Документ."+ИмяДокумента);
	ТекстыЗапроса = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ТекстЗапроса);
	
	ТекстЗапроса = 
	"// Временная таблица втОбъектыДокумента
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втВсеОбъектыДокумента.Организация КАК Организация,
	|	втВсеОбъектыДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	втВсеОбъектыДокумента КАК втВсеОбъектыДокумента";
	ТекстыЗапроса.Добавить(ТекстЗапроса);
	
	Возврат СтрСоединить(ТекстыЗапроса, ОбщегоНазначения.РазделительПакетаЗапросов());
	
КонецФункции

Функция ТекстЗапросаВТСчетаОтражения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.СчетУчета КАК СчетУчета,
		|	втДанныеДокумента.СчетАмортизации КАК СчетНачисленияАмортизации,
		|	втДанныеДокумента.ВариантПримененияЦелевогоФинансирования В (
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Частичное),
		|		ЗНАЧЕНИЕ(Перечисление.ВариантыПримененияЦелевогоФинансирования.Полное)) КАК ПрименениеЦелевогоФинансирования,
		|	втДанныеДокумента.СтатьяДоходов КАК СтатьяДоходов,
		|	втДанныеДокумента.АналитикаДоходов КАК АналитикаДоходов,
		|	втДанныеДокумента.СчетУчетаЦФ КАК СчетУчетаЦФ,
		|	втДанныеДокумента.СчетАмортизацииЦФ КАК СчетНачисленияАмортизацииЦФ
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
		|	ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ЕСТЬNULL(СчетаОтражения.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетНачисленияАмортизации,
		|	НЕ ПараметрыЦелевогоФинансирования.ОсновноеСредство ЕСТЬ NULL КАК ПрименениеЦелевогоФинансирования,
		|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов,
		|	ЕСТЬNULL(ПараметрыЦелевогоФинансирования.АналитикаДоходов, НЕОПРЕДЕЛЕНО) КАК АналитикаДоходов,
		|	ЕСТЬNULL(СчетУчетаСтоимостиЦФ.СчетУчета, ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
		|	ЕСТЬNULL(СчетУчетаАмортизацииЦФ.СчетУчета, ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетНачисленияАмортизацииЦФ
		|ПОМЕСТИТЬ втСчетаОтражения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И НЕ Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК СчетаОтражения
		|		ПО втОбъектыДокумента.ОбъектУчета = СчетаОтражения.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПараметрыЦелевогоФинансирования
		|		ПО втОбъектыДокумента.ОбъектУчета = ПараметрыЦелевогоФинансирования.ОсновноеСредство
		|			И (ПараметрыЦелевогоФинансирования.ПрименениеЦелевогоФинансирования)
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
		|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
		|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаСтоимости.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимостиЦФ
		|		ПО СчетУчетаСтоимостиЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
		|			И СчетУчетаСтоимостиЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаСтоимостиЦФ.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаСтоимостиЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
		|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
		|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаАмортизации.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизацииЦФ
		|		ПО СчетУчетаАмортизацииЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
		|			И СчетУчетаАмортизацииЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
		|			И СчетУчетаАмортизацииЦФ.АналитикаУчета = СчетаОтражения.ГруппаФинансовогоУчета
		|			И СчетУчетаАмортизацииЦФ.МестоУчета = НЕОПРЕДЕЛЕНО";
		
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТСчетаОтражения
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТПервоначальныеСведения(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА втДанныеДокумента.ПорядокУчетаБУ В (
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
		|				ИЛИ втДанныеДокумента.ПорядокУчетаНУ В (
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), 
		|						ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьСчетАмортизации,
		|	ЛОЖЬ КАК НачислятьИзнос,
		|	1 КАК МножительПримененияИзноса
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе	
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) В (
		|							ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации), 
		|							ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена))
		|				ИЛИ ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаНУ, НЕОПРЕДЕЛЕНО) В (
		|							ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации), 
		|							ЗНАЧЕНИЕ(Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена))
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК ЕстьСчетАмортизации,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ КАК НачислятьИзнос,
		|	ВЫБОР
		|		КОГДА ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ)
		|			ТОГДА 0
		|		ИНАЧЕ 1
		|	КОНЕЦ КАК МножительПримененияИзноса
		|ПОМЕСТИТЬ втПервоначальныеСведения
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И (Организация, ОсновноеСредство) В
		|						(ВЫБРАТЬ
		|							Т.Организация,
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПервоначальныеСведенияОС
		|		ПО втОбъектыДокумента.ОбъектУчета = ПервоначальныеСведенияОС.ОсновноеСредство
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
		|				&Дата,
		|				Регистратор <> &Ссылка
		|					И ОсновноеСредство В
		|						(ВЫБРАТЬ
		|							Т.ОбъектУчета
		|						ИЗ
		|							втОбъектыДокумента КАК Т)) КАК ПорядокУчетаОС
		|		ПО втОбъектыДокумента.ОбъектУчета = ПорядокУчетаОС.ОсновноеСредство";
	КонецЕсли; 
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТМестонахожденияОС(ИмяДокумента)
	
	Если ИмяДокумента = "ПринятиеКУчетуОС" Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втДанныеДокумента.ОсновноеСредство КАК ОбъектУчета,
		|	втДанныеДокумента.Местонахождение КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втДанныеДокумента КАК втДанныеДокумента";
		
	Иначе
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	втОбъектыДокумента.ОбъектУчета КАК ОбъектУчета,
		|	ЕСТЬNULL(Местонахождения.Местонахождение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение
		|ПОМЕСТИТЬ втМестонахожденияОС
		|ИЗ
		|	втОбъектыДокумента КАК втОбъектыДокумента
		|	ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
		|			&Дата,
		|			Регистратор <> &Ссылка
		|			И (Организация, ОсновноеСредство) В
		|				(ВЫБРАТЬ
		|					Т.Организация, Т.ОбъектУчета
		|				ИЗ
		|					втОбъектыДокумента КАК Т)) КАК Местонахождения
		|	ПО втОбъектыДокумента.ОбъектУчета = Местонахождения.ОсновноеСредство";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТМестонахожденияОС
	|"+ ТекстЗапроса;
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаВТНачисленнаяАмортизацияЦелевогоФинансирования()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица ВТНачисленнаяАмортизацияЦелевыхСредств
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиАмортизации,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаПР) КАК СуммаПР,
	|	СУММА(втНачисленнаяАмортизация.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияЦелевыхСредств
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.НаправлениеДеятельностиАмортизации";
	
КонецФункции

Функция ТекстЗапросаВТНачисленнаяАмортизационнаяПремия()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////
	|// Таблица втНачисленнаяАмортизационнаяПремия
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаБУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втНачисленнаяАмортизация.СуммаПР) КАК СуммаПР,
	|	СУММА(втНачисленнаяАмортизация.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втНачисленнаяАмортизационнаяПремия
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	втНачисленнаяАмортизация.ЭтоАмортизационнаяПремия
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.ДокументАмортизационнойПремии";
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВРеглУчете_Движения

Функция ТекстОтраженияАмортизационнаяПремияКВ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Снятие амортизационной премии с КВ (Дт <ПустаяСсылка> :: Кт КВ)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК ГруппаФинансовогоУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения) КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	Строки.ДокументАмортизационнойПремии КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизационнаяПремия КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|";
	
КонецФункции

Функция ТекстОтраженияИзнос()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаИзноса :: Кт ---)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетДт,
	|	Строки.ОбъектУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление износа"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияДоходыОтЦелевогоФинансирования()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Признание доходов от целевого финансирования (Дт 98 :: Кт 91)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС) КАК СчетДт,
	|	Строки.ОбъектУчета КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ + Строки.СуммаПР + Строки.СуммаВР КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Доходы) КАК ВидСчетаКт,
	|	СчетаОтражения.СтатьяДоходов КАК АналитикаУчетаКт,
	|	МестонахождениеОС.Подразделение КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Строки.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	СчетаОтражения.СтатьяДоходов КАК СубконтоКт1,
	|	СчетаОтражения.АналитикаДоходов КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ + Строки.СуммаПР + Строки.СуммаВР КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Признание доходов от целевого финансирования"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизацияЦелевыхСредств КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ втПервоначальныеСведения.НачислятьИзнос
	|	И СчетаОтражения.ПрименениеЦелевогоФинансирования
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизация()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремия()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУ()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетНачисленияАмортизацииЦФ
	|		ИНАЧЕ СчетаОтражения.СчетНачисленияАмортизации
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУОтправитель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетДт,
	|	Строки.ОрганизацияПолучательРасходов КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельности КАК НаправлениеДеятельностиКт,
	|	
	|	ВЫБОР КОГДА Строки.ЭтоЦелевыеСредства
	|		ТОГДА СчетаОтражения.СчетУчетаЦФ
	|		ИНАЧЕ СчетаОтражения.СчетУчета
	|	КОНЕЦ КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУПолучатель()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	ЕСТЬNULL(ОрганизацияПолучатель.Ссылка, ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)) КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Строки.СтатьяРасходов КАК СубконтоДт1,
	|	Строки.АналитикаРасходов КАК СубконтоДт2,
	|	ВЫБОР КОГДА СтатьиСтроительства.Ссылка ЕСТЬ НЕ NULL ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.СпособыСтроительства.Подрядный)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.Прочее)
	|	КОНЕЦ КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	Строки.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельностиКт,
	|	
	|	Строки.СчетПередачиРасходов КАК СчетКт,
	|	Строки.Организация КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.Организации КАК ОрганизацияПолучатель
	|		ПО Строки.ОрганизацияПолучательРасходов = ОрганизацияПолучатель.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиСтроительства
	|	ПО Строки.СтатьяРасходов = СтатьиСтроительства.Ссылка
	|		И СтатьиСтроительства.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И СтатьиНаПрочиеАктивы.Ссылка ЕСТЬ NULL
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции


Функция ТекстОтраженияАмортизацияНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизацияБезНУНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизация (Дт СчетУчетаЗатрат :: Кт СчетНакопленияАмортизации)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетНачисленияАмортизации КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Начисление амортизации"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	НЕ Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	Строки.СуммаБУ КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	Строки.СуммаНУ КАК СуммаНУДт,
	|	Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ИСТИНА
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

Функция ТекстОтраженияАмортизационнаяПремияБезНУНаПрочиеОперации()
	
	Возврат "
	|////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Амортизационная премия (Дт СчетУчетаЗатрат :: Кт СчетУчетаОС)
	|ВЫБРАТЬ
	|	
	|	&Ссылка КАК Ссылка,
	|	&Дата КАК Период,
	|	Строки.Организация КАК Организация,
	|	"""" КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПрочиеОперации) КАК ВидСчетаДт,
	|	Строки.СтатьяРасходов КАК АналитикаУчетаДт,
	|	Строки.Подразделение КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Строки.Подразделение КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	Строки.СуммаНУ + Строки.СуммаПР КАК СуммаПРДт,
	|	Строки.СуммаВР КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	МестонахождениеОС.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	СчетаОтражения.СчетУчета КАК СчетКт,
	|	Строки.ОбъектУчета КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	Строки.СуммаНУ КАК СуммаНУКт,
	|	Строки.СуммаПР КАК СуммаПРКт,
	|	Строки.СуммаВР КАК СуммаВРКт,
	|	
	|	/////////////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	""Амортизационная премия"" КАК Содержание
	|ИЗ
	|	втНачисленнаяАмортизация КАК Строки
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиНаПрочиеАктивы
	|	ПО Строки.СтатьяРасходов = СтатьиНаПрочиеАктивы.Ссылка
	|		И СтатьиНаПрочиеАктивы.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы)
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОС КАК МестонахождениеОС
	|	ПО Строки.ОбъектУчета = МестонахождениеОС.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втСчетаОтражения КАК СчетаОтражения
	|	ПО Строки.ОбъектУчета = СчетаОтражения.ОбъектУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведения КАК втПервоначальныеСведения
	|	ПО Строки.ОбъектУчета = втПервоначальныеСведения.ОбъектУчета
	|	
	|ГДЕ
	|	Строки.ЭтоАмортизационнаяПремия
	|	И Строки.СтатьяРасходов.ПринятиеКНалоговомуУчету = ЛОЖЬ
	|	И НЕ Строки.ПередаватьРасходыВДругуюОрганизацию
	|	И НЕ втПервоначальныеСведения.НачислятьИзнос
	|";
	
КонецФункции

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_ВременныеТаблицы

Процедура ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втНачисленнаяАмортизацияДокумента";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизацияДокумента
	|"+
	"ВЫБРАТЬ
	|	ТаблицаАмортизации.ОбъектУчета КАК ОбъектУчета,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК БУЛЕВО) КАК ПередаватьРасходыВДругуюОрганизацию,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.НачислятьИзнос КАК БУЛЕВО) КАК НачислятьИзнос,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.ЭтоЦелевыеСредства КАК БУЛЕВО) КАК ЭтоЦелевыеСредства,
	|	ВЫБОР
	|		КОГДА ВЫРАЗИТЬ(ТаблицаАмортизации.ПередаватьРасходыВДругуюОрганизацию КАК БУЛЕВО)
	|			ТОГДА ВЫРАЗИТЬ(ТаблицаАмортизации.ОрганизацияПолучательРасходов КАК Справочник.Организации)
	|		ИНАЧЕ ВЫРАЗИТЬ(&Организация КАК Справочник.Организации)
	|	КОНЕЦ КАК Организация,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Подразделение КАК Справочник.СтруктураПредприятия) КАК Подразделение,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.НаправлениеДеятельности КАК Справочник.НаправленияДеятельности) КАК НаправлениеДеятельности,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаБУ КАК ЧИСЛО) КАК СуммаБУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаНУ КАК ЧИСЛО) КАК СуммаНУ,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаПР КАК ЧИСЛО) КАК СуммаПР,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СуммаВР КАК ЧИСЛО) КАК СуммаВР,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.Коэффициент КАК ЧИСЛО) КАК Коэффициент,
	|	ВЫРАЗИТЬ(ТаблицаАмортизации.СтатьяРасходов КАК ПланВидовХарактеристик.СтатьиРасходов) КАК СтатьяРасходов,
	|	ТаблицаАмортизации.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизацияДокумента
	|ИЗ
	|	&ТаблицаАмортизации КАК ТаблицаАмортизации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втНачисленнаяАмортизация";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втНачисленнаяАмортизация
	|"+
	"ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизацияДокумента.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втНачисленнаяАмортизацияДокумента.ПередаватьРасходыВДругуюОрганизацию КАК ПередаватьРасходыВДругуюОрганизацию,
	|	втНачисленнаяАмортизацияДокумента.НачислятьИзнос КАК НачислятьИзнос,
	|	втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства КАК ЭтоЦелевыеСредства,
	|	втНачисленнаяАмортизацияДокумента.Организация КАК Организация,
	|	втНачисленнаяАмортизацияДокумента.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ КАК СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ КАК СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР КАК СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР КАК СуммаВР,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(втСтоимостиРегл.Сумма, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ втНачисленнаяАмортизацияДокумента.СуммаБУ / втСтоимостиРегл.Сумма
	|	КОНЕЦ КАК Коэффициент,
	|	втНачисленнаяАмортизацияДокумента.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизацияДокумента.АналитикаРасходов КАК АналитикаРасходов
	|ПОМЕСТИТЬ втНачисленнаяАмортизация
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ЛЕВОЕ СОЕДИНЕНИЕ втСтоимостиРегл КАК втСтоимостиРегл
	|		ПО втНачисленнаяАмортизацияДокумента.ОбъектУчета = втСтоимостиРегл.ОбъектУчета
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыДокумента";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыДокумента
	|"+
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОбъектУчета,
	|	ТабличнаяЧасть.СуммаСписанияБУ КАК СуммаЧастичнойЛиквидации
	|ПОМЕСТИТЬ втОбъектыДокумента
	|ИЗ
	|	Документ.СписаниеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.НематериальныйАктив,
	|	Операция.СуммаСписанияБУ
	|ИЗ
	|	Документ.СписаниеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОсновноеСредство,
	|	0
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС.ОС КАК ТабличнаяЧасть
	|ГДЕ
	|	ТабличнаяЧасть.Ссылка = &Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Операция.НематериальныйАктив,
	|	0
	|ИЗ
	|	Документ.ПодготовкаКПередачеНМА КАК Операция
	|ГДЕ
	|	Операция.Ссылка = &Ссылка";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОбъектыУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыДокумента(ТекстыЗапроса);
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОбъектыУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета КАК ОбъектУчета
	|ПОМЕСТИТЬ втОбъектыУчета
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.ОбъектУчета В
	|				(ВЫБРАТЬ
	|					Т.ОбъектУчета
	|				ИЗ
	|					втОбъектыДокумента КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втОбъектыДокумента.ОбъектУчета
	|ИЗ
	|	втОбъектыДокумента КАК втОбъектыДокумента
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втПараметрыОбъектовУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаОбъектыУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втПараметрыОбъектовУчета
	|"+
	"ВЫБРАТЬ
	|	втОбъектыУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(ПорядокУчетаОС.НаправлениеДеятельности, ЕСТЬNULL(ПорядокУчетаНМА.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(ПорядокУчетаОС.СчетУчета, ЕСТЬNULL(ПорядокУчетаНМА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(ПорядокУчетаОС.СчетНачисленияАмортизации, ЕСТЬNULL(ПорядокУчетаНМА.СчетНачисленияАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизации,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования, ЛОЖЬ)) КАК ПрименениеЦелевогоФинансирования,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СчетУчета, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СчетАмортизации, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетАмортизацииЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.СтатьяДоходов, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.СтатьяДоходов, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка))) КАК СтатьяДоходовЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияОС.АналитикаДоходов, ЕСТЬNULL(ПараметрыЦелевогоФинансированияНМА.АналитикаДоходов, НЕОПРЕДЕЛЕНО)) КАК АналитикаДоходовЦФ
	|ПОМЕСТИТЬ втПараметрыОбъектовУчета
	|ИЗ
	|	втОбъектыУчета КАК втОбъектыУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО втОбъектыУчета.ОбъектУчета = ОбъектыЭксплуатации.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.НематериальныеАктивы КАК НематериальныеАктивы
	|		ПО втОбъектыУчета.ОбъектУчета = НематериальныеАктивы.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПараметрыЦелевогоФинансированияОС
	|		ПО втОбъектыУчета.ОбъектУчета = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|			И (ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПараметрыЦелевогоФинансированияНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПараметрыЦелевогоФинансированияНМА
	|		ПО втОбъектыУчета.ОбъектУчета = ПараметрыЦелевогоФинансированияНМА.НематериальныйАктив
	|			И (ПараметрыЦелевогоФинансированияНМА.ПрименениеЦелевогоФинансирования)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПорядокУчетаОС
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаОС.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И Организация = &Организация
	|					И НематериальныйАктив В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК ПорядокУчетаНМА
	|		ПО втОбъектыУчета.ОбъектУчета = ПорядокУчетаНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаМестонахожденияОбъектовУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втМестонахожденияОбъектовУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст =
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	ЕСТЬNULL(МестонахождениеОС.Местонахождение, ЕСТЬNULL(МестоУчетаНМА.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))) КАК Подразделение
	|ПОМЕСТИТЬ втМестонахожденияОбъектовУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестонахождениеОС.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							Т.ОбъектУчета
	|						ИЗ
	|							втОбъектыУчета КАК Т)) КАК МестонахождениеОС
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = МестонахождениеОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.МестоУчетаНМА.СрезПоследних(
	|				&Граница,
	|				Регистратор <> &Ссылка
	|						И НематериальныйАктив В
	|							(ВЫБРАТЬ
	|								Т.ОбъектУчета
	|							ИЗ
	|								втОбъектыУчета КАК Т)) КАК МестоУчетаНМА
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = МестоУчетаНМА.НематериальныйАктив
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втСчетаРеглУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСчетаРеглУчета
	|"+
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетУчета КАК Счет
	|ПОМЕСТИТЬ втСчетаРеглУчета
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетАмортизации
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетУчетаЦФ
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|ГДЕ
	|	втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	втПараметрыОбъектовУчета.СчетАмортизацииЦФ
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|ГДЕ
	|	втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса)
	
	ИмяТаблицы = "втОстаткиРеглУчета";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаСчетаРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втОстаткиРеглУчета
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет КАК Счет,
	|	ХозрасчетныйОстатки.Субконто1 КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.СуммаОстаток КАК Сумма,
	|	ХозрасчетныйОстатки.СуммаНУОстаток КАК СуммаНУ,
	|	ХозрасчетныйОстатки.СуммаПРОстаток КАК СуммаПР,
	|	ХозрасчетныйОстатки.СуммаВРОстаток КАК СуммаВР
	|ПОМЕСТИТЬ втОстаткиРеглУчета
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Счет,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстаток,
	|	ХозрасчетныйОстатки.СуммаНУОстаток,
	|	ХозрасчетныйОстатки.СуммаПРОстаток,
	|	ХозрасчетныйОстатки.СуммаВРОстаток
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В
	|				(ВЫБРАТЬ
	|					Т.Счет
	|				ИЗ
	|					втСчетаРеглУчета КАК Т),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И (Субконто1, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма,
	|	-Хозрасчетный.СуммаНУДт,
	|	-Хозрасчетный.СуммаПРДт,
	|	-Хозрасчетный.СуммаВРДт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиДт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.СчетКт,
	|	ХозрасчетныйСубконто.Значение,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.СуммаПРКт,
	|	Хозрасчетный.СуммаВРКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО (ХозрасчетныйСубконто.Значение = втПараметрыОбъектовУчета.ОбъектУчета)
	|			И Хозрасчетный.НаправлениеДеятельностиКт = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	(&ПогашениеУпрЗатрат
	|			ИЛИ &СписаниеОстаточнойСтоимости
	|			ИЛИ &ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетКт В
	|			(ВЫБРАТЬ
	|				Т.Счет
	|			ИЗ
	|				втСчетаРеглУчета КАК Т)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРеглДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРеглДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма КАК Сумма,
	|	втОстаткиРеглУчета.СуммаНУ КАК СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР КАК СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР КАК СуммаВР
	|ПОМЕСТИТЬ втСтоимостиРеглДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчетаЦФ = втОстаткиРеглУчета.Счет
	|			И втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизацииЦФ = втОстаткиРеглУчета.Счет
	|			И втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиРегл";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиРеглДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиРегл
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаНУ) КАК СуммаНУ,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаПР) КАК СуммаПР,
	|	СУММА(втСтоимостиРеглДанныеДляГруппировки.СуммаВР) КАК СуммаВР
	|ПОМЕСТИТЬ втСтоимостиРегл
	|ИЗ
	|	втСтоимостиРеглДанныеДляГруппировки КАК втСтоимостиРеглДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиРеглДанныеДляГруппировки.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивыДанные";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Организация КАК Организация,
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеАктивыПассивыОстатки.Статья КАК Статья,
	|	ПрочиеАктивыПассивыОстатки.Аналитика КАК Аналитика,
	|	ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&КонецМесяца,
	|			Организация = &Организация
	|				И Статья В (ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|				И (Аналитика, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И ПрочиеАктивыПассивы.Статья В (
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.НематериальныеАктивы), 
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ОсновныеСредства))
	|	И ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Организация,
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ПрочиеАктивыПассивы.Статья,
	|	ПрочиеАктивыПассивы.Аналитика,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеАктивыПассивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Организация = &Организация
	|	И (ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатков
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковПрочихАктивовПассивов
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковСПодотчетниками
	|		ИЛИ ПрочиеАктивыПассивы.Регистратор ССЫЛКА Документ.ВводОстатковПрочиеРасходы)
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеАктивыПассивы.Период МЕЖДУ НАЧАЛОПЕРИОДА(&НачалоУчета2_4, ДЕНЬ) И КОНЕЦПЕРИОДА(&НачалоУчета2_4, ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеАктивы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика КАК Аналитика,
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеАктивы
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Статья,
	|	втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Аналитика
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеАктивыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеРасходыОстатки.Организация КАК Организация,
	|	ПрочиеРасходыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеРасходыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходыОстатки.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходыОстатки.АналитикаРасходов КАК АналитикаРасходов,
	|	ПрочиеРасходыОстатки.СуммаОстаток КАК Сумма,
	|	ПрочиеРасходыОстатки.СуммаУпрОстаток КАК СуммаУпр,
	|	ПрочиеРасходыОстатки.СуммаБезНДСОстаток КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&КонецМесяца,
	|			СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|				И Организация = &Организация
	|				И (АналитикаРасходов, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.ОбъектУчета,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПараметрыОбъектовУчета КАК Т)) КАК ПрочиеРасходыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|			И ПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл = ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Регистратор = &Ссылка
	|	И ПрочиеРасходы.Организация = &Организация
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.Сумма
	|		ИНАЧЕ ПрочиеРасходы.Сумма
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаУпр
	|		ИНАЧЕ ПрочиеРасходы.СуммаУпр
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА -ПрочиеРасходы.СуммаБезНДС
	|		ИНАЧЕ ПрочиеРасходы.СуммаБезНДС
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО ПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|			И ПрочиеРасходы.НаправлениеДеятельности = втПараметрыОбъектовУчета.НаправлениеДеятельности
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеРасходы.Организация = &Организация
	|	И ПрочиеРасходы.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов2_4
	|	И &ИспользоватьВнеоборотныеАктивы2_4
	|	И ПрочиеРасходы.Период МЕЖДУ НАЧАЛОПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ) И КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), ДЕНЬ)
	|	И КОНЕЦПЕРИОДА(&Период, МЕСЯЦ) = КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоУчета2_4, ДЕНЬ, -1), МЕСЯЦ)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втСтоимостиУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходыДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втСтоимостиУпрПрочиеРасходы
	|"+
	"ВЫБРАТЬ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаУпр) КАК СуммаУпр,
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СуммаБезНДС) КАК СуммаБезНДС
	|ПОМЕСТИТЬ втСтоимостиУпрПрочиеРасходы
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки КАК втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Организация,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Подразделение,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.АналитикаРасходов
	|
	|ИМЕЮЩИЕ
	|	СУММА(втСтоимостиУпрПрочиеРасходыДанныеДляГруппировки.Сумма) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеАктивы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеАктивы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеАктивы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеАктивы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеАктивы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаАмортизацияУпрПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ИмяТаблицы = "втАмортизацияУпрПрочиеРасходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаСтоимостиУпрПрочиеРасходы(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втАмортизацияУпрПрочиеРасходы
	|" +
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Сумма,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаУпр,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница
	|ПОМЕСТИТЬ втАмортизацияУпрПрочиеРасходы
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПрочиеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НеРаспределять))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС * втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))),
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов.ВариантРаспределенияРасходовРегл В (
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров), 
	|		ЗНАЧЕНИЕ(Перечисление.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты))
	|
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса)
	
	ИмяТаблицы = "втПризнаниеДоходовОтЦФ";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизация(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаМестонахожденияОбъектовУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втПризнаниеДоходовОтЦФ
	|"+
	"ВЫБРАТЬ
	|	&Организация КАК Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета КАК ОбъектУчета,
	|	втНачисленнаяАмортизация.Подразделение КАК ПодразделениеАмортизации,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельностиАмортизации,
	|	ЕСТЬNULL(втМестонахожденияОбъектовУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)) КАК Подразделение,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.СтатьяДоходовЦФ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)) КАК СтатьяДоходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.АналитикаДоходовЦФ, НЕОПРЕДЕЛЕНО) КАК АналитикаДоходов,
	|	СУММА(втНачисленнаяАмортизация.СуммаБУ) КАК СуммаРегл
	|ПОМЕСТИТЬ втПризнаниеДоходовОтЦФ
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втПараметрыОбъектовУчета.ОбъектУчета
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахожденияОбъектовУчета КАК втМестонахожденияОбъектовУчета
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втМестонахожденияОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И втНачисленнаяАмортизация.ЭтоЦелевыеСредства
	|	И ЕСТЬNULL(втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования, ЛОЖЬ) = ИСТИНА
	|
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.ОбъектУчета,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	ЕСТЬNULL(втМестонахожденияОбъектовУчета.Подразделение, ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.СтатьяДоходовЦФ, ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиДоходов.ПустаяСсылка)),
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.АналитикаДоходовЦФ, НЕОПРЕДЕЛЕНО)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРеглДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРеглДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРеглДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ОбъектУчета,
	|	ХозрасчетныйОстатки.СуммаОстатокКт КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРеглДанныеДляГруппировки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ЦелевоеФинансирование)),
	|			,
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецМесяца,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.ОбъектУчета
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.ПодразделениеДт,
	|	Хозрасчетный.НаправлениеДеятельностиДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО Хозрасчетный.ПодразделениеДт = втПризнаниеДоходовОтЦФ.Подразделение
	|			И (ХозрасчетныйСубконто.Значение = втПризнаниеДоходовОтЦФ.ОбъектУчета)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияОС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Подразделение,
	|	ХозрасчетныйОстатки.НаправлениеДеятельности,
	|	ХозрасчетныйОстатки.Субконто1,
	|	ХозрасчетныйОстатки.СуммаОстатокКт
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&Граница,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы),
	|			Организация = &Организация
	|				И (Подразделение, НаправлениеДеятельности, Субконто1) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности,
	|						Т.ОбъектУчета
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ХозрасчетныйОстатки
	|ГДЕ
	|	ХозрасчетныйОстатки.СуммаОстатокКт > 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Хозрасчетный.ПодразделениеДт,
	|	Хозрасчетный.НаправлениеДеятельностиДт,
	|	ХозрасчетныйСубконто.Значение,
	|	-Хозрасчетный.Сумма
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Хозрасчетный.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Хозрасчетный.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Дебет))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.НематериальныеАктивы))
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО Хозрасчетный.ПодразделениеДт = втПризнаниеДоходовОтЦФ.Подразделение
	|			И (ХозрасчетныйСубконто.Значение = втПризнаниеДоходовОтЦФ.ОбъектУчета)
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И Хозрасчетный.Регистратор = &Ссылка
	|	И Хозрасчетный.Организация = &Организация
	|	И Хозрасчетный.СчетДт = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ДоходыБудущихПериодовОтЦелевогоФинансированияНМА)";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРегл";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваРеглДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРегл
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	СУММА(втЦелевыеСредстваРеглДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРегл
	|ИЗ
	|	втЦелевыеСредстваРеглДанныеДляГруппировки КАК втЦелевыеСредстваРеглДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.Подразделение,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.НаправлениеДеятельности,
	|	втЦелевыеСредстваРеглДанныеДляГруппировки.ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваРеглСгруппированныеПоНаправлениям(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваРеглСгруппированныеПоНаправлениям";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваРегл(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваРегл.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваРегл.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втЦелевыеСредстваРегл.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|ИЗ
	|	втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваРегл.Подразделение,
	|	втЦелевыеСредстваРегл.НаправлениеДеятельности";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваУпрДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваУпрДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаПризнаниеДоходовОтЦФ(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваУпрДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	ПрочиеАктивыПассивыОстатки.Подразделение КАК Подразделение,
	|	ПрочиеАктивыПассивыОстатки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	-ПрочиеАктивыПассивыОстатки.СуммаОстаток КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваУпрДанныеДляГруппировки
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы.Остатки(
	|			&КонецМесяца,
	|			Организация = &Организация
	|				И Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование)
	|				И (Подразделение, НаправлениеДеятельности) В
	|					(ВЫБРАТЬ
	|						Т.Подразделение,
	|						Т.НаправлениеДеятельности
	|					ИЗ
	|						втПризнаниеДоходовОтЦФ КАК Т)) КАК ПрочиеАктивыПассивыОстатки
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивыОстатки.СуммаОстаток < 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПрочиеАктивыПассивы.Подразделение,
	|	ПрочиеАктивыПассивы.НаправлениеДеятельности,
	|	ВЫБОР
	|		КОГДА ПрочиеАктивыПассивы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|			ТОГДА ПрочиеАктивыПассивы.Сумма
	|		ИНАЧЕ -ПрочиеАктивыПассивы.Сумма
	|	КОНЕЦ
	|ИЗ
	|	РегистрНакопления.ПрочиеАктивыПассивы КАК ПрочиеАктивыПассивы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|		ПО ПрочиеАктивыПассивы.Подразделение = втПризнаниеДоходовОтЦФ.Подразделение
	|			И ПрочиеАктивыПассивы.НаправлениеДеятельности = втПризнаниеДоходовОтЦФ.НаправлениеДеятельности
	|			И (ПрочиеАктивыПассивы.Статья = ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование))
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|	И ПрочиеАктивыПассивы.Регистратор = &Ссылка
	|	И ПрочиеАктивыПассивы.Организация = &Организация";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаЦелевыеСредстваУпр(ТекстыЗапроса)
	
	ИмяТаблицы = "втЦелевыеСредстваУпр";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаЦелевыеСредстваУпрДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втЦелевыеСредстваУпр
	|"+
	"ВЫБРАТЬ
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.Подразделение КАК Подразделение,
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втЦелевыеСредстваУпрДанныеДляГруппировки.Сумма) КАК Сумма
	|ПОМЕСТИТЬ втЦелевыеСредстваУпр
	|ИЗ
	|	втЦелевыеСредстваУпрДанныеДляГруппировки КАК втЦелевыеСредстваУпрДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.Подразделение,
	|	втЦелевыеСредстваУпрДанныеДляГруппировки.НаправлениеДеятельности";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектовДанныеДляГруппировки";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаНачисленнаяАмортизацияДокумента(ТекстыЗапроса);
	ВременнаяТаблицаПараметрыОбъектовУчета(ТекстыЗапроса);
	ВременнаяТаблицаОстаткиРеглУчета(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектовДанныеДляГруппировки
	|"+
	"ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета КАК ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втОстаткиРеглУчета.Сумма КАК ВосстановительнаяСтоимостьБУ,
	|	втОстаткиРеглУчета.СуммаНУ КАК ВосстановительнаяСтоимостьНУ,
	|	втОстаткиРеглУчета.СуммаПР КАК ВосстановительнаяСтоимостьПР,
	|	втОстаткиРеглУчета.СуммаВР КАК ВосстановительнаяСтоимостьВР,
	|	0 КАК НакопленнаяАмортизацияБУ,
	|	0 КАК НакопленнаяАмортизацияНУ,
	|	0 КАК НакопленнаяАмортизацияПР,
	|	0 КАК НакопленнаяАмортизацияВР,
	|	0 КАК ВосстановительнаяСтоимостьБУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьНУЦФ,
	|	0 КАК ВосстановительнаяСтоимостьПРЦФ,
	|	0 КАК ВосстановительнаяСтоимостьВРЦФ,
	|	0 КАК НакопленнаяАмортизацияБУЦФ,
	|	0 КАК НакопленнаяАмортизацияНУЦФ,
	|	0 КАК НакопленнаяАмортизацияПРЦФ,
	|	0 КАК НакопленнаяАмортизацияВРЦФ,
	|	0 КАК НеУчитываемаяСтоимостьНУ,
	|	0 КАК КорректировкаСтоимостиПР,
	|	0 КАК КорректировкаСтоимостиВР
	|	
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектовДанныеДляГруппировки
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчета = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	-втОстаткиРеглУчета.Сумма,
	|	-втОстаткиРеглУчета.СуммаНУ,
	|	-втОстаткиРеглУчета.СуммаПР,
	|	-втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизации = втОстаткиРеглУчета.Счет
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втОстаткиРеглУчета.Сумма,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетУчетаЦФ = втОстаткиРеглУчета.Счет
	|			И (втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	-втОстаткиРеглУчета.Сумма,
	|	-втОстаткиРеглУчета.СуммаНУ,
	|	-втОстаткиРеглУчета.СуммаПР,
	|	-втОстаткиРеглУчета.СуммаВР,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втПараметрыОбъектовУчета.СчетАмортизацииЦФ = втОстаткиРеглУчета.Счет
	|			И (втПараметрыОбъектовУчета.ПрименениеЦелевогоФинансирования)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втНачисленнаяАмортизацияДокумента.ОбъектУчета
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.НачислятьИзнос
	|	И НЕ втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства
	|	И (&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втНачисленнаяАмортизацияДокумента.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втНачисленнаяАмортизацияДокумента.СуммаБУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаНУ,
	|	втНачисленнаяАмортизацияДокумента.СуммаПР,
	|	втНачисленнаяАмортизацияДокумента.СуммаВР,
	|	0,
	|	0,
	|	0
	|ИЗ
	|	втНачисленнаяАмортизацияДокумента КАК втНачисленнаяАмортизацияДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втНачисленнаяАмортизацияДокумента.ОбъектУчета
	|ГДЕ
	|	НЕ втНачисленнаяАмортизацияДокумента.НачислятьИзнос
	|	И втНачисленнаяАмортизацияДокумента.ЭтоЦелевыеСредства
	|	И (&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	втПараметрыОбъектовУчета.ОбъектУчета,
	|	втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	0,
	|	втОстаткиРеглУчета.СуммаНУ,
	|	втОстаткиРеглУчета.СуммаПР,
	|	втОстаткиРеглУчета.СуммаВР
	|ИЗ
	|	втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаткиРеглУчета КАК втОстаткиРеглУчета
	|		ПО втПараметрыОбъектовУчета.ОбъектУчета = втОстаткиРеглУчета.ОбъектУчета
	|			И втОстаткиРеглУчета.Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества)
	|ГДЕ
	|	(&ЧастичнаяЛиквидация
	|			ИЛИ &ТекущееСостояниеОбъектов)
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

Процедура ВременнаяТаблицаТекущееСостояниеОбъектов(ТекстыЗапроса)
	
	ИмяТаблицы = "втТекущееСостояниеОбъектов";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяТаблицы, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВременнаяТаблицаТекущееСостояниеОбъектовДанныеДляГруппировки(ТекстыЗапроса);
	
	Текст = "
	|////////////////////////////////////////////////////////////////////////////////
	|// Временная таблица втТекущееСостояниеОбъектов
	|"+
	"ВЫБРАТЬ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета КАК ОбъектУчета,
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) КАК ВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) КАК ВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) КАК ВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) КАК ВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК НакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК НакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК НакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК НакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) КАК ОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) КАК ОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) КАК ОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) КАК ОстаточнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ВосстановительнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ВосстановительнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ВосстановительнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ВосстановительнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК НакопленнаяАмортизацияБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК НакопленнаяАмортизацияНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК НакопленнаяАмортизацияПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК НакопленнаяАмортизацияВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ОстаточнаяСтоимостьБУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ОстаточнаяСтоимостьНУЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ОстаточнаяСтоимостьПРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ОстаточнаяСтоимостьВРЦФ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) КАК ПолнаяВосстановительнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) КАК ПолнаяВосстановительнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) КАК ПолнаяВосстановительнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) КАК ПолнаяВосстановительнаяСтоимостьВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяНакопленнаяАмортизацияБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяНакопленнаяАмортизацияНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяНакопленнаяАмортизацияПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяНакопленнаяАмортизацияВР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияБУЦФ) КАК ПолнаяОстаточнаяСтоимостьБУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияНУЦФ) КАК ПолнаяОстаточнаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияПРЦФ) КАК ПолнаяОстаточнаяСтоимостьПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) - СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НакопленнаяАмортизацияВРЦФ) КАК ПолнаяОстаточнаяСтоимостьВР,
	|
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.НеУчитываемаяСтоимостьНУ) КАК НеУчитываемаяСтоимостьНУ,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиПР) КАК КорректировкаСтоимостиПР,
	|	СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.КорректировкаСтоимостиВР) КАК КорректировкаСтоимостиВР,
	|
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьБУЦФ))
	|	КОНЕЦ КАК ДоляБУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУ) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьНУЦФ))
	|	КОНЕЦ КАК ДоляНУЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьПРЦФ))
	|	КОНЕЦ КАК ДоляПРЦФ,
	|	ВЫБОР
	|		КОГДА СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) = 0
	|				И СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) = 0
	|			ТОГДА 0
	|		ИНАЧЕ СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ) / (СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВР) + СУММА(втТекущееСостояниеОбъектовДанныеДляГруппировки.ВосстановительнаяСтоимостьВРЦФ))
	|	КОНЕЦ КАК ДоляВРЦФ
	|ПОМЕСТИТЬ втТекущееСостояниеОбъектов
	|ИЗ
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки КАК втТекущееСостояниеОбъектовДанныеДляГруппировки
	|
	|СГРУППИРОВАТЬ ПО
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.ОбъектУчета,
	|	втТекущееСостояниеОбъектовДанныеДляГруппировки.НаправлениеДеятельности
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОбъектУчета";
	
	ТекстыЗапроса.Добавить(Текст, ИмяТаблицы, Ложь);
	
КонецПроцедуры

#КонецОбласти

#Область ОтражениеАмортизацииВОперативномУчете_Движения

Функция ПрочиеРасходы_АмортизацияРеглСтоимости() Экспорт
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	0 КАК СуммаСНДС,
	|	0 КАК СуммаБезНДС,
	|	0 КАК СуммаБезНДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаСНДСРегл,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СуммаБезНДСРегл,
	|	втНачисленнаяАмортизация.СуммаПР КАК ПостояннаяРазница,
	|	втНачисленнаяАмортизация.СуммаВР КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	НЕ втНачисленнаяАмортизация.НачислятьИзнос
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихАктивов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_АмортизацияУпрСтоимостиИзПрочихРасходов() Экспорт
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втАмортизацияУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаСНДС,
	|	втАмортизацияУпрПрочиеРасходы.Сумма КАК СуммаБезНДС,
	|	втАмортизацияУпрПрочиеРасходы.СуммаУпр КАК СуммаБезНДСУпр,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаСНДСРегл,
	|	втАмортизацияУпрПрочиеРасходы.СуммаРегл КАК СуммаБезНДСРегл,
	|	втАмортизацияУпрПрочиеРасходы.ПостояннаяРазница КАК ПостояннаяРазница,
	|	втАмортизацияУпрПрочиеРасходы.ВременнаяРазница КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаСНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаУпр
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДС,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&ПогашениеУпрЗатрат
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0) КАК СуммаСНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0) КАК СуммаБезНДС,
	|	втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|";
	
КонецФункции

Функция ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДС,
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Организация = втАмортизацияУпрПрочиеАктивы.Организация
	|		И втСтоимостиУпрПрочиеАктивы.Подразделение = втАмортизацияУпрПрочиеАктивы.Подразделение
	|		И втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности = втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|";
	
КонецФункции

Функция ПрочиеРасходы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	втСтоимостиУпрПрочиеРасходы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))КАК СуммаБезНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаСНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДС,
	|
	|	(втСтоимостиУпрПрочиеРасходы.СуммаУпр - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаУпр, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК СуммаБезНДСУпр,
	|	0 КАК СуммаСНДСРегл,
	|	0 КАК СуммаБезНДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.Организация = втАмортизацияУпрПрочиеРасходы.Организация
	|		И втСтоимостиУпрПрочиеРасходы.Подразделение = втАмортизацияУпрПрочиеРасходы.Подразделение
	|		И втСтоимостиУпрПрочиеРасходы.НаправлениеДеятельности = втАмортизацияУпрПрочиеРасходы.НаправлениеДеятельности
	|		И втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|";
	
КонецФункции


Функция ПартииПрочихРасходов_АмортизацияРеглСтоимости()
	
	// Амортизация регл. стоимости основных средств
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	0 КАК Стоимость,
	|	0 КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	втНачисленнаяАмортизация.СуммаБУ КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	втНачисленнаяАмортизация.СуммаПР КАК ПостояннаяРазница,
	|	втНачисленнаяАмортизация.СуммаВР КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|ГДЕ
	|	НЕ втНачисленнаяАмортизация.НачислятьИзнос
	|";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеАктивы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеАктивы.Аналитика
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_АмортизацияУпрСтоимостиИзПрочихРасходов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втНачисленнаяАмортизация.Организация КАК Организация,
	|	втНачисленнаяАмортизация.Подразделение КАК Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов КАК СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.Сумма
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК Стоимость,
	|	СУММА(ВЫРАЗИТЬ(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС
	|		* втНачисленнаяАмортизация.Коэффициент КАК ЧИСЛО(15, 2))) КАК СтоимостьБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втНачисленнаяАмортизация КАК втНачисленнаяАмортизация
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|		ПО втНачисленнаяАмортизация.ОбъектУчета = втСтоимостиУпрПрочиеРасходы.АналитикаРасходов
	|СГРУППИРОВАТЬ ПО
	|	втНачисленнаяАмортизация.Организация,
	|	втНачисленнаяАмортизация.Подразделение,
	|	втНачисленнаяАмортизация.СтатьяРасходов,
	|	втНачисленнаяАмортизация.АналитикаРасходов,
	|	втНачисленнаяАмортизация.НаправлениеДеятельности";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_СписаниеОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА(втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0)) КАК Сумма,
	|	СУММА(втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0)) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА((втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК Сумма,
	|	СУММА((втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеАктивы.Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции

Функция ПартииПрочихРасходов_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихРасходов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеРасходы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	&Организация КАК Организация,
	|	&Подразделение КАК Подразделение,
	|	&СтатьяРасходов КАК СтатьяРасходов,
	|	&АналитикаРасходов КАК АналитикаРасходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаАктивовПассивов,
	|	&Ссылка КАК ДокументПоступленияРасходов,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаПартий.ПустаяСсылка) КАК АналитикаУчетаПартий,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности,
	|		ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(Справочник.КлючиАналитикиУчетаНоменклатуры.ПустаяСсылка) КАК АналитикаУчетаНоменклатуры,
	|	НЕОПРЕДЕЛЕНО КАК ВидДеятельностиНДС,
	|	
	|	СУММА((втСтоимостиУпрПрочиеРасходы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.Сумма, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК Сумма,
	|	СУММА((втСтоимостиУпрПрочиеРасходы.СуммаБезНДС - ЕСТЬNULL(втАмортизацияУпрПрочиеРасходы.СуммаБезНДС, 0))
	|		* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0)
	|		/ ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0))) КАК СуммаБезНДС,
	|	0 КАК НДСУпр,
	|	0 КАК СтоимостьРегл,
	|	0 КАК НДСРегл,
	|	0 КАК ПостояннаяРазница,
	|	0 КАК ВременнаяРазница,
	|	НЕОПРЕДЕЛЕНО КАК ХозяйственнаяОперация,
	|	
	|	""""         КАК ИдентификаторФинЗаписи,
	|	НЕОПРЕДЕЛЕНО КАК НастройкаХозяйственнойОперации
	|ИЗ
	|	втСтоимостиУпрПрочиеРасходы КАК втСтоимостиУпрПрочиеРасходы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеРасходы КАК втАмортизацияУпрПрочиеРасходы
	|	ПО втСтоимостиУпрПрочиеРасходы.СтатьяРасходов = втАмортизацияУпрПрочиеРасходы.СтатьяРасходов
	|		И втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втАмортизацияУпрПрочиеРасходы.АналитикаРасходов
	|	ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыОбъектовУчета КАК втПараметрыОбъектовУчета
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втПараметрыОбъектовУчета.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеРасходы.АналитикаРасходов = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|СГРУППИРОВАТЬ ПО
	|	втСтоимостиУпрПрочиеРасходы.Подразделение,
	|	втСтоимостиУпрПрочиеРасходы.СтатьяРасходов,
	|	втСтоимостиУпрПрочиеРасходы.АналитикаРасходов,
	|	ЕСТЬNULL(втПараметрыОбъектовУчета.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка))";
	
КонецФункции


Функция ПрочиеДоходы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеДоходы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиРасходов.ПустаяСсылка) КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО КАК АналитикаДоходов,
	|	
	|	0 КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	0 КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|	
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.ПодразделениеАмортизации КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельностиАмортизации КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеДоходы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втПризнаниеДоходовОтЦФ.СтатьяДоходов КАК СтатьяДоходов,
	|	втПризнаниеДоходовОтЦФ.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПустаяСсылка) КАК ХозяйственнаяОперация,
	|	втЦелевыеСредстваРегл.Сумма - втПризнаниеДоходовОтЦФ.СуммаРегл КАК СуммаРегл,
	|	ЛОЖЬ КАК РасчетСебестоимости
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихДоходовРасходов";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПустаяТаблица()
	
	// Пустая таблица движений регистра ПрочиеАктивыПассивы, требуется для контроля правильного именования полей объединения.
	Возврат
	"ВЫБРАТЬ
	|	ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0) КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка) КАК Организация,
	|	ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка) КАК Подразделение,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ПустаяСсылка) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	0 КАК Сумма
	|ГДЕ
	|	ЛОЖЬ";
	
КонецФункции

Функция ПрочиеАктивыПассивы_АмортизацияУпрСтоимостиИзПрочихАктивов()
	
	// Начисление амортизации от остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Организация КАК Организация,
	|	втАмортизацияУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втАмортизацияУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втАмортизацияУпрПрочиеАктивы.Статья КАК Статья,
	|	втАмортизацияУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втАмортизацияУпрПрочиеАктивы.Сумма КАК Сумма
	|ИЗ
	|	втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_СписаниеОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Списание остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ЧастичнаяЛиквидацияОстаточнойУпрСтоимостиИзПрочихАктивов()
	
	// Частичная ликвидация остатка упр. стоимости, хранящейся в регистре ПрочиеАктивыПассивы.
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход) КАК ВидДвижения,
	|	
	|	втСтоимостиУпрПрочиеАктивы.Организация КАК Организация,
	|	втСтоимостиУпрПрочиеАктивы.Подразделение КАК Подразделение,
	|	втСтоимостиУпрПрочиеАктивы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	втСтоимостиУпрПрочиеАктивы.Статья КАК Статья,
	|	втСтоимостиУпрПрочиеАктивы.Аналитика КАК Аналитика,
	|	
	|	(втСтоимостиУпрПрочиеАктивы.Сумма - ЕСТЬNULL(втАмортизацияУпрПрочиеАктивы.Сумма, 0))
	|	* (ЕСТЬNULL(втОбъектыДокумента.СуммаЧастичнойЛиквидации, 0) / ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0)) КАК Сумма
	|ИЗ
	|	втСтоимостиУпрПрочиеАктивы КАК втСтоимостиУпрПрочиеАктивы
	|	ЛЕВОЕ СОЕДИНЕНИЕ втАмортизацияУпрПрочиеАктивы КАК втАмортизацияУпрПрочиеАктивы
	|	ПО втСтоимостиУпрПрочиеАктивы.Статья = втАмортизацияУпрПрочиеАктивы.Статья
	|		И втСтоимостиУпрПрочиеАктивы.Аналитика = втАмортизацияУпрПрочиеАктивы.Аналитика
	|	ЛЕВОЕ СОЕДИНЕНИЕ втОбъектыДокумента КАК втОбъектыДокумента
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втОбъектыДокумента.ОбъектУчета
	|	ЛЕВОЕ СОЕДИНЕНИЕ втТекущееСостояниеОбъектов КАК втТекущееСостояниеОбъектов
	|	ПО втСтоимостиУпрПрочиеАктивы.Аналитика = втТекущееСостояниеОбъектов.ОбъектУчета
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ЧастичнаяЛиквидация
	|	И ЕСТЬNULL(втТекущееСостояниеОбъектов.ПолнаяВосстановительнаяСтоимостьБУ, 0) <> 0
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриАмортизации()
	
	// Движения признания доходов от целевого финансирования при амортизации актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&ИспользоватьУчетПрочихАктивовПассивов
	|	И &ПогашениеУпрЗатрат";
	
КонецФункции

Функция ПрочиеАктивыПассивы_ПризнаниеДоходовОтЦелевогоФинансированияУпрПриСписании()
	
	// Движения признания доходов от целевого финансирования при списании актива
	Возврат
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	
	|	втПризнаниеДоходовОтЦФ.Организация КАК Организация,
	|	втПризнаниеДоходовОтЦФ.Подразделение КАК Подразделение,
	|	втПризнаниеДоходовОтЦФ.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ЗНАЧЕНИЕ(ПланВидовХарактеристик.СтатьиАктивовПассивов.ЦелевоеФинансирование) КАК Статья,
	|	НЕОПРЕДЕЛЕНО КАК Аналитика,
	|	
	|	(втЦелевыеСредстваУпр.Сумма * (втЦелевыеСредстваРегл.Сумма/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма))
	|	- ВЫРАЗИТЬ((втЦелевыеСредстваУпр.Сумма * (втПризнаниеДоходовОтЦФ.СуммаРегл/втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Сумма)) КАК ЧИСЛО(15,2)) КАК Сумма
	|ИЗ
	|	втПризнаниеДоходовОтЦФ КАК втПризнаниеДоходовОтЦФ
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРегл КАК втЦелевыеСредстваРегл
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРегл.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРегл.НаправлениеДеятельности
	|			И втПризнаниеДоходовОтЦФ.ОбъектУчета = втЦелевыеСредстваРегл.ОбъектУчета
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваРеглСгруппированныеПоНаправлениям КАК втЦелевыеСредстваРеглСгруппированныеПоНаправлениям
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваРеглСгруппированныеПоНаправлениям.НаправлениеДеятельности
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЦелевыеСредстваУпр КАК втЦелевыеСредстваУпр
	|		ПО втПризнаниеДоходовОтЦФ.Подразделение = втЦелевыеСредстваУпр.Подразделение
	|			И втПризнаниеДоходовОтЦФ.НаправлениеДеятельности = втЦелевыеСредстваУпр.НаправлениеДеятельности
	|ГДЕ
	|	&СписаниеОстаточнойСтоимости
	|	И &ПогашениеУпрЗатрат
	|	И &ИспользоватьУчетПрочихАктивовПассивов";
	
КонецФункции

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

Процедура ЗафиксироватьРасчетАмортизации(ВыполненныеЗадания, ЗаданияНаСледующийПериод) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Задания.Месяц,
	|	Задания.Операция,
	|	Задания.Организация,
	|	Задания.НомерЗадания,
	|	Задания.Документ
	|ИЗ
	|	КэшГраниц КАК Задания";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ВыполненныеЗадания.ВременныеТаблицы;
	Результат = Запрос.Выполнить();
	
	// Очистка записей по которым был выполнен расчет.
	Выборка = Результат.Выбрать();
	Пока Выборка.Следующий() Цикл
		Набор = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьНаборЗаписей();
		Набор.Отбор.Месяц.Установить(Выборка.Месяц);
		Набор.Отбор.Операция.Установить(Выборка.Операция);
		Набор.Отбор.Организация.Установить(Выборка.Организация);
		Набор.Отбор.НомерЗадания.Установить(Выборка.НомерЗадания);
		Набор.Отбор.Документ.Установить(Выборка.Документ);
		Набор.Записать(); 
	КонецЦикла;
	
	// Добавление записей на следующий период
	ТекущийНомерЗадания = ЗакрытиеМесяцаСервер.ТекущийНомерЗадания();
	Для каждого Выборка Из ЗаданияНаСледующийПериод Цикл
		Если ЗначениеЗаполнено(Выборка.Месяц) Тогда
			НоваяЗапись = РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьМенеджерЗаписи();
			ЗаполнитьЗначенияСвойств(НоваяЗапись, Выборка);
			НоваяЗапись.НомерЗадания = ТекущийНомерЗадания;
			НоваяЗапись.Записать(Истина);
		КонецЕсли; 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

// ПРОВЕРКИ ДАННЫХ ОС НА КОРРЕКТНОСТЬ

Процедура ПроверитьСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ МестонахождениеОС
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|				ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОС
	|ГДЕ
	|	МестонахождениеОС.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫБОР
	|		КОГДА МестонахождениеОС.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ОтражалосьВБухгалтерскомУчете,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|ГДЕ
	|	МестонахождениеОС.ОсновноеСредство ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);

	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияБУ = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в бухгалтерском учете по организации <%3>';
								|en = 'Fixed asset <%1 (%2)> was not recognized for company <%3>'");

		Пока Выборка.Следующий() Цикл
			
			Если НЕ Выборка.ОтражалосьВБухгалтерскомУчете Тогда
				
				ТекстСообщения = СтрШаблон(ШаблонСообщенияБУ,
									Выборка.ОсновноеСредство, 
									Выборка.КодОС, 
									Реквизиты.Организация);

				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(Реквизиты.ИмяСписка, Выборка.НомерСтроки, "ОсновноеСредство");

				ОбщегоНазначения.СообщитьПользователю(
					ТекстСообщения, 
					Реквизиты.Регистратор, 
					Поле, 
					"Объект", 
					Отказ);
					
			КонецЕсли;
				
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеОСОрганизации(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Период КАК ДатаСостояния,
	|	ПорядокУчетаОСБУ.Регистратор,
	|	ПорядокУчетаОСБУ.СостояниеБУ КАК Состояние,
	|	ПорядокУчетаОСБУ.Организация
	|ПОМЕСТИТЬ СостоянияОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|			И (ПорядокУчетаОСБУ.Период < &Дата)
	|			И (ПорядокУчетаОСБУ.Организация = &Организация)
	|			И (ПорядокУчетаОСБУ.Активность = ИСТИНА)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(СостоянияОС.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
	|ИЗ
	|	СостоянияОС КАК СостоянияОС
	|
	|СГРУППИРОВАТЬ ПО
	|	СостоянияОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СостоянияОС.ДатаСостояния,
	|	СостоянияОС.Регистратор,
	|	СостоянияОС.Организация,
	|	СостоянияОС.Состояние
	|ПОМЕСТИТЬ ПоследниеСостоянияОС
	|ИЗ
	|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
	|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
	|			И ДатыПоследнихСостоянийОС.ДатаСостояния = СостоянияОС.ДатаСостояния
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ПоследниеСостоянияОС.ДатаСостояния,
	|	ПоследниеСостоянияОС.Регистратор,
	|	ПоследниеСостоянияОС.Организация,
	|	ПоследниеСостоянияОС.Состояние
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСостоянияОС КАК ПоследниеСостоянияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПоследниеСостоянияОС.ОсновноеСредство
	|ГДЕ
	|	(ПоследниеСостоянияОС.Состояние ЕСТЬ NULL
	|			ИЛИ ПоследниеСостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.СнятоСУчета))
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	
	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);

	УстановитьПривилегированныйРежим(Истина);
	РезультатЗапроса = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		Если Выборка.Состояние = Null Тогда
			ШаблонСообщения = НСтр("ru = 'По состоянию на %4.
				|Основное средство <%1 (%2)> не принято к учету в организации <%3>.';
				|en = 'As of %4.
				|Fixed asset <%1 (%2)> is not recognized in company <%3>.'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
				Выборка.КодОС, Реквизиты.Организация, Формат(Реквизиты.Период, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		Иначе
			ШаблонСообщения = НСтр("ru = 'Основное средство <%1 (%2)> снято с учета в организации <%3>
				|документом <%4>. Дата состояния: %5';
				|en = 'Fixed asset <%1 (%2)> is derecognized in the <%3> company
				|with the <%4> document. State date: %5'");
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, Выборка.ОсновноеСредство,
				Выборка.КодОС, Реквизиты.Организация, Выборка.Регистратор, Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Функция ПодготовитьПараметрыСостояниеОСПринятоКУчету(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <ДокументСсылка.*>
	+ "Регистратор"; // <СправочникСсылка.Организации>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.УстановитьПараметр("Подразделение", Реквизиты.Подразделение);
	Запрос.УстановитьПараметр("МОЛ", Реквизиты.МОЛ);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	МестонахождениеОСБУ.МОЛ,
	|	МестонахождениеОСБУ.Подразделение
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|ГДЕ
	|	(МестонахождениеОСБУ.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ МестонахождениеОСБУ.Подразделение <> &Подразделение
	|			ИЛИ &МОЛ <> НЕОПРЕДЕЛЕНО
	|				И МестонахождениеОСБУ.МОЛ <> &МОЛ)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщенияПодразделение = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в учете в местонахождении <%3>';
											|en = 'Fixed asset <%1 (%2)> was not recorded in accounting in location <%3>'");
		ШаблонСообщенияМОЛ = НСтр("ru = 'Основное средство <%1 (%2)> не отражалось в учете за МОЛ <%3>';
									|en = 'Fixed asset <%1 (%2)> was not recorded in accounting for the inventory custodian <%3>'");

		Пока Выборка.Следующий() Цикл
			Если Выборка.Подразделение <> Реквизиты.Подразделение Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияПодразделение,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.Подразделение);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;

			Если Реквизиты.МОЛ <> Неопределено И Выборка.МОЛ <> Реквизиты.МОЛ Тогда
				ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщенияМОЛ,
					Выборка.ОсновноеСредство, Выборка.КодОС, Реквизиты.МОЛ);
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
					+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
			КонецЕсли;
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыСоответствиеМестонахожденияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"        // <Дата>
	+ "ИмяСписка,"     // <Строка, 0>
	+ "МОЛ,"           // <СправочникСсылка.ФизическиеЛица> - МОЛ, за которым закреплено ОС
	+ "Организация,"   // <СправочникСсылка.Организации>
	+ "Подразделение," // Подразделение в котором находится ОС
	+ "Регистратор";   // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура ПроверитьЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетУчета КАК СчетУчета
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	СчетаУчетаОС.СчетУчета
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|		ПО ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|ГДЕ
	|	(СчетаУчетаОС.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ СчетаУчетаОС.СчетУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru = 'Для основного средства <%1 (%2)> не указан счет учета.';
								|en = 'GL account is not specified for fixed asset <%1 (%2)>.'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Выборка.ОсновноеСредство, Выборка.КодОС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Процедура ПроверитьЗаполнениеСчетаЗабалансовогоУчетаОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты);

	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;

	Реквизиты = Параметры.Реквизиты[0];

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Период", Новый Граница(Новый МоментВремени(Реквизиты.Период, Реквизиты.Регистратор), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаОС.ОсновноеСредство,
	|	СчетаУчетаОС.СчетЗабалансовогоУчета КАК СчетЗабалансовогоУчета
	|ПОМЕСТИТЬ СчетаУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&Период,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						ТаблицаОС.ОсновноеСредство
	|					ИЗ
	|						ТаблицаОС КАК ТаблицаОС)) КАК СчетаУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СчетЗабалансовогоУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство.Код КАК КодОС,
	|	СчетаУчетаОС.СчетЗабалансовогоУчета
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаУчетаОС КАК СчетаУчетаОС
	|		ПО ТаблицаОС.ОсновноеСредство = СчетаУчетаОС.ОсновноеСредство
	|ГДЕ
	|	(СчетаУчетаОС.ОсновноеСредство ЕСТЬ NULL
	|			ИЛИ СчетаУчетаОС.СчетЗабалансовогоУчета = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|
	|УПОРЯДОЧИТЬ ПО
	|	ТаблицаОС.НомерСтроки";

	РезультатЗапроса = Запрос.Выполнить();
	Если НЕ РезультатЗапроса.Пустой() Тогда
		Выборка = РезультатЗапроса.Выбрать();

		ШаблонСообщения = НСтр("ru = 'Для основного средства <%1 (%2)> не указан счет учета.';
								|en = 'GL account is not specified for fixed asset <%1 (%2)>.'");

		Пока Выборка.Следующий() Цикл
			ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения,
				Выборка.ОсновноеСредство, Выборка.КодОС);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, Реквизиты.Регистратор, Реквизиты.ИмяСписка + "["
				+ Формат(Выборка.НомерСтроки - 1, "ЧН=0; ЧГ=") + "].ОсновноеСредство", "Объект", Отказ);
		КонецЦикла;

	КонецЕсли;

КонецПроцедуры

Функция ПодготовитьПараметрыЗаполнениеСчетаУчетаОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// РЕГИСТРАЦИЯ СОСТОЯНИЯ ОС

Процедура ПроверитьВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Если Параметры.ТаблицаОС.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = Параметры.Реквизиты[0];
	
	Если Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКУчету
		Или Реквизиты.СостояниеОС = Перечисления.СостоянияОС.ПринятоКЗабалансовомуУчету Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ВЫРАЗИТЬ(ТаблицаОС.ОсновноеСредство КАК Справочник.ОбъектыЭксплуатации) КАК ОсновноеСредство
		|ПОМЕСТИТЬ ТаблицаОС
		|ИЗ
		|	&ТаблицаОС КАК ТаблицаОС
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОС.НомерСтроки,
		|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
		|	ПорядокУчетаОСБУ.Период,
		|	ПорядокУчетаОСБУ.Регистратор,
		|	ПорядокУчетаОСБУ.СостояниеБУ КАК Состояние,
		|	ПорядокУчетаОСБУ.Организация
		|ПОМЕСТИТЬ СостоянияОС
		|ИЗ
		|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаОС КАК ТаблицаОС
		|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
		|			И (ПорядокУчетаОСБУ.Период < &Дата)
		|			И (ПорядокУчетаОСБУ.Регистратор <> &Документ)
		|			И (ПорядокУчетаОСБУ.Активность = ИСТИНА)
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство КАК ОсновноеСредство,
		|	МАКСИМУМ(СостоянияОС.Период) КАК Период
		|ПОМЕСТИТЬ ДатыПоследнихСостоянийОС
		|ИЗ
		|	СостоянияОС КАК СостоянияОС
		|
		|СГРУППИРОВАТЬ ПО
		|	СостоянияОС.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияОС.ОсновноеСредство,
		|	СостоянияОС.ОсновноеСредство.Код КАК КодОС,
		|	СостоянияОС.Период,
		|	СостоянияОС.НомерСтроки КАК НомерСтроки,
		|	СостоянияОС.Регистратор,
		|	СостоянияОС.Организация
		|ИЗ
		|	ДатыПоследнихСостоянийОС КАК ДатыПоследнихСостоянийОС
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СостоянияОС КАК СостоянияОС
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = СостоянияОС.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.Период = СостоянияОС.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.АрендованныеОС КАК АрендованныеОС
		|		ПО ДатыПоследнихСостоянийОС.ОсновноеСредство = АрендованныеОС.ОсновноеСредство
		|			И ДатыПоследнихСостоянийОС.Период = АрендованныеОС.Период
		|ГДЕ
		|	СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
		|	ИЛИ (СостоянияОС.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКЗабалансовомуУчету)
		|		И ЕСТЬNULL(АрендованныеОС.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)) В (
		|						НЕОПРЕДЕЛЕНО, 
		|						ЗНАЧЕНИЕ(Справочник.ДоговорыАренды.ПустаяСсылка)))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НомерСтроки";
		
		Запрос = Новый Запрос(ТекстЗапроса);
		Запрос.УстановитьПараметр("Организация", Реквизиты.Организация );
		Запрос.УстановитьПараметр("Состояние", Реквизиты.СостояниеОС);
		Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.УстановитьПараметр("Дата", Реквизиты.Период);
		Запрос.УстановитьПараметр("Документ", Реквизиты.Регистратор);
		
		УстановитьПривилегированныйРежим(Истина);
		РезультатЗапроса = Запрос.Выполнить();
		УстановитьПривилегированныйРежим(Ложь);

		Если НЕ РезультатЗапроса.Пустой() Тогда
			Выборка = РезультатЗапроса.Выбрать();
			
			ШаблонСообщения = НСтр("ru = 'Основное средство <%1 (%2)> принято к учету в организации <%3>
				|документом <%4>. Дата состояния: %5';
				|en = 'Fixed asset <%1 (%2)> is recognized in the  <%3> company
				|with the <%4> document. State date: %5'");
			
			Пока Выборка.Следующий() Цикл
				
				ТекстСообщения = СтрШаблон(ШаблонСообщения, 
									Выборка.ОсновноеСредство,
									Выборка.КодОС, 
									Выборка.Организация, 
									Выборка.Регистратор, 
									Формат(Выборка.ДатаСостояния, "ДЛФ=D"));
									
				Поле = ОбщегоНазначенияКлиентСервер.ПутьКТабличнойЧасти(
									Реквизиты.ИмяСписка,
									Выборка.НомерСтроки,
									"ОсновноеСредство");
									
				ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
						ТекстСообщения, 
						Реквизиты.Регистратор, 
						Поле, 
						"Объект", 
						Отказ);
			КонецЦикла;
			
			Возврат;
		КонецЕсли;
		
	ИначеЕсли Реквизиты.СостояниеОС = Перечисления.СостоянияОС.СнятоСУчета Тогда
		
		ПроверитьСостояниеОСПринятоКУчету(Параметры.ТаблицаОС, Параметры.Реквизиты, Отказ);
	
	КонецЕсли;
	
КонецПроцедуры

Функция ПодготовитьПараметрыВозможностьИзмененияСостоянияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ИмяСписка,"   // <Строка, 0>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "СостояниеОС," // <ПеречислениеСсылка.СостоянияОС> - состояние ОС, которое требуется установить
	+ "Регистратор"; // <ДокументСсылка.*>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// РАСЧЕТ АМОРТИЗАЦИИ ОС

Функция ПодготовитьТаблицуАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты, ТаблицаПараметровРасчетаАмортизации = Неопределено, КоличествоОбработанныхДанных = 0, Отказ = Ложь) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Параметры = ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаАмортизации = ПустаяТаблицаЗначенийНачисленнойАмортизации();
	
	ОтражатьВНалоговомУчете = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Реквизиты.Организация, Реквизиты.Период);
	МетодНачисленияАмортизацииНУ = УчетнаяПолитика.МетодНачисленияАмортизацииНУ(Реквизиты.Организация, Реквизиты.Период);
	
	Если ОтражатьВНалоговомУчете И НЕ ЗначениеЗаполнено(МетодНачисленияАмортизацииНУ) Тогда
		Если Реквизиты.ВыдаватьСообщения Тогда
			ШаблонСообщения = НСтр("ru = 'Не указан метод начисления амортизации (НУ) в учетной политике организации %1
				|Укажите метод начисления амортизации на %2.';
				|en = 'Accrual method of accounting (TA) is not specified in the %1 company accounting policy.
				|Specify accrual method of accounting on %2.'");
			ТекстСообщения = СтрШаблон(ШаблонСообщения, Реквизиты.Организация, Формат(НачалоГода(Реквизиты.ДатаРасчета)));
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения,,,, Отказ);
		КонецЕсли;
		Возврат ТаблицаАмортизации;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Реквизиты.Организация);
	Запрос.УстановитьПараметр("НачалоГода", НачалоГода(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериодаДата", НачалоМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("НачалоПериода", Новый Граница(НачалоМесяца(Реквизиты.ДатаРасчета), ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("КонецПериода", КонецМесяца(Реквизиты.ДатаРасчета));
	Запрос.УстановитьПараметр("Период", Реквизиты.ДатаРасчета);
	Запрос.УстановитьПараметр("ИспользуетсяУправлениеВНА_2_4", ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(Реквизиты.ДатаРасчета));
	
	ДатаПереходаКЛинейномуМетоду = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьДатуПереходаКЛинейномуМетоду(
										Реквизиты.ДатаРасчета, Реквизиты.Организация);
	Запрос.УстановитьПараметр("ДатаПереходаКЛинейномуМетоду", ДатаПереходаКЛинейномуМетоду);
	
	// Получим список основных средств для расчета амортизации
	Если Параметры.ТаблицаОС.Количество() > 0 Тогда
		Запрос.УстановитьПараметр("ТаблицаОС", Параметры.ТаблицаОС);
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице();
	Иначе
		Запрос.УстановитьПараметр("ПериодСостояния", НачалоМесяца(Реквизиты.ДатаРасчета));
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе();
	КонецЕсли;
	Запрос.Выполнить();
	
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации();
	Запрос.Выполнить();
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство
	|ИЗ
	|	НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ";
	ТаблицаОСНачислениеАмортизации = Запрос.Выполнить().Выгрузить();
	ТаблицаОСНачислениеАмортизации.Свернуть("ОсновноеСредство");
	
	// Получим признак возможности начисления амортизации по НУ только линейным методом
	ТаблицаПризнаков = ПодготовитьТаблицуТолькоЛинейныйМетодНУ(ТаблицаОСНачислениеАмортизации, Параметры.Реквизиты, Отказ);
	
	Запрос.УстановитьПараметр("ТаблицаПризнаков", ТаблицаПризнаков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаПризнаков.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаПризнаков.ТолькоЛинейный
	|ПОМЕСТИТЬ СписокОС
	|ИЗ
	|	&ТаблицаПризнаков КАК ТаблицаПризнаков
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	// Получим дополнительные параметры из регистров сведений
	СписокЗапросов = Новый Массив;
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПорядокУчета());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете());
	СписокЗапросов.Добавить(ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры());
	Запрос.Текст = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос.Выполнить();
	
	// Получим таблицу графиков амортизации
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации
	|ИЗ
	|	ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ";
	СписокГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков = ГрафикиАмортизацииОС(СписокГрафиков);
	
	// Соберем все параметры в одну таблицу
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство КАК ОсновноеСредство,
	|	СписокОС.ОсновноеСредство.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	СписокОС.ОсновноеСредство.ГруппаОС КАК ГруппаОС,
	|	ЕСТЬNULL(НачислениеАмортизацииБУ.НачислятьАмортизациюБУ, ЛОЖЬ) КАК НачислятьАмортизациюБУ,
	|	ЕСТЬNULL(НачислениеАмортизацииНУ.НачислятьАмортизациюНУ, ЛОЖЬ) КАК НачислятьАмортизациюНУ,
	|	ЕСТЬNULL(ВыработкаОС.ОбъемВыработки, 0) КАК Количество,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации, 0) КАК СрокИспользованияДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации, 0) КАК СтоимостьДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации, 0) КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентАмортизации, 0) КАК КоэффициентАмортизации,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.КоэффициентУскорения, 0) КАК КоэффициентУскорения,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период,
	|	ПараметрыАмортизацииОСБУ.Период КАК ПериодНУ,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК СчетУчета,
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК СчетУчетаНачалоГода,
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК СчетНачисленияАмортизацииНачалоГода,
	|	НЕ ПараметрыЦелевогоФинансирования.ОсновноеСредство ЕСТЬ NULL КАК ПрименениеЦелевогоФинансирования,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяУправлениеВНА_2_4
	|			ТОГДА СчетаБухгалтерскогоУчетаОС.СчетУчетаЦФ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) 
	|	КОНЕЦ КАК СчетУчетаЦФ,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяУправлениеВНА_2_4
	|			ТОГДА СчетаБухгалтерскогоУчетаОС.СчетУчетаАмортизацииЦФ
	|		ИНАЧЕ ЕСТЬNULL(ПараметрыЦелевогоФинансирования.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))
	|	КОНЕЦ КАК СчетНачисленияАмортизацииЦФ,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНачалоГода.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаЦФНачалоГода,
	|	ЕСТЬNULL(ПараметрыЦелевогоФинансированияНачалоГода.СчетАмортизации, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетНачисленияАмортизацииЦФНачалоГода,
	|	ПервоначальныеСведенияОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор,
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПервоначальнаяСтоимость, 0) КАК ПервоначальнаяСтоимость,
	|	МестонахождениеОСБУ.Подразделение КАК ПодразделениеЗатрат,
	|	ПорядокУчетаОСБУ.СтатьяРасходов КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходов КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовЗаданДокументом КАК СпособОтраженияРасходовЗаданДокументом,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	ЕСТЬNULL(ПорядокУчетаОСБУ.СпособОтраженияРасходовДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ, 0) КАК СрокПолезногоИспользованияНУ,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации, 0) КАК ПРДляВычисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	СписокОС.ТолькоЛинейный КАК ТолькоЛинейныйМетодНУ,
	|	ПервоначальныеСведенияОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	ЕСТЬNULL(ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент, 1) КАК СпециальныйКоэффициент,
	|	МестонахождениеОСБУ.Подразделение КАК Подразделение,
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009, 0)
	|		ИНАЧЕ (ГОД(&ДатаПереходаКЛинейномуМетоду) 
	|					- ГОД(ПервоначальныеСведенияОС.ДатаПринятияКУчету)) * 12 
	|			+ (МЕСЯЦ(&ДатаПереходаКЛинейномуМетоду) 
	|					- МЕСЯЦ(ПервоначальныеСведенияОС.ДатаПринятияКУчету)) - 1
	|	КОНЕЦ КАК ФактическийСрокПриПереходеКЛинейномуМетоду,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009
	|ПОМЕСТИТЬ СписокОССПараметрами
	|ИЗ
	|	СписокОС КАК СписокОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииБУ КАК НачислениеАмортизацииБУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ НачислениеАмортизацииНУ КАК НачислениеАмортизацииНУ
	|		ПО СписокОС.ОсновноеСредство = НачислениеАмортизацииНУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО СписокОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыАмортизацииОСБУ КАК ПараметрыАмортизацииОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПараметрыАмортизацииОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО СписокОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО СписокОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СчетаБухгалтерскогоУчетаОСНачалоГода.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|		ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансирования.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|		ПО СписокОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияНачалоГода.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВыработкаОС КАК ВыработкаОС
	|		ПО СписокОС.ОсновноеСредство = ВыработкаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОСБУ КАК МестонахождениеОСБУ
	|		ПО СписокОС.ОсновноеСредство = МестонахождениеОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ АрендованныеОС КАК АрендованныеОС
	|		ПО СписокОС.ОсновноеСредство = АрендованныеОС.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Регистратор", Реквизиты.Регистратор);
	// Получим амортизацию ранее начисленную документом
	Если ЗначениеЗаполнено(Реквизиты.Регистратор) Тогда
		Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу();
		Запрос.Выполнить();
	Иначе
		ПустаяТаблицаОборотов = Новый ТаблицаЗначений;
		ПустаяТаблицаОборотов.Колонки.Добавить("ОсновноеСредство", Новый ОписаниеТипов("СправочникСсылка.ОбъектыЭксплуатации"));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		ПустаяТаблицаОборотов.Колонки.Добавить("АмортизацияНУОборот", ОбщегоНазначения.ОписаниеТипаЧисло(15, 2));
		
		Запрос.УстановитьПараметр("ПустаяТаблицаОборотов", ПустаяТаблицаОборотов);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ПустаяТаблицаОборотов.ОсновноеСредство КАК ОсновноеСредство,
		|	ПустаяТаблицаОборотов.АмортизацияОборот КАК АмортизацияОборот,
		|	ПустаяТаблицаОборотов.АмортизацияНУОборот КАК АмортизацияНУОборот
		|ПОМЕСТИТЬ АмортизацияОСДокумента
		|ИЗ
		|	&ПустаяТаблицаОборотов КАК ПустаяТаблицаОборотов";
		Запрос.Выполнить();
	КонецЕсли;
	
	Если ОбщегоНазначенияБПВызовСервераПовтИсп.ИспользоватьУправляемыеБлокировки() Тогда
		
		// Блокировка регистра бухгалтерии.
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУ.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
		|ИЗ
		|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения)";
		РезультатЗапроса = Запрос.Выполнить();

		СтруктураПараметровБлокировки = Новый Структура("ТипТаблицы, ИмяТаблицы, ИсточникДанных",
			"РегистрБухгалтерии", "Хозрасчетный", РезультатЗапроса);

		СтруктураЗначенийБлокировки = Новый Структура;
		СтруктураЗначенийБлокировки.Вставить("Период", Новый Диапазон(, КонецМесяца(Реквизиты.ДатаРасчета)));
		СтруктураЗначенийБлокировки.Вставить("Организация", Реквизиты.Организация);

		СтруктураИсточникаДанных = Новый Структура("Счет", "Счет");

		ОбщегоНазначенияБПВызовСервера.УстановитьУправляемуюБлокировку(СтруктураПараметровБлокировки, СтруктураЗначенийБлокировки, СтруктураИсточникаДанных);

	КонецЕсли;

	// Получим суммы из регистра бухгалтерии
	МассивВидыСубконтоКВ = Новый Массив;
	МассивВидыСубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства);
	МассивВидыСубконтоКВ.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ДокументыАмортизационнойПремии);
	Запрос.УстановитьПараметр("ВидыСубконтоКВ", МассивВидыСубконтоКВ);
	Запрос.Текст = ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок();
	Запрос.Выполнить();
	
	// Получим амортизированные за период активы
	Запрос.Текст = ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод();
	Запрос.Выполнить();
	
	// Заполнение соответствия способов отражения расходов
	СоответствиеСпособовОтражения = Новый Соответствие;
	Запрос.Текст = ПолучитьТекстЗапросаСпособовОтраженияРасходов();
	Результат = Запрос.Выполнить();
	Если Не Результат.Пустой() Тогда
		Выборка = Результат.Выбрать();
		Пока Выборка.Следующий() Цикл
			СоответствиеСпособовОтражения.Вставить(Выборка.СпособОтраженияРасходов, Выборка.ОтражениеАмортизационныхРасходов.Выгрузить());
		КонецЦикла;
	КонецЕсли;
	
	// Сформируем основную таблицу для расчета
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СписокОС.ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(СписокОС.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	СписокОС.ОсновноеСредство.Код КАК Код,
	|	СписокОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	СписокОС.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	СписокОС.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ,
	|	СписокОС.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ,
	|	СписокОС.Количество КАК Количество,
	|	СписокОС.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	СписокОС.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	СписокОС.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	СписокОС.КоэффициентАмортизации КАК КоэффициентАмортизации,
	|	СписокОС.КоэффициентУскорения КАК КоэффициентУскорения,
	|	СписокОС.Период КАК Период,
	|	СписокОС.ПериодНУ КАК ПериодНУ,
	|	СписокОС.ГрафикАмортизации КАК ГрафикАмортизации,
	|	СписокОС.СчетУчета КАК СчетУчета,
	|	СписокОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации,
	|	СписокОС.ИнвентарныйНомер КАК ИнвентарныйНомер,
	|	СписокОС.ПорядокПогашенияСтоимости КАК ПорядокПогашенияСтоимости,
	|	СписокОС.СпособНачисленияАмортизации КАК СпособНачисленияАмортизации,
	|	СписокОС.Контрагент КАК Контрагент,
	|	СписокОС.Договор КАК Договор,
	|	СписокОС.ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость,
	|	СписокОС.СтатьяРасходов КАК СтатьяРасходов,
	|	СписокОС.АналитикаРасходов КАК АналитикаРасходов,
	|	СписокОС.ПередаватьРасходыВДругуюОрганизацию,
	|	СписокОС.ОрганизацияПолучательРасходов,
	|	СписокОС.СчетПередачиРасходов,
	|	ЕСТЬNULL(СписокОС.СпособОтраженияРасходовЗаданДокументом, ЛОЖЬ) КАК СпособОтраженияРасходовЗаданДокументом,
	|	СписокОС.СпособОтраженияРасходов КАК СпособОтраженияРасходов,
	|	СписокОС.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	СписокОС.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	СписокОС.ПорядокВключенияСтоимостиВСоставРасходов КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	СписокОС.ТолькоЛинейныйМетодНУ КАК ТолькоЛинейныйМетодНУ,
	|	СписокОС.ДатаПринятияКУчету КАК ДатаПринятияКУчету,
	|	СписокОС.СпециальныйКоэффициент КАК СпециальныйКоэффициент,
	|	СписокОС.Подразделение КАК Подразделение,
	|	СписокОС.ФактическийСрокПриПереходеКЛинейномуМетоду КАК ФактическийСрокПриПереходеКЛинейномуМетоду,
	|	
	|	СписокОС.ПрименениеЦелевогоФинансирования КАК ПрименениеЦелевогоФинансирования,
	|	СписокОС.СчетУчетаЦФ КАК СчетУчетаЦФ,
	|	СписокОС.СчетНачисленияАмортизацииЦФ КАК СчетНачисленияАмортизацииЦФ,
	|	
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) КАК СтоимостьНачальныйОстаток,
	|
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0)
	|		+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаОстатокКт, 0)
	|		+ ВЫБОР 
	|			КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ТОГДА ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокДт, 0)
	|				ИНАЧЕ 0 
	|		КОНЕЦ КАК АмортизацияНачальныйОстаток,
	|
	|	(ЕСТЬNULL(СтоимостьНаНачалоГода.СуммаОстатокДт, 0) - ЕСТЬNULL(АмортизацияНаНачалоГода.СуммаОстатокКт, 0))
	|	+ (ЕСТЬNULL(СтоимостьЦФНаНачалоГода.СуммаОстатокДт, 0) - ЕСТЬNULL(АмортизацияЦФНаНачалоГода.СуммаОстатокКт, 0)) КАК СтоимостьНаНачалоГода,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) КАК СтоимостьНУНачальныйОстаток,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0)
	|	+ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) КАК СтоимостьПРНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0)
	|	+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаНУОстатокКт, 0) КАК АмортизацияНУНачальныйОстаток,
	|	ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаПРОстатокКт, 0)
	|	+ ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаПРОстатокКт, 0) КАК АмортизацияПРНачальныйОстаток,
	|	
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0)
	|		- ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокКт, 0)
	|		- ВЫБОР 
	|			КОГДА СписокОС.ПорядокПогашенияСтоимости = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) 
	|				ТОГДА ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаОстатокДт, 0)
	|				ИНАЧЕ 0 
	|		КОНЕЦ КАК ОстаточнаяСтоимостьБУ,
	|
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаОстатокКт, 0) КАК ОстаточнаяСтоимостьБУЦФ,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) - ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаНУОстатокКт, 0) КАК ОстаточнаяСтоимостьНУ,
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаНУОстатокКт, 0) КАК ОстаточнаяСтоимостьНУЦФ,
	|	ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0) - ЕСТЬNULL(АмортизацияОСНачалоПериода.СуммаПРОстатокКт, 0) КАК ОстаточнаяСтоимостьПР,
	|	ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0)- ЕСТЬNULL(АмортизацияЦФОСНачалоПериода.СуммаПРОстатокКт, 0) КАК ОстаточнаяСтоимостьПРЦФ,
	|	
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымБУ,
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаНУОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаНУОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымНУ,
	|	ВЫБОР КОГДА ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0) = 0
	|		ТОГДА 1
	|		КОГДА ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) = 0
	|		ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) / (ЕСТЬNULL(СтоимостьЦФОСНачалоПериода.СуммаПРОстатокДт, 0) + ЕСТЬNULL(СтоимостьОСНачалоПериода.СуммаПРОстатокДт, 0))
	|	КОНЕЦ КАК ПропорцияЦелевыхСредствКСобственнымПР,
	|	
	|	ЕСТЬNULL(АмортизационнаяПремия.СуммаАмортизационнойПремии, 0) КАК СуммаАмортизационнойПремии,
	|	АмортизационнаяПремия.ДокументАмортизационнойПремии КАК ДокументАмортизационнойПремии,
	|	ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка.СтатьяРасходовАмортизационнойПремии, ДокументАП_ВводОстатков.СтатьяРасходовАмортизационнойПремии) КАК СтатьяРасходовАмортизационнойПремии,
	|	ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка.АналитикаРасходовАмортизационнойПремии, ДокументАП_ВводОстатков.АналитикаРасходовАмортизационнойПремии) КАК АналитикаРасходовАмортизационнойПремии,
	|	(ЕСТЬNULL(ДокументАП_ПринятиеКУчету.Ссылка, ДокументАП_ВводОстатков.Ссылка) = СписокОС.СпособОтраженияРасходовДокументОснование) КАК СпособОтраженияРасходовАмортизационнойПремииЗаданДокументом,
	|	
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЕСТЬNULL(АмортизацияОСОбороты.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот,
	|	
	|	ВЫБОР
	|		КОГДА ГОД(&ДатаПереходаКЛинейномуМетоду) = 2009
	|			ТОГДА ЕСТЬNULL(СписокОС.АмортизацияДо2009, 0)
	|		ИНАЧЕ ЕСТЬNULL(АмортизацияОСПриПереходеКЛинейномуМетоду.АмортизацияНачальныйОстаток, 0)
	|	КОНЕЦ КАК АмортизацияПриПереходеКЛинейномуМетоду,
	|	ВЫБОР КОГДА втАмортизированныеАктивы.ОсновноеСредство ЕСТЬ NULL
	|		ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЕстьНачислениеАмортизацииЗаПериод
	|ИЗ
	|	СписокОССПараметрами КАК СписокОС
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК СтоимостьОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСНачалоПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК СтоимостьЦФОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФ = СтоимостьЦФОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК СтоимостьОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетУчета = СтоимостьОСКонецПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК СтоимостьЦФОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФ = СтоимостьЦФОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК АмортизацияОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСНачалоПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНачалоПериода КАК АмортизацияЦФОСНачалоПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФОСНачалоПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФ = АмортизацияЦФОСНачалоПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК АмортизацияОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизации = АмортизацияОСКонецПериода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиКонецПериода КАК АмортизацияЦФОСКонецПериода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФОСКонецПериода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФ = АмортизацияЦФОСКонецПериода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСОбороты КАК АмортизацияОСОбороты
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСОбороты.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК СтоимостьНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетУчетаНачалоГода = СтоимостьНаНачалоГода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК СтоимостьЦФНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = СтоимостьЦФНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетУчетаЦФНачалоГода = СтоимостьЦФНаНачалоГода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК АмортизацияНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииНачалоГода = АмортизацияНаНачалоГода.Счет
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиНаНачалоГода КАК АмортизацияЦФНаНачалоГода
	|		ПО СписокОС.ОсновноеСредство = АмортизацияЦФНаНачалоГода.ОсновноеСредство
	|			И СписокОС.СчетНачисленияАмортизацииЦФНачалоГода = АмортизацияЦФНаНачалоГода.Счет
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОстаткиАмортизационнойПремии КАК АмортизационнаяПремия
	|		ПО СписокОС.ОсновноеСредство = АмортизационнаяПремия.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПринятиеКУчетуОС.ОС КАК ДокументАП_ПринятиеКУчету
	|		ПО АмортизационнаяПремия.ДокументАмортизационнойПремии = ДокументАП_ПринятиеКУчету.Ссылка
	|			И СписокОС.ОсновноеСредство = ДокументАП_ПринятиеКУчету.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов.ОС КАК ДокументАП_ВводОстатков
	|		ПО АмортизационнаяПремия.ДокументАмортизационнойПремии = ДокументАП_ВводОстатков.Ссылка
	|			И СписокОС.ОсновноеСредство = ДокументАП_ВводОстатков.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСПриПереходеКЛинейномуМетоду КАК АмортизацияОСПриПереходеКЛинейномуМетоду
	|		ПО СписокОС.ОсновноеСредство = АмортизацияОСПриПереходеКЛинейномуМетоду.ОсновноеСредство
	|	
	|		ЛЕВОЕ СОЕДИНЕНИЕ втАмортизированныеАктивы КАК втАмортизированныеАктивы
	|		ПО СписокОС.ОсновноеСредство = втАмортизированныеАктивы.ОсновноеСредство
	|
	|УПОРЯДОЧИТЬ ПО
	|	Код";
	
	ВыборкаПоОС = Запрос.Выполнить().Выбрать();
	
	КоличествоОбработанныхДанных = КоличествоОбработанныхДанных + ВыборкаПоОС.Количество();
	
	ПорядкиПогашенияСтоимости = Новый Соответствие;
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеАмортизации, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации, Истина);
	ПорядкиПогашенияСтоимости.Вставить(Перечисления.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена, Истина);
	
	Пока ВыборкаПоОС.Следующий() Цикл
		
		СуммаАмортизацииБУ = 0;
		СуммаАмортизацииНУ = 0;
		СуммаАмортизацииПР = 0;
		
		СписатьОстатокБУ = Ложь;
		СписатьОстатокНУ = Ложь;
		СписатьОстатокПР = Ложь;
		
		СуммаАмортизационнойПремии = 0;
		
		Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СчетНачисленияАмортизации) Тогда
			Если Реквизиты.ВыдаватьСообщения Тогда
				СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указан счет для начисления амортизации';
																			|en = 'Depreciation accrual account is not specified'"), 
					Реквизиты.Регистратор, Отказ);
			КонецЕсли;
			Продолжить;
		КонецЕсли;
		
		// Параметры расчета
		Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
			
			ПараметрыАмортизации = ТаблицаПараметровРасчетаАмортизации.Добавить();
			ПараметрыАмортизации.ОбъектУчета = ВыборкаПоОС.ОсновноеСредство;
			
			Если ВыборкаПоОС.НачислятьАмортизациюБУ Тогда
				ПараметрыАмортизации.МетодНачисленияБУ = ВыборкаПоОС.СпособНачисленияАмортизации;
				ПараметрыАмортизации.СрокИспользованияБУ = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьБУ = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
				ПараметрыАмортизации.СтоимостьНаНачалоГодаБУ = ВыборкаПоОС.СтоимостьНаНачалоГода;
				ПараметрыАмортизации.ВыработкаЗаМесяцБУ = ВыборкаПоОС.Количество;
				ПараметрыАмортизации.ОбъемПродукцииБУ = ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
				ПараметрыАмортизации.КоэффициентАмортизацииБУ = ВыборкаПоОС.КоэффициентАмортизации;
				ПараметрыАмортизации.КоэффициентУскоренияБУ = ВыборкаПоОС.КоэффициентУскорения;
				ПараметрыАмортизации.ПРДляВычисленияАмортизации = ВыборкаПоОС.ПРДляВычисленияАмортизации;
			КонецЕсли;
			
			Если ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
				ПараметрыАмортизации.СрокИспользованияНУ = ВыборкаПоОС.СрокПолезногоИспользованияНУ;
				ПараметрыАмортизации.КоэффициентНУ = ВыборкаПоОС.СпециальныйКоэффициент;
			КонецЕсли;
			
			// Остальные параметры устанавливаются по месту расчета
			
		КонецЕсли; 
		
		Пропустить = Ложь;
		
		Если ВыборкаПоОС.НачислятьАмортизациюБУ
			И ПорядкиПогашенияСтоимости.Получить(ВыборкаПоОС.ПорядокПогашенияСтоимости) <> Неопределено Тогда
			
			Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СпособНачисленияАмортизации) Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указан способ начисления амортизации';
																				|en = 'Depreciation accrual method is not specified'"),
						Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток <= 0 Тогда
				Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
			КонецЕсли;
			
			Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
				Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
			КонецЕсли;
			
			Если Не ЗначениеЗаполнено(ВыборкаПоОС.СтоимостьДляВычисленияАмортизации)
				И ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток > 0 Тогда
				Если Реквизиты.ВыдаватьСообщения Тогда
					СообщениеОбОшибке = НСтр("ru = 'Стоимость для начисления амортизации равна нулю
					|Возможно, не выполнено закрытие месяца за предыдущий период';
					|en = 'Cost for depreciation accrual is zero.
					|The month-end closing may have not been performed for the previous period.'");
					СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, СообщениеОбОшибке, Реквизиты.Регистратор, Отказ);
				КонецЕсли;
				Пропустить = Истина;
			КонецЕсли;
			
			Если (ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный
				ИЛИ ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования
				ИЛИ ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка)
				И НЕ ЗначениеЗаполнено(ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации) Тогда
				
				Пропустить = Истина;
			КонецЕсли;
			
			Если НЕ Пропустить Тогда
				
				Если ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.Линейный Тогда
					
					СуммаГодовойАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						КоэффициентПериода = 0;
					Иначе
						КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
							ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
						СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
						КонецЕсли;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения = Истина Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Объем продукции для вычисления не определен';
																						|en = 'Product volume for calculation is not determined'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						СуммаАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.Количество / ВыборкаПоОС.ОбъемПродукцииРаботДляВычисленияАмортизации;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФ Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения = Истина Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Процент годовой амортизации не определен';
																						|en = 'Annual depreciation percent is not determined'"),
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						
						СуммаГодовойАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.КоэффициентАмортизации / 100;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						Иначе
							КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
								ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
							СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
							Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
								ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега Тогда
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.Количество) Тогда
						Пропустить = Истина;
					КонецЕсли;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентАмортизации) Тогда
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Процент годовой амортизации не определен';
																						|en = 'Annual depreciation percent is not determined'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
						СуммаАмортизации = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ВыборкаПоОС.Количество / 1000 * ВыборкаПоОС.КоэффициентАмортизации / 100 ;
					КонецЕсли;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.УменьшаемогоОстатка Тогда
					
					Если Год(ВыборкаПоОС.Период) = Год(Реквизиты.ДатаРасчета) Тогда
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации;
					Иначе
						СтоимостьИтоговая = ВыборкаПоОС.СтоимостьНаНачалоГода;
					КонецЕсли;
					
					СуммаГодовойАмортизации = СтоимостьИтоговая / ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации * 12;
					
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
						СуммаАмортизации   = СуммаГодовойАмортизации / 12;
					Иначе
						КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
							ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
						СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
						КонецЕсли;
					КонецЕсли;
					
					КоэффициентУскорения = ВыборкаПоОС.КоэффициентУскорения;
					Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.КоэффициентУскорения) Тогда
						КоэффициентУскорения = 1;
						Если Реквизиты.ВыдаватьСообщения Тогда
							СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Коэффициент ускорения не заполнен';
																						|en = 'Acceleration factor is not filled in'"), 
								Реквизиты.Регистратор, Отказ);
						КонецЕсли;
					КонецЕсли;
					
					СуммаАмортизации = СуммаАмортизации * КоэффициентУскорения;
					
				ИначеЕсли ВыборкаПоОС.СпособНачисленияАмортизации = Перечисления.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования Тогда
					
					// Дата последнего изменения параметров
					Если ВыборкаПоОС.Период = NULL Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, 
							НСтр("ru = 'Не определилась дата начала использования (изменения параметров)';
								|en = 'Date of usage start (parameter change) is not determined'"), Реквизиты.Регистратор, Отказ);
						Пропустить = Истина;
					КонецЕсли;
					
					Если Пропустить Тогда
						СуммаАмортизации = 0
					Иначе
					
						ДатаНачалаРасчета = НачалоМесяца(ДобавитьМесяц(ВыборкаПоОС.Период, 1));
						
						ЧислоЛетПользования = ВыборкаПоОС.СрокИспользованияДляВычисленияАмортизации / 12;
						ЧислоЛетПользования = Цел(ЧислоЛетПользования) + ?(ЧислоЛетПользования - Цел(ЧислоЛетПользования) > 0, 1, 0);
						ЧислоЛетПрошедших   = Цел(УправлениеВнеоборотнымиАктивами.ОпределитьФактическийСрокИспользования(ДатаНачалаРасчета, Реквизиты.ДатаРасчета) / 12);
						ЧислоЛетОставшихся  = ЧислоЛетПользования - ЧислоЛетПрошедших;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.ФактическийСрокИспользования = ЧислоЛетПрошедших * 12;
							ПараметрыАмортизации.ОставшийсяСрокИспользования = ЧислоЛетОставшихся * 12;
						КонецЕсли;
						
						// Формула суммы чисел от 1 до N
						//		S = (N + 1) * N / 2
						СуммаЧиселЛет = (ЧислоЛетПользования + 1) * ЧислоЛетПользования / 2;
						
						ПроцентГодовойАмортизации = ЧислоЛетОставшихся / СуммаЧиселЛет;
						СуммаГодовойАмортизации   = ВыборкаПоОС.СтоимостьДляВычисленияАмортизации * ПроцентГодовойАмортизации;
						
						Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.ГрафикАмортизации) Тогда
							СуммаАмортизации   = СуммаГодовойАмортизации / 12;
						Иначе
							КоэффициентПериода = ПолучитьКоэффициентАмортизацииИзГрафика(
								ТаблицаГрафиков, ВыборкаПоОС.ГрафикАмортизации, Реквизиты.ДатаРасчета);
							СуммаАмортизации   = СуммаГодовойАмортизации * КоэффициентПериода;
							Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
								ПараметрыАмортизации.КоэффициентПериода = КоэффициентПериода;
							КонецЕсли;
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЕсли;
				
				ВсегоОсталосьСписать = ВыборкаПоОС.СтоимостьНачальныйОстаток - ВыборкаПоОС.АмортизацияНачальныйОстаток;
				СписатьОстатокБУ = (ВсегоОсталосьСписать < СуммаАмортизации);
				СуммаАмортизацииБУ = Окр(Макс(0, Мин(СуммаАмортизации, ВсегоОсталосьСписать)), 2);
				
				СуммаАмортизацииПР = Окр(ВыборкаПоОС.ПРДляВычисленияАмортизации * (СуммаАмортизацииБУ / ВыборкаПоОС.СтоимостьДляВычисленияАмортизации), 2);
				ВсегоОсталосьСписатьПР = ВыборкаПоОС.СтоимостьПРНачальныйОстаток - ВыборкаПоОС.АмортизацияПРНачальныйОстаток;
				
				Если ВсегоОсталосьСписатьПР > 0 Тогда
					СписатьОстатокПР = (ВсегоОсталосьСписатьПР < СуммаАмортизацииПР);
					СуммаАмортизацииПР = Окр(Макс(0, Мин(СуммаАмортизацииПР, ВсегоОсталосьСписатьПР)), 2);
				Иначе
					СписатьОстатокПР = (ВсегоОсталосьСписатьПР > СуммаАмортизацииПР);
					СуммаАмортизацииПР = Окр(Мин(0, Макс(СуммаАмортизацииПР, ВсегоОсталосьСписатьПР)), 2);
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		Пропустить = Ложь;
		
		Если ОтражатьВНалоговомУчете Тогда
			
			Если ПорядкиПогашенияСтоимости.Получить(ВыборкаПоОС.ПорядокВключенияСтоимостиВСоставРасходов) <> Неопределено
				И ВыборкаПоОС.НачислятьАмортизациюНУ Тогда
				
				Если (ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.АмортизацияНУНачальныйОстаток) = 0 Тогда
					Пропустить = Истина; // остаточная стоимость на начало месяца равна 0
				КонецЕсли;
				
				Если ВыборкаПоОС.ЕстьНачислениеАмортизацииЗаПериод Тогда
					Пропустить = Истина; // по указанному ОС в этом месяце уже начисляли амортизацию
				КонецЕсли;
				
				Если НЕ ЗначениеЗаполнено(ВыборкаПоОС.СтоимостьНУНачальныйОстаток) Тогда
					// Стоимость на начало месяца = 0.
					Пропустить = Истина;
				КонецЕсли;
				
				Если ВыборкаПоОС.ТолькоЛинейныйМетодНУ Тогда
					МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный;
				Иначе
					МетодНачисленияАмортизации = МетодНачисленияАмортизацииНУ;
				КонецЕсли;
				
				Если МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный
					И НЕ ЗначениеЗаполнено(ВыборкаПоОС.СрокПолезногоИспользованияНУ) Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Срок использования равен нулю';
																					|en = 'Useful life is equal to zero'"), 
							Реквизиты.Регистратор, Отказ);
					КонецЕсли;
					Продолжить;
					
				ИначеЕсли МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Нелинейный
					И НЕ ЗначениеЗаполнено(ВыборкаПоОС.АмортизационнаяГруппа) Тогда
					
					Если Реквизиты.ВыдаватьСообщения Тогда
						СообщитьОбОшибкеПриНачисленииАмортизации(ВыборкаПоОС, НСтр("ru = 'Не указана амортизационная группа';
																					|en = 'Depreciation group is not specified'"), 
							Реквизиты.Регистратор, Отказ, ВыборкаПоОС.ОсновноеСредство);
					КонецЕсли;
					Продолжить;
					
				КонецЕсли;
				
				Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
					ПараметрыАмортизации.МетодНачисленияНУ = МетодНачисленияАмортизации;
				КонецЕсли;
				
				Если НЕ Пропустить Тогда
					
					СуммаАмортизации = 0;
					
					СтоимостьДляВычисления = ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.СуммаАмортизационнойПремии;
					СрокИспользованияДляВычисления = Макс(1, ВыборкаПоОС.СрокПолезногоИспользованияНУ);
					
					СпециальныйКоэффициент = ?(ВыборкаПоОС.СпециальныйКоэффициент = 0, 1, ВыборкаПоОС.СпециальныйКоэффициент);
					
					Если МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Линейный Тогда
						
						СтоимостьДляВычисления = СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияПриПереходеКЛинейномуМетоду;
						
						
						ФактическийСрокПриПереходеКЛинейномуМетоду = Макс(ВыборкаПоОС.ФактическийСрокПриПереходеКЛинейномуМетоду, 0);
						СрокИспользованияДляВычисления = СрокИспользованияДляВычисления - ФактическийСрокПриПереходеКЛинейномуМетоду;
						
						Если СрокИспользованияДляВычисления <= 0 Тогда 
							// ошибка в первоначальных данных
							СуммаАмортизации = 0;
						Иначе 
							СуммаАмортизации = СтоимостьДляВычисления / СрокИспользованияДляВычисления * СпециальныйКоэффициент;
						КонецЕсли;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = СтоимостьДляВычисления;
						КонецЕсли;
						
					ИначеЕсли МетодНачисленияАмортизации = Перечисления.МетодыНачисленияАмортизации.Нелинейный Тогда
						
						НормаАмортизации = УправлениеВнеоборотнымиАктивамиПереопределяемый.ПолучитьНормуПоАмортизационнойГруппе(ВыборкаПоОС.АмортизационнаяГруппа);
						
						Если НЕ (НормаАмортизации = Неопределено) Тогда
							
							СуммаАмортизации = (СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияНУНачальныйОстаток)
							* НормаАмортизации / 100
							* СпециальныйКоэффициент;
							
						КонецЕсли;
						
						Если ТаблицаПараметровРасчетаАмортизации <> Неопределено Тогда
							ПараметрыАмортизации.СтоимостьНУ = СтоимостьДляВычисления - ВыборкаПоОС.АмортизацияНУНачальныйОстаток;
							ПараметрыАмортизации.НормаАмортизацииНУ = НормаАмортизации;
						КонецЕсли;
						
					КонецЕсли;
					
					ВсегоОсталосьСписать = ВыборкаПоОС.СтоимостьНУНачальныйОстаток - ВыборкаПоОС.АмортизацияНУНачальныйОстаток;
					СписатьОстатокНУ = (ВсегоОсталосьСписать < СуммаАмортизации);
					СуммаАмортизацииНУ = Окр(Мин(ВсегоОсталосьСписать, СуммаАмортизации), 2);
					
					Если СуммаАмортизацииНУ > 0 Тогда
						СуммаАмортизационнойПремии = ВыборкаПоОС.СуммаАмортизационнойПремии;
					КонецЕсли;
					
				КонецЕсли;
				
			КонецЕсли;
			
		КонецЕсли;
		
		СпособОтражения = Неопределено;
		Если ВыборкаПоОС.СпособОтраженияРасходовЗаданДокументом Тогда
			СпособОтражения = СоответствиеСпособовОтражения.Получить(ВыборкаПоОС.СпособОтраженияРасходов);
		КонецЕсли;
		
		НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(
			ВыборкаПоОС,
			СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаАмортизацииПР,
			СписатьОстатокБУ, СписатьОстатокНУ, СписатьОстатокПР);
		ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоОС, НовыеСтроки, СпособОтражения);
		
		Если СуммаАмортизационнойПремии <> 0 Тогда
			Если Не ВыборкаПоОС.СпособОтраженияРасходовАмортизационнойПремииЗаданДокументом Тогда
				СпособОтражения = Неопределено;
			КонецЕсли;
			НовыеСтроки = ПодготовитьСтрокиВТаблицуАмортизации(
				ВыборкаПоОС,
				0, СуммаАмортизационнойПремии, 0,,,,
				Истина);
			ДобавитьСтрокиВТаблицуАмортизации(ТаблицаАмортизации, ВыборкаПоОС, НовыеСтроки, СпособОтражения);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат ТаблицаАмортизации;
	
КонецФункции

Функция ПодготовитьСтрокиВТаблицуАмортизации(
		ВыборкаДанных,
		СуммаАмортизацииБУ, СуммаАмортизацииНУ, СуммаАмортизацииПР,
		СписатьОстатокБУ=Ложь, СписатьОстатокНУ=Ложь, СписатьОстатокПР=Ложь,
		ЭтоАмортизационнаяПремия = Ложь)
	
	ПоляСтроки = "ОбъектУчета, СуммаБУ, СуммаНУ, СуммаПР, СуммаВР, Коэффициент, ЭтоЦелевыеСредства, ЭтоАмортизационнаяПремия, ДокументАмортизационнойПремии, НачислятьИзнос";
	СтрокаАмортизации = Новый Структура(ПоляСтроки);
	СтрокаАмортизацииЦФ = Новый Структура(ПоляСтроки);
	
	МассивРезультат = Новый Массив;
	
	Если СуммаАмортизацииБУ > 0
		ИЛИ СуммаАмортизацииНУ > 0
		ИЛИ СуммаАмортизацииПР <> 0 Тогда
		
		МассивРезультат.Добавить(СтрокаАмортизации);
		
		ЗаполнитьЗначенияСвойств(СтрокаАмортизации, ВыборкаДанных);
		
		СтрокаАмортизации.ОбъектУчета = ВыборкаДанных.ОсновноеСредство;
		СтрокаАмортизации.ЭтоАмортизационнаяПремия = ЭтоАмортизационнаяПремия;
		
		СтрокаАмортизации.СуммаБУ = СуммаАмортизацииБУ;
		СтрокаАмортизации.СуммаНУ = СуммаАмортизацииНУ;
		СтрокаАмортизации.СуммаПР = СуммаАмортизацииПР;
		СтрокаАмортизации.СуммаВР = СтрокаАмортизации.СуммаБУ - СтрокаАмортизации.СуммаНУ - СтрокаАмортизации.СуммаПР;
		
		Если ВыборкаДанных.СтоимостьНачальныйОстаток <= ВыборкаДанных.АмортизацияНачальныйОстаток Тогда
			СтрокаАмортизации.Коэффициент = 0;
		Иначе
			СтрокаАмортизации.Коэффициент = СуммаАмортизацииБУ / (ВыборкаДанных.СтоимостьНачальныйОстаток - ВыборкаДанных.АмортизацияНачальныйОстаток);
		КонецЕсли;
		
		СтрокаАмортизации.ЭтоЦелевыеСредства = Ложь;
		Если ВыборкаДанных.ПорядокПогашенияСтоимости = Перечисления.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ Тогда
			СтрокаАмортизации.НачислятьИзнос = Истина;
		ИначеЕсли ВыборкаДанных.ПрименениеЦелевогоФинансирования Тогда
			
			Если ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ = 0
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ = 0
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР = 0 Тогда
				
				// Остались только собственные средства к амортизации
				СтрокаАмортизации.ЭтоЦелевыеСредства = Ложь;
				
			ИначеЕсли ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ = 1
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ = 1
				И ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР = 1 Тогда
				
				// Остались только целевые средства к амортизации
				СтрокаАмортизации.ЭтоЦелевыеСредства = Истина;
				
			Иначе
				
				МассивРезультат.Добавить(СтрокаАмортизацииЦФ);
				
				ЗаполнитьЗначенияСвойств(СтрокаАмортизацииЦФ, СтрокаАмортизации);
				СтрокаАмортизацииЦФ.ЭтоЦелевыеСредства = Истина;
				СтрокаАмортизацииЦФ.ЭтоАмортизационнаяПремия = ЭтоАмортизационнаяПремия;
				
				СтрокаАмортизацииЦФ.СуммаБУ = ?(СписатьОстатокБУ, ВыборкаДанных.ОстаточнаяСтоимостьБУЦФ, СтрокаАмортизации.СуммаБУ * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ);
				СтрокаАмортизацииЦФ.СуммаНУ = ?(СписатьОстатокНУ, ВыборкаДанных.ОстаточнаяСтоимостьНУЦФ, СтрокаАмортизации.СуммаНУ * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымНУ);
				СтрокаАмортизацииЦФ.СуммаПР = ?(СписатьОстатокПР, ВыборкаДанных.ОстаточнаяСтоимостьПРЦФ, СтрокаАмортизации.СуммаПР * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымПР);
				СтрокаАмортизацииЦФ.СуммаВР = СтрокаАмортизацииЦФ.СуммаБУ - СтрокаАмортизацииЦФ.СуммаНУ - СтрокаАмортизацииЦФ.СуммаПР;
				СтрокаАмортизацииЦФ.Коэффициент = ?(СписатьОстатокБУ, 1, СтрокаАмортизации.Коэффициент * ВыборкаДанных.ПропорцияЦелевыхСредствКСобственнымБУ);
				
				СтрокаАмортизации.СуммаБУ = ?(СписатьОстатокБУ, ВыборкаДанных.ОстаточнаяСтоимостьБУ, СтрокаАмортизации.СуммаБУ - СтрокаАмортизацииЦФ.СуммаБУ);
				СтрокаАмортизации.СуммаНУ = ?(СписатьОстатокНУ, ВыборкаДанных.ОстаточнаяСтоимостьНУ, СтрокаАмортизации.СуммаНУ - СтрокаАмортизацииЦФ.СуммаНУ);
				СтрокаАмортизации.СуммаПР = ?(СписатьОстатокПР, ВыборкаДанных.ОстаточнаяСтоимостьПР, СтрокаАмортизации.СуммаПР - СтрокаАмортизацииЦФ.СуммаПР);
				СтрокаАмортизации.СуммаВР = СтрокаАмортизации.СуммаБУ - СтрокаАмортизации.СуммаНУ - СтрокаАмортизации.СуммаПР;
				СтрокаАмортизации.Коэффициент = СтрокаАмортизации.Коэффициент - СтрокаАмортизацииЦФ.Коэффициент;
				
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат МассивРезультат;
	
КонецФункции

Процедура ДобавитьСтрокиВТаблицуАмортизации(Таблица, ВыборкаДанных, НовыеСтроки, ТаблицаРаспределения)
	
	Для Каждого Строка Из НовыеСтроки Цикл
		
		Если (Строка.СуммаБУ = 0 И Строка.СуммаНУ=0 И Строка.СуммаПР=0 И Строка.СуммаВР=0) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ТаблицаРаспределения = Неопределено Тогда
			СтрокаТаблицыЗатрат = Таблица.Добавить();
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
			ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
			
			Если Строка.ЭтоАмортизационнаяПремия Тогда
				СтрокаТаблицыЗатрат.СтатьяРасходов = ВыборкаДанных.СтатьяРасходовАмортизационнойПремии;
				СтрокаТаблицыЗатрат.АналитикаРасходов = ВыборкаДанных.АналитикаРасходовАмортизационнойПремии;
			КонецЕсли;
		Иначе
			МассивКоэффициентов = ТаблицаРаспределения.ВыгрузитьКолонку("Коэффициент");
			СуммыБУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаБУ, МассивКоэффициентов);
			СуммыНУ = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаНУ, МассивКоэффициентов);
			СуммыПР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаПР, МассивКоэффициентов);
			СуммыВР = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.СуммаВР, МассивКоэффициентов);
			Коэффициенты = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(Строка.Коэффициент, МассивКоэффициентов, 36);
			
			Если СуммыБУ = Неопределено И СуммыНУ = Неопределено И СуммыПР = Неопределено И СуммыВР = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Для Индекс=0 По ТаблицаРаспределения.Количество()-1 Цикл
				ПравилоОтражения = ТаблицаРаспределения[Индекс];
				СтрокаТаблицыЗатрат = Таблица.Добавить();
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ВыборкаДанных);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, Строка);
				ЗаполнитьЗначенияСвойств(СтрокаТаблицыЗатрат, ПравилоОтражения);
				Если Строка.ЭтоАмортизационнаяПремия Тогда
					СтрокаТаблицыЗатрат.СтатьяРасходов = ПравилоОтражения.СтатьяРасходовАмортизационнойПремии;
					СтрокаТаблицыЗатрат.АналитикаРасходов = ПравилоОтражения.АналитикаРасходовАмортизационнойПремии;
				КонецЕсли;
				СтрокаТаблицыЗатрат.СуммаБУ = ?(СуммыБУ=Неопределено, 0, СуммыБУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаНУ = ?(СуммыНУ=Неопределено, 0, СуммыНУ[Индекс]);
				СтрокаТаблицыЗатрат.СуммаПР = ?(СуммыПР=Неопределено, 0, СуммыПР[Индекс]);
				СтрокаТаблицыЗатрат.СуммаВР = ?(СуммыВР=Неопределено, 0, СуммыВР[Индекс]);
				СтрокаТаблицыЗатрат.Коэффициент = ?(Коэффициенты=Неопределено, 0, Коэффициенты[Индекс]);
				
			КонецЦикла;
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьПараметрыАмортизацияОС(ТаблицаОС, ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "НомерСтроки,"      // <Число, 5, 0>
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"      // <Дата>
	+ "ДатаРасчета," // <Дата>
	+ "Организация," // <СправочникСсылка.Организации>
	+ "Регистратор," // <ДокументСсылка.*>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСВсе()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация КАК Организация,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.Период) КАК Период
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковВнеоборотныхАктивов КАК ДокВводОстатков
	|		ПО ДокВводОстатков.Ссылка = ПорядокУчетаОСБУ.Регистратор
	|ГДЕ
	|	(ПорядокУчетаОСБУ.Период < &ПериодСостояния
	|			И НЕ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|		ИЛИ ПорядокУчетаОСБУ.Регистратор ССЫЛКА Документ.ВводОстатковВнеоборотныхАктивов
	|			И КОНЕЦПЕРИОДА(ДокВводОстатков.Дата, МЕСЯЦ) < &ПериодСостояния)
	|	И ПорядокУчетаОСБУ.Организация = &Организация
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ДатыПоследнихСостояний.Организация = ПорядокУчетаОСБУ.Организация
	|			И ДатыПоследнихСостояний.Период = ПорядокУчетаОСБУ.Период
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНеСнятыеСУчетаОСПоТаблице()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.Период КАК ДатаСостояния,
	|	ПорядокУчетаОСБУ.СостояниеБУ 
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|ГДЕ
	|	ПорядокУчетаОСБУ.Организация = &Организация
	|	И ПорядокУчетаОСБУ.Период < &Период
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МАКСИМУМ(ПорядокУчетаОСБУ.ДатаСостояния) КАК ДатаСостояния
	|ПОМЕСТИТЬ ДатыПоследнихСостояний
	|ИЗ
	|	ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокУчетаОСБУ.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	ДатаСостояния
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ НеСнятыеСУчета
	|ИЗ
	|	ДатыПоследнихСостояний КАК ДатыПоследнихСостояний
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО ДатыПоследнихСостояний.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|			И ДатыПоследнихСостояний.ДатаСостояния = ПорядокУчетаОСБУ.ДатаСостояния
	|ГДЕ
	|	ПорядокУчетаОСБУ.СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ПорядокУчетаОСБУ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ДатыПоследнихСостояний";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСНачислениеАмортизации()

	ТекстЗапрос =
	"ВЫБРАТЬ
	|	НачислениеАмортизацииБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииБУ.НачислятьАмортизациюБУ КАК НачислятьАмортизациюБУ
	|ПОМЕСТИТЬ НачислениеАмортизацииБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииБУ
	|ГДЕ
	|	НачислениеАмортизацииБУ.НачислятьАмортизациюБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НачислениеАмортизацииНУ.ОсновноеСредство КАК ОсновноеСредство,
	|	НачислениеАмортизацииНУ.НачислятьАмортизациюНУ КАК НачислятьАмортизациюНУ
	|ПОМЕСТИТЬ НачислениеАмортизацииНУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						НеСнятыеСУчета.ОсновноеСредство
	|					ИЗ
	|						НеСнятыеСУчета)) КАК НачислениеАмортизацииНУ
	|ГДЕ
	|	НачислениеАмортизацииНУ.НачислятьАмортизациюНУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапрос;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПервоначальныеСведения()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК СпособНачисленияАмортизации,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимость,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокВключенияСтоимостиВСоставРасходов,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету
	|ПОМЕСТИТЬ ПервоначальныеСведенияОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПорядокУчета()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОС.ГруппаФинансовогоУчета КАК ГруппаФинансовогоУчета,
	|	ПорядокУчетаОС.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПорядокУчетаОС.ПоказательНаработки КАК ПоказательНаработки,
	|	ПорядокУчетаОС.ОбъемНаработки КАК ОбъемНаработки,
	|	ПорядокУчетаОС.СчетУчета КАК СчетУчета,
	|	ПорядокУчетаОС.СчетНачисленияАмортизации КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ ПорядокУчетаОС
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоПериода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыАмортизации()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ АмПоНаработкеОС
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(&КонецПериода, Организация = &Организация) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ В (
	|				ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции),
	|				ЗНАЧЕНИЕ(Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмПоНаработкеОС.ОсновноеСредство,
	|	ПорядокУчетаОС.ПоказательНаработки,
	|	ВЫБОР
	|		КОГДА ПорядокУчетаОСБУ.ОсновноеСредство ЕСТЬ NULL 
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ПринятоКУчетуВПрошломМесяце
	|ПОМЕСТИТЬ АмортизируемыеПоНаработкеОС
	|ИЗ
	|	АмПоНаработкеОС КАК АмПоНаработкеОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&КонецПериода,
	|				Организация = &Организация	
	|					И СостояниеБУ = ЗНАЧЕНИЕ(Перечисление.СостоянияОС.ПринятоКУчету)
	|					И Период < НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ)
	|					И Период >= ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), МЕСЯЦ, -1)
	|					И ОсновноеСредство В
	|						(ВЫБРАТЬ
	|							АмПоНаработкеОС.ОсновноеСредство
	|						ИЗ
	|							АмПоНаработкеОС КАК АмПоНаработкеОС)) КАК ПорядокУчетаОСБУ
	|		ПО АмПоНаработкеОС.ОсновноеСредство = ПорядокУчетаОСБУ.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ПО АмПоНаработкеОС.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации) КАК ОсновноеСредство,
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки) КАК ПоказательНаработки,
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0) КАК ОбъемВыработки
	|ПОМЕСТИТЬ ВыработкаОС
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			&НачалоПериодаДата,
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|				ГДЕ
	|					НЕ АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|					ГДЕ
	|						НЕ АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НаработкиПериодНачало.ОбъектЭксплуатации, НаработкиПериодОкончание.ОбъектЭксплуатации),
	|	ЕСТЬNULL(НаработкиПериодНачало.ПоказательНаработки, НаработкиПериодОкончание.ПоказательНаработки),
	|	ЕСТЬNULL(НаработкиПериодОкончание.Значение, 0) - ЕСТЬNULL(НаработкиПериодНачало.Значение, 0)
	|ИЗ
	|	РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|			ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ), МЕСЯЦ, -1),
	|			(ОбъектЭксплуатации, ПоказательНаработки) В
	|				(ВЫБРАТЬ
	|					АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|					АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|				ИЗ
	|					АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|				ГДЕ
	|					АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодНачало
	|		ПОЛНОЕ СОЕДИНЕНИЕ РегистрСведений.НаработкиОбъектовЭксплуатации.СрезПоследних(
	|				&КонецПериода,
	|				(ОбъектЭксплуатации, ПоказательНаработки) В
	|					(ВЫБРАТЬ
	|						АмортизируемыеПоНаработкеОС.ОсновноеСредство,
	|						АмортизируемыеПоНаработкеОС.ПоказательНаработки
	|					ИЗ
	|						АмортизируемыеПоНаработкеОС КАК АмортизируемыеПоНаработкеОС
	|					ГДЕ
	|						АмортизируемыеПоНаработкеОС.ПринятоКУчетуВПрошломМесяце)) КАК НаработкиПериодОкончание
	|		ПО НаработкиПериодНачало.ОбъектЭксплуатации = НаработкиПериодОкончание.ОбъектЭксплуатации
	|			И НаработкиПериодНачало.ПоказательНаработки = НаработкиПериодОкончание.ПоказательНаработки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыАмортизацииОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыАмортизацииОСБУ.СрокИспользованияДляВычисленияАмортизации КАК СрокИспользованияДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.СтоимостьДляВычисленияАмортизации КАК СтоимостьДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ОбъемПродукцииРаботДляВычисленияАмортизации КАК ОбъемПродукцииРаботДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.КоэффициентАмортизацииБУ КАК КоэффициентАмортизации,
	|	ПараметрыАмортизацииОСБУ.КоэффициентУскорения КАК КоэффициентУскорения,
	|	ВЫБОР КОГДА ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент = 0
	|		ТОГДА 1
	|		ИНАЧЕ ПараметрыАмортизацииОСБУ.СпециальныйКоэффициент 
	|	КОНЕЦ КАК СпециальныйКоэффициент,
	|	ПараметрыАмортизацииОСБУ.СрокПолезногоИспользованияНУ КАК СрокПолезногоИспользованияНУ,
	|	ПараметрыАмортизацииОСБУ.ПРДляВычисленияАмортизации КАК ПРДляВычисленияАмортизации,
	|	ПараметрыАмортизацииОСБУ.ГрафикАмортизации КАК ГрафикАмортизации,
	|	ПараметрыАмортизацииОСБУ.Период КАК Период
	|ПОМЕСТИТЬ ПараметрыАмортизацииОСБУ
	|ИЗ
	|	РегистрСведений.ПараметрыАмортизацииОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПараметрыАмортизацииОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПараметрыОтраженияВУчете()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ ОСПоКоторымНачисляетсяИзнос
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|	И ПервоначальныеСведенияОС.ПорядокУчетаБУ В (
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзноса),
	|		ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа КАК АмортизационнаяГруппа,
	|	ПорядокУчетаОСБУ.СтатьяРасходовБУ КАК СтатьяРасходов,
	|	ПорядокУчетаОСБУ.АналитикаРасходовБУ КАК АналитикаРасходов,
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ КАК СпособОтраженияРасходов,
	|
	|	НЕ ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ В (
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС.ПустаяСсылка),
	|			ЗНАЧЕНИЕ(Документ.ИзменениеПараметровОС2_4.ПустаяСсылка),
	|			НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовЗаданДокументом,
	|
	|	ЕСТЬNULL(ИзменениеПараметровАмортизацииОС.ДокументОснование, НЕОПРЕДЕЛЕНО) КАК СпособОтраженияРасходовДокументОснование,
	|	ПорядокУчетаОСБУ.ПередаватьРасходыВДругуюОрганизацию,
	|	ПорядокУчетаОСБУ.ОрганизацияПолучательРасходов,
	|	ПорядокУчетаОСБУ.СчетПередачиРасходов
	|ПОМЕСТИТЬ ПорядокУчетаОСБУ
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОСБУ
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровАмортизацииОС
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходовБУ = ИзменениеПараметровАмортизацииОС.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОС.СчетУчета) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств)
	|		ИНАЧЕ ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОС.СчетНачисленияАмортизации)
	|	КОНЕЦ КАК СчетНачисленияАмортизации,
	|	ЕСТЬNULL(СчетУчетаСтоимостиЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаЦФ,
	|	ЕСТЬNULL(СчетУчетаАмортизацииЦФ.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)) КАК СчетУчетаАмортизацииЦФ
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОС
	|ИЗ
	|	ПорядокУчетаОС КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОСПоКоторымНачисляетсяИзнос КАК ОСПоКоторымНачисляетсяИзнос
	|		ПО ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимостиЦФ
	|		ПО СчетУчетаСтоимостиЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА_ЦФ)
	|			И СчетУчетаСтоимостиЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимостиЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимостиЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизацииЦФ
	|		ПО СчетУчетаАмортизацииЦФ.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА_ЦФ)
	|			И СчетУчетаАмортизацииЦФ.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизацииЦФ.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизацииЦФ.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПорядокУчетаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(СчетУчетаСтоимости.СчетУчета, ПорядокУчетаОС.СчетУчета) КАК СчетУчета,
	|	ВЫБОР
	|		КОГДА НЕ ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство ЕСТЬ NULL
	|			ТОГДА ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ИзносОсновныхСредств)
	|		ИНАЧЕ ЕСТЬNULL(СчетУчетаАмортизации.СчетУчета, ПорядокУчетаОС.СчетНачисленияАмортизации)
	|	КОНЕЦ КАК СчетНачисленияАмортизации
	|ПОМЕСТИТЬ СчетаБухгалтерскогоУчетаОСНачалоГода
	|ИЗ
	|	РегистрСведений.ПорядокУчетаОС.СрезПоследних(
	|			&НачалоГода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ПорядокУчетаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ ОСПоКоторымНачисляетсяИзнос КАК ОСПоКоторымНачисляетсяИзнос
	|		ПО ОСПоКоторымНачисляетсяИзнос.ОсновноеСредство = ПорядокУчетаОС.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаСтоимости
	|		ПО СчетУчетаСтоимости.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.СтоимостьВНА)
	|			И СчетУчетаСтоимости.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаСтоимости.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаСтоимости.МестоУчета = НЕОПРЕДЕЛЕНО
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК СчетУчетаАмортизации
	|		ПО СчетУчетаАмортизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.АмортизацияВНА)
	|			И СчетУчетаАмортизации.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|			И СчетУчетаАмортизации.АналитикаУчета = ПорядокУчетаОС.ГруппаФинансовогоУчета
	|			И СчетУчетаАмортизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансирования
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&НачалоПериода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОС.ОсновноеСредство
	|				ИЗ
	|					СписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПараметрыЦелевогоФинансированияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПараметрыЦелевогоФинансированияОС.СчетУчета КАК СчетУчета,
	|	ПараметрыЦелевогоФинансированияОС.СчетАмортизации КАК СчетАмортизации,
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов
	|ПОМЕСТИТЬ ПараметрыЦелевогоФинансированияНачалоГода
	|ИЗ
	|	РегистрСведений.ПараметрыЦелевогоФинансированияОС.СрезПоследних(
	|			&НачалоГода,
	|			ОсновноеСредство В
	|				(ВЫБРАТЬ
	|					СписокОС.ОсновноеСредство
	|				ИЗ
	|					СписокОС КАК СписокОС)) КАК ПараметрыЦелевогоФинансированияОС
	|ГДЕ
	|	ПараметрыЦелевогоФинансированияОС.ПрименениеЦелевогоФинансирования
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансирования.СчетУчета
	|ИЗ
	|	ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчетаЦФ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетУчета КАК Счет
	|ПОМЕСТИТЬ СчетаУчетаБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансированияНачалоГода.СчетУчета
	|ИЗ
	|	ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансирования.СчетАмортизации
	|ИЗ
	|	ПараметрыЦелевогоФинансирования КАК ПараметрыЦелевогоФинансирования
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОС.СчетУчетаАмортизацииЦФ
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОС КАК СчетаБухгалтерскогоУчетаОС
	|ГДЕ
	|	&ИспользуетсяУправлениеВНА_2_4
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода.СчетНачисленияАмортизации КАК Счет
	|ПОМЕСТИТЬ СчетаНачисленияАмортизацииБУНачалоГода
	|ИЗ
	|	СчетаБухгалтерскогоУчетаОСНачалоГода КАК СчетаБухгалтерскогоУчетаОСНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ПараметрыЦелевогоФинансированияНачалоГода.СчетАмортизации
	|ИЗ
	|	ПараметрыЦелевогоФинансированияНачалоГода КАК ПараметрыЦелевогоФинансированияНачалоГода
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУ.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаКонецПериода
	|ИЗ
	|	СчетаУчетаБУ КАК СчетаУчетаБУ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУ.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СчетаУчетаБУНачалоГода.Счет КАК Счет
	|ПОМЕСТИТЬ СчетаНачалоГода
	|ИЗ
	|	СчетаУчетаБУНачалоГода КАК СчетаУчетаБУНачалоГода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	СчетаНачисленияАмортизацииБУНачалоГода.Счет
	|ИЗ
	|	СчетаНачисленияАмортизацииБУНачалоГода КАК СчетаНачисленияАмортизацииБУНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСПрочиеПараметры()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МестонахождениеОСБУ.ОсновноеСредство КАК ОсновноеСредство,
	|	МестонахождениеОСБУ.Местонахождение КАК Подразделение
	|ПОМЕСТИТЬ МестонахождениеОСБУ
	|ИЗ
	|	РегистрСведений.МестонахождениеОС.СрезПоследних(
	|			&НачалоПериода,
	|			Организация = &Организация
	|				И ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК МестонахождениеОСБУ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|
	|;
	|
	|ВЫБРАТЬ
	|	АрендованныеОС.ОсновноеСредство КАК ОсновноеСредство,
	|	АрендованныеОС.Контрагент КАК Контрагент,
	|	АрендованныеОС.Договор КАК Договор
	|ПОМЕСТИТЬ АрендованныеОС
	|ИЗ
	|	РегистрСведений.АрендованныеОС.СрезПоследних(
	|			&НачалоПериода,
	|			ОсновноеСредство В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК АрендованныеОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСАмортизацияПоДокументу()

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	Хозрасчетный.НомерСтроки КАК НомерСтроки,
	|	Хозрасчетный.Сумма,
	|	Хозрасчетный.СуммаНУКт,
	|	Хозрасчетный.Регистратор КАК Регистратор
	|ПОМЕСТИТЬ Проводки
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный КАК Хозрасчетный
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ
	|		ПО Хозрасчетный.СчетКт = СчетаНачисленияАмортизацииБУ.Счет
	|ГДЕ
	|	Хозрасчетный.Регистратор = &Регистратор
	|	И Хозрасчетный.Период МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Хозрасчетный.Организация = &Организация
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ХозрасчетныйСубконто.Значение КАК ОсновноеСредство,
	|	СУММА(Проводки.Сумма) КАК АмортизацияОборот,
	|	СУММА(Проводки.СуммаНУКт) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСДокумента
	|ИЗ
	|	Проводки КАК Проводки
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Субконто КАК ХозрасчетныйСубконто
	|		ПО Проводки.Регистратор = ХозрасчетныйСубконто.Регистратор
	|			И Проводки.НомерСтроки = ХозрасчетныйСубконто.НомерСтроки
	|			И (ХозрасчетныйСубконто.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияБухгалтерии.Кредит))
	|			И (ХозрасчетныйСубконто.Вид = ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства))
	|
	|СГРУППИРОВАТЬ ПО
	|	ХозрасчетныйСубконто.Значение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса ;

КонецФункции

Функция ПолучитьТекстЗапросаАмортизацияОСДанныеПроводок()
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНачалоПериода.Субконто2 КАК ДокументАмортизационнойПремии,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт КАК СуммаАмортизационнойПремии
	|ПОМЕСТИТЬ ОстаткиАмортизационнойПремии
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет = ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасходыНаКапитальныеВложения),
	|			&ВидыСубконтоКВ,
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНачалоПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНачалоПериода.Счет КАК Счет,
	|	ОстаткиНачалоПериода.СуммаОстатокДт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокДт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокДт,
	|	ОстаткиНачалоПериода.СуммаОстатокКт,
	|	ОстаткиНачалоПериода.СуммаНУОстатокКт,
	|	ОстаткиНачалоПериода.СуммаПРОстатокКт
	|ПОМЕСТИТЬ ОстаткиНачалоПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоПериода.Счет
	|				ИЗ
	|					СчетаНачалоПериода КАК СчетаНачалоПериода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНачалоПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиКонецПериода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиКонецПериода.Счет КАК Счет,
	|	ОстаткиКонецПериода.СуммаОстатокДт,
	|	ОстаткиКонецПериода.СуммаНУОстатокДт,
	|	ОстаткиКонецПериода.СуммаПРОстатокДт,
	|	ОстаткиКонецПериода.СуммаОстатокКт,
	|	ОстаткиКонецПериода.СуммаНУОстатокКт,
	|	ОстаткиКонецПериода.СуммаПРОстатокКт
	|ПОМЕСТИТЬ ОстаткиКонецПериода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&КонецПериода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаКонецПериода.Счет
	|				ИЗ
	|					СчетаКонецПериода КАК СчетаКонецПериода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиКонецПериода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОстаткиНаНачалоГода.Субконто1 КАК ОсновноеСредство,
	|	ОстаткиНаНачалоГода.Счет КАК Счет,
	|	ОстаткиНаНачалоГода.СуммаОстатокДт,
	|	ОстаткиНаНачалоГода.СуммаОстатокКт
	|ПОМЕСТИТЬ ОстаткиНаНачалоГода
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоГода,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачалоГода.Счет
	|				ИЗ
	|					СчетаНачалоГода КАК СчетаНачалоГода),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС)) КАК ОстаткиНаНачалоГода
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОСПриПереходеКЛинейномуМетоду.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОСПриПереходеКЛинейномуМетоду.СуммаНУОстатокКт КАК АмортизацияНачальныйОстаток
	|ПОМЕСТИТЬ АмортизацияОСПриПереходеКЛинейномуМетоду
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&ДатаПереходаКЛинейномуМетоду,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачисленияАмортизацииБУ.Счет
	|				ИЗ
	|					СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС
	|					ГДЕ
	|						СписокОС.ТолькоЛинейный = ЛОЖЬ)) КАК АмортизацияОСПриПереходеКЛинейномуМетоду
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АмортизацияОСОбороты.Субконто1 КАК ОсновноеСредство,
	|	АмортизацияОСОбороты.СуммаОборотКт КАК АмортизацияОборот,
	|	АмортизацияОСОбороты.СуммаНУОборотКт КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСЗаПериод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			,
	|			Счет В
	|				(ВЫБРАТЬ
	|					СчетаНачисленияАмортизацииБУ.Счет
	|				ИЗ
	|					СчетаНачисленияАмортизацииБУ КАК СчетаНачисленияАмортизацииБУ),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация = &Организация
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СписокОС.ОсновноеСредство
	|					ИЗ
	|						СписокОС КАК СписокОС),
	|			,
	|			) КАК АмортизацияОСОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗаПериод.ОсновноеСредство КАК ОсновноеСредство,
	|	ЗаПериод.АмортизацияОборот - ЕСТЬNULL(ПоДокументу.АмортизацияОборот, 0) КАК АмортизацияОборот,
	|	ЗаПериод.АмортизацияНУОборот - ЕСТЬNULL(ПоДокументу.АмортизацияНУОборот, 0) КАК АмортизацияНУОборот
	|ПОМЕСТИТЬ АмортизацияОСОбороты
	|ИЗ
	|	АмортизацияОСЗаПериод КАК ЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОСДокумента КАК ПоДокументу
	|		ПО ЗаПериод.ОсновноеСредство = ПоДокументу.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство";

	Возврат ТекстЗапроса;

КонецФункции

Функция ПолучитьТекстЗапросаСпособовОтраженияРасходов()
	
	Возврат
	"ВЫБРАТЬ
	|	ИзменениеПараметровОС.Ссылка КАК СпособОтраженияРасходов,
	|	ИзменениеПараметровОС.ОтражениеАмортизационныхРасходов.(
	|		НомерСтроки,
	|		Подразделение КАК Подразделение,
	|		НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		СтатьяРасходов,
	|		АналитикаРасходов,
	|		СтатьяРасходовАмортизационнойПремии,
	|		АналитикаРасходовАмортизационнойПремии,
	|		Коэффициент,
	|		ПередаватьРасходыВДругуюОрганизацию,
	|		ОрганизацияПолучательРасходов,
	|		СчетПередачиРасходов
	|	)
	|ИЗ
	|	ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС КАК ИзменениеПараметровОС
	|		ПО ПорядокУчетаОСБУ.СпособОтраженияРасходов = ИзменениеПараметровОС.Ссылка
	|ГДЕ
	|	ПорядокУчетаОСБУ.СпособОтраженияРасходовЗаданДокументом";
	
КонецФункции

Функция ПолучитьТекстЗапросаНачисленнаяАмортизацияЗаПериод()
	
	Возврат
	"ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАктивыВДокументахЗаПериод
	|ИЗ
	|	Документ.АмортизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.АмортизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ВозвратОСИзАренды КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ВозвратОСИзАренды.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ИзменениеПараметровОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеПараметровОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.МодернизацияОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.МодернизацияОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПередачаОСВАренду КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПеремещениеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПеремещениеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПодготовкаКПередачеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПодготовкаКПередачеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.СписаниеОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТабличнаяЧасть.ОбъектУчета
	|ИЗ
	|	Документ.ПереоценкаОС КАК Документ
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПереоценкаОС.НачисленнаяАмортизация КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Дата МЕЖДУ &НачалоПериодаДата И &КонецПериода
	|	И Документ.Проведен
	|	И НЕ Документ.ПометкаУдаления
	|	И Документ.Ссылка <> &Регистратор
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйДвиженияССубконто.СубконтоКт1
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ДвиженияССубконто(
	|			&НачалоПериодаДата,
	|			&КонецПериода,
	|			Регистратор <> &Регистратор
	|				И Регистратор ССЫЛКА Документ.АмортизацияОС
	|				И СчетКт В
	|					(ВЫБРАТЬ
	|						Т.СчетНачисленияАмортизации
	|					ИЗ
	|						ПорядокУчетаОС КАК Т),
	|			,
	|			) КАК ХозрасчетныйДвиженияССубконто
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	втАктивыВДокументахЗаПериод.ОсновноеСредство КАК ОсновноеСредство
	|ПОМЕСТИТЬ втАмортизированныеАктивы
	|ИЗ
	|	втАктивыВДокументахЗаПериод КАК втАктивыВДокументахЗаПериод
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втАктивыВДокументахЗаПериод";
	
КонецФункции

Функция ГрафикиАмортизацииОС(Графики)

	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("Графики", Графики);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГодовыеГрафикиАмортизацииОС.Ссылка КАК График,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент2,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент3,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент4,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент5,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент6,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент7,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент8,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент9,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент10,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент11,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент12,
	|	ГодовыеГрафикиАмортизацииОС.Коэффициент1 + ГодовыеГрафикиАмортизацииОС.Коэффициент2 + ГодовыеГрафикиАмортизацииОС.Коэффициент3 + ГодовыеГрафикиАмортизацииОС.Коэффициент4 + ГодовыеГрафикиАмортизацииОС.Коэффициент5 + ГодовыеГрафикиАмортизацииОС.Коэффициент6 + ГодовыеГрафикиАмортизацииОС.Коэффициент7 + ГодовыеГрафикиАмортизацииОС.Коэффициент8 + ГодовыеГрафикиАмортизацииОС.Коэффициент9 + ГодовыеГрафикиАмортизацииОС.Коэффициент10 + ГодовыеГрафикиАмортизацииОС.Коэффициент11 + ГодовыеГрафикиАмортизацииОС.Коэффициент12 КАК СуммаКоэффициентов
	|ИЗ
	|	Справочник.ГодовыеГрафикиАмортизацииОС КАК ГодовыеГрафикиАмортизацииОС";
	ТаблицаГрафиков = Запрос.Выполнить().Выгрузить();
	ТаблицаГрафиков.Индексы.Добавить("График");

	Возврат ТаблицаГрафиков;

КонецФункции

Функция ПолучитьКоэффициентАмортизацииИзГрафика(ТаблицаГрафиков, График, ДатаРасчета)
	
	СтрокаТаблицы = ТаблицаГрафиков.Найти(График, "График");
	Если СтрокаТаблицы = Неопределено Тогда
		Возврат 0;
	КонецЕсли;
	
	СуммаВсех = СтрокаТаблицы.СуммаКоэффициентов;
	
	КоэффициентАмортизации = 0;
	
	Если СуммаВсех = 0 Тогда
		КоэффициентАмортизации = 1;
	Иначе
		СуммаОдного = СтрокаТаблицы["Коэффициент" + Месяц(ДатаРасчета)];
		КоэффициентАмортизации = СуммаОдного / СуммаВсех;
	КонецЕсли;

	Возврат КоэффициентАмортизации;

КонецФункции // ПолучитьКоэффициентАмортизацииИзГрафика()

Процедура СообщитьОбОшибкеПриНачисленииАмортизации(Выборка, ТекстСообщения, РегОперация, Отказ, Ссылка = Неопределено)
	
	ШаблонСообщения = НСтр("ru = '%1 для основного средства %2 (%3), инвентарный номер %4.';
							|en = '%1 for fixed asset %2 (%3), inventory number %4.'");
	ТекстСообщенияОбОшибке = СтрШаблон(ШаблонСообщения, ТекстСообщения, Выборка.ОсновноеСредствоПредставление, Выборка.Код, Выборка.ИнвентарныйНомер);
	
	ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщенияОбОшибке, Ссылка,,, Отказ);
	
КонецПроцедуры

Функция ПодготовитьТаблицуТолькоЛинейныйМетодНУ(ТаблицаОС, Реквизиты, Отказ)
	
	Параметры = ПодготовитьПараметрыТолькоЛинейныйМетодНУ(ТаблицаОС);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	СпрОС.Ссылка КАК ОсновноеСредство,
	|	ВЫБОР 
	|		КОГДА ПорядокУчетаОСБУ.АмортизационнаяГруппа В (
	|						ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ВосьмаяГруппа), 
	|						ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДевятаяГруппа), 
	|						ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ДесятаяГруппа))
	|					И СпрОС.ГруппаОС В (
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Здания), 
	|						ЗНАЧЕНИЕ(Перечисление.ГруппыОС.Сооружения))
	|				ИЛИ ПорядокУчетаОСБУ.АмортизационнаяГруппа = ЗНАЧЕНИЕ(Перечисление.АмортизационныеГруппы.ОтдельнаяГруппа)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ТолькоЛинейный
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК СпрОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокУчетаОСБУ.СрезПоследних(
	|				&Период,
	|				ОсновноеСредство В (&СписокОС)) КАК ПорядокУчетаОСБУ
	|		ПО ПорядокУчетаОСБУ.ОсновноеСредство = СпрОС.Ссылка
	|
	|ГДЕ
	|	СпрОС.Ссылка В (&СписокОС)
	|";
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("СписокОС", Параметры.ТаблицаОС.ВыгрузитьКолонку("ОсновноеСредство"));
	Запрос.УстановитьПараметр("Период", Реквизиты[0].Период);
	ТаблицаПризнаков = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаПризнаков;
	
КонецФункции

Функция ПодготовитьПараметрыТолькоЛинейныйМетодНУ(ТаблицаОС)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.ТаблицаОС

	СписокОбязательныхКолонок = ""
	+ "ОсновноеСредство"; // <СправочникСсылка.ОбъектыЭксплуатации>

	Параметры.Вставить("ТаблицаОС",
		УправлениеВнеоборотнымиАктивамиПереопределяемый.ПараметрыПроведения(ТаблицаОС, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

// ПРОЧЕЕ

// Анализирует аналитику затрат по дебету проводки.
// Если статья затрат не принимаемая к НУ, то сумма НУ по дебету преобразуется в сумму ПР по дебету.
//
Процедура ОпределитьПостоянныеРазницыВРасходах(Проводка,ПоддержкаПБУ18) Экспорт
	
	Если НЕ ПоддержкаПБУ18 Тогда
		Возврат;
	КонецЕсли;
	
	СчетДт = Проводка.СчетДт;
	Если ЗначениеЗаполнено(СчетДт) И СчетДт.НалоговыйУчет Тогда
		ЭтоНепринимаемыеРасходы = НалоговыйУчет.ОпределитьНеПринимаемыеРасходы(Проводка);

		Если ЭтоНепринимаемыеРасходы Тогда

			Проводка.СуммаПРДт = Проводка.СуммаПРДт + Проводка.СуммаНУДт;
			Проводка.СуммаНУДт = 0;
		КонецЕсли;

	КонецЕсли;

КонецПроцедуры

// Получает документ и дату принятия к учету основного средства по бух учету.
//
// Параметры:
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура СведенияОПринятииКУчетуОС(ОсновноеСредство, Организация, ДокРегистратор, ДатаДокРегистратора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК Документ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(
	|		,
	|		Организация = &Организация
	|		И ОсновноеСредство = &ОС) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ <> ДАТАВРЕМЯ(1, 1, 1)";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);

	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;
	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';
	КонецЕсли;

КонецПроцедуры

// Получает документ и дату выбытия основного средства по бух учету.
//
// Параметры:
//
//
// Возвращаемое значение
//  Дата и документ - через указанные параметры процедуры.
//
Процедура СведенияОВыбытииОС(ОсновноеСредство, Организация, ДокРегистратор, ДатаДокРегистратора) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ КАК Документ,
	|	ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ.Дата КАК Дата
	|ИЗ
	|	РегистрСведений.ПервоначальныеСведенияОС.СрезПоследних(, Организация = &Организация И ОсновноеСредство = &ОС) КАК ПервоначальныеСведенияОС
	|ГДЕ
	|	НЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ.Дата ЕСТЬ NULL";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ОС", ОсновноеСредство);
	Запрос.УстановитьПараметр("Организация", Организация);

	ВыборкаДоков = Запрос.Выполнить().Выбрать();

	Если ВыборкаДоков.Следующий()  Тогда
		ДокРегистратор      = ВыборкаДоков.Документ;
		ДатаДокРегистратора = ВыборкаДоков.Дата;
	Иначе
		ДокРегистратор      = Неопределено;
		ДатаДокРегистратора = '00010101';
	КонецЕсли;

КонецПроцедуры

// Функция возвращает таблицу значений с инвентарными номерами ОС.
//
// Параметры:
//  ТаблицаОС   - Таблица значений со списком ОС, для которой нужно получить инвентарные номера.
//                Обязательные колонки: НомерСтроки, ОсновноеСредство
//  Организация - Организация, по которой требуется получить инвентарные номера.
//  Дата        - Дата, на которую требуется получить инвентарные номера.
//
// Возвращаемое значение:
//   ТаблицаЗначений - Таблица с инвентарными номерами. Колонки: НомерСтроки, ОсновноеСредство, ИнвентарныйНомер.
//
Функция ИнвентарныеНомераОС(Знач ТаблицаОС, Знач Организация, Знач Дата) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("ТаблицаОС", ТаблицаОС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Дата", Дата);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ТаблицаОС
	|ИЗ
	|	&ТаблицаОС КАК ТаблицаОС
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаОС.НомерСтроки КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ЕСТЬNULL(ОбъектыЭксплуатации.ИнвентарныйНомер, """") КАК ИнвентарныйНомер
	|ИЗ
	|	ТаблицаОС КАК ТаблицаОС
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО ТаблицаОС.ОсновноеСредство = ОбъектыЭксплуатации.Ссылка
	|
	|УПОРЯДОЧИТЬ ПО
	|	НомерСтроки";
	РезультатЗапроса = Запрос.Выполнить();
	
	Результат = РезультатЗапроса.Выгрузить();
	
	УстановитьПривилегированныйРежим(Ложь);
	
	Возврат Результат;
	
КонецФункции

//  Функция возвращает инвентарный номерам ОС.
//
// Параметры:
//  ОсновноеСредство - Объект основных средств, для которого требуется получить инвентарный номер.
//  Организация      - Организация, по которой требуется получить инвентарный номер.
//  Дата             - Дата, на которую требуется получить инвентарный номер.
//
// Возвращаемое значение:
//   Строка - Инвентарный номер переданного ОС.
//
Функция ПолучитьИнвентарныйНомерОС(Знач ОсновноеСредство, Знач Организация, Знач Дата) Экспорт
	
	Если НЕ ЗначениеЗаполнено(ОсновноеСредство) Тогда
		Возврат "";
	КонецЕсли; 
	
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновноеСредство, "ИнвентарныйНомер");
	
КонецФункции

//  Функция дозаполняет табличную часть основных средств документа основными средствами
// с наименованием совпадающим с заданным основным средством. В случае отсутствия основных
// средств с подходящим наименованием, выдает сообщение об ошибке.
//
// Параметры:
//  ПараметрыФормы   - Структура с параметрами заполнения, ключи структуры:
//  	Форма             - форма заполняемого документа
//  	Объект            - Значение основного реквизита формы - документа для заполнения
//  	ИмяТабличнойЧасти - Имя табличной части основных средств документа, значение по умолчанию "ОС"
//  	ПолучатьИнвентарныйНомерИзКода - Флаг необходимости получения основного средства из кода 
//  		справочника (в противном случае, по данным регистра сведений). Значение по умолчанию Ложь.
//  
//  ОсновноеСредство - Основное средство по наименованию которого требуется дозаполнить табличную часть.
//
// Возвращаемое значение:
//   Булево - Истина - в табличную часть добавлены строки с подходящими ОС, Ложь - подходящих ОС не найдено.
//
Функция ДозаполнитьТабличнуюЧастьОсновнымиСредствамиПоНаименованию(ПараметрыФормы, ОсновноеСредство) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	Форма = ПараметрыФормы.Форма;
	Объект = ПараметрыФормы.Объект;
	Если ПараметрыФормы.Свойство("ИмяТабличнойЧасти") Тогда
		ИмяТабличнойЧасти = ПараметрыФормы.ИмяТабличнойЧасти;
	Иначе
		ИмяТабличнойЧасти = "ОС";
	КонецЕсли;
	Если ПараметрыФормы.Свойство("ПолучатьИнвентарныйНомерИзКода") Тогда
		ПолучатьИнвентарныйНомерИзКода = ПараметрыФормы.ПолучатьИнвентарныйНомерИзКода;
	Иначе
		ПолучатьИнвентарныйНомерИзКода = Ложь;
	КонецЕсли;
	
	ОсновноеСредствоНаименование = Строка(ОсновноеСредство);
	
	СписокОС = Объект[ИмяТабличнойЧасти].Выгрузить(, "ОсновноеСредство");
	
	Запрос = Новый Запрос();
	
	Запрос.УстановитьПараметр("СписокОС", СписокОС);
	Запрос.УстановитьПараметр("Наименование", ОсновноеСредствоНаименование);
	Запрос.УстановитьПараметр("Организация", Объект.Организация);
	Запрос.УстановитьПараметр("Дата", Объект.Дата);
	Запрос.УстановитьПараметр("ПолучатьИнвентарныйНомерИзКода", ПолучатьИнвентарныйНомерИзКода);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК ОсновноеСредство,
	|	ВЫБОР
	|		КОГДА &ПолучатьИнвентарныйНомерИзКода
	|			ТОГДА ОсновныеСредства.Код
	|		ИНАЧЕ ОсновныеСредства.ИнвентарныйНомер
	|	КОНЕЦ КАК ИнвентарныйНомер
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.Наименование = &Наименование
	|	И (НЕ ОсновныеСредства.Ссылка В (&СписокОС))
	|	И ОсновныеСредства.ПометкаУдаления = ЛОЖЬ
	|	И ОсновныеСредства.ЭтоГруппа = ЛОЖЬ
	|УПОРЯДОЧИТЬ ПО
	|	ОсновноеСредство,
	|	ИнвентарныйНомер
	|АВТОУПОРЯДОЧИВАНИЕ";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда
		ШаблонСообщения = НСтр("ru = 'Другие элементы справочника с наименованием ""%1"" в справочнике ""Основные средства"" отсутствуют.';
								|en = 'No other catalog items with the ""%1"" name in the ""Fixed assets"" catalog.'");
		ТекстСообщения = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ОсновноеСредствоНаименование);
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстСообщения, , "Объект");
		Возврат Ложь;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		НоваяСтрока = Объект[ИмяТабличнойЧасти].Добавить();
		НоваяСтрока.ОсновноеСредство = Выборка.ОсновноеСредство;
		НоваяСтрока.ИнвентарныйНомер = Выборка.ИнвентарныйНомер;
	КонецЦикла;
	
	Форма.Модифицированность = Истина;
	
	Возврат Истина;
	
КонецФункции

//  Процедура перезаполняет переданную коллекцию формы подобранными основными средствами.
// По основным средствам присутствовавшим в коллекции изначально, данные колонок 
// дополняются исходными.
//
// Параметры:
//  КоллекцияОС - ДанныеФормыКоллекция - отображение табличной части с основными средствами
//  	в реквизит управляемой формы. Обязательно должна присутствовать колонка ОсновноеСредство.
//  
//  ВыбранноеЗначение - Структура - значение из обработчика ОбработкаВыбора полученное в результате
//  	подбора
// ..
//  Возвращаемое значение:
//    Массив - Массив новых строк коллекции.
//
Функция ОбработатьПодборОсновныхСредств(Знач КоллекцияОС, Знач ВыбранноеЗначение) Экспорт
	
	ТаблицаОС = ПолучитьИзВременногоХранилища(ВыбранноеЗначение.АдресОСВХранилище);
	
	ИсходныеДанные = КоллекцияОС.Выгрузить();
	ИсходныеДанные.Индексы.Добавить("ОсновноеСредство");
	
	ДобавленныеСтроки = Новый Массив;
	
	КоллекцияОС.Очистить();
	Для каждого СтрокаТаблицыОС Из ТаблицаОС Цикл
		ЭлементКоллекции = КоллекцияОС.Добавить();
		
		СтрокаИсходныхДанных = ИсходныеДанные.Найти(СтрокаТаблицыОС.ОсновноеСредство, "ОсновноеСредство");
		Если СтрокаИсходныхДанных <> Неопределено Тогда
			ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаИсходныхДанных);
		Иначе
			ДобавленныеСтроки.Добавить(ЭлементКоллекции);
		КонецЕсли;
			
		ЗаполнитьЗначенияСвойств(ЭлементКоллекции, СтрокаТаблицыОС);
	КонецЦикла;
	
	Возврат ДобавленныеСтроки;
	
КонецФункции

// Возвращает из справочника событий ОС первую найденную запись с заданным видом события,
// иначе возвращает пустую ссылку на справочник.
//
// Параметры:
//  ВидСобытия (Перечисление ВидыСобытийОС): вид события.
//
// Возвращаемое значение:
//   элемент справочника событий ОС.
//
Функция ПолучитьСобытиеПоОСИзСправочника(ВидСобытия) Экспорт

	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ВидСобытияОС", ВидСобытия);
	Запрос.Текст = "
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	Ссылка,
	|	ВидСобытияОС
	|ИЗ
	|	Справочник.СобытияОС КАК СобытияОС
	|
	|ГДЕ
	|	ВидСобытияОС = &ВидСобытияОС";
	ТаблицаСобытий = Запрос.Выполнить().Выгрузить();

	Если ТаблицаСобытий.Количество()>0 Тогда
		Возврат ТаблицаСобытий[0].Ссылка;

	Иначе
		Возврат Справочники.СобытияОС.ПустаяСсылка();

	КонецЕсли;

КонецФункции // ПолучитьСобытиеОСИзСправочника()

#КонецОбласти

#КонецОбласти
