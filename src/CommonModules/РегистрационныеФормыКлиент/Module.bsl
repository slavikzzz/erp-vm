
#Область СлужебныйПрограмныйИнтерфейс

Асинх Процедура ОткрытьПрисоединенныеФайлы(Форма, ИмяЭлемента, СпособОткрытия) Экспорт 
	Если Не ЗначениеЗаполнено(Форма.Объект.Ссылка) Тогда 
		Если КодВозвратаДиалога.Да = 
			Ждать ВопросАсинх("Для добавления файлов необходимо сохранить заявление. Выполнить сохранение?", РежимДиалогаВопрос.ДаНет) Тогда 
			Форма.Сохранить(Неопределено);
		Иначе
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ОткрытьФормуВыбораПриложенныхФайлов(Новый Структура("Форма, ИмяЭлемента, СпособОткрытия", Форма, ИмяЭлемента, СпособОткрытия));
КонецПроцедуры

Процедура ОчиститьПрисоединенныеФайлы(Форма, ИмяЭлемента) Экспорт 
	РегистрационныеФормыВызовСервера.УдалитьПрикрепленныеФайлы(Форма.Объект.Ссылка, ИмяЭлемента);
	Форма[ИмяЭлемента] = РегистрационныеФормыКлиентСервер.ПредставлениеПустогоПоляПриложенныхФайлов(ИмяЭлемента);
КонецПроцедуры

Функция НовыйПараметрыПолучениеКодаПодтверждения() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("СпособПодтверждения", "");
	Результат.Вставить("Значение", "");
	Результат.Вставить("НаименованиеЗадания", "");
	Результат.Вставить("ИдентификаторКода", "");
	
	Возврат Результат;
КонецФункции

Функция ПодтвердитьНомерТелефона(Форма, ДополнительныеПараметры) Экспорт
	ПараметрыВыполнения = НовыйПараметрыПолучениеКодаПодтверждения();
	ПараметрыВыполнения.СпособПодтверждения = РегистрационныеФормыКлиентСервер.СпособПодтвержденияТелефон();
	ПараметрыВыполнения.Значение = СокрЛП(ДополнительныеПараметры.Телефон);
	ПараметрыВыполнения.НаименованиеЗадания = НСтр("ru = 'Отправка кода подтверждения на номер телефона';
													|en = 'Отправка кода подтверждения на номер телефона'");
	ПараметрыВыполнения.ИдентификаторКода = Форма.ИдентификаторКодаПодтвержденияТелефона;
	
	Форма.КодПодтвержденияТелефонаОтправляется = Истина;
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
	
	ДлительнаяОперация = РегистрационныеФормыВызовСервера.НачатьПолучениеКодаПодтверждения(
		ПараметрыВыполнения, Форма.УникальныйИдентификатор);
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		Форма.КодПодтвержденияТелефонаОтправляется = Ложь;
		Форма.ИдентификаторКодаПодтвержденияТелефона = "";
		Форма.СрокДействияКодаПодтвержденияТелефона = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляТелефона = Неопределено;
		Форма.ТекстПовторнаяОтправкаКодаТелефон = "";
		СообщитьОбОшибкеОтправкиКодаПодтверждения(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
	Иначе
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			ДлительнаяОперация,
			Новый ОписаниеОповещения("Подключаемый_ПослеОтправкиКодаПодтверждения_Телефон", Форма),
			НастройкиОжидания);
		
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Телефон", 1, Истина);
	КонецЕсли;
КонецФункции

Процедура ПослеОтправкиКодаПодтвержденияТелефона(Форма, ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	Форма.КодПодтвержденияТелефонаОтправляется = Ложь;
	
	Если ДлительнаяОперация = Неопределено Тогда
		Форма.ИдентификаторКодаПодтвержденияТелефона = "";
		Форма.СрокДействияКодаПодтвержденияТелефона = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляТелефона = Неопределено;
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		РезультатВыполнения = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		ДанныеПодтверждения = Неопределено;
		
		Если ТипЗнч(РезультатВыполнения) = Тип("Структура")
			И РезультатВыполнения.Свойство(РегистрационныеФормыКлиентСервер.СпособПодтвержденияТелефон(), ДанныеПодтверждения)
			И ЗначениеЗаполнено(ДанныеПодтверждения) Тогда
			
			Форма.ИдентификаторКодаПодтвержденияТелефона = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
				ДанныеПодтверждения,
				"Идентификатор");
			Если ДанныеПодтверждения.Выполнено И ЗначениеЗаполнено(Форма.ИдентификаторКодаПодтвержденияТелефона) Тогда
				Форма.СрокДействияКодаПодтвержденияТелефона = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
					ДанныеПодтверждения,
					"СрокДействия");
				Форма.СрокПовторнойОтправкиКодаДляТелефона = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
					ДанныеПодтверждения,
					"МинимальноеВремя");
			Иначе
				СообщитьОбОшибкеОтправкиКодаПодтверждения(ДанныеПодтверждения.Ошибка);
			КонецЕсли;
		Иначе
			Форма.ИдентификаторКодаПодтвержденияТелефона = "";
			Форма.СрокДействияКодаПодтвержденияТелефона = Неопределено;
			Форма.СрокПовторнойОтправкиКодаДляТелефона = Неопределено;
			Если ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеПодтверждения, "Ошибка")) Тогда
				СообщитьОбОшибкеОтправкиКодаПодтверждения(ДанныеПодтверждения.Ошибка);
			КонецЕсли;
		КонецЕсли;
		
		Форма.ТекстПовторнаяОтправкаКодаТелефон = РегистрационныеФормыВызовСервера.ТекстПовторнойОтправкиКодаПодтверждения(
			Форма.СрокПовторнойОтправкиКодаДляТелефона);
		
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Телефон", 1, Истина);
	Иначе
		СообщитьОбОшибкеОтправкиКодаПодтверждения(ДлительнаяОперация.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Процедура ПовторнаяОтправкаКодаПодтвержденияТелефона(Форма, ДополнительныеПараметры) Экспорт
	Если Форма.СрокПовторнойОтправкиКодаДляТелефона > Форма.СрокДействияКодаПодтвержденияТелефона Тогда
		Форма.СрокПовторнойОтправкиКодаДляТелефона = Форма.СрокДействияКодаПодтвержденияТелефона;
	КонецЕсли;
	
	Форма.ТекстПовторнаяОтправкаКодаТелефон = РегистрационныеФормыВызовСервера.ТекстПовторнойОтправкиКодаПодтверждения(
		Форма.СрокПовторнойОтправкиКодаДляТелефона);
	
	Если ЗначениеЗаполнено(Форма.ТекстПовторнаяОтправкаКодаТелефон) Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Телефон", 1, Истина);
	Иначе
		Форма.ОтключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Телефон");
		Форма.СрокДействияКодаПодтвержденияТелефона = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляТелефона = Неопределено;
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьКодПодтвержденияТелефона(Форма, ДополнительныеПараметры) Экспорт
	Если Форма.НомерТелефонаПодтвержден Тогда
		Возврат;
	КонецЕсли;
	
	Форма.НомерТелефонаПодтвержден = РегистрационныеФормыВызовСервера.ПроверитьКодПодтверждения(
		Форма.ИдентификаторКодаПодтвержденияТелефона, Форма.КодПодтвержденияТелефона);
	
	Если Форма.НомерТелефонаПодтвержден Тогда
		Форма.ОтключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Телефон");
	Иначе
		СообщитьОбОшибкеПроверкиКодаПодтверждения("КодПодтвержденияТелефона");
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Функция ПодтвердитьАдресЭлектроннойПочты(Форма, ДополнительныеПараметры) Экспорт
	ПараметрыВыполнения = НовыйПараметрыПолучениеКодаПодтверждения();
	ПараметрыВыполнения.СпособПодтверждения = РегистрационныеФормыКлиентСервер.СпособПодтвержденияЭлектроннаяПочта();
	ПараметрыВыполнения.Значение = СокрЛП(ДополнительныеПараметры.Почта);
	ПараметрыВыполнения.НаименованиеЗадания = НСтр("ru = 'Отправка кода подтверждения на электронную почту';
													|en = 'Отправка кода подтверждения на электронную почту'");
	ПараметрыВыполнения.ИдентификаторКода = Форма.ИдентификаторКодаПодтвержденияПочты;
	
	Форма.КодПодтвержденияПочтыОтправляется = Истина;
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
	
	ДлительнаяОперация = РегистрационныеФормыВызовСервера.НачатьПолучениеКодаПодтверждения(
		ПараметрыВыполнения, Форма.УникальныйИдентификатор);
	
	Если ДлительнаяОперация.Статус = "Ошибка" Тогда
		Форма.КодПодтвержденияПочтыОтправляется = Ложь;
		Форма.ИдентификаторКодаПодтвержденияПочты = "";
		Форма.СрокДействияКодаПодтвержденияПочты = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляПочты = Неопределено;
		Форма.ТекстПовторнаяОтправкаКодаПочта = "";
		СообщитьОбОшибкеОтправкиКодаПодтверждения(ДлительнаяОперация.КраткоеПредставлениеОшибки);
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
	Иначе
		НастройкиОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Форма);
		НастройкиОжидания.ВыводитьОкноОжидания = Ложь;
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			ДлительнаяОперация,
			Новый ОписаниеОповещения("Подключаемый_ПослеОтправкиКодаПодтверждения_Почта", Форма),
			НастройкиОжидания);
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Почта", 1, Истина);
	КонецЕсли;
КонецФункции

Процедура ПослеОтправкиКодаПодтвержденияПочты(Форма, ДлительнаяОперация, ДополнительныеПараметры) Экспорт
	Форма.КодПодтвержденияПочтыОтправляется = Ложь;
	
	Если ДлительнаяОперация = Неопределено Тогда
		Форма.ИдентификаторКодаПодтвержденияПочты = "";
		Форма.СрокДействияКодаПодтвержденияПочты = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляПочты = Неопределено;
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
		Возврат;
	КонецЕсли;
	
	Если ДлительнаяОперация.Статус = "Выполнено" Тогда
		РезультатВыполнения = ПолучитьИзВременногоХранилища(ДлительнаяОперация.АдресРезультата);
		ДанныеПодтверждения = Неопределено;
		
		Если ТипЗнч(РезультатВыполнения) = Тип("Структура")
			И РезультатВыполнения.Свойство(РегистрационныеФормыКлиентСервер.СпособПодтвержденияЭлектроннаяПочта(), ДанныеПодтверждения)
			И ЗначениеЗаполнено(ДанныеПодтверждения) Тогда
			
			Форма.ИдентификаторКодаПодтвержденияПочты = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
				ДанныеПодтверждения,
				"Идентификатор");
			Если ДанныеПодтверждения.Выполнено И ЗначениеЗаполнено(Форма.ИдентификаторКодаПодтвержденияПочты) Тогда
				Форма.СрокДействияКодаПодтвержденияПочты = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
					ДанныеПодтверждения,
					"СрокДействия");
				Форма.СрокПовторнойОтправкиКодаДляПочты = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
					ДанныеПодтверждения,
					"МинимальноеВремя");
			Иначе
				СообщитьОбОшибкеОтправкиКодаПодтверждения(ДанныеПодтверждения.Ошибка);
			КонецЕсли;
		Иначе
			Форма.ИдентификаторКодаПодтвержденияПочты = "";
			Форма.СрокДействияКодаПодтвержденияПочты = Неопределено;
			Форма.СрокПовторнойОтправкиКодаДляПочты = Неопределено;
			Если ЗначениеЗаполнено(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ДанныеПодтверждения, "Ошибка")) Тогда
				СообщитьОбОшибкеОтправкиКодаПодтверждения(ДанныеПодтверждения.Ошибка);
			КонецЕсли;
		КонецЕсли;
		
		Форма.ТекстПовторнаяОтправкаКодаПочта = РегистрационныеФормыВызовСервера.ТекстПовторнойОтправкиКодаПодтверждения(
			Форма.СрокПовторнойОтправкиКодаДляПочты);
		
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Почта", 1, Истина);
	Иначе
		СообщитьОбОшибкеОтправкиКодаПодтверждения(ДлительнаяОперация.КраткоеПредставлениеОшибки);
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Процедура ПовторнаяОтправкаКодаПодтвержденияПочты(Форма, ДополнительныеПараметры) Экспорт
	Если Форма.СрокПовторнойОтправкиКодаДляПочты > Форма.СрокДействияКодаПодтвержденияПочты Тогда
		Форма.СрокПовторнойОтправкиКодаДляПочты = Форма.СрокДействияКодаПодтвержденияПочты;
	КонецЕсли;
	
	Форма.ТекстПовторнаяОтправкаКодаПочта = РегистрационныеФормыВызовСервера.ТекстПовторнойОтправкиКодаПодтверждения(
		Форма.СрокПовторнойОтправкиКодаДляПочты);
	
	Если ЗначениеЗаполнено(Форма.ТекстПовторнаяОтправкаКодаПочта) Тогда
		Форма.ПодключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Почта", 1, Истина);
	Иначе
		Форма.ОтключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Почта");
		Форма.СрокДействияКодаПодтвержденияПочты = Неопределено;
		Форма.СрокПовторнойОтправкиКодаДляПочты = Неопределено;
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
	КонецЕсли;
КонецПроцедуры

Процедура ПроверитьКодПодтвержденияПочты(Форма, ДополнительныеПараметры) Экспорт
	Если Форма.ЭлектроннаяПочтаПодтверждена Тогда
		Возврат;
	КонецЕсли;
	
	Форма.ЭлектроннаяПочтаПодтверждена = РегистрационныеФормыВызовСервера.ПроверитьКодПодтверждения(
		Форма.ИдентификаторКодаПодтвержденияПочты, Форма.КодПодтвержденияПочты);
	
	Если Форма.ЭлектроннаяПочтаПодтверждена Тогда
		Форма.ОтключитьОбработчикОжидания("Подключаемый_ПовторнаяОтправка_Почта");
	Иначе
		СообщитьОбОшибкеПроверкиКодаПодтверждения("КодПодтвержденияПочты");
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Процедура ЗаявительТелефонПриИзменении(Форма, ДополнительныеПараметры) Экспорт
	Если Не РегистрационныеФормыКлиентСервер.ЭтоЭлектронныйСпособПодачиДокументов(Форма.СпособПодачиДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	Форма.СрокДействияКодаПодтвержденияТелефона = Неопределено;
	Форма.СрокПовторнойОтправкиКодаДляТелефона = Неопределено;
	Форма.ИдентификаторКодаПодтвержденияТелефона = "";
	Форма.КодПодтвержденияТелефона = "";
	Форма.НомерТелефонаПодтвержден = Ложь;
	
	ПредставлениеТелефона = ЭлектроннаяПодписьВМоделиСервисаКлиентСервер.ПолучитьПредставлениеТелефона(
		ДополнительныеПараметры.Телефон);
	
	Если Не ЗначениеЗаполнено(ПредставлениеТелефона) Тогда
		ТекстСообщения = НСтр("ru = 'Введите корректный номер мобильного телефона.';
								|en = 'Введите корректный номер мобильного телефона.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , ДополнительныеПараметры.ИмяРеквизитаТелефон);
		РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
			Форма, ДополнительныеПараметры);
		Возврат;
	Иначе
		Форма[ДополнительныеПараметры.ИмяРеквизитаТелефон]= ПредставлениеТелефона;
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Процедура ЗаявительПочтаПриИзменении(Форма, ДополнительныеПараметры) Экспорт
	Если Не РегистрационныеФормыКлиентСервер.ЭтоЭлектронныйСпособПодачиДокументов(Форма.СпособПодачиДокументов) Тогда
		Возврат;
	КонецЕсли;
	
	Форма.СрокДействияКодаПодтвержденияПочты = Неопределено;
	Форма.СрокПовторнойОтправкиКодаДляПочты = Неопределено;
	Форма.ИдентификаторКодаПодтвержденияПочты = "";
	Форма.КодПодтвержденияПочты = "";
	Форма.ЭлектроннаяПочтаПодтверждена = Ложь;
	
	РегистрационныеФормыКлиентСервер.УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(
		Форма, ДополнительныеПараметры);
КонецПроцедуры

Процедура ОткрытьЖурналРегистрацииПриОшибкиПодписания() Экспорт
	Если РегистрационныеФормыВызовСервера.ДоступенПросмотрЖурналаРегистрации() Тогда
		ОткрытьФорму("Обработка.ЖурналРегистрации.Форма");
	Иначе
		ТекстСообщения = НСтр("ru = 'Просмотр журнала регистрации запрещен.
		|Обратитесь к администратору для выяснения причины возникновения ошибки при подписи документов.';
		|en = 'Просмотр журнала регистрации запрещен.
		|Обратитесь к администратору для выяснения причины возникновения ошибки при подписи документов.'");
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения);
	КонецЕсли;
КонецПроцедуры

Функция НовыеПараметрыПодписанияЗаявления() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Заявление");
	Результат.Вставить("Организация");
	Результат.Вставить("EMailЗаявителя", "");
	Результат.Вставить("ИННЗаявителя", "");
	Результат.Вставить("ВидДокумента", "");
	Результат.Вставить("ЭтоЮрЛицо", Ложь);
	Результат.Вставить("Учредители", Неопределено);
	Результат.Вставить("ОтображатьИндивидуальныйУстав", Ложь);
	Результат.Вставить("ЕстьПатент", Ложь);
	Результат.Вставить("ЕстьУведомлениеОПереходеУСН", Ложь);
	Результат.Вставить("ИностранныйГражданин", Ложь);
	Результат.Вставить("НуженДокументПодтверждающийАдрес", Ложь);
	Результат.Вставить("НуженДоговорОбУчрежденииООО", Ложь);
	Результат.Вставить("ЗаявлениеВXML", Ложь);
	Результат.Вставить("ВидыДокументов", Новый Структура);
	
	Возврат Результат;
КонецФункции

Процедура ДобавитьФайлВОписаниеФайлов(ВидДокумента, ПрикрепленныеДокументы, ОписаниеФайлов, ТипСодержимого = Неопределено) Экспорт 
	СтруктураФайла = НовыйОписаниеСтруктурыФайла(ВидДокумента);
	Если ТипЗнч(ТипСодержимого) = Тип("ПеречислениеСсылка.ТипыСодержимогоФайлов") Тогда 
		СтруктураФайла.ТипыСодержимогоЗаявления = ТипСодержимого;
	КонецЕсли;
	
	Для Каждого ТекущийФайл Из ПрикрепленныеДокументы Цикл
		СтруктураФайла.АдресаФайлов.Добавить(ТекущийФайл);
	КонецЦикла;
	
	ОписаниеФайлов.Добавить(СтруктураФайла);
КонецПроцедуры

Процедура СтатусОтправкиОбработкаНавигационнойСсылки(НавигационнаяСсылка, Заявление, ТипФайла, УникальныйИдентификатор, СтандартнаяОбработка) Экспорт
	Если НавигационнаяСсылка = "ЛистЗаписиЕГР" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьПрикрепленныйФайлОтправки(Заявление, ТипФайла, УникальныйИдентификатор);
	ИначеЕсли НавигационнаяСсылка = "Протокол" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьПрикрепленныйФайлОтправки(Заявление, "Протокол", УникальныйИдентификатор);
	ИначеЕсли НавигационнаяСсылка = "ЖурналРегистрации" Тогда
		СтандартнаяОбработка = Ложь;
		ОткрытьЖурналРегистрацииПриОшибкиПодписания();
	КонецЕсли;
КонецПроцедуры

Процедура ОткрытьПрикрепленныйФайлОтправки(Заявление, ТипФайла, УникальныйИдентификатор) Экспорт
	ДанныеФайла = РегистрационныеФормыВызовСервера.ДанныеФайлаОтФНСДляОткрытия(
		Заявление, ТипФайла, УникальныйИдентификатор);
	
	Если ДанныеФайла.ДанныеДляОткрытия <> Неопределено Тогда
		РаботаСФайламиКлиент.ОткрытьФайл(ДанныеФайла.ДанныеДляОткрытия, Ложь);
	Иначе
		ТекстСообщения = СтрШаблон(НСтр("ru = 'В прикрепленных документах от ФНС не найдено нужного файла: %1.
		|Нажмите дважды на сообщение, чтобы перейти в просмотр прикрепленных файлов';
		|en = 'В прикрепленных документах от ФНС не найдено нужного файла: %1.
		|Нажмите дважды на сообщение, чтобы перейти в просмотр прикрепленных файлов'"), ТипФайла);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, ДанныеФайла.ОтправкаСсылка);
	КонецЕсли;
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ОткрытьФормуВыбораПриложенныхФайлов(ДополнительныеПараметры)
	Форма = ДополнительныеПараметры.Форма;
	ОписаниеОповещения = Новый ОписаниеОповещения("ВыборПриложенныхФайловЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	
	ПараметрыОткрытия = Новый Структура;
	ПараметрыОткрытия.Вставить("ВладелецФайла", Форма.Объект.Ссылка);
	ПараметрыОткрытия.Вставить("ВидДокумента", ДополнительныеПараметры.ИмяЭлемента);
	ПараметрыОткрытия.Вставить("СпособОткрытия", ДополнительныеПараметры.СпособОткрытия);
	ПараметрыОткрытия.Вставить("ТолькоПросмотр", ЗначениеЗаполнено(Форма.ПодписанныеДокументы));
	
	ОткрытьФорму("ОбщаяФорма.ВыборОтсканированныхФайловБРО",
		ПараметрыОткрытия, Форма, Форма.УникальныйИдентификатор, , , ОписаниеОповещения);
КонецПроцедуры

Процедура ВыборПриложенныхФайловЗавершение(РезультатВыбора, ДополнительныеПараметры) Экспорт
	Если ТипЗнч(РезультатВыбора) = Тип("Число") Тогда
		Форма = ДополнительныеПараметры.Форма;
		ИмяЭлемента = ДополнительныеПараметры.ИмяЭлемента;
		Форма[ИмяЭлемента] = ?(ЗначениеЗаполнено(РезультатВыбора), РегистрационныеФормыКлиентСервер.ПредставлениеФайлаПоУмолчанию(РезультатВыбора),
			РегистрационныеФормыКлиентСервер.ПредставлениеПустогоПоляПриложенныхФайлов(ИмяЭлемента));
	КонецЕсли;
КонецПроцедуры

Процедура СообщитьОбОшибкеПроверкиКодаПодтверждения(ИмяЭлемента)
	ТекстСообщения = НСтр("ru = 'Код подтверждения неверный';
							|en = 'Код подтверждения неверный'");
	ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, , ИмяЭлемента);
КонецПроцедуры

Процедура СообщитьОбОшибкеОтправкиКодаПодтверждения(ТекстОшибки)
	ОбщегоНазначенияКлиент.СообщитьПользователю(СтрШаблон(НСтр("ru = 'Не удалось отправить код подтверждения. %1 Попробуйте ещё раз.';
																|en = 'Не удалось отправить код подтверждения. %1 Попробуйте ещё раз.'"), ТекстОшибки));
КонецПроцедуры

Функция НовыйОписаниеСтруктурыФайла(ВидДокумента)
	Результат = Новый Структура;
	
	Результат.Вставить("ВидДокумента",
		ПредопределенноеЗначение(СтрШаблон("Перечисление.ВидыДокументовДляЭлГосРегистрации.%1", ВидДокумента)));
	
	Результат.Вставить("АдресаФайлов", Новый Массив); // Массив - Массив адресов сканов во временном хранилище, содержащих двоичные
	Результат.Вставить("ТипыСодержимогоЗаявления"); // ПеречисленияСсылка.ТипыСодержимогоФайлов.XML, если заявление в формате XML, отсутствует или пустое в остальных случаях
	
	Возврат Результат;
КонецФункции

#КонецОбласти

