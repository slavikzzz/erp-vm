
#Область СлужебныеПроцедурыИФункции

// Процедура устанавливает период смещения в формах статей бюджетов, показателей бюджетов
// так же корректирует наименование для отображения установленного смещения.
//
// Параметры:
//  Объект  - СправочникОбъект.ЭлементыФинансовыхОтчетов - объект формы
//  Форма  - ФормаКлиентскогоПриложения - форма, для которой устанавливаем смещение. Содержит в том числе:
//  	* Элементы - ВсеЭлементыФормы - содержит в том числе:
//  		** НастройкаСмещенияПериода - ДекорацияФормы -  
//  РезультатВыбора  - Структура - результат выбора в форме настройки смещения.
//
Процедура УстановитьПериодСмещения(Объект, Форма, РезультатВыбора) Экспорт
	
	Перем ЗначениеПустое;
	
	Если РезультатВыбора = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ПредыдущееПредставлениеСмещения = БюджетнаяОтчетностьКлиентСервер.ПредставлениеСмещения(Форма);
	
	ЗаполнитьЗначенияСвойств(Форма, РезультатВыбора);
	
	НовоеПредставлениеСмещения = БюджетнаяОтчетностьКлиентСервер.ПредставлениеСмещения(Форма, ЗначениеПустое);
	Форма.Элементы.НастройкаСмещенияПериода.Заголовок = НовоеПредставлениеСмещения;
	
	Если СтрНайти(Объект.НаименованиеДляПечати, ПредыдущееПредставлениеСмещения) Тогда
		Если ЗначениеПустое Тогда
			Объект.НаименованиеДляПечати = СтрЗаменить(Объект.НаименованиеДляПечати, "(" + ПредыдущееПредставлениеСмещения + ")", "");
		Иначе
			Объект.НаименованиеДляПечати = СтрЗаменить(Объект.НаименованиеДляПечати, ПредыдущееПредставлениеСмещения, НовоеПредставлениеСмещения);
		КонецЕсли;
	ИначеЕсли Не ЗначениеПустое Тогда
		Постфикс = " (" + НовоеПредставлениеСмещения + ")";
		Если Не Прав(Объект.НаименованиеДляПечати, СтрДлина(Постфикс)) = Постфикс Тогда
			Объект.НаименованиеДляПечати = Объект.НаименованиеДляПечати + Постфикс;
		КонецЕсли;
	КонецЕсли;
	Объект.НаименованиеДляПечати = СокрЛП(Объект.НаименованиеДляПечати);
	
КонецПроцедуры

Процедура ОткрытьФормуОтчета(ПараметрыОткрытия, ФормаВладелец) Экспорт
	Перем ХранимыеПараметрыОтчета;
	
	ДополнительныйИндексУникальности = 0;
	Если ПараметрыОткрытия.ПараметрыОтчета.Свойство("ХранимыеПараметрыОтчета", ХранимыеПараметрыОтчета) Тогда
		ДополнительныйИндексУникальности = ХранимыеПараметрыОтчета.ИндексСтрокиДанных;
	КонецЕсли;
	
	КлючУникальности = Строка(ФормаВладелец.УникальныйИдентификатор) + "_" + ДополнительныйИндексУникальности;
	
	ОткрытьФорму(ПараметрыОткрытия.ИмяФормы, ПараметрыОткрытия.ПараметрыОтчета, ФормаВладелец, КлючУникальности);
	
КонецПроцедуры

Функция МассивРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения = Ложь, Результат = Неопределено)
	
	Если Результат = Неопределено Тогда
		Результат = Новый Массив;
	КонецЕсли;
	
	ПодчиненныеЭлементы = ФинансоваяОтчетностьКлиент.ПодчиненныеСтрокиЭлементаФормы(СтрокаДерева);
	Для Каждого ПодчиненныйЭлемент Из ПодчиненныеЭлементы Цикл
		Если ПодчиненныйЭлемент.ВидЭлемента = БюджетнаяОтчетностьКлиентСервер.ВидЭлемента("РедактируемоеЗначение") Тогда
			Если ПроверкаЗаполнения Тогда
				ЭтоПропускаемыйЭлемент = ПодчиненныйЭлемент.АдресСтруктурыЭлемента = ИсключитьИД;
			Иначе
				ЭтоПропускаемыйЭлемент = ПодчиненныйЭлемент.ПолучитьИдентификатор() = ИсключитьИД;
			КонецЕсли;
			Если Не ЭтоПропускаемыйЭлемент Тогда
				Результат.Добавить(ПодчиненныйЭлемент);
			КонецЕсли;
		КонецЕсли;
		МассивРедактируемыхЯчеек(ПодчиненныйЭлемент, ИсключитьИД, ПроверкаЗаполнения, Результат);
	КонецЦикла;
	
	Возврат Результат;
	
КонецФункции

Функция ИменаРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения = Ложь) Экспорт
	
	МассивРедактируемыхЯчеек = МассивРедактируемыхЯчеек(СтрокаДерева, ИсключитьИД, ПроверкаЗаполнения);
	
	Результат = Новый СписокЗначений;
	Для Каждого Элемент Из МассивРедактируемыхЯчеек Цикл
		Результат.Добавить(Элемент.НаименованиеДляПечати);
	КонецЦикла;
	Результат.СортироватьПоЗначению(НаправлениеСортировки.Убыв);
	
	Возврат Результат.ВыгрузитьЗначения();
	
КонецФункции

#КонецОбласти

