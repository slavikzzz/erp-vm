#Область СлужебныйПрограммныйИнтерфейс

#Область УправлениеДоступом

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииСписковСОграничениемДоступа.
Процедура ПриЗаполненииСписковСОграничениемДоступа(Списки) Экспорт
	
	Списки.Вставить(Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц, Истина);
	
КонецПроцедуры

// См. УправлениеДоступомПереопределяемый.ПриЗаполненииВидовОграниченийПравОбъектовМетаданных.
Процедура ПриЗаполненииВидовОграниченийПравОбъектовМетаданных(Описание) Экспорт
	
	Описание = Описание + "
	|РегистрСведений.СтроковыеСведенияФизическихЛиц.Чтение.ГруппыФизическихЛиц
	|РегистрСведений.СтроковыеСведенияФизическихЛиц.Изменение.ГруппыФизическихЛиц";
	
КонецПроцедуры

#КонецОбласти

#Область ОбновитьСтроковыеСведенияФизическогоЛица

Процедура ОбновитьСтроковыеСведенияФизическогоЛицаПриЗаписиРегистраСведений(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;

	ПричинаОбновления = ПричинаОбновленияСтроковыхСведенийФизическогоЛица(Источник);
	Если ПричинаОбновления = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ФизическиеЛица = ФизическиеЛицаНабораЗаписей(Источник);
	
	Для Каждого ФизическоеЛицо Из ФизическиеЛица Цикл 
		РегистрыСведений.СтроковыеСведенияФизическихЛиц.ОбновитьСтроковыеСведенияФизическогоЛица(ФизическоеЛицо, ПричинаОбновления);
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьСтроковыеСведенияФизическогоЛицаПриЗаписиСправочника(Источник, Отказ) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	ПричинаОбновления = ПричинаОбновленияСтроковыхСведенийФизическогоЛица(Источник);
	Если ПричинаОбновления = Неопределено Тогда
		Возврат;
	КонецЕсли;

	ФизическоеЛицо = Источник["Владелец"];
	
	Если НЕ ЗначениеЗаполнено(ФизическоеЛицо) Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.СтроковыеСведенияФизическихЛиц.ОбновитьСтроковыеСведенияФизическогоЛица(ФизическоеЛицо, ПричинаОбновления);
	
КонецПроцедуры

Функция ПричинаОбновленияСтроковыхСведенийФизическогоЛица(Источник)
	
	ТипИсточника = ТипЗнч(Источник);
	
	ПричинаОбновления = Неопределено;
	
	Если ТипИсточника = Тип("РегистрСведенийНаборЗаписей.ДокументыФизическихЛиц") Тогда
		ПричинаОбновления = "Документы";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.ОбразованияФизическихЛиц")
		И ТипИсточника = Тип("РегистрСведенийНаборЗаписей." + "ЗнаниеЯзыковФизическихЛиц") Тогда
		ПричинаОбновления = "ЗнаниеЯзыков";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.ОбразованияФизическихЛиц")
		И ТипИсточника = Тип("РегистрСведенийНаборЗаписей." + "ПрофессииФизическихЛиц") Тогда
		ПричинаОбновления = "Профессии";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.ОбразованияФизическихЛиц")
		И ТипИсточника = Тип("РегистрСведенийНаборЗаписей." + "СпециальностиФизическихЛиц") Тогда
		ПричинаОбновления = "Специальности";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.ОбразованияФизическихЛиц")
		И ТипИсточника = Тип("СправочникОбъект." + "ОбразованиеФизическихЛиц") Тогда
		ПричинаОбновления = "Образование";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.КадровыйУчет.СемейныеПоложенияФизическихЛиц")
		И ТипИсточника = Тип("СправочникОбъект." + "РодственникиФизическихЛиц") Тогда
		ПричинаОбновления = "СоставСемьи";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы")
		И ТипИсточника = Тип("РегистрСведенийНаборЗаписей." + "НаградыФизическихЛиц") Тогда
		ПричинаОбновления = "Награды";
	ИначеЕсли ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыРасширеннаяПодсистемы")
		И ТипИсточника = Тип("РегистрСведенийНаборЗаписей." + "ТрудоваяДеятельностьФизическихЛиц") Тогда
		ПричинаОбновления = "ТрудоваяДеятельность";
	КонецЕсли;
	
	Возврат ПричинаОбновления;
	
КонецФункции

#КонецОбласти

#Область ОбменДанными

Процедура ПриЗаполненииТаблицыЗависимыхДанныхДляОбмена(ЗависимыеДанные) Экспорт
	
	// Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.Найти("ТрудоваяДеятельностьФизическихЛиц");
	Если МетаданныеОбъекта <> Неопределено Тогда
		НоваяСтрока = ЗависимыеДанные.Добавить();
		НоваяСтрока.ВедущиеМетаданные = МетаданныеОбъекта;
		НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц;
	КонецЕсли;
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.Найти("ПрофессииФизическихЛиц");
	Если МетаданныеОбъекта <> Неопределено Тогда
		НоваяСтрока = ЗависимыеДанные.Добавить();
		НоваяСтрока.ВедущиеМетаданные = МетаданныеОбъекта;
		НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц;
	КонецЕсли;
	
	МетаданныеОбъекта = Метаданные.РегистрыСведений.Найти("НаградыФизическихЛиц");
	Если МетаданныеОбъекта <> Неопределено Тогда
		НоваяСтрока = ЗависимыеДанные.Добавить();
		НоваяСтрока.ВедущиеМетаданные = МетаданныеОбъекта;
		НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц;
	КонецЕсли;
	
	НоваяСтрока = ЗависимыеДанные.Добавить();
	НоваяСтрока.ВедущиеМетаданные = Метаданные.РегистрыСведений.ДокументыФизическихЛиц;
	НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц;
	
	НоваяСтрока = ЗависимыеДанные.Добавить();
	НоваяСтрока.ВедущиеМетаданные = Метаданные.Справочники.ФизическиеЛица;
	НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.СтроковыеСведенияФизическихЛиц;
	
КонецПроцедуры

#КонецОбласти

// Строковые сведения физических лиц.

Функция ДобавитьПолеСтроковыхСведенийФизическихЛиц(ИмяПоля, ТекстыОписанияПолей, ИсточникиДанных) Экспорт
	
	ДобавленоПолеСведений = Ложь;
	Если НеобходимыСтроковыеСведенияФизическихЛиц(ИмяПоля) Тогда
		
		ДобавленоПолеСведений = Истина;
		ИсточникиДанных.Вставить("СтроковыеСведенияФизическихЛиц", Истина);
		
		ПутьКДанным = ПутьКДаннымСтроковыхСведенийФизическихЛиц(ИмяПоля);
		ТекстыОписанияПолей.Добавить(ПутьКДанным + " КАК " + ИмяПоля);
		
	КонецЕсли;
	
	Возврат ДобавленоПолеСведений;
	
КонецФункции

Функция НеобходимыСтроковыеСведенияФизическихЛиц(Знач ИмяПоля) Экспорт
	
	ИмяПоля = ВРег(ИмяПоля);
	
	Возврат ИмяПоля = ВРег("ПолученныеОбразования")
		Или	ИмяПоля = ВРег("ПовышениеКвалификации")
		Или	ИмяПоля = ВРег("Переподготовка")
		Или	ИмяПоля = ВРег("Награды")
		Или	ИмяПоля = ВРег("Документы")
		Или	ИмяПоля = ВРег("ЗнанияЯзыков")
		Или	ИмяПоля = ВРег("Профессии")
		Или	ИмяПоля = ВРег("Специальности")
		Или	ИмяПоля = ВРег("ТрудоваяДеятельность")
		Или	ИмяПоля = ВРег("СоставСемьи");
		
КонецФункции

Функция ПутьКДаннымСтроковыхСведенийФизическихЛиц(Знач ИмяПоля)
	
	ИмяПоля = ВРег(ИмяПоля);
	
	ПутьКДанным = "";
	Если ИмяПоля = ВРег("ПолученныеОбразования") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Образование КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("ПовышениеКвалификации") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.ПовышениеКвалификации КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("Переподготовка") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Переподготовка КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("Награды") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Награды КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("Документы") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Документы КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("ЗнанияЯзыков") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.ЗнаниеЯзыков КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("Профессии") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Профессии КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("Специальности") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.Специальности КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("ТрудоваяДеятельность") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.ТрудоваяДеятельность КАК СТРОКА(1024))";
	ИначеЕсли ИмяПоля = ВРег("СоставСемьи") Тогда
		ПутьКДанным = "	ВЫРАЗИТЬ(СтроковыеСведенияФизическихЛиц.СоставСемьи КАК СТРОКА(1024))";
	КонецЕсли;
	
	Возврат ПутьКДанным;
	
КонецФункции

Процедура ДобавитьТекстЗапросаВТСтроковыеСведенияФизическихЛиц(Запрос, ТолькоРазрешенные, ОписательВременнойТаблицыОтборов, ИсточникиДанных) Экспорт
	
	Если ИсточникиДанных.Получить("СтроковыеСведенияФизическихЛиц") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапросаСведений =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаОтборов.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТРазличныеФизическиеЛица
		|ИЗ
		|	ВТОтборовФизическихЛиц КАК ТаблицаОтборов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗРЕШЕННЫЕ
		|	СтроковыеСведенияФизическихЛиц.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтроковыеСведенияФизическихЛиц.Документы КАК Документы,
		|	СтроковыеСведенияФизическихЛиц.ЗнаниеЯзыков КАК ЗнаниеЯзыков,
		|	СтроковыеСведенияФизическихЛиц.Награды КАК Награды,
		|	СтроковыеСведенияФизическихЛиц.Образование КАК Образование,
		|	СтроковыеСведенияФизическихЛиц.ПовышениеКвалификации КАК ПовышениеКвалификации,
		|	СтроковыеСведенияФизическихЛиц.Переподготовка КАК Переподготовка,
		|	СтроковыеСведенияФизическихЛиц.Профессии КАК Профессии,
		|	СтроковыеСведенияФизическихЛиц.СоставСемьи КАК СоставСемьи,
		|	СтроковыеСведенияФизическихЛиц.Специальности КАК Специальности,
		|	СтроковыеСведенияФизическихЛиц.ТрудоваяДеятельность КАК ТрудоваяДеятельность
		|ПОМЕСТИТЬ ВТСтроковыеСведенияФизическихЛиц
		|ИЗ
		|	ВТРазличныеФизическиеЛица КАК РазличныеФизическиеЛица
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.СтроковыеСведенияФизическихЛиц КАК СтроковыеСведенияФизическихЛиц
		|		ПО РазличныеФизическиеЛица.ФизическоеЛицо = СтроковыеСведенияФизическихЛиц.ФизическоеЛицо";
	
	ТекстЗапросаСведений = СтрЗаменить(ТекстЗапросаСведений, "ВТОтборовФизическихЛиц", ОписательВременнойТаблицыОтборов.ИмяВременнойТаблицыОтборовФизическихЛиц);
	КадровыйУчет.УстановитьВТекстеЗапросаИмяПоляФизическоеЛицо(ТекстЗапросаСведений, "ТаблицаОтборов.ФизическоеЛицо", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо);
	
	ЗарплатаКадрыОбщиеНаборыДанных.УстановитьВыборкуТолькоРазрешенныхДанных(ТекстЗапросаСведений, ТолькоРазрешенные);
	
	ЧастиЗапроса = Новый Массив;
	ЧастиЗапроса.Добавить(ТекстЗапросаСведений);
	ЧастиЗапроса.Добавить(ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов());
	ЧастиЗапроса.Добавить(Запрос.Текст);
	
	ЧастиЗапроса.Добавить(
		"	{ЛЕВОЕ СОЕДИНЕНИЕ ВТСтроковыеСведенияФизическихЛиц КАК СтроковыеСведенияФизическихЛиц
		|	ПО " + КадровыйУчет.ПутьКПолюФизическоеЛицо("ТаблицаОтборов", ОписательВременнойТаблицыОтборов.ИмяПоляФизическоеЛицо) + " = СтроковыеСведенияФизическихЛиц.ФизическоеЛицо}");
	
	Запрос.Текст = СтрСоединить(ЧастиЗапроса, Символы.ПС);
	
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТРазличныеФизическиеЛица");
	КадровыйУчет.ДобавитьВКоллекциюИмяКадровыхДанных(ИсточникиДанных, "ВТКУничтожению", "ВТСтроковыеСведенияФизическихЛиц");
	
КонецПроцедуры

Функция ФизическиеЛицаНабораЗаписей(НаборЗаписей)
	
	ИмяПоляФизическоеЛицо = ИмяПоляФизическоеЛицоРегистраСведений(НаборЗаписей);
	ФизическиеЛица = НаборЗаписей.Выгрузить( , ИмяПоляФизическоеЛицо);
	ФизическиеЛица.Свернуть(ИмяПоляФизическоеЛицо);
	ФизическиеЛица = ФизическиеЛица.ВыгрузитьКолонку(ИмяПоляФизическоеЛицо);
	
	Если ФизическиеЛица.Количество() = 0 Тогда
		
		Если НаборЗаписей.Отбор[ИмяПоляФизическоеЛицо].Использование Тогда
			ФизическоеЛицо = НаборЗаписей.Отбор[ИмяПоляФизическоеЛицо].Значение;
			Если ЗначениеЗаполнено(ФизическоеЛицо) И ОбщегоНазначения.СсылкаСуществует(ФизическоеЛицо) Тогда
				ФизическиеЛица.Добавить(ФизическоеЛицо);
			КонецЕсли;
		КонецЕсли;
		
	КонецЕсли;
	
	Возврат ФизическиеЛица;
	
КонецФункции 

Функция ИмяПоляФизическоеЛицоРегистраСведений(НаборЗаписей)
	
	ПолеФизическоеЛицо = "";
	
	МетаданныеНабора = НаборЗаписей.Метаданные();
	
	Если МетаданныеНабора.Измерения.Найти("ФизическоеЛицо") <> Неопределено Тогда
		ПолеФизическоеЛицо = "ФизическоеЛицо";
	ИначеЕсли МетаданныеНабора.Измерения.Найти("Физлицо") <> Неопределено Тогда
		ПолеФизическоеЛицо = "Физлицо";
	КонецЕсли;
	
	Возврат ПолеФизическоеЛицо;
	
КонецФункции 

Процедура ОбновитьСтроковыеСведенияФизическогоЛица(ФизическоеЛицоСсылка) Экспорт
	
	РегистрыСведений.СтроковыеСведенияФизическихЛиц.ОбновитьСтроковыеСведенияФизическогоЛица(ФизическоеЛицоСсылка);
	
КонецПроцедуры

Процедура ПервоначальноеЗаполнениеСтроковыхСведенийФизическихЛиц(ПараметрыОбновления) Экспорт
	// РегистрСведений.СтроковыеСведенияФизическихЛиц
	РегистрыСведений.СтроковыеСведенияФизическихЛиц.ПервоначальноеЗаполнениеСтроковыхСведенийФизическихЛиц(ПараметрыОбновления);
КонецПроцедуры

#КонецОбласти
