////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Модернизация ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПриИзмененииРеквизита(ИмяЭлемента, Форма, ДополнительныеПараметры = Неопределено) Экспорт

	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	//++ Локализация

	Элементы = Форма.Элементы;
	
	Если ИмяЭлемента = Элементы.ВариантПримененияЦелевогоФинансирования.Имя
		ИЛИ ИмяЭлемента = Элементы.СрокИспользованияНУ.Имя Тогда	
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", ИмяЭлемента);
		
	ИначеЕсли ИмяЭлемента = Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Имя
		ИЛИ ИмяЭлемента = Элементы.ПорядокУчетаНУ.Имя 	
		ИЛИ ИмяЭлемента = Элементы.ЦелевоеФинансированиеСчет.Имя Тогда	
		
		ТребуетсяВызовСервера = Истина;
		   
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяРасходовАмортизационнойПремии.Имя Тогда	
		
		СтатьяРасходовАмортизационнойПремииПриИзменении(
			Форма, ДополнительныеПараметры, ТребуетсяВызовСервера, ПродолжитьИзменениеРеквизита);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяДоходов.Имя Тогда	
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элементы.СтатьяДоходов);
		
	ИначеЕсли ИмяЭлемента = Элементы.СпособВводаАмортизационнойПремии_ВПроцентах.Имя Тогда	
		
		СпособВводаАмортизационнойПремии_ВПроцентахПриИзменении(
			Форма, ДополнительныеПараметры, ТребуетсяВызовСервера, ПродолжитьИзменениеРеквизита);
		
	ИначеЕсли ИмяЭлемента = Элементы.СпособВводаАмортизационнойПремии_ФиксированнаяСумма.Имя Тогда	
		
		СпособВводаАмортизационнойПремии_ФиксированнаяСуммаПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.ОССтоимостьНУ.Имя Тогда
		
		ОССтоимостьНУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.ОССтоимостьПР.Имя Тогда
		
		ОССтоимостьПРПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли ИмяЭлемента = Элементы.НаправлениеДеятельности.Имя Тогда	
		
		НаправлениеДеятельностиПриИзменении(Форма, ДополнительныеПараметры, ПродолжитьИзменениеРеквизита);
		
	ИначеЕсли ИмяЭлемента = Элементы.АналитикаДоходов.Имя Тогда	
		
		ДоходыИРасходыКлиентСервер.АналитикаДоходовПриИзменении(Форма, Элементы.АналитикаДоходов);
		
	ИначеЕсли ИмяЭлемента = Элементы.СтатьяРасходовНУ.Имя Тогда	
		
		ДоходыИРасходыКлиентСервер.СтатьяПриИзменении(Форма, Элементы.СтатьяРасходовНУ);
		
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			ИмяЭлемента, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

// 
// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	
	Если Команда.Имя = Форма.Команды.ЗаполнитьИсточникиФинансирования.Имя Тогда
		ТребуетсяВызовСервера = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(Объект, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОС") Тогда
		Возврат Истина;
	КонецЕсли; 
	//-- Локализация

	Возврат Ложь;
	
КонецФункции
 
Процедура НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.СтатьяРасходовНУ
		ИЛИ Элемент = Элементы.СтатьяРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораСтатьи(Форма, Элемент, СтандартнаяОбработка);
		
	ИначеЕсли Элемент = Элементы.АналитикаРасходовНУ
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(Форма, Элемент, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовНУ
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
			
		ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли;
	 
	//-- Локализация
	
КонецПроцедуры

Процедура ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовНУ
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Локализация

//++ Локализация

Процедура СтатьяРасходовАмортизационнойПремииПриИзменении(Форма, ДополнительныеПараметры, ТребуетсяВызовСервера, ПродолжитьИзменениеРеквизита)
	
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(Объект.СтатьяРасходовАмортизационнойПремии) Тогда
		
		Если ДополнительныеПараметры = Неопределено Тогда
			
			ТребуетсяВызовСервера = Истина; 
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("НомерЭтапа", 1);
			
		Иначе
		
			Если Объект.АмортизационнаяПремияУказанаВПроцентах Тогда
				
				Если НЕ Форма.ДоступенВводАмортизационнойПремииВПроцентах Тогда
					
					ПараметрыОповещения = Новый Структура;
					ПараметрыОповещения.Вставить("Форма", Форма);
					ОписаниеОповещения = Новый ОписаниеОповещения("СтатьяРасходовАмортизационнойПремииПриИзмененииЗавершение", ЭтотОбъект, ПараметрыОповещения);
					
					СписокКнопок = Новый СписокЗначений;
					СписокКнопок.Добавить(КодВозвратаДиалога.Да, НСтр("ru = 'Продолжить';
																		|en = 'Continue'"));
					СписокКнопок.Добавить(КодВозвратаДиалога.Отмена);
					
					ТекстВопроса = НСтр("ru = 'При выборе статьи расходов с вариантом распределения ""На себестоимость товаров""
	                                     |амортизационная премия должна указываться в виде фиксированной суммы.
	                                     |Продолжить?';
	                                     |en = 'When selecting an expense item with an allocation option ""To product cost"",
	                                     |bonus depreciation must be specified as a fixed amount.
	                                     |Continue?'");
					ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, СписокКнопок);
					
					ПродолжитьИзменениеРеквизита = Ложь;
					
					Возврат;
					
				КонецЕсли;
				
			Иначе
				
				ТребуетсяВызовСервера = Истина; 
				
				ДополнительныеПараметры = Новый Структура;
				ДополнительныеПараметры.Вставить("НомерЭтапа", 2);
				
			КонецЕсли; 
		
		КонецЕсли; 
		
	Иначе
		
		Объект.АналитикаРасходовАмортизационнойПремии = Неопределено;
		Форма.АналитикаРасходовАмортизационнойПремииОбязательна = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СтатьяРасходовАмортизационнойПремииПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		Объект.АмортизационнаяПремияУказанаВПроцентах = Ложь;
		Форма.СпособВводаАмортизационнойПремии = 0;
		
		ДополнительныеПараметрыДействия = Новый Структура;
		ДополнительныеПараметрыДействия.Вставить("НомерЭтапа", 2);
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			"СтатьяРасходовАмортизационнойПремии", 
			Истина,
			ДополнительныеПараметрыДействия);
			
	Иначе
		
		Объект.СтатьяРасходовАмортизационнойПремии = Форма.СохраненныеРеквизиты.СтатьяРасходовАмортизационнойПремии;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура СпособВводаАмортизационнойПремии_ВПроцентахПриИзменении(Форма, ДополнительныеПараметры, ТребуетсяВызовСервера, ПродолжитьИзменениеРеквизита)
	
	Объект = Форма.Объект;
	
	Если ДополнительныеПараметры = Неопределено Тогда
		
		ТребуетсяВызовСервера = Истина; 
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("НомерЭтапа", 1);
		
	Иначе
		
		Если НЕ Форма.ДоступенВводАмортизационнойПремииВПроцентах Тогда
			ТекстПредупреждения = НСтр("ru = 'Амортизационная премия должна указываться в виде фиксированной суммы,
		                                |т.к. выбрана статья расходов с вариантом распределения ""На себестоимость товаров""
		                                |и основные средства используются в нескольких видах деятельности.';
		                                |en = 'Bonus depreciation should be specified as a fixed amount
		                                |as an expense item with the ""To goods cost"" allocation option is selected
		                                |and fixed assets are used in several activity types.'");
			ПоказатьПредупреждение(, ТекстПредупреждения);
			Форма.СпособВводаАмортизационнойПремии = 0;
			Возврат;
		КонецЕсли;
		
		Объект.АмортизационнаяПремияУказанаВПроцентах = Булево(Форма.СпособВводаАмортизационнойПремии);
		
		Если Объект.ОС.Количество() <> 0 Тогда
			
			ТребуетсяВызовСервера = Истина; 
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("НомерЭтапа", 2);
			
		Иначе
			
			ДополнительныеПараметры = Новый Структура;
			ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "АмортизационнаяПремияУказанаВПроцентах");
			
		КонецЕсли; 
	
	КонецЕсли;	
	
КонецПроцедуры

Процедура СпособВводаАмортизационнойПремии_ФиксированнаяСуммаПриИзменении(Форма, ДополнительныеПараметры)
	
	Объект = Форма.Объект;
	
	Объект.АмортизационнаяПремияУказанаВПроцентах = Булево(Форма.СпособВводаАмортизационнойПремии);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", "АмортизационнаяПремияУказанаВПроцентах");
	
КонецПроцедуры

Процедура НаправлениеДеятельностиПриИзменении(Форма, ДополнительныеПараметры, ПродолжитьИзменениеРеквизита)
	
	Объект = Форма.Объект;
	
	Если Форма.СохраненныеРеквизиты.НаправлениеДеятельности = Объект.НаправлениеДеятельности 
		ИЛИ Объект.ОС.Количество() = 0 Тогда
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_СохранитьЗначенияРеквизитов");
		Возврат;
	КонецЕсли;
	
	СписокКнопок = Новый СписокЗначений;
	СписокКнопок.Добавить(КодВозвратаДиалога.ОК, НСтр("ru = 'Очистить и продолжить';
														|en = 'Clear and continue'"));
	СписокКнопок.Добавить(КодВозвратаДиалога.Отмена, НСтр("ru = 'Отменить';
															|en = 'Cancel'"));
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	ОписаниеОповещения = Новый ОписаниеОповещения("НаправлениеДеятельностиПриИзмененииЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ПоказатьВопрос(
		ОписаниеОповещения,
		НСтр("ru = 'При изменении направления деятельности табличная часть документа будет очищена';
			|en = 'Changing a line of business will clear the tabular section of the document'"),
		СписокКнопок);
		
	ПродолжитьИзменениеРеквизита = Ложь;
	
КонецПроцедуры

Процедура НаправлениеДеятельностиПриИзмененииЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если РезультатВопроса = КодВозвратаДиалога.Отмена Тогда
		
		Объект.НаправлениеДеятельности = Форма.СохраненныеРеквизиты.НаправлениеДеятельности;
		
	Иначе
		
		Объект.ОС.Очистить();
		
		ДополнительныеПараметрыДействия = Новый Структура;
		ДополнительныеПараметрыДействия.Вставить("Выполнить_СохранитьЗначенияРеквизитов");
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			"НаправлениеДеятельности", 
			Ложь,
			ДополнительныеПараметрыДействия);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОССтоимостьНУПриИзменении(Форма, ДополнительныеПараметры)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовОСДоИзменения");
	
КонецПроцедуры

Процедура ОССтоимостьПРПриИзменении(Форма, ДополнительныеПараметры)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	Если ТекущиеДанные.СтоимостьВР < 0 Тогда
		ТекущиеДанные.СтоимостьНУ = ТекущиеДанные.СтоимостьНУ + ТекущиеДанные.СтоимостьВР;
		ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовОСДоИзменения");
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
