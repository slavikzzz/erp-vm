
#Область СлужебныйПрограммныйИнтерфейс

Процедура ОбновитьПодключаемыеХарактеристикиОбработчикСобытия(Источник, Отказ, Замещение) Экспорт
	
	Если ЗарплатаКадры.ОтключитьБизнесЛогикуПриЗаписи(Источник) Тогда
		Возврат;
	КонецЕсли;
	
	Если Источник.Количество() > 0 Тогда
		ИсточникИмя = Источник.Метаданные().Имя;
		ПараметрыОбновления = ПараметрыОбновленияИсточникаПодключаемыхХарактеристик();
		РегистрыСведений[ИсточникИмя].ПараметрыОбновленияИсточникаПодключаемыхХарактеристикЗарплатаКадры(ПараметрыОбновления);
		ПараметрыОбновления.Объекты = Источник.ВыгрузитьКолонку(ПараметрыОбновления.ИмяОбъекта);
		
		ОбновитьПодключаемыеХарактеристики(ПараметрыОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНаборыПодключаемыхХарактеристик(ИспользоватьХарактеристики, ИсточникиХарактеристик, ПараметрыОтложенногоОбновления = Неопределено) Экспорт 
	
	Если ИсточникиХарактеристик.Количество() > 0 Тогда
		ПараметрыОбновления = Новый Массив();
		Для Каждого Источник Из ИсточникиХарактеристик Цикл
			ПараметрыОбновленияИсточника = ПараметрыОбновленияИсточникаПодключаемыхХарактеристик();
			ПараметрыОбновленияИсточника.ОбновитьНаборХарактеристик = Истина;
			ПараметрыОбновленияИсточника.ОбновитьХарактеристики = Ложь;
			ПараметрыОбновленияИсточника.ИспользоватьХарактеристики = ИспользоватьХарактеристики;
			
			РегистрыСведений[Источник].ПараметрыОбновленияИсточникаПодключаемыхХарактеристикЗарплатаКадры(ПараметрыОбновленияИсточника);
			
			// Определяем должны ли мы показывать характеристики или нет в зависимости от настроек.
			Если ПараметрыОбновленияИсточника.Реквизиты.Количество() > 0 Тогда
				ПараметрыОбновленияИсточника.ИспользоватьХарактеристики = Истина;
				
			ИначеЕсли ПараметрыОбновленияИсточника.ОбновитьНаборХарактеристик И ИспользоватьХарактеристики = Ложь Тогда
				ИменаКонстант = ПараметрыОбновленияИсточника.ПроверяемыеКонстанты;
				Если ТипЗнч(ИменаКонстант) <> Тип("Массив") Тогда
					ИменаКонстант = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ИменаКонстант);
				КонецЕсли;
				
				Если ИменаКонстант.Количество() > 0 Тогда 
					НаборКонстант = Константы.СоздатьНабор(ИменаКонстант);
					НаборКонстант.Прочитать();
					Для Каждого ИмяКонстанты Из ИменаКонстант Цикл
						Если НаборКонстант[ИмяКонстанты] Тогда
							ПараметрыОбновленияИсточника.ИспользоватьХарактеристики = Истина;
							Прервать;
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
			
			ПараметрыОбновления.Добавить(ПараметрыОбновленияИсточника);
		КонецЦикла;
		
		ОбновитьПодключаемыеХарактеристики(ПараметрыОбновления, ПараметрыОтложенногоОбновления);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбновитьНаборыПодключаемыхХарактеристикОпределяемымиЗначениями(ИдентификаторыИсточника, ИмяПланаВидовХарактеристик, Используется = Истина, ИсточникДанных = Неопределено, Объекты = Неопределено, ПараметрыОтложенногоОбновления = Неопределено) Экспорт 
	
	Если Не (ЗначениеЗаполнено(ИдентификаторыИсточника) И ЗначениеЗаполнено(ИмяПланаВидовХарактеристик)) Тогда
		Возврат;
	КонецЕсли;
	
	Если ТипЗнч(ИдентификаторыИсточника) <> Тип("Массив") Тогда
		ИдентификаторыИсточника = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИдентификаторыИсточника);
	КонецЕсли;
	
	ТаблицаРесурсов = Новый ТаблицаЗначений;
	ТаблицаРесурсов.Колонки.Добавить("ИмяРегистра");
	ТаблицаРесурсов.Колонки.Добавить("ИдентификаторИсточника");
	
		
	ИмяПространстваБлокировки = "РегистрСведений." + ИмяПланаВидовХарактеристик;
	Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОтложенногоОбновления, ИмяПространстваБлокировки, Неопределено, Неопределено) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРесурсов.Очистить();
	ФильтрПоОбъектам = Новый Структура;
	Для Каждого ИдентификаторИсточника Из ИдентификаторыИсточника Цикл
		НоваяСтрока = ТаблицаРесурсов.Добавить();
		НоваяСтрока.ИмяРегистра = ИдентификаторИсточника;
		НоваяСтрока.ИдентификаторИсточника = ИдентификаторИсточника;
		
		ФильтрПоОбъектам.Вставить(ИдентификаторИсточника, Объекты);
	КонецЦикла;
	ОчиститьЗаписиХарактеристик(ИмяПланаВидовХарактеристик, ТаблицаРесурсов, ФильтрПоОбъектам);
	
	Если Используется = Ложь
		Или ИсточникДанных = Неопределено 
		Или ИсточникДанных.Количество() = 0 Тогда
		
		Характеристики = ПланыВидовХарактеристик[ИмяПланаВидовХарактеристик].Выбрать();
		Пока Характеристики.Следующий() Цикл
			Если ИдентификаторыИсточника.Найти(Характеристики.ИдентификаторИсточника) = Неопределено Тогда
				Продолжить;
			КонецЕсли;
			
			Характеристика = Характеристики.ПолучитьОбъект();
			Характеристика.Используется = Ложь;
			Характеристика.Записать();
		КонецЦикла;
		
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОтложенногоОбновления);
		Возврат;
	КонецЕсли;
	
	ТипыСвойств = ИсточникДанных.Скопировать(,"Свойство, ИдентификаторИсточника,Значение");
	ТипыСвойств.Колонки.Добавить("ТипСвойства");
	Для Каждого Свойство из ТипыСвойств Цикл
		Свойство.ТипСвойства = ТипЗнч(Свойство.Значение);
	КонецЦикла;
	ТипыСвойств.Свернуть("Свойство,ИдентификаторИсточника,ТипСвойства");
	СтруктураПоиска = Новый Структура("Свойство,ИдентификаторИсточника");
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ИдентификаторыИсточника", ИдентификаторыИсточника);
	ЗарплатаКадры.СоздатьВТПоТаблицеЗначений(Запрос.МенеджерВременныхТаблиц, ИсточникДанных, "ВТИсточник");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Источник.Свойство КАК Свойство,
	|	Источник.ИдентификаторИсточника КАК ИдентификаторИсточника
	|ПОМЕСТИТЬ ВТСвойства
	|ИЗ
	|	ВТИсточник КАК Источник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПодключаемыеХарактеристики.Ссылка КАК Ссылка,
	|	Свойства.ИдентификаторИсточника КАК ИдентификаторИсточника,
	|	Свойства.Свойство КАК Наименование,
	|	ИСТИНА КАК Используется
	|ИЗ
	|	ВТСвойства КАК Свойства
	|		ЛЕВОЕ СОЕДИНЕНИЕ #ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
	|		ПО Свойства.Свойство = ПодключаемыеХарактеристики.Наименование
	|			И Свойства.ИдентификаторИсточника = ПодключаемыеХарактеристики.ИдентификаторИсточника
	|ГДЕ
	|	ЕСТЬNULL(ПодключаемыеХарактеристики.Используется, ЛОЖЬ) = ЛОЖЬ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПодключаемыеХарактеристики.Ссылка,
	|	ПодключаемыеХарактеристики.ИдентификаторИсточника,
	|	ПодключаемыеХарактеристики.Наименование,
	|	ЛОЖЬ
	|ИЗ
	|	#ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСвойства КАК Свойства
	|		ПО ПодключаемыеХарактеристики.Наименование = Свойства.Свойство
	|			И ПодключаемыеХарактеристики.ИдентификаторИсточника = Свойства.ИдентификаторИсточника
	|ГДЕ
	|	ПодключаемыеХарактеристики.ИдентификаторИсточника В(&ИдентификаторыИсточника)
	|	И Свойства.Свойство ЕСТЬ NULL";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПланВидовХарактеристик", "ПланВидовХарактеристик." + ИмяПланаВидовХарактеристик);
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		Если ЗначениеЗаполнено(Выборка.Ссылка) Тогда
			Характеристика = Выборка.Ссылка.ПолучитьОбъект();
		Иначе
			Характеристика = ПланыВидовХарактеристик[ИмяПланаВидовХарактеристик].СоздатьЭлемент();
			СтруктураПоиска.ИдентификаторИсточника = Выборка.ИдентификаторИсточника;
			СтруктураПоиска.Свойство = Выборка.Наименование;
			ВозможныеТипы = ТипыСвойств.НайтиСтроки(СтруктураПоиска);
			Если ВозможныеТипы.Количество() = 1 Тогда
				МассивТипов = Новый Массив();
				МассивТипов.Добавить(ВозможныеТипы[0].ТипСвойства);
				Характеристика.ТипЗначения = Новый ОписаниеТипов(МассивТипов);
			КонецЕсли;
		КонецЕсли;
		ЗаполнитьЗначенияСвойств(Характеристика, Выборка);
		Характеристика.Записать();
	КонецЦикла;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ИсточникДанных.Объект КАК Объект,
	|	ПодключаемыеХарактеристики.Ссылка КАК Свойство,
	|	ИсточникДанных.Значение КАК Значение,
	|	ПодключаемыеХарактеристики.ИдентификаторИсточника КАК ИдентификаторИсточника
	|ИЗ
	|	ВТИсточник КАК ИсточникДанных
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ #ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
	|		ПО ИсточникДанных.Свойство = ПодключаемыеХарактеристики.Наименование
	|			И ИсточникДанных.ИдентификаторИсточника = ПодключаемыеХарактеристики.ИдентификаторИсточника
	|			И (ПодключаемыеХарактеристики.Используется = ИСТИНА)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ИдентификаторИсточника,
	|	Объект";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПланВидовХарактеристик", "ПланВидовХарактеристик." + ИмяПланаВидовХарактеристик);
	Выборка = Запрос.Выполнить().Выбрать();
	
	НаборЗаписей = РегистрыСведений[ИмяПланаВидовХарактеристик].СоздатьНаборЗаписей();
	
	Если Объекты = Неопределено Тогда
		Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторИсточника") Цикл
			
			НаборЗаписей.Отбор.ИдентификаторИсточника.Установить(Выборка.ИдентификаторИсточника);
			Пока Выборка.Следующий() Цикл
				Если НЕ ЗначениеЗаполнено(Выборка.Объект) Тогда
					Продолжить;
				КонецЕсли;
				ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
			КонецЦикла;
			
			НаборЗаписей.Записать();
			НаборЗаписей.Очистить();
		КонецЦикла;
	Иначе
		Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторИсточника") Цикл
			
			НаборЗаписей.Отбор.ИдентификаторИсточника.Установить(Выборка.ИдентификаторИсточника);
			Пока Выборка.СледующийПоЗначениюПоля("Объект") Цикл
				НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
				Если НЕ ЗначениеЗаполнено(Выборка.Объект) Тогда
					Продолжить;
				КонецЕсли;
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
				КонецЦикла;
				
				НаборЗаписей.Записать();
				НаборЗаписей.Очистить();
			КонецЦикла;
		КонецЦикла;
	КонецЕсли;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОтложенногоОбновления);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ПараметрыОбновленияИсточникаПодключаемыхХарактеристик()
	
	ПоляПараметров = 
	"ОбновитьНаборХарактеристик,
	|ОбновитьХарактеристики,
	|ИспользоватьХарактеристики,
	|ИмяПланаВидовХарактеристик,
	|ИмяРегистра,
	|ИдентификаторИсточника,
	|Объекты,
	|ИмяОбъекта,
	|Реквизиты,
	|ПроверяемыеКонстанты,
	|ОбновлятьОпеределяемымиЗначениями";
	
	ПараметрыОбновления = Новый Структура(ПоляПараметров);
	
	ПараметрыОбновления.ОбновитьНаборХарактеристик = Ложь;
	ПараметрыОбновления.ОбновитьХарактеристики = Истина;
	ПараметрыОбновления.ИспользоватьХарактеристики = Истина;
	ПараметрыОбновления.ОбновлятьОпеределяемымиЗначениями = Ложь;
	
	ПараметрыОбновления.Реквизиты = Новый Массив();
	ПараметрыОбновления.ПроверяемыеКонстанты = Новый Массив();
	
	Возврат ПараметрыОбновления;
	
КонецФункции

Процедура ОбновитьПодключаемыеХарактеристики(ПараметрыОбновления, ПараметрыОтложенногоОбновления = Неопределено) 
	
	ПараметрыОбновленияПоОбъектам = Новый Соответствие;
	Если ТипЗнч(ПараметрыОбновления) = Тип("Массив") Тогда
		Для Каждого ОписаниеРегистра Из ПараметрыОбновления Цикл
			ДобавитьОписаниеОбъектовИсточникаПодключаемыхХарактеристик(ПараметрыОбновленияПоОбъектам, ОписаниеРегистра);
		КонецЦикла;
	Иначе
		ДобавитьОписаниеОбъектовИсточникаПодключаемыхХарактеристик(ПараметрыОбновленияПоОбъектам, ПараметрыОбновления);
	КонецЕсли;
	
	// Выделим источники с переопределяемыми методами получения характеристик
	ПараметрыОбновленияОпределяемымиЗначениями = ВыделитьИсточникиСОбновлениемОпределяемымиЗначениями(ПараметрыОбновленияПоОбъектам);
	Для Каждого ПланХарактеристикОбъекта Из ПараметрыОбновленияОпределяемымиЗначениями Цикл
		
		ПараметрыОбновленияХарактеристикИсточников = ПланХарактеристикОбъекта.Значение;
		
		Для Каждого ПараметрыОбновленияХарактеристикИсточника Из ПараметрыОбновленияХарактеристикИсточников Цикл
			РегистрыСведений[ПараметрыОбновленияХарактеристикИсточника.ИмяРегистра].ОбновитьНаборыПодключаемыхХарактеристикОпределяемымиЗначениями(
				ПланХарактеристикОбъекта.Ключ, 
				ПараметрыОбновленияХарактеристикИсточника.ИспользоватьХарактеристики,
				,
				ПараметрыОбновленияХарактеристикИсточника.Объекты,
				ПараметрыОтложенногоОбновления);
		КонецЦикла;
		
	КонецЦикла;
	
	Для Каждого ПланХарактеристикОбъекта Из ПараметрыОбновленияПоОбъектам Цикл
		
		// Отложенное обновление подключаемых характеристик
		Если ПараметрыОтложенногоОбновления <> Неопределено Тогда
			Если ПараметрыОтложенногоОбновления.Свойство("РежимОбновления") И Не ПараметрыОтложенногоОбновления.РежимОбновления = "Монопольно" Тогда
				ЗаполнитьПодключаемыеХарактеристикиОтложено(ПланХарактеристикОбъекта.Ключ, ПланХарактеристикОбъекта.Значение, ПараметрыОтложенногоОбновления);
				Продолжить;
			Иначе
				ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОтложенногоОбновления, "ОбработкаЗавершена", Истина);
			КонецЕсли;
		КонецЕсли;
		
		ОбновитьПланВидовПодключаемыхХарактеристик(ПланХарактеристикОбъекта.Ключ, ПланХарактеристикОбъекта.Значение);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ОбновитьПланВидовПодключаемыхХарактеристик(ИмяПланаХарактеристик, ИсточникиДанных) 
	
	ПараметрыОбновления = Новый Структура("ОбновитьНаборХарактеристик, ОбновитьХарактеристики, ИспользоватьОтборПоОбъектам", Ложь, Ложь, Ложь);
	
	ТаблицаРесурсов = Новый ТаблицаЗначений;
	ТаблицаРесурсов.Колонки.Добавить("ИмяРегистра",				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаРесурсов.Колонки.Добавить("ИдентификаторИсточника",	Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(9)));
	ТаблицаРесурсов.Колонки.Добавить("Измерение", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаРесурсов.Колонки.Добавить("Ресурс", 					Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаРесурсов.Колонки.Добавить("Синоним", 				Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(100)));
	ТаблицаРесурсов.Колонки.Добавить("Тип", 					Новый ОписаниеТипов("ОписаниеТипов"));
	ТаблицаРесурсов.Колонки.Добавить("ОшибкаТипа", 				Новый ОписаниеТипов("Булево"));
	ТаблицаРесурсов.Колонки.Добавить("Используется", 			Новый ОписаниеТипов("Булево"));
	ТаблицаРесурсов.Колонки.Добавить("ИндексСтроки", 			Новый ОписаниеТипов("Число", Новый КвалификаторыЧисла(10,0,ДопустимыйЗнак.Неотрицательный)));
	
	ИндексСтроки = 1;
	Для Каждого Источник Из ИсточникиДанных Цикл
		ИспользоватьФильтрПоРесурсам = Источник.Реквизиты.Количество() > 0;
		МетаданныеРегистра  = Метаданные.РегистрыСведений.Найти(Источник.ИмяРегистра);
		Если МетаданныеРегистра <> Неопределено Тогда
			Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
				СтрокаРесурсов = ТаблицаРесурсов.Добавить();
				СтрокаРесурсов.ИмяРегистра	 = Источник.ИмяРегистра;
				СтрокаРесурсов.ИдентификаторИсточника = Источник.ИдентификаторИсточника;
				СтрокаРесурсов.Ресурс		 = Ресурс.Имя;
				СтрокаРесурсов.Синоним		 = Ресурс.Синоним;
				СтрокаРесурсов.Тип			 = Ресурс.Тип;
				СтрокаРесурсов.Измерение	 = Источник.ИмяОбъекта;
				СтрокаРесурсов.ИндексСтроки	 = ИндексСтроки;
				СтрокаРесурсов.Используется	 = Источник.ИспользоватьХарактеристики;
				
				Если ИспользоватьФильтрПоРесурсам И Источник.Реквизиты.Найти(Ресурс.Имя) = Неопределено Тогда
					СтрокаРесурсов.Используется = Ложь;
				КонецЕсли;
				
				ИндексСтроки = ИндексСтроки + 1;
			КонецЦикла;
		КонецЕсли;
		
		ПараметрыОбновления.ОбновитьНаборХарактеристик	= ПараметрыОбновления.ОбновитьНаборХарактеристик Или Источник.ОбновитьНаборХарактеристик;
		ПараметрыОбновления.ОбновитьХарактеристики		= ПараметрыОбновления.ОбновитьХарактеристики Или Источник.ОбновитьХарактеристики;
		ПараметрыОбновления.ИспользоватьОтборПоОбъектам	= ПараметрыОбновления.ИспользоватьОтборПоОбъектам Или Источник.Объекты <> Неопределено;
		ПараметрыОбновления.Вставить(Источник.ИмяРегистра, Источник.Объекты);
		
	КонецЦикла;
	
	ТипыХарактеристик = Метаданные.ПланыВидовХарактеристик[ИмяПланаХарактеристик].Тип;
	ПроверяемыеТипы = Новый Массив;
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ПроверяемыеТипы, ТаблицаРесурсов.ВыгрузитьКолонку("Тип"), Истина);
	Для Каждого ОписаниеТипаРесурса Из ПроверяемыеТипы Цикл
		ТипРесурса = ОписаниеТипаРесурса.Типы()[0];
		Если Не ТипыХарактеристик.СодержитТип(ТипРесурса) Тогда
			НеСоответствующиеРесурсы = ТаблицаРесурсов.НайтиСтроки(Новый Структура("Тип", ОписаниеТипаРесурса));
			Для Каждого Ресурс Из НеСоответствующиеРесурсы Цикл
				Ресурс.ОшибкаТипа = Истина;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаРесурсов", ТаблицаРесурсов);
	Запрос.УстановитьПараметр("ТипОбъекта", ТипОбъектаПодключаемыхХарактеристик(ИмяПланаХарактеристик));
	
	Запрос.Текст = "ВЫБРАТЬ
	|	Ресурсы.ИмяРегистра,
	|	Ресурсы.ИдентификаторИсточника,
	|	Ресурсы.Ресурс,
	|	Ресурсы.Синоним,
	|	Ресурсы.ОшибкаТипа,
	|	Ресурсы.Измерение,
	|	Ресурсы.Используется,
	|	Ресурсы.ИндексСтроки
	|ПОМЕСТИТЬ ВТРесурсы
	|ИЗ
	|	&ТаблицаРесурсов КАК Ресурсы";
	Запрос.Выполнить();
	
	// Обновление набора характеристик
	НеобходимоОбновитьХарактеристики = Ложь;
	Если ПараметрыОбновления.ОбновитьНаборХарактеристик Тогда
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ПодключаемыеХарактеристики.Ссылка КАК Характеристика,
		|	ПодключаемыеХарактеристики.Наименование КАК Наименование,
		|	ЕСТЬNULL(Ресурсы.Ресурс, """") КАК Ресурс,
		|	ЕСТЬNULL(Ресурсы.Синоним, """") КАК Синоним,
		|	ВЫБОР
		|		КОГДА Ресурсы.Используется ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ Ресурсы.Используется
		|				И НЕ Ресурсы.ОшибкаТипа
		|	КОНЕЦ КАК Соответствует,
		|	ПодключаемыеХарактеристики.Используется КАК Используется,
		|	ЕСТЬNULL(Ресурсы.ИмяРегистра, """") КАК ИмяРегистра,
		|	ЕСТЬNULL(Ресурсы.ИдентификаторИсточника, """") КАК ИдентификаторИсточника,
		|	ЕСТЬNULL(Ресурсы.Измерение, """") КАК Измерение,
		|	ЕСТЬNULL(Ресурсы.Используется, ЛОЖЬ) КАК РесурсИспользуется,
		|	ЕСТЬNULL(Ресурсы.ИндексСтроки, 0) КАК ИндексСтроки
		|ИЗ
		|	#ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРесурсы КАК Ресурсы
		|		ПО ПодключаемыеХарактеристики.Наименование = Ресурсы.Синоним
		|			И ПодключаемыеХарактеристики.ИдентификаторИсточника = Ресурсы.ИдентификаторИсточника
		|ГДЕ
		|	ПодключаемыеХарактеристики.ИдентификаторИсточника В
		|			(ВЫБРАТЬ РАЗЛИЧНЫЕ
		|				Ресурсы.ИдентификаторИсточника
		|			ИЗ
		|				ВТРесурсы КАК Ресурсы)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	&ПустаяСсылка,
		|	"""",
		|	Ресурсы.Ресурс,
		|	Ресурсы.Синоним,
		|	Ресурсы.Используется
		|		И НЕ Ресурсы.ОшибкаТипа,
		|	ЛОЖЬ,
		|	Ресурсы.ИмяРегистра,
		|	Ресурсы.ИдентификаторИсточника,
		|	Ресурсы.Измерение,
		|	Ресурсы.Используется,
		|	Ресурсы.ИндексСтроки
		|ИЗ
		|	ВТРесурсы КАК Ресурсы
		|		ЛЕВОЕ СОЕДИНЕНИЕ #ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
		|		ПО (ПодключаемыеХарактеристики.Наименование = Ресурсы.Синоним)
		|			И (ПодключаемыеХарактеристики.ИдентификаторИсточника = Ресурсы.ИдентификаторИсточника)
		|ГДЕ
		|	ПодключаемыеХарактеристики.ИдентификаторИсточника ЕСТЬ NULL";
		Запрос.УстановитьПараметр("ПустаяСсылка", ПланыВидовХарактеристик[ИмяПланаХарактеристик].ПустаяСсылка());
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПланВидовХарактеристик", "ПланВидовХарактеристик." + ИмяПланаХарактеристик);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Если Не (ЗначениеЗаполнено(Выборка.Характеристика) Или Выборка.Соответствует = Истина) Тогда
				// Есть реквизиты, не отображаемые как подключаемые характеристики,
				// или ошибка типов плана видов характеристик
			ИначеЕсли Не ЗначениеЗаполнено(Выборка.Характеристика) И Выборка.Соответствует = Истина Тогда
				// Надо создать новый
				Характеристика = ПланыВидовХарактеристик[ИмяПланаХарактеристик].СоздатьЭлемент();
				Характеристика.Наименование = Выборка.Синоним;
				Характеристика.Используется = Истина;
				Характеристика.ИдентификаторИсточника = Выборка.ИдентификаторИсточника;
				ОписаниеРесурса = ТаблицаРесурсов.Найти(Выборка.ИндексСтроки, "ИндексСтроки");
				Если ОписаниеРесурса <> Неопределено Тогда
					Характеристика.ТипЗначения = ОписаниеРесурса.Тип;
				КонецЕсли;
				Характеристика.Записать();
				
				НеобходимоОбновитьХарактеристики = Истина;
			ИначеЕсли ЗначениеЗаполнено(Выборка.Характеристика) И ПустаяСтрока(Выборка.Ресурс) Тогда
				Если Выборка.Используется Тогда
					// Установить Используется в Ложь;
					Характеристика = Выборка.Характеристика.ПолучитьОбъект();
					Характеристика.Используется = Ложь;
					Характеристика.Записать();
					
					НеобходимоОбновитьХарактеристики = Истина;
				КонецЕсли;
			ИначеЕсли ЗначениеЗаполнено(Выборка.Характеристика) И Выборка.Используется <> Выборка.Соответствует Тогда
				// Инвертировать Используется для Характеристики
				Характеристика = Выборка.Характеристика.ПолучитьОбъект();
				Характеристика.Используется = Выборка.Соответствует;
				Характеристика.Записать();
				
				НеобходимоОбновитьХарактеристики = Истина;
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Если ПараметрыОбновления.ОбновитьХарактеристики Или НеобходимоОбновитьХарактеристики Тогда
		
		ОчиститьЗаписиХарактеристик(ИмяПланаХарактеристик, ТаблицаРесурсов, ПараметрыОбновления);
		
		Запрос.Текст = "ВЫБРАТЬ
		|	ПодключаемыеХарактеристики.Ссылка,
		|	ПодключаемыеХарактеристики.Наименование КАК Наименование,
		|	ВТРесурсы.ИмяРегистра КАК ИмяРегистра,
		|	ВТРесурсы.ИдентификаторИсточника КАК ИдентификаторИсточника,
		|	ВТРесурсы.Измерение КАК Измерение,
		|	ВТРесурсы.Ресурс КАК Ресурс
		|ИЗ
		|	#ПланВидовХарактеристик КАК ПодключаемыеХарактеристики
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРесурсы КАК ВТРесурсы
		|		ПО ПодключаемыеХарактеристики.Наименование = ВТРесурсы.Синоним
		|			И ПодключаемыеХарактеристики.ИдентификаторИсточника = ВТРесурсы.ИдентификаторИсточника
		|			И (ПодключаемыеХарактеристики.Используется)
		|ИТОГИ ПО
		|	ИмяРегистра,
		|	Измерение";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#ПланВидовХарактеристик", "ПланВидовХарактеристик." + ИмяПланаХарактеристик);
		ВыборкаРегистры = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ТекстОбращенияКРегистру = "";
		ТекстОбъединения = "";
		ПервыйЗапросОбъединения = Истина;
		
		Если ВыборкаРегистры.Количество() = 0 Тогда
			Возврат;
		КонецЕсли;
		
		Пока ВыборкаРегистры.Следующий() Цикл
			
			ТекстУсловия = "";
			Фильтр = ПараметрыОбновления[ВыборкаРегистры.ИмяРегистра];
			Если Фильтр <> Неопределено Тогда
				Если Фильтр <> Тип("Массив") Тогда
					Фильтр = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Фильтр);
				КонецЕсли;	
				Запрос.УстановитьПараметр("Объекты", Фильтр); 
				ТекстУсловия = "
				|ГДЕ 
				|	РегистрСведений.#Измерение В (&Объекты)
				|	И ТИПЗНАЧЕНИЯ(РегистрСведений.#Измерение) = &ТипОбъекта";
			Иначе
				ТекстУсловия = "
				|ГДЕ 
				|	ТИПЗНАЧЕНИЯ(РегистрСведений.#Измерение) = &ТипОбъекта
				|	И НЕ РегистрСведений.#Измерение В (NULL, НЕОПРЕДЕЛЕНО, ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка), ЗНАЧЕНИЕ(Справочник.ШтатноеРасписание.ПустаяСсылка), ЗНАЧЕНИЕ(ПланВидовРасчета.Начисления.ПустаяСсылка))";
			КонецЕсли;
			
			ВыборкаИзмерениеРегистра = ВыборкаРегистры.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
			Пока ВыборкаИзмерениеРегистра.Следующий() Цикл
				ТекстОбращенияКРегистру = ТекстОбращенияКРегистру + 
				"ВЫБРАТЬ 
				| #Ресурсы
				| ПОМЕСТИТЬ ВТ" + ВыборкаРегистры.ИмяРегистра + "
				|ИЗ
				|	РегистрСведений." + ВыборкаРегистры.ИмяРегистра + " КАК РегистрСведений";
				
				ИмяИзмерения = ВыборкаИзмерениеРегистра.Измерение;
				Ресурсы = " РегистрСведений." + ИмяИзмерения + " КАК Объект";
				Выборка = ВыборкаИзмерениеРегистра.Выбрать();
				Пока Выборка.Следующий() Цикл
					Ресурсы = Ресурсы + "
					|,РегистрСведений." + Выборка.Ресурс;
					
					Если ПервыйЗапросОбъединения Тогда
						ПервыйЗапросОбъединения = Ложь;
						
						ТекстОбъединения = ТекстОбъединения + "ВЫБРАТЬ 
						|	РегистрСведений.Объект,
						|	ПланВидовХарактеристик.Ссылка КАК Свойство,
						|	""" + Выборка.ИдентификаторИсточника + """ КАК ИдентификаторИсточника,
						|	РегистрСведений." + Выборка.Ресурс + " КАК Значение
						| ИЗ
						|	ВТ" + Выборка.ИмяРегистра + " КАК РегистрСведений
						|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик." + ИмяПланаХарактеристик + " КАК ПланВидовХарактеристик
						|	ПО ПланВидовХарактеристик.Наименование = """ + Выборка.Наименование + """
						|	И ПланВидовХарактеристик.ИдентификаторИсточника = """ + Выборка.ИдентификаторИсточника + """";
					Иначе
						ТекстОбъединения = ТекстОбъединения + "
						|
						|ОБЪЕДИНИТЬ ВСЕ
						|
						| ВЫБРАТЬ 
						|	РегистрСведений.Объект,
						|	ПланВидовХарактеристик.Ссылка,
						|	""" + Выборка.ИдентификаторИсточника + """ КАК ИдентификаторИсточника,
						|	РегистрСведений." + Выборка.Ресурс + "
						| ИЗ
						|	ВТ" + Выборка.ИмяРегистра + " КАК РегистрСведений
						|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПланВидовХарактеристик." + ИмяПланаХарактеристик + " КАК ПланВидовХарактеристик
						|	ПО ПланВидовХарактеристик.Наименование = """ + Выборка.Наименование + """
						|	И ПланВидовХарактеристик.ИдентификаторИсточника = """ + Выборка.ИдентификаторИсточника + """";
					КонецЕсли;
				КонецЦикла;
				
				ТекстОбращенияКРегистру = СтрЗаменить(ТекстОбращенияКРегистру, " #Ресурсы", Ресурсы) + СтрЗаменить(ТекстУсловия, "#Измерение", ИмяИзмерения) + ЗарплатаКадрыОбщиеНаборыДанных.РазделительЗапросов();
			КонецЦикла;
		КонецЦикла;
		
		Запрос.Текст = ТекстОбращенияКРегистру + ТекстОбъединения + " УПОРЯДОЧИТЬ ПО ИдентификаторИсточника, Объект";
		
		Выборка = Запрос.Выполнить().Выбрать();
		НаборЗаписей = РегистрыСведений[ИмяПланаХарактеристик].СоздатьНаборЗаписей();
		Если ПараметрыОбновления.ИспользоватьОтборПоОбъектам Тогда
			Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторИсточника") Цикл
				НаборЗаписей.Отбор.ИдентификаторИсточника.Установить(Выборка.ИдентификаторИсточника);
				Пока Выборка.СледующийПоЗначениюПоля("Объект") Цикл
					НаборЗаписей.Отбор.Объект.Установить(Выборка.Объект);
					Пока Выборка.Следующий() Цикл
						ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
					КонецЦикла;
					
					НаборЗаписей.Записать();
					НаборЗаписей.Очистить();
				КонецЦикла;
			КонецЦикла;
		Иначе
			Пока Выборка.СледующийПоЗначениюПоля("ИдентификаторИсточника") Цикл
				НаборЗаписей.Отбор.ИдентификаторИсточника.Установить(Выборка.ИдентификаторИсточника);
				Пока Выборка.Следующий() Цикл
					ЗаполнитьЗначенияСвойств(НаборЗаписей.Добавить(), Выборка);
				КонецЦикла;
				
				НаборЗаписей.Записать();
				НаборЗаписей.Очистить();
			КонецЦикла;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьПодключаемыеХарактеристикиОтложено(ИмяПланаХарактеристик, ИсточникиДанных, ПараметрыОтложенногоОбновления)
	
	Запрос = Новый Запрос;
	
	ТекстПолученияДанных = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Источник.#Объект КАК Объект
	|ИЗ
	|	#РегистрСведенийИсточник КАК Источник
	|		ЛЕВОЕ СОЕДИНЕНИЕ #РегистрСведенийПриемник КАК Приемник
	|		ПО Источник.#Объект = Приемник.Объект
	|			И (Приемник.ИдентификаторИсточника = &ИдентификаторИсточника)
	|ГДЕ
	|	Приемник.Объект ЕСТЬ NULL ";
	ТекстПолученияДанных = СтрЗаменить(ТекстПолученияДанных, "#РегистрСведенийПриемник", "РегистрСведений." + ИмяПланаХарактеристик);
	
	ТекстШаблонаПолученияЗначений = 
	"ВЫБРАТЬ
	|	Источник.#Объект КАК Объект,
	|	""#Синоним"" КАК Свойство,
	|	Источник.#Ресурс КАК Значение
	|ИЗ
	|	#РегистрСведенийИсточник КАК Источник
	|ГДЕ
	|	Источник.#Объект В(&Объекты)";
	
	ЗаполнениеВыполнено = Истина;
	Для Каждого Источник Из ИсточникиДанных Цикл
		
		Запрос.Текст = СтрЗаменить(ТекстПолученияДанных, "#РегистрСведенийИсточник", "РегистрСведений." + Источник.ИмяРегистра);
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Объект", Источник.ИмяОбъекта);
		Запрос.УстановитьПараметр("ИдентификаторИсточника", Источник.ИдентификаторИсточника);
		
		Результат = Запрос.Выполнить();
		Если Результат.Пустой() Или Источник.ИспользоватьХарактеристики = Ложь Тогда
			ЗаполнениеВыполнено = (ЗаполнениеВыполнено И Истина);
			Продолжить;
		Иначе
			ЗаполнениеВыполнено = Ложь;
		КонецЕсли;
		
		// Создаем набор Данных
		ИспользоватьФильтрПоРесурсам = Источник.Реквизиты.Количество() > 0;
		МетаданныеРегистра  = Метаданные.РегистрыСведений.Найти(Источник.ИмяРегистра);
		
		ТекстПолученияЗначений = СтрЗаменить(ТекстШаблонаПолученияЗначений, "#РегистрСведенийИсточник", "РегистрСведений." + Источник.ИмяРегистра);
		ТекстПолученияЗначений = СтрЗаменить(ТекстПолученияЗначений, "#Объект", Источник.ИмяОбъекта);
		
		Запрос.Текст = "";
		ПервыйЗапросОбъединения = Истина;
		
		Для Каждого Ресурс Из МетаданныеРегистра.Ресурсы Цикл
			Если ИспользоватьФильтрПоРесурсам И Источник.Реквизиты.Найти(Ресурс.Имя) = Неопределено Тогда
				Продолжить;
			КонецЕсли;

			Если ПервыйЗапросОбъединения Тогда
				Запрос.Текст = СтрЗаменить(ТекстПолученияЗначений, "#Синоним", Ресурс.Синоним);
				ПервыйЗапросОбъединения = Ложь;
			Иначе
				Запрос.Текст = Запрос.Текст + "
				|
				|ОБЪЕДИНИТЬ ВСЕ
				|
				|" + СтрЗаменить(ТекстПолученияЗначений, "#Синоним", Ресурс.Синоним);
			КонецЕсли;
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "#Ресурс", Ресурс.Имя);
			
		КонецЦикла;
		
		Если ПустаяСтрока(Запрос.Текст) Тогда
			ЗаполнениеВыполнено = (ЗаполнениеВыполнено И Истина);
			Продолжить;
		КонецЕсли;
		
		ВыбранныеОбъекты = Результат.Выгрузить().ВыгрузитьКолонку("Объект");
		Запрос.УстановитьПараметр("Объекты", ВыбранныеОбъекты);
		Результат = Запрос.Выполнить();
		
		Если Результат.Пустой() Тогда
			ЗаполнениеВыполнено = (ЗаполнениеВыполнено И Истина);
			Продолжить;
		КонецЕсли;
		
		// Обновить характеристики по таблице
		ОбновитьНаборыПодключаемыхХарактеристикОпределяемымиЗначениями(Источник.ИдентификаторИсточника, ИмяПланаХарактеристик, Источник.ИспользоватьХарактеристики, Результат.Выгрузить(), ВыбранныеОбъекты, ПараметрыОтложенногоОбновления);
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОтложенногоОбновления, "ОбработкаЗавершена", ЗаполнениеВыполнено);
	
КонецПроцедуры

Процедура ОчиститьЗаписиХарактеристик(ИмяПланаХарактеристик, ТаблицаРесурсов, ПараметрыОбновления)
	
	ФильтрПоОбъектам = Неопределено;
	ИменаРегистров = ТаблицаРесурсов.ВыгрузитьКолонку("ИмяРегистра");
	ИменаРегистров = ОбщегоНазначенияКлиентСервер.СвернутьМассив(ИменаРегистров);
	
	НаборЗаписей = РегистрыСведений[ИмяПланаХарактеристик].СоздатьНаборЗаписей();
	
	ФильтрПоОбъектам = Неопределено;
	ФильтрРегистра = Новый Структура("ИмяРегистра");
	
	Для Каждого ИмяРегистра Из ИменаРегистров Цикл
		
		ФильтрРегистра.ИмяРегистра = ИмяРегистра;
		РесурсыРегистра = ТаблицаРесурсов.НайтиСтроки(ФильтрРегистра);
		ИдентификаторыИсточника = ОбщегоНазначения.ВыгрузитьКолонку(РесурсыРегистра, "ИдентификаторИсточника", Истина);
		
		Если ПараметрыОбновления.Свойство(ИмяРегистра, ФильтрПоОбъектам) Тогда
			Если ФильтрПоОбъектам <> Неопределено 
				И ТипЗнч(ФильтрПоОбъектам) <> Тип("Массив") Тогда
				ФильтрПоОбъектам = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ФильтрПоОбъектам);
			КонецЕсли;
		КонецЕсли;
		
		Для Каждого ИдентификаторИсточника Из ИдентификаторыИсточника Цикл
			НаборЗаписей.Отбор.ИдентификаторИсточника.Установить(ИдентификаторИсточника);
			Если ФильтрПоОбъектам = Неопределено Тогда
				НаборЗаписей.Записать();
			Иначе
				Для Каждого Объект Из ФильтрПоОбъектам Цикл
					НаборЗаписей.Отбор.Объект.Установить(Объект);
					НаборЗаписей.Записать();
				КонецЦикла;
			КонецЕсли;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ТипОбъектаПодключаемыхХарактеристик(ИмяПланаХарактеристик) 
	
	Тип = Тип("СправочникСсылка.Должности");
	Если ИмяПланаХарактеристик = "НачисленияПодключаемыеХарактеристики" Тогда
		Тип = Тип("ПланВидовРасчетаСсылка.Начисления");
	ИначеЕсли ИмяПланаХарактеристик = "ШтатноеРасписаниеПодключаемыеХарактеристики" Тогда
		Тип = Тип("СправочникСсылка.ШтатноеРасписание");
	КонецЕсли;
	
	Возврат Тип;
	
КонецФункции

Процедура ДобавитьОписаниеОбъектовИсточникаПодключаемыхХарактеристик(ПараметрыОбновленияПоОбъектам, ОписаниеИсточника)
	
	Если ТипЗнч(ОписаниеИсточника.ИмяПланаВидовХарактеристик) = Тип("Массив") Тогда
		ИменаПлановВидовХарактеристик = ОписаниеИсточника.ИмяПланаВидовХарактеристик;
	Иначе
		ИменаПлановВидовХарактеристик = СтроковыеФункцииКлиентСервер.РазложитьСтрокуВМассивПодстрок(ОписаниеИсточника.ИмяПланаВидовХарактеристик, ",", , Истина);
	КонецЕсли;
	
	Для Каждого ИмяПланаВидовХарактеристик Из ИменаПлановВидовХарактеристик Цикл
		ОписаниеОбъекта = ПараметрыОбновленияПоОбъектам[ИмяПланаВидовХарактеристик];
		Если ОписаниеОбъекта = Неопределено Тогда
			ОписаниеОбъекта = Новый Массив();
			ПараметрыОбновленияПоОбъектам.Вставить(ИмяПланаВидовХарактеристик, ОписаниеОбъекта);
		КонецЕсли;
		ОписаниеОбъекта.Добавить(ОписаниеИсточника);
	КонецЦикла;
	
КонецПроцедуры

Функция ВыделитьИсточникиСОбновлениемОпределяемымиЗначениями(ПараметрыОбновленияПоОбъектам)
	
	ПВХИсточников = Новый Соответствие;
	Для Каждого ПланХарактеристикОбъекта Из ПараметрыОбновленияПоОбъектам Цикл
		ИмяПВХ = ПланХарактеристикОбъекта.Ключ;
		ОписаниеИсточников = ПланХарактеристикОбъекта.Значение;
		
		Источники = Новый Массив;
		КоличествоИсточников = ОписаниеИсточников.Количество();
		Для ОбратныйИндекс = 1 По КоличествоИсточников Цикл
			Индекс = КоличествоИсточников - ОбратныйИндекс;
			ПараметрыИсточника = ОписаниеИсточников[Индекс];
			Если ПараметрыИсточника.ОбновлятьОпеределяемымиЗначениями Тогда
				Источники.Добавить(ОписаниеИсточников[Индекс]);
				ОписаниеИсточников.Удалить(Индекс);
			КонецЕсли;
		КонецЦикла;
		Если Источники.Количество() > 0 Тогда
			ПВХИсточников.Вставить(ИмяПВХ, Источники);
		КонецЕсли;
	КонецЦикла;
	
	Возврат ПВХИсточников;
	
КонецФункции

#КонецОбласти
