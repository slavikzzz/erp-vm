////////////////////////////////////////////////////////////////////////////////
// Процедуры подсистемы "Внеоборотные активы".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Открывает форму ввода адреса с заполненными из параметра значениями полей адреса.
//
// Параметры:
//  Форма				 - ФормаКлиентскогоПриложения - форма, в которой расположен ввода адреса;
//  Элемент				 - ПолеФормы - элемент формы для ввода адреса;
//  Объект				 - ДанныеФормыКоллекция - объект, для которого выполняется событие;
//  ИмяРеквизитаАдреса	 - Строка - имя реквизита;
//  СтандартнаяОбработка - Булево - признак выполнения стандартной обработки события начало выбора.
//
Процедура ОткрытьФормуВыбораАдресаИОбработатьРезультат(Форма, Элемент, Объект, ИмяРеквизитаАдреса = "АдресМестонахождения", СтандартнаяОбработка = Ложь) Экспорт
	
	СтандартнаяОбработка = Ложь;
	
	ПриИзмененииПредставленияАдреса(Элемент, Объект[ИмяРеквизитаАдреса], Объект[ИмяРеквизитаАдреса + "Значение"]);
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма", Форма);
	ДополнительныеПараметры.Вставить("Объект", Объект);
	ДополнительныеПараметры.Вставить("ИмяРеквизитаАдреса", ИмяРеквизитаАдреса);
	
	Оповещение = Новый ОписаниеОповещения("ОткрытьФормуВыбораАдресаИОбработатьРезультатЗавершение", 
		ЭтотОбъект, ДополнительныеПараметры);
		
	ВидКонтактнойИнформации = Новый Структура;
	ВидКонтактнойИнформации.Вставить("Тип", ПредопределенноеЗначение("Перечисление.ТипыКонтактнойИнформации.Адрес"));
	ВидКонтактнойИнформации.Вставить("ТолькоНациональныйАдрес", Ложь);
	ВидКонтактнойИнформации.Вставить("ВключатьСтрануВПредставление", Ложь);
	ВидКонтактнойИнформации.Вставить("СкрыватьНеактуальныеАдреса", Ложь);
		
	ПараметрыФормыКонтактнойИнформации = УправлениеКонтактнойИнформациейКлиент.ПараметрыФормыКонтактнойИнформации(
			ВидКонтактнойИнформации,
			Объект[ИмяРеквизитаАдреса + "Значение"],
			Объект[ИмяРеквизитаАдреса]);
	
	УправлениеКонтактнойИнформациейКлиент.ОткрытьФормуКонтактнойИнформации(ПараметрыФормыКонтактнойИнформации,, Оповещение);
		
КонецПроцедуры

// Актуализирует КИ из текста редактирования поля ввода.
//
// Параметры:
//  Элемент - ПолеФормы - элемент формы для ввода адреса;
//  АдресПредставление - Строка - представление адреса;
//  АдресЗначение - Строка - служебная информация, значения полей адреса.
//
Процедура ПриИзмененииПредставленияАдреса(Элемент, АдресПредставление, АдресЗначение) Экспорт
	
	АдресПредставление = Элемент.ТекстРедактирования;
	ОбщегоНазначенияУТВызовСервера.ЗаполнитьЗначенияПолейКИПоПредставлению(АдресПредставление, АдресЗначение);
	
КонецПроцедуры

// Оповещает об изменении регистра ДокументыПоОС.
// 
Процедура ОповеститьОЗаписиДокументаВЖурналОС() Экспорт
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ДокументыПоОС"));
	Оповестить("ЗаписьДокументаВЖурналОС");
	
КонецПроцедуры

// Оповещает об изменении регистра ДокументыПоНМА.
// 
Процедура ОповеститьОЗаписиДокументаВЖурналНМА() Экспорт
	
	ОповеститьОбИзменении(Тип("РегистрСведенийКлючЗаписи.ДокументыПоНМА"));
	Оповестить("ЗаписьДокументаВЖурналНМА");
	
КонецПроцедуры

#Область Штрихкоды

// Получает данные для печати и открывает форму Обработка.ПечатьЭтикетокОбъектовЭксплуатации.Форма.ФормаОбъектыЭксплуатации.
//
// Параметры:
//	ОписаниеКоманды - Структура - структура с описанием команды.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьЭтикетокОбъектовЭксплуатации(ОписаниеКоманды) Экспорт
	
	ОткрытьФорму(
		"Обработка.ПечатьЭтикетокОбъектовЭксплуатации.Форма.ФормаОбъектыЭксплуатации",
		Новый Структура("ОбъектыЭксплуатации", ОписаниеКоманды.ОбъектыПечати),
		ОписаниеКоманды.Форма,
		Новый УникальныйИдентификатор);
	
	Возврат Неопределено;
	
КонецФункции

// Получает данные для печати и открывает форму Обработка.ПечатьЭтикетокОбъектовЭксплуатации.Форма.ФормаОбъектыЭксплуатации.
//
// Параметры:
//	ОписаниеКоманды - Структура - структура с описанием команды:
//	                    * Идентификатор - Строка - Может принимать значения "Ценники" или "Этикетки";
//	                    * ОбъектыПечати - Массив - Объекты печати.
//
// Возвращаемое значение:
//	Неопределено - Ничего не возвращает.
//
Функция ПечатьЭтикетокОбъектовЭксплуатацииИзДокумента(ОписаниеКоманды) Экспорт
	
	ДополнительныеПараметры = Новый Структура("МенеджерПечати", ОписаниеКоманды.МенеджерПечати);
	
	ДанныеДляПечати =
		УправлениеПечатьюУТВызовСервера.ДанныеДляПечатиЦенниковИЭтикеток(
			ОписаниеКоманды.Идентификатор,
			ОписаниеКоманды.ОбъектыПечати,
			ДополнительныеПараметры);
	
	ОткрытьФорму(
		"Обработка.ПечатьЭтикетокОбъектовЭксплуатации.Форма.ФормаОбъектыЭксплуатации",
		Новый Структура("ОбъектыЭксплуатации", ДанныеДляПечати),
		ОписаниеКоманды.Форма,
		Новый УникальныйИдентификатор);
	
	Возврат Неопределено;
	
КонецФункции

// Выполняет поиск объектов эксплуатации по штрихкоду.
// Открывает форму, где пользователь вводит штрихкод.
// После ввода выполняется поиск.
// Если найдено несколько ОЭ, то открывается форма для выбора.
// После успешного поиска возвращает массив ссылок.
// 
// Параметры:
// 	ПроцедураОбработки - ОписаниеОповещения - Процедура, которую нужно вызвать при успешном поиске.
//  ПараметрыПодбора - см. ОбщегоНазначенияУТКлиентСервер.ПараметрыПодбора
Процедура ПоискОбъектовЭксплуатацииПоШтрихкоду(ПроцедураОбработки, ПараметрыПодбора = Неопределено) Экспорт
	
	ДополнительныеПараметры = Новый Структура("ПроцедураОбработки, ПараметрыПодбора", ПроцедураОбработки, ПараметрыПодбора);
	Оповещение = Новый ОписаниеОповещения("ПоискОбъектовЭксплуатацииПоШтрихкодуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
	ШтрихкодированиеНоменклатурыКлиент.ПоказатьВводШтрихкода(Оповещение);
	
КонецПроцедуры

// Обработка ввода штрихкода.
// 
// Параметры:
//  ДанныеШтрихкодов - Структура, Массив из Строка - Данные штрихкодов.
// 	ПроцедураОбработки - ОписаниеОповещения - Процедура, которую нужно вызвать при успешном поиске.
//  ПараметрыПодбора - см. ОбщегоНазначенияУТКлиентСервер.ПараметрыПодбора
Процедура ОбработатьВводШтрихкодовОбъектовЭксплуатации(ДанныеШтрихкодов, ПроцедураОбработки, ПараметрыПодбора = Неопределено) Экспорт
	
	РезультатПоиска = ВнеоборотныеАктивыВызовСервера.НайтиОбъектыЭксплуатацииПоШтрихкодам(
						ДанныеШтрихкодов, ПараметрыПодбора);
	
	Если РезультатПоиска.МассивОбъектов.Количество() = 0 Тогда
		
		СообщитьОРезультатахПоискаОбъектовЭксплуатацииПоШтрихкоду(РезультатПоиска);
	
	ИначеЕсли РезультатПоиска.МассивОбъектов.Количество() = 1 Тогда
		
		ВыполнитьОбработкуОповещения(ПроцедураОбработки, РезультатПоиска.МассивОбъектов);
	
	Иначе
		
		ДополнительныеПараметры = Новый Структура("ПроцедураОбработки", ПроцедураОбработки);
		Оповещение = Новый ОписаниеОповещения("ВыборОбъектовЭксплуатацииПоШтриходуЗавершение", ЭтотОбъект, ДополнительныеПараметры);
		
		Параметры = Новый Структура;
		Параметры.Вставить("ДанныеШтрихкодов", ДанныеШтрихкодов);
		Параметры.Вставить("ПараметрыПодбора", ПараметрыПодбора);
		Параметры.Вставить("МассивОбъектов", РезультатПоиска.МассивОбъектов);
		Параметры.Вставить("ПоискОбъектовЭксплуатации", Истина);
		Параметры.Вставить("ПоискУзлов", Ложь);
		ОткрытьФорму("Справочник.ОбъектыЭксплуатации.Форма.ПоискПоШтрихкоду", Параметры,,,,, Оповещение);
	
	КонецЕсли;
	
КонецПроцедуры

// Сообщает о результатах поиска по штрихкоду.
// 
// Параметры:
// 	РезультатПоиска - см. ВнеоборотныеАктивы.НайтиОбъектыПоШтрихкодам
Процедура СообщитьОРезультатахПоискаОбъектовЭксплуатацииПоШтрихкоду(РезультатПоиска) Экспорт
	
	ОчиститьСообщения();
	
	ШаблонСообщения = НСтр("ru = 'Не удалось найти объекты эксплуатации по штрихкоду %1';
							|en = 'Cannot find assets by barcode %1'");
	Для каждого Штрихкод Из РезультатПоиска.НеНайдены Цикл
		ТекстСообщения = СтрШаблон(ШаблонСообщения, Штрихкод);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения); 
	КонецЦикла; 
	
	ШаблонСообщения = НСтр("ru = 'Объект эксплуатации ""%1"" не может быть добавлен в документ, т.к. он не удовлетворяет условиям выбора';
							|en = 'The asset ""%1"" cannot be added to the document, as it does not meet selection conditions'");
	Для каждого СсылкаНаОбъект Из РезультатПоиска.НеПодходят Цикл
		ТекстСообщения = СтрШаблон(ШаблонСообщения, СсылкаНаОбъект);
		ОбщегоНазначенияКлиент.СообщитьПользователю(ТекстСообщения, СсылкаНаОбъект); 
	КонецЦикла; 
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПриИзмененииСрокаИспользования(Объект, ИмяРеквизита, ОбновитьСрокИспользования) Экспорт
	
	СписокРеквизитов = ИмяРеквизита;
	
	Если ИмяРеквизита <> "СрокИспользованияУУ"
		И Объект.ОтражатьВУпрУчете
		И (Объект.СрокИспользованияУУ = 0
			ИЛИ ОбновитьСрокИспользования) Тогда
		
		Объект.СрокИспользованияУУ = Объект[ИмяРеквизита];
		СписокРеквизитов = СписокРеквизитов + ",СрокИспользованияУУ";
		
	КонецЕсли;
	
	Если ИмяРеквизита <> "СрокИспользованияБУ"
		И Объект.ОтражатьВУпрУчете
		И (Объект.СрокИспользованияБУ = 0
			ИЛИ ОбновитьСрокИспользования) Тогда
		
		Объект.СрокИспользованияБУ = Объект[ИмяРеквизита];
		СписокРеквизитов = СписокРеквизитов + ",СрокИспользованияБУ";
		
	КонецЕсли;
	
	Если ИмяРеквизита <> "СрокИспользованияНУ"
		И Объект.ОтражатьВРеглУчете
		И (Объект.СрокИспользованияНУ = 0
			ИЛИ ОбновитьСрокИспользования) Тогда
		
		Объект.СрокИспользованияНУ = Объект[ИмяРеквизита];
		СписокРеквизитов = СписокРеквизитов + ",СрокИспользованияНУ";
		
	КонецЕсли;
	
	Возврат СписокРеквизитов;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ОбработкаДействияПодробнееФормыЗакрытияМесяцаЭтапаНачислениеАмортизацииОС(Параметры) Экспорт

	ОбработкаВыполнена = ВнеоборотныеАктивыКлиентЛокализация.ОбработкаДействияПодробнееФормыЗакрытияМесяцаЭтапаНачислениеАмортизацииОС(Параметры);

	Если НЕ ОбработкаВыполнена Тогда 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Период", Параметры.Период);
		ПараметрыФормы.Вставить("МассивОрганизаций", Параметры.МассивОрганизаций);
		ОткрытьФорму("Документ.АмортизацияОС2_4.ФормаСписка", ПараметрыФормы);
	КонецЕсли; 
			
	Возврат Истина;
	
КонецФункции

Функция ОбработкаДействияПодробнееФормыЗакрытияМесяцаЭтапаНачислениеАмортизацииНМА(Параметры) Экспорт

	ОбработкаВыполнена = ВнеоборотныеАктивыКлиентЛокализация.ОбработкаДействияПодробнееФормыЗакрытияМесяцаЭтапаНачислениеАмортизацииНМА(Параметры);

	Если НЕ ОбработкаВыполнена Тогда 
		ПараметрыФормы = Новый Структура;
		ПараметрыФормы.Вставить("Период", Параметры.Период);
		ПараметрыФормы.Вставить("МассивОрганизаций", Параметры.МассивОрганизаций);
		ОткрытьФорму("Документ.АмортизацияНМА2_4.ФормаСписка", ПараметрыФормы);
	КонецЕсли; 
			
	Возврат Истина;
	
КонецФункции

Процедура ОповеститьОРасчетеАмортизации(РезультатРасчета, Период = Неопределено) Экспорт
	
	Если РезультатРасчета = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатРасчета.ЕстьОшибки Тогда
		
		Если ЗначениеЗаполнено(РезультатРасчета.ТекстОшибки) Тогда
			ВызватьИсключение РезультатРасчета.ТекстОшибки
		Иначе
			ТекстПояснения = НСтр("ru = 'При расчете возникли ошибки';
									|en = 'Errors occurred while calculating'");
			КартинкаОповещения = БиблиотекаКартинок.АмортизацияСОшибкой;
			ПоказатьОповещениеПользователя(,, ТекстПояснения, КартинкаОповещения);
		КонецЕсли;
		
	Иначе
		ТекстПояснения = НСтр("ru = 'Амортизация рассчитана';
								|en = 'Depreciation is calculated'");
		КартинкаОповещения = БиблиотекаКартинок.АмортизацияРассчитана;
		ПоказатьОповещениеПользователя(,, ТекстПояснения, КартинкаОповещения);
	КонецЕсли;	
	
КонецПроцедуры

Процедура ОткрытьФормуВыбораАдресаИОбработатьРезультатЗавершение(Результат, ДополнительныеПараметры) Экспорт 
	
	Если ТипЗнч(Результат) <> Тип("Структура") Тогда
		Возврат;
	КонецЕсли;
	
	Форма = ДополнительныеПараметры.Форма;
	Объект = ДополнительныеПараметры.Объект;
	ИмяРеквизитаАдреса= ДополнительныеПараметры.ИмяРеквизитаАдреса;
		
	// Перенесем данные в форму
	Объект[ИмяРеквизитаАдреса + "Значение"] = Результат.Значение;
	Объект[ИмяРеквизитаАдреса] = Результат.Представление;
	
	Форма.Модифицированность = Истина;
	Форма.ОбновитьОтображениеДанных();

КонецПроцедуры

Процедура ПоискОбъектовЭксплуатацииПоШтрихкодуЗавершение(ДанныеШтрихкодов, ДополнительныеПараметры) Экспорт
	
	ОбработатьВводШтрихкодовОбъектовЭксплуатации(
		ДанныеШтрихкодов, 
		ДополнительныеПараметры.ПроцедураОбработки, 
		ДополнительныеПараметры.ПараметрыПодбора);
	
КонецПроцедуры

Процедура ВыборОбъектовЭксплуатацииПоШтриходуЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) = Тип("Массив") И Результат.Количество() <> 0 Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ПроцедураОбработки, Результат);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОткрытьГрафикОплатИНачислений(Объект, Форма, АдресГрафиков, ОписаниеОповещения, ИмяГрафика) Экспорт
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("ИмяГрафика", ИмяГрафика);
	ПараметрыФормы.Вставить("Договор", Объект.Договор);
	ПараметрыФормы.Вставить("ТолькоПросмотр", Форма.ТолькоПросмотр);
	ПараметрыФормы.Вставить("СлужебныеПараметрыФормы", Форма.СлужебныеПараметрыФормы);
	ПараметрыФормы.Вставить("ПроцентнаяСтавка", Объект.ПроцентнаяСтавка);
	ПараметрыФормы.Вставить("СтавкаНДС", Объект.СтавкаНДС);
	ПараметрыФормы.Вставить("ДатаНачалаАренды", Объект.ДатаНачалаАренды);
	ПараметрыФормы.Вставить("СуммаВыкупаПредметовАренды", Объект.СуммаВыкупаПредметовАренды);
	ПараметрыФормы.Вставить("СуммаНДСВыкупаПредметовАренды", Объект.СуммаНДСВыкупаПредметовАренды);
	ПараметрыФормы.Вставить("ПриведеннаяСтоимость", Объект.ПриведеннаяСтоимость);
	ПараметрыФормы.Вставить("ВалютаДокументаПредставление", Форма.ВалютаДокументаПредставление);
	ПараметрыФормы.Вставить("ГрафикНачисленияПроцентовВведенВручную", Объект.ГрафикНачисленияПроцентовВведенВручную);
	ПараметрыФормы.Вставить("ГрафикиДоговора", АдресГрафиков);
	Если УчетАрендованныхОСКлиентСервер.ЭтоИзменениеУсловийАренды(Объект) Тогда
		ПараметрыФормы.Вставить("ДатаИзмененияАренды", НачалоДня(Объект.Дата));
	Иначе
		ПараметрыФормы.Вставить("ДатаИзмененияАренды", '00010101');
	КонецЕсли;
	
	ОткрытьФорму("Справочник.ДоговорыАренды.Форма.ГрафикОплатИНачислений", ПараметрыФормы,,,,, ОписаниеОповещения);
	
КонецПроцедуры

//++ НЕ УТКА

Процедура ОткрытьПроводкиМеждународногоУчета(Знач Ссылка) Экспорт

	ПараметрыОтбора = Новый Структура("Регистратор", Ссылка);
	ПараметрыФормы = Новый Структура("Отбор", ПараметрыОтбора);
	ОткрытьФорму("Обработка.ОтражениеДокументовВМеждународномУчете.Форма.ПроводкиМеждународногоУчета", ПараметрыФормы,, Ссылка);
	
КонецПроцедуры

//-- НЕ УТКА

#КонецОбласти
