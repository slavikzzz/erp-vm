#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив Из Строка - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("УчетУСНПСН");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений Из Строка - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаКУДиР(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры


//++ НЕ УТ

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	ТекстыОтражения = Новый Массив;
	
#Область ПоступлениеАвансаОтРозничногоКлиентаНаличныеЭквайинг
	ТекстЗапроса = 
	"ВЫБРАТЬ //// Поступление аванса от розничного клиента (Эквайринг) (Дт 57.03, 50.02 :: Кт 76.09)
	|	Строки.Регистратор КАК Ссылка,
	|	Строки.Период КАК Период,
	|	Строки.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	Строки.СуммаПостоплатыРегл + Строки.СуммаПредоплатыРегл КАК Сумма,
	|	Строки.СуммаПостоплаты + Строки.СуммаПредоплаты КАК СуммаУУ,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера)
	|		ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ПродажиПоЭквайрингу)
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВидСчетаДт,
	|	ЕСТЬNULL(ДоговорыЭквайринга.Ссылка, НЕОПРЕДЕЛЕНО) КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|
	|	Строки.ВалютаПлатежа КАК ВалютаДт,
	|	ЕСТЬNULL(ДоговорыЭквайринга.Подразделение, Строки.Подразделение) КАК ПодразделениеДт,
	|	ЕСТЬNULL(ДоговорыЭквайринга.НаправлениеДеятельности, ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка)) КАК НаправлениеДеятельностиДт,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера)
	|		ТОГДА НЕОПРЕДЕЛЕНО
	|		ИНАЧЕ ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ОперационнаяКасса)
	|	КОНЕЦ КАК СчетДт,
	|
	|	ЕСТЬNULL(ДоговорыЭквайринга.Контрагент, Строки.СтатьяДвиженияДенежныхСредств) КАК СубконтоДт1,
	|	ЕСТЬNULL(ДоговорыЭквайринга.Ссылка, НЕОПРЕДЕЛЕНО) КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	ВЫБОР
	|		КОГДА Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера)
	|		ТОГДА Строки.СуммаПостоплатыВВалютеПлатежа + Строки.СуммаПредоплатыВВалютеПлатежа
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.РасчетыПоПодарочнымСертификатам) КАК ВидСчетаКт,
	|	Строки.ОбъектРасчетов.Владелец КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|
	|	Строки.ВалютаПлатежа КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|
	|	Строки.Контрагент КАК СубконтоКт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	Строки.СуммаПостоплатыВВалютеПлатежа + Строки.СуммаПредоплатыВВалютеПлатежа КАК ВалютнаяСуммаКт,
	|	0 КАК КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	ВЫБОР
	|		КОГДА Строки.ТипДенежныхСредств = ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера)
	|		ТОГДА ""Поступление аванса от розничного клиента (эквайринг)""
	|		ИНАЧЕ ""Поступление аванса от розничного клиента (наличные)""
	|	КОНЕЦ КАК Содержание
	|
	|ИЗ 
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		РегистрНакопления.ДвиженияДенежныеСредстваКонтрагент КАК Строки
	|	ПО
	|		ДокументыКОтражению.Ссылка = Строки.Регистратор
	|		И Строки.ТипДенежныхСредств В (ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.ДенежныеСредстваУЭквайера),
	|										ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные))
	|		И НЕ Строки.Сторно
	|		
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		Справочник.ДоговорыЭквайринга КАК ДоговорыЭквайринга
	|	ПО
	|		Строки.ДенежныеСредства = ДоговорыЭквайринга.Ссылка";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	Возврат "";
	
КонецФункции

//++ Локализация

Функция ТекстЗапросаТаблицаКУДиР(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "КнигаУчетаДоходовИРасходов";
	
	Если НЕ ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	Если НЕ ПроведениеДокументов.ЕстьТаблицаЗапроса("ВтТаблицаСуммаПлатежнымиКартами", ТекстыЗапроса) Тогда
		Документы.РеализацияПодарочныхСертификатов.ТекстЗапросаВтТаблицаСуммаПлатежнымиКартами(Запрос, ТекстыЗапроса);
	КонецЕсли;
	
	Если Не Запрос.Параметры.Свойство("КоэффициентПересчетаВВалютуРегл") Тогда
		
		Коэффициенты = РаботаСКурсамиВалютУТ.ПолучитьКоэффициентыПересчетаВалюты(
			Запрос.Параметры.Валюта, Запрос.Параметры.Валюта, Запрос.Параметры.Период, Запрос.Параметры.Организация);
	
		Запрос.УстановитьПараметр("КоэффициентПересчетаВВалютуРегл", Коэффициенты.КоэффициентПересчетаВВалютуРегл);
		
	КонецЕсли;
	
	Если Запрос.Параметры.НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		ДействующиеПатенты = Справочники.Патенты.ПолучитьДействующиеПатентыНаДату(Запрос.Параметры.Организация, Запрос.Параметры.Подразделение, Запрос.Параметры.Период);
	Иначе
		ДействующиеПатенты = Новый Массив;
	КонецЕсли;
	ДействующийПатент = ?(ДействующиеПатенты.Количество() = 1, ДействующиеПатенты.Получить(0), Справочники.Патенты.ПустаяСсылка());
	Запрос.УстановитьПараметр("Патент", ДействующийПатент);
	ПараметрыУчетаОрганизации = УчетНДСУП.ПараметрыУчетаПоОрганизации(Запрос.Параметры.Организация, Запрос.Параметры.Период);
	Если НЕ ЗначениеЗаполнено(ПараметрыУчетаОрганизации.СтавкаНДСПриУСН) Тогда
		ОсновнаяСтавкаНДС = УчетНДСУП.СтавкаНДСПоУмолчанию(Запрос.Параметры.Организация, Запрос.Параметры.Период);
		Если ЗначениеЗаполнено(ОсновнаяСтавкаНДС) Тогда
			ОсновнаяСтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОсновнаяСтавкаНДС, "Ставка");
		Иначе
			ОсновнаяСтавкаНДС = 0;
		КонецЕсли;
	Иначе
		ОсновнаяСтавкаНДС = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыУчетаОрганизации.СтавкаНДСПриУСН, "Ставка");
	КонецЕсли;
	Запрос.УстановитьПараметр("СтавкаНДС", ОсновнаяСтавкаНДС);
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	&Период КАК Период,
	|	&Ссылка КАК Регистратор,
	|	&Организация КАК Организация,
	|	&Ссылка КАК ДокументВозникновенияДоходовРасходов,
	|	ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|		- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0))) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) КАК Графа4,
	|	ВЫБОР КОГДА НЕ &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|		И ДанныеДокумента.СуммаДокумента - (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0)) > 0
	|		ТОГДА ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|			- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0))) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0 КОНЕЦ КАК Графа5,
	|	(0) КАК Графа6,
	|	(0) КАК Графа7,
	|	ВЫБОР КОГДА НЕ &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|											ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|		И ДанныеДокумента.СуммаДокумента - (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0)) > 0
	|		ТОГДА &СтавкаНДС*ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|			- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0))) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2)) / (100 + &СтавкаНДС)
	|		ИНАЧЕ 0 КОНЕЦ КАК НДС,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД)
	|		ТОГДА ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|				- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0))) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0 КОНЕЦ КАК ДоходЕНВД,
	|	ВЫБОР КОГДА &НалогообложениеНДС = ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту)
	|		И ДанныеДокумента.СуммаДокумента
	|		- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0)) > 0
	|		ТОГДА ВЫРАЗИТЬ((ДанныеДокумента.СуммаДокумента
	|			- (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0))) * &КоэффициентПересчетаВВалютуРегл КАК ЧИСЛО(31,2))
	|		ИНАЧЕ 0 КОНЕЦ КАК ДоходПатент,
	|	&Патент КАК Патент,
	|	ДанныеДокумента.Номер КАК Номер,
	|	&Период КАК Дата,
	|	&ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Перечисление.ТипыДенежныхСредств.Наличные) КАК ТипДенежныхСредств,
	|	НЕОПРЕДЕЛЕНО КАК Статья
	|	
	|ИЗ
	|	Документ.РеализацияПодарочныхСертификатов КАК ДанныеДокумента
	|   	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Константы КАК Константы
	|   	ПО ИСТИНА
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтТаблицаСуммаПлатежнымиКартами КАК ТаблицаОплатаПлатежнымиКартами
	|		ПО ИСТИНА
	|ГДЕ
	|	ДанныеДокумента.Ссылка = &Ссылка
	|	И Константы.ДатаНачалаПризнанияДоходовОтчетомОРозничныхПродажах <= &Период
	|	И ДанныеДокумента.СуммаДокумента - (ЕСТЬNULL(ТаблицаОплатаПлатежнымиКартами.Сумма, 0)) > 0";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	Возврат ТекстЗапроса;
	
КонецФункции

//-- Локализация

//-- НЕ УТ

#КонецОбласти

#Область Фискализация

//++ Локализация

// Определяет систему налогообложения по документу
// 
// Параметры:
// 	ДокументСсылка - ДокументСсылка - Документ для определения системы налогообложения
// Возвращаемое значение:
// 	ПеречислениеСсылка.ТипыСистемНалогообложенияККТ - Система налогообложения по документу
Функция СистемаНалогообложенияПоДокументу(ДокументСсылка) Экспорт
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(ДокументСсылка, "Организация, КассаККМ");
	РеквизитыКассыККМ = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(РеквизитыДокумента.КассаККМ, "Склад, Подразделение");
	
	НалогообложениеНДС = УчетНДСУП.ПараметрыУчетаПоОрганизации(РеквизитыДокумента.Организация, ТекущаяДатаСеанса(), РеквизитыКассыККМ.Склад, РеквизитыКассыККМ.Подразделение).НалогообложениеНДСРозничнойПродажи;
	
	Если НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.ЕНВД;
	ИначеЕсли НалогообложениеНДС = Перечисления.ТипыНалогообложенияНДС.ПродажаПоПатенту Тогда
		СистемаНалогообложения = Перечисления.ТипыСистемНалогообложенияККТ.Патент;
	Иначе
		СистемаНалогообложения = РозничныеПродажиЛокализация.СистемаНалогообложенияФискальнойОперации(РеквизитыДокумента.Организация);
	КонецЕсли;
	
	Возврат СистемаНалогообложения;
	
КонецФункции

// Получить основные данные по таблице товаров для чека о розничной продаже
//
// Параметры:
//  ДокументСсылка - ДокументОбъект.РеализацияПодарочныхСертификатов - Документ.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Данные о продажах:
//  * НомерСтроки - Число -
//  * Номенклатура - Строка -
//  * Характеристика - Строка - 
//  * ТипНоменклатуры - Неопределено - 
//  * ПодакцизныйТовар - Булево - 
//  * НоменклатураНаименование - Строка - 
//  * ХарактеристикаНаименование - Строка - 
//  * Упаковка - Строка - 
//  * УпаковкаНаименование - Строка - 
//  * Количество - Число - 
//  * КоличествоУпаковок - Число - 
//  * Цена - Число - 
//  * СуммаСНДС - Число - 
//  * СтавкаНДС - СправочникСсылка.СтавкиНДС - 
//  * СуммаНДС - Число - 
//  * СуммаСкидки - Число - 
Функция ПредметыРасчетовПоДокументу(ДокументСсылка) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	РеквизитыДокумента = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		ДокументСсылка,
		"Дата, Организация, НалогообложениеНДС");
		
	СтавкаНДС = УчетНДСУП.СтавкаНДСПоНоменклатуреИНалогообложению(
		Неопределено,
		РеквизитыДокумента.НалогообложениеНДС,
		РеквизитыДокумента.Организация,
		РеквизитыДокумента.Дата);
	
	СтавкаНДСЧислом = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(СтавкаНДС, "Ставка");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПодарочныеСертификаты.НомерСтроки,
	|	ПодарочныеСертификаты.ПодарочныйСертификат.Наименование КАК Номенклатура,
	|	""""                                             		КАК Характеристика,
	|	""""                                             		КАК Упаковка,
	|
	|	1 														КАК Количество,
	|	1 														КАК КоличествоУпаковок,
	|
	|	ПодарочныеСертификаты.Сумма 							КАК Цена,
	|	ПодарочныеСертификаты.Сумма								КАК СуммаСНДС,
	|
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.СтавкиНДС.БезНДС)
	|		ИНАЧЕ &СтавкаНДС
	|	КОНЕЦ 													КАК СтавкаНДС,
	|
	|	ВЫБОР
	|		КОГДА &НалогообложениеНДС В (ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаОблагаетсяЕНВД),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаНеОблагаетсяНДС),
	|				ЗНАЧЕНИЕ(Перечисление.ТипыНалогообложенияНДС.ПродажаПоПатенту))
	|			ИЛИ &СтавкаНДСЧислом = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(ПодарочныеСертификаты.Сумма / (100 + &СтавкаНДСЧислом) * &СтавкаНДСЧислом КАК ЧИСЛО(31,2))
	|	КОНЕЦ 													КАК СуммаНДС,
	|	
	|	0														КАК СуммаСкидки
	|	
	|ПОМЕСТИТЬ ТаблицаТовары
	|ИЗ
	|	Документ.РеализацияПодарочныхСертификатов.ПодарочныеСертификаты КАК ПодарочныеСертификаты
	|ГДЕ
	|	ПодарочныеСертификаты.Ссылка = &Ссылка
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.НомерСтроки,
	|	Товары.Номенклатура,
	|
	|	НЕОПРЕДЕЛЕНО					КАК ТипНоменклатуры,
	|	ЛОЖЬ							КАК ПодакцизныйТовар,
	|	
	|	Товары.Номенклатура   			КАК НоменклатураНаименование,
	|	Товары.Характеристика 			КАК ХарактеристикаНаименование,
	|	Товары.Упаковка					КАК УпаковкаНаименование,
	|	
	|	Товары.Характеристика,
	|	Товары.Упаковка,
	|	Товары.Количество,
	|	Товары.КоличествоУпаковок,
	|	Товары.Цена,
	|	Товары.СуммаСНДС,
	|	Товары.СтавкаНДС,
	|	Товары.СуммаНДС,
	|	Товары.СуммаСкидки
	|ИЗ
	|	ТаблицаТовары КАК Товары
	|
	|УПОРЯДОЧИТЬ ПО
	|	Товары.НомерСтроки
	|";
	Запрос.УстановитьПараметр("Ссылка"            , ДокументСсылка);
	Запрос.УстановитьПараметр("НалогообложениеНДС", РеквизитыДокумента.НалогообложениеНДС);
	Запрос.УстановитьПараметр("СтавкаНДС"         , СтавкаНДС);
	Запрос.УстановитьПараметр("СтавкаНДСЧислом"   , СтавкаНДСЧислом);
	
	ПредметыРасчетов = Запрос.Выполнить().Выгрузить();
	
	Возврат ПредметыРасчетов;
	
КонецФункции

//-- Локализация

// Определяет и возвращает статус, является ли организации плательщиком НДС
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации - Организация, по которой определяется, облагается ли она НДС
// 	ОрганизацияПлательщикНДС - Булево - Параметр для сохранения и передачи во вне значения
Процедура ОбновитьОрганизацияПлательщикНДС(Организация, ОрганизацияПлательщикНДС) Экспорт
	
	//++ Локализация
	ОрганизацияПлательщикНДС = УчетнаяПолитика.ПлательщикНДС(Организация, ТекущаяДатаСеанса())
		И НЕ УчетнаяПолитика.ПрименяетсяОсвобождениеОтУплатыНДС(Организация, ТекущаяДатаСеанса());
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти