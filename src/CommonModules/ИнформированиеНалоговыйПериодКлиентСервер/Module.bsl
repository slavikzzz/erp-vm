#Область ПрограммныйИнтерфейс

// Конструктор объекта, содержащего тексты, информирующие пользователя об особенностях первого налогового периода организации,
// зарегистрированной в конце стандартного налогового (отчетного) периода.
//
// Параметры:
//  Заголовок	 - Строка - основной текст, выводится в качестве заголовка поля информирования
//  Подсказка	 - Строка - подсказка, выводится по отдельной кнопке.
// 
// Возвращаемое значение:
//  Структура - см. тело функции
//
Функция НовыйИнформация(Заголовок, Подсказка) Экспорт
	
	Информация = Новый Структура;
	Информация.Вставить("Заголовок", Заголовок);
	Информация.Вставить("Подсказка", Подсказка);
	
	Возврат Информация;
	
КонецФункции

// Формирует представление периода для целей налоговой и иной отчетности, с учетом особенностей первого налогового периода организации,
// зарегистрированной в конце стандартного налогового (отчетного) периода.
// Так, если организация зарегистрирована 01 декабря, то представлением отчетного периода с 01 декабря по 31 марта будет "1 квартал".
//
// Параметры:
//  НачалоПериода				 - Дата - начало фактического периода
//  КонецПериода				 - Дата	- конец фактического периода
//  ОписаниеНалоговогоПериода	 - Структура - результат ИнтерфейсыВзаимодействияБРО.БлижайшийНалоговыйПериод().
// 
// Возвращаемое значение:
//  Строка - представление налогового периода.
//
Функция ПредставлениеНалоговогоПериода(НачалоПериода, КонецПериода, ОписаниеНалоговогоПериода) Экспорт
	
	Если НачалоПериода > ОписаниеНалоговогоПериода.Начало Тогда
		
		// Произвольный период
		Возврат СтрШаблон(
			НСтр("ru = '%1 - %2';
				|en = '%1 - %2'"),
			Формат(НачалоПериода, "ДЛФ=D"),
			Формат(КонецПериода, "ДЛФ=D"));
			
	ИначеЕсли КонецПериода >= ОписаниеНалоговогоПериода.Период Тогда
			
		// Стандартный период, включающий интервал, отсчитываемый с января отчетного года
	
		Возврат БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			ОписаниеНалоговогоПериода.Период,
			КонецПериода,
			Истина);
				
	Иначе
		
		// Период до "официального" начала налогового периода, включаемый в налоговый период.
		// Он начинается с месяца начала налогового периода.
		
		Возврат БухгалтерскиеОтчетыКлиентСервер.ПолучитьПредставлениеПериода(
			НачалоМесяца(ОписаниеНалоговогоПериода.Начало),
			КонецПериода,
			Истина);
		
	КонецЕсли;

КонецФункции

// Формирует текст подсказки (вспомогательной информации) об особенностях первого налогового периода организации,
// зарегистрированной в конце стандартного налогового (отчетного) периода.
//
// Параметры:
//  ЮридическоеФизическоеЛицо          - ПеречислениеСсылка.ЮридическоеФизическоеЛицо - позволяет определить субъекта, к которому обращаемся
//  ВариантПериода                     - Перечисления.ВариантыРасширенногоПервогоНалоговогоПериода - вариант требований законодательства
//  ПродолжительностьНалоговогоПериода - ПеречислениеСсылка.Периодичность - продолжительность налогового периода, позволяет сформулировать,
//                                       в отчет за какой период включаются показатели за период с даты регистрации до стандартной даты начала отчетного периода
//  ВидОтчетаВинительныйПадеж          - Строка - наименование отчета (расчета), в который включаются данные отчетного периода,
//                                       в винительном падеже, например "декларацию" или "справку".
// 
// Возвращаемое значение:
//  Строка - текст подсказки
//
Функция ТекстПодсказки(ЮридическоеФизическоеЛицо, ВариантПериода, ПродолжительностьНалоговогоПериода, ВидОтчетаВинительныйПадеж) Экспорт
	
	// У [организаций], зарегистрированных [в декабре], первый налоговый период длится с даты регистрации [до конца следующего года] ([п.2] ст. 55 НК РФ).
	// Показатели за первый месяц деятельности включаются в декларацию за следующий [год].
	
	Если ЮридическоеФизическоеЛицо = ПредопределенноеЗначение("Перечисление.ЮридическоеФизическоеЛицо.ФизическоеЛицо") Тогда
		ТипЛица = НСтр("ru = 'предпринимателей';
						|en = 'entrepreneurs'");
	Иначе
		ТипЛица = НСтр("ru = 'организаций';
						|en = 'companies'");
	КонецЕсли;
	
	РегистрацияВДекабре =
		ПредопределенноеЗначение("Перечисление.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВДекабре");
	РегистрацияВПоследние10ДнейКвартала = 
		ПредопределенноеЗначение("Перечисление.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВПоследние10ДнейКвартала");
	РегистрацияВПоследнемКвартале =
		ПредопределенноеЗначение("Перечисление.ВариантыРасширенногоПервогоНалоговогоПериода.РегистрацияВПоследнемКвартале");
	
	Если ВариантПериода = РегистрацияВДекабре Тогда
		ОсобенностьРегистрации    = НСтр("ru = 'в декабре';
										|en = 'in December'");
		Закон                     = НСтр("ru = 'п.2 ст. 55 НК РФ';
										|en = 'cl. 2 of art. 55 of the Tax Code of the Russian Federation'");
		ВидПериода                = НСтр("ru = 'налоговый';
										|en = 'tax'");
	ИначеЕсли ВариантПериода = РегистрацияВПоследние10ДнейКвартала Тогда
		ОсобенностьРегистрации    = НСтр("ru = 'в последние десять дней квартала';
										|en = 'in the last ten days of the quarter'");
		Закон                     = НСтр("ru = 'п.3.1 ст. 55 НК РФ';
										|en = 'cl. 3.1 of art. 55 of the Tax Code of the Russian Federation'");
		ВидПериода                = НСтр("ru = 'налоговый';
										|en = 'tax'");
	ИначеЕсли ВариантПериода = РегистрацияВПоследнемКвартале Тогда
		ОсобенностьРегистрации    = НСтр("ru = 'в последнем квартале года';
										|en = 'in the last quarter of the year'");
		Закон                     = НСтр("ru = 'п.3 ст. 15 Закона """"О бухгалтерском учете"""" от 06.12.2011 N 402-ФЗ';
										|en = 'cl. 3 of art. 13 of the Law ""On accounting"" dated 12/06/2011 No. 402-FZ'");
		ВидПериода                = НСтр("ru = 'отчетный';
										|en = 'reporting'");
	Иначе
		Возврат "";
	КонецЕсли;
	
	Если ПродолжительностьНалоговогоПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Год") Тогда
		ОсобенностьПервогоПериода = НСтр("ru = 'до конца следующего года';
										|en = 'till the end of the next year'");
		СтандартнаяДлительность   = НСтр("ru = 'год';
										|en = 'year'");
	ИначеЕсли ПродолжительностьНалоговогоПериода = ПредопределенноеЗначение("Перечисление.Периодичность.Квартал") Тогда
		ОсобенностьПервогоПериода = НСтр("ru = 'до конца следующего квартала';
										|en = 'till the end of the next quarter'");
		СтандартнаяДлительность   = НСтр("ru = 'квартал';
										|en = 'quarter'");
	Иначе
		Возврат "";
	КонецЕсли;
	
	Шаблон = НСтр("ru = 'У %1, зарегистрированных %2, первый %3 период длится с даты регистрации %4 (%5). 
		|Показатели за первый месяц деятельности включаются в %6 за следующий %7.';
		|en = 'For %1 registered %2, the first %3 period lasts from the registration date %4 (%5).
		|Indicators for the first month of activity are included in %6 for the next %7.'");
		// Для вывода многострочной строки в подсказку рекомендуется использовать форматированную строку,
		// так как текст содержит перенос строки.
	
	Возврат СтрШаблон(
		Шаблон,
		ТипЛица,
		ОсобенностьРегистрации,
		ВидПериода,
		ОсобенностьПервогоПериода,
		Закон,
		ВидОтчетаВинительныйПадеж,
		СтандартнаяДлительность);

КонецФункции

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция НайтиЭлементИнформирования(Элементы) Экспорт
	
	Возврат Элементы.Найти("ИнформацияНалоговыйПериод");
	
КонецФункции

Процедура ОтобразитьИнформацию(ЭлементИнформация, Информация) Экспорт
	
	ЭлементИнформация.Видимость                      = Истина;
	ЭлементИнформация.Заголовок                      = Информация.Заголовок;
	ЭлементИнформация.РасширеннаяПодсказка.Заголовок = Новый ФорматированнаяСтрока(Информация.Подсказка);
	// Форматированная строка позволяет корректно отобразить многострочный текст подсказки.
	
КонецПроцедуры

Процедура СкрытьИнформацию(Элементы) Экспорт
	
	ЭлементИнформация = НайтиЭлементИнформирования(Элементы);
	
	Если ЭлементИнформация = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЭлементИнформация.Видимость = Ложь;
	
КонецПроцедуры

#КонецОбласти