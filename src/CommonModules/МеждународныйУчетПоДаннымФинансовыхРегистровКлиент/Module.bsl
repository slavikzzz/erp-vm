#Область ПрограммныйИнтерфейс

// Обработчик команд, добавленных динамически.
//
// (См. ОтчетыКлиентПереопределяемый.ОбработчикКоманды).
//
Процедура ОбработчикКоманды(ЭтаФорма, Команда, Результат) Экспорт
	
	ПолноеИмяОтчета = ЭтаФорма.НастройкиОтчета.ПолноеИмя;

	// Вызов подключаемых команд отчетов
	Если ПолноеИмяОтчета = "Отчет.АнализКорреспонденцийОперативногоУчета" Тогда
		Если Команда.Имя = "СоздатьНастройкуОтраженияКорреспонденции" Тогда
			СоздатьНастройкуОтраженияКорреспонденции(ЭтаФорма, Команда, Результат);
		ИначеЕсли Команда.Имя = "ВернутьДокументыКОтражению" Тогда
			ВернутьДокументыКОтражению(ЭтаФорма, Команда, Результат);
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Обработчик расшифровки табличного документа формы отчета.
//
// (См. ОтчетыКлиентПереопределяемый.ОбработкаРасшифровки).
//
Процедура ОбработкаРасшифровки(ЭтаФорма, Элемент, Расшифровка, СтандартнаяОбработка) Экспорт
	
	ПолноеИмяОтчета = ЭтаФорма.НастройкиОтчета.ПолноеИмя;
	КлючТекущегоВарианта = ЭтаФорма.КлючТекущегоВарианта;
	
	Если ПолноеИмяОтчета = "Отчет.АнализКорреспонденцийОперативногоУчета" Тогда
		Если КлючТекущегоВарианта = "АнализКорреспонденцийШахматнаяВедомость" Тогда
			СписокРасшифровки = МеждународныйУчетВызовСервера.ЗначенияПолейРасшифровки(
				Расшифровка, ЭтаФорма.ОтчетДанныеРасшифровки);
			
			ПоляРасшифровки = Новый Структура("РасшифроватьПоДокументам", Ложь);
			
			Для Каждого ЭлементРасшифровки Из СписокРасшифровки Цикл
				Если СтрНачинаетсяС(ЭлементРасшифровки.Представление, "СуммаУпр")
				 ИЛИ СтрНачинаетсяС(ЭлементРасшифровки.Представление, "СуммаРегл") Тогда
					ПоляРасшифровки.РасшифроватьПоДокументам = Истина;
				ИначеЕсли ЭлементРасшифровки.Представление = "ОбъектУчетаДт" Тогда
					ПоляРасшифровки.Вставить("ОбъектУчетаДт", ЭлементРасшифровки.Значение);
				ИначеЕсли ЭлементРасшифровки.Представление = "ОбъектУчетаКт" Тогда
					ПоляРасшифровки.Вставить("ОбъектУчетаКт", ЭлементРасшифровки.Значение);
				КонецЕсли;
			КонецЦикла;
			
			Если ПоляРасшифровки.РасшифроватьПоДокументам Тогда
				СтандартнаяОбработка = Ложь;
			
				ПараметрОтбор = Новый Структура();
				КомпоновщикНастроек = ЭтаФорма.Отчет.КомпоновщикНастроек; // КомпоновщикНастроекКомпоновкиДанных -
				ЭлементОтбораОрганизация = Неопределено;
				
				Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
					Если ЭлементОтбора.Использование Тогда
						ПараметрОтбор.Вставить(Строка(ЭлементОтбора.ЛевоеЗначение), ЭлементОтбора.ПравоеЗначение);
					КонецЕсли;
					Если Строка(ЭлементОтбора.ЛевоеЗначение) = "Организация" Тогда
						ЭлементОтбораОрганизация = ЭлементОтбора;
					КонецЕсли;
				КонецЦикла;
				
				ЗначенияПользовательскихНастроек = Новый Структура();
				ПараметрПериодОтчета = КомпоновщикНастроек.Настройки.ПараметрыДанных.Элементы.Найти("ПериодОтчета");
				
				Если ПараметрПериодОтчета.Использование Тогда
					ПользовательскийПериодОтчета = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ПараметрПериодОтчета.ИдентификаторПользовательскойНастройки);
					Если ПользовательскийПериодОтчета.Использование Тогда
						ЗначенияПользовательскихНастроек.Вставить("ПериодОтчета", ПользовательскийПериодОтчета.Значение);
					КонецЕсли;
				КонецЕсли;
				Если ЭлементОтбораОрганизация <> Неопределено Тогда
					ПользовательскийОтборОрганизация = КомпоновщикНастроек.ПользовательскиеНастройки.Элементы.Найти(ЭлементОтбораОрганизация.ИдентификаторПользовательскойНастройки);
					Если ПользовательскийОтборОрганизация.Использование Тогда
						ЗначенияПользовательскихНастроек.Вставить("Организация", ПользовательскийОтборОрганизация.ПравоеЗначение);
					КонецЕсли;
				КонецЕсли;
				Если ПоляРасшифровки.Свойство("ОбъектУчетаДт") Тогда
					ЗначенияПользовательскихНастроек.Вставить("ОбъектУчетаДт", ПоляРасшифровки.ОбъектУчетаДт);
				КонецЕсли;
				Если ПоляРасшифровки.Свойство("ОбъектУчетаКт") Тогда
					ЗначенияПользовательскихНастроек.Вставить("ОбъектУчетаКт", ПоляРасшифровки.ОбъектУчетаКт);
				КонецЕсли;
				
				ПараметрыФормы = Новый Структура;
				ПараметрыФормы.Вставить("КлючВарианта", "АнализКорреспонденцийПоДокументам");
				ПараметрыФормы.Вставить("СформироватьПриОткрытии", Истина);
				ПараметрыФормы.Вставить("Отбор", ПараметрОтбор);
				ПараметрыФормы.Вставить("ПользовательскиеНастройки",
					МеждународныйУчетПоДаннымФинансовыхРегистровВызовСервера.ПользовательскиеНастройкиАнализаОперативногоУчета(
						"АнализКорреспонденцийОперативногоУчета", ЗначенияПользовательскихНастроек));
				
				ОткрытьФорму("Отчет.АнализКорреспонденцийОперативногоУчета.ФормаОбъекта", ПараметрыФормы, ЭтаФорма);
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

// Открывает форму настройки счетов по объектам учета.
// 
// Параметры:
// 	ПараметрыФормы - См. МеждународныйУчетКлиент.ПараметрыОткрытияФормНастройкиПроводок
// 	ФормаВладелец - ФормаКлиентскогоПриложения - Владелец формы настройки.
// 	ОбъектУчета - ПеречислениеСсылка.ОбъектыФинансовогоУчета - Объект учета, на которого необходимо выполнить настройку
// 	ОбъектНастройки - Произвольный - Объект настройки
//
Процедура ОткрытьНастройкуСчетовПоОбъектамУчета(ПараметрыФормы, ФормаВладелец, ОбъектУчета = Неопределено, ОбъектНастройки = Неопределено) Экспорт
	
	Если ОбъектУчета <> Неопределено Тогда
		ПараметрыФормы.Вставить("ОбъектУчета", ОбъектУчета);
	КонецЕсли;
	Если ОбъектНастройки <> Неопределено Тогда
		ПараметрыФормы.Вставить("ОбъектНастройки", ОбъектНастройки);
	КонецЕсли;
	ОткрытьФорму("Обработка.НастройкаСчетовМеждународногоУчета.Форма.Форма", 
		ПараметрыФормы, ФормаВладелец);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ОбработчикиКомандОтчетаАнализКорреспонденцийОперативногоУчета

Процедура СоздатьНастройкуОтраженияКорреспонденции(ЭтаФорма, Команда, Результат)
	
	СписокРасшифровки = МеждународныйУчетВызовСервера.ЗначенияПолейРасшифровки(
		ЭтаФорма.ОтчетТабличныйДокумент.ТекущаяОбласть.Расшифровка,
		ЭтаФорма.ОтчетДанныеРасшифровки);
	
	ЗначенияЗаполнения  = Новый Структура();
	КомпоновщикНастроек = ЭтаФорма.Отчет.КомпоновщикНастроек; // КомпоновщикНастроекКомпоновкиДанных -
	
	Для Каждого ЭлементОтбора Из КомпоновщикНастроек.Настройки.Отбор.Элементы Цикл
		Если ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ПланСчетов") Тогда
			ЗначенияЗаполнения.Вставить("ПланСчетов", ЭлементОтбора.ПравоеЗначение);
		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("НастройкаФормированияПроводок") Тогда
			ЗначенияЗаполнения.Вставить("НастройкаФормированияПроводок", ЭлементОтбора.ПравоеЗначение);
		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОбъектУчетаДт") Тогда
			ЗначенияЗаполнения.Вставить("ОбъектУчетаДт", ЭлементОтбора.ПравоеЗначение);
		ИначеЕсли ЭлементОтбора.ЛевоеЗначение = Новый ПолеКомпоновкиДанных("ОбъектУчетаКт") Тогда
			ЗначенияЗаполнения.Вставить("ОбъектУчетаКт", ЭлементОтбора.ПравоеЗначение);
		КонецЕсли;
	КонецЦикла;
	
	Для Каждого ЭлементРасшифровки Из СписокРасшифровки Цикл
		Если ЭлементРасшифровки.Представление = "ОбъектУчетаДт" Тогда
			ЗначенияЗаполнения.Вставить("ОбъектУчетаДт", ЭлементРасшифровки.Значение);
		ИначеЕсли ЭлементРасшифровки.Представление = "ОбъектУчетаКт" Тогда
			ЗначенияЗаполнения.Вставить("ОбъектУчетаКт", ЭлементРасшифровки.Значение);
		КонецЕсли;
	КонецЦикла;
	
	ПараметрыФормы = Новый Структура();
	ПараметрыФормы.Вставить("ЗначенияЗаполнения", ЗначенияЗаполнения);
	
	ОткрытьФорму("РегистрСведений.НастройкиОтраженияКорреспонденцийВМеждународномУчете.ФормаЗаписи", ПараметрыФормы);
	
КонецПроцедуры

Процедура ВернутьДокументыКОтражению(ЭтаФорма, Команда, Результат)
	
	ПараметрыОтражения = Новый Массив();
	
	Для Каждого ВыделеннаяОбласть Из ЭтаФорма.ОтчетТабличныйДокумент.ВыделенныеОбласти Цикл
		Для НомерКолонки = ВыделеннаяОбласть.Лево По ВыделеннаяОбласть.Право Цикл
			Для НомерСтроки = ВыделеннаяОбласть.Верх По ВыделеннаяОбласть.Низ Цикл
				СписокРасшифровки = МеждународныйУчетВызовСервера.ЗначенияПолейРасшифровки(
					ЭтаФорма.ОтчетТабличныйДокумент.Область(НомерСтроки, НомерКолонки).Расшифровка,
					ЭтаФорма.ОтчетДанныеРасшифровки);
				
				ПараметрыДокумента = Новый Структура();
				
				Для Каждого ЭлементРасшифровки Из СписокРасшифровки Цикл
					Если ЭлементРасшифровки.Представление = "Период" Тогда
						ПараметрыДокумента.Вставить("Период", ЭлементРасшифровки.Значение);
					ИначеЕсли ЭлементРасшифровки.Представление = "Регистратор" Тогда
						ПараметрыДокумента.Вставить("Документ", ЭлементРасшифровки.Значение);
					ИначеЕсли ЭлементРасшифровки.Представление = "Организация" Тогда
						ПараметрыДокумента.Вставить("Организация", ЭлементРасшифровки.Значение);
					ИначеЕсли ЭлементРасшифровки.Представление = "СтатусОтражения" Тогда
						ПараметрыДокумента.Вставить("Статус", ЭлементРасшифровки.Значение);
					КонецЕсли;
				КонецЦикла;
				
				Если ПараметрыДокумента.Количество() = 4 Тогда
					Если ПараметрыДокумента.Статус <> ПредопределенноеЗначение("Перечисление.СтатусыОтраженияВМеждународномУчете.КОтражениюВУчете") Тогда
						ПараметрыОтражения.Добавить(ПараметрыДокумента);
					КонецЕсли;
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	Если ПараметрыОтражения.Количество() > 0 Тогда
		МеждународныйУчетВызовСервера.ВернутьДокументыКОтражению(ПараметрыОтражения);
		ЭтаФорма.СкомпоноватьРезультат();
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

