
#Область ПрограммныйИнтерфейс

// Вывести этапы.
// 
// Параметры:
//  ДиаграммаГанта - ДиаграммаГанта
//  Этапы - Массив,ТаблицаЗначений - где:
//   * КлючПартия - УникальныйИдентификатор
//   * Этап - СправочникСсылка.ЭтапыПроизводства
//   * Начало - Дата
//   * Окончание - Дата
//  Номенклатура - Массив,ТаблицаЗначений - где:
//   * КлючПартия - УникальныйИдентификатор
//   * Номенклатура - СправочникСсылка.Номенклатура
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры
//   * Начало - Дата
//   * Окончание - Дата
//  ТочкаРодитель - ТочкаДиаграммыГанта,ДиаграммаГанта
//  Точки - ДанныеФормыКоллекция,ТаблицаЗначений
//  ПараметрыВывода - Структура
Процедура ВывестиТочки(ДиаграммаГанта, Этапы, Номенклатура, Знач ТочкаРодитель, Точки, ПараметрыВывода) Экспорт
	
	СоответствиеТочкиИЭтапа = Новый Соответствие();
	ТочкаЭтапаДляСвязи = Неопределено;
	
	Если ТочкаРодитель.Точки.Количество() = 1 И (ТочкаРодитель.Точки[0].Значение = 0 ИЛИ ТочкаРодитель.Точки[0].Значение = 1) Тогда
		ТочкаРодитель.Точки.Удалить(ТочкаРодитель.Точки[0]);
	КонецЕсли;
	
	Для каждого Строка Из Этапы Цикл
		
		Точка = ТочкаРодитель.Точки.Добавить();
		
		СтруктураЗначений = Новый Структура("Этап, КлючПартия", Строка.Этап, Строка.КлючПартия);
		ЗначениеРасшифровки = Новый Структура("Тип,Состояние,Значение","Этап",Строка.Состояние,СтруктураЗначений);
		
		Точка.Значение    = "" + Строка.КлючПартия + "/" + Новый УникальныйИдентификатор();
		Точка.Текст       = Строка.ЭтапПредставление;
		Точка.Расшифровка = ЗначениеРасшифровки;
		Точка.Картинка = ?(Не Строка.ЭтапСоздан, БиблиотекаКартинок.ЭтапПроизводства, БиблиотекаКартинок.ЭтапПроизводстваПринятКВыполнению);
		Точка.ЦветТекста = ?(Строка.Окончание < ПараметрыВывода.РабочаяДата
								Или Строка.ЛеваяГраница < ПараметрыВывода.РабочаяДата И Строка.Состояние <> 3 Или Строка.Состояние > 3, WebЦвета.Красный, Новый Цвет());
		Точка.ДополнительныйЦвет = WebЦвета.СветлоСерый;
		
		ВывестиИнтервалы(ДиаграммаГанта, Строка, Точка, ТочкаЭтапаДляСвязи, ПараметрыВывода);
		
		ТочкаЭтапаДляСвязи = Точка;
		
		СоответствиеТочкиИЭтапа.Вставить(Строка.Этап, Точка.Значение);
		
		КешироватьТочку(Точки, Точка, Истина);
		
	КонецЦикла;
	
	Для Каждого Строка Из Номенклатура Цикл
		
		Если ЗначениеЗаполнено(СоответствиеТочкиИЭтапа) Тогда
			ТочкаРодитель = ДиаграммаГанта.УстановитьТочку(СоответствиеТочкиИЭтапа.Получить(Строка.Этап))
		КонецЕсли;
		
		Точка = ТочкаРодитель.Точки.Добавить();
		
		КлючиСтруктурыЗначений = "Номенклатура,Характеристика,Склад,Назначение,ЗаказНаПоступление";
		ЗначениеРасшифровки = Новый Структура("Тип,Состояние,Значение","Изделие",Строка.Состояние, Новый Структура(КлючиСтруктурыЗначений));
		ЗаполнитьЗначенияСвойств(ЗначениеРасшифровки.Значение, Строка);
		
		Представление = СтрШаблон("%1, %2 %3", НоменклатураКлиентСервер.ПредставлениеНоменклатуры(Строка.НоменклатураПредставление, Строка.ХарактеристикаПредставление), 
			Формат(Строка.Количество, "ЧН=; ЧГ="),
			Строка.ЕдиницаИзмеренияПредставление);
		
		Точка.Значение    = "" + Строка.КлючПартия + "/" + Новый УникальныйИдентификатор();
		Точка.Текст       = Представление;
		Точка.Расшифровка = ЗначениеРасшифровки;
		Если ПараметрыВывода.ПоказыватьЭтапы Или ПараметрыВывода.ПоказыватьМатериалы Тогда
			Точка.Картинка = ?(Строка.ЭтоПолуфабрикат,
				БиблиотекаКартинок.ТребуетсяОформитьВыпуск, БиблиотекаКартинок.ТребуетсяОбеспечение);
		КонецЕсли;
		Точка.ЦветТекста = ?(Строка.Начало < ПараметрыВывода.РабочаяДата
								Или Строка.ЛеваяГраница < ПараметрыВывода.РабочаяДата И Строка.Состояние <> 3 Или Строка.Состояние > 3, WebЦвета.Красный, Новый Цвет());
		Точка.ДополнительныйЦвет = WebЦвета.СветлоСерый;
		
		ВывестиИнтервалы(ДиаграммаГанта, Строка, Точка, ТочкаРодитель, ПараметрыВывода);
		
		Если Строка.ВыводитьЭтап Тогда
			КешироватьТочку(Точки, Точка);
			ФиктивнаяТочка = Точка.Точки.Добавить();
			ФиктивнаяТочка.Значение = 0;
			Серия = ДиаграммаГанта.УстановитьСерию("Занятость");
			ДиаграммаГанта.ПолучитьЗначение(ФиктивнаяТочка, Серия).Добавить();
		КонецЕсли;
		
	КонецЦикла;

КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВывестиИнтервалы(ДиаграммаГанта, Строка, Точка, ТочкаЭтапаДляСвязи, ПараметрыВывода)
	
	Серия = ДиаграммаГанта.УстановитьСерию("Занятость");
	
	ЗначенияДиаграммыГанта = ДиаграммаГанта.ПолучитьЗначение(Точка, Серия);
	
	// Вывод интервала по данным текущей строки
	ИнтервалДиаграммыГанта = ЗначенияДиаграммыГанта.Добавить();

	ЦветИнтервала = ?(Строка.Состояние = 1, WebЦвета.Серый,                   // - этап запланирован
					?(Строка.Состояние = 2, WebЦвета.СинийСоСтальнымОттенком, // - этап начат
					?(Строка.Состояние = 3, WebЦвета.НейтральноЗеленый,       // - этап выполнен
					?(Строка.Состояние = 4, WebЦвета.Золотой,                 // - этап не обеспечен
					?(Строка.Состояние = 5, WebЦвета.Лосось, Новый Цвет))))); // - на этапе проблема
					
	ТекстИнтервала = СтрШаблон(НСтр("ru = '%1-%2';
									|en = '%1-%2'"), Формат(Строка.Начало, НСтр("ru = 'ДФ=''d.M''';
																				|en = 'DF=''d.M'''")), Формат(Строка.Окончание, НСтр("ru = 'ДФ=''d.M''';
																																	|en = 'DF=''d.M'''")));
	ИнтервалДиаграммыГанта.Начало      = Строка.Начало;
	ИнтервалДиаграммыГанта.Конец       = Строка.Окончание;
	ИнтервалДиаграммыГанта.Расшифровка = Точка.Расшифровка;
	ИнтервалДиаграммыГанта.Цвет        = ЦветИнтервала;
	ИнтервалДиаграммыГанта.Текст       = ТекстИнтервала;
	
	// Добавление связей с этапами
	Если ТипЗнч(ТочкаЭтапаДляСвязи) = Тип("ТочкаДиаграммыГанта") Тогда
		
		Для Каждого Интервал Из ДиаграммаГанта.ПолучитьЗначение(ТочкаЭтапаДляСвязи, Серия) Цикл
			
			Элемент = ИнтервалДиаграммыГанта.Добавить(Интервал);
			
			Если Элемент.Начало.Конец > Элемент.Конец.Начало Тогда
				Элемент.Цвет = WebЦвета.Красный;
			Иначе
				Элемент.Цвет = WebЦвета.Синий;
			КонецЕсли;
			
			Прервать;
		
		КонецЦикла;
		
	КонецЕсли;
	
	// Вывод интервала по итоговым данным текущей строки
	Если Строка.Начало > Строка.ЛеваяГраница Тогда
		ИнтервалДиаграммыГанта = ЗначенияДиаграммыГанта.Добавить();
		ИнтервалДиаграммыГанта.Начало      = Строка.ЛеваяГраница;
		ИнтервалДиаграммыГанта.Конец       = Строка.Начало - 1;
		ИнтервалДиаграммыГанта.Цвет        = WebЦвета.СеребристоСерый;
	КонецЕсли;
	
КонецПроцедуры

// Вывести периоды недоступности.
// 
// Параметры:
//  ДиаграммаГанта - ДиаграммаГанта -
//  ПериодыНедоступности - ТаблицаЗначений -
Процедура ВывестиПериодыНедоступности(ДиаграммаГанта, ПериодыНедоступности) Экспорт
	
	ДиаграммаГанта.ИнтервалыФона.Очистить();
	
	Для каждого ДанныеНедоступности Из ПериодыНедоступности Цикл
		
		ДиаграммаГанта.ИнтервалыФона.Добавить(ДанныеНедоступности.Начало, ДанныеНедоступности.Окончание);
		
	КонецЦикла;
	
КонецПроцедуры

// Настроить шкалу времени.
// 
// Параметры:
//  ДиаграммаГанта - ДиаграммаГанта - Диаграмма ганта
//  НачалоПериода - Дата - Начало периода
//  КонецПериода - Дата - Конец периода
Процедура НастроитьШкалуВремени(ДиаграммаГанта, НачалоПериода, КонецПериода) Экспорт
	
	ШкалаВремениЭлементы = ДиаграммаГанта.ОбластьПостроения.ШкалаВремени.Элементы;
	
	БылоЭлементов = ШкалаВремениЭлементы.Количество();
	
	Если (КонецПериода - НачалоПериода > 50 * 86400) Тогда
		ШкалаВремениЭлементы.Добавить().Единица = ТипЕдиницыШкалыВремени.Месяц;
		ШкалаВремениЭлементы.Добавить().Единица = ТипЕдиницыШкалыВремени.День;
	Иначе
		ШкалаВремениЭлементы.Добавить().Единица = ТипЕдиницыШкалыВремени.Неделя;
		ШкалаВремениЭлементы.Добавить().Единица = ТипЕдиницыШкалыВремени.День;
	КонецЕсли;
	
	Если БылоЭлементов > 0 Тогда
		Для Сч = 0 По БылоЭлементов - 1 Цикл
			ШкалаВремениЭлементы.Удалить(ШкалаВремениЭлементы[0]);
		КонецЦикла;
	КонецЕсли;
	
КонецПроцедуры

Процедура КешироватьТочку(Точки, Точка, Загружена = Ложь)
	Кэш = Точки.Добавить();
	Кэш.Значение = Точка.Значение;
	Кэш.Загружена = Загружена;
КонецПроцедуры

#КонецОбласти