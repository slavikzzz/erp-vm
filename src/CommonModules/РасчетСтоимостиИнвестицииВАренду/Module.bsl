////////////////////////////////////////////////////////////////////////////////
// Процедуры, связанные с операцией "Расчет стоимости инвестиции в аренду".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область ОбработчикиЭтаповЗакрытияМесяца

// Добавляет этап в таблицу этапов закрытия месяца.
// Элементы данной таблицы являются элементами второго уровня в дереве этапов в форме закрытия месяца.
// 
// Параметры:
// 	ТаблицаЭтапов - (См. Обработки.ОперацииЗакрытияМесяца.ЗаполнитьОписаниеЭтаповЗакрытияМесяца)
// 	ТекущийРодитель - Строка - идентификатор группы.
Процедура ДобавитьЭтап(ТаблицаЭтапов, ТекущийРодитель) Экспорт
	
	НоваяСтрока = ЗакрытиеМесяцаСервер.ДобавитьЭтапВТаблицу(ТаблицаЭтапов, ТекущийРодитель,
		Перечисления.ОперацииЗакрытияМесяца.РасчетСтоимостиИнвестицииВАренду);
		
	НоваяСтрока.ПредшествующиеЭтапы.Добавить(Перечисления.ОперацииЗакрытияМесяца.АктуализацияДвиженийПоВнеоборотнымАктивам);
	
	НоваяСтрока.ТекстВыполнить = НСтр("ru = 'Выполнить';
										|en = 'Run'");
	
	НоваяСтрока.ДействиеИспользование = ЗакрытиеМесяцаСервер.ОписаниеДействия_СервернаяПроцедура(
		"РасчетСтоимостиИнвестицииВАренду.ОпределитьСтатусОперации");
		
	НоваяСтрока.ДействиеВыполнить = ЗакрытиеМесяцаСервер.ОписаниеДействия_ВыполнитьРасчет(
		"РасчетСтоимостиИнвестицииВАренду.ВыполнитьОперацию");
		
КонецПроцедуры

// Определяет статус операции "Использование_РасчетСтоимостиИнвестицииВАренду".
// 
// Параметры:
//  ПараметрыОбработчика - см. ЗакрытиеМесяцаСервер.ИнициализироватьПараметрыОбработчикаЭтапаЗакрытияМесяцаДляПроверки
Процедура ОпределитьСтатусОперации(ПараметрыОбработчика) Экспорт
	
	ЗакрытиеМесяцаСервер.УвеличитьКоличествоОбработанныхДанныхДляЗамера(ПараметрыОбработчика, 1);
	
	Если ЗакрытиеМесяцаСервер.РасчетЭтапаНеТребуется(ПараметрыОбработчика.ДанныеЭтапа) Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОбработчика.ПараметрыРасчета.Период) Тогда
		
		ЗакрытиеМесяцаСервер.УстановитьСостояниеОтключено(
			ПараметрыОбработчика,
			НСтр("ru = 'Учет внеоборотных активов отключен.';
				|en = 'Accounting of fixed assets is disabled.'", ОбщегоНазначения.КодОсновногоЯзыка()));
		
		Возврат;
		
	КонецЕсли;
	
	Если ЗакрытиеМесяцаСервер.ПроверитьНаличиеЗаданийКЗакрытиюМесяца(ПараметрыОбработчика, Истина) Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ПередачаОСВАренду
	|ГДЕ
	|	ПередачаОСВАренду.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПередачаОСВАренду.Организация В (&МассивОрганизаций)
	|	И ПередачаОСВАренду.Проведен
	|	И ПередачаОСВАренду.Договор.ТипДоговора В (&ТипыДоговоровПоФСБУ25)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ИСТИНА
	|ИЗ
	|	Документ.ИзменениеУсловийПередачиВАренду КАК ИзменениеУсловий
	|ГДЕ
	|	ИзменениеУсловий.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИзменениеУсловий.Организация В (&МассивОрганизаций)
	|	И ИзменениеУсловий.Проведен
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("ТипыДоговоровПоФСБУ25", УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды());
	ЗакрытиеМесяцаСервер.ИнициализироватьЗапрос(Запрос, ПараметрыОбработчика);
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда

		ТекстПояснения = СтрШаблон(
			НСтр("ru = 'За период %1 нет заданий для расчета данной операции.';
				|en = 'No jobs to calculate this operation for the %1 period.'", ОбщегоНазначения.КодОсновногоЯзыка()),
			РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОбработчика.ПараметрыРасчета.ПериодРегистрации));
			
		ЗакрытиеМесяцаСервер.УстановитьСостояниеНеТребуется(ПараметрыОбработчика, ТекстПояснения);
			
	КонецЕсли;
		
КонецПроцедуры

// Выполняет операцию "РасчетСтоимостиИнвестицииВАренду".
// 
// Параметры:
//  ПараметрыОбработчика - см. Обработки.ОперацииЗакрытияМесяца.ИнициализироватьПараметрыОбработчикаЭтапа
Процедура ВыполнитьОперацию(ПараметрыОбработчика) Экспорт

	ПараметрыРасчета = ПараметрыОбработчика.ПараметрыРасчета;
			
	ПараметрыОперации = ПараметрыОперации(ПараметрыРасчета);
	
	НачалоРасчета = ЗакрытиеМесяцаСервер.НачалоРасчета(
		ПараметрыОбработчика.ДанныеЭтапа.Код,
		ПараметрыРасчета.Период,,
		ПараметрыРасчета.МассивОрганизаций);
	
	ЕстьОшибки = Ложь;
	
	Пока НачалоРасчета <= ПараметрыОперации.КонецПериода Цикл
		
		НомерЗадания = ЗакрытиеМесяцаСервер.УвеличитьНомерЗадания();
		
		ОкончаниеПериода = КонецМесяца(НачалоРасчета);
		ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(НачалоРасчета, ПараметрыРасчета.МассивОрганизаций);
		ПараметрыОперации.МассивОрганизаций = ДоступныеОрганизации;
		
		НомерЗадания = РегистрыСведений.ЗаданияКЗакрытиюМесяца.УвеличитьНомерЗадания();
		
		НачатьТранзакцию();
		
		Попытка
			
			 ЗакрытиеМесяцаСервер.ЗаблокироватьРегистрЗаданий(
				НомерЗадания,
				ПараметрыОперации.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ДанныеКРасчетуЗаМесяц = ЗакрытиеМесяцаСервер.ЗаданияКРасчетуЗаМесяц(
				НачалоРасчета,
				ОкончаниеПериода,
				НомерЗадания,
				ПараметрыОперации.МассивОрганизаций,
				ПараметрыОбработчика.ДанныеЭтапа.Код);
			
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'При выполнении расчета за период %1 произошла ошибка:
					|%2';
					|en = 'An error occurred when calculating for the %1 period:
					|%2'", ОбщегоНазначения.КодОсновногоЯзыка()),
				РасчетСебестоимостиПротоколРасчета.ПредставлениеПериодаРасчета(ПараметрыОперации.ПериодРегистрации),
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			 ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ТекстОшибки,
				ПараметрыОперации.МассивОрганизаций,
				НачалоРасчета);
			
		КонецПопытки;
		
		ЕстьОшибкиВыполненияРасчета = Ложь;
		
		Попытка
			
			ПараметрыОперации.НачалоПериода = НачалоРасчета;
			ПараметрыОперации.КонецПериода = ОкончаниеПериода;
			
			// Выполнение процедуры возможно только помесячно
			//@skip-check query-in-loop
			ВыполнитьОперациюЗаМесяц(ПараметрыОперации);
			
			ЕстьОшибкиВыполненияРасчета = ЗакрытиеМесяцаСервер.ЕстьОшибкиВыполненияРасчета(
				ПараметрыОбработчика.ДанныеЭтапа.Код,
				ПараметрыОперации.МассивОрганизаций, 
				НачалоРасчета);
											
		Исключение
			
			ЕстьОшибки = Истина;
			
			ЗакрытиеМесяцаСервер.ЗафиксироватьНаличиеПроблемыПриВыполненииРасчета(
				ПараметрыОбработчика,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()),
				ПараметрыОперации.МассивОрганизаций,
				НачалоРасчета);
			
		КонецПопытки;
		
		Если ЕстьОшибкиВыполненияРасчета Тогда
			ЕстьОшибки = Истина;
		КонецЕсли;
		
		Если ЕстьОшибки Тогда
			Прервать;
		КонецЕсли;
		
		ЗакрытиеМесяцаСервер.УдалитьЗаданияКРасчетуЗаТекущийПериод(ПараметрыОбработчика, ДанныеКРасчетуЗаМесяц);
		
		НачалоРасчета = ОкончаниеПериода + 1;
		
	КонецЦикла;
	
КонецПроцедуры

// Выполняет операцию "РасчетСтоимостиИнвестицииВАренду" для документов.
// 
// Параметры:
//  МассивСсылок - Массив из ДокументСсылка - Документы для которых формируются проводки
Процедура ВыполнитьОперациюПоДокументам(МассивСсылок) Экспорт
	
	Если НЕ ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		Возврат;
	КонецЕсли; 
	
	ПараметрыОперации = ПараметрыОперации();
	ПараметрыОперации.ВернутьДокументыКОтражению = Ложь;
	ПараметрыОперации.СформироватьЗадания = Ложь;
	ПараметрыОперации.СписокДокументов = МассивСсылок;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокДокументов.Организация КАК Организация,
	|	СписокДокументов.Дата КАК Дата
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата
	|	ИЗ
	|		Документ.ПередачаОСВАренду2_4 КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&МассивСсылок)
	|		И ДанныеДокумента.Проведен
	|
	|		И НЕ (ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1 
	|				ИСТИНА 
	|			ИЗ 
	|				РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы 
	|			ГДЕ 
	|				ПрочиеРасходы.Регистратор = ДанныеДокумента.Ссылка
	|				И ПрочиеРасходы.ХозяйственнаяОперация В (&СписокХО)))
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ДанныеДокумента.Организация КАК Организация,
	|		НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, МЕСЯЦ) КАК Дата
	|	ИЗ
	|		Документ.ИзменениеУсловийПередачиВАренду КАК ДанныеДокумента
	|	ГДЕ
	|		ДанныеДокумента.Ссылка В (&МассивСсылок)
	|		И ДанныеДокумента.Проведен
	|
	|		И НЕ (ИСТИНА В (
	|			ВЫБРАТЬ ПЕРВЫЕ 1 
	|				ИСТИНА 
	|			ИЗ 
	|				РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы 
	|			ГДЕ 
	|				ПрочиеРасходы.Регистратор = ДанныеДокумента.Ссылка
	|				И ПрочиеРасходы.ХозяйственнаяОперация В (&СписокХО)))
	|
	|	) КАК СписокДокументов
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Организация
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("МассивСсылок", МассивСсылок);
	
	СписокХО = Новый Массив;
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ПередачаОСВАренду);
	СписокХО.Добавить(Перечисления.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду);
	Запрос.УстановитьПараметр("СписокХО", СписокХО);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	Пока Выборка.Следующий() Цикл
	
		ДоступныеОрганизации = ЗакрытиеМесяцаСервер.ДоступныеДляРасчетаОрганизации(Выборка.Дата, ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Выборка.Организация));
		
		ПараметрыОперации.МассивОрганизаций = ДоступныеОрганизации;
		ПараметрыОперации.НачалоПериода = НачалоМесяца(Выборка.Дата);
		ПараметрыОперации.КонецПериода = КонецМесяца(Выборка.Дата);
		
		// Выполняем операцию только если она еще не выполнена (чтобы не испортить движения).
		НачалоРасчета = ЗакрытиеМесяцаСервер.НачалоРасчета(
			Перечисления.ОперацииЗакрытияМесяца.РасчетСтоимостиИнвестицииВАренду,
			ПараметрыОперации.НачалоПериода,,
			ПараметрыОперации.МассивОрганизаций);
		
		Если НачалоРасчета <= ПараметрыОперации.НачалоПериода Тогда
			// Выполняется в цикле, т.к. выполнение возможно только за один месяц
			//@skip-check query-in-loop
			ВыполнитьОперациюЗаМесяц(ПараметрыОперации);
		КонецЕсли;
	
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаданияКЗакрытиюМесяца

// Определяет период, начиная с которого требуется выполнить операцию "РасчетСтоимостиИнвестицииВАренду".
//
// Параметры:
//  Организация   - СправочникСсылка.Организации - 
//  НачалоПериода - Дата - Проверяемый период.
// 
// Возвращаемое значение:
//  Дата - Дата, начиная с которой требуется расчет.
//
Функция СледующийПериодОперации(Организация, НачалоПериода) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	МИНИМУМ(ТаблицаДокументов.Период) КАК Период
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПередачаОСВАренду.Дата КАК Период
	|	ИЗ
	|		Документ.ПередачаОСВАренду2_4 КАК ПередачаОСВАренду
	|	ГДЕ
	|		ПередачаОСВАренду.Дата >= &НачалоПериода
	|		И ПередачаОСВАренду.Организация В (&Организация)
	|		И ПередачаОСВАренду.Проведен
	|		И ПередачаОСВАренду.Договор.ТипДоговора В (&ТипыДоговоровПоФСБУ25)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИзменениеУсловий.Дата КАК Период
	|	ИЗ
	|		Документ.ИзменениеУсловийПередачиВАренду КАК ИзменениеУсловий
	|	ГДЕ
	|		ИзменениеУсловий.Дата >= &НачалоПериода
	|		И ИзменениеУсловий.Организация В (&Организация)
	|		И ИзменениеУсловий.Проведен
	|	
	|	) КАК ТаблицаДокументов";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачалоПериода", НачалоМесяца(НачалоПериода));
	Запрос.УстановитьПараметр("ТипыДоговоровПоФСБУ25", УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды());
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);

	Выборка = Результат.Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат ?(ЗначениеЗаполнено(Выборка.Период), НачалоМесяца(Выборка.Период), '000101010000');
	КонецЕсли;

	Возврат '000101010000';
	
КонецФункции

// Формирует задания к выполнению операции при изменении исходных данных.
// 
// Параметры:
//  Документ - ДокументОбъект - Документ.
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Данные таблиц.
Процедура СформироватьЗадания(Документ, МенеджерВременныхТаблиц) Экспорт

	Если Не ПолучитьФункциональнуюОпцию("ИспользуетсяПередачаВАрендуСубарендуПоФСБУ25") Тогда
		Возврат;
	КонецЕсли;
	
	Если ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Тогда
		Возврат;
	КонецЕсли;
	
	ИспользуемыеТаблицы = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);
	
	СписокТаблиц = Новый Массив;
	СписокТаблиц.Добавить("ПрочиеРасходы_ЗаданияКРасчетуСтоимостиИнвестицииВАренду");
	СписокТаблиц.Добавить("ПередачаОСВАренду2_4");
	СписокТаблиц.Добавить("ИзменениеУсловийПередачиВАренду");

	ОпределитьИзмененияДляФормированияЗаданий(МенеджерВременныхТаблиц);

	ТекстОбъединенияДанных = ВнеоборотныеАктивы.СформироватьТекстОбъединенияДанныхДляФормированияЗадания(СписокТаблиц, МенеджерВременныхТаблиц);
	
	// Документы регистрируются всегда, т.к. при проведении удаляются отложенные движения.
	ЗарегистрироватьДокумент = 
		ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ПередачаОСВАренду2_4")
		ИЛИ ТипЗнч(Документ.Ссылка) = Тип("ДокументСсылка.ИзменениеУсловийПередачиВАренду");
	
	Если ЗарегистрироватьДокумент Тогда
		
		СписокЗапросовОбъединение = Новый Массив;
		
		Если ТекстОбъединенияДанных <> "" Тогда
			СписокЗапросовОбъединение.Добавить(ТекстОбъединенияДанных);
		КонецЕсли; 
			
		ТекстЗапроса =
		"ВЫБРАТЬ
		|	ИзмененныеДанные.ДатаДокументаИБ КАК Период,
		|	ИзмененныеДанные.Организация КАК Организация,
		|	ИзмененныеДанные.Ссылка КАК Документ,
		|	"""" КАК ИмяТаблицы
		|ИЗ
		|	РегистрСведений.РеестрДокументов КАК ИзмененныеДанные
		|
		|ГДЕ
		|	ИзмененныеДанные.Ссылка = &Ссылка
		|	И ИзмененныеДанные.ХозяйственнаяОперация В (
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаОСВАренду),
		|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду))
		|";
		
		СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
		
		ТекстОбъединенияДанных = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
		
	КонецЕсли; 
	
	Если ТекстОбъединенияДанных = "" Тогда
		ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
		Возврат;
	КонецЕсли;

	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ОперацииЗакрытияМесяца.РасчетСтоимостиИнвестицииВАренду) КАК Операция,
	|	ИзмененныеДанные.Организация КАК Организация,
	|	ИзмененныеДанные.Документ КАК Документ,
	|
	|	МИНИМУМ(ВЫБОР 
	|				КОГДА ИзмененныеДанные.Период < &ДатаНачалаУчета24
	|					ТОГДА &ДатаНачалаУчета24
	|				КОГДА НЕ ВводОстатков.Дата ЕСТЬ NULL
	|					ТОГДА ДОБАВИТЬКДАТЕ(НАЧАЛОПЕРИОДА(ВводОстатков.Дата, МЕСЯЦ), МЕСЯЦ, 1)
	|				ИНАЧЕ ИзмененныеДанные.Период
	|			КОНЕЦ) КАК Месяц
	|ИЗ
	|	&ТекстОбъединенияДанных КАК ИзмененныеДанные
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВводОстатковПрочиеРасходы КАК ВводОстатков
	|		ПО ВводОстатков.Ссылка = ИзмененныеДанные.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	ИзмененныеДанные.Организация,
	|	ИзмененныеДанные.Документ";
	
	ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ТекстОбъединенияДанных", "(" + ТекстОбъединенияДанных + ")");

	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Ссылка", Документ.Ссылка);
	Запрос.УстановитьПараметр("ДатаНачалаУчета24", ВнеоборотныеАктивыЛокализация.ДатаНачалаУчетаВнеоборотныхАктивов2_4());
	УстановитьПривилегированныйРежим(Истина);
	
	РезультатЗапроса = Запрос.Выполнить();
	Выборка = РезультатЗапроса.Выбрать();
	
	РегистрыСведений.ЗаданияКЗакрытиюМесяца.СоздатьЗаписиРегистраПоДаннымВыборки(Выборка);
	
	УстановитьПривилегированныйРежим(Ложь);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеТаблицы);
	
КонецПроцедуры

// Определяет записываются ли движений при выполнении операции.
// 
// Параметры:
//  Документ - ДокументОбъект -
// 
// Возвращаемое значение:
//  Булево
Функция ДвиженияЗаписываютсяПриВыполненииОперации(Документ) Экспорт

	Возврат Документ <> Неопределено
			И Документ.ДополнительныеСвойства.Свойство(ИмяОперации());
	
КонецФункции

#КонецОбласти

#Область ФормированиеТаблицДляПроведения

// Формирует текст запроса для таблицы регистра "Прочие расходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеРасходы(ТекстыЗапроса) Экспорт
	
	ДопПоля = "ИдентификаторСтроки";
	
	СписокЗапросовОбъединение = Новый Массив;
	СписокЗапросовОбъединение.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстОписаниеВтИсходныеПрочиеРасходы(ДопПоля));
	
	#Область ПереоценкаДоСправедливойСтоимости // Дт 91.02 - Кт 58.АП
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	КорректировкаРасходов.Дата                       КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)           КАК ВидДвижения,
	|	КорректировкаРасходов.Организация                КАК Организация,
	|	КорректировкаРасходов.Договор.Подразделение      КАК Подразделение,
	|	КорректировкаРасходов.СтатьяРасходов             КАК СтатьяРасходов,
	|	КорректировкаРасходов.АналитикаРасходов          КАК АналитикаРасходов,
	|	КорректировкаРасходов.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                     КАК ВидДеятельностиНДС,
	|	
	|	КорректировкаРасходов.РасходыУпр - КорректировкаРасходов.СправедливаяСтоимостьУпр КАК СуммаСНДС,
	|	КорректировкаРасходов.РасходыУпр - КорректировкаРасходов.СправедливаяСтоимостьУпр КАК СуммаБезНДС,
	|	КорректировкаРасходов.РасходыУпр - КорректировкаРасходов.СправедливаяСтоимостьУпр КАК СуммаБезНДСУпр,
	|	КорректировкаРасходов.РасходыРегл - КорректировкаРасходов.СправедливаяСтоимостьРегл КАК СуммаСНДСРегл,
	|	КорректировкаРасходов.РасходыРегл - КорректировкаРасходов.СправедливаяСтоимостьРегл КАК СуммаБезНДСРегл,
	|	0                                                КАК ПостояннаяРазница,
	|
	|	КорректировкаРасходов.РасходыРегл - КорректировкаРасходов.СправедливаяСтоимостьРегл КАК ВременнаяРазница,
	|	&ХО_ПереоценкаФИ                                 КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                     КАК АналитикаУчетаНоменклатуры,
	|	КорректировкаРасходов.ИдентификаторСтроки        КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ПереоценкаФИ                        КАК НастройкаХозяйственнойОперации,
	|	КорректировкаРасходов.ИдентификаторСтроки        КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ДанныеОС КАК КорректировкаРасходов
	|
	|ГДЕ
	|	КорректировкаРасходов.Ссылка = &Ссылка
	|	И КорректировкаРасходов.РасходыРегл > КорректировкаРасходов.СправедливаяСтоимостьРегл
	|	И КорректировкаРасходов.СправедливаяСтоимостьРегл > 0
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	#Область ЗакрытиеРасходовПриПередачеВАренду // Дт 58.АП - Кт 58.ВА
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДокументыАренды.Дата                            КАК Период,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)          КАК ВидДвижения,
	|	СписаниеРасходов.Организация                    КАК Организация,
	|	СписаниеРасходов.Подразделение                  КАК Подразделение,
	|	СписаниеРасходов.СтатьяРасходов                 КАК СтатьяРасходов,
	|	СписаниеРасходов.АналитикаРасходов              КАК АналитикаРасходов,
	|	СписаниеРасходов.НаправлениеДеятельности        КАК НаправлениеДеятельности,
	|	НЕОПРЕДЕЛЕНО                                    КАК ВидДеятельностиНДС,
	|	
	|	СписаниеРасходов.Сумма                          КАК СуммаСНДС,
	|	СписаниеРасходов.СуммаБезНДС                    КАК СуммаБезНДС,
	|	СписаниеРасходов.СуммаУпр                       КАК СуммаБезНДСУпр,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаСНДСРегл,
	|	СписаниеРасходов.СуммаРегл                      КАК СуммаБезНДСРегл,
	|	0                                               КАК ПостояннаяРазница,
	|	СписаниеРасходов.СуммаРегл                      КАК ВременнаяРазница,
	|
	|	ДокументыАренды.ХозяйственнаяОперация           КАК ХозяйственнаяОперация,
	|	НЕОПРЕДЕЛЕНО                                    КАК АналитикаУчетаНоменклатуры,
	|	ДокументыАренды.ИдентификаторСтроки             КАК ИдентификаторФинЗаписи,
	|	ДокументыАренды.НастройкаХО                     КАК НастройкаХозяйственнойОперации,
	|	ДокументыАренды.ИдентификаторСтроки             КАК ИдентификаторСтроки
	|
	|ИЗ
	|	РасходыПриПередачеВАренду КАК СписаниеРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыАренды КАК ДокументыАренды
	|		ПО ДокументыАренды.ОсновноеСредство = СписаниеРасходов.АналитикаРасходов
	|
	|ГДЕ
	|	ДокументыАренды.Ссылка = &Ссылка
	|";
	СписокЗапросовОбъединение.Добавить(ТекстЗапроса);
	#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(СписокЗапросовОбъединение, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ВтИсходныеПрочиеРасходы");
	
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаВтПрочиеРасходы(ДопПоля), "ВтПрочиеРасходы");
	ТекстыЗапроса.Добавить(РегистрыНакопления.ПрочиеРасходы.ТекстЗапросаТаблицаПрочиеРасходы(ДопПоля), "ПрочиеРасходы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "Прочие доходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаПрочиеДоходы(ТекстыЗапроса) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	КорректировкаРасходов.Дата КАК Период,
	|	
	|	КорректировкаРасходов.Организация КАК Организация,
	|	КорректировкаРасходов.Договор.Подразделение КАК Подразделение,
	|	КорректировкаРасходов.СтатьяДоходов КАК СтатьяДоходов,
	|	КорректировкаРасходов.АналитикаДоходов КАК АналитикаДоходов,
	|	
	|	КорректировкаРасходов.СправедливаяСтоимостьУпр - КорректировкаРасходов.РасходыУпр КАК Сумма,
	|	КорректировкаРасходов.СправедливаяСтоимостьУпр - КорректировкаРасходов.РасходыУпр КАК СуммаУпр,
	|	КорректировкаРасходов.СправедливаяСтоимостьРегл - КорректировкаРасходов.РасходыРегл КАК СуммаРегл,
	|	
	|	&НастройкаХО_ПереоценкаФИ КАК ХозяйственнаяОперация,
	|	КорректировкаРасходов.Договор.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	
	|	КорректировкаРасходов.ИдентификаторСтроки КАК ИдентификаторФинЗаписи,
	|	&НастройкаХО_ПереоценкаФИ КАК НастройкаХозяйственнойОперации
	|	
	|ИЗ
	|	ДанныеОС КАК КорректировкаРасходов
	|ГДЕ
	|	КорректировкаРасходов.Ссылка = &Ссылка
	|	И КорректировкаРасходов.СправедливаяСтоимостьРегл > КорректировкаРасходов.РасходыРегл
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ПрочиеДоходы", Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "Инвестиции в аренду".
// Возвращаемое значение:
//  Строка
// 
Функция ТекстЗапросаТаблицаИнвестицииВАренду() Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА КорректировкаРасходов.СправедливаяСтоимостьРегл > КорректировкаРасходов.РасходыРегл ТОГДА
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|		ИНАЧЕ
	|			ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	КОНЕЦ КАК ВидДвижения,
	|	КорректировкаРасходов.Ссылка               КАК Регистратор,
	|	КорректировкаРасходов.Дата                 КАК Период,
	|	КорректировкаРасходов.Организация          КАК Организация,
	|	КорректировкаРасходов.Договор              КАК Договор,
	|	КорректировкаРасходов.ВалютаВзаиморасчетов КАК Валюта,
	|	КорректировкаРасходов.ОсновноеСредство     КАК ОсновноеСредство,
	|	ДанныеДокумента.ГруппаФинансовогоУчета     КАК ГруппаФинансовогоУчета,
	|	0                                          КАК АрендныеПлатежи,
	|	ВЫБОР
	|		КОГДА КорректировкаРасходов.СправедливаяСтоимостьРегл > КорректировкаРасходов.РасходыРегл ТОГДА
	|			КорректировкаРасходов.СправедливаяСтоимостьРегл - КорректировкаРасходов.РасходыРегл
	|		ИНАЧЕ
	|			КорректировкаРасходов.РасходыРегл - КорректировкаРасходов.СправедливаяСтоимостьРегл
	|	КОНЕЦ КАК АрендныеПлатежиРегл,
	|	ВЫБОР
	|		КОГДА КорректировкаРасходов.СправедливаяСтоимостьРегл > КорректировкаРасходов.РасходыРегл ТОГДА
	|			КорректировкаРасходов.СправедливаяСтоимостьУпр - КорректировкаРасходов.РасходыУпр
	|		ИНАЧЕ
	|			КорректировкаРасходов.РасходыУпр - КорректировкаРасходов.СправедливаяСтоимостьУпр
	|	КОНЕЦ КАК АрендныеПлатежиУпр,
	|	0                                          КАК НГЛСРегл,
	|	0                                          КАК НГЛСУпр,
	|	0                                          КАК ПроцентныйДисконт,
	|	0                                          КАК ПроцентныйДисконтРегл,
	|	0                                          КАК ПроцентныйДисконтУпр,
	|	&НастройкаХО_ПереоценкаФИ                  КАК НастройкаХозяйственнойОперации,
	|	КорректировкаРасходов.ИдентификаторСтроки  КАК ИдентификаторФинЗаписи
	|ИЗ
	|	ДанныеОС КАК КорректировкаРасходов
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ПО ДанныеДокумента.Ссылка = КорректировкаРасходов.Ссылка
	|ГДЕ
	|	КорректировкаРасходов.Ссылка = &Ссылка
	|	И КорректировкаРасходов.СправедливаяСтоимостьРегл > 0
	|";
	
	Возврат ТекстЗапроса;
	
КонецФункции

// Формирует текст запроса для таблицы регистра "График начисления процентов по доходной аренде".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаГрафикНачисленияПроцентовПоДоходнойАренде(ТекстыЗапроса) Экспорт
	
	ИмяРегистра = "ГрафикНачисленияПроцентовПоДоходнойАренде";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Период                КАК ДатаИзменения,
	|	ДанныеДокумента.Договор               КАК Договор,
	|	ДанныеДокумента.Ссылка                КАК АктуальныеУсловияДоговора,
	|	ТаблицаГрафика.Дата                   КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство       КАК ОсновноеСредство,
	|	ТаблицаГрафика.Проценты               КАК Проценты,
	|	ТаблицаГрафика.КорректировкаПроцентов КАК КорректировкаПроцентов
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ТаблицаГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра, Истина);
	
КонецПроцедуры

// Формирует текст запроса для таблицы регистра "ДвиженияНоменклатураДоходыРасходы".
// 
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Тексты запроса
Процедура ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса) Экспорт

	ТекстЗапроса =
	"ВЫБРАТЬ 
	|	ДокументыАренды.Регистратор КАК Документ,
	|	ДокументыАренды.Организация КАК Организация,
	|	НАЧАЛОПЕРИОДА(ДокументыАренды.Дата, ДЕНЬ) КАК ДатаОтражения
	|
	|ИЗ
	|	ДокументыАренды КАК ДокументыАренды
	|
	|ГДЕ
	|	ДокументыАренды.Регистратор = &Ссылка
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ОтражениеДокументовВРеглУчете", Истина);
	
КонецПроцедуры

// Устанавливает параметры запроса, которые используются при выполнении операции.
// 
// Параметры:
//  Запрос - Запрос - Запрос
Процедура УстановитьПараметрыЗапроса(Запрос) Экспорт
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтСписанияОС",
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтСписанияОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтСписанияОС", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтСписанияОС);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОС", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОС);
		
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОС", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОС);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОССОтложеннымПереходомПрав);
	
	Запрос.УстановитьПараметр(
		"ХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав", 
		Перечисления.ХозяйственныеОперации.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав", 
		Справочники.НастройкиХозяйственныхОпераций.ЗакрытиеРасходовОтРеализацииОСПослеПереходаПрав);
	
	Запрос.УстановитьПараметр(
		"ХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", 
		Перечисления.ХозяйственныеОперации.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС", 
		Справочники.НастройкиХозяйственныхОпераций.КорректировкаСтоимостиТМЦОприходованныхПриВыбытииОС);
	
	Запрос.УстановитьПараметр(
		"ХО_КорректировкаРасходовОтВыбытияОС", 
		Перечисления.ХозяйственныеОперации.КорректировкаРасходовОтВыбытияОС);
	
	Запрос.УстановитьПараметр(
		"НастройкаХО_КорректировкаРасходовОтВыбытияОС", 
		Справочники.НастройкиХозяйственныхОпераций.КорректировкаРасходовОтВыбытияОС);
	
	Запрос.УстановитьПараметр(
		"ФормироватьВидыЗапасовПоГруппамФинансовогоУчета", 
		ПолучитьФункциональнуюОпцию("ФормироватьВидыЗапасовПоГруппамФинансовогоУчета"));
	
	Запрос.УстановитьПараметр(
		"ИдентификаторНеиспользуемойФинЗаписи", 
		ПроведениеДокументов.ИдентификаторНеиспользуемойФинЗаписи());
		
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ВыполнитьОперациюЗаМесяц(ПараметрыОперации)
	
	Если НЕ ВнеоборотныеАктивы.ИспользуетсяУправлениеВНА_2_4(ПараметрыОперации.НачалоПериода) Тогда
		Возврат;
	КонецЕсли;

	ОписаниеЗамера = ОценкаПроизводительности.НачатьЗамерДлительнойОперации("РасчетСтоимостиИнвестицииВАренду.ВыполнитьОперациюЗаМесяц");
	
	ПараметрыОперации.КоличествоДанных = 0;
	ПараметрыОперации.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПодготовитьВременныеТаблицы(ПараметрыОперации);
	ВыбратьДокументыИЗаписатьДвижения(ПараметрыОперации);
	
	ПараметрыОперации.МенеджерВременныхТаблиц.Закрыть();
	
	ОценкаПроизводительности.ЗакончитьЗамерДлительнойОперации(ОписаниеЗамера, ПараметрыОперации.КоличествоДанных);
	
КонецПроцедуры

Процедура ПодготовитьВременныеТаблицы(ПараметрыОперации)
	
	ТекстыЗапроса = Новый СписокЗначений;

#Область ДокументыАренды

	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ПередачаОС.Ссылка                   КАК Ссылка,
	|	ПередачаОС.Дата                     КАК Дата,
	|	ПередачаОС.Организация              КАК Организация,
	|	ПередачаОС.Подразделение            КАК Подразделение,
	|	ПередачаОС.Договор                  КАК Договор,
	|	ПередачаОС.Договор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	ПередачаОС.СтатьяРасходовБУ         КАК СтатьяРасходовБУ,
	|	ПередачаОС.АналитикаРасходовБУ      КАК АналитикаРасходовБУ,
	|	ПередачаОС.СтатьяДоходов            КАК СтатьяДоходов,
	|	ПередачаОС.АналитикаДоходов         КАК АналитикаДоходов,
	|
	|	ТаблицаОС.НомерСтроки               КАК НомерСтроки,
	|	ТаблицаОС.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|	ТаблицаОС.ОсновноеСредство          КАК ОсновноеСредство,
	|	ТаблицаОС.ДатаОкончанияАренды       КАК ДатаОкончанияАренды,
	|	ТаблицаОС.СправедливаяСтоимостьРегл КАК СправедливаяСтоимостьРегл,
	|	ТаблицаОС.СправедливаяСтоимостьУпр  КАК СправедливаяСтоимостьУпр,
	|	ТаблицаОС.НГЛСРегл                  КАК НГЛСРегл,
	|	ТаблицаОС.НГЛСУпр                   КАК НГЛСУпр,
	|	ТаблицаОС.АрендныеПлатежи           КАК АрендныеПлатежи,
	|	ТаблицаОС.АвансовыеПлатежиРегл      КАК АвансовыеПлатежиРегл,
	|	ТаблицаОС.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаОСВАренду) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ПередачаОСВАренду) КАК НастройкаХО
	|
	|ПОМЕСТИТЬ ДокументыАренды
	|
	|ИЗ
	|	Документ.ПередачаОСВАренду2_4 КАК ПередачаОС
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ПередачаОС.Ссылка
	|ГДЕ
	|	ПередачаОС.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ПередачаОС.Организация В (&МассивОрганизаций)
	|	И ПередачаОС.Проведен
	|	И (ПередачаОС.Ссылка В (&СписокДокументов)
	|		ИЛИ &БезОтбораДокументов)
	|	И ПередачаОС.Договор.ТипДоговора В (&ТипыДоговоровПоФСБУ25)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ИзменениеУсловий.Ссылка        КАК Ссылка,
	|	ИзменениеУсловий.Дата          КАК Дата,
	|	ИзменениеУсловий.Организация   КАК Организация,
	|	ИзменениеУсловий.Подразделение КАК Подразделение,
	|	ИзменениеУсловий.Договор       КАК Договор,
	|	ИзменениеУсловий.Договор.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|
	|	НЕОПРЕДЕЛЕНО                   КАК СтатьяРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                   КАК АналитикаРасходовБУ,
	|	НЕОПРЕДЕЛЕНО                   КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                   КАК АналитикаДоходов,
	|
	|	ТаблицаОС.НомерСтроки          КАК НомерСтроки,
	|	ТаблицаОС.ИдентификаторСтроки  КАК ИдентификаторСтроки,
	|	ТаблицаОС.ОсновноеСредство     КАК ОсновноеСредство,
	|	ТаблицаОС.ДатаОкончанияАренды       КАК ДатаОкончанияАренды,
	|	0                              КАК СправедливаяСтоимостьРегл,
	|	0                              КАК СправедливаяСтоимостьУпр,
	|	ТаблицаОС.НГЛСРегл             КАК НГЛСРегл,
	|	ТаблицаОС.НГЛСУпр              КАК НГЛСУпр,
	|	ТаблицаОС.АрендныеПлатежи      КАК АрендныеПлатежи,
	|	0                              КАК АвансовыеПлатежиРегл,
	|	ТаблицаОС.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|	ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду) КАК ХозяйственнаяОперация,
	|	ЗНАЧЕНИЕ(Справочник.НастройкиХозяйственныхОпераций.ИзменениеУсловийПередачиВАренду) КАК НастройкаХО
	|ИЗ
	|	Документ.ИзменениеУсловийПередачиВАренду КАК ИзменениеУсловий
	|		
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеУсловийПередачиВАренду.ОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ИзменениеУсловий.Ссылка
	|ГДЕ
	|	ИзменениеУсловий.Дата МЕЖДУ &НачалоПериода И &КонецПериода
	|	И ИзменениеУсловий.Организация В (&МассивОрганизаций)
	|	И ИзменениеУсловий.Проведен
	|	И (ИзменениеУсловий.Ссылка В (&СписокДокументов)
	|		ИЛИ &БезОтбораДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ОсновноеСредство,
	|	ХозяйственнаяОперация
	|";

	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДокументыАренды");

#КонецОбласти

#Область втКоэффициентыПересчетаВалют

	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеДокументов.Организация КАК Организация,
	|	ДанныеДокументов.ВалютаВзаиморасчетов КАК ВалютаВзаиморасчетов,
	|	ДанныеДокументов.Дата КАК Дата
	|ПОМЕСТИТЬ ТаблицаПериодов
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокументов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ВалютаВзаиморасчетов,
	|	Дата";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ТаблицаПериодов");
	ФинансовыеИнструменты.ТекстЗапросаВтКоэффициентыПересчетаВалют(ТекстыЗапроса, "втКоэффициентыПересчетаВалют", Истина);

#КонецОбласти

#Область Остатки

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ТаблицаГрафика.Ссылка				КАК Ссылка,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.Проценты				КАК Проценты,
	|	ДанныеДокумента.ГрафикНачисленияПроцентовВведенВручную
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаГрафикНачисленияПроцентов
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка
	|			И ДанныеДокумента.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаГрафика.Ссылка				КАК Ссылка,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.Проценты				КАК Проценты,
	|	ДанныеДокумента.ГрафикНачисленияПроцентовВведенВручную
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеУсловийПередачиВАренду.ГрафикНачисленияПроцентов КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка
	|			И ДанныеДокумента.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|ГДЕ
	|	ТаблицаГрафика.Дата >= НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата,МЕСЯЦ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	МАКСИМУМ(ГрафикиОплатУслуг.ДатаИзменения) КАК ДатаИзменения,
	|	ГрафикиОплатУслуг.Договор                 КАК Договор,
	|	ГрафикиОплатУслуг.ОсновноеСредство        КАК ОсновноеСредство,
	|	ДанныеДокумента.Ссылка                    КАК Ссылка,
	|	ДанныеДокумента.Дата                      КАК Дата
	|ПОМЕСТИТЬ АктуальныеУсловияДоИзмененийДоговора
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ГрафикОплатУслугПоДоходнойАренде КАК ГрафикиОплатУслуг
	|		ПО ДанныеДокумента.Договор = ГрафикиОплатУслуг.Договор
	|			И ДанныеДокумента.ОсновноеСредство = ГрафикиОплатУслуг.ОсновноеСредство
	|ГДЕ
	|	ГрафикиОплатУслуг.ДатаИзменения < НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата,ДЕНЬ)
	|	И ДанныеДокумента.ХозяйственнаяОперация
	|		= ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду)
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДокумента.Дата,
	|	ДанныеДокумента.Ссылка,
	|	ГрафикиОплатУслуг.Договор,
	|	ГрафикиОплатУслуг.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Договор,
	|	ОсновноеСредство,
	|	ДатаИзменения
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктуальныеУсловия.Ссылка КАК Ссылка,
	|	ТаблицаГрафика.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаГрафика.УслугаПоАренде - ТаблицаГрафика.УслугаПоАрендеНДС) КАК АрендныеПлатежи
	|ПОМЕСТИТЬ АрендныеПлатежиДоИзменения
	|ИЗ
	|	РегистрСведений.ГрафикОплатУслугПоДоходнойАренде КАК ТаблицаГрафика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеУсловияДоИзмененийДоговора КАК АктуальныеУсловия
	|		ПО АктуальныеУсловия.Договор = ТаблицаГрафика.Договор
	|			И АктуальныеУсловия.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|			И АктуальныеУсловия.ДатаИзменения = ТаблицаГрафика.ДатаИзменения
	|ГДЕ
	|	ТаблицаГрафика.Дата >= НАЧАЛОПЕРИОДА(АктуальныеУсловия.Дата,ДЕНЬ)
	|СГРУППИРОВАТЬ ПО
	|	АктуальныеУсловия.Ссылка,
	|	ТаблицаГрафика.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	АктуальныеУсловия.Ссылка КАК Ссылка,
	|	ТаблицаГрафика.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаГрафика.Проценты) КАК ПроцентныйДисконт
	|ПОМЕСТИТЬ ПроцентыДоИзменения
	|ИЗ
	|	РегистрСведений.ГрафикНачисленияПроцентовПоДоходнойАренде КАК ТаблицаГрафика
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ АктуальныеУсловияДоИзмененийДоговора КАК АктуальныеУсловия
	|		ПО АктуальныеУсловия.Договор = ТаблицаГрафика.Договор
	|			И АктуальныеУсловия.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|			И АктуальныеУсловия.ДатаИзменения = ТаблицаГрафика.ДатаИзменения
	|ГДЕ
	|	ТаблицаГрафика.Дата >= НАЧАЛОПЕРИОДА(АктуальныеУсловия.Дата,МЕСЯЦ)
	|СГРУППИРОВАТЬ ПО
	|	АктуальныеУсловия.Ссылка,
	|	ТаблицаГрафика.ОсновноеСредство
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаГрафика.Ссылка				КАК Ссылка,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.УслугаПоАренде		КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС	КАК УслугаПоАрендеНДС
	|ПОМЕСТИТЬ ДанныеДокументаТаблицаГрафикОплатУслуг
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПередачаОСВАренду2_4.ГрафикОплатУслуг КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка
	|			И ДанныеДокумента.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаГрафика.Ссылка				КАК Ссылка,
	|	ТаблицаГрафика.Дата					КАК Дата,
	|	ТаблицаГрафика.ОсновноеСредство		КАК ОсновноеСредство,
	|	ТаблицаГрафика.УслугаПоАренде		КАК УслугаПоАренде,
	|	ТаблицаГрафика.УслугаПоАрендеНДС	КАК УслугаПоАрендеНДС
	|ИЗ
	|	ДокументыАренды КАК ДанныеДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ИзменениеУсловийПередачиВАренду.ГрафикОплатУслуг КАК ТаблицаГрафика
	|		ПО ДанныеДокумента.Ссылка = ТаблицаГрафика.Ссылка
	|			И ДанныеДокумента.ОсновноеСредство = ТаблицаГрафика.ОсновноеСредство
	|ГДЕ
	|	ТаблицаГрафика.Дата >= НАЧАЛОПЕРИОДА(ДанныеДокумента.Дата, ДЕНЬ)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеРасходы.Организация КАК Организация,
	|	ПрочиеРасходы.Подразделение КАК Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|	
	|	СУММА(ПрочиеРасходы.Сумма) КАК Сумма,
	|	СУММА(ПрочиеРасходы.СуммаБезНДС) КАК СуммаБезНДС,
	|	СУММА(ПрочиеРасходы.СуммаУпр) КАК СуммаУпр,
	|
	|	СУММА(ПрочиеРасходы.СуммаРегл) КАК СуммаРегл
	|
	|ПОМЕСТИТЬ РасходыПриПередачеВАренду
	|
	|ИЗ
	|	(ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ПрочиеРасходы.СуммаОстаток КАК Сумма,
	|		ПрочиеРасходы.СуммаБезНДСОстаток КАК СуммаБезНДС,
	|		ПрочиеРасходы.СуммаУпрОстаток КАК СуммаУпр,
	|
	|		ПрочиеРасходы.СуммаРеглОстаток КАК СуммаРегл
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы.Остатки(
	|			&НачалоСледующегоПериода,
	|			Организация В (&МассивОрганизаций)
	|				И АналитикаРасходов В (
	|					ВЫБРАТЬ
	|						ДокументыАренды.ОсновноеСредство
	|					ИЗ
	|						ДокументыАренды КАК ДокументыАренды)
	|		) КАК ПрочиеРасходы
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ПрочиеРасходы.Организация КАК Организация,
	|		ПрочиеРасходы.Подразделение КАК Подразделение,
	|		ПрочиеРасходы.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|		ПрочиеРасходы.СтатьяРасходов КАК СтатьяРасходов,
	|		ПрочиеРасходы.АналитикаРасходов КАК АналитикаРасходов,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.Сумма
	|			ИНАЧЕ -ПрочиеРасходы.Сумма
	|		КОНЕЦ КАК Сумма,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаБезНДС
	|			ИНАЧЕ -ПрочиеРасходы.СуммаБезНДС
	|		КОНЕЦ КАК СуммаБезНДС,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаУпр
	|			ИНАЧЕ -ПрочиеРасходы.СуммаУпр
	|		КОНЕЦ КАК СуммаУпр,
	|
	|		ВЫБОР
	|			КОГДА ПрочиеРасходы.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ПрочиеРасходы.СуммаРегл
	|			ИНАЧЕ -ПрочиеРасходы.СуммаРегл
	|		КОНЕЦ КАК СуммаРегл
	|
	|	ИЗ
	|		РегистрНакопления.ПрочиеРасходы КАК ПрочиеРасходы
	|	ГДЕ
	|		ПрочиеРасходы.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|		И ПрочиеРасходы.Организация В (&МассивОрганизаций)
	|		И ПрочиеРасходы.ВидИсточника = ЗНАЧЕНИЕ(Перечисление.ВидыИсточниковДвижений.РасчетСтоимостиИнвестицииВАренду)
	|		И ПрочиеРасходы.АналитикаРасходов В (
	|				ВЫБРАТЬ
	|					ДокументыАренды.ОсновноеСредство
	|				ИЗ
	|					ДокументыАренды КАК ДокументыАренды)
	|
	|		) КАК ПрочиеРасходы
	|
	|СГРУППИРОВАТЬ ПО
	|	ПрочиеРасходы.Организация,
	|	ПрочиеРасходы.Подразделение,
	|	ПрочиеРасходы.НаправлениеДеятельности,
	|	ПрочиеРасходы.СтатьяРасходов,
	|	ПрочиеРасходы.АналитикаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Расходы.АналитикаРасходов КАК ОсновноеСредство,
	|	СУММА(Расходы.СуммаУпр)   КАК РасходыУпр,
	|	СУММА(Расходы.СуммаРегл)  КАК РасходыРегл
	|ПОМЕСТИТЬ СуммаРасходов
	|ИЗ
	|	РасходыПриПередачеВАренду КАК Расходы
	|СГРУППИРОВАТЬ ПО
	|	Расходы.АналитикаРасходов
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИнвестицииВАренду.Ссылка КАК Ссылка,
	|	ИнвестицииВАренду.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ИнвестицииВАренду.АрендныеПлатежи) КАК АрендныеПлатежи,
	|	СУММА(ИнвестицииВАренду.ПроцентныйДисконт) КАК ПроцентныйДисконт,
	|	СУММА(ИнвестицииВАренду.НГЛСУпр) КАК НГЛСУпр,
	|	СУММА(ИнвестицииВАренду.НГЛСРегл) КАК НГЛСРегл,
	|	СУММА(ИнвестицииВАренду.ЧИАУпр) КАК ЧИАУпр,
	|	СУММА(ИнвестицииВАренду.ЧИАРегл) КАК ЧИАРегл
	|ПОМЕСТИТЬ ОстаткиИнвестицииВАренду
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДокументыАренды.Ссылка КАК Ссылка,
	|		ИнвестицииВАренду.ОсновноеСредство КАК ОсновноеСредство,
	|		ИнвестицииВАренду.АрендныеПлатежиОстаток КАК АрендныеПлатежи,
	|		-ИнвестицииВАренду.ПроцентныйДисконтОстаток КАК ПроцентныйДисконт,
	|		ИнвестицииВАренду.НГЛСУпрОстаток КАК НГЛСУпр,
	|		ИнвестицииВАренду.НГЛСРеглОстаток КАК НГЛСРегл,
	|		ИнвестицииВАренду.АрендныеПлатежиУпрОстаток + ИнвестицииВАренду.ПроцентныйДисконтУпрОстаток КАК ЧИАУпр,
	|		ИнвестицииВАренду.АрендныеПлатежиРеглОстаток + ИнвестицииВАренду.ПроцентныйДисконтРеглОстаток КАК ЧИАРегл
	|	ИЗ
	|		РегистрНакопления.ИнвестицииВАренду.Остатки(
	|				&НачалоПериодаГраница,
	|				(Организация, ОсновноеСредство) В
	|					(ВЫБРАТЬ
	|						Т.Организация,
	|						Т.ОсновноеСредство
	|					ИЗ
	|						ДокументыАренды КАК Т)) КАК ИнвестицииВАренду
	|			
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыАренды КАК ДокументыАренды
	|			ПО ИнвестицииВАренду.Организация = ДокументыАренды.Организация
	|				И ИнвестицииВАренду.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДокументыАренды.Ссылка КАК Ссылка,
	|		ИнвестицииВАренду.ОсновноеСредство,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.АрендныеПлатежи
	|			ИНАЧЕ ИнвестицииВАренду.АрендныеПлатежи
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.ПроцентныйДисконт
	|			ИНАЧЕ ИнвестицииВАренду.ПроцентныйДисконт
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.НГЛСУпр
	|			ИНАЧЕ ИнвестицииВАренду.НГЛСУпр
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.НГЛСРегл
	|			ИНАЧЕ ИнвестицииВАренду.НГЛСРегл
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.АрендныеПлатежиУпр
	|			ИНАЧЕ ИнвестицииВАренду.АрендныеПлатежиУпр
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ИнвестицииВАренду.ПроцентныйДисконтУпр
	|			ИНАЧЕ -ИнвестицииВАренду.ПроцентныйДисконтУпр
	|		КОНЕЦ,
	|		ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА -ИнвестицииВАренду.АрендныеПлатежиРегл
	|			ИНАЧЕ ИнвестицииВАренду.АрендныеПлатежиРегл
	|		КОНЕЦ + ВЫБОР
	|			КОГДА ИнвестицииВАренду.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|				ТОГДА ИнвестицииВАренду.ПроцентныйДисконтРегл
	|			ИНАЧЕ -ИнвестицииВАренду.ПроцентныйДисконтРегл
	|		КОНЕЦ
	|	ИЗ
	|		РегистрНакопления.ИнвестицииВАренду КАК ИнвестицииВАренду
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДокументыАренды КАК ДокументыАренды
	|			ПО ИнвестицииВАренду.Организация = ДокументыАренды.Организация
	|				И ИнвестицииВАренду.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|				И ИнвестицииВАренду.Регистратор <> ДокументыАренды.Ссылка
	|				И (ИнвестицииВАренду.Период >= &НачалоПериода)
	|				И ИнвестицииВАренду.Период < ДокументыАренды.Дата) КАК ИнвестицииВАренду
	|
	|СГРУППИРОВАТЬ ПО
	|	ИнвестицииВАренду.ОсновноеСредство,
	|	ИнвестицииВАренду.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Ссылка
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса);

#КонецОбласти

#Область ДанныеОС

	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	ДокументыАренды.Ссылка                    КАК Ссылка,
	|	ДокументыАренды.Дата                      КАК Дата,
	|	ДокументыАренды.Организация               КАК Организация,
	|	ДокументыАренды.Подразделение             КАК Подразделение,
	|	ДокументыАренды.Договор                   КАК Договор,
	|	ДокументыАренды.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	ДокументыАренды.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|
	|	ДокументыАренды.СтатьяРасходовБУ          КАК СтатьяРасходов,
	|	ДокументыАренды.АналитикаРасходовБУ       КАК АналитикаРасходов,
	|	ДокументыАренды.СтатьяДоходов             КАК СтатьяДоходов,
	|	ДокументыАренды.АналитикаДоходов          КАК АналитикаДоходов,
	|
	|	ДокументыАренды.НомерСтроки               КАК НомерСтроки,
	|	ДокументыАренды.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|	ДокументыАренды.ОсновноеСредство          КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыАренды.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	ДокументыАренды.ДатаОкончанияАренды       КАК ДатаОкончанияАренды,
	|	ДокументыАренды.СправедливаяСтоимостьРегл КАК СправедливаяСтоимостьРегл,
	|	ДокументыАренды.СправедливаяСтоимостьУпр  КАК СправедливаяСтоимостьУпр,
	|	ДокументыАренды.НГЛСРегл                  КАК НГЛСРегл,
	|	ДокументыАренды.НГЛСУпр                   КАК НГЛСУпр,
	|	ДокументыАренды.АрендныеПлатежи           КАК АрендныеПлатежи,
	|	0                                         КАК ИзменениеАрендныхПлатежей,
	|	ДокументыАренды.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|
	|	СуммаРасходов.РасходыРегл                 КАК РасходыРегл,
	|	СуммаРасходов.РасходыУпр                  КАК РасходыУпр,
	|	ВЫБОР
	|		КОГДА ДокументыАренды.СправедливаяСтоимостьРегл > 0 ТОГДА
	|			ДокументыАренды.СправедливаяСтоимостьРегл - ДокументыАренды.АвансовыеПлатежиРегл
	|		ИНАЧЕ
	|			СуммаРасходов.РасходыРегл - ДокументыАренды.АвансовыеПлатежиРегл
	|	КОНЕЦ КАК ПриведеннаяСтоимостьРегл
	|ПОМЕСТИТЬ ДанныеОС
	|ИЗ
	|	ДокументыАренды КАК ДокументыАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ СуммаРасходов КАК СуммаРасходов
	|		ПО СуммаРасходов.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|ГДЕ
	|	ДокументыАренды.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаОСВАренду)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДокументыАренды.Ссылка                    КАК Ссылка,
	|	ДокументыАренды.Дата                      КАК Дата,
	|	ДокументыАренды.Организация               КАК Организация,
	|	ДокументыАренды.Подразделение             КАК Подразделение,
	|	ДокументыАренды.Договор                   КАК Договор,
	|	ДокументыАренды.ВалютаВзаиморасчетов      КАК ВалютаВзаиморасчетов,
	|	ДокументыАренды.ХозяйственнаяОперация     КАК ХозяйственнаяОперация,
	|
	|	ДокументыАренды.СтатьяРасходовБУ          КАК СтатьяРасходов,
	|	ДокументыАренды.АналитикаРасходовБУ       КАК АналитикаРасходов,
	|	ДокументыАренды.СтатьяДоходов             КАК СтатьяДоходов,
	|	ДокументыАренды.АналитикаДоходов          КАК АналитикаДоходов,
	|
	|	ДокументыАренды.НомерСтроки               КАК НомерСтроки,
	|	ДокументыАренды.ИдентификаторСтроки       КАК ИдентификаторСтроки,
	|	ДокументыАренды.ОсновноеСредство          КАК ОсновноеСредство,
	|	ПРЕДСТАВЛЕНИЕ(ДокументыАренды.ОсновноеСредство) КАК ОсновноеСредствоПредставление,
	|	ДокументыАренды.ДатаОкончанияАренды       КАК ДатаОкончанияАренды,
	|	ДокументыАренды.СправедливаяСтоимостьРегл КАК СправедливаяСтоимостьРегл,
	|	ДокументыАренды.СправедливаяСтоимостьУпр  КАК СправедливаяСтоимостьУпр,
	|	ДокументыАренды.НГЛСРегл - ОстаткиИнвестицииВАренду.НГЛСРегл КАК НГЛСРегл,
	|	ДокументыАренды.НГЛСУпр - ОстаткиИнвестицииВАренду.НГЛСУпр КАК НГЛСУпр,
	|	ДокументыАренды.АрендныеПлатежи           КАК АрендныеПлатежи,
	|	ДокументыАренды.АрендныеПлатежи
	|		- ЕСТЬNULL(АрендныеПлатежиДоИзменения.АрендныеПлатежи, 0) КАК ИзменениеАрендныхПлатежей,
	|	ДокументыАренды.ГрафикНачисленияПроцентовВведенВручную КАК ГрафикНачисленияПроцентовВведенВручную,
	|
	|	СуммаРасходов.РасходыРегл                 КАК РасходыРегл,
	|	СуммаРасходов.РасходыУпр                  КАК РасходыУпр,
	|	(ЕСТЬNULL(АрендныеПлатежиДоИзменения.АрендныеПлатежи, 0)
	|		- ЕСТЬNULL(ПроцентыДоИзменения.ПроцентныйДисконт, 0))
	|			* втКурсы.КоэффициентПересчетаРегл
	|		+ ЕСТЬNULL(СуммаРасходов.РасходыРегл, 0) КАК ПриведеннаяСтоимостьРегл
	|ИЗ
	|	ДокументыАренды КАК ДокументыАренды
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ОстаткиИнвестицииВАренду КАК ОстаткиИнвестицииВАренду
	|		ПО ОстаткиИнвестицииВАренду.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|		ЛЕВОЕ СОЕДИНЕНИЕ АрендныеПлатежиДоИзменения КАК АрендныеПлатежиДоИзменения
	|		ПО АрендныеПлатежиДоИзменения.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|			И АрендныеПлатежиДоИзменения.Ссылка = ДокументыАренды.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПроцентыДоИзменения КАК ПроцентыДоИзменения
	|		ПО ПроцентыДоИзменения.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|			И ПроцентыДоИзменения.Ссылка = ДокументыАренды.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ СуммаРасходов КАК СуммаРасходов
	|		ПО СуммаРасходов.ОсновноеСредство = ДокументыАренды.ОсновноеСредство
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтКоэффициентыПересчетаВалют КАК втКурсы
	|			ПО ДокументыАренды.ВалютаВзаиморасчетов = втКурсы.ВалютаВзаиморасчетов
	|			 И ДокументыАренды.Организация = втКурсы.Организация
	|			 И ДокументыАренды.Дата = втКурсы.Дата
	|ГДЕ
	|	ДокументыАренды.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду)
	|";
	ТекстыЗапроса.Добавить(ТекстЗапроса, "ДанныеОС");

#КонецОбласти
	
	ТекстЗапроса = СтрСоединить(ТекстыЗапроса.ВыгрузитьЗначения(), ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыОперации.МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("МассивОрганизаций", ПараметрыОперации.МассивОрганизаций);
	Запрос.УстановитьПараметр("НачалоПериода", ПараметрыОперации.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОперации.КонецПериода);
	Запрос.УстановитьПараметр("НачалоПериодаГраница", Новый Граница(ПараметрыОперации.НачалоПериода, ВидГраницы.Исключая));
	Запрос.УстановитьПараметр("НачалоСледующегоПериода", ПараметрыОперации.КонецПериода + 1);
	Запрос.УстановитьПараметр("КонецПериода", ПараметрыОперации.КонецПериода);
	Запрос.УстановитьПараметр("ТипыДоговоровПоФСБУ25", УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды());
	Запрос.УстановитьПараметр("ВалютаУпр", ЗначениеНастроекПовтИсп.ВалютаУправленческогоУчета());
	
	Если ПараметрыОперации.СписокДокументов <> Неопределено Тогда
		Запрос.УстановитьПараметр("СписокДокументов", ПараметрыОперации.СписокДокументов);
		Запрос.УстановитьПараметр("БезОтбораДокументов", Ложь);
	Иначе
		Запрос.УстановитьПараметр("СписокДокументов", Новый Массив);
		Запрос.УстановитьПараметр("БезОтбораДокументов", Истина);
	КонецЕсли;
	
	Запрос.Выполнить();
	
	УчетАрендованныхОС.РассчитатьСтавкиПроцентыДоходнойАрендыПакетно(ПараметрыОперации.МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыОперации.МенеджерВременныхТаблиц,,
		"ДокументыАренды,ТаблицаГрафикНачисленияПроцентов,РасходыПриПередачеВАренду,ДанныеОС,СуммаРасходов,ПроцентыДоИзменения")
	
КонецПроцедуры

Процедура ВыбратьДокументыИЗаписатьДвижения(ПараметрыОперации)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДокументыАренды.Ссылка      КАК Ссылка,
	|	ДокументыАренды.Дата        КАК Период,
	|	ДокументыАренды.Организация КАК Организация
	|ИЗ
	|	ДокументыАренды КАК ДокументыАренды
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Организация,
	|	Ссылка";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = ПараметрыОперации.МенеджерВременныхТаблиц;
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(ПараметрыОперации.МенеджерВременныхТаблиц);
	
	Пока Выборка.Следующий() Цикл
	
		НачатьТранзакцию();
		Попытка
			
			ТаблицыПроведения = ПодготовитьТаблицыДвиженийДокумента(ПараметрыОперации.МенеджерВременныхТаблиц, Выборка);
			
			ДокументОбъект = ПроведениеДокументов.ЭмуляцияДокумента(Выборка.Ссылка, Выборка.Период);
			
			УстановитьПризнакВыполненияОперации(ДокументОбъект);
		
			ВнеоборотныеАктивыСлужебный.ЗаписатьТаблицыДвижений(
				ТаблицыПроведения, 
				ДокументОбъект, 
				ПараметрыОперации.МенеджерВременныхТаблиц,
				Ложь, 
				ИмяОперации(), 
				Перечисления.ВидыИсточниковДвижений.РасчетСтоимостиИнвестицииВАренду,
				ПараметрыОперации.НачалоПериода);
		
			ВнеоборотныеАктивыСлужебный.ОбновитьДвиженияАктивовПассивов(Выборка.Ссылка);
			
			Если ПараметрыОперации.СформироватьЗадания Тогда
				ПроведениеДокументов.СформироватьЗаданияНаОтложенныеДвижения(ДокументОбъект, ПараметрыОперации.МенеджерВременныхТаблиц);
			КонецЕсли;
			
			Если ПараметрыОперации.ВернутьДокументыКОтражению Тогда
				ВнеоборотныеАктивыСлужебный.ВернутьДокументыКОтражению(
					Выборка.Ссылка, Выборка.Организация, Выборка.Период, ТаблицыПроведения);
			КонецЕсли;
			
			ПараметрыОперации.КоличествоДанных = ПараметрыОперации.КоличествоДанных + 1;
			
			ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(ПараметрыОперации.МенеджерВременныхТаблиц,, ИспользуемыеВТ);
		
			ЗафиксироватьТранзакцию();
			
		Исключение
			
			ОтменитьТранзакцию();
			
			ТекстОшибки = НСтр("ru = 'Не удалось сформировать движения по документу %1, по причине:
                                |%2';
                                |en = 'Cannot generate register records for document %1. Reason:
                                |%2'");
			
			ТекстОшибки = СтрШаблон(ТекстОшибки, 
				Строка(Выборка.Ссылка),
				ОбработкаОшибок.ПодробноеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			ВызватьИсключение ТекстОшибки;
			
		КонецПопытки;
		
	КонецЦикла;
	
КонецПроцедуры

Функция ПодготовитьТаблицыДвиженийДокумента(МенеджерВременныхТаблиц, Выборка)
	
	ИспользуемыеВТ = ОбщегоНазначенияУТ.СписокВременныхТаблиц(МенеджерВременныхТаблиц);

	МенеджерОбъекта = ОбщегоНазначения.МенеджерОбъектаПоСсылке(Выборка.Ссылка);
	ТаблицыПроведения = МенеджерОбъекта.ТаблицыДвиженийПриРасчетеСтоимостиИнвестицииВАренду(Выборка.Ссылка, МенеджерВременныхТаблиц);
	
	ОбщегоНазначенияУТ.УничтожитьВременныеТаблицы(МенеджерВременныхТаблиц,, ИспользуемыеВТ);
	
	Возврат ТаблицыПроведения;
	
КонецФункции

// Параметры выполнения операции "РасчетСтоимостиИнвестицииВАренду".
// 
// Параметры:
//  ПараметрыРасчета - Структура - Параметры расчета операции закрытия месяца.
// 
// Возвращаемое значение:
//  Структура - содержит параметры:
// 		* МассивОрганизаций - Массив из СправочникСсылка.Организации - Организации, для которых выполняется операция.
// 		* НачалоПериода - Дата - Начало периода, в котором выполняется операция.
// 		* КонецПериода - Дата - Конец периода, в котором выполняется операция.
// 		* ВернутьДокументыКОтражению - Булево - Истина, если документы нужно вернуть к отражению в регл. и международном учете.
// 		* СписокДокументов - Массив, Неопределено - Документы, для которых нужно выполнить операцию.
//		* КоличествоДанных - Число - Количество обработанных данных.
//		* МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - Менеджер временных таблиц.
Функция ПараметрыОперации(ПараметрыРасчета = Неопределено)
	
	ПараметрыОперации = Новый Структура;
	ПараметрыОперации.Вставить("МассивОрганизаций", Новый Массив);
	ПараметрыОперации.Вставить("НачалоПериода", '000101010000');
	ПараметрыОперации.Вставить("КонецПериода", '000101010000');
	ПараметрыОперации.Вставить("ВернутьДокументыКОтражению", Истина);
	ПараметрыОперации.Вставить("СформироватьЗадания", Истина);
	ПараметрыОперации.Вставить("СписокДокументов", Неопределено);
	ПараметрыОперации.Вставить("КоличествоДанных", 0);
	ПараметрыОперации.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	Если ПараметрыРасчета <> Неопределено Тогда
		ПараметрыОперации.МассивОрганизаций = ПараметрыРасчета.МассивОрганизаций;
		ПараметрыОперации.НачалоПериода = НачалоМесяца(ПараметрыРасчета.Период);
		ПараметрыОперации.КонецПериода = КонецМесяца(ПараметрыРасчета.Период);
	КонецЕсли;
	
	Возврат ПараметрыОперации;
	
КонецФункции

Процедура ОпределитьИзмененияДляФормированияЗаданий(МенеджерВременныхТаблиц)
	
	СписокЗапросов = Новый Массив;
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти("ДвиженияПрочиеРасходыИзменение") <> Неопределено Тогда
		
		ТекстЗапроса =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НАЧАЛОПЕРИОДА(ДокументыПоОС.Дата, МЕСЯЦ) КАК Период,
		|	Таблица.Организация                      КАК Организация,
		|	ДокументыПоОС.Ссылка                     КАК Документ
		|ПОМЕСТИТЬ ПрочиеРасходы_ЗаданияКРасчетуСтоимостиИнвестицииВАрендуИзменение
		|ИЗ
		|	ДвиженияПрочиеРасходыИзменение КАК Таблица
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ДокументыПоОС КАК ДокументыПоОС 
		|		ПО ДокументыПоОС.Дата >= Таблица.НачалоМесяца
		|			И ДокументыПоОС.ОсновноеСредство = Таблица.АналитикаРасходов
		|			И ДокументыПоОС.ХозяйственнаяОперация В (
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПередачаОСВАренду),
		|				ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ИзменениеУсловийПередачиВАренду))
		|";
	
		СписокЗапросов.Добавить(ТекстЗапроса);
		
	КонецЕсли;

	Если СписокЗапросов.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов,  ОбщегоНазначения.РазделительПакетаЗапросов());
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
КонецПроцедуры

Процедура УстановитьПризнакВыполненияОперации(ДокументОбъект) Экспорт
	
	ДокументОбъект.ДополнительныеСвойства.Вставить(ИмяОперации(), Истина);
	
КонецПроцедуры

Функция ИмяОперации()
	Возврат "РасчетСтоимостиИнвестицииВАренду";
КонецФункции

#КонецОбласти
