
#Область СлужебныйПрограммныйИнтерфейс

// См. ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ОпределитьСвойстваИсточниковДляРегистраДокументыПоТребованиюФНС
Процедура ОпределитьСвойстваИсточниковДляРегистраДокументыПоТребованиюФНС(СвойстваИсточников) Экспорт
	
	ЗаполнитьСвойстваИсточниковДляФНС(СвойстваИсточников);
	
КонецПроцедуры

// См. ЭлектронныйДокументооборотСКонтролирующимиОрганамиПереопределяемый.ОпределитьПодключаемыеНаправленияСдачиОтчетности
Процедура ОпределитьПодключаемыеНаправленияСдачиОтчетности(Организация, Направления) Экспорт
	
	// По умолчанию - все направления доступны и подключаются.
	
	Для каждого Направление Из Направления Цикл
		Если Направление.Орган = Перечисления.ТипыКонтролирующихОрганов.ФСРАР Тогда
			УстановитьСвойстваНаправленияРосалкогольрегулирования(Направление);
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ЗаполнитьСвойстваИсточниковДляФНС(СвойстваИсточников, ТолькоОсновныеСвойства = Истина)
	
	ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников,                  ТолькоОсновныеСвойства);
	ЗаполнитьСведения_АктВыполненныхРабот(СвойстваИсточников,                 ТолькоОсновныеСвойства);
	ЗаполнитьСведения_АктОРасхожденияхПослеОтгрузки(СвойстваИсточников,       ТолькоОсновныеСвойства);
	ЗаполнитьСведения_АктОРасхожденияхПослеПриемки(СвойстваИсточников,        ТолькоОсновныеСвойства);
	ЗаполнитьСведения_АктСверкиРасчетов(СвойстваИсточников,                   ТолькоОсновныеСвойства);
	ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников,            ТолькоОсновныеСвойства);
	ЗаполнитьСведения_КорректировкаПриобретения(СвойстваИсточников,           ТолькоОсновныеСвойства);
	ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников,             ТолькоОсновныеСвойства);
	ЗаполнитьСведения_ОтчетКомитенту(СвойстваИсточников,                      ТолькоОсновныеСвойства);
	ЗаполнитьСведения_ПриобретениеТоваровУслуг(СвойстваИсточников,            ТолькоОсновныеСвойства);
	ЗаполнитьСведения_ПриобретениеУслугПрочихАктивов(СвойстваИсточников,      ТолькоОсновныеСвойства);
	ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников,              ТолькоОсновныеСвойства);
	ЗаполнитьСведения_РеализацияУслугПрочихАктивов(СвойстваИсточников,        ТолькоОсновныеСвойства);
	ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников,                 ТолькоОсновныеСвойства);
	ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников,               ТолькоОсновныеСвойства);
	ЗаполнитьСведения_ТаможеннаяДекларацияИмпорт(СвойстваИсточников,          ТолькоОсновныеСвойства);
	ЗаполнитьСведения_СчетФактураПолученныйНалоговыйАгент(СвойстваИсточников, ТолькоОсновныеСвойства);
	
КонецПроцедуры


Процедура ЗаполнитьСведения_ДоговорКонтрагента(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Справочник", "ДоговорыКонтрагентов");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДоговорыКонтрагентов.Ссылка КАК Договор,
	|	ДоговорыКонтрагентов.Организация КАК Организация,
	|	ДоговорыКонтрагентов.Контрагент КАК Контрагент,
	|	ДоговорыКонтрагентов.Дата КАК Дата,
	|	ДоговорыКонтрагентов.Номер КАК Номер
	|ИЗ
	|	Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|ГДЕ
	|	ДоговорыКонтрагентов.Ссылка В(&Источники)
	|	И НЕ ДоговорыКонтрагентов.ПометкаУдаления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		Справочник = Новый Структура();
		Справочник.Вставить("Организация",     Выборка.Организация);
		Справочник.Вставить("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.Договор);
		Справочник.Вставить("Контрагент",      Выборка.Контрагент);
		
		Если НЕ ТолькоОсновныеСвойства Тогда
			Справочник.Вставить("Участники",     Новый Массив);
			ДобавитьУчастника(Справочник.Участники, Выборка.Контрагент);
			ДобавитьУчастника(Справочник.Участники, Выборка.Организация);
		КонецЕсли;
		
		Справочник.Вставить("Дата",            Выборка.Дата);
		Справочник.Вставить("Номер",           Выборка.Номер);
		Справочник.Вставить("СуммаВсего",      0);
		
		СвойстваИсточников.Получить(Выборка.Договор).Добавить(Справочник);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктВыполненныхРабот(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "АктВыполненныхРабот";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка КАК Документ,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.Договор.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.СуммаСНДС), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(АктОбОказанииПроизводственныхУслугУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документ.АктВыполненныхРабот КАК АктОбОказанииПроизводственныхУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И АктОбОказанииПроизводственныхУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктВыполненныхРабот.Услуги КАК АктОбОказанииПроизводственныхУслугУслуги
	|		ПО АктОбОказанииПроизводственныхУслуг.Ссылка = АктОбОказанииПроизводственныхУслугУслуги.Ссылка
	|ГДЕ
	|	АктОбОказанииПроизводственныхУслуг.Ссылка В(&Источники)
	|	И АктОбОказанииПроизводственныхУслуг.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОбОказанииПроизводственныхУслуг.Ссылка,
	|	АктОбОказанииПроизводственныхУслуг.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	АктОбОказанииПроизводственныхУслуг.Контрагент,
	|	АктОбОказанииПроизводственныхУслуг.Договор,
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.Договор.Номер, """"),
	|	ЕСТЬNULL(АктОбОказанииПроизводственныхУслуг.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
		
		ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОРасхожденияхПослеОтгрузки(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "АктОРасхожденияхПослеОтгрузки";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОРасхожденияхПослеОтгрузки.Ссылка КАК Документ,
	|	АктОРасхожденияхПослеОтгрузки.Организация КАК Организация,
	|	АктОРасхожденияхПослеОтгрузки.Контрагент КАК Контрагент,
	|	АктОРасхожденияхПослеОтгрузки.Номер КАК Номер,
	|	АктОРасхожденияхПослеОтгрузки.Дата КАК Дата,
	|	ЕСТЬNULL(СУММА(АктОРасхожденияхПослеОтгрузкиТовары.Сумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(АктОРасхожденияхПослеОтгрузкиТовары.СуммаПоДокументу), 0) КАК ТоварыСуммаПоДокументу
	|ИЗ
	|	Документ.АктОРасхожденияхПослеОтгрузки КАК АктОРасхожденияхПослеОтгрузки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеОтгрузки.Товары КАК АктОРасхожденияхПослеОтгрузкиТовары
	|		ПО АктОРасхожденияхПослеОтгрузки.Ссылка = АктОРасхожденияхПослеОтгрузкиТовары.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПослеОтгрузки.Ссылка В(&Источники)
	|	И АктОРасхожденияхПослеОтгрузки.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеОтгрузки.Ссылка,
	|	АктОРасхожденияхПослеОтгрузки.Организация,
	|	АктОРасхожденияхПослеОтгрузки.Контрагент,
	|	АктОРасхожденияхПослеОтгрузки.Номер,
	|	АктОРасхожденияхПослеОтгрузки.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма - Выборка.ТоварыСуммаПоДокументу);
		
		ДобавитьАктОРасхождениях(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктОРасхожденияхПослеПриемки(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "АктОРасхожденияхПослеПриемки";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АктОРасхожденияхПослеПриемки.Ссылка КАК Документ,
	|	АктОРасхожденияхПослеПриемки.Организация КАК Организация,
	|	АктОРасхожденияхПослеПриемки.Контрагент КАК Контрагент,
	|	АктОРасхожденияхПослеПриемки.Номер КАК Номер,
	|	АктОРасхожденияхПослеПриемки.Дата КАК Дата,
	|	ЕСТЬNULL(СУММА(АктОРасхожденияхПослеПриемкиТовары.Сумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(АктОРасхожденияхПослеПриемкиТовары.СуммаПоДокументу), 0) КАК ТоварыСуммаПоДокументу
	|ИЗ
	|	Документ.АктОРасхожденияхПослеПриемки КАК АктОРасхожденияхПослеПриемки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.АктОРасхожденияхПослеПриемки.Товары КАК АктОРасхожденияхПослеПриемкиТовары
	|		ПО АктОРасхожденияхПослеПриемки.Ссылка = АктОРасхожденияхПослеПриемкиТовары.Ссылка
	|ГДЕ
	|	АктОРасхожденияхПослеПриемки.Ссылка В(&Источники)
	|	И АктОРасхожденияхПослеПриемки.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	АктОРасхожденияхПослеПриемки.Ссылка,
	|	АктОРасхожденияхПослеПриемки.Организация,
	|	АктОРасхожденияхПослеПриемки.Контрагент,
	|	АктОРасхожденияхПослеПриемки.Номер,
	|	АктОРасхожденияхПослеПриемки.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма - Выборка.ТоварыСуммаПоДокументу);
		
		ДобавитьАктОРасхождениях(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_АктСверкиРасчетов(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "СверкаВзаиморасчетов2_5_11";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка." + ТипДокумента));
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СверкаВзаиморасчетов.Ссылка КАК Документ,
	|	СверкаВзаиморасчетов.Организация КАК Организация,
	|	СверкаВзаиморасчетов.Контрагент КАК Контрагент,
	|	СверкаВзаиморасчетов.Номер КАК Номер,
	|	СверкаВзаиморасчетов.Дата КАК Дата
	|ИЗ
	|	Документ.СверкаВзаиморасчетов2_5_11 КАК СверкаВзаиморасчетов
	|
	|ГДЕ
	|	СверкаВзаиморасчетов.Ссылка В (&Источники)
	|	И СверкаВзаиморасчетов.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		
		ДобавитьАктСверкиВзаиморасчетов(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ВозвратТоваровПоставщику(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ВозвратТоваровПоставщику");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ВозвратТоваровПоставщику.Ссылка КАК Документ,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.Договор.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.СуммаСНДС), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(ВозвратТоваровПоставщикуТовары.СуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель
	|ИЗ
	|	Документ.ВозвратТоваровПоставщику КАК ВозвратТоваровПоставщику
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ВозвратТоваровПоставщику.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ВозвратТоваровПоставщику.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ВозвратТоваровПоставщику.Товары КАК ВозвратТоваровПоставщикуТовары
	|		ПО ВозвратТоваровПоставщику.Ссылка = ВозвратТоваровПоставщикуТовары.Ссылка
	|ГДЕ
	|	ВозвратТоваровПоставщику.Ссылка В(&Источники)
	|	И ВозвратТоваровПоставщику.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ВозвратТоваровПоставщику.Ссылка,
	|	ВозвратТоваровПоставщику.Организация,
	|	ВозвратТоваровПоставщику.Контрагент,
	|	ВозвратТоваровПоставщику.Договор,
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.Договор.Номер, """"),
	|	ЕСТЬNULL(ВозвратТоваровПоставщику.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	ВозвратТоваровПоставщику.Грузоотправитель,
	|	ВозвратТоваровПоставщику.Грузополучатель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма);
		
		ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств);
		
		ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаПриобретения(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "КорректировкаПриобретения";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаПриобретения.Ссылка КАК Документ,
	|	КорректировкаПриобретения.Организация,
	|	КорректировкаПриобретения.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	КорректировкаПриобретения.ДокументОснование КАК ДокументПоступления,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаПриобретения.Организация КАК Грузополучатель,
	|	КорректировкаПриобретения.Контрагент КАК Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаПриобретения КАК КорректировкаПриобретения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаПриобретения.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаПриобретения.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаПриобретения.ДокументОснование = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаПриобретения.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаПриобретения.Ссылка В(&Источники)
	|	И КорректировкаПриобретения.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаПриобретенияТовары.СуммаСНДС КАК ТоварыСумма,
	|	КорректировкаПриобретенияТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Товары КАК КорректировкаПриобретенияТовары
	|		ПО Документы.Документ = КорректировкаПриобретенияТовары.Ссылка
	|			И НЕ КорректировкаПриобретенияТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаПриобретенияУслуги.СуммаСНДС,
	|	КорректировкаПриобретенияУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаПриобретения.Товары КАК КорректировкаПриобретенияУслуги
	|		ПО Документы.Документ = КорректировкаПриобретенияУслуги.Ссылка
	|			И КорректировкаПриобретенияУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументПоступления
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументПоступления";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		Если Выборка.УслугиКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
			
			ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма);
			
			ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств);
			
			ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств);
			
			ДобавитьАктНаПередачуПрав(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма + Выборка.ТоварыСумма);
		
		ДобавитьДокументОбИзмененииСтоимости(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_КорректировкаРеализации(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "КорректировкаРеализации";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	КорректировкаРеализации.Ссылка КАК Документ,
	|	КорректировкаРеализации.Организация,
	|	КорректировкаРеализации.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	КорректировкаРеализации.ДокументОснование КАК ДокументРеализации,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументовОснования.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	КорректировкаРеализации.ВариантОформленияПродажи,
	|	КорректировкаРеализации.Грузополучатель,
	|	КорректировкаРеализации.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.КорректировкаРеализации КАК КорректировкаРеализации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО КорректировкаРеализации.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументовОснования
	|		ПО КорректировкаРеализации.ДокументОснование = ДанныеПервичныхДокументовОснования.Документ
	|			И КорректировкаРеализации.Организация = ДанныеПервичныхДокументовОснования.Организация
	|ГДЕ
	|	КорректировкаРеализации.Ссылка В(&Источники)
	|	И КорректировкаРеализации.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	КорректировкаРеализацииТовары.СуммаСНДС КАК ТоварыСумма,
	|	КорректировкаРеализацииТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииТовары
	|		ПО Документы.Документ = КорректировкаРеализацииТовары.Ссылка
	|			И НЕ КорректировкаРеализацииТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	КорректировкаРеализацииУслуги.СуммаСНДС,
	|	КорректировкаРеализацииУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.КорректировкаРеализации.Товары КАК КорректировкаРеализацииУслуги
	|		ПО Документы.Документ = КорректировкаРеализацииУслуги.Ссылка
	|			И КорректировкаРеализацииУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС,
	|	Документы.ВариантОформленияПродажи,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументРеализации
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	Документы.ВариантОформленияПродажи,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.ДокументРеализации";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		Если Выборка.УслугиКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
			
			ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма);
			
			ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств);
			
			ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств);
			
			Если Выборка.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав Тогда
				ДобавитьАктНаПередачуПрав(ОбъектИсточник, СписокСвойств);
			КонецЕсли;
			
		КонецЕсли;
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма + Выборка.ТоварыСумма);
		
		ДобавитьДокументОбИзмененииСтоимости(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ОтчетКомитенту(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ОтчетКомитенту");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ОтчетКомитентуОПродажах.Ссылка КАК Документ,
	|	ОтчетКомитентуОПродажах.Организация,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ОтчетКомитентуОПродажах.СуммаВознаграждения КАК СуммаВознаграждения,
	|	ОтчетКомитентуОПродажах.СуммаНДСВознаграждения КАК СуммаНДСВознаграждения,
	|	ОтчетКомитентуОПродажах.Контрагент,
	|	ОтчетКомитентуОПродажах.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.Договор.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ОтчетКомитентуОПродажах.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ОтчетКомитенту КАК ОтчетКомитентуОПродажах
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ОтчетКомитентуОПродажах.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ОтчетКомитентуОПродажах.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ОтчетКомитентуОПродажах.Ссылка В(&Источники)
	|	И ОтчетКомитентуОПродажах.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.СуммаВознаграждения);
		
		ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПриобретениеТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "ПриобретениеТоваровУслуг";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПриобретениеТоваровУслуг.Ссылка КАК Документ,
	|	ПриобретениеТоваровУслуг.Организация,
	|	ПриобретениеТоваровУслуг.Контрагент,
	|	ПриобретениеТоваровУслуг.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПриобретениеТоваровУслуг.Договор.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ПриобретениеТоваровУслуг.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ПриобретениеТоваровУслуг.Организация КАК Грузополучатель,
	|	ПриобретениеТоваровУслуг.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ПриобретениеТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПриобретениеТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПриобретениеТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	ПриобретениеТоваровУслуг.Ссылка В(&Источники)
	|	И ПриобретениеТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	ПриобретениеТоваровУслугТовары.СуммаСНДС КАК ТоварыСумма,
	|	ПриобретениеТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугТовары
	|		ПО Документы.Документ = ПриобретениеТоваровУслугТовары.Ссылка
	|			И НЕ ПриобретениеТоваровУслугТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	ПриобретениеТоваровУслугУслуги.СуммаСНДС,
	|	ПриобретениеТоваровУслугУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.ПриобретениеТоваровУслуг.Товары КАК ПриобретениеТоваровУслугУслуги
	|		ПО Документы.Документ = ПриобретениеТоваровУслугУслуги.Ссылка
	|			И ПриобретениеТоваровУслугУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		Если Выборка.УслугиКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
			
			ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма);
			
			ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств);
			
			ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств);
			
			ДобавитьАктНаПередачуПрав(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ПриобретениеУслугПрочихАктивов(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "ПриобретениеУслугПрочихАктивов";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ПоступлениеУПА.Ссылка КАК Документ,
	|	ПоступлениеУПА.Организация,
	|	ПоступлениеУПА.Контрагент,
	|	ПоступлениеУПА.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ПоступлениеУПА.Договор.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(ПоступлениеУПА.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(СУММА(ПоступлениеУПАРасходы.СуммаСНДС), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(ПоступлениеУПАРасходы.СуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документ.ПриобретениеУслугПрочихАктивов КАК ПоступлениеУПА
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО ПоступлениеУПА.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И ПоступлениеУПА.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.ПриобретениеУслугПрочихАктивов.Расходы КАК ПоступлениеУПАРасходы
	|		ПО ПоступлениеУПА.Ссылка = ПоступлениеУПАРасходы.Ссылка
	|ГДЕ
	|	ПоступлениеУПА.Ссылка В(&Источники)
	|	И ПоступлениеУПА.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоступлениеУПА.Ссылка,
	|	ПоступлениеУПА.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	ПоступлениеУПА.Контрагент,
	|	ПоступлениеУПА.Договор,
	|	ЕСТЬNULL(ПоступлениеУПА.Договор.Номер, """"),
	|	ЕСТЬNULL(ПоступлениеУПА.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
		
		ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияТоваровУслуг(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "РеализацияТоваровУслуг";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияТоваровУслуг.Ссылка КАК Документ,
	|	РеализацияТоваровУслуг.Организация,
	|	РеализацияТоваровУслуг.Контрагент,
	|	РеализацияТоваровУслуг.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Договор.Номер, """") КАК НомерОснования,
	|	ЕСТЬNULL(РеализацияТоваровУслуг.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	РеализацияТоваровУслуг.ВариантОформленияПродажи,
	|	РеализацияТоваровУслуг.Грузополучатель,
	|	РеализацияТоваровУслуг.Грузоотправитель
	|ПОМЕСТИТЬ Документы
	|ИЗ
	|	Документ.РеализацияТоваровУслуг КАК РеализацияТоваровУслуг
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияТоваровУслуг.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияТоваровУслуг.Организация = ДанныеПервичныхДокументов.Организация
	|ГДЕ
	|	РеализацияТоваровУслуг.Ссылка В(&Источники)
	|	И РеализацияТоваровУслуг.Проведен
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ КАК Документ,
	|	1 КАК ТоварыКоличество,
	|	РеализацияТоваровУслугТовары.СуммаСНДС КАК ТоварыСумма,
	|	РеализацияТоваровУслугТовары.СуммаНДС КАК ТоварыСуммаНДС,
	|	0 КАК УслугиКоличество,
	|	0 КАК УслугиСумма,
	|	0 КАК УслугиСуммаНДС
	|ПОМЕСТИТЬ СтрокиДокументов
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугТовары
	|		ПО Документы.Документ = РеализацияТоваровУслугТовары.Ссылка
	|			И НЕ РеализацияТоваровУслугТовары.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	0,
	|	0,
	|	0,
	|	1,
	|	РеализацияТоваровУслугУслуги.СуммаСНДС,
	|	РеализацияТоваровУслугУслуги.СуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.РеализацияТоваровУслуг.Товары КАК РеализацияТоваровУслугУслуги
	|		ПО Документы.Документ = РеализацияТоваровУслугУслуги.Ссылка
	|			И РеализацияТоваровУслугУслуги.Номенклатура.ТипНоменклатуры В (ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Услуга), ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Документ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.ВариантОформленияПродажи,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыКоличество), 0) КАК ТоварыКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСумма), 0) КАК ТоварыСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.ТоварыСуммаНДС), 0) КАК ТоварыСуммаНДС,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиКоличество), 0) КАК УслугиКоличество,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСумма), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(СтрокиДокументов.УслугиСуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документы КАК Документы
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтрокиДокументов КАК СтрокиДокументов
	|		ПО Документы.Документ = СтрокиДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	Документы.Документ,
	|	Документы.Организация,
	|	Документы.Контрагент,
	|	Документы.ДоговорКонтрагента,
	|	Документы.НомерОснования,
	|	Документы.ДатаОснования,
	|	Документы.Номер,
	|	Документы.Дата,
	|	Документы.ВариантОформленияПродажи,
	|	Документы.Грузополучатель,
	|	Документы.Грузоотправитель";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		Если Выборка.УслугиКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
			
			ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
			
		КонецЕсли;
		
		Если Выборка.ТоварыКоличество > 0 Тогда
			
			ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
			ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
			ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
			ОбъектИсточник.Вставить("СуммаВсего", Выборка.ТоварыСумма);
			
			ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств);
			
			ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств);
			
			Если Выборка.ВариантОформленияПродажи = Перечисления.ВариантыОформленияПродажи.АктНаПередачуПрав Тогда
				ДобавитьАктНаПередачуПрав(ОбъектИсточник, СписокСвойств);
			КонецЕсли;
			
		КонецЕсли;
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_РеализацияУслугПрочихАктивов(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "РеализацияУслугПрочихАктивов");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РеализацияУслугПоПереработке.Ссылка КАК Документ,
	|	РеализацияУслугПоПереработке.Организация,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.Договор.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.СуммаСНДС), 0) КАК УслугиСумма,
	|	ЕСТЬNULL(СУММА(РеализацияУслугПоПереработкеУслуги.СуммаНДС), 0) КАК УслугиСуммаНДС
	|ИЗ
	|	Документ.РеализацияУслугПрочихАктивов КАК РеализацияУслугПоПереработке
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РеализацияУслугПоПереработке.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И РеализацияУслугПоПереработке.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.РеализацияУслугПрочихАктивов.Доходы КАК РеализацияУслугПоПереработкеУслуги
	|		ПО РеализацияУслугПоПереработке.Ссылка = РеализацияУслугПоПереработкеУслуги.Ссылка
	|ГДЕ
	|	РеализацияУслугПоПереработке.Ссылка В(&Источники)
	|	И РеализацияУслугПоПереработке.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	РеализацияУслугПоПереработке.Ссылка,
	|	РеализацияУслугПоПереработке.Организация,
	|	ДанныеПервичныхДокументов.Номер,
	|	ДанныеПервичныхДокументов.Дата,
	|	РеализацияУслугПоПереработке.Контрагент,
	|	РеализацияУслугПоПереработке.Договор,
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.Договор.Номер, """"),
	|	ЕСТЬNULL(РеализацияУслугПоПереработке.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1))";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.УслугиСумма);
		
		ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураВыданный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "СчетФактураВыданный";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СчетФактураВыданный.Ссылка КАК Документ,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СчетФактураВыданный.Корректировочный,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаНДС, 0)) КАК СуммаНДСДокумента,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре, 0)) КАК СуммаДокумента,
	|	ЕСТЬNULL(МАКСИМУМ(СчетФактураВыданныйТовары.ПредыдущийСчетФактура.ПредставлениеНомера), """") КАК НомерОснования,
	|	ЕСТЬNULL(МАКСИМУМ(СчетФактураВыданныйТовары.ПредыдущийСчетФактура.Дата), ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаОснования,
	|	ЕСТЬNULL(МАКСИМУМ(СчетФактураВыданныйДокументыОснования.ДокументОснование.Грузоотправитель), СчетФактураВыданный.Организация) КАК Грузоотправитель,
	|	ЕСТЬNULL(МАКСИМУМ(СчетФактураВыданныйДокументыОснования.ДокументОснование.Грузополучатель), СчетФактураВыданный.Контрагент) КАК Грузополучатель
	|ИЗ
	|	Документ.СчетФактураВыданный КАК СчетФактураВыданный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураВыданный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураВыданный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.ДокументыОснования КАК СчетФактураВыданныйДокументыОснования
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйДокументыОснования.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураВыданный.Товары КАК СчетФактураВыданныйТовары
	|		ПО СчетФактураВыданный.Ссылка = СчетФактураВыданныйТовары.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|		ПО СчетФактураВыданный.Ссылка = ЖурналУчетаСчетовФактур.СчетФактура
	|ГДЕ
	|	СчетФактураВыданный.Ссылка В(&Источники)
	|	И СчетФактураВыданный.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураВыданный.Ссылка,
	|	СчетФактураВыданный.Организация,
	|	СчетФактураВыданный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	СчетФактураВыданный.Корректировочный";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Выдан);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("Корректировочный", Выборка.Корректировочный);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
		ДобавитьСчетФактуруВыданный(ОбъектИсточник, СписокСвойств);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураПолученный(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "СчетФактураПолученный";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СчетФактураПолученный.Ссылка КАК Документ,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаНДС, 0)) КАК СуммаНДСДокумента,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре, 0)) КАК СуммаДокумента,
	|	СчетФактураПолученный.Корректировочный,
	|	СчетФактураПолученныйДокументыОснования.ИсходныйДокумент.Номер КАК НомерОснования,
	|	СчетФактураПолученныйДокументыОснования.ИсходныйДокумент.Дата КАК ДатаОснования,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.ДокументОснование.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.ДокументОснование.Грузополучатель) КАК Грузополучатель
	|ИЗ
	|	Документ.СчетФактураПолученный КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураПолученный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураПолученный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученный.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|		ПО СчетФактураПолученный.Ссылка = ЖурналУчетаСчетовФактур.СчетФактура
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&Источники)
	|	И СчетФактураПолученный.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	СчетФактураПолученный.Корректировочный,
	|	СчетФактураПолученныйДокументыОснования.ИсходныйДокумент.Номер,
	|	СчетФактураПолученныйДокументыОснования.ИсходныйДокумент.Дата";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("Корректировочный", Выборка.Корректировочный);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
		ДобавитьСчетФактуруПолученный(ОбъектИсточник, СписокСвойств);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_СчетФактураПолученныйНалоговыйАгент(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	ТипДокумента = "СчетФактураПолученныйНалоговыйАгент";
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", ТипДокумента);
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СозданныеЭлектронныеДокументы = ОбменСКонтрагентами.СвойстваОбъектовУчетаЭлектронныхДокументовДляВыгрузкиВФНС(Источники);
	
	ДоступныеВидыЭлектронныхДокументов = ДоступныеВидыЭлектронныхДокументов(Тип("ДокументСсылка."+ТипДокумента));
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	
	"ВЫБРАТЬ
	|	СчетФактураПолученный.Ссылка КАК Документ,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """") КАК Номер,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК Дата,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаНДС, 0)) КАК СуммаНДСДокумента,
	|	СУММА(ЕСТЬNULL(ЖурналУчетаСчетовФактур.СуммаПоСчетуФактуре, 0)) КАК СуммаДокумента,
	|	СчетФактураПолученный.Корректировочный,
	|	СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента КАК НомерОснования,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента КАК ДатаОснования,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.ДокументОснование.Грузоотправитель) КАК Грузоотправитель,
	|	МАКСИМУМ(СчетФактураПолученныйДокументыОснования.ДокументОснование.Грузополучатель) КАК Грузополучатель
	|ИЗ
	|	Документ.СчетФактураПолученныйНалоговыйАгент КАК СчетФактураПолученный
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СчетФактураПолученный.Ссылка = ДанныеПервичныхДокументов.Документ
	|			И СчетФактураПолученный.Организация = ДанныеПервичныхДокументов.Организация
	|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.СчетФактураПолученныйНалоговыйАгент.ДокументыОснования КАК СчетФактураПолученныйДокументыОснования
	|		ПО СчетФактураПолученный.Ссылка = СчетФактураПолученныйДокументыОснования.Ссылка
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ЖурналУчетаСчетовФактур КАК ЖурналУчетаСчетовФактур
	|		ПО СчетФактураПолученный.Ссылка = ЖурналУчетаСчетовФактур.СчетФактура
	|ГДЕ
	|	СчетФактураПолученный.Ссылка В(&Источники)
	|	И СчетФактураПолученный.Проведен
	|
	|СГРУППИРОВАТЬ ПО
	|	СчетФактураПолученный.Ссылка,
	|	СчетФактураПолученный.Организация,
	|	СчетФактураПолученный.Контрагент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Номер, """"),
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.Дата, ДАТАВРЕМЯ(1, 1, 1)),
	|	СчетФактураПолученный.Корректировочный,
	|	СчетФактураПолученныйДокументыОснования.НомерИсходногоДокумента,
	|	СчетФактураПолученныйДокументыОснования.ДатаИсходногоДокумента";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ВидПредставляемогоДокумента = ВидПредставляемогоДокумента(
			Выборка.Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("ВидЭлектронногоДокумента", ВидПредставляемогоДокумента);
		ОбъектИсточник.Вставить("Корректировочный", Выборка.Корректировочный);
		ОбъектИсточник.Вставить("СуммаВсего", Выборка.СуммаДокумента);
		
		ДобавитьСчетФактуруПолученный(ОбъектИсточник, СписокСвойств);
		
		Если ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента) Тогда
			ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьСведения_ТаможеннаяДекларацияИмпорт(СвойстваИсточников, ТолькоОсновныеСвойства)
	
	Источники = МассивИсточников(СвойстваИсточников, "Документ", "ТаможеннаяДекларацияИмпорт");
	
	Если Источники.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.Параметры.Вставить("Источники", Источники);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ГТДИмпорт.Ссылка КАК Документ,
	|	ГТДИмпорт.Организация,
	|	ГТДИмпорт.НомерДекларации КАК НомерГТД,
	|	ГТДИмпорт.Контрагент,
	|	ГТДИмпорт.Договор КАК ДоговорКонтрагента,
	|	ЕСТЬNULL(ГТДИмпорт.Договор.Номер, """") КАК НомерДоговора,
	|	ЕСТЬNULL(ГТДИмпорт.Договор.Дата, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаДоговора
	|ИЗ
	|	Документ.ТаможеннаяДекларацияИмпорт КАК ГТДИмпорт
	|ГДЕ
	|	ГТДИмпорт.Ссылка В(&Источники)
	|	И ГТДИмпорт.Проведен";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		СписокСвойств = СвойстваИсточников.Получить(Выборка.Документ);
		
		ОбъектИсточник = СтруктураОсновныхСвойств(Выборка);
		ОбъектИсточник.Вставить("Направление", Перечисления.НаправленияДокументаПоТребованиюФНС.Получен);
		ОбъектИсточник.Вставить("Номер", Выборка.НомерГТД);
		
		ДобавитьГрузовуюТаможеннуюДекларацию(ОбъектИсточник, СписокСвойств);
		
	КонецЦикла;
	
КонецПроцедуры


Функция МассивИсточников(СвойстваИсточников, ТипРегистрируемогоОбъекта, ИмяРегистрируемогоОбъекта)
	
	Источники = Новый Массив;
	
	Для Каждого СвойствоИсточника Из СвойстваИсточников Цикл
		
		Если ТипЗнч(СвойствоИсточника.Ключ) = Тип(ТипРегистрируемогоОбъекта + "Объект." + ИмяРегистрируемогоОбъекта) Тогда
			Источники.Добавить(СвойствоИсточника.Ключ.Ссылка);
		ИначеЕсли ТипЗнч(СвойствоИсточника.Ключ) = Тип(ТипРегистрируемогоОбъекта + "Ссылка." + ИмяРегистрируемогоОбъекта) Тогда
			Источники.Добавить(СвойствоИсточника.Ключ);
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат Источники;
	
КонецФункции

Функция СтруктураОсновныхСвойств(ОписаниеИсточника)
	
	ОбъектИсточник = Новый Структура("Организация, Направление, Дата, Номер, Контрагент, СуммаВсего, ЭлектронныйДокумент");
	ЗаполнитьЗначенияСвойств(ОбъектИсточник, ОписаниеИсточника);
	ОбъектИсточник.ЭлектронныйДокумент = Ложь;
	Возврат ОбъектИсточник;
	
КонецФункции

Процедура УстановитьНаличиеЭлектронногоДокумента(Документ, ОписаниеИсточника)
	
	Если ОписаниеИсточника.Свойство("ВидЭлектронногоДокумента")
		И ЗначениеЗаполнено(ОписаниеИсточника.ВидЭлектронногоДокумента) Тогда
		
		Если Документ.ВидДокументаФНС = ОписаниеИсточника.ВидЭлектронногоДокумента Тогда
			Документ.ЭлектронныйДокумент = Истина;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ДобавитьУчастника(Участники, Контрагент, ВидКонтрагента = "", Роль = "")
	
	Если ЗначениеЗаполнено(Контрагент) Тогда
		
		СвойстваКонтрагента = Новый Структура();
		СвойстваКонтрагента.Вставить("Роль", Роль);
		
		Реквизиты = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Контрагент, "ЮридическоеФизическоеЛицо, НаименованиеПолное, ИНН, КПП");
		
		СвойстваКонтрагента.Вставить("ЯвляетсяЮрЛицом", Реквизиты.ЮридическоеФизическоеЛицо = Перечисления.ЮридическоеФизическоеЛицо.ЮридическоеЛицо);
		Если СвойстваКонтрагента.ЯвляетсяЮрЛицом Тогда
			СвойстваКонтрагента.Вставить("ЮрЛицоНаименование", Реквизиты.НаименованиеПолное);
			СвойстваКонтрагента.Вставить("ЮрЛицоИНН",          Реквизиты.ИНН);
			СвойстваКонтрагента.Вставить("ЮрЛицоКПП",          Реквизиты.КПП);
		Иначе
			ФИО = ФизическиеЛицаКлиентСервер.ЧастиИмени(СокрЛП(Реквизиты.НаименованиеПолное));
			СвойстваКонтрагента.Вставить("ФизЛицоФамилия",     ФИО.Фамилия);
			СвойстваКонтрагента.Вставить("ФизЛицоИмя",         ФИО.Имя);
			СвойстваКонтрагента.Вставить("ФизЛицоОтчество",    ФИО.Отчество);
			СвойстваКонтрагента.Вставить("ФизЛицоИНН",         Реквизиты.ИНН);
		КонецЕсли;
		
		Если ТипЗнч(Контрагент) = Тип("СправочникОбъект.Контрагенты")
			ИЛИ ТипЗнч(Контрагент) = Тип("СправочникСсылка.Контрагенты") Тогда
			
			СвойстваКонтрагента.Вставить("Контрагент", Контрагент);
			
		КонецЕсли;
		
		Участники.Добавить(СвойстваКонтрагента);
		
	КонецЕсли;
	
КонецПроцедуры

#Область ЗаполнениеДокументов

Процедура ДобавитьАктПриемкиСдачиРабот(ОбъектИсточник, СписокСвойств)
	
	// Акт об оказании услуг
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктПриемкиСдачиРабот);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьТоварнуюНакладнуюТОРГ12(ОбъектИсточник, СписокСвойств)
	
	// Товарная накладная (ТОРГ-12)
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварнаяНакладнаяТОРГ12);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьТоварноТранспортнуюНакладную(ОбъектИсточник, СписокСвойств)
	
	// Товарно-транспортная накладная
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ТоварноТранспортнаяНакладная);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьСчетФактуруВыданный(ОбъектИсточник, СписокСвойств)
	
	// Счет-фактура выданный
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОбъектИсточник, "Корректировочный") = Истина Тогда
		Документ.ВидДокументаФНС = Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьСчетФактуруПолученный(ОбъектИсточник, СписокСвойств)
	
	// Счет-фактура полученный
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.СчетФактура);
	Если ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(ОбъектИсточник, "Корректировочный") = Истина Тогда
		Документ.ВидДокументаФНС = Перечисления.ВидыПредставляемыхДокументов.КорректировочныйСчетФактура;
	КонецЕсли;
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьАктОРасхождениях(ОбъектИсточник, СписокСвойств)
	
	// Акт о расхождениях
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктОРасхождениях);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьАктНаПередачуПрав(ОбъектИсточник, СписокСвойств)
	
	// Акт на передачу прав
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктНаПередачуПрав);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьГрузовуюТаможеннуюДекларацию(ОбъектИсточник, СписокСвойств)
	
	// Грузовая таможенная декларация
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ГрузоваяТаможеннаяДекларация);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьАктСверкиВзаиморасчетов(ОбъектИсточник, СписокСвойств)
	
	// Акт сверки взаиморасчетов
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.АктСверкиВзаиморасчетов);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ДобавитьДокументОбИзмененииСтоимости(ОбъектИсточник, СписокСвойств)
	
	// Соглашение об изменении стоимости
	
	Документ = Новый Структура("ВидДокументаФНС", Перечисления.ВидыПредставляемыхДокументов.ДокументОбИзмененииСтоимости);
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(Документ, ОбъектИсточник, Ложь);
	УстановитьНаличиеЭлектронногоДокумента(Документ, ОбъектИсточник);
	
	СписокСвойств.Добавить(Документ);
	
КонецПроцедуры

Процедура ЗаполнитьЭлектронныйДокумент(Выборка, ОбъектИсточник, СписокСвойств, ВидПредставляемогоДокумента)
	
	Если ЗначениеЗаполнено(ВидПредставляемогоДокумента) Тогда
		Документ = СтруктураОсновныхСвойств(ОбъектИсточник);
		Документ.ЭлектронныйДокумент = Истина;
		Документ.Вставить("ВидДокументаФНС", ВидПредставляемогоДокумента);
		
		Документ.Вставить("НомерОснования", Выборка.НомерОснования);
		Документ.Вставить("ДатаОснования",  Выборка.ДатаОснования);
		
		Если ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаТоваров Тогда
			СуммаДокумента = Выборка.ТоварыСумма;
		ИначеЕсли ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаУслуг Тогда
			СуммаДокумента = Выборка.УслугиСумма;
		ИначеЕсли ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.АктНаПередачуПрав Тогда
			СуммаДокумента = Выборка.ТоварыСумма;
		Иначе
			СуммаДокумента = Выборка.СуммаДокумента;
		КонецЕсли;
		Документ.Вставить("СуммаВсего", СуммаДокумента);
		
		СписокСвойств.Добавить(Документ);
	КонецЕсли;
	
КонецПроцедуры

Функция ВидПредставляемогоДокумента(Документ, СозданныеЭлектронныеДокументы, ДоступныеВидыЭлектронныхДокументов)
	
	ВидПредставляемогоДокумента = Неопределено;
	
	// Всегда заполняем только основные свойства
	ВидЭД = СозданныеЭлектронныеДокументы.Получить(Документ);
	Если ЗначениеЗаполнено(ВидЭД) Тогда
		ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов[ВидЭД];
	КонецЕсли;
	
	Если ДоступныеВидыЭлектронныхДокументов.Получить(ВидПредставляемогоДокумента) = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ВидПредставляемогоДокумента;
	
КонецФункции

Функция ДокументПередаетсяТолькоВЭлектронномВиде(ВидПредставляемогоДокумента)
	
	Если ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаТоваров
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ПередачаУслуг
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.УПД
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.УКД
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.АктОРасхождениях
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.АктНаПередачуПрав
		ИЛИ ВидПредставляемогоДокумента = Перечисления.ВидыПредставляемыхДокументов.ДокументОбИзмененииСтоимости Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
	
КонецФункции

Функция ДоступныеВидыЭлектронныхДокументов(ТипОбъекта)
	
	// Возвращает доступные виды электронных документов
	// для данного типа объектов.
	// В качестве источника используется результат процедуры
	// ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ОпределитьСоответствиеТиповИсточниковВидамДокументовФНС
	
	ВидыДокументовТипаОбъекта = Новый Соответствие;
	
	СоответствиеВидовДокументов = Новый Соответствие;
	ЭлектронныйДокументооборотСКонтролирующимиОрганамиКлиентСерверПереопределяемый.ОпределитьСоответствиеТиповИсточниковВидамДокументовФНС(СоответствиеВидовДокументов);
	Для Каждого ВидДокумента Из СоответствиеВидовДокументов Цикл
		Для Каждого ТипДляВидаДокумента Из ВидДокумента.Значение Цикл
			Если ТипДляВидаДокумента = ТипОбъекта Тогда
				ВидыДокументовТипаОбъекта.Вставить(ВидДокумента.Ключ, Истина);
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	Возврат ВидыДокументовТипаОбъекта;
	
КонецФункции

#КонецОбласти

Процедура УстановитьСвойстваНаправленияРосалкогольрегулирования(Направление)
	
	Направление.Подключить = ПолучитьФункциональнуюОпцию("ВестиСведенияДляДекларацийПоАлкогольнойПродукции");
	
КонецПроцедуры

#КонецОбласти
