
#Область СлужебныйПрограммныйИнтерфейс

// Описывает учетные механизмы используемые в локализуемой конфигурации.
//
// Параметры:
//  МеханизмыКонфигурации - Структура - список учетных механизмов,
//              где Ключ - имя механизма, а Значение - модуль реализующий интерфейс проведения.
//
Процедура ДополнитьУчетныеМеханизмыКонфигурации(МеханизмыКонфигурации) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	МеханизмыКонфигурации.Вставить("ИмущественныеНалоги", "ИмущественныеНалоги");
	МеханизмыКонфигурации.Вставить("ИнтеграцияБЗК", "ИнтеграцияБЗК");
	//-- НЕ УТ
	МеханизмыКонфигурации.Вставить("ИнтеграцияЕГАИС", "ИнтеграцияЕГАИСУТ");
	//++ НЕ УТ
	МеханизмыКонфигурации.Вставить("КонтролируемыеСделки", "КонтролируемыеСделки");
	//-- НЕ УТ

	//++ НЕ УТКА
	МеханизмыКонфигурации.Вставить("НематериальныеАктивыПоМСФО", "РегистрыСведений.НематериальныеАктивыМеждународныйУчет");
	МеханизмыКонфигурации.Вставить("ОсновныеСредстваПоМСФО", "РегистрыСведений.ОсновныеСредстваМеждународныйУчет");
	//-- НЕ УТКА

	//++ НЕ УТ
	МеханизмыКонфигурации.Вставить("ОтражениеЗарплатыВФинансовомУчете", "РегистрыНакопления.ОтражениеЗарплатыВФинансовомУчете");
	//-- НЕ УТ

	//++ НЕ УТКА
	МеханизмыКонфигурации.Вставить("Производство21", "ПланированиеПроизводства");
	//-- НЕ УТКА

	//++ НЕ УТ
	МеханизмыКонфигурации.Вставить("РегламентированныйУчет", "РеглУчетПроведениеСервер");
	МеханизмыКонфигурации.Вставить("НалогНаПрибыль", "НалогНаПрибыльБухгалтерскийУчет");
	//-- НЕ УТ

	//++ НЕ УТ
	МеханизмыКонфигурации.Вставить("УчетДенежныхДокументов", "УчетДенежныхДокументов");
	МеханизмыКонфигурации.Вставить("УчетУСНПСН", "УчетУСНПСНСервер");
	МеханизмыКонфигурации.Вставить("ПрослеживаемостьИмпортныхТоваров", "УчетПрослеживаемыхТоваровЛокализация");
	
	
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

// Формирует задания на отложенные движения исходя из выполненных движений по регистрам.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц,
//      используемый для хранения таблиц контроля изменений регистров.
//
Процедура СформироватьЗаданияНаОтложенныеДвижения(Документ, МенеджерВременныхТаблиц) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	ДанныеТаблиц = ПроведениеДокументов.ДанныеТаблицСтаройСтруктуры(Документ, МенеджерВременныхТаблиц);
	ТМЦВЭксплуатацииЛокализация.СформироватьЗаписиРегистровЗаданий(Документ.Ссылка, ДанныеТаблиц);
	//-- НЕ УТ
	
	
	//-- Локализация
	
КонецПроцедуры

// Заменяет стандартный модуль менеджера документа при получении данных для проведения,
// для случаев, когда стандартный модуль менеджера не может быть использован
// (например, при интеграции проведения в библиотечные документы).
// 
// Параметры:
//  МодульДокумента - ДокументМенеджер - модуль менеджера документа по умолчанию.
//
Процедура ПереназначитьМодульПолученияДанныхДокумента(МодульДокумента) Экспорт
	
	//++ Локализация
	
	Если ТипЗнч(МодульДокумента) = Тип("ДокументМенеджер.МаркировкаТоваровГИСМ")
		Или ТипЗнч(МодульДокумента) = Тип("ДокументМенеджер.ПеремаркировкаТоваровГИСМ") Тогда
		МодульДокумента = ОбщегоНазначения.ОбщийМодуль("МаркировкаТоваровГИСМУТ");
	ИначеЕсли ТипЗнч(МодульДокумента) = Тип("ДокументМенеджер.КоммерческоеПредложениеПоставщика") Тогда
		МодульДокумента = ОбщегоНазначения.ОбщийМодуль("КоммерческиеПредложенияДокументыЛокализация");
	
	//++ НЕ УТ
	ИначеЕсли ТипЗнч(МодульДокумента) = Тип("ДокументМенеджер.РезервыПоОплатеТруда") Тогда
		МодульДокумента = ОбщегоНазначения.ОбщийМодуль("РезервыПоОплатеТрудаУП");
	//-- НЕ УТ
	
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

#Область ДополнениеМеханизмовЛокализуемымиДокументами

// Дополняет параметры для проведения документа по регистрам учетного механизма.
//
// Параметры:
//   ДополнительныеДокументы - Структура - регистры и документы по которым требуются движения и контроль
//
Процедура ЗаполнитьЛокальныеДокументыОбеспечения(ДополнительныеДокументы) Экспорт
	
	//++ Локализация
	ДополнительныеДокументы.Вставить("КонтрольныеРегистрыИзменений", Новый Структура);
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.Вставить("ЗапасыИПотребности", Новый Массив);
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.ЗапасыИПотребности.Добавить(Тип("ДокументОбъект.МаркировкаТоваровГИСМ"));
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.ЗапасыИПотребности.Добавить(Тип("ДокументОбъект.ПеремаркировкаТоваровГИСМ"));
	//-- Локализация
	Возврат;
	
КонецПроцедуры

// Дополняет параметры для проведения документа по регистрам учетного механизма.
//
// Параметры:
//   ДополнительныеДокументы - Структура - регистры и документы по которым требуются движения и контроль
//
Процедура ЗаполнитьЛокальныеДокументыДвиженияТоваров(ДополнительныеДокументы) Экспорт
	
	//++ Локализация
	ДополнительныеДокументы.Вставить("КонтрольныеРегистрыИзменений", Новый Структура);
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.Вставить("ТоварыНаСкладах", Новый Массив);
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.ТоварыНаСкладах.Добавить(Тип("ДокументОбъект.МаркировкаТоваровГИСМ"));
	ДополнительныеДокументы.КонтрольныеРегистрыИзменений.ТоварыНаСкладах.Добавить(Тип("ДокументОбъект.ПеремаркировкаТоваровГИСМ"));
	//-- Локализация
	Возврат;
	
КонецПроцедуры

#КонецОбласти

// Перепроведение служебных документов.
// 
// Параметры:
// 	Регистратор - ДокументСсылка - проводимый документ
// 	
// Возвращаемое значение:
// 	Булево - результат перепроведения
//
Функция ПерепровестиДокументыПоРегиструНакопления(Регистратор) Экспорт

	ВыполненоВосстановлениеДвижений = РасчетСебестоимостиЛокализация.ВосстановитьДвиженияДокументовПоРегиструНакопления(Регистратор);
	
	Возврат ВыполненоВосстановлениеДвижений;
	
КонецФункции


#КонецОбласти
