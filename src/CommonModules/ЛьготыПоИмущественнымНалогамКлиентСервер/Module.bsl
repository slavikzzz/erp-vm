
#Область ПрограммныйИнтерфейс

// Формирует наименование для местной (региональной) льготы.
// 
// Параметры:
//  Объект - СправочникОбъект.ОснованияЛьготПоИмущественнымНалогам, ДанныеФормыСтруктура - объект справочника льгот,
//		для которого нужно сформировать наименование. 
//  СведенияОПунктеРегЗакона - Структура - описание конкретного пункта местного (регионального) закона, по которому
//  	предоставлена льгота. См. НовыйСведенияОПунктеМестногоЗакона()
//  НаименованиеРегиона - Строка - наименование субъекта РФ из адресного классификатора
// 
// Возвращаемое значение:
//  Строка - наименование льготы
//
Функция НаименованиеМестнойЛьготы(Объект, НаименованиеРегиона = Неопределено) Экспорт
		
	Если Не ЗначениеЗаполнено(Объект.ВидЛьготы) Тогда
		Возврат "";
	КонецЕсли; 
	
	Наименование = Новый Массив;
	
	Если Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
		Наименование.Добавить(Нстр("ru = 'Освобождение';
									|en = 'Exemption'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади") Тогда
		 Наименование.Добавить(Нстр("ru = 'Доля не облагаемой налогом площади';
									|en = 'Share of area not subject to tax'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент")
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиДоУказанной") Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение ставки';
									|en = 'Rate reduction'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент")
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму") Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение суммы налога';
									|en = 'Tax amount reduction'"));
	ИначеЕсли Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму") Тогда
		Наименование.Добавить(Нстр("ru = 'Снижение налоговой базы';
									|en = 'Tax base reduction'"));
	КонецЕсли;
	
	Если (Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСтавкиНаПроцент")
		 Или Объект.ВидЛьготы = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент"))
		 И ЗначениеЗаполнено(Объект.ПроцентУменьшения) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru = 'на %1%%';
											|en = 'by %1%%'"), Объект.ПроцентУменьшения));
	КонецЕсли; 
	
	Если Объект.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог")
		 И ЗначениеЗаполнено(Объект.МуниципальноеОбразование) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru = '(%1)';
											|en = '(%1)'"), Объект.МуниципальноеОбразование));
	ИначеЕсли Объект.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог")
		 И ЗначениеЗаполнено(НаименованиеРегиона) Тогда 
		Наименование.Добавить(СтрШаблон(Нстр("ru = '(местная, %1)';
											|en = '(local, %1)'"), НаименованиеРегиона));
	ИначеЕсли Объект.Налог = ПредопределенноеЗначение("Перечисление.ВидыИмущественныхНалогов.ЗемельныйНалог") Тогда 
		Наименование.Добавить(Нстр("ru='(местная)"));
	ИначеЕсли ЗначениеЗаполнено(НаименованиеРегиона) Тогда
		Наименование.Добавить(СтрШаблон(Нстр("ru = '(%1)';
											|en = '(%1)'"), НаименованиеРегиона));
	Иначе
		Наименование.Добавить(Нстр("ru = '(региональная)';
									|en = '(regional)'"));
	КонецЕсли;
	
	Возврат СтрСоединить(Наименование, " ");
	
КонецФункции

// Возвращает строковый код основания применения льготной налоговой ставки в формате декларации
// на основании номеров статьи, части, пункта, подпункта, абзаца (или иной единицы деления текста) нормативного акта.
//
// Параметры:
//  Статья    - Строка - номер статьи нормативного акта.
//  Часть     - Строка - номер части статьи нормативного акта.
//  Пункт     - Строка - номер пункта статьи или части статьи нормативного акта.
//  Подпункт  - Строка - номер подпункта статьи нормативного акта.
//  Абзац     - Строка - номер абзаца пункта или подпункта статьи нормативного акта.
//  Иное      - Строка - номер прочей единицы деления текста нормативного акта.
//
// Возвращаемое значение:
//  Строка - код основания применения льготной ставки налога (длина - 24).
//
Функция ПолныйКодОснованияЛьготы(Знач Статья, Знач Часть, Знач Пункт, Знач Подпункт, Знач Абзац, Знач Иное) Экспорт
	
	Статья   = ЗначащиеДанныеНормативногоПункта(Статья);
	Часть    = ЗначащиеДанныеНормативногоПункта(Часть);
	Пункт    = ЗначащиеДанныеНормативногоПункта(Пункт);
	Подпункт = ЗначащиеДанныеНормативногоПункта(Подпункт);
	Абзац    = ЗначащиеДанныеНормативногоПункта(Абзац);
	Иное     = ЗначащиеДанныеНормативногоПункта(Иное);
	
	Если ПустаяСтрока(Статья) И ПустаяСтрока(Часть) И ПустаяСтрока(Пункт) 
		 И ПустаяСтрока(Подпункт) И ПустаяСтрока(Абзац) И ПустаяСтрока(Иное) Тогда
		Возврат "";
	КонецЕсли;
	
	ДлинаРазряда = ДлинаРазрядаОснованияЛьготы();
		
	СтатьяПоФормату   = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Статья, ДлинаРазряда);
	ЧастьПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Часть, ДлинаРазряда);
	ПунктПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Пункт, ДлинаРазряда);
	ПодпунктПоФормату = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Подпункт, ДлинаРазряда);
	АбзацПоФормату    = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Абзац, ДлинаРазряда);
	ИноеПоФормату     = СтроковыеФункцииКлиентСервер.ДополнитьСтроку(Иное, ДлинаРазряда);
		
	Возврат (СтатьяПоФормату + ЧастьПоФормату + ПунктПоФормату + ПодпунктПоФормату + АбзацПоФормату + ИноеПоФормату);
	
КонецФункции

// Формирует по переданному коду основания льготы развернутые сведения о местном (региональном) нормативном акте -
// номере статьи, части, пункте, подпункте, абзаце (или иное), на основании которых применяется льготная ставка налога.
//
// Параметры:
//  КодОснованияЛьготы - Строка	- код основания применения льготной ставки налога в формате заявления о льготе (длина - 24).
//                                См. также ПолныйКодОснованияЛьготы().
//  БезЛидирующихНолей - Булево - если Истина, то значения структурных единиц закона возвращаются без лидирующих нолей.			 - 
// 
// Возвращаемое значение:
//  Структура - разобранный код основания льготы:
//  * Статья      - Строка
//  * Часть       - Строка
//  * Пункт       - Строка
//  * Подпункт    - Строка
//  * Абзац       - Строка
//  * Иное        - Строка
//
Функция НормативныеДанныеОснованияЛьготы(Знач КодОснованияЛьготы, БезЛидирующихНолей = Истина) Экспорт
	
	Результат = НовыйСведенияОПунктеМестногоЗакона();
		
	Если ПустаяСтрока(КодОснованияЛьготы) Тогда
		Возврат Результат;
	КонецЕсли;
	
	КодОснованияЛьготы = СокрЛП(КодОснованияЛьготы);
	
	Если СтрДлина(КодОснованияЛьготы) <> ДлинаОснованияЛьготы() Тогда
		ВызватьИсключение НСтр("ru = 'Неверный формат кода основания льготы по налогу на имущество';
								|en = 'Incorrect format of the code for the property tax relief basis'");
	КонецЕсли;
	
	ДлинаРазряда = ДлинаРазрядаОснованияЛьготы();
	
	СтатьяПоФормату   = Сред(КодОснованияЛьготы, 1, ДлинаРазряда);
	ЧастьПоФормату    = Сред(КодОснованияЛьготы, 1 + ДлинаРазряда, ДлинаРазряда);
	ПунктПоФормату    = Сред(КодОснованияЛьготы, 1 + 2 * ДлинаРазряда, ДлинаРазряда);
	ПодпунктПоФормату = Сред(КодОснованияЛьготы, 1 + 3 * ДлинаРазряда, ДлинаРазряда);
	АбзацПоФормату    = Сред(КодОснованияЛьготы, 1 + 4 * ДлинаРазряда, ДлинаРазряда);
	ИноеПоФормату     = Сред(КодОснованияЛьготы, 1 + 5 * ДлинаРазряда, ДлинаРазряда);
	
	Если БезЛидирующихНолей Тогда
		Результат.Статья   = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(СтатьяПоФормату, "0");
		Результат.Часть    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ЧастьПоФормату, "0");
		Результат.Пункт    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ПунктПоФормату, "0");
		Результат.Подпункт = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ПодпунктПоФормату, "0");
		Результат.Абзац    = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(АбзацПоФормату, "0");
		Результат.Иное     = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(ИноеПоФормату, "0");
	Иначе
		Результат.Статья   = СтатьяПоФормату;
		Результат.Часть    = ЧастьПоФормату;
		Результат.Пункт    = ПунктПоФормату;
		Результат.Подпункт = ПодпунктПоФормату;
		Результат.Абзац    = АбзацПоФормату;
		Результат.Иное     = ИноеПоФормату;
	КонецЕсли;	
	
	Возврат Результат;
	
КонецФункции

// Формирует по переданному полному коду основания льготы (24 символа) сокращенный код (12 символом) - оставляет только
// номер статьи, пункта и подпункта. Часть, абзац и иное игнорируются.
// Данный формат используется в декларации по налогу на имущество.
//
// Параметры:
//  КодОснованияЛьготы  - Строка - код основания применения льготной ставки налога в формате заявления о льготе (длина - 24).
//                                 См. также ПолныйКодОснованияЛьготы().
//
// Возвращаемое значение:
//  Строка - сокращенный код основания применения льготной ставки налога (длина - 12).
//
Функция СокращенныйКодОснованияЛьготы(Знач КодОснованияЛьготы) Экспорт 

	СведенияОПунктеРегЗакона = НормативныеДанныеОснованияЛьготы(КодОснованияЛьготы, Ложь);

	Возврат СведенияОПунктеРегЗакона.Статья + СведенияОПунктеРегЗакона.Пункт + СведенияОПунктеРегЗакона.Подпункт;
	
КонецФункции

Функция КодРегиональнойЛьготыПоНалогуНаИмуществоСнижениеНалоговойСтавки() Экспорт

	Возврат "2012400";	

КонецФункции

Функция КодРегиональнойЛьготыПоНалогуНаИмуществоСнижениеСуммыНалога() Экспорт

	Возврат "2012500";	

КонецФункции

// Готовит текстовое описание всех применяемых льгот по земельному участку
// 
// Параметры:
//  ПараметрыЛьготы - Структура - см. НовыеПараметрыОписанияЛьготыПоЗемельномуНалогу()
// 
// Возвращаемое значение:
//  Строка -  Описание применяемых льгот
Функция ПредставлениеНалоговойЛьготыПоЗемельномуНалогу(ПараметрыЛьготы) Экспорт
	
	ТекстНалоговойЛьготы = Новый Массив;
	
	Если ЗначениеЗаполнено(ПараметрыЛьготы.ОснованиеЛьготыПоНалоговойБазе) Тогда
		Если ПараметрыЛьготы.ВидЛьготыПоНалоговойБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.Освобождение") Тогда
			// В представлении льготы указан вид и код
			ТекстНалоговойЛьготы.Добавить(Строка(ПараметрыЛьготы.ОснованиеЛьготыПоНалоговойБазе));
		ИначеЕсли ПараметрыЛьготы.ВидЛьготыПоНалоговойБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.ДоляНеоблагаемойПлощади") Тогда
			ТекстНалоговойЛьготы.Добавить(СтрШаблон(
				НСтр("ru = 'Доля не облагаемой налогом площади %1/%2';
					|en = 'Share of the area not subject to tax %1/%2'"),
				ПараметрыЛьготы.ДоляНеОблагаемойНалогомПлощадиЧислитель,
				ПараметрыЛьготы.ДоляНеОблагаемойНалогомПлощадиЗнаменатель));
		ИначеЕсли ПараметрыЛьготы.ВидЛьготыПоНалоговойБазе = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеНалоговойБазыНаСумму") Тогда
			ТекстНалоговойЛьготы.Добавить(СтрШаблон(
				НСтр("ru = 'Необлагаемая налогом сумма %1 руб.';
					|en = 'Non-taxable amount of %1 rub.'"),
				ПараметрыЛьготы.НеОблагаемаяНалогомСумма));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЛьготы.ОснованиеЛьготыСнижениеСуммыНалога) Тогда
		Если ПараметрыЛьготы.ВидЛьготыСнижениеСуммыНалога = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаПроцент") Тогда
			ТекстНалоговойЛьготы.Добавить(СтрШаблон(
				НСтр("ru = 'Уменьшение суммы налога на %1 %%';
					|en = 'Tax amount reduction in the amount of %1 %%'"),
				ПараметрыЛьготы.ПроцентУменьшенияСуммыНалога));
		ИначеЕсли ПараметрыЛьготы.ВидЛьготыСнижениеСуммыНалога = ПредопределенноеЗначение("Перечисление.ВидыЛьготПоИмущественнымНалогам.СнижениеСуммыНаСумму") Тогда
			ТекстНалоговойЛьготы.Добавить(СтрШаблон(
				НСтр("ru = 'Уменьшение суммы налога в размере %1 руб.';
					|en = 'Tax amount reduction in the amount of %1 rub.'"),
				ПараметрыЛьготы.СуммаУменьшенияСуммыНалога));
		КонецЕсли;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(ПараметрыЛьготы.ОснованиеЛьготыСнижениеСтавки) Тогда
		ТекстНалоговойЛьготы.Добавить(СтрШаблон(
			НСтр("ru = 'Снижение налоговой ставки до %1 %%';
				|en = 'Reduce tax rate to %1 %%'"),
			ПараметрыЛьготы.СниженнаяНалоговаяСтавка));
	КонецЕсли;
	
	Возврат СтрСоединить(ТекстНалоговойЛьготы, "; ");
	
КонецФункции

// Формирует структуру с набором свойств, необходимых для описания льгот по земельному участку
// 
// Возвращаемое значение:
//  Структура -  Новые параметры описания льготы по земельному налогу:
// * ОснованиеЛьготыПоНалоговойБазе 
// * НачалоДействияЛьготыПоНалоговойБазе 
// * ОкончаниеДействияЛьготыПоНалоговойБазе 
// * ДоляНеОблагаемойНалогомПлощадиЗнаменатель 
// * ДоляНеОблагаемойНалогомПлощадиЧислитель 
// * НеОблагаемаяНалогомСумма 
// * ОснованиеЛьготыСнижениеСуммыНалога 
// * НачалоДействияЛьготыСнижениеСуммыНалога 
// * ОкончаниеДействияЛьготыСнижениеСуммыНалога 
// * СуммаУменьшенияСуммыНалога 
// * ПроцентУменьшенияСуммыНалога 
// * ОснованиеЛьготыСнижениеСтавки 
// * НачалоДействияЛьготыСнижениеСтавки 
// * ОкончаниеДействияЛьготыСнижениеСтавки 
// * СниженнаяНалоговаяСтавка 
// * ВидЛьготыПоНалоговойБазе 
// * ВидЛьготыСнижениеСуммыНалога 
// * ВидЛьготыСнижениеСтавки 
Функция НовыеПараметрыОписанияЛьготыПоЗемельномуНалогу() Экспорт
	
	ПараметрыЛьготы = Новый Структура(
		"ОснованиеЛьготыПоНалоговойБазе,
		|НачалоДействияЛьготыПоНалоговойБазе,
		|ОкончаниеДействияЛьготыПоНалоговойБазе,
		|ДоляНеОблагаемойНалогомПлощадиЧислитель,
		|ДоляНеОблагаемойНалогомПлощадиЗнаменатель,
		|НеОблагаемаяНалогомСумма,
		|ОснованиеЛьготыСнижениеСуммыНалога,
		|НачалоДействияЛьготыСнижениеСуммыНалога,
		|ОкончаниеДействияЛьготыСнижениеСуммыНалога,
		|СуммаУменьшенияСуммыНалога,
		|ПроцентУменьшенияСуммыНалога,
		|ОснованиеЛьготыСнижениеСтавки,
		|НачалоДействияЛьготыСнижениеСтавки,
		|ОкончаниеДействияЛьготыСнижениеСтавки,
		|СниженнаяНалоговаяСтавка,
		|ВидЛьготыПоНалоговойБазе,
		|ВидЛьготыСнижениеСуммыНалога,
		|ВидЛьготыСнижениеСтавки");
		
	Возврат ПараметрыЛьготы;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗначащиеДанныеНормативногоПункта(Знач НормативныйПункт)
	
	НезначащиеСимволы = Новый Массив;
	НезначащиеСимволы.Добавить("0");
	НезначащиеСимволы.Добавить("-");
	
	НормативныйПункт = СокрЛП(НормативныйПункт);
	
	Для Каждого НезначащийСимвол Из НезначащиеСимволы Цикл
		НормативныйПункт = СтроковыеФункцииКлиентСервер.УдалитьПовторяющиесяСимволы(НормативныйПункт, НезначащийСимвол);
	КонецЦикла;
	
	Возврат НормативныйПункт;
	
КонецФункции

Функция ДлинаРазрядаОснованияЛьготы()
	
	Возврат 4;
	
КонецФункции

Функция ДлинаОснованияЛьготы()
	
	Возврат 24;
	
КонецФункции

Функция НовыйСведенияОПунктеМестногоЗакона() 

	Результат = Новый Структура;
	
	Результат.Вставить("Статья",   "");
	Результат.Вставить("Часть",    "");
	Результат.Вставить("Пункт",    "");
	Результат.Вставить("Подпункт", "");
	Результат.Вставить("Абзац",    "");
	Результат.Вставить("Иное",     "");

	Возврат Результат;
	
КонецФункции

#КонецОбласти
