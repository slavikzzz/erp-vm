////////////////////////////////////////////////////////////////////////////////
// Процедуры и функции работы с объектами эксплуатации
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

//++ НЕ УТКА
#Область ПроцедурыИФункцииПроверкиЗаполнения

// Выполняет инициализацию структуры кэшированных значений проверки заполнения
//
// Параметры:
// 		КэшированныеЗначения - Структура - Структура кэшированных значений проверки заполнения.
//
Процедура ИнициализироватьКэшированныеЗначенияПроверкиЗаполнения(КэшированныеЗначения) Экспорт
	
	Если КэшированныеЗначения <> Неопределено Тогда
		Если КэшированныеЗначения.Свойство("Инициализированы") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	КэшированныеЗначения = Новый Структура;
	
	КэшированныеЗначения.Вставить("ОбязательныеРеквизиты", Новый Соответствие);
	КэшированныеЗначения.Вставить("ОбязательныеДопРеквизиты", Новый Соответствие);
	КэшированныеЗначения.Вставить("ПараметрыУчетаНаработок", Новый Соответствие);
	
	КэшированныеЗначения.Вставить("МенеджерВременныхТаблиц", Новый МенеджерВременныхТаблиц);
	
	Запрос = Новый Запрос(
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СоставРеквизитов.Имя КАК СТРОКА(255)) КАК Имя,
		|	ВЫРАЗИТЬ(СоставРеквизитов.Синоним КАК СТРОКА(255)) КАК Синоним,
		|	ВЫРАЗИТЬ(СоставРеквизитов.ОбязателенДляЗаполнения КАК БУЛЕВО) КАК ОбязателенДляЗаполнения,
		|	ВЫРАЗИТЬ(СоставРеквизитов.ТолькоПросмотрОбязательности КАК БУЛЕВО) КАК ТолькоПросмотрОбязательности
		|ПОМЕСТИТЬ РеквизитыОбъектов
		|ИЗ
		|	&СоставРеквизитовОбъекта КАК СоставРеквизитов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВЫРАЗИТЬ(СоставРеквизитов.Имя КАК СТРОКА(255)) КАК Имя,
		|	ВЫРАЗИТЬ(СоставРеквизитов.Синоним КАК СТРОКА(255)) КАК Синоним,
		|	ВЫРАЗИТЬ(СоставРеквизитов.ОбязателенДляЗаполнения КАК БУЛЕВО) КАК ОбязателенДляЗаполнения,
		|	ВЫРАЗИТЬ(СоставРеквизитов.ТолькоПросмотрОбязательности КАК БУЛЕВО) КАК ТолькоПросмотрОбязательности
		|ПОМЕСТИТЬ РеквизитыУзлов
		|ИЗ
		|	&СоставРеквизитовУзла КАК СоставРеквизитов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДопРеквизиты.Свойство,
		|	ДопРеквизиты.Свойство.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно
		|ПОМЕСТИТЬ ОбщиеДопРеквизитыОбъектов
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизиты
		|ГДЕ
		|	ДопРеквизиты.Ссылка = &Набор_Справочник_ОбъектыЭксплуатации_Общие
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДопРеквизиты.Свойство,
		|	ДопРеквизиты.Свойство.ЗаполнятьОбязательно КАК ЗаполнятьОбязательно
		|ПОМЕСТИТЬ ОбщиеДопРеквизитыУзлов
		|ИЗ
		|	Справочник.НаборыДополнительныхРеквизитовИСведений.ДополнительныеРеквизиты КАК ДопРеквизиты
		|ГДЕ
		|	ДопРеквизиты.Ссылка = &Набор_Справочник_УзлыОбъектовЭксплуатации_Общие");
	
	Запрос.УстановитьПараметр("СоставРеквизитовОбъекта", Справочники.ОбъектыЭксплуатации.СоставРеквизитовОбъектаЭксплуатации());
	Запрос.УстановитьПараметр("СоставРеквизитовУзла", Справочники.УзлыОбъектовЭксплуатации.СоставРеквизитов());
	Запрос.УстановитьПараметр("Набор_Справочник_ОбъектыЭксплуатации_Общие", УправлениеСвойствами.НаборСвойствПоИмени("Справочник_ОбъектыЭксплуатации_Общие"));
	Запрос.УстановитьПараметр("Набор_Справочник_УзлыОбъектовЭксплуатации_Общие", УправлениеСвойствами.НаборСвойствПоИмени("Справочник_УзлыОбъектовЭксплуатации_Общие"));
	
	Запрос.МенеджерВременныхТаблиц = КэшированныеЗначения.МенеджерВременныхТаблиц;
	Запрос.Выполнить();
	
	КэшированныеЗначения.Вставить("Инициализированы");
	
КонецПроцедуры

// Выполняет инициализацию структуры потока ошибок проверки заполнения
//
// Параметры:
// 		ПотокОшибок - Структура - Структура потока ошибок проверки заполнения.
//
Процедура ИнициализироватьПотокОшибок(ПотокОшибок) Экспорт
	
	Если ПотокОшибок <> Неопределено Тогда
		Если ПотокОшибок.Свойство("Инициализирован") Тогда
			Возврат;
		КонецЕсли;
	КонецЕсли;
	
	ПотокОшибок = Новый Структура;
	
	ПотокОшибок.Вставить("СписокОшибок", Новый Массив);
	ПотокОшибок.Вставить("ГруппыОшибок", Новый Соответствие);
	ПотокОшибок.Вставить("СчетчикОшибок", Новый Соответствие);
	
	ПотокОшибок.Вставить("Инициализирован");
	
КонецПроцедуры

// Добавляет в список ошибок новую ошибку пользователя для дальнейшей отправки
// с помощью процедуры СообщитьОшибкиПользователю().
//  Используется в процедурах ОбработкаПроверкиЗаполнения.
//
// Параметры:
// 		Ошибки - Структура - Содержит поток ошибок:
// 		              * СписокОшибок - Массив -
// 		              * СчетчикОшибок - Соответствие - 
//
// 		ОбъектОшибки - СправочникСсылка.ОбъектыЭксплуатации, СправочникСсылка.УзлыОбъектовЭксплуатации - объект, владелец ошибки.
//
// 		ПолеОшибки - Строка - значение, которое задается в свойстве Поле объекта СообщениеПользователю.
//                    Для автоподстановки номера строки должна содержать "%1".
//                    Например, "Объект.ИНН" или "Объект.Пользователи[%1].Пользователь".
//
// 		ТекстДляОднойОшибки - Строка - текст ошибки для случая, когда ГруппаОшибок в коллекции только одна,
//                    например, НСтр("ru = 'Пользователь не выбран.'").
//
// 		ГруппаОшибок - Произвольный - используется для выбора либо текста для одной ошибки,
//                    либо текста для нескольких ошибок, например, имя "Объект.Пользователи".
//                    Если значение не заполнено, тогда используется текст для одной ошибки.
//
// 		НомерСтроки - Число - значение от 0 ... , определяющее номер строки, который нужно подставить
//                    в строку ПолеОшибки и в ТекстДляНесколькихОшибок (подставляется НомерСтроки + 1).
//
// 		ТекстДляНесколькихОшибок - Строка - текст ошибки для случая, когда добавлено несколько ошибок с одинаковым
//                    свойством ГруппаОшибок, например, НСтр("ru = 'Пользователь в строке %1 не выбран.'").
//
Процедура ДобавитьОшибкуПользователю(Ошибки, Знач ОбъектОшибки, Знач ПолеОшибки, Знач ТекстДляОднойОшибки, Знач ГруппаОшибок = "", Знач НомерСтроки = 0, Знач ТекстДляНесколькихОшибок = "") Экспорт
	
	Если ЗначениеЗаполнено(ГруппаОшибок) Тогда
		
		Если Ошибки.ГруппыОшибок[ГруппаОшибок] = Неопределено Тогда
			// Группа ошибок использовалась один раз, используется текст для одной ошибки.
			Ошибки.ГруппыОшибок.Вставить(ГруппаОшибок, Ложь);
		Иначе
			// Группа ошибок использовалась несколько раз, используется текст для нескольких ошибок.
			Ошибки.ГруппыОшибок.Вставить(ГруппаОшибок, Истина);
		КонецЕсли;
	КонецЕсли;
	
	Ошибка = Новый Структура;
	Ошибка.Вставить("ОбъектОшибки",             ОбъектОшибки);
	Ошибка.Вставить("ПолеОшибки",               ПолеОшибки);
	Ошибка.Вставить("ТекстДляОднойОшибки",      ТекстДляОднойОшибки);
	Ошибка.Вставить("ГруппаОшибок",             ГруппаОшибок);
	Ошибка.Вставить("НомерСтроки",              НомерСтроки);
	Ошибка.Вставить("ИндексСтроки",             НомерСтроки);
	Ошибка.Вставить("ТекстДляНесколькихОшибок", ТекстДляНесколькихОшибок);
	
	Ошибки.СписокОшибок.Добавить(Ошибка);
	
	Счетчик = Ошибки.СчетчикОшибок.Получить(ОбъектОшибки);
	Если Счетчик = Неопределено Тогда
		Ошибки.СчетчикОшибок.Вставить(ОбъектОшибки, 1);
	Иначе
		Ошибки.СчетчикОшибок.Вставить(ОбъектОшибки, Счетчик+1);
	КонецЕсли;
	
КонецПроцедуры

// Процедура сообщает ошибки проверки заполнения
//
// Параметры:
// 		Ошибки  - Неопределено - возврат, значение, установленное при использовании процедуры ОбщегоНазначенияКлиентСервер.ДобавитьОшибкуПользователю().
// 		Отказ - Булево - устанавливается Истина, если ошибки сообщались.
//
Процедура СообщитьОшибкиПроверкиЗаполнения(Ошибки, Отказ=Ложь) Экспорт
	
	Если Ошибки.СписокОшибок.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ОбщегоНазначенияКлиентСервер.СообщитьОшибкиПользователю(Ошибки, Отказ);
	
КонецПроцедуры

#КонецОбласти
//-- НЕ УТКА

#КонецОбласти

