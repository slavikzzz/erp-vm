////////////////////////////////////////////////////////////////////////////////
// Модуль "ВстречнаяКорректировкаНазначения", содержит процедуры и функции для 
// работы с механизмом встречной корректировки.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

// Возвращает параметры отбора встречной корректировки назначения
//
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с ключами:
//   * Номенклатура       - СправочникСсылка.Номенклатура - 
//   * Характеристика     - СправочникСсылка.ХарактеристикиНоменклатуры - 
//   * Склад              - СправочникСсылка.Склады - 
//   * ПоНазначению       - Число - 0 - без отбора,
//                                  1 - отбор на равенство,
//                                  2 - отбор на неравенство
//   * Расход             - Число - 
//   * Распределено       - Число - 
//   * КлючСтроки         - УникальныйИдентификатор - 
//   * КлючСтрокиРодитель - УникальныйИдентификатор - 
//
Функция ТаблицаОтбораТоваровВстречнойКорректировкиНазначения() Экспорт
	
	ПараметрыОтбора = Новый ТаблицаЗначений();
	ПараметрыОтбора.Колонки.Добавить("Номенклатура", Новый ОписаниеТипов("СправочникСсылка.Номенклатура"));
	ПараметрыОтбора.Колонки.Добавить("Характеристика", Новый ОписаниеТипов("СправочникСсылка.ХарактеристикиНоменклатуры"));
	ПараметрыОтбора.Колонки.Добавить("Склад", Новый ОписаниеТипов("СправочникСсылка.Склады"));
	ПараметрыОтбора.Колонки.Добавить("ПоНазначению", ОбщегоНазначения.ОписаниеТипаЧисло(1, 0, ДопустимыйЗнак.Неотрицательный));
	ПараметрыОтбора.Колонки.Добавить("Расход", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3, ДопустимыйЗнак.Неотрицательный));
	ПараметрыОтбора.Колонки.Добавить("Распределено", ОбщегоНазначения.ОписаниеТипаЧисло(15, 3, ДопустимыйЗнак.Неотрицательный));
	ПараметрыОтбора.Колонки.Добавить("КлючСтроки", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ПараметрыОтбора.Колонки.Добавить("КлючСтрокиРодитель", Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	Возврат ПараметрыОтбора;
	
КонецФункции

//Возвращает данные для встречной корректировки назначения
//
// Параметры:
//  Параметры - Структура - с ключами:
//   * Заказ            - ДокументСсылка.ЗаказНаПроизводство2_2 - 
//   * Номенклатура     - СправочникСсылка.Номенклатура - 
//   * Характеристика   - СправочникСсылка.ХарактеристикиНоменклатуры - 
//   * Склад            - СправочникСсылка.Склады - 
//   * Назначение       - СправочникСсылка.Назначения - 
//   * КлючНоменклатура - УникальныйИдентификатор - 
//   * КлючПартия       - УникальныйИдентификатор - 
//  УникальныйИдентификатор - УникальныйИдентификатор - идентификатор формы для помещения отбора товаров в хранилище
//
// Возвращаемое значение:
//  Структура - с ключами:
//   * КоличествоПередатьПодНазначение  - см. КоличествоТовараВстречнойКорректировкиНазначения
//   * ТоварыОтбор - см. ТоварыОтбораВстречнойКорректировкиНазначения
//
Функция ДанныеВстречнойКорректировкиНазначения(Параметры, УникальныйИдентификатор) Экспорт
	
	Данные =  Новый Структура;
	Данные.Вставить("КоличествоПередатьПодНазначение", КоличествоТовараВстречнойКорректировкиНазначения(Параметры));
	ТоварыОтбора = ТоварыОтбораВстречнойКорректировкиНазначения(Параметры);
	Данные.Вставить("АдресТоваров", ПоместитьВоВременноеХранилище(ТоварыОтбора, УникальныйИдентификатор));
	
	Возврат Данные;
	
КонецФункции

//Возвращает данные для встречной корректировки назначения
//
// Параметры:
//  Параметры - Структура - с ключами:
//   * Заказ          - ДокументСсылка.ЗаказНаПроизводство2_2 - 
//   * Номенклатура   - СправочникСсылка.Номенклатура - 
//   * Характеристика - СправочникСсылка.ХарактеристикиНоменклатуры - 
//   * Склад          - СправочникСсылка.Склады - 
//   * Назначение     - СправочникСсылка.Назначения - 
//
// Возвращаемое значение:
//  Число - 
//
Функция КоличествоТовараВстречнойКорректировкиНазначения(Параметры) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СтруктураЗаказа.Номенклатура        КАК Номенклатура,
	|	СтруктураЗаказа.Характеристика      КАК Характеристика,
	|	СтруктураЗаказа.Склад               КАК Склад,
	|	СтруктураЗаказа.Назначение          КАК Назначение,
	|	СтруктураЗаказа.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	СтруктураЗаказа.КлючНоменклатура    КАК КлючНоменклатура,
	|	СУММА(СтруктураЗаказа.Требуется)    КАК Количество
	|
	|ПОМЕСТИТЬ ТаблицаДанных
	|ИЗ
	|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|ГДЕ
	|	СтруктураЗаказа.ЗаказНаПроизводство = &Заказ
	|	И СтруктураЗаказа.Номенклатура      = &Номенклатура
	|	И СтруктураЗаказа.Характеристика    = &Характеристика
	|	И СтруктураЗаказа.Склад             = &Склад
	|	И СтруктураЗаказа.Назначение        = &Назначение
	|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
	|
	|СГРУППИРОВАТЬ ПО
	|	СтруктураЗаказа.Номенклатура,
	|	СтруктураЗаказа.Характеристика,
	|	СтруктураЗаказа.Склад,
	|	СтруктураЗаказа.Назначение,
	|	СтруктураЗаказа.ЗаказНаПроизводство,
	|	СтруктураЗаказа.КлючНоменклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура
	|;
	|
	|ВЫБРАТЬ
	|	СУММА(Таблица.Количество) КАК Количество
	|ИЗ
	|	(ВЫБРАТЬ
	|		ТаблицаДанных.Количество КАК Количество
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		-СтруктураЗаказа.РаспределеноИзЗапасов
	|		-СтруктураЗаказа.РаспределеноИзЗапасовОбособленно КАК Количество
	|	ИЗ
	|		РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
	|			ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанных КАК ТаблицаДанных
	|			ПО СтруктураЗаказа.Номенклатура        = ТаблицаДанных.Номенклатура
	|			 И СтруктураЗаказа.Характеристика      = ТаблицаДанных.Характеристика
	|			 И СтруктураЗаказа.Склад               = ТаблицаДанных.Склад
	|			 И СтруктураЗаказа.Назначение          = ТаблицаДанных.Назначение
	|			 И СтруктураЗаказа.ЗаказНаПроизводство = ТаблицаДанных.ЗаказНаПроизводство
	|			 И СтруктураЗаказа.КлючНоменклатура    = ТаблицаДанных.КлючНоменклатура
	|	ГДЕ
	|		ТаблицаДанных.КлючНоменклатура ЕСТЬ НЕ NULL
	|		И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)) КАК Таблица
	|";

	Запрос.УстановитьПараметр("Заказ",          Параметры.Заказ);
	Запрос.УстановитьПараметр("Номенклатура",   Параметры.Номенклатура);
	Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
	Запрос.УстановитьПараметр("Склад",          Параметры.Склад);
	Запрос.УстановитьПараметр("Назначение",     Параметры.Назначение);
	
	Результат = Запрос.Выполнить();
	Выборка = Результат.Выбрать();
	Выборка.Следующий();
	
	Возврат Выборка.Количество;
	
КонецФункции

//Возвращает данные товаров отбора встречной корректировки назначения
//
// Параметры:
//  Параметры - Структура - с ключами:
//   * Номенклатура     - СправочникСсылка.Номенклатура - 
//   * Характеристика   - СправочникСсылка.ХарактеристикиНоменклатуры -
//   * Склад            - СправочникСсылка.Склады -  
//   * КлючНоменклатура - УникальныйИдентификатор - 
//   * КлючПартия       - УникальныйИдентификатор - 
//
// Возвращаемое значение:
//  см. ТаблицаОтбораТоваровВстречнойКорректировкиНазначения
//
Функция ТоварыОтбораВстречнойКорректировкиНазначения(Параметры) Экспорт
	
	ТаблицаОтбораТоваров = ТаблицаОтбораТоваровВстречнойКорректировкиНазначения();
	ПараметрыОтбора = ТаблицаОтбораТоваров.Добавить();
	ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Параметры);
	ПараметрыОтбора.ПоНазначению = 2;
	
	ТаблицаРасход = Новый ТаблицаЗначений;
	ТаблицаРасход.Колонки.Добавить("КлючНоменклатура", Новый ОписаниеТипов("УникальныйИдентификатор"));
	ТаблицаРасход.Колонки.Добавить("КлючПартия",       Новый ОписаниеТипов("УникальныйИдентификатор"));
	
	СтрокаТаблицы = ТаблицаРасход.Добавить();
	СтрокаТаблицы.КлючНоменклатура = Параметры.КлючНоменклатура;
	СтрокаТаблицы.КлючПартия       = Параметры.КлючПартия;
	
	ПерваяИтерация = Истина;
	
	Пока ТаблицаРасход.Количество() > 0 Цикл
		
		Запрос = Новый Запрос;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ТаблицаРасход.КлючНоменклатура КАК КлючНоменклатура,
		|	ТаблицаРасход.КлючПартия       КАК КлючПартия
		|ПОМЕСТИТЬ ТаблицаРасход
		|ИЗ
		|	&ТаблицаРасход КАК ТаблицаРасход
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючНоменклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПриход.КлючНоменклатура КАК КлючНоменклатура,
		|	ТаблицаПриход.КлючПартия       КАК КлючПартия
		|ПОМЕСТИТЬ ТаблицаПриход
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК ТаблицаПриход
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРасход КАК ТаблицаРасход
		|		ПО ТаблицаПриход.КлючНоменклатура = ТаблицаРасход.КлючНоменклатура
		|		 И ТаблицаПриход.КлючПартия <> ТаблицаРасход.КлючПартия
		|ГДЕ
		|	ТаблицаРасход.КлючНоменклатура ЕСТЬ НЕ NULL
		|	И ТаблицаПриход.ВидСтроки В (
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПолуфабриката),
		|				ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Перемещение))
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КлючПартия
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура                                  КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика                                КАК Характеристика,
		|	СтруктураЗаказа.Склад                                         КАК Склад,
		|	СтруктураЗаказа.Назначение                                    КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство                           КАК ЗаказНаПроизводство,
		|	СУММА(СтруктураЗаказа.Требуется)                              КАК Расход,
		|	СтруктураЗаказа.КлючНоменклатура                              КАК КлючНоменклатура,
		|	СтруктураЗаказа.КлючПартия                                    КАК КлючПартия,
		|	СтруктураЗаказа.КлючНоменклатура                              КАК КлючСтроки,
		|	ЕСТЬNULL(&КлючСтрокиРодитель, ТаблицаПриход.КлючНоменклатура) КАК КлючСтрокиРодитель
		|ПОМЕСТИТЬ ТаблицаДанных
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаПриход КАК ТаблицаПриход
		|		ПО СтруктураЗаказа.КлючПартия = ТаблицаПриход.КлючПартия
		|ГДЕ
		|	ТаблицаПриход.КлючПартия ЕСТЬ НЕ NULL
		|	И (СтруктураЗаказа.Номенклатура, СтруктураЗаказа.Характеристика) НЕ В (
		|				ВЫБРАТЬ
		|					&Номенклатура   КАК Номенклатура,
		|					&Характеристика КАК Характеристика)
		|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Потребление)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура,
		|	СтруктураЗаказа.КлючПартия,
		|	ТаблицаПриход.КлючНоменклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтруктураЗаказа.Номенклатура                                  КАК Номенклатура,
		|	СтруктураЗаказа.Характеристика                                КАК Характеристика,
		|	СтруктураЗаказа.Склад                                         КАК Склад,
		|	СтруктураЗаказа.Назначение                                    КАК Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство                           КАК ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура                              КАК КлючНоменклатура,
		|	СУММА(СтруктураЗаказа.РаспределеноИзЗапасов
		|		+ СтруктураЗаказа.РаспределеноИзЗапасовОбособленно)        КАК Распределено
		|ПОМЕСТИТЬ ТаблицаРаспределено
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК СтруктураЗаказа
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаДанных КАК ТаблицаДанных
		|		ПО СтруктураЗаказа.Номенклатура        = ТаблицаДанных.Номенклатура
		|		 И СтруктураЗаказа.Характеристика      = ТаблицаДанных.Характеристика
		|		 И СтруктураЗаказа.Склад               = ТаблицаДанных.Склад
		|		 И СтруктураЗаказа.Назначение          = ТаблицаДанных.Назначение
		|		 И СтруктураЗаказа.ЗаказНаПроизводство = ТаблицаДанных.ЗаказНаПроизводство
		|		 И СтруктураЗаказа.КлючНоменклатура    = ТаблицаДанных.КлючНоменклатура
		|ГДЕ
		|	ТаблицаДанных.КлючНоменклатура ЕСТЬ НЕ NULL
		|	И СтруктураЗаказа.ВидСтроки = ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Зарезервировано)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтруктураЗаказа.Номенклатура,
		|	СтруктураЗаказа.Характеристика,
		|	СтруктураЗаказа.Склад,
		|	СтруктураЗаказа.Назначение,
		|	СтруктураЗаказа.ЗаказНаПроизводство,
		|	СтруктураЗаказа.КлючНоменклатура
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура, Характеристика, Склад, Назначение, ЗаказНаПроизводство, КлючНоменклатура
		|;
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаДанных.Номенклатура                    КАК Номенклатура,
		|	ТаблицаДанных.Характеристика                  КАК Характеристика,
		|	ТаблицаДанных.Склад                           КАК Склад,
		|	ТаблицаДанных.Расход                          КАК Расход,
		|	ЕСТЬNULL(ТаблицаРаспределено.Распределено, 0) КАК Распределено,
		|	ТаблицаДанных.КлючНоменклатура                КАК КлючНоменклатура,
		|	ТаблицаДанных.КлючПартия                      КАК КлючПартия,
		|	ТаблицаДанных.КлючСтроки                      КАК КлючСтроки,
		|	ТаблицаДанных.КлючСтрокиРодитель              КАК КлючСтрокиРодитель
		|ИЗ
		|	ТаблицаДанных КАК ТаблицаДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ТаблицаРаспределено КАК ТаблицаРаспределено
		|		ПО ТаблицаРаспределено.Номенклатура        = ТаблицаДанных.Номенклатура
		|		 И ТаблицаРаспределено.Характеристика      = ТаблицаДанных.Характеристика
		|		 И ТаблицаРаспределено.Склад               = ТаблицаДанных.Склад
		|		 И ТаблицаРаспределено.Назначение          = ТаблицаДанных.Назначение
		|		 И ТаблицаРаспределено.ЗаказНаПроизводство = ТаблицаДанных.ЗаказНаПроизводство
		|		 И ТаблицаРаспределено.КлючНоменклатура    = ТаблицаДанных.КлючНоменклатура
		|";
		
		Запрос.УстановитьПараметр("Номенклатура",   Параметры.Номенклатура);
		Запрос.УстановитьПараметр("Характеристика", Параметры.Характеристика);
		Запрос.УстановитьПараметр("ТаблицаРасход",  ТаблицаРасход); 
		Запрос.УстановитьПараметр("КлючСтрокиРодитель",
			?(ПерваяИтерация, Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"), Null));
		
		ТаблицаРасход = Запрос.Выполнить().Выгрузить();
		ТаблицаРасход.Колонки.Добавить("ПоНазначению");
		ТаблицаРасход.ЗаполнитьЗначения(1, "ПоНазначению");
		ОбщегоНазначенияУТКлиентСервер.ДополнитьТаблицу(ТаблицаРасход, ТаблицаОтбораТоваров);
		
		ПерваяИтерация = Ложь;
		
	КонецЦикла;
	
	Возврат ТаблицаОтбораТоваров;
	
КонецФункции

#КонецОбласти