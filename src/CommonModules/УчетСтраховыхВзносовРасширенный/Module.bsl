
#Область СлужебныйПрограммныйИнтерфейс

// Составляет массив видов доходов, включаемых в базу ФСС.
//
// Возвращаемое значение - массив видов доходов.
//
Функция ВидыДоходовВключаемыхВБазуФСС() Экспорт
	
	ВидыДоходов = Новый Массив;
		
	Запрос = Новый Запрос(
	"ВЫБРАТЬ
	|	ВидыДоходовПоСтраховымВзносам.Ссылка
	|ИЗ
	|	Справочник.ВидыДоходовПоСтраховымВзносам КАК ВидыДоходовПоСтраховымВзносам
	|ГДЕ
	|	ВидыДоходовПоСтраховымВзносам.ВходитВБазуФСС");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ВидыДоходов.Добавить(Выборка.Ссылка);
	КонецЦикла;
	
	Возврат ВидыДоходов;
	
КонецФункции

// Составляет массив видов доходов, необлагаемых страховыми взносами.
//
// Возвращаемое значение - массив значений типа СправочникСсылка.ВидыДоходовПоСтраховымВзносам.
//
Функция ВидыДоходовНеоблагаемыеСтраховымиВзносами() Экспорт

    ВидыДоходов = Новый Массив;

    Запрос = Новый Запрос;
	Запрос.Текст =
    "ВЫБРАТЬ
    |	ВидыДоходовПоСтраховымВзносам.Ссылка
    |ИЗ
    |	Справочник.ВидыДоходовПоСтраховымВзносам КАК ВидыДоходовПоСтраховымВзносам
    |ГДЕ
    |	НЕ ВидыДоходовПоСтраховымВзносам.ВходитВБазуПФР
    |	И НЕ ВидыДоходовПоСтраховымВзносам.ВходитВБазуФСС
    |	И НЕ ВидыДоходовПоСтраховымВзносам.ВходитВБазуФОМС
    |	И НЕ ВидыДоходовПоСтраховымВзносам.ВходитВБазуФСС_НС";

    Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("Ссылка");

КонецФункции

// Функция возвращает структуру с доходами страховых взносов.
//
// Параметры:
//	ПрочиеДоходы - структура
//		Ключ - вид дохода, для которого надо подобрать вид дохода.
//
Функция ВидыДоходовСтраховыеВзносыПрочихДоходовИВыплатБывшимСотрудникам(ПрочиеДоходы) Экспорт

	СпрВидов = Справочники.ВидыДоходовПоСтраховымВзносам;
	
	ДоходыСтраховыеВзносы = Новый Структура;
	Для каждого ВидДоход Из ПрочиеДоходы Цикл
		
		Доход = ВидДоход.Ключ;
		Если Доход = "АрендаТранспорта" Тогда
			СсылкаНаЭлемент = СпрВидов.НеЯвляетсяОбъектом;
		ИначеЕсли Доход = "ПризыВЦеляхРекламы" Тогда
			СсылкаНаЭлемент = СпрВидов.НеЯвляетсяОбъектом;
		ИначеЕсли Доход = "Подарки" Тогда
			СсылкаНаЭлемент = СпрВидов.НеЯвляетсяОбъектом;
		ИначеЕсли Доход = "ЛицензионныйДоговор" Тогда
			СсылкаНаЭлемент = СпрВидов.АвторскиеЛитературныеПроизведения;
		ИначеЕсли Доход = "ОтчуждениеАвторскихПрав" Тогда
			СсылкаНаЭлемент = СпрВидов.АвторскиеЛитературныеПроизведения;
		ИначеЕсли Доход = "ВознагражденияНаследникам" Тогда
			СсылкаНаЭлемент = СпрВидов.НеЯвляетсяОбъектом;
		ИначеЕсли Доход = "МатериальнаяПомощьБывшимСотрудникам" Тогда
			СсылкаНаЭлемент = СпрВидов.Матпомощь;
		ИначеЕсли Доход = "ВозмещениеСтоимостиМедикаментов" Тогда
			СсылкаНаЭлемент = СпрВидов.НеЯвляетсяОбъектом;	
		Иначе
			СсылкаНаЭлемент = СпрВидов.ПустаяСсылка();
		КонецЕсли;
		
		ДоходыСтраховыеВзносы.Вставить(Доход, СсылкаНаЭлемент);
		
	КонецЦикла;
		
	Возврат ДоходыСтраховыеВзносы;

КонецФункции

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТКадровыхДанных, которая содержит следующие поля.
//		Сотрудник - СправочникСсылка.Сотрудники
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		Должность - СправочникСсылка.Должности
//		ЯвляетсяФармацевтом - булево.
//		ПрименяемыйЛьготныйТерриториальныйТариф - СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//		ЯвляетсяРаботникомСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//		ЯвляетсяПрокурором - булево.
//		ЯвляетсяВоеннослужащим - булево.
//		РаботаетВСтуденческомОтряде - булево.
//		ЯвляетсяЧленомЛетногоЭкипажа - булево.
//		ЯвляетсяШахтером - булево
//		КоэффициентУчетаСтроки - число от 0 до 1.
//		УсловияТруда - СправочникСсылка.УсловияТруда
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит вр. таблицу ВТНачисления с полями.
//				Сотрудник - СправочникСсылка.Сотрудники
//				ДатаНачала - дата -
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления -
//				ПодразделениеОрганизации - СправочникСсылка.ПодразделенияОрганизаций
//				УсловияТруда - СправочникСсылка.УсловияТруда
//		МенеджерКадровогоУчета - Общий модуль - держатель метода СоздатьВТКадровыеДанныеСотрудников.
//
Процедура СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, МенеджерКадровогоУчета) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользуютсяРаботыСДосрочнойПенсией", Новый Структура("Организация",Организация)) Тогда
		
		УчетСтраховыхВзносовБазовый.СформироватьВТКадровыхДанных(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, Ложь);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	КадровыхДанных.Сотрудник,
		|	КадровыхДанных.ДатаНачала,
		|	КадровыхДанных.Начисление,
		|	КадровыхДанных.Подразделение,
		|	СписокНачислений.УсловияТруда,
		|	КадровыхДанных.Должность,
		|	КадровыхДанных.ЯвляетсяРаботникомСДосрочнойПенсией,
		|	КадровыхДанных.ЯвляетсяФармацевтом,
		|	КадровыхДанных.ПрименяемыйЛьготныйТерриториальныйТариф,
		|	КадровыхДанных.ЯвляетсяПрокурором,
		|	КадровыхДанных.ЯвляетсяВоеннослужащим,
		|	КадровыхДанных.РаботаетВСтуденческомОтряде,
		|	КадровыхДанных.ЯвляетсяЧленомЛетногоЭкипажа,
		|	КадровыхДанных.ЯвляетсяШахтером,
		|	КадровыхДанных.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТВременнаяТаблица
		|ИЗ
		|	ВТКадровыхДанных КАК КадровыхДанных
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК СписокНачислений
		|		ПО КадровыхДанных.Сотрудник = СписокНачислений.Сотрудник
		|			И КадровыхДанных.ДатаНачала = СписокНачислений.ДатаНачала
		|			И КадровыхДанных.Подразделение = СписокНачислений.ПодразделениеОрганизации
		|			И КадровыхДанных.Начисление = СписокНачислений.Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТКадровыхДанных
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица.Сотрудник,
		|	ВременнаяТаблица.ДатаНачала,
		|	ВременнаяТаблица.Начисление,
		|	ВременнаяТаблица.Подразделение,
		|	ВременнаяТаблица.УсловияТруда,
		|	ВременнаяТаблица.Должность,
		|	ВременнаяТаблица.ЯвляетсяРаботникомСДосрочнойПенсией,
		|	ВременнаяТаблица.ЯвляетсяФармацевтом,
		|	ВременнаяТаблица.ПрименяемыйЛьготныйТерриториальныйТариф,
		|	ВременнаяТаблица.ЯвляетсяПрокурором,
		|	ВременнаяТаблица.ЯвляетсяВоеннослужащим,
		|	ВременнаяТаблица.РаботаетВСтуденческомОтряде,
		|	ВременнаяТаблица.ЯвляетсяЧленомЛетногоЭкипажа,
		|	ВременнаяТаблица.ЯвляетсяШахтером,
		|	ВременнаяТаблица.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТКадровыхДанных
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременнаяТаблица";
		
		УчетСтраховыхВзносов.ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, "КадровыхДанных", , Ложь);
		УчетСтраховыхВзносов.ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, "ВременнаяТаблица", , Ложь);
		
		Запрос.Выполнить();
		
		Возврат
		
	КонецЕсли;
	
	Если МенеджерКадровогоУчета = Неопределено Тогда
		МенеджерКадровогоУчета = КадровыйУчет;
	КонецЕсли;
	
	НачалоПериода = НачалоМесяца(ПериодРегистрации);
	ОкончаниеПериода = КонецМесяца(ПериодРегистрации);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("НачалоПериода", НачалоПериода);
	Запрос.УстановитьПараметр("ОкончаниеПериода", ОкончаниеПериода);
	Запрос.УстановитьПараметр("ИспользоватьШтатноеРасписание", ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание"));
	
	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТПериоды(МенеджерВременныхТаблиц, НачалоПериода, ОкончаниеПериода, "ДЕНЬ");
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	Периоды.Период,
	|	Периоды.Период КАК ДатаНачала,
	|	Периоды.Период КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТПоДнямМесяца
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериоды КАК Периоды
	|		ПО (ИСТИНА)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Интервалы.Сотрудник,
	|	НАЧАЛОПЕРИОДА(Интервалы.Период, ДЕНЬ) КАК ДатаНачала,
	|	КОНЕЦПЕРИОДА(Интервалы.Период, ДЕНЬ) КАК ДатаОкончания
	|ПОМЕСТИТЬ ВТСотрудникиИнтервалы
	|ИЗ
	|	ВТПоДнямМесяца КАК Интервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериоды";
	Запрос.Выполнить();
	
	// Получаем данные о времени за интервалы.
	УчетРабочегоВремениРасширенный.СоздатьВТРабочееСотрудниковВремяПоИнтервалам(МенеджерВременныхТаблиц, ПериодРегистрации);

	// Получаем данные о состояниях.
	СостоянияСотрудников.СоздатьВТПериодыСостоянийСотрудников(МенеджерВременныхТаблиц, "ВТПоДнямМесяца");

	КадровыеДанные = "ДатаПриема, ДатаУвольнения, Должность, ДолжностьПоШтатномуРасписанию, ЯвляетсяРаботникомСДосрочнойПенсией";
	КадровыйУчет.ДополнитьИменаКадровыхДанных(КадровыеДанные);
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц,
		"ВТПоДнямМесяца");
	МенеджерКадровогоУчета.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
	
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОСотруднике.Сотрудник,
	|	ДанныеОСотруднике.ДатаПриема
	|ПОМЕСТИТЬ ВТДатыПриема
	|ИЗ
	|	ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	ВЫБОР
	|		КОГДА Начисления.Ссылка ЕСТЬ NULL 
	|			ТОГДА ИСТИНА
	|		КОГДА Начисления.НачисляетсяВЦеломЗаМесяц
	|			ТОГДА ИСТИНА
	|		КОГДА СписокНачислений.ДатаНачала МЕЖДУ &НачалоПериода И &ОкончаниеПериода
	|				ИЛИ Начисления.ВидСтажаСЗВ = ЗНАЧЕНИЕ(Перечисление.ВидыСтажаСЗВ.ВключаетсяВСтажДляДосрочногоНазначенияПенсии)
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК РаспределятьСтроку
	|ПОМЕСТИТЬ ВТРаспределяемыеСтроки
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПланВидовРасчета.Начисления КАК Начисления
	|		ПО СписокНачислений.Начисление = Начисления.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СотрудникиПоДнямМесяца.Сотрудник,
	|	СотрудникиПоДнямМесяца.Период
	|ПОМЕСТИТЬ ВТВОтпускеПоУходу
	|ИЗ
	|	ВТПоДнямМесяца КАК СотрудникиПоДнямМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПериодыСостоянийСотрудников КАК ДанныеОСотруднике
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И (СотрудникиПоДнямМесяца.Период МЕЖДУ ДанныеОСотруднике.Начало И ДанныеОСотруднике.Окончание)
	|ГДЕ
	|	ДанныеОСотруднике.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоУходуЗаРебенком)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПериодыСостоянийСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСотрудникиИнтервалы
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СотрудникиПоДнямМесяца.Сотрудник,
	|	СотрудникиПоДнямМесяца.Период,
	|	ВЫБОР
	|		КОГДА &ИспользоватьШтатноеРасписание
	|			ТОГДА ДанныеОСотруднике.ДолжностьПоШтатномуРасписанию
	|		ИНАЧЕ ДанныеОСотруднике.Должность
	|	КОНЕЦ КАК Должность,
	|	ДанныеОСотруднике.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА ИСТИНА
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА ИСТИНА
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеРаботает,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА 0
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА 0
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РабочееВремяПоИнтервалам.НормаДней, 0)
	|	КОНЕЦ КАК Дней,
	|	ВЫБОР
	|		КОГДА СотрудникиПоДнямМесяца.Период < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА 0
	|		КОГДА ДанныеОСотруднике.ДатаУвольнения <> ДАТАВРЕМЯ(1, 1, 1, 0, 0, 0)
	|				И СотрудникиПоДнямМесяца.Период > ДанныеОСотруднике.ДатаУвольнения
	|			ТОГДА 0
	|		КОГДА ВОтпускеПоУходу.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(РабочееВремяПоИнтервалам.НормаЧасов, 0)
	|	КОНЕЦ КАК Часов
	|ПОМЕСТИТЬ ВТВремяПоДням
	|ИЗ
	|	ВТПоДнямМесяца КАК СотрудникиПоДнямМесяца
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВОтпускеПоУходу КАК ВОтпускеПоУходу
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ВОтпускеПоУходу.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = ВОтпускеПоУходу.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = ДанныеОСотруднике.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРабочееВремяПоИнтервалам КАК РабочееВремяПоИнтервалам
	|		ПО СотрудникиПоДнямМесяца.Сотрудник = РабочееВремяПоИнтервалам.Сотрудник
	|			И СотрудникиПоДнямМесяца.Период = РабочееВремяПоИнтервалам.ДатаНачала
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПоДнямМесяца
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВОтпускеПоУходу
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРабочееВремяПоИнтервалам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремяПоДням.Сотрудник,
	|	СУММА(ВремяПоДням.Дней) КАК Дней,
	|	СУММА(ВремяПоДням.Часов) КАК Часов
	|ПОМЕСТИТЬ ВТВремяЗаМесяц
	|ИЗ
	|	ВТВремяПоДням КАК ВремяПоДням
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремяПоДням.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВремяПоДням.Сотрудник КАК Сотрудник,
	|	ВремяПоДням.Должность,
	|	ВремяПоДням.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	ВЫБОР
	|		КОГДА ВремяЗаМесяц.Часов = 0
	|			ТОГДА 0
	|		ИНАЧЕ ВЫРАЗИТЬ(СУММА(ВремяПоДням.Часов) / ВремяЗаМесяц.Часов КАК ЧИСЛО(8, 6))
	|	КОНЕЦ КАК КоэффициентЧасов
	|ПОМЕСТИТЬ ВТКоэффициентыПоЧасам
	|ИЗ
	|	ВТВремяПоДням КАК ВремяПоДням
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяЗаМесяц КАК ВремяЗаМесяц
	|		ПО ВремяПоДням.Сотрудник = ВремяЗаМесяц.Сотрудник
	|
	|СГРУППИРОВАТЬ ПО
	|	ВремяЗаМесяц.Часов,
	|	ВремяПоДням.Сотрудник,
	|	ВремяПоДням.Должность,
	|	ВремяПоДням.ЯвляетсяРаботникомСДосрочнойПенсией
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВремяЗаМесяц
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДолжностьСМаксимальнымКоэффициентом.Сотрудник,
	|	ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов,
	|	ДолжностьСМаксимальнымКоэффициентом.Должность,
	|	МАКСИМУМ(КоэффициентыПоЧасам.ЯвляетсяРаботникомСДосрочнойПенсией) КАК ЯвляетсяРаботникомСДосрочнойПенсией
	|ПОМЕСТИТЬ ВТПараметрыМаксимальногоКоэффициента
	|ИЗ
	|	(ВЫБРАТЬ
	|		МаксимальныйКоэффициент.Сотрудник КАК Сотрудник,
	|		МаксимальныйКоэффициент.КоэффициентЧасов КАК КоэффициентЧасов,
	|		МАКСИМУМ(КоэффициентыПоЧасам.Должность) КАК Должность
	|	ИЗ
	|		(ВЫБРАТЬ
	|			КоэффициентыПоЧасам.Сотрудник КАК Сотрудник,
	|			МАКСИМУМ(КоэффициентыПоЧасам.КоэффициентЧасов) КАК КоэффициентЧасов
	|		ИЗ
	|			ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		
	|		СГРУППИРОВАТЬ ПО
	|			КоэффициентыПоЧасам.Сотрудник) КАК МаксимальныйКоэффициент
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|			ПО МаксимальныйКоэффициент.Сотрудник = КоэффициентыПоЧасам.Сотрудник
	|				И МаксимальныйКоэффициент.КоэффициентЧасов = КоэффициентыПоЧасам.КоэффициентЧасов
	|	
	|	СГРУППИРОВАТЬ ПО
	|		МаксимальныйКоэффициент.Сотрудник,
	|		МаксимальныйКоэффициент.КоэффициентЧасов) КАК ДолжностьСМаксимальнымКоэффициентом
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		ПО ДолжностьСМаксимальнымКоэффициентом.Сотрудник = КоэффициентыПоЧасам.Сотрудник
	|			И ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов = КоэффициентыПоЧасам.КоэффициентЧасов
	|			И ДолжностьСМаксимальнымКоэффициентом.Должность = КоэффициентыПоЧасам.Должность
	|
	|СГРУППИРОВАТЬ ПО
	|	ДолжностьСМаксимальнымКоэффициентом.Сотрудник,
	|	ДолжностьСМаксимальнымКоэффициентом.КоэффициентЧасов,
	|	ДолжностьСМаксимальнымКоэффициентом.Должность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	КоэффициентыПоЧасам.Сотрудник,
	|	КоэффициентыПоЧасам.Должность,
	|	КоэффициентыПоЧасам.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	КоэффициентыПоЧасам.КоэффициентЧасов
	|ПОМЕСТИТЬ ВТПрочиеКоэффициенты
	|ИЗ
	|	ВТКоэффициентыПоЧасам КАК КоэффициентыПоЧасам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПараметрыМаксимальногоКоэффициента КАК ПараметрыМаксимальногоКоэффициента
	|		ПО КоэффициентыПоЧасам.Сотрудник = ПараметрыМаксимальногоКоэффициента.Сотрудник
	|			И КоэффициентыПоЧасам.Должность = ПараметрыМаксимальногоКоэффициента.Должность
	|			И КоэффициентыПоЧасам.ЯвляетсяРаботникомСДосрочнойПенсией = ПараметрыМаксимальногоКоэффициента.ЯвляетсяРаботникомСДосрочнойПенсией
	|ГДЕ
	|	ПараметрыМаксимальногоКоэффициента.Сотрудник ЕСТЬ NULL 
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКоэффициентыПоЧасам
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрочиеКоэффициенты.Сотрудник,
	|	ПрочиеКоэффициенты.Должность,
	|	ПрочиеКоэффициенты.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	ПрочиеКоэффициенты.КоэффициентЧасов
	|ПОМЕСТИТЬ ВТКоэффициентыПоДолжностям
	|ИЗ
	|	ВТПрочиеКоэффициенты КАК ПрочиеКоэффициенты
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ПараметрыМаксимальногоКоэффициента.Сотрудник,
	|	ПараметрыМаксимальногоКоэффициента.Должность,
	|	ПараметрыМаксимальногоКоэффициента.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	1 - ЕСТЬNULL(СуммаПрочихКоэффициентов.КоэффициентЧасов, 0)
	|ИЗ
	|	ВТПараметрыМаксимальногоКоэффициента КАК ПараметрыМаксимальногоКоэффициента
	|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
	|			ПрочиеКоэффициенты.Сотрудник КАК Сотрудник,
	|			СУММА(ПрочиеКоэффициенты.КоэффициентЧасов) КАК КоэффициентЧасов
	|		ИЗ
	|			ВТПрочиеКоэффициенты КАК ПрочиеКоэффициенты
	|		
	|		СГРУППИРОВАТЬ ПО
	|			ПрочиеКоэффициенты.Сотрудник) КАК СуммаПрочихКоэффициентов
	|		ПО ПараметрыМаксимальногоКоэффициента.Сотрудник = СуммаПрочихКоэффициентов.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда = НЕОПРЕДЕЛЕНО
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.УсловияТруда.ПустаяСсылка)
	|		ИНАЧЕ СписокНачислений.УсловияТруда
	|	КОНЕЦ КАК УсловияТруда,
	|	ВЫБОР
	|		КОГДА СписокНачислений.ДатаНачала < ДанныеОСотруднике.ДатаПриема
	|			ТОГДА ДанныеОСотруднике.ДатаПриема
	|		ИНАЧЕ СписокНачислений.ДатаНачала
	|	КОНЕЦ КАК ПериодПолученияКадровыхДанных
	|ПОМЕСТИТЬ ВТУточненныеНачисления
	|ИЗ
	|	ВТНачисления КАК СписокНачислений 
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТДатыПриема КАК ДанныеОСотруднике
	|	ПО СписокНачислений.Сотрудник = ДанныеОСотруднике.Сотрудник
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПараметрыМаксимальногоКоэффициента
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТПрочиеКоэффициенты
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДатыПриема";
	КадровыйУчет.ДополнитьПоляЗапросаВТКадровыхДанных(Организация, Запрос);
	Запрос.Выполнить();

	// Читаем кадровые данные сотрудников, влияющие на исчисление взносов.
	
	КадровыеДанные = "Должность, ДолжностьПоШтатномуРасписанию, ЯвляетсяФармацевтом, ПрименяемыйЛьготныйТерриториальныйТариф, ЯвляетсяРаботникомСДосрочнойПенсией, ЯвляетсяПрокурором, ЯвляетсяВоеннослужащим, РаботаетВСтуденческомОтряде, ЯвляетсяЧленомЛетногоЭкипажа, ЯвляетсяШахтером";
	КадровыйУчет.ДополнитьИменаКадровыхДанных(КадровыеДанные);
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		МенеджерВременныхТаблиц, "ВТУточненныеНачисления", "Сотрудник,ПериодПолученияКадровыхДанных");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Ложь, КадровыеДанные);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией ЕСТЬ НЕ NULL 
	|			ТОГДА СписокНачислений.УсловияТруда
	|		КОГДА ДанныеПоДням.НеРаботает
	|			ТОГДА ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка)
	|		КОГДА РаспределяемыеСтроки.РаспределятьСтроку
	|				И КоэффициентыПоДолжностям.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА КоэффициентыПоДолжностям.Должность
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &ИспользоватьШтатноеРасписание
	|					ТОГДА ДанныеОСотруднике.ДолжностьПоШтатномуРасписанию
	|				ИНАЧЕ ДанныеОСотруднике.Должность
	|			КОНЕЦ
	|	КОНЕЦ КАК Должность,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией ЕСТЬ НЕ NULL 
	|			ТОГДА СписокНачислений.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией
	|		КОГДА ДанныеПоДням.НеРаботает
	|			ТОГДА ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)
	|		КОГДА РаспределяемыеСтроки.РаспределятьСтроку
	|				И КоэффициентыПоДолжностям.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА КоэффициентыПоДолжностям.ЯвляетсяРаботникомСДосрочнойПенсией
	|		ИНАЧЕ ДанныеОСотруднике.ЯвляетсяРаботникомСДосрочнойПенсией
	|	КОНЕЦ КАК ЯвляетсяРаботникомСДосрочнойПенсией,
	|	ДанныеОСотруднике.ЯвляетсяФармацевтом,
	|	ДанныеОСотруднике.ПрименяемыйЛьготныйТерриториальныйТариф,
	|	ДанныеОСотруднике.ЯвляетсяПрокурором,
	|	ДанныеОСотруднике.ЯвляетсяВоеннослужащим,
	|	ДанныеОСотруднике.РаботаетВСтуденческомОтряде,
	|	ДанныеОСотруднике.ЯвляетсяЧленомЛетногоЭкипажа,
	|	ДанныеОСотруднике.ЯвляетсяШахтером,
	|	ВЫБОР
	|		КОГДА СписокНачислений.УсловияТруда.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией ЕСТЬ НЕ NULL 
	|			ТОГДА 1
	|		КОГДА ДанныеПоДням.НеРаботает
	|			ТОГДА 1
	|		КОГДА РаспределяемыеСтроки.РаспределятьСтроку
	|				И КоэффициентыПоДолжностям.Сотрудник ЕСТЬ НЕ NULL 
	|			ТОГДА КоэффициентыПоДолжностям.КоэффициентЧасов
	|		ИНАЧЕ 1
	|	КОНЕЦ КАК КоэффициентУчетаСтроки
	|ПОМЕСТИТЬ ВТКадровыхДанных
	|ИЗ
	|	ВТУточненныеНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТРаспределяемыеСтроки КАК РаспределяемыеСтроки
	|		ПО СписокНачислений.Сотрудник = РаспределяемыеСтроки.Сотрудник
	|			И СписокНачислений.ДатаНачала = РаспределяемыеСтроки.ДатаНачала
	|			И СписокНачислений.ПодразделениеОрганизации = РаспределяемыеСтроки.Подразделение
	|			И СписокНачислений.Начисление = РаспределяемыеСтроки.Начисление
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыеДанныеСотрудников КАК ДанныеОСотруднике
	|		ПО СписокНачислений.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СписокНачислений.ПериодПолученияКадровыхДанных = ДанныеОСотруднике.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВремяПоДням КАК ДанныеПоДням
	|		ПО СписокНачислений.Сотрудник = ДанныеПоДням.Сотрудник
	|			И СписокНачислений.ДатаНачала = ДанныеПоДням.Период
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКоэффициентыПоДолжностям КАК КоэффициентыПоДолжностям
	|		ПО СписокНачислений.Сотрудник = КоэффициентыПоДолжностям.Сотрудник
	|			И (РаспределяемыеСтроки.РаспределятьСтроку)
	|			И (НЕ ДанныеПоДням.НеРаботает)
	|			И (КоэффициентыПоДолжностям.КоэффициентЧасов <> 0)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТРаспределяемыеСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТУточненныеНачисления
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВремяПоДням
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКоэффициентыПоДолжностям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКадровыеДанныеСотрудников";

	КадровыйУчет.ДополнитьПоляЗапросаВТКадровыхДанных(Организация, Запрос);	
	Запрос.Выполнить();
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТНачисленияСДаннымиУчета, которая содержит следующие поля.
//		Сотрудник - СправочникСсылка.Сотрудники
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		ДатаНачала - дата
//		ДатаПолученияДохода - дата.
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		ЯвляетсяДоходомФармацевта - булево.
//		ЛьготныйТерриториальныйТариф - СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//		ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//		КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//		ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//		ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//		Сумма - число 
//		Скидка - число 
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит 
//			вр. таблицу ВТНачисления с полями.
//				Сотрудник -
//				ДатаНачала - дата -
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления -
//				ПодразделениеОрганизации - 
//				СуммаДохода - 
//				СуммаВычетаВзносы -
//				ДатаОкончания - дата 
//				Сторно - булево 
//				СторнируемыйДокумент - ДокументСсылка -
//				УсловияТруда - СправочникСсылка.УсловияТруда
//			вр. таблицу ВТСДаннымиУчета, с полями.
//				Сотрудник - СправочникСсылка.Сотрудники
//				ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//				ЯвляетсяФармацевтом - булево.
//				ЛьготныйТерриториальныйТариф - СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//				ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//				КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//				ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//				ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//				КоэффициентУчетаСтроки - число от 0 до 1.
//				УсловияТруда - СправочникСсылка.УсловияТруда
//		ИсключаемыйРегистратор - ДокументСсылка -
//		ИмяТаблицыНачислений - Строка -
//
Процедура СформироватьВТНачисленияСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор, ИмяТаблицыНачислений = "ВТНачисления") Экспорт
	
	УчетСтраховыхВзносовБазовый.СформироватьВТНачисленияСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ПолучитьФункциональнуюОпцию("ИспользоватьОсобыеУсловияТрудаВОрганизации", Новый Структура("Организация",Организация)), ИмяТаблицыНачислений);
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Начало", НачалоМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Окончание", КонецМесяца(ПериодРегистрации));
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", ЗарплатаКадрыПовтИсп.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор", ИсключаемыйРегистратор);
	Запрос.УстановитьПараметр("КонецМесяца", УчетСтраховыхВзносовКлиентСервер.ДатаПолученияДохода(ПериодРегистрации));
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР КАК ОблагаетсяВзносамиВПФР,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда,
	|	СУММА(СведенияОДоходах.Результат) КАК Результат
	|ПОМЕСТИТЬ ВТДоходыЗаПериод
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтраховыеВзносыСведенияОДоходахОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
	|		СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода КАК ВидДохода,
	|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
	|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		СтраховыеВзносыСведенияОДоходахОбороты.КлассУсловийТруда КАК КлассУсловийТруда,
	|		СтраховыеВзносыСведенияОДоходахОбороты.Сумма КАК Результат
	|	ИЗ
	|		РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходахОбороты
	|	ГДЕ
	|		СтраховыеВзносыСведенияОДоходахОбороты.Период МЕЖДУ &Начало И &Окончание
	|		И СтраховыеВзносыСведенияОДоходахОбороты.Регистратор <> &ИсключаемыйРегистратор
	|		И СтраховыеВзносыСведенияОДоходахОбороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|		И СтраховыеВзносыСведенияОДоходахОбороты.Организация = &Организация
	|		И СтраховыеВзносыСведенияОДоходахОбороты.ФизическоеЛицо В
	|				(ВЫБРАТЬ
	|					Доходы.ФизическоеЛицо
	|				ИЗ
	|					ВТСДаннымиУчета КАК Доходы)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДанныеУчета.ФизическоеЛицо,
	|		ДанныеУчета.ВидДохода,
	|		ДанныеУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|		ДанныеУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|		ДанныеУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|		ДанныеУчета.КлассУсловийТруда,
	|		ДанныеУчета.Сумма
	|	ИЗ
	|		ВТНачисленияСДаннымиУчета КАК ДанныеУчета) КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СведенияОДоходах.КлассУсловийТруда,
	|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходах.Результат) <> 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
	|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР КАК ОблагаетсяВзносамиВПФР,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда
	|ПОМЕСТИТЬ ВТПоложительныеДоходыПоРегистратору
	|ИЗ
	|	ВТНачисленияСДаннымиУчета КАК СведенияОДоходах
	|
	|СГРУППИРОВАТЬ ПО
	|	СведенияОДоходах.ФизическоеЛицо,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	СведенияОДоходах.КлассУсловийТруда,
	|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР
	|
	|ИМЕЮЩИЕ
	|	СУММА(СведенияОДоходах.Сумма) >= 0
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоходыЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо
	|ИЗ
	|	ВТДоходыЗаПериод КАК ДоходыЗаПериод
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТПоложительныеДоходыПоРегистратору КАК ПоложительныеДоходы
	|		ПО ДоходыЗаПериод.ФизическоеЛицо = ПоложительныеДоходы.ФизическоеЛицо
	|			И ДоходыЗаПериод.ОблагаетсяВзносамиВПФР = ПоложительныеДоходы.ОблагаетсяВзносамиВПФР
	|			И ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам = ПоложительныеДоходы.ОблагаетсяВзносамиНаДоплатуЛетчикам
	|			И ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам = ПоложительныеДоходы.ОблагаетсяВзносамиНаДоплатуШахтерам
	|			И ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ПоложительныеДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
	|			И ДоходыЗаПериод.КлассУсловийТруда = ПоложительныеДоходы.КлассУсловийТруда
	|ГДЕ
	|	ДоходыЗаПериод.Результат < 0
	|	И ПоложительныеДоходы.ФизическоеЛицо ЕСТЬ NULL";
	
	Если Не Запрос.Выполнить().Пустой() Тогда
		
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, "ВТНачисленияСДаннымиУчета");
		
		ТекстЗапроса = 
		"ВЫБРАТЬ
		|	ВременнаяТаблица.Сотрудник,
		|	ВременнаяТаблица.Начисление,
		|	ВременнаяТаблица.ПодразделениеОрганизации КАК Подразделение,
		|	ВременнаяТаблица.ДатаНачала,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблица.Сторно
		|				И ДоходыЗаПериод.Результат >= 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВременнаяТаблица.Сторно
		|	КОНЕЦ КАК Сторно,
		|	ВременнаяТаблица.СторнируемыйДокумент,
		|	ДанныеУчета.ВидДохода,
		|	ДанныеУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДанныеУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДанныеУчета.ЯвляетсяДоходомФармацевта,
		|	ДанныеУчета.ЛьготныйТерриториальныйТариф,
		|	ДанныеУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДанныеУчета.КлассУсловийТруда,
		|	ВЫРАЗИТЬ(СУММА(ВременнаяТаблица.СуммаДохода * ЕСТЬNULL(ДанныеУчета.КоэффициентУчетаСтроки, 1)) КАК ЧИСЛО(15, 2)) КАК Сумма,
		|	ВЫБОР
		|		КОГДА ДанныеУчета.ВидДохода.ОблагаетсяВзносамиЧастично
		|			ТОГДА ВЫРАЗИТЬ(СУММА(ВременнаяТаблица.СуммаВычетаВзносы * ЕСТЬNULL(ДанныеУчета.КоэффициентУчетаСтроки, 1)) КАК ЧИСЛО(15, 2))
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Скидка,
		|	ДанныеУчета.ФизическоеЛицо
		|ИЗ
		|	ВТНачисления КАК ВременнаяТаблица
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСДаннымиУчета КАК ДанныеУчета
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаПериод КАК ДоходыЗаПериод
		|			ПО ДанныеУчета.ФизическоеЛицо = ДоходыЗаПериод.ФизическоеЛицо
		|				И ДанныеУчета.ВидДохода.ВходитВБазуПФР = ДоходыЗаПериод.ОблагаетсяВзносамиВПФР
		|				И ДанныеУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|				И ДанныеУчета.ОблагаетсяВзносамиНаДоплатуШахтерам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам
		|				И ДанныеУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|				И ДанныеУчета.КлассУсловийТруда = ДоходыЗаПериод.КлассУсловийТруда
		|		ПО ВременнаяТаблица.Сотрудник = ДанныеУчета.Сотрудник
		|			И ВременнаяТаблица.Начисление = ДанныеУчета.Начисление
		|			И ВременнаяТаблица.ПодразделениеОрганизации = ДанныеУчета.Подразделение
		|			И ВременнаяТаблица.ДатаНачала = ДанныеУчета.ДатаНачала
		|			И ВременнаяТаблица.УсловияТруда = ДанныеУчета.УсловияТруда
		|ГДЕ
		|	(ВременнаяТаблица.СуммаДохода <> 0
		|			ИЛИ ВременнаяТаблица.СуммаВычетаВзносы <> 0)
		|
		|СГРУППИРОВАТЬ ПО
		|	ВременнаяТаблица.Сотрудник,
		|	ВременнаяТаблица.Начисление,
		|	ВременнаяТаблица.ПодразделениеОрганизации,
		|	ВременнаяТаблица.ДатаНачала,
		|	ВЫБОР
		|		КОГДА ВременнаяТаблица.Сторно
		|				И ДоходыЗаПериод.Результат >= 0
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ВременнаяТаблица.Сторно
		|	КОНЕЦ,
		|	ВременнаяТаблица.СторнируемыйДокумент,
		|	ДанныеУчета.ВидДохода,
		|	ДанныеУчета.ВидДохода.ОблагаетсяВзносамиЧастично,
		|	ДанныеУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДанныеУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДанныеУчета.ЯвляетсяДоходомФармацевта,
		|	ДанныеУчета.ЛьготныйТерриториальныйТариф,
		|	ДанныеУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДанныеУчета.КлассУсловийТруда,
		|	ДанныеУчета.ФизическоеЛицо";
		
		Если ЗначениеЗаполнено(ИмяТаблицыНачислений) И ИмяТаблицыНачислений <> "ВТНачисления" Тогда
			ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ВТНачисления ", ИмяТаблицыНачислений + " ") 
		КонецЕсли;
		Запрос.Текст = ТекстЗапроса;
		ВременнаяТаблица = Запрос.Выполнить().Выгрузить();
		ВременнаяТаблица.Колонки.Добавить("НомерСтроки", Новый ОписаниеТипов("Число"));
		НомерСтроки = 1;
		Для каждого СтрокаТЗ Из ВременнаяТаблица Цикл
			СтрокаТЗ.НомерСтроки = НомерСтроки;
			НомерСтроки = НомерСтроки + 1;
		КонецЦикла;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ДоходыЗаПериод.ФизическоеЛицо,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиВПФР,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДоходыЗаПериод.КлассУсловийТруда
		|ИЗ
		|	ВТДоходыЗаПериод КАК ДоходыЗаПериод
		|ГДЕ
		|	ДоходыЗаПериод.Результат >= 0
		|
		|ОБЪЕДИНИТЬ
		|
		|ВЫБРАТЬ
		|	ПоложительныеДоходы.ФизическоеЛицо,
		|	ПоложительныеДоходы.ОблагаетсяВзносамиВПФР,
		|	ПоложительныеДоходы.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ПоложительныеДоходы.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ПоложительныеДоходы.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ПоложительныеДоходы.КлассУсловийТруда
		|ИЗ
		|	ВТПоложительныеДоходыПоРегистратору КАК ПоложительныеДоходы";
		ДоходыЗаПериод = Запрос.Выполнить().Выгрузить(); 
		
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Начисления", ВременнаяТаблица); ВременнаяТаблица = Неопределено;
		Запрос.УстановитьПараметр("ДоходыЗаПериод", ДоходыЗаПериод); ДоходыЗаПериод = Неопределено;
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	Начисления.НомерСтроки КАК НомерСтроки,
		|	Начисления.Сотрудник КАК Сотрудник,
		|	Начисления.Начисление КАК Начисление,
		|	Начисления.Подразделение КАК Подразделение,
		|	Начисления.ДатаНачала КАК ДатаНачала,
		|	Начисления.Сторно КАК Сторно,
		|	Начисления.СторнируемыйДокумент КАК СторнируемыйДокумент,
		|	Начисления.ВидДохода КАК ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда КАК КлассУсловийТруда,
		|	Начисления.Сумма КАК Сумма,
		|	Начисления.Скидка КАК Скидка,
		|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо
		|ПОМЕСТИТЬ ВТНачисленияДокумента
		|ИЗ
		|	&Начисления КАК Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДоходыЗаПериод.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиВПФР КАК ОблагаетсяВзносамиВПФР,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДоходыЗаПериод.КлассУсловийТруда КАК КлассУсловийТруда
		|ПОМЕСТИТЬ ВТДоходыЗаПериод
		|ИЗ
		|	&ДоходыЗаПериод КАК ДоходыЗаПериод
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияДокумента.НомерСтроки КАК НомерСтроки,
		|	НачисленияДокумента.Сотрудник КАК Сотрудник,
		|	НачисленияДокумента.Начисление КАК Начисление,
		|	НачисленияДокумента.ДатаНачала КАК ДатаНачала,
		|	НачисленияДокумента.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТСторноНачисленияДокумента
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента
		|ГДЕ
		|	НачисленияДокумента.Сторно
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияДокумента.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТПарныеСтроки
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСторноНачисленияДокумента КАК СторноНачисленияДокумента
		|		ПО НачисленияДокумента.Сотрудник = СторноНачисленияДокумента.Сотрудник
		|			И НачисленияДокумента.Начисление = СторноНачисленияДокумента.Начисление
		|			И НачисленияДокумента.ДатаНачала = СторноНачисленияДокумента.ДатаНачала
		|ГДЕ
		|	НЕ НачисленияДокумента.Сторно
		|	И СторноНачисленияДокумента.Сотрудник ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СторноНачисленияДокумента.НомерСтроки
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСторноНачисленияДокумента КАК СторноНачисленияДокумента
		|		ПО НачисленияДокумента.Сотрудник = СторноНачисленияДокумента.Сотрудник
		|			И НачисленияДокумента.Начисление = СторноНачисленияДокумента.Начисление
		|			И НачисленияДокумента.ДатаНачала = СторноНачисленияДокумента.ДатаНачала
		|ГДЕ
		|	НЕ НачисленияДокумента.Сторно
		|	И СторноНачисленияДокумента.Сотрудник ЕСТЬ НЕ NULL 
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	НачисленияДокумента.НомерСтроки
		|ИЗ
		|	ВТНачисленияДокумента КАК НачисленияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ВидыДоходовПоСтраховымВзносам КАК ВидыДоходовПоСтраховымВзносам
		|		ПО НачисленияДокумента.ВидДохода = ВидыДоходовПоСтраховымВзносам.Ссылка
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаПериод КАК ДоходыЗаПериод
		|		ПО НачисленияДокумента.ФизическоеЛицо = ДоходыЗаПериод.ФизическоеЛицо
		|			И (ВидыДоходовПоСтраховымВзносам.ВходитВБазуПФР = ДоходыЗаПериод.ОблагаетсяВзносамиВПФР)
		|			И НачисленияДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|			И НачисленияДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам
		|			И НачисленияДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			И НачисленияДокумента.КлассУсловийТруда = ДоходыЗаПериод.КлассУсловийТруда
		|ГДЕ
		|	ДоходыЗаПериод.ФизическоеЛицо ЕСТЬ НЕ NULL 
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияДокумента.НомерСтроки КАК НомерСтроки
		|ПОМЕСТИТЬ ВТСтрокиДокументаСПарнымиНачислениями
		|ИЗ
		|	ВТПарныеСтроки КАК НачисленияДокумента
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СторноНачисленияДокумента.НомерСтроки
		|ИЗ
		|	ВТСторноНачисленияДокумента КАК СторноНачисленияДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ (ВЫБРАТЬ
		|			НачисленияДокумента.ДатаНачала КАК ДатаНачала,
		|			НачисленияДокумента.Сотрудник КАК Сотрудник
		|		ИЗ
		|			ВТНачисленияДокумента КАК НачисленияДокумента
		|		ГДЕ
		|			НЕ НачисленияДокумента.Сторно
		|			И НЕ НачисленияДокумента.НомерСтроки В
		|						(ВЫБРАТЬ
		|							ПарныеСтроки.НомерСтроки
		|						ИЗ
		|							ВТПарныеСтроки КАК ПарныеСтроки)) КАК НачисленияДокумента
		|		ПО СторноНачисленияДокумента.Сотрудник = НачисленияДокумента.Сотрудник
		|			И СторноНачисленияДокумента.ДатаНачала = НачисленияДокумента.ДатаНачала
		|ГДЕ
		|	НачисленияДокумента.Сотрудник ЕСТЬ NULL
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МИНИМУМ(Начисления.НомерСтроки) КАК НомерСтроки,
		|	Начисления.Начисление КАК Начисление,
		|	Начисления.ВидДохода КАК ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда КАК КлассУсловийТруда,
		|	Начисления.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) КАК ДатаНачала,
		|	СУММА(Начисления.Сумма) КАК Сумма,
		|	СУММА(Начисления.Скидка) КАК Скидка,
		|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Начисления.Сторно КАК Сторно
		|ПОМЕСТИТЬ ВТСтрокиДоходов
		|ИЗ
		|	ВТНачисленияДокумента КАК Начисления
		|ГДЕ
		|	Начисления.НомерСтроки В
		|			(ВЫБРАТЬ
		|				СтрокиДокументаСПарнымиНачислениями.НомерСтроки
		|			ИЗ
		|				ВТСтрокиДокументаСПарнымиНачислениями КАК СтрокиДокументаСПарнымиНачислениями)
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.Начисление,
		|	Начисления.ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда,
		|	Начисления.ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Сторно,
		|	НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ВидДохода КАК ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда КАК КлассУсловийТруда,
		|	Начисления.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ) КАК ДатаНачала,
		|	СУММА(Начисления.Сумма) КАК Сумма,
		|	СУММА(Начисления.Скидка) КАК Скидка,
		|	Начисления.ФизическоеЛицо КАК ФизическоеЛицо,
		|	Начисления.Сторно КАК Сторно
		|ПОМЕСТИТЬ ВТСтрокиДоходовПоВидамДохода
		|ИЗ
		|	ВТНачисленияДокумента КАК Начисления
		|ГДЕ
		|	НЕ Начисления.НомерСтроки В
		|				(ВЫБРАТЬ
		|					СтрокиДокументаСПарнымиНачислениями.НомерСтроки
		|				ИЗ
		|					ВТСтрокиДокументаСПарнымиНачислениями КАК СтрокиДокументаСПарнымиНачислениями)
		|
		|СГРУППИРОВАТЬ ПО
		|	Начисления.ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда,
		|	Начисления.ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф,
		|	Начисления.ФизическоеЛицо,
		|	Начисления.Сторно,
		|	НАЧАЛОПЕРИОДА(Начисления.ДатаНачала, МЕСЯЦ)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВложенныйЗапрос.ВидДохода КАК ВидДохода,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ВложенныйЗапрос.КлассУсловийТруда КАК КлассУсловийТруда,
		|	ВложенныйЗапрос.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ВложенныйЗапрос.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	ВложенныйЗапрос.ДатаНачала КАК ДатаНачала,
		|	СУММА(ВложенныйЗапрос.Сумма) КАК Сумма,
		|	СУММА(ВложенныйЗапрос.Скидка) КАК Скидка,
		|	СУММА(ВложенныйЗапрос.Сумма) < 0 КАК Сторно
		|ИЗ
		|	(ВЫБРАТЬ
		|		ВТСтрокиДоходовПоВидамДохода.ВидДохода КАК ВидДохода,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		ВТСтрокиДоходовПоВидамДохода.КлассУсловийТруда КАК КлассУсловийТруда,
		|		ВТСтрокиДоходовПоВидамДохода.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|		ВТСтрокиДоходовПоВидамДохода.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|		ВТСтрокиДоходовПоВидамДохода.ДатаНачала КАК ДатаНачала,
		|		ВТСтрокиДоходовПоВидамДохода.Сумма КАК Сумма,
		|		ВТСтрокиДоходовПоВидамДохода.Скидка КАК Скидка,
		|		ВТСтрокиДоходовПоВидамДохода.ФизическоеЛицо КАК ФизическоеЛицо,
		|		ВТСтрокиДоходовПоВидамДохода.Сторно КАК Сторно
		|	ИЗ
		|		ВТСтрокиДоходовПоВидамДохода КАК ВТСтрокиДоходовПоВидамДохода
		|	ГДЕ
		|		НЕ ВТСтрокиДоходовПоВидамДохода.Сторно
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ВТСтрокиДоходовПоВидамДохода.ВидДохода,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		ВТСтрокиДоходовПоВидамДохода.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		ВТСтрокиДоходовПоВидамДохода.КлассУсловийТруда,
		|		ВТСтрокиДоходовПоВидамДохода.ЯвляетсяДоходомФармацевта,
		|		ВТСтрокиДоходовПоВидамДохода.ЛьготныйТерриториальныйТариф,
		|		ВТСтрокиДоходовПоВидамДохода.ДатаНачала,
		|		ВТСтрокиДоходовПоВидамДохода.Сумма,
		|		ВТСтрокиДоходовПоВидамДохода.Скидка,
		|		ВТСтрокиДоходовПоВидамДохода.ФизическоеЛицо,
		|		ВТСтрокиДоходовПоВидамДохода.Сторно
		|	ИЗ
		|		ВТСтрокиДоходовПоВидамДохода КАК ВТСтрокиДоходовПоВидамДохода
		|	ГДЕ
		|		ВТСтрокиДоходовПоВидамДохода.Сторно) КАК ВложенныйЗапрос
		|
		|СГРУППИРОВАТЬ ПО
		|	ВложенныйЗапрос.ЯвляетсяДоходомФармацевта,
		|	ВложенныйЗапрос.ЛьготныйТерриториальныйТариф,
		|	ВложенныйЗапрос.Сторно,
		|	ВложенныйЗапрос.ДатаНачала,
		|	ВложенныйЗапрос.ФизическоеЛицо,
		|	ВложенныйЗапрос.ВидДохода,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ВложенныйЗапрос.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ВложенныйЗапрос.КлассУсловийТруда
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
		|	СтрокиДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтрокиДокумента.Сотрудник КАК Сотрудник,
		|	СтрокиДокумента.Подразделение КАК Подразделение,
		|	СтрокиДокумента.Начисление КАК Начисление,
		|	СтрокиДокумента.ДатаНачала КАК ДатаНачалаИсходная,
		|	НАЧАЛОПЕРИОДА(СтрокиДокумента.ДатаНачала, МЕСЯЦ) КАК ДатаНачала,
		|	СтрокиДокумента.ВидДохода КАК ВидДохода,
		|	СтрокиДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СтрокиДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СтрокиДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СтрокиДокумента.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СтрокиДокумента.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	СтрокиДокумента.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	СтрокиДокумента.Сторно КАК Сторно,
		|	СтрокиДокумента.Сумма КАК Сумма,
		|	СтрокиДокумента.Скидка КАК Скидка,
		|	СтрокиДокумента.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ИЗ
		|	ВТНачисленияДокумента КАК СтрокиДокумента
		|ГДЕ
		|	НЕ СтрокиДокумента.НомерСтроки В
		|				(ВЫБРАТЬ
		|					СтрокиДокументаСПарнымиНачислениями.НомерСтроки
		|				ИЗ
		|					ВТСтрокиДокументаСПарнымиНачислениями КАК СтрокиДокументаСПарнымиНачислениями)";
		
		РезультатЗапроса = Запрос.ВыполнитьПакет(); 
		
		Выборка				= РезультатЗапроса[7].Выбрать();
		ТЗКРаспределению	= РезультатЗапроса[8].Выгрузить();
				
		ПараметрыОтбора = Новый Структура("ДатаНачала,ФизическоеЛицо,ВидДохода,ОблагаетсяВзносамиНаДоплатуЛетчикам"
										+ ",ОблагаетсяВзносамиНаДоплатуШахтерам,ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией"
										+ ",КлассУсловийТруда,ЯвляетсяДоходомФармацевта,ЛьготныйТерриториальныйТариф,Сторно");
		Пока Выборка.Следующий() Цикл
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора,Выборка);
			СтрокиКРаспределению = ТЗКРаспределению.НайтиСтроки(ПараметрыОтбора);
			
			Сумма	= Выборка.Сумма;
			Скидка	= Выборка.Скидка;
			
			Если Сумма = 0 И Скидка = 0 Тогда
				Для Каждого УдаляемаяСтрока Из СтрокиКРаспределению Цикл
					ТЗКРаспределению.Удалить(УдаляемаяСтрока);
				КонецЦикла;
			Иначе
				Коэффициенты				= ОбщегоНазначения.ВыгрузитьКолонку(СтрокиКРаспределению, "Сумма");
				РаспределенныеСуммыДохода	= ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(Сумма, Коэффициенты);
				
				Коэффициенты				= ОбщегоНазначения.ВыгрузитьКолонку(СтрокиКРаспределению, "Скидка");
				РаспределенныеСуммыСкидка	= ЗарплатаКадры.РаспределитьСуммуПропорциональноБазе(Скидка, Коэффициенты);
				
				Для Индекс = 0 По Коэффициенты.ВГраница() Цикл 
					СтрокиКРаспределению[Индекс].Сумма	= ?(Сумма = 0, 0, РаспределенныеСуммыДохода[Индекс]);
					СтрокиКРаспределению[Индекс].Скидка	= ?(Скидка = 0, 0, РаспределенныеСуммыСкидка[Индекс]);
				КонецЦикла;
			КонецЕсли;
			
			// Если суммы сторно меньше чем суммы доходов (и наоборот), то очистим эти строки 
			ПараметрыОтбора.Сторно = Не ПараметрыОтбора.Сторно;
			СтрокиКУдалению = ТЗКРаспределению.НайтиСтроки(ПараметрыОтбора);
			Для Каждого УдаляемаяСтрока Из СтрокиКУдалению Цикл
				ТЗКРаспределению.Удалить(УдаляемаяСтрока);
			КонецЦикла;
			
		КонецЦикла;
		
		Запрос.УстановитьПараметр("ВТСтрокиДоходовПоВидамДохода",ТЗКРаспределению);		
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.Начисление КАК Начисление,
		|	ДанныеДокумента.ДатаНачалаИсходная КАК ДатаНачала,
		|	ДанныеДокумента.ВидДохода КАК ВидДохода,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДанныеДокумента.КлассУсловийТруда КАК КлассУсловийТруда,
		|	ДанныеДокумента.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ДанныеДокумента.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	ДанныеДокумента.Сторно КАК Сторно,
		|	ДанныеДокумента.Сумма КАК Сумма,
		|	ДанныеДокумента.Скидка КАК Скидка,
		|	ДанныеДокумента.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТНачисленияСоСторноЗаписямиБезПарныхСтрок
		|ИЗ
		|	&ВТСтрокиДоходовПоВидамДохода КАК ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтрокиДокументаПоНомерСтроки.Сотрудник КАК Сотрудник,
		|	СтрокиДокументаПоНомерСтроки.Подразделение КАК Подразделение,
		|	ДанныеДокумента.Начисление КАК Начисление,
		|	СтрокиДокументаПоНомерСтроки.ДатаНачала КАК ДатаНачала,
		|	ДанныеДокумента.ВидДохода КАК ВидДохода,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДанныеДокумента.КлассУсловийТруда КАК КлассУсловийТруда,
		|	ДанныеДокумента.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ДанныеДокумента.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	ДанныеДокумента.Сторно КАК Сторно,
		|	&КонецМесяца КАК ДатаПолученияДохода,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Сторно
		|				И ЕСТЬNULL(СтрокиДокументаПоПериодуДействия.НомерСтроки, 0) <> ДанныеДокумента.НомерСтроки
		|			ТОГДА 0
		|		КОГДА СторноЗаписиДокумента.Сумма ЕСТЬ NULL
		|			ТОГДА ДанныеДокумента.Сумма
		|		КОГДА НЕ ДанныеДокумента.Сторно
		|				И ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма > 0
		|			ТОГДА ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма
		|		КОГДА ДанныеДокумента.Сторно
		|				И ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма < 0
		|			ТОГДА ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Сумма,
		|	ВЫБОР
		|		КОГДА ДанныеДокумента.Сторно
		|				И ЕСТЬNULL(СтрокиДокументаПоПериодуДействия.НомерСтроки, 0) <> ДанныеДокумента.НомерСтроки
		|			ТОГДА 0
		|		КОГДА СторноЗаписиДокумента.Сумма ЕСТЬ NULL
		|			ТОГДА ДанныеДокумента.Скидка
		|		КОГДА НЕ ДанныеДокумента.Сторно
		|				И ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма > 0
		|			ТОГДА ДанныеДокумента.Скидка + СторноЗаписиДокумента.Скидка
		|		КОГДА ДанныеДокумента.Сторно
		|				И ДанныеДокумента.Сумма + СторноЗаписиДокумента.Сумма <= 0
		|			ТОГДА ДанныеДокумента.Скидка + СторноЗаписиДокумента.Скидка
		|		ИНАЧЕ 0
		|	КОНЕЦ КАК Скидка,
		|	СтрокиДокументаПоПериодуДействия.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТНачисленияСоСторноЗаписями
		|ИЗ
		|	ВТСтрокиДоходов КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияДокумента КАК СтрокиДокументаПоПериодуДействия
		|		ПО (ДанныеДокумента.ДатаНачала = НАЧАЛОПЕРИОДА(СтрокиДокументаПоПериодуДействия.ДатаНачала, МЕСЯЦ))
		|			И ДанныеДокумента.Начисление = СтрокиДокументаПоПериодуДействия.Начисление
		|			И ДанныеДокумента.ФизическоеЛицо = СтрокиДокументаПоПериодуДействия.ФизическоеЛицо
		|			И ДанныеДокумента.ВидДохода = СтрокиДокументаПоПериодуДействия.ВидДохода
		|			И ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам = СтрокиДокументаПоПериодуДействия.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|			И ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам = СтрокиДокументаПоПериодуДействия.ОблагаетсяВзносамиНаДоплатуШахтерам
		|			И ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = СтрокиДокументаПоПериодуДействия.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			И ДанныеДокумента.КлассУсловийТруда = СтрокиДокументаПоПериодуДействия.КлассУсловийТруда
		|			И ДанныеДокумента.ЯвляетсяДоходомФармацевта = СтрокиДокументаПоПериодуДействия.ЯвляетсяДоходомФармацевта
		|			И ДанныеДокумента.ЛьготныйТерриториальныйТариф = СтрокиДокументаПоПериодуДействия.ЛьготныйТерриториальныйТариф
		|			И ДанныеДокумента.Сторно = СтрокиДокументаПоПериодуДействия.Сторно
		|			И (ДанныеДокумента.Сторно)
		|			И (СтрокиДокументаПоПериодуДействия.НомерСтроки В
		|				(ВЫБРАТЬ
		|					СтрокиДокументаСПарнымиНачислениями.НомерСтроки
		|				ИЗ
		|					ВТСтрокиДокументаСПарнымиНачислениями КАК СтрокиДокументаСПарнымиНачислениями))
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисленияДокумента КАК СтрокиДокументаПоНомерСтроки
		|		ПО ДанныеДокумента.НомерСтроки = СтрокиДокументаПоНомерСтроки.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиДоходов КАК СторноЗаписиДокумента
		|		ПО ДанныеДокумента.Начисление = СторноЗаписиДокумента.Начисление
		|			И ДанныеДокумента.ФизическоеЛицо = СторноЗаписиДокумента.ФизическоеЛицо
		|			И ДанныеДокумента.ДатаНачала = СторноЗаписиДокумента.ДатаНачала
		|			И ДанныеДокумента.ВидДохода = СторноЗаписиДокумента.ВидДохода
		|			И ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам = СторноЗаписиДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|			И ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам = СторноЗаписиДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам
		|			И ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = СторноЗаписиДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			И ДанныеДокумента.КлассУсловийТруда = СторноЗаписиДокумента.КлассУсловийТруда
		|			И ДанныеДокумента.ЯвляетсяДоходомФармацевта = СторноЗаписиДокумента.ЯвляетсяДоходомФармацевта
		|			И ДанныеДокумента.ЛьготныйТерриториальныйТариф = СторноЗаписиДокумента.ЛьготныйТерриториальныйТариф
		|			И (НЕ ДанныеДокумента.Сторно
		|					И СторноЗаписиДокумента.Сторно
		|				ИЛИ ДанныеДокумента.Сторно
		|					И НЕ СторноЗаписиДокумента.Сторно)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	ДанныеДокумента.НомерСтроки,
		|	ДанныеДокумента.ФизическоеЛицо,
		|	ДанныеДокумента.Сотрудник,
		|	ДанныеДокумента.Подразделение,
		|	ДанныеДокумента.Начисление,
		|	ДанныеДокумента.ДатаНачала,
		|	ДанныеДокумента.ВидДохода,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДанныеДокумента.КлассУсловийТруда,
		|	ДанныеДокумента.ЯвляетсяДоходомФармацевта,
		|	ДанныеДокумента.ЛьготныйТерриториальныйТариф,
		|	ДанныеДокумента.Сторно,
		|	&КонецМесяца,
		|	ДанныеДокумента.Сумма,
		|	ДанныеДокумента.Скидка,
		|	ДанныеДокумента.СторнируемыйДокумент
		|ИЗ
		|	ВТНачисленияСоСторноЗаписямиБезПарныхСтрок КАК ДанныеДокумента
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияСоСторноЗаписями.НомерСтроки КАК НомерСтроки,
		|	НачисленияСоСторноЗаписями.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ИЗ
		|	ВТНачисленияСоСторноЗаписями КАК НачисленияСоСторноЗаписями
		|ГДЕ
		|	НачисленияСоСторноЗаписями.Сторно";
		
		ТаблицаСторнируемыхДокументов = Запрос.Выполнить().Выгрузить();
		ТаблицаПромежуточныхИсправлений = ТаблицаСторнируемыхДокументов.СкопироватьКолонки("СторнируемыйДокумент");
		ТаблицаПромежуточныхИсправлений.Колонки.Добавить("ПромежуточноеИсправление", ТаблицаСторнируемыхДокументов.Колонки.СторнируемыйДокумент.ТипЗначения);
		УточнитьСторнируемыеДокументы(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений);
		УточнитьСторнируемыеПоНачислениям(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений, Запрос.МенеджерВременныхТаблиц, "ВТНачисленияСоСторноЗаписями");
		Запрос.УстановитьПараметр("ТаблицаСторнируемыхДокументов", ТаблицаСторнируемыхДокументов);
		Запрос.УстановитьПараметр("ТаблицаПромежуточныхИсправлений", ТаблицаПромежуточныхИсправлений);
		
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаСторнируемыхДокументов.НомерСтроки КАК НомерСтроки,
		|	ТаблицаСторнируемыхДокументов.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТТаблицаСторнируемыхДокументов
		|ИЗ
		|	&ТаблицаСторнируемыхДокументов КАК ТаблицаСторнируемыхДокументов
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаПромежуточныхИсправлений.ПромежуточноеИсправление КАК ПромежуточноеИсправление,
		|	ТаблицаПромежуточныхИсправлений.СторнируемыйДокумент КАК СторнируемыйДокумент
		|ПОМЕСТИТЬ ВТТаблицаПромежуточныхИсправлений
		|ИЗ
		|	&ТаблицаПромежуточныхИсправлений КАК ТаблицаПромежуточныхИсправлений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияОДоходах.Период КАК Период,
		|	СведенияОДоходах.Регистратор КАК Регистратор,
		|	СведенияОДоходах.Сумма КАК Сумма,
		|	СведенияОДоходах.Скидка КАК Скидка,
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СведенияОДоходах.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ВЫБОР
		|		КОГДА СведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ)
		|		ИНАЧЕ СведенияОДоходах.ЛьготныйТерриториальныйТариф
		|	КОНЕЦ КАК ЛьготныйТерриториальныйТариф,
		|	СведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	СведенияОДоходах.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТСведенияРегистраБезУточнений
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходах
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ (ВЫБРАТЬ РАЗЛИЧНЫЕ
		|			СторноЗаписи.СторнируемыйДокумент КАК Документ
		|		ИЗ
		|			ВТТаблицаСторнируемыхДокументов КАК СторноЗаписи) КАК СторнируемыеДокументы
		|		ПО СведенияОДоходах.Регистратор = СторнируемыеДокументы.Документ
		|ГДЕ
		|	СведенияОДоходах.ФизическоеЛицо В
		|			(ВЫБРАТЬ
		|				Начисления.ФизическоеЛицо
		|			ИЗ
		|				ВТНачисленияСоСторноЗаписями КАК Начисления)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СведенияРегистраБезУточнений.Регистратор КАК Регистратор,
		|	СведенияРегистраБезУточнений.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияРегистраБезУточнений.ВидДохода КАК ВидДохода,
		|	СведенияРегистраБезУточнений.Начисление КАК Начисление,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СведенияРегистраБезУточнений.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СведенияРегистраБезУточнений.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	СведенияРегистраБезУточнений.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	МИНИМУМ(СведенияРегистраБезУточнений.ДатаПолученияДохода) КАК ДатаПолученияДохода,
		|	МИНИМУМ(СведенияРегистраБезУточнений.Период) КАК Период
		|ПОМЕСТИТЬ ВТСторнируемыеСтрокиДоходов
		|ИЗ
		|	ВТСведенияРегистраБезУточнений КАК СведенияРегистраБезУточнений
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияРегистраБезУточнений.Регистратор,
		|	СведенияРегистраБезУточнений.ФизическоеЛицо,
		|	СведенияРегистраБезУточнений.ВидДохода,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СведенияРегистраБезУточнений.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СведенияРегистраБезУточнений.КлассУсловийТруда,
		|	СведенияРегистраБезУточнений.ЯвляетсяДоходомФармацевта,
		|	СведенияРегистраБезУточнений.ЛьготныйТерриториальныйТариф,
		|	СведенияРегистраБезУточнений.Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	АВТОНОМЕРЗАПИСИ() КАК Ключ,
		|	ДоходыСУточнением.Период КАК Период,
		|	ДоходыСУточнением.Регистратор КАК Регистратор,
		|	СУММА(ДоходыСУточнением.Сумма) КАК Сумма,
		|	СУММА(ДоходыСУточнением.Скидка) КАК Скидка,
		|	ДоходыСУточнением.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДоходыСУточнением.ВидДохода КАК ВидДохода,
		|	ДоходыСУточнением.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДоходыСУточнением.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДоходыСУточнением.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДоходыСУточнением.КлассУсловийТруда КАК КлассУсловийТруда,
		|	ДоходыСУточнением.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ДоходыСУточнением.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	ДоходыСУточнением.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	ДоходыСУточнением.Начисление КАК Начисление
		|ПОМЕСТИТЬ ВТСведенияРегистра
		|ИЗ
		|	(ВЫБРАТЬ
		|		СведенияОДоходах.Период КАК Период,
		|		СведенияОДоходах.Регистратор КАК Регистратор,
		|		СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СведенияОДоходах.ВидДохода КАК ВидДохода,
		|		СведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|		СведенияОДоходах.Начисление КАК Начисление,
		|		СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		СведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда,
		|		СведенияОДоходах.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|		СведенияОДоходах.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|		СведенияОДоходах.Сумма КАК Сумма,
		|		СведенияОДоходах.Скидка КАК Скидка
		|	ИЗ
		|		ВТСведенияРегистраБезУточнений КАК СведенияОДоходах
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		СведенияОДоходах.Период,
		|		СтрокиДоходов.Регистратор,
		|		СтрокиДоходов.ФизическоеЛицо,
		|		СтрокиДоходов.ВидДохода,
		|		СведенияОДоходах.ДатаПолученияДохода,
		|		СтрокиДоходов.Начисление,
		|		СтрокиДоходов.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		СтрокиДоходов.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		СтрокиДоходов.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		СтрокиДоходов.КлассУсловийТруда,
		|		СтрокиДоходов.ЯвляетсяДоходомФармацевта,
		|		СтрокиДоходов.ЛьготныйТерриториальныйТариф,
		|		СведенияОДоходах.Сумма,
		|		СведенияОДоходах.Скидка
		|	ИЗ
		|		ВТСторнируемыеСтрокиДоходов КАК СтрокиДоходов
		|			ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаПромежуточныхИсправлений КАК ТаблицаПромежуточныхИсправлений
		|			ПО СтрокиДоходов.Регистратор = ТаблицаПромежуточныхИсправлений.СторнируемыйДокумент
		|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходах
		|			ПО (ТаблицаПромежуточныхИсправлений.ПромежуточноеИсправление = СведенияОДоходах.Регистратор)
		|				И СтрокиДоходов.ФизическоеЛицо = СведенияОДоходах.ФизическоеЛицо
		|				И СтрокиДоходов.ВидДохода = СведенияОДоходах.ВидДохода
		|				И (СтрокиДоходов.Начисление = СведенияОДоходах.Начисление
		|					ИЛИ СведенияОДоходах.Начисление В (ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриРожденииРебенка), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПособиеПриПостановкеНаУчетВРанниеСрокиБеременности), ЗНАЧЕНИЕ(Перечисление.ВидыОсобыхНачисленийИУдержаний.ПустаяСсылка)))
		|	ГДЕ
		|		СведенияОДоходах.ФизическоеЛицо ЕСТЬ НЕ NULL ) КАК ДоходыСУточнением
		|
		|СГРУППИРОВАТЬ ПО
		|	ДоходыСУточнением.Период,
		|	ДоходыСУточнением.Регистратор,
		|	ДоходыСУточнением.ФизическоеЛицо,
		|	ДоходыСУточнением.ВидДохода,
		|	ДоходыСУточнением.ДатаПолученияДохода,
		|	ДоходыСУточнением.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ДоходыСУточнением.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ДоходыСУточнением.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ДоходыСУточнением.КлассУсловийТруда,
		|	ДоходыСУточнением.ЯвляетсяДоходомФармацевта,
		|	ДоходыСУточнением.ЛьготныйТерриториальныйТариф,
		|	ДоходыСУточнением.Начисление
		|
		|ИМЕЮЩИЕ
		|	СУММА(ДоходыСУточнением.Сумма) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
		|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
		|	ДанныеДокумента.Сотрудник КАК Сотрудник,
		|	ДанныеДокумента.Подразделение КАК Подразделение,
		|	ДанныеДокумента.Начисление КАК Начисление,
		|	ДанныеДокумента.ДатаНачала КАК ДатаНачала,
		|	ЕСТЬNULL(СведенияОДоходах.ВидДохода, ДанныеДокумента.ВидДохода) КАК ВидДохода,
		|	ДанныеДокумента.Сумма КАК Сумма,
		|	ДанныеДокумента.Скидка КАК Скидка,
		|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам) КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам) КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ЕСТЬNULL(СведенияОДоходах.КлассУсловийТруда, ДанныеДокумента.КлассУсловийТруда) КАК КлассУсловийТруда,
		|	ЕСТЬNULL(СведенияОДоходах.ЯвляетсяДоходомФармацевта, ДанныеДокумента.ЯвляетсяДоходомФармацевта) КАК ЯвляетсяДоходомФармацевта,
		|	ЕСТЬNULL(СведенияОДоходах.ЛьготныйТерриториальныйТариф, ДанныеДокумента.ЛьготныйТерриториальныйТариф) КАК ЛьготныйТерриториальныйТариф,
		|	ЕСТЬNULL(СведенияОДоходах.ДатаПолученияДохода, ДанныеДокумента.ДатаПолученияДохода) КАК ДатаПолученияДохода,
		|	ВЫБОР
		|		КОГДА СведенияОДоходах.Регистратор ЕСТЬ NULL
		|			ТОГДА ЛОЖЬ
		|		ИНАЧЕ ИСТИНА
		|	КОНЕЦ КАК ЕстьСторнируемыеДанныеУчета,
		|	СведенияОДоходах.Ключ КАК КлючСтрокиДоходов,
		|	ЕСТЬNULL(СведенияОДоходах.Сумма, 0) КАК СуммаВУчете,
		|	ЕСТЬNULL(СведенияОДоходах.Скидка, 0) КАК СкидкаВУчете
		|ПОМЕСТИТЬ ВТНачисленияСоСведениямиРегистра
		|ИЗ
		|	ВТНачисленияСоСторноЗаписями КАК ДанныеДокумента
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТТаблицаСторнируемыхДокументов КАК ТаблицаСторнируемыхДокументов
		|		ПО ДанныеДокумента.НомерСтроки = ТаблицаСторнируемыхДокументов.НомерСтроки
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСведенияРегистра КАК СведенияОДоходах
		|		ПО (ТаблицаСторнируемыхДокументов.СторнируемыйДокумент = СведенияОДоходах.Регистратор)
		|			И ДанныеДокумента.ФизическоеЛицо = СведенияОДоходах.ФизическоеЛицо
		|			И (ВЫБОР
		|				КОГДА СведенияОДоходах.Начисление.КодДоходаСтраховыеВзносы ЕСТЬ NULL
		|					ТОГДА ДанныеДокумента.ВидДохода = СведенияОДоходах.ВидДохода
		|				ИНАЧЕ ДанныеДокумента.Начисление = СведенияОДоходах.Начисление
		|			КОНЕЦ)
		|ГДЕ
		|	(ДанныеДокумента.Сумма <> 0
		|			ИЛИ ДанныеДокумента.Скидка <> 0)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияСоСведениямиРегистра.НомерСтроки КАК НомерСтроки,
		|	-НачисленияСоСведениямиРегистра.Сумма КАК СуммаСторнирования,
		|	СУММА(НачисленияСоСведениямиРегистра.СуммаВУчете) КАК СуммаВУчете
		|ПОМЕСТИТЬ ВТНекомпенсированныеСторноНачисления
		|ИЗ
		|	ВТНачисленияСоСведениямиРегистра КАК НачисленияСоСведениямиРегистра
		|ГДЕ
		|	НачисленияСоСведениямиРегистра.ЕстьСторнируемыеДанныеУчета
		|
		|СГРУППИРОВАТЬ ПО
		|	НачисленияСоСведениямиРегистра.НомерСтроки,
		|	-НачисленияСоСведениямиРегистра.Сумма
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СведенияРегистра.Ключ КАК Ключ,
		|	СведенияРегистра.Сумма КАК СуммаВУчете,
		|	СведенияРегистра.Скидка КАК СкидкаВУчете
		|ИЗ ВТСведенияРегистра КАК СведенияРегистра
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НачисленияСоСведениямиРегистра.НомерСтроки КАК НомерСтроки,
		|	НачисленияСоСведениямиРегистра.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияСоСведениямиРегистра.Сотрудник КАК Сотрудник,
		|	НачисленияСоСведениямиРегистра.Подразделение КАК Подразделение,
		|	НачисленияСоСведениямиРегистра.Начисление КАК Начисление,
		|	НачисленияСоСведениямиРегистра.ДатаНачала КАК ДатаНачала,
		|	НачисленияСоСведениямиРегистра.ВидДохода КАК ВидДохода,
		|	НачисленияСоСведениямиРегистра.Сумма КАК Сумма,
		|	НачисленияСоСведениямиРегистра.Скидка КАК Скидка,
		|	НачисленияСоСведениямиРегистра.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	НачисленияСоСведениямиРегистра.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	НачисленияСоСведениямиРегистра.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	НачисленияСоСведениямиРегистра.КлассУсловийТруда КАК КлассУсловийТруда,
		|	НачисленияСоСведениямиРегистра.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	НачисленияСоСведениямиРегистра.ЛьготныйТерриториальныйТариф КАК ЛьготныйТерриториальныйТариф,
		|	НачисленияСоСведениямиРегистра.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	НачисленияСоСведениямиРегистра.ЕстьСторнируемыеДанныеУчета КАК ЕстьСторнируемыеДанныеУчета,
		|	НачисленияСоСведениямиРегистра.КлючСтрокиДоходов КАК КлючСтрокиДоходов
		|ИЗ
		|	ВТНачисленияСоСведениямиРегистра КАК НачисленияСоСведениямиРегистра
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНекомпенсированныеСторноНачисления КАК СторноНачисления
		|		ПО НачисленияСоСведениямиРегистра.НомерСтроки = СторноНачисления.НомерСтроки
		|ГДЕ
		|	(НЕ НачисленияСоСведениямиРегистра.ЕстьСторнируемыеДанныеУчета
		|			ИЛИ ЕСТЬNULL(СторноНачисления.СуммаСторнирования, 0) <= ЕСТЬNULL(СторноНачисления.СуммаВУчете, 0))
		|
		|УПОРЯДОЧИТЬ ПО
		|	НачисленияСоСведениямиРегистра.НомерСтроки,
		|	НачисленияСоСведениямиРегистра.ДатаПолученияДохода УБЫВ";
		
		ВременнаяТаблица = РегистрыНакопления.СведенияОДоходахСтраховыеВзносы.СоздатьНаборЗаписей().ВыгрузитьКолонки();
		ВременнаяТаблица.Колонки.Удалить("Начисление");
		ВременнаяТаблица.Колонки.Добавить("Начисление", Новый ОписаниеТипов(Метаданные.РегистрыНакопления.СведенияОДоходахСтраховыеВзносы.Реквизиты.Начисление.Тип, "СправочникСсылка.ВидыДоходовПоСтраховымВзносам"),);
		
		РезультатЗапроса = Запрос.ВыполнитьПакет();                     
		СведенияРегистра = РезультатЗапроса[7].Выгрузить();
		Выборка = РезультатЗапроса[8].Выбрать();
		Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
			Если Выборка.ЕстьСторнируемыеДанныеУчета Тогда
				
				СторноВсего = -Выборка.Сумма;
				СторноСкидки = -Выборка.Скидка;
				
				Пока Выборка.Следующий() Цикл
					
					СтрокаСведений = СведенияРегистра.Найти(Выборка.КлючСтрокиДоходов, "Ключ");
					Если СтрокаСведений.СуммаВУчете = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					Сумма = -Мин(СторноВсего, СтрокаСведений.СуммаВУчете);
					СторноВсего = СторноВсего + Сумма;
					СтрокаСведений.СуммаВУчете = СтрокаСведений.СуммаВУчете + Сумма;
					
					Если СторноСкидки = 0 Тогда
						Скидка = 0
					Иначе
						Скидка = -Мин(СторноСкидки, СтрокаСведений.СкидкаВУчете);
						СторноСкидки = СторноСкидки + Скидка;
						СтрокаСведений.СкидкаВУчете = СтрокаСведений.СкидкаВУчете + Скидка;
					КонецЕсли;
					
					Движение = ВременнаяТаблица.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,Выборка);
					
					// ресурсы 
					Движение.Сумма = Сумма;
					Движение.Скидка	= Скидка;
					
					Если СторноВсего = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				
				ЗаполнитьЗначенияСвойств(ВременнаяТаблица.Добавить(), Выборка); // Период, ФизическоеЛицо, ВидДохода, Сумма, Начисление
				
			КонецЕсли;
		КонецЦикла;
		
		// Теперь поищем отменяемые начисления по периоду действия.
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СторноНачисления.НомерСтроки
		|ПОМЕСТИТЬ ВТСтрокиСторноПериода
		|ИЗ
		|	ВТНекомпенсированныеСторноНачисления КАК СторноНачисления
		|ГДЕ
		|	СторноНачисления.СуммаСторнирования > СторноНачисления.СуммаВУчете";
		Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда 
			
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ДанныеДокумента.НомерСтроки КАК НомерСтроки,
			|	ДанныеДокумента.ФизическоеЛицо КАК ФизическоеЛицо,
			|	ДанныеДокумента.Сотрудник КАК Сотрудник,
			|	ДанныеДокумента.Подразделение КАК Подразделение,
			|	ДанныеДокумента.Начисление КАК Начисление,
			|	ДанныеДокумента.ДатаНачала КАК ДатаНачала,
			|	ЕСТЬNULL(СведенияОДоходах.ВидДохода, ДанныеДокумента.ВидДохода) КАК ВидДохода,
			|	ДанныеДокумента.Сумма КАК Сумма,
			|	ДанныеДокумента.Скидка КАК Скидка,
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам) КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам) КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	ЕСТЬNULL(СведенияОДоходах.КлассУсловийТруда, ДанныеДокумента.КлассУсловийТруда) КАК КлассУсловийТруда,
			|	ЕСТЬNULL(СведенияОДоходах.ЯвляетсяДоходомФармацевта, ДанныеДокумента.ЯвляетсяДоходомФармацевта) КАК ЯвляетсяДоходомФармацевта,
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА СведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ
			|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ)
			|			ИНАЧЕ СведенияОДоходах.ЛьготныйТерриториальныйТариф
			|		КОНЕЦ, ДанныеДокумента.ЛьготныйТерриториальныйТариф) КАК ЛьготныйТерриториальныйТариф,
			|	ЕСТЬNULL(СведенияОДоходах.ДатаПолученияДохода, ДанныеДокумента.ДатаПолученияДохода) КАК ДатаПолученияДохода,
			|	СУММА(ЕСТЬNULL(СведенияОДоходах.Сумма, 0)) КАК СуммаВУчете,
			|	СУММА(ЕСТЬNULL(СведенияОДоходах.Скидка, 0)) КАК СкидкаВУчете
			|ИЗ
			|	ВТНачисленияСоСторноЗаписями КАК ДанныеДокумента
			|		ЛЕВОЕ СОЕДИНЕНИЕ ВТСтрокиСторноПериода КАК ТаблицаСторнируемыхСтрок
			|		ПО ДанныеДокумента.НомерСтроки = ТаблицаСторнируемыхСтрок.НомерСтроки
			|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходах
			|		ПО ДанныеДокумента.ФизическоеЛицо = СведенияОДоходах.ФизическоеЛицо
			|			И ДанныеДокумента.Начисление = СведенияОДоходах.Начисление
			|			И (СведенияОДоходах.Регистратор <> &ИсключаемыйРегистратор)
			|			И (СведенияОДоходах.Организация = &Организация)
			|			И (НАЧАЛОПЕРИОДА(ДанныеДокумента.ДатаНачала, МЕСЯЦ) = НАЧАЛОПЕРИОДА(СведенияОДоходах.ДатаНачала, МЕСЯЦ))
			|ГДЕ
			|	ТаблицаСторнируемыхСтрок.НомерСтроки ЕСТЬ НЕ NULL 
			|	И (ДанныеДокумента.Сумма <> 0
			|			ИЛИ ДанныеДокумента.Скидка <> 0)
			|
			|СГРУППИРОВАТЬ ПО
			|	ДанныеДокумента.НомерСтроки,
			|	ДанныеДокумента.ФизическоеЛицо,
			|	ДанныеДокумента.Сотрудник,
			|	ДанныеДокумента.Подразделение,
			|	ДанныеДокумента.Начисление,
			|	ДанныеДокумента.ДатаНачала,
			|	ДанныеДокумента.Сумма,
			|	ДанныеДокумента.Скидка,
			|	ЕСТЬNULL(СведенияОДоходах.ВидДохода, ДанныеДокумента.ВидДохода),
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуЛетчикам),
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам, ДанныеДокумента.ОблагаетсяВзносамиНаДоплатуШахтерам),
			|	ЕСТЬNULL(СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией, ДанныеДокумента.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией),
			|	ЕСТЬNULL(СведенияОДоходах.КлассУсловийТруда, ДанныеДокумента.КлассУсловийТруда),
			|	ЕСТЬNULL(СведенияОДоходах.ЯвляетсяДоходомФармацевта, ДанныеДокумента.ЯвляетсяДоходомФармацевта),
			|	ЕСТЬNULL(ВЫБОР
			|			КОГДА СведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ
			|				ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ)
			|			ИНАЧЕ СведенияОДоходах.ЛьготныйТерриториальныйТариф
			|		КОНЕЦ, ДанныеДокумента.ЛьготныйТерриториальныйТариф),
			|	ЕСТЬNULL(СведенияОДоходах.ДатаПолученияДохода, ДанныеДокумента.ДатаПолученияДохода)
			|
			|УПОРЯДОЧИТЬ ПО
			|	НомерСтроки,
			|	ДатаПолученияДохода УБЫВ";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Пока Выборка.СледующийПоЗначениюПоля("НомерСтроки") Цикл
				СторноВсего = -Выборка.Сумма;
				СторноСкидки = -Выборка.Скидка;
				Пока Выборка.Следующий() Цикл
					
					Сумма = -Мин(СторноВсего, Выборка.СуммаВУчете);
					СторноВсего = СторноВсего + Сумма;
					Если СторноСкидки = 0 Тогда
						Скидка = 0
					Иначе
						Скидка = -Мин(СторноСкидки, Выборка.СкидкаВУчете);
						СторноСкидки = СторноСкидки + Скидка;
					КонецЕсли;
					
					Движение = ВременнаяТаблица.Добавить();
					ЗаполнитьЗначенияСвойств(Движение,Выборка);
					
					// ресурсы 
					Движение.Сумма = Сумма;
					Движение.Скидка	= Скидка;
					
					Если СторноВсего = 0 Тогда
						Прервать;
					КонецЕсли;
					
				КонецЦикла;
			КонецЦикла;
			
		КонецЕсли;
		
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.УстановитьПараметр("Начисления", ВременнаяТаблица); ВременнаяТаблица = Неопределено;
		Запрос.Текст =
		"ВЫБРАТЬ
		|	Начисления.ДатаПолученияДохода,
		|	Начисления.Сотрудник,
		|	Начисления.Начисление,
		|	Начисления.Подразделение,
		|	Начисления.ДатаНачала,
		|	Начисления.ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда,
		|	Начисления.Сумма,
		|	Начисления.Скидка,
		|	Начисления.ФизическоеЛицо
		|ПОМЕСТИТЬ ВТВременнаяТаблица
		|ИЗ
		|	&Начисления КАК Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Начисления.ДатаПолученияДохода,
		|	Начисления.Сотрудник,
		|	Начисления.Начисление,
		|	Начисления.Подразделение,
		|	Начисления.ДатаНачала,
		|	Начисления.ВидДохода,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	Начисления.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	Начисления.ЯвляетсяДоходомФармацевта,
		|	Начисления.ЛьготныйТерриториальныйТариф,
		|	Начисления.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	Начисления.КлассУсловийТруда,
		|	Начисления.Сумма,
		|	Начисления.Скидка,
		|	Начисления.ФизическоеЛицо,
		|	ИСТИНА КАК РаспределятьЕНВД,
		|	НЕОПРЕДЕЛЕНО КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТНачисленияСДаннымиУчета
		|ИЗ
		|	ВТВременнаяТаблица КАК Начисления
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременнаяТаблица";
		Запрос.Выполнить();
		
	КонецЕсли;
	
	Запрос.Текст =
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	ДоходыЗаПериод.ФизическоеЛицо
	|ИЗ
	|	ВТДоходыЗаПериод КАК ДоходыЗаПериод
	|ГДЕ
	|	ДоходыЗаПериод.Результат >= 0";
	
	Если Не Запрос.Выполнить().Пустой() Тогда // Попробуем скомпенсировать уже имеющиеся сторно-записи прошлых периодов.
		                                                          
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР КАК ОблагаетсяВзносамиВПФР,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СУММА(СведенияОДоходах.Результат) КАК Результат
		|ПОМЕСТИТЬ ВТДоходыЗаПериодБезНеобъекта
		|ИЗ
		|	(ВЫБРАТЬ
		|		СтраховыеВзносыСведенияОДоходахОбороты.ФизическоеЛицо КАК ФизическоеЛицо,
		|		СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода КАК ВидДохода,
		|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		СтраховыеВзносыСведенияОДоходахОбороты.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		СтраховыеВзносыСведенияОДоходахОбороты.КлассУсловийТруда КАК КлассУсловийТруда,
		|		СтраховыеВзносыСведенияОДоходахОбороты.Сумма КАК Результат
		|	ИЗ
		|		РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходахОбороты
		|	ГДЕ
		|		СтраховыеВзносыСведенияОДоходахОбороты.Период МЕЖДУ &Начало И &Окончание
		|		И СтраховыеВзносыСведенияОДоходахОбороты.Регистратор <> &ИсключаемыйРегистратор
		|		И СтраховыеВзносыСведенияОДоходахОбороты.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|		И СтраховыеВзносыСведенияОДоходахОбороты.Организация = &Организация
		|		И СтраховыеВзносыСведенияОДоходахОбороты.ФизическоеЛицо В
		|				(ВЫБРАТЬ
		|					Доходы.ФизическоеЛицо
		|				ИЗ
		|					ВТСДаннымиУчета КАК Доходы)
		|		И СтраховыеВзносыСведенияОДоходахОбороты.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ДанныеУчета.ФизическоеЛицо,
		|		ДанныеУчета.ВидДохода,
		|		ДанныеУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|		ДанныеУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|		ДанныеУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|		ДанныеУчета.КлассУсловийТруда,
		|		ДанныеУчета.Сумма
		|	ИЗ
		|		ВТНачисленияСДаннымиУчета КАК ДанныеУчета
		|	ГДЕ
		|		ДанныеУчета.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)) КАК СведенияОДоходах
		|
		|СГРУППИРОВАТЬ ПО
		|	СведенияОДоходах.ФизическоеЛицо,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СведенияОДоходах.КлассУсловийТруда,
		|	СведенияОДоходах.ВидДохода.ВходитВБазуПФР
		|
		|ИМЕЮЩИЕ
		|	СУММА(СведенияОДоходах.Результат) > 0
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода КАК ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода КАК ДатаПолученияДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомФармацевта КАК ЯвляетсяДоходомФармацевта,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ)
		|		ИНАЧЕ СтраховыеВзносыСведенияОДоходах.ЛьготныйТерриториальныйТариф
		|	КОНЕЦ КАК ЛьготныйТерриториальныйТариф,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда КАК КлассУсловийТруда,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.Сумма) КАК Сумма,
		|	СУММА(СтраховыеВзносыСведенияОДоходах.Скидка) КАК Скидка,
		|	СтраховыеВзносыСведенияОДоходах.Начисление КАК Начисление,
		|	СтраховыеВзносыСведенияОДоходах.Сотрудник КАК Сотрудник,
		|	СтраховыеВзносыСведенияОДоходах.Подразделение КАК Подразделение,
		|	СтраховыеВзносыСведенияОДоходах.ДатаНачала КАК ДатаНачала,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД КАК ОблагаетсяЕНВД
		|ПОМЕСТИТЬ ВТЗаписиЗаПрошлыйПериод
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходах
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТДоходыЗаПериодБезНеобъекта КАК ДоходыЗаПериод
		|		ПО СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо = ДоходыЗаПериод.ФизическоеЛицо
		|			И СтраховыеВзносыСведенияОДоходах.ВидДохода.ВходитВБазуПФР = ДоходыЗаПериод.ОблагаетсяВзносамиВПФР
		|			И СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам
		|			И СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам = ДоходыЗаПериод.ОблагаетсяВзносамиНаДоплатуШахтерам
		|			И СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией = ДоходыЗаПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией
		|			И СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда = ДоходыЗаПериод.КлассУсловийТруда
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.Регистратор <> &ИсключаемыйРегистратор
		|	И СтраховыеВзносыСведенияОДоходах.ГоловнаяОрганизация = &ГоловнаяОрганизация
		|	И СтраховыеВзносыСведенияОДоходах.Организация = &Организация
		|	И ДоходыЗаПериод.Результат >= 0
		|	И НЕ СтраховыеВзносыСведенияОДоходах.ПоАктуПроверки
		|	И СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода < &Начало
		|	И СтраховыеВзносыСведенияОДоходах.Период МЕЖДУ &Начало И &Окончание
		|	И СтраховыеВзносыСведенияОДоходах.ВидДохода <> ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.НеЯвляетсяОбъектом)
		|
		|СГРУППИРОВАТЬ ПО
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.ВидДохода,
		|	СтраховыеВзносыСведенияОДоходах.ДатаПолученияДохода,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомФармацевта,
		|	ВЫБОР
		|		КОГДА СтраховыеВзносыСведенияОДоходах.ЯвляетсяДоходомЧленаЭкипажаСуднаПодФлагомРФ
		|			ТОГДА ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ДляЧленовЭкипажейМорскихСудовПодФлагомРФ)
		|		ИНАЧЕ СтраховыеВзносыСведенияОДоходах.ЛьготныйТерриториальныйТариф
		|	КОНЕЦ,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СтраховыеВзносыСведенияОДоходах.КлассУсловийТруда,
		|	СтраховыеВзносыСведенияОДоходах.Начисление,
		|	СтраховыеВзносыСведенияОДоходах.Сотрудник,
		|	СтраховыеВзносыСведенияОДоходах.Подразделение,
		|	СтраховыеВзносыСведенияОДоходах.ДатаНачала,
		|	СтраховыеВзносыСведенияОДоходах.ОблагаетсяЕНВД
		|
		|ИМЕЮЩИЕ
		|	СУММА(СтраховыеВзносыСведенияОДоходах.Сумма) < 0";
		ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТЗаписиЗаПрошлыйПериод");
		ТаблицыКУдалению.Добавить("ВТДоходыЗаПериодБезНеобъекта");
		Если Запрос.Выполнить().Выгрузить()[0].Количество > 0 Тогда  // Компенсируем сторно-записи.
			Запрос.Текст =
			"ВЫБРАТЬ
			|	ЗаписиЗаПрошлыйПериод.ФизическоеЛицо,
			|	ЗаписиЗаПрошлыйПериод.ВидДохода,
			|	ЗаписиЗаПрошлыйПериод.ДатаПолученияДохода,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	ЗаписиЗаПрошлыйПериод.ЯвляетсяДоходомФармацевта,
			|	ЗаписиЗаПрошлыйПериод.ЛьготныйТерриториальныйТариф,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	ЗаписиЗаПрошлыйПериод.КлассУсловийТруда,
			|	-ЗаписиЗаПрошлыйПериод.Сумма КАК Сумма,
			|	-ЗаписиЗаПрошлыйПериод.Скидка КАК Скидка,
			|	ЗаписиЗаПрошлыйПериод.Начисление,
			|	ЗаписиЗаПрошлыйПериод.Сотрудник,
			|	ЗаписиЗаПрошлыйПериод.Подразделение,
			|	ЗаписиЗаПрошлыйПериод.ДатаНачала,
			|	ЛОЖЬ КАК РаспределятьЕНВД,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяЕНВД
			|ПОМЕСТИТЬ ВТВременная
			|ИЗ
			|	ВТЗаписиЗаПрошлыйПериод КАК ЗаписиЗаПрошлыйПериод
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	ЗаписиЗаПрошлыйПериод.ФизическоеЛицо,
			|	ЗаписиЗаПрошлыйПериод.ВидДохода,
			|	&КонецМесяца,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	ЗаписиЗаПрошлыйПериод.ЯвляетсяДоходомФармацевта,
			|	ЗаписиЗаПрошлыйПериод.ЛьготныйТерриториальныйТариф,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	ЗаписиЗаПрошлыйПериод.КлассУсловийТруда,
			|	ЗаписиЗаПрошлыйПериод.Сумма,
			|	ЗаписиЗаПрошлыйПериод.Скидка,
			|	ЗаписиЗаПрошлыйПериод.Начисление,
			|	ЗаписиЗаПрошлыйПериод.Сотрудник,
			|	ЗаписиЗаПрошлыйПериод.Подразделение,
			|	ЗаписиЗаПрошлыйПериод.ДатаНачала,
			|	ЛОЖЬ,
			|	ЗаписиЗаПрошлыйПериод.ОблагаетсяЕНВД
			|ИЗ
			|	ВТЗаписиЗаПрошлыйПериод КАК ЗаписиЗаПрошлыйПериод
			|
			|ОБЪЕДИНИТЬ ВСЕ
			|
			|ВЫБРАТЬ
			|	НачисленияСДаннымиУчета.ФизическоеЛицо,
			|	НачисленияСДаннымиУчета.ВидДохода,
			|	НачисленияСДаннымиУчета.ДатаПолученияДохода,
			|	НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	НачисленияСДаннымиУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	НачисленияСДаннымиУчета.ЯвляетсяДоходомФармацевта,
			|	НачисленияСДаннымиУчета.ЛьготныйТерриториальныйТариф,
			|	НачисленияСДаннымиУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	НачисленияСДаннымиУчета.КлассУсловийТруда,
			|	НачисленияСДаннымиУчета.Сумма,
			|	НачисленияСДаннымиУчета.Скидка,
			|	НачисленияСДаннымиУчета.Начисление,
			|	НачисленияСДаннымиУчета.Сотрудник,
			|	НачисленияСДаннымиУчета.Подразделение,
			|	НачисленияСДаннымиУчета.ДатаНачала,
			|	НачисленияСДаннымиУчета.РаспределятьЕНВД,
			|	НачисленияСДаннымиУчета.ОблагаетсяЕНВД
			|ИЗ
			|	ВТНачисленияСДаннымиУчета КАК НачисленияСДаннымиУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|УНИЧТОЖИТЬ ВТНачисленияСДаннымиУчета
			|;
			|
			|////////////////////////////////////////////////////////////////////////////////
			|ВЫБРАТЬ
			|	Временная.ФизическоеЛицо,
			|	Временная.ВидДохода,
			|	Временная.ДатаПолученияДохода,
			|	Временная.ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	Временная.ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	Временная.ЯвляетсяДоходомФармацевта,
			|	Временная.ЛьготныйТерриториальныйТариф,
			|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	Временная.КлассУсловийТруда,
			|	СУММА(Временная.Сумма) КАК Сумма,
			|	СУММА(Временная.Скидка) КАК Скидка,
			|	Временная.Начисление,
			|	Временная.Сотрудник,
			|	Временная.Подразделение,
			|	Временная.ДатаНачала,
			|	Временная.РаспределятьЕНВД,
			|	Временная.ОблагаетсяЕНВД
			|ПОМЕСТИТЬ ВТНачисленияСДаннымиУчета
			|ИЗ
			|	ВТВременная КАК Временная
			|
			|СГРУППИРОВАТЬ ПО
			|	Временная.ФизическоеЛицо,
			|	Временная.ВидДохода,
			|	Временная.ДатаПолученияДохода,
			|	Временная.ОблагаетсяВзносамиНаДоплатуЛетчикам,
			|	Временная.ОблагаетсяВзносамиНаДоплатуШахтерам,
			|	Временная.ЯвляетсяДоходомФармацевта,
			|	Временная.ЛьготныйТерриториальныйТариф,
			|	Временная.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
			|	Временная.КлассУсловийТруда,
			|	Временная.Начисление,
			|	Временная.Сотрудник,
			|	Временная.Подразделение,
			|	Временная.ДатаНачала,
			|	Временная.РаспределятьЕНВД,
			|	Временная.ОблагаетсяЕНВД";
			Запрос.Выполнить();
			ТаблицыКУдалению.Добавить("ВТВременная");
		КонецЕсли;
		ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, ТаблицыКУдалению)
		
	КонецЕсли;
	
	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве("ВТДоходыЗаПериод");
	ТаблицыКУдалению.Добавить("ВТПоложительныеДоходыПоРегистратору");
	ЗарплатаКадры.УничтожитьВТ(Запрос.МенеджерВременныхТаблиц, ТаблицыКУдалению)
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТСДаннымиУчета, которая содержит следующие поля
//		Сотрудник - СправочникСсылка.Сотрудники
//		ФизическоеЛицо - СправочникСсылка.ФизическиеЛица
//		ДатаНачала - дата
//		Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//		ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам -
//		Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//		ЯвляетсяДоходомФармацевта - булево.
//		ЛьготныйТерриториальныйТариф - СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//		ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//		КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//		ОблагаетсяВзносамиНаДоплатуЛетчикам - булево.
//		ОблагаетсяВзносамиНаДоплатуШахтерам - булево.
//		КоэффициентУчетаСтроки - число от 0 до 1.
//		УсловияТруда - СправочникСсылка.УсловияТруда
//      	 
// Параметры:
//		Организация -
//		ПериодРегистрации - дата -
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - содержит
//			вр. таблицу ВТНачисления с полями:
//				Сотрудник - СправочникСсылка.Сотрудники
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				ПодразделениеОрганизации - СправочникСсылка.ПодразделенияОрганизаций
//				УсловияТруда - СправочникСсылка.УсловияТруда
//			вр. таблицу ВТКадровыхДанных с полями:
//				Сотрудник - СправочникСсылка.Сотрудники
//				ДатаНачала - дата
//				Начисление - ПеречислениеСсылка.ВидыОсобыхНачисленийИУдержаний, ПланВидовРасчетаСсылка.Начисления
//				Подразделение - СправочникСсылка.ПодразделенияОрганизаций
//				Должность - СправочникСсылка.Должности
//				ЯвляетсяФармацевтом - булево.
//				ПрименяемыйЛьготныйТерриториальныйТариф - СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//				ЯвляетсяРаботникомСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//				ЯвляетсяПрокурором - булево.
//				ЯвляетсяВоеннослужащим - булево.
//				РаботаетВСтуденческомОтряде - булево.
//				ЯвляетсяЧленомЛетногоЭкипажа - булево.
//				ЯвляетсяШахтером - булево.
//				КоэффициентУчетаСтроки - число от 0 до 1.
//				УсловияТруда - СправочникСсылка.УсловияТруда
//
Процедура СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц) Экспорт 
	
	ВТНачисленияСодержитВидДохода = МенеджерВременныхТаблиц.Таблицы["ВТНачисления"].Колонки.Найти("ВидДохода") <> Неопределено;
		
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьОсобыеУсловияТрудаВОрганизации", Новый Структура("Организация",Организация)) Или ПериодРегистрации < УчетСтраховыхВзносовКлиентСервер.ДатаОбъединенияСтраховойИНакопительнойЧастейВзносовПФР() Тогда
		
		УчетСтраховыхВзносовБазовый.СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СДаннымиУчета.Сотрудник,
		|	СДаннымиУчета.Начисление,
		|	СДаннымиУчета.ДатаНачала,
		|	СДаннымиУчета.Подразделение,
		|	СписокНачислений.УсловияТруда,
		|	СДаннымиУчета.ВидДохода КАК ВидДохода,
		|	СДаннымиУчета.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	СДаннымиУчета.ФизическоеЛицо,
		|	СДаннымиУчета.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	СДаннымиУчета.ЯвляетсяДоходомФармацевта,
		|	СДаннымиУчета.ЛьготныйТерриториальныйТариф,
		|	СДаннымиУчета.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	СДаннымиУчета.КлассУсловийТруда,
		|	СДаннымиУчета.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТВременнаяТаблица
		|ИЗ
		|	ВТСДаннымиУчета КАК СДаннымиУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ВТНачисления КАК СписокНачислений
		|		ПО СДаннымиУчета.Сотрудник = СписокНачислений.Сотрудник
		|			И СДаннымиУчета.ДатаНачала = СписокНачислений.ДатаНачала
		|			И СДаннымиУчета.Подразделение = СписокНачислений.ПодразделениеОрганизации
		|			И СДаннымиУчета.Начисление = СписокНачислений.Начисление
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТСДаннымиУчета
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВременнаяТаблица.Сотрудник,
		|	ВременнаяТаблица.Начисление,
		|	ВременнаяТаблица.ДатаНачала,
		|	ВременнаяТаблица.Подразделение,
		|	ВременнаяТаблица.УсловияТруда,
		|	ВременнаяТаблица.ВидДохода,
		|	ВременнаяТаблица.ОблагаетсяВзносамиНаДоплатуЛетчикам,
		|	ВременнаяТаблица.ФизическоеЛицо,
		|	ВременнаяТаблица.ОблагаетсяВзносамиНаДоплатуШахтерам,
		|	ВременнаяТаблица.ЯвляетсяДоходомФармацевта,
		|	ВременнаяТаблица.ЛьготныйТерриториальныйТариф,
		|	ВременнаяТаблица.ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
		|	ВременнаяТаблица.КлассУсловийТруда,
		|	ВременнаяТаблица.КоэффициентУчетаСтроки
		|ПОМЕСТИТЬ ВТСДаннымиУчета
		|ИЗ
		|	ВТВременнаяТаблица КАК ВременнаяТаблица
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВТВременнаяТаблица";
		
		Если ВТНачисленияСодержитВидДохода Тогда
			Запрос.Текст = СтрЗаменить(Запрос.Текст, "СДаннымиУчета.ВидДохода",
				"ВЫБОР КОГДА СДаннымиУчета.ВидДохода = ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка) ТОГДА СписокНачислений.ВидДохода ИНАЧЕ СДаннымиУчета.ВидДохода КОНЕЦ");
		КонецЕсли;
		
		Запрос.Выполнить();
		
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДанныеОСотруднике.Должность КАК Должность,
	|	ДанныеОСотруднике.ДатаНачала КАК Период
	|ПОМЕСТИТЬ ВТДолжности
	|ИЗ
	|	ВТКадровыхДанных КАК ДанныеОСотруднике";
	
	ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, "ДанныеОСотруднике", , Ложь, Истина);
	
	Запрос.УстановитьПараметр("ПериодРегистрации", ПериодРегистрации);
	Запрос.Выполнить();
	
	ПараметрыПостроения = ЗарплатаКадрыОбщиеНаборыДанных.ПараметрыПостроенияДляСоздатьВТИмяРегистраСрез();
	ПараметрыПостроения.ВсеЗаписи = Истина;
	УчетСтраховыхВзносов.ДобавитьОтборПриЧтенииПериодическихДанных(ПараметрыПостроения, КонецМесяца(ПериодРегистрации), Ложь);

	ЗарплатаКадрыОбщиеНаборыДанных.СоздатьВТИмяРегистраСрезПоследних(
		"КлассыУсловийТрудаПоДолжностям",
		Запрос.МенеджерВременныхТаблиц,
		Ложь,
		ЗарплатаКадрыОбщиеНаборыДанных.ОписаниеФильтраДляСоздатьВТИмяРегистра(
			"ВТДолжности",
			"Должность"),
		ПараметрыПостроения);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Начисление,
	|	ДанныеОСотруднике.ЯвляетсяПрокурором,
	|	ДанныеОСотруднике.ЯвляетсяВоеннослужащим,
	|	ДанныеОСотруднике.РаботаетВСтуденческомОтряде
	|ПОМЕСТИТЬ ВТСписокНачислений
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыхДанных КАК ДанныеОСотруднике
	|		ПО СписокНачислений.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СписокНачислений.ДатаНачала = ДанныеОСотруднике.ДатаНачала
	|			И СписокНачислений.Начисление = ДанныеОСотруднике.Начисление
	|			И СписокНачислений.ПодразделениеОрганизации = ДанныеОСотруднике.Подразделение
	|			И СписокНачислений.УсловияТруда = ДанныеОСотруднике.УсловияТруда";
	Запрос.Выполнить();
	
	УчетСтраховыхВзносов.СформироватьВТСоответствиеВидовДоходаНачислениям(МенеджерВременныхТаблиц, ПериодРегистрации);
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка) КАК ВидДохода,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	СписокНачислений.УсловияТруда
	|ПОМЕСТИТЬ ВТДляОпределенияДанныхУчета
	|ИЗ
	|	ВТНачисления КАК СписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ДатаНачала КАК ДатаНачала,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	ЕСТЬNULL(ВидыДоходаПоНачислениям.ВидДохода, СписокНачислений.ВидДохода) КАК ВидДохода,
	|	Сотрудники.ФизическоеЛицо КАК ФизическоеЛицо,
	|	ЕСТЬNULL(ДанныеОСотруднике.ЯвляетсяЧленомЛетногоЭкипажа, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуЛетчикам,
	|	ЕСТЬNULL(ДанныеОСотруднике.ЯвляетсяШахтером, ЛОЖЬ) КАК ОблагаетсяВзносамиНаДоплатуШахтерам,
	|	ЕСТЬNULL(ДанныеОСотруднике.ЯвляетсяФармацевтом, ЛОЖЬ) КАК ЯвляетсяДоходомФармацевта,
	|	ЕСТЬNULL(ДанныеОСотруднике.ПрименяемыйЛьготныйТерриториальныйТариф, ЛОЖЬ) КАК ЛьготныйТерриториальныйТариф,
	|	ЕСТЬNULL(ДанныеОСотруднике.ЯвляетсяРаботникомСДосрочнойПенсией, ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка)) КАК ОблагаетсяВзносамиЗаЗанятыхНаРаботахСДосрочнойПенсией,
	|	ЕСТЬNULL(КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)) КАК КлассУсловийТруда,
	|	ЕСТЬNULL(СУММА(ДанныеОСотруднике.КоэффициентУчетаСтроки), 1) КАК КоэффициентУчетаСтроки
	|ПОМЕСТИТЬ ВТСДаннымиУчета
	|ИЗ
	|	ВТДляОпределенияДанныхУчета КАК СписокНачислений
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТКадровыхДанных КАК ДанныеОСотруднике
	|			ЛЕВОЕ СОЕДИНЕНИЕ ВТКлассыУсловийТрудаПоДолжностямСрезПоследних КАК КлассыУсловийТрудаПоДолжностям
	|			ПО ДанныеОСотруднике.Должность = КлассыУсловийТрудаПоДолжностям.Должность
	|				И ДанныеОСотруднике.ДатаНачала = КлассыУсловийТрудаПоДолжностям.Период
	|		ПО СписокНачислений.Сотрудник = ДанныеОСотруднике.Сотрудник
	|			И СписокНачислений.ДатаНачала = ДанныеОСотруднике.ДатаНачала
	|			И СписокНачислений.Начисление = ДанныеОСотруднике.Начисление
	|			И СписокНачислений.ПодразделениеОрганизации = ДанныеОСотруднике.Подразделение
	|			И СписокНачислений.УсловияТруда = ДанныеОСотруднике.УсловияТруда
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТВидыДоходаПоНачислениям КАК ВидыДоходаПоНачислениям
	|		ПО СписокНачислений.Начисление = ВидыДоходаПоНачислениям.Начисление
	|			И (ДанныеОСотруднике.ЯвляетсяВоеннослужащим = ВидыДоходаПоНачислениям.ЯвляетсяВоеннослужащим)
	|			И (ДанныеОСотруднике.ЯвляетсяПрокурором = ВидыДоходаПоНачислениям.ЯвляетсяПрокурором)
	|			И (ДанныеОСотруднике.РаботаетВСтуденческомОтряде = ВидыДоходаПоНачислениям.РаботаетВСтуденческомОтряде)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Сотрудники КАК Сотрудники
	|		ПО СписокНачислений.Сотрудник = Сотрудники.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеОСотруднике.ЯвляетсяЧленомЛетногоЭкипажа,
	|	ДанныеОСотруднике.ЯвляетсяШахтером,
	|	ДанныеОСотруднике.ПрименяемыйЛьготныйТерриториальныйТариф,
	|	ДанныеОСотруднике.ЯвляетсяРаботникомСДосрочнойПенсией,
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации,
	|	СписокНачислений.УсловияТруда,
	|	СписокНачислений.ДатаНачала,
	|	Сотрудники.ФизическоеЛицо,
	|	ЕСТЬNULL(ДанныеОСотруднике.ЯвляетсяФармацевтом, ЛОЖЬ),
	|	ЕСТЬNULL(КлассыУсловийТрудаПоДолжностям.КлассУсловийТруда, ЗНАЧЕНИЕ(Перечисление.КлассыУсловийТрудаПоРезультатамСпециальнойОценки.ПустаяСсылка)),
	|	ЕСТЬNULL(ВидыДоходаПоНачислениям.ВидДохода, СписокНачислений.ВидДохода)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТСписокНачислений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТВидыДоходаПоНачислениям
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДляОпределенияДанныхУчета
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТДолжности
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТКлассыУсловийТрудаПоДолжностямСрезПоследних";
	
	Если ВТНачисленияСодержитВидДохода Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗНАЧЕНИЕ(Справочник.ВидыДоходовПоСтраховымВзносам.ПустаяСсылка)", "СписокНачислений.ВидДохода")
	КонецЕсли;
	
	ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, "ДанныеОСотруднике", , Ложь, Истина);
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТСоответствиеВидовДоходовДляСтудентов, которая содержит следующие поля
//		ВидДохода - СправочникСсылка.ВидыДоходовПоСтраховымВзносам,
//		ВидДоходаДляСтудотрядов - СправочникСсылка.ВидыДоходовПоСтраховымВзносам.
//      	 
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц.
//		ИмяТаблицыСоответствия - строка - позволяет создать таблицу с иным именем.
//
Процедура СформироватьВТСоответствиеВидовДоходовДляСтудентов(МенеджерВременныхТаблиц, ИмяТаблицыСоответствия = "ВТСоответствиеВидовДоходовДляСтудентов") Экспорт

	УчетСтраховыхВзносов.СформироватьВТСоответствиеВидовДоходовДляСтудентов(МенеджерВременныхТаблиц, ИмяТаблицыСоответствия)

КонецПроцедуры

// Формирует строку описания реквизитов, содержащих суммы взносов.
//      	 
// Параметры:
//		ИмяТабличнойЧасти - строка - необязательный, по умолчанию подразумевается т.ч. "Взносы".
//		ВключатьДопТарифы - булево - необязательный, если выставлен в Ложь, взносы по доп.тарифам в описание не включаются.
//
// Возвращаемое значение:
//		строка
//
Функция ОписаниеПолейВзносовСтрокой(ИмяТабличнойЧасти = "Взносы", ВключатьДопТарифы = Истина) Экспорт 

	Возврат УчетСтраховыхВзносов.РассчитываемыеВзносы(Ложь, ИмяТабличнойЧасти, ВключатьДопТарифы)
	
КонецФункции

// Помещает в переданный МенеджерВременныхТаблиц таблицу 
//	ВТКлассыУсловийТруда, которая содержит следующие поля:
//		Период - дата
//		КлассУсловийТруда - ПеречислениеСсылка.КлассыУсловийТрудаПоРезультатамСпециальнойОценки
//		ВидыРаботСДосрочнойПенсией - ПеречислениеСсылка.ВидыРаботСДосрочнойПенсией
//
// Параметры:
//		МенеджерВременныхТаблиц - МенеджерВременныхТаблиц
//
Процедура СоздатьВТКлассыУсловийТруда(МенеджерВременныхТаблиц, Организация) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ИспользоватьШтатноеРасписание") Тогда
		УчетСтраховыхВзносовБазовый.СоздатьВТКлассыУсловийТруда(МенеджерВременныхТаблиц);
		Возврат
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	КлассыПоДолжностям.Период,
	|	КлассыПоДолжностям.КлассУсловийТруда,
	|	ШтатноеРасписание.ВзимаютсяВзносыЗаЗанятыхНаРаботахСДосрочнойПенсией КАК ВидыРаботСДосрочнойПенсией,
	|	ШтатноеРасписание.Владелец КАК Организация
	|ПОМЕСТИТЬ ВТКлассыУсловийТруда
	|ИЗ
	|	РегистрСведений.КлассыУсловийТрудаПоДолжностям КАК КлассыПоДолжностям
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Справочник.ШтатноеРасписание КАК ШтатноеРасписание
	|		ПО КлассыПоДолжностям.Должность = ШтатноеРасписание.Ссылка";
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
		МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
		МодульОхранаТруда.ДополнитьЗапросВТКлассыУсловийТруда(Запрос, Организация);
	КонецЕсли;
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Получает из параметра Ссылка ссылку на организацию и помещает в массив
//
//	Параметры:
//		ОтборПоОрганизациям - тип Неопределено, в этот параметр помещается массив организаций
//								полученный их параметра Ссылка
//		Ссылка - ссылка на объект из которого можно получить организацию
//
Процедура ЗаполнитьОтборПоОрганизацииПриУстановкеИспользованияСтраховыхВзносовПоКлассамУсловийТруда(ОтборПоОрганизациям, Ссылка) Экспорт
	
	Если ТипЗнч(Ссылка) = Тип("СправочникСсылка.ШтатноеРасписание") Тогда
		ОтборПоОрганизациям = Новый Массив;
		ОтборПоОрганизациям.Добавить(ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Ссылка, "Владелец"));
	КонецЕсли;
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
		МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
		МодульОхранаТруда.ЗаполнитьОтборПоОрганизацииПриУстановкеИспользованияСтраховыхВзносовПоКлассамУсловийТруда(ОтборПоОрганизациям, Ссылка);
	КонецЕсли;
	
КонецПроцедуры

// Возвращает список доступных тарифов страховых взносов в зависимости
// от настроек учета по организации.
//
// Параметры: 
// 	ВидОрганизации - ПеречислениеСсылка.ЮридическоеФизическоеЛицо - 
//	ПрименяетсяУСН - булево - определяет, применяется ли для организации УСН.
//	ПоказыватьТарифыПрименяемыеПоОтдельнымДоходам - булево
//
// Возвращаемое значение:
//	Массив значений типа СправочникСсылка.ВидыТарифовСтраховыхВзносов.
//
Функция ДоступныеТарифыСтраховыхВзносов(ВидОрганизации, ПрименяетсяУСН, ПоказыватьТарифыПрименяемыеПоОтдельнымДоходам) Экспорт
	ДоступныеТарифы = УчетСтраховыхВзносовБазовый.ДоступныеТарифыСтраховыхВзносов(ВидОрганизации, ПрименяетсяУСН, ПоказыватьТарифыПрименяемыеПоОтдельнымДоходам);
	
	ОграничиватьПереченьТарифов = Ложь;
	ЕстьУчетБюджетныхУчреждений = ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетБюджетныхУчреждений");
	ЕстьУчетХозрасчетныхОрганизаций = ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыПриложения.УчетХозрасчетныхОрганизаций");
	Если ЕстьУчетБюджетныхУчреждений И ЕстьУчетХозрасчетныхОрганизаций Тогда
		ОграничиватьПереченьТарифов = ПолучитьФункциональнуюОпцию("РаботаВБюджетномУчреждении")
	ИначеЕсли ЕстьУчетБюджетныхУчреждений Тогда
		ОграничиватьПереченьТарифов = Истина;
	КонецЕсли;
	
	Если ОграничиватьПереченьТарифов Тогда
		Тарифы = Новый Массив;
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.СельХозПроизводители);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.ОбщийНалоговыйРежим);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.УпрощенныйНалоговыйРежим);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.УпрощенныйНалоговыйРежимПроизводство);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.ITОрганизации);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.СМИ);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.НекоммерческиеОрганизации);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.БлаготворительныеОрганизации);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.ХозОбществаБюджетныхВУЗов);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.ОрганизацииРазработчикиЭлектроннойПродукции);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.УчастникОсобойЗоныВКрыму);
		Тарифы.Добавить(Справочники.ВидыТарифовСтраховыхВзносов.ДляОтраслейПострадавшихОтКоронавируснойИнфекции);
		Запрос = Новый Запрос;
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	ВидыТарифовСтраховыхВзносов.Ссылка
		|ИЗ
		|	Справочник.ВидыТарифовСтраховыхВзносов КАК ВидыТарифовСтраховыхВзносов
		|ГДЕ
		|	НЕ ВидыТарифовСтраховыхВзносов.Ссылка В (&Ссылки)";
		Запрос.УстановитьПараметр("Ссылки", Тарифы);
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			ИндексТарифа = ДоступныеТарифы.Найти(Выборка.Ссылка);
			Если ИндексТарифа <> Неопределено Тогда
				ДоступныеТарифы.Удалить(ИндексТарифа);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ДоступныеТарифы;	
	
КонецФункции

Процедура СформироватьДоходыСтороннегоЛицаПоЕдиновременномуПособию(Движения, Отказ, Организация, ПериодРегистрации, МенеджерВременныхТаблиц, Записывать = Ложь, ИсключаемыйРегистратор = Неопределено) Экспорт

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СписокНачислений.Сотрудник,
	|	СписокНачислений.ДатаНачала,
	|	СписокНачислений.Начисление,
	|	СписокНачислений.ПодразделениеОрганизации КАК Подразделение,
	|	СписокНачислений.УсловияТруда,
	|	ЗНАЧЕНИЕ(Справочник.Должности.ПустаяСсылка) КАК Должность,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыРаботСДосрочнойПенсией.ПустаяСсылка) КАК ЯвляетсяРаботникомСДосрочнойПенсией,
	|	ЛОЖЬ КАК ЯвляетсяФармацевтом,
	|	ЗНАЧЕНИЕ(Справочник.ВидыТарифовСтраховыхВзносов.ПустаяСсылка) КАК ЛьготныйТерриториальныйТариф,
	|	ЛОЖЬ КАК ЯвляетсяПрокурором,
	|	ЛОЖЬ КАК ЯвляетсяВоеннослужащим,
	|	ЛОЖЬ КАК РаботаетВСтуденческомОтряде,
	|	ЛОЖЬ КАК ЯвляетсяЧленомЛетногоЭкипажа,
	|	ЛОЖЬ КАК ЯвляетсяШахтером,
	|	1 КАК КоэффициентУчетаСтроки
	|ПОМЕСТИТЬ ВТКадровыхДанных
	|ИЗ
	|	ВТНачисления КАК СписокНачислений";
	
	КадровыйУчет.ДополнитьПоляЗапросаВТКадровыхДанных(Организация, Запрос);
	Запрос.Выполнить();
	
	СформироватьВТСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц);
	СформироватьВТНачисленияСДаннымиУчета(Организация, ПериодРегистрации, МенеджерВременныхТаблиц, ИсключаемыйРегистратор);
	УчетСтраховыхВзносов.СформироватьДоходыСтраховыеВзносы(Движения, Отказ, Организация, ПериодРегистрации, УчетСтраховыхВзносов.СведенияОДоходахСУчетомЕНВД(МенеджерВременныхТаблиц), Записывать);

КонецПроцедуры

// Формирует массив физических лиц, получивших доход в указанном периоде, исключая заданных.
//
Функция ФизическиеЛицаИмеющиеДополнительныйДоход(Организация, Подразделение, ИсключаяФизическихЛиц, Начало, Окончание) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаНачала", Начало);
	Запрос.УстановитьПараметр("ДатаОкончания", Окончание);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Подразделение", Подразделение);
	Запрос.УстановитьПараметр("ФизическиеЛица", ИсключаяФизическихЛиц);
	
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
		|	СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходахСтраховыеВзносы
		|ГДЕ
		|	СведенияОДоходахСтраховыеВзносы.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
		|	И СведенияОДоходахСтраховыеВзносы.ФизическоеЛицо НЕ В (&ФизическиеЛица)
		|	И СведенияОДоходахСтраховыеВзносы.Организация = &Организация
		|	И СведенияОДоходахСтраховыеВзносы.Подразделение В ИЕРАРХИИ (&Подразделение)";
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "СведенияОДоходахСтраховыеВзносы.Подразделение В ИЕРАРХИИ (&Подразделение)", "ИСТИНА");
	КонецЕсли;
	
	Возврат Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("ФизическоеЛицо");
	
КонецФункции

// Формирует сторно записи отменяющие движения исправленного документа по регистрам подсистемы.
//
// Параметры:
//  Движения			 - КоллекцияДвижений, Структура	 - Коллекция движений в которую будут добавлены сторно записи.
//  ИсправленныйДокумент - ДокументСсылка				 - Документ, записи которого необходимо сторнировать.
//  ПараметрыИсправления - Структура					 - Свойства см. в описании функции СторнироватьПоУчетам модулей менеджеров документов.
//  Записывать			 - Булево						 - Если Истина, то наборы будут записаны сразу, если Ложь, то наборам будет установлен признак Записывать = Истина.
//
Процедура СторнироватьДвиженияДокумента(Движения, ИсправленныйДокумент, ПараметрыИсправления = Неопределено, Записывать = Ложь) Экспорт
	
	ИмяУчета = "УчетСтраховыхВзносовРасширенный";
	МетаданныеРегистров = МетаданныеРегистровПодсистемы();
	
	ДвиженияВСтруктуре = ТипЗнч(Движения) = Тип("Структура");
	Набор = Неопределено;
	
	ИсправлениеВТекущемПериоде = ПараметрыИсправления <> Неопределено И ПараметрыИсправления.Свойство("ИсправлениеВТекущемПериоде") И ПараметрыИсправления.ИсправлениеВТекущемПериоде;
	ОтменаДокумента = ПараметрыИсправления <> Неопределено И ПараметрыИсправления.Свойство("ОтменаДокумента") И ПараметрыИсправления.ОтменаДокумента;
	
	Если ОтменаДокумента И Не ИсправлениеВТекущемПериоде Тогда
		ИсключаемыеРегистры = Новый Массив;
		ИсключаемыеРегистры.Добавить(Метаданные.РегистрыНакопления.ИсчисленныеСтраховыеВзносы);
		ИсключаемыеРегистры.Добавить(Метаданные.РегистрыНакопления.РасчетыСФондамиПоСтраховымВзносам);
		ИсключаемыеРегистры.Добавить(Метаданные.РегистрыНакопления.СтраховыеВзносыПоФизическимЛицам);
		
		Для Каждого МетаданныеРегистра Из ИсключаемыеРегистры Цикл
			Если ДвиженияВСтруктуре Тогда
				Движения.Свойство(МетаданныеРегистра.Имя, Набор);
			Иначе
				Набор = Движения.Найти(МетаданныеРегистра.Имя);
			КонецЕсли;
			
			Если Набор <> Неопределено Тогда
				// Наборы для исключаемых регистров изолируются, но не сторнируются.
				ИсправлениеДокументовЗарплатаКадры.ИзолироватьУчетом(Набор, ИмяУчета);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	Для Каждого МетаданныеРегистра Из МетаданныеРегистров Цикл
		
		Если ДвиженияВСтруктуре Тогда 
			Движения.Свойство(МетаданныеРегистра.Имя, Набор);
		Иначе 
			Набор = Движения.Найти(МетаданныеРегистра.Имя);
		КонецЕсли;
		
		Если Набор = Неопределено Или Не ИсправлениеДокументовЗарплатаКадры.ИзолироватьУчетом(Набор, ИмяУчета) Тогда
			Продолжить;
		КонецЕсли;
		
		Если ОбщегоНазначения.ЭтоРегистрНакопления(МетаданныеРегистра) Тогда
			ИсправлениеДокументовЗарплатаКадры.СторнироватьДвиженияВРегистреНакопления(Набор, ИсправленныйДокумент, МетаданныеРегистра, Записывать);
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#Область ЗащитаПерсональныхДанных

// См. ЗащитаПерсональныхДанныхПереопределяемый.ПриРасчетеСроковХраненияПерсональныхДанных.
Процедура ПриРасчетеСроковХраненияПерсональныхДанных(ДанныеСубъектов, СрокиХранения) Экспорт
	
	ФизическиеЛица = ЗащитаПерсональныхДанныхЗарплатаКадры.ФизическиеЛицаИзДанныхСубъектов(ДанныеСубъектов,
		СрокиХранения);
	Если ФизическиеЛица.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДатыПолученияДоходов = МаксимальныеДатыПолученияДоходовОблагаемыхСтраховымиВзносами(ФизическиеЛица);
	
	Для Каждого СтрокаТаблицы Из ДатыПолученияДоходов Цикл
		
		ДобавитьСтроку = Истина;
		
		СрокХранения = ЗащитаПерсональныхДанныхЗарплатаКадры.СрокХраненияПоДатеСобытия(
			СтрокаТаблицы.Дата);
		
		НайденныеСтроки = СрокиХранения.НайтиСтроки(Новый Структура("Субъект", СтрокаТаблицы.ФизическоеЛицо));
		Для Каждого НайденнаяСтрока Из НайденныеСтроки Цикл
			Если НайденнаяСтрока.СрокХранения >= СрокХранения Тогда
				ДобавитьСтроку = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;
		
		Если ДобавитьСтроку Тогда
			НоваяСтрока = СрокиХранения.Добавить();
			НоваяСтрока.Субъект = СтрокаТаблицы.ФизическоеЛицо;
			НоваяСтрока.Организация = СтрокаТаблицы.Организация;
			НоваяСтрока.СрокХранения = СрокХранения;
			НоваяСтрока.Комментарий = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = '%1 получен доход, облагаемый страховыми взносами';
					|en = 'On %1 income subject to insurance contributions is earned'"), Формат(СтрокаТаблицы.Дата, "ДЛФ=Д"));
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

////////////////////////////////////////////////////////////////////////////////

// Добавляет в список Обработчики процедуры-обработчики обновления,
// необходимые данной подсистеме.
//
// Параметры:
//   Обработчики - ТаблицаЗначений - см. описание функции НоваяТаблицаОбработчиковОбновления
//                                   общего модуля ОбновлениеИнформационнойБазы.
// 
Процедура ЗарегистрироватьОбработчикиОбновления(Обработчики) Экспорт
	
	Обработчик = Обработчики.Добавить();
	Обработчик.Версия = "3.1.9.45";
	Обработчик.Процедура = "УчетСтраховыхВзносовРасширенный.ЗаполнитьСкидкуПоВзносамВДокументах";
	Обработчик.РежимВыполнения = ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ОсновнойРежимВыполненияОбновления();
	Обработчик.Идентификатор = Новый УникальныйИдентификатор("89146ebc-37cb-4f7b-91d7-bcab16553c60");
	Обработчик.Комментарий = НСтр("ru = 'Заполнение в документах реквизита Скидка по взносам.';
									|en = 'Filling of the attribute Fee discount in documents.'");
	
КонецПроцедуры	

#Область ОбменДанными

Процедура ПриЗаполненииТаблицыЗависимыхДанныхДляОбмена(ЗависимыеДанные) Экспорт
	
	// Метаданные.РегистрыСведений.ИсторияСамостоятельныхКлассификационныхЕдиниц
	НоваяСтрока = ЗависимыеДанные.Добавить();
	НоваяСтрока.ВедущиеМетаданные = Метаданные.РегистрыСведений.ИсторияСамостоятельныхКлассификационныхЕдиниц;
	НоваяСтрока.ЗависимыеМетаданные = Метаданные.РегистрыСведений.ИсторияСамостоятельныхКлассификационныхЕдиницВторичный;

КонецПроцедуры
	
Процедура ЗаполнитьЗависимыеДанныеПослеСозданияНовогоУзла() Экспорт
	
	РегистрыСведений.ИсторияСамостоятельныхКлассификационныхЕдиницВторичный.ЗаполнитьВторичныеДанные();
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УточнитьСторнируемыеДокументы(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений)
    
	СтрокиКУдалению = Новый Массив;
	Для каждого СтрокаТЗ Из ТаблицаСторнируемыхДокументов Цикл
	    Если Не ЗначениеЗаполнено(СтрокаТЗ.СторнируемыйДокумент) Тогда
			СтрокиКУдалению.Добавить(СтрокаТЗ)
		КонецЕсли;
	КонецЦикла;
	Для каждого СтрокаТЗ Из СтрокиКУдалению Цикл
		ТаблицаСторнируемыхДокументов.Удалить(СтрокаТЗ)
	КонецЦикла;
	
	ОбработанныеДокументы = Новый Соответствие;	
	Для каждого СтрокаТЗ Из ТаблицаСторнируемыхДокументов Цикл
		УточненныйДокумент = ОбработанныеДокументы[СтрокаТЗ.СторнируемыйДокумент];
		Если ЗначениеЗаполнено(УточненныйДокумент) Тогда
			СтрокаТЗ.СторнируемыйДокумент = УточненныйДокумент
		Иначе
			Если СтрокаТЗ.СторнируемыйДокумент.Метаданные().Реквизиты.Найти("ИсправленныйДокумент") = Неопределено Тогда
				ОбработанныеДокументы.Вставить(СтрокаТЗ.СторнируемыйДокумент, СтрокаТЗ.СторнируемыйДокумент);
				Продолжить;
			КонецЕсли;
			ПредыдущаяСсылка = СтрокаТЗ.СторнируемыйДокумент;
			СледующаяСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПредыдущаяСсылка, "ИсправленныйДокумент");
			НовыеСтроки = Новый Массив;
			Пока ЗначениеЗаполнено(СледующаяСсылка) Цикл
				СтрокаТаблицыПромежуточныхИсправлений = ТаблицаПромежуточныхИсправлений.Добавить();
				СтрокаТаблицыПромежуточныхИсправлений.ПромежуточноеИсправление = ПредыдущаяСсылка;
				НовыеСтроки.Добавить(СтрокаТаблицыПромежуточныхИсправлений);
				ПредыдущаяСсылка = СледующаяСсылка;
				Если ПредыдущаяСсылка.Метаданные().Реквизиты.Найти("ИсправленныйДокумент") = Неопределено Тогда
					Прервать;
				КонецЕсли;
				СледующаяСсылка = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПредыдущаяСсылка, "ИсправленныйДокумент")
			КонецЦикла;
			ОбработанныеДокументы.Вставить(СтрокаТЗ.СторнируемыйДокумент, ПредыдущаяСсылка);
			СтрокаТЗ.СторнируемыйДокумент = ПредыдущаяСсылка;
			Для каждого СтрокаТаблицыПромежуточныхИсправлений Из НовыеСтроки Цикл
				СтрокаТаблицыПромежуточныхИсправлений.СторнируемыйДокумент = ПредыдущаяСсылка;
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;

КонецПроцедуры

Процедура УточнитьСторнируемыеПоНачислениям(ТаблицаСторнируемыхДокументов, ТаблицаПромежуточныхИсправлений, МенеджерВременныхТаблиц, ИмяВТ)

	Текст =
	"ВЫБРАТЬ
	|	ТаблицаСторнируемыхДокументов.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТДляУточнения
	|ИЗ
	|	&ДляУточнения КАК ТаблицаСторнируемыхДокументов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Исходная.НомерСтроки КАК НомерСтроки,
	|	Исходная.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	НЕОПРЕДЕЛЕНО КАК ИсходныйДокумент,
	|	Исходная.Начисление КАК ВидРасчета,
	|	Исходная.Сотрудник КАК Сотрудник,
	|	Исходная.ДатаНачала КАК ПериодДействия,
	|	НЕОПРЕДЕЛЕНО КАК Регистратор,
	|	ЛОЖЬ КАК Зацикливание
	|ПОМЕСТИТЬ ВТСтрокиДокумента
	|ИЗ
	|	ИмяВТ КАК Исходная
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТДляУточнения КАК ДляУточнения
	|		ПО (ДляУточнения.НомерСтроки = Исходная.НомерСтроки)
	|ГДЕ
	|	Исходная.Сумма < 0";

	Текст = СтрЗаменить(Текст, "ИмяВТ", ИмяВТ);

	Запрос = Новый Запрос(Текст);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ДляУточнения", ТаблицаСторнируемыхДокументов);
	Запрос.Выполнить();

	Шаблон = 
	"ВЫБРАТЬ
	|	СтрокиДокумента.НомерСтроки КАК НомерСтроки,
	|	СторнируемыеНачисления.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	ЕСТЬNULL(СтрокиДокумента.СторнируемыйДокумент, СтрокиДокумента.ИсходныйДокумент) КАК ИсходныйДокумент,
	|	СторнируемыеНачисления.ВидРасчета КАК ВидРасчета,
	|	СторнируемыеНачисления.Сотрудник КАК Сотрудник,
	|	СторнируемыеНачисления.ПериодДействия КАК ПериодДействия,
	|	СторнируемыеНачисления.Регистратор КАК Регистратор,
	|	СторнируемыеНачисления.СторнируемыйДокумент = СтрокиДокумента.Регистратор КАК Зацикливание
	|ПОМЕСТИТЬ ВТ2
	|ИЗ
	|	ВТ1 КАК СтрокиДокумента
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК СторнируемыеНачисления
	|		ПО (СторнируемыеНачисления.Регистратор = СтрокиДокумента.СторнируемыйДокумент)
	|			И (СторнируемыеНачисления.ВидРасчета = СтрокиДокумента.ВидРасчета)
	|			И (СторнируемыеНачисления.Сотрудник = СтрокиДокумента.Сотрудник)
	|			И (СторнируемыеНачисления.ПериодДействия = СтрокиДокумента.ПериодДействия)
	|			И (СторнируемыеНачисления.Результат <> 0)
	|			И (СторнируемыеНачисления.Сторно
	|				ИЛИ СторнируемыеНачисления.ФиксСторно)
	|			И (НЕ СторнируемыеНачисления.СторнируемыйДокумент В (&МассивПустыхСсылок))
	|			И (НЕ СтрокиДокумента.Зацикливание)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтрокиСторнируемого.НомерСтроки КАК НомерСтроки,
	|	СтрокиСторнируемого.Регистратор КАК ПромежуточноеИсправление,
	|	СтрокиСторнируемого.СторнируемыйДокумент КАК СторнируемыйДокумент,
	|	СтрокиСторнируемого.Зацикливание КАК Зацикливание
	|ИЗ
	|	ВТ2 КАК СтрокиСторнируемого
	|ГДЕ
	|	НЕ СтрокиСторнируемого.СторнируемыйДокумент ЕСТЬ NULL";

	Запрос.УстановитьПараметр("МассивПустыхСсылок", ЗарплатаКадрыРасширенныйПовтИсп.МассивПустыхСсылокСторнируемогоДокумента());

	Зацикливания = Новый ТаблицаЗначений;
	Зацикливания.Колонки.Добавить("Исходный");
	Зацикливания.Колонки.Добавить("Сторнируемый");

	ИмяВТ1 = "ВТСтрокиДокумента";
	ИмяВТ2 = "ВТПромежуточная";
	ПервыйПроход = Истина;
	НайденыВсеИсходные = Ложь;

	Пока Не НайденыВсеИсходные Цикл

		Текст = СтрЗаменить(Шаблон, "ВТ1", ИмяВТ1);
		Запрос.Текст = СтрЗаменить(Текст, "ВТ2", ИмяВТ2);
		РезультатЗапроса = Запрос.Выполнить();

		Если РезультатЗапроса.Пустой() Тогда
			НайденыВсеИсходные = Истина;
		Иначе
			Выборка = РезультатЗапроса.Выбрать();
			Пока Выборка.Следующий() Цикл
				ЗаполнитьЗначенияСвойств(ТаблицаПромежуточныхИсправлений.Добавить(), Выборка);
				СтрокаПоНомеру = ТаблицаСторнируемыхДокументов.Найти(Выборка.НомерСтроки, "НомерСтроки");
				СтрокаПоНомеру.СторнируемыйДокумент = Выборка.СторнируемыйДокумент;
				Если Выборка.Зацикливание Тогда
					НоваяСтрока = Зацикливания.Добавить();
					НоваяСтрока.Исходный = Выборка.ПромежуточноеИсправление;
					НоваяСтрока.Сторнируемый = Выборка.СторнируемыйДокумент;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;

		ДопИмя = ИмяВТ1;
		ИмяВТ1 = ИмяВТ2;
		ИмяВТ2 = ДопИмя;

		Если ПервыйПроход Тогда
			ПервыйПроход = Ложь;
			Шаблон = "УНИЧТОЖИТЬ ВТ2" + ОбщегоНазначения.РазделительПакетаЗапросов() + Шаблон;
		КонецЕсли;

	КонецЦикла;

	ТаблицыКУдалению = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(ИмяВТ1);
	ТаблицыКУдалению.Добавить(ИмяВТ2);
	ТаблицыКУдалению.Добавить("ВТДляУточнения");
	ЗарплатаКадры.УничтожитьВТ(МенеджерВременныхТаблиц, ТаблицыКУдалению);

	Если Зацикливания.Количество() Тогда
		Зацикливания.Свернуть("Исходный, Сторнируемый");
		Для Каждого Строка Из Зацикливания Цикл
			ИмяСобытия = НСтр("ru = 'Зацикливание';
								|en = 'Loop'", ОбщегоНазначения.КодОсновногоЯзыка());
			ШаблонСообщения = НСтр("ru = 'Обнаружено зацикливание ссылкой на сторнируемый документ: %1
				|Следует пересчитать и перепровести документы в правильном порядке, или вручную отредактировать перерасчеты в документе.';
				|en = 'Loop by the reversed document link is found: %1
				|Recalculate and repost the documents in the correct order or edit the document recalculations manually.'");
			
			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыРасчета.Начисления, Строка.Исходный, СтрШаблон(ШаблонСообщения, Строка(Строка.Сторнируемый)));

			ЗаписьЖурналаРегистрации(ИмяСобытия, УровеньЖурналаРегистрации.Предупреждение,
				Метаданные.РегистрыРасчета.Начисления, Строка.Сторнируемый, СтрШаблон(ШаблонСообщения, Строка(Строка.Исходный)));
		КонецЦикла;

		ВызватьИсключение
			НСтр("ru = 'Обнаружено зацикливание сторнируемых документов. Подробности см. в журнале регистрации (Предупреждение ""Зацикливание"")';
				|en = 'Reversed document loop is found. For more information, see the event log (""Loop"" Warning)'");
	КонецЕсли;

КонецПроцедуры

////////////////////////////////////////////////////////////////////////////////

Процедура ЗаполнитьСкидкуПоВзносамВДокументах(ПараметрыОбновления = Неопределено) Экспорт 
	
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.Текст = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	СведенияОДоходахСтраховыеВзносы.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТРегистраторыСкидокПредварительно
	               |ИЗ
	               |	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СведенияОДоходахСтраховыеВзносы
	               |ГДЕ
	               |	СведенияОДоходахСтраховыеВзносы.Скидка > 0";
	
	Запрос.Выполнить();
	
	СписокДокументов = Новый Структура;
	ТипыДокументов = Метаданные.РегистрыНакопления.СведенияОДоходахСтраховыеВзносы.СтандартныеРеквизиты.Регистратор.Тип.Типы();
	
	Для Каждого ТипДокумента Из ТипыДокументов Цикл 
		МетаданныеДокумента = Метаданные.НайтиПоТипу(ТипДокумента);
		Для Каждого ТабличнаяЧасть Из МетаданныеДокумента.ТабличныеЧасти Цикл 
			Если ТабличнаяЧасть.Реквизиты.Найти("СкидкаПоВзносам") <> Неопределено
				И ТабличнаяЧасть.Реквизиты.Найти("СуммаВычета") <> Неопределено Тогда 
				Если Не СписокДокументов.Свойство(МетаданныеДокумента.Имя) Тогда 
					СписокДокументов.Вставить(МетаданныеДокумента.Имя, Новый Массив);
				КонецЕсли;
				СписокДокументов[МетаданныеДокумента.Имя].Добавить(ТабличнаяЧасть.Имя); 
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ТекстЗапроса = "ВЫБРАТЬ РАЗЛИЧНЫЕ
	               |	РегистраторыСкидок.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТИсключаемыеРегистраторы
	               |ИЗ
	               |	Документ.ПризПодарок КАК ПризПодарок
	               |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыСкидокПредварительно КАК РегистраторыСкидок
	               |		ПО ПризПодарок.Ссылка = РегистраторыСкидок.Регистратор";
	
	Для Каждого КлючИЗначение Из СписокДокументов Цикл 
		
		ИмяДокумента = "Документ." + КлючИЗначение.Ключ;
		ИменаТаблиц = КлючИЗначение.Значение;
		
		Для Каждого ИмяТаблицы Из ИменаТаблиц Цикл 
			
			ТекстЗапроса = ТекстЗапроса + "
			|ОБЪЕДИНИТЬ
			|";
			
			ТекстОбъединения = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			                   |	РегистраторыСкидок.Регистратор КАК Регистратор
			                   |ИЗ
			                   |	&ИмяТаблицы КАК Начисления
			                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыСкидокПредварительно КАК РегистраторыСкидок
			                   |		ПО Начисления.Ссылка = РегистраторыСкидок.Регистратор
			                   |			И (Начисления.СкидкаПоВзносам <> 0)";
			
			ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "&ИмяТаблицы", ИмяДокумента + "." + ИмяТаблицы);
			ТекстЗапроса = ТекстЗапроса + ТекстОбъединения;
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	Запрос.Текст = "ВЫБРАТЬ ПЕРВЫЕ 1000
	               |	РегистраторыСкидок.Регистратор КАК Регистратор
	               |ПОМЕСТИТЬ ВТРегистраторыСкидок
	               |ИЗ
	               |	ВТРегистраторыСкидокПредварительно КАК РегистраторыСкидок
	               |		ЛЕВОЕ СОЕДИНЕНИЕ ВТИсключаемыеРегистраторы КАК ИсключаемыеРегистраторы
	               |		ПО РегистраторыСкидок.Регистратор = ИсключаемыеРегистраторы.Регистратор
	               |ГДЕ
	               |	ИсключаемыеРегистраторы.Регистратор ЕСТЬ NULL
	               |;
	               |
	               |////////////////////////////////////////////////////////////////////////////////
	               |ВЫБРАТЬ ПЕРВЫЕ 1
	               |	ИСТИНА КАК ЗначениеИстина
	               |ИЗ
	               |	ВТРегистраторыСкидок КАК РегистраторыСкидок";
	
	Если ПараметрыОбновления = Неопределено Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ПЕРВЫЕ 1000", "");
	КонецЕсли;
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Если РезультатЗапроса.Пустой() Тогда 
		ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", Истина);
		Возврат;
	КонецЕсли;
	
	ОбработкаЗавершена = Истина;
	
	Для Каждого КлючИЗначение Из СписокДокументов Цикл 
		
		ИмяДокумента = "Документ." + КлючИЗначение.Ключ;
		ИменаТаблиц = КлючИЗначение.Значение;
		
		ТекстЗапроса = "";
		ПерваяТаблица = Истина;
		
		Для Каждого ИмяТаблицы Из ИменаТаблиц Цикл 
			
			Если Не ПерваяТаблица Тогда 
				ТекстЗапроса = ТекстЗапроса + "
				|ОБЪЕДИНИТЬ
				|";
			КонецЕсли;
			
			ТекстОбъединения = "ВЫБРАТЬ РАЗЛИЧНЫЕ
			                   |	Начисления.Ссылка КАК Ссылка
			                   |ИЗ
			                   |	&ИмяТаблицы КАК Начисления
			                   |		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТРегистраторыСкидок КАК РегистраторыСкидок
			                   |		ПО Начисления.Ссылка = РегистраторыСкидок.Регистратор
			                   |			И (Начисления.СкидкаПоВзносам = 0)
			                   |			И (Начисления.СуммаВычета <> 0)";
			
			ТекстОбъединения = СтрЗаменить(ТекстОбъединения, "&ИмяТаблицы", ИмяДокумента + "." + ИмяТаблицы);
			
			ТекстЗапроса = ТекстЗапроса + ТекстОбъединения;
			ПерваяТаблица = Ложь;
			
		КонецЦикла;
		
		Запрос.Текст = ТекстЗапроса;
		
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл 
			
			ОбработкаЗавершена = Ложь;
			
			Если Не ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ПодготовитьОбновлениеДанных(ПараметрыОбновления, ИмяДокумента, "Ссылка", Выборка.Ссылка) Тогда
				Продолжить;
			КонецЕсли;
			
			ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
			Для Каждого ИмяТаблицы Из ИменаТаблиц Цикл 
				Для Каждого СтрокаТаблицы Из ДокументОбъект[ИмяТаблицы] Цикл 
					СтрокаТаблицы.СкидкаПоВзносам = СтрокаТаблицы.СуммаВычета;
				КонецЦикла;
			КонецЦикла;
			
			ОбновлениеИнформационнойБазы.ЗаписатьДанные(ДокументОбъект);
			ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.ЗавершитьОбновлениеДанных(ПараметрыОбновления);
			
		КонецЦикла;
		
	КонецЦикла;
	
	ОбновлениеИнформационнойБазыЗарплатаКадрыБазовый.УстановитьПараметрОбновления(ПараметрыОбновления, "ОбработкаЗавершена", ОбработкаЗавершена);
	
КонецПроцедуры

Функция МетаданныеРегистровПодсистемы()
	Регистры = Новый Массив;
	Регистры.Добавить(Метаданные.РегистрыНакопления.ИсчисленныеСтраховыеВзносы); // Искл.
	Регистры.Добавить(Метаданные.РегистрыНакопления.РасчетыСФондамиПоСтраховымВзносам); // Искл.
	Регистры.Добавить(Метаданные.РегистрыНакопления.СведенияОДоходахСтраховыеВзносы);
	Регистры.Добавить(Метаданные.РегистрыНакопления.СтраховыеВзносыПоФизическимЛицам); // Искл.
	
	Возврат Регистры;
КонецФункции

// Возвращает данные о датах последнего получения физическими лицами доходов облагаемых страховыми взносами.
//
// Параметры:
//	ФизическиеЛица - Массив из СправочникСсылка.ФизическиеЛица, СправочникСсылка.ФизическиеЛица -
//	  ссылка или массив ссылок проверяемых физических лиц.
//
// Возвращаемое значение: см. ЗащитаПерсональныхДанныхЗарплатаКадры.НоваяТаблицаДатПолученияДоходов
Функция МаксимальныеДатыПолученияДоходовОблагаемыхСтраховымиВзносами(ФизическиеЛица)
	
	ДанныеОДоходах = ЗащитаПерсональныхДанныхЗарплатаКадры.НоваяТаблицаДатПолученияДоходов();
	
	Если Не ЗначениеЗаполнено(ФизическиеЛица) Тогда
		Возврат ДанныеОДоходах;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СтраховыеВзносыИсчисленные.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СтраховыеВзносыИсчисленные.Организация КАК Организация,
		|	СтраховыеВзносыИсчисленные.Период КАК Дата
		|ИЗ
		|	РегистрНакопления.ИсчисленныеСтраховыеВзносы КАК СтраховыеВзносыИсчисленные
		|ГДЕ
		|	СтраховыеВзносыИсчисленные.ФизическоеЛицо В (&ФизическиеЛица)
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо,
		|	СтраховыеВзносыСведенияОДоходах.Организация,
		|	СтраховыеВзносыСведенияОДоходах.Период
		|ИЗ
		|	РегистрНакопления.СведенияОДоходахСтраховыеВзносы КАК СтраховыеВзносыСведенияОДоходах
		|ГДЕ
		|	СтраховыеВзносыСведенияОДоходах.ФизическоеЛицо В (&ФизическиеЛица)
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо,
		|	Дата УБЫВ";
	
	Запрос.УстановитьПараметр("ФизическиеЛица", ФизическиеЛица);
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = Запрос.Выполнить();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат ДанныеОДоходах;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		НоваяСтрока = ДанныеОДоходах.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
	КонецЦикла;

	Возврат ДанныеОДоходах;
	
КонецФункции

Процедура ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, ИмяТаблицы, ДобавитьПредставление = Ложь, ВключатьИспользованиеРесурса = Истина, ЗамещатьДолжность = Ложь) Экспорт
	
	Если ОбщегоНазначения.ПодсистемаСуществует("ЗарплатаКадрыКорпоративнаяПодсистемы.ОхранаТруда") Тогда
	    МодульОхранаТруда = ОбщегоНазначения.ОбщийМодуль("ОхранаТруда");
	    МодульОхранаТруда.ДополнитьПоляЗапросаРабочимМестом(Организация, Запрос, ИмяТаблицы, ДобавитьПредставление, ВключатьИспользованиеРесурса, ЗамещатьДолжность);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти
