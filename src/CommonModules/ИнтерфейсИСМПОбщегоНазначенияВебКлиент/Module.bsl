
#Область ПрограммныйИнтерфейс

#Область РазрешительныйРежим

// Инициализация конфигурации Локального модуля Честный знак. Выполняется для первичной установки и настройки
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  ИдентификаторФискальногоНакопителя - Строка - идентификатор фискального накопителя
// 
// Возвращаемое значение:
//  Структура - результат иницициализации:
// * ТребуетсяОбновлениеКлючаСессииРозница - Булево - признак необходимости обновления ключа сессии
// * ОтказАвторизации - Булево - Истина, если переданы некорректные данные администратора ЛМ ЧЗ
// * РезультатОтправкиЗапроса - Неопределено,
// 		см. ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON
// * ТекстОшибки - Строка - текст ошибки, полученной от ЛМ ЧЗ
Асинх Функция ИнициализацияКонфигурацииЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, ИдентификаторФискальногоНакопителя = "") Экспорт
	
	КлючСессии = ИнтерфейсАвторизацииИСМПВызовСервера.ПроверитьОбновитьКлючСессии(ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыЗапросаКлючаСессииИСМПРозница(Организация));
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессииРозница", КлючСессии = Неопределено);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",                      Ложь);
	ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса",              Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                           "");
	
	Если ВозвращаемоеЗначение.ТребуетсяОбновлениеКлючаСессииРозница Тогда
		Возврат ВозвращаемоеЗначение;
	КонецЕсли;
	
	ДанныеАвторизацииBase64 = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ШтрихкодВBase64(СтрШаблон("%1:%2", ПараметрыУстановки.Логин, ПараметрыУстановки.Пароль));
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Accept",         "application/json");
	ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокHTTP.Вставить("Authorization",  СтрШаблон("Basic %1", ДанныеАвторизацииBase64));
	
	Если ЗначениеЗаполнено(ИдентификаторФискальногоНакопителя) Тогда
		ЗаголовокHTTP.Вставить("X-ClientId",     ИдентификаторФискальногоНакопителя);
	КонецЕсли;
	
	URLЗапроса = "api/v1/init";
	
	ПараметрыЗапросов = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыОтправкиHTTPЗапросовКЛокальномуМодулюЧЗ(ПараметрыУстановки);
	
	ПараметрыЗапроса = Новый Структура("token", КлючСессии);
	ТелоЗапросаJSON  = ОбщегоНазначенияИСКлиентСервер.ОбъектВТекстJSON(ПараметрыЗапроса, Истина);
	
	РезультатЗапроса = Ждать ОбщегоНазначенияИСМПВебКлиент.ОтправитьДанныеВСервис(
		URLЗапроса,
		ТелоЗапросаJSON,
		,
		"POST",
		ПараметрыЗапросов,
		ЗаголовокHTTP);
	
	РезультатОтправкиЗапроса = ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса, Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ОбработатьОтветИнициализацияКонфигурацииЛокальногоМодуляЧЗ(РезультатОтправкиЗапроса, ВозвращаемоеЗначение, URLЗапроса);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Запрос статуса системы Локального модуля Честный знак. Выполняется для проверки актуального состояния
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
// 
// Возвращаемое значение:
//  Структура - результат иницициализации:
// * ОтказАвторизации - Булево - Истина, если переданы некорректные данные администратора ЛМ ЧЗ
// * РезультатОтправкиЗапроса - (См. ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON). 
// * ТекстОшибки - Строка - текст ошибки, полученной от ЛМ ЧЗ
// * ВерсияСборки - Строка - номер версии сборки ЛМ ЧЗ
// * Статус - Строка - статус текущего состояния системы - готова к работе, в процессе инициализации, ошибка синхронизации
// * ДатаПоследнейСинхронизации - Дата - дата последней синхронизации системы
// * ТребуетсяЗагрузка - Булево - Истина, если требуется обновление токена
Асинх Функция ЗапроситьСтатусЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",           Ложь);
	ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса",   Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                "");
	ВозвращаемоеЗначение.Вставить("ВерсияСборки",               "");
	ВозвращаемоеЗначение.Вставить("Статус",                     "");
	ВозвращаемоеЗначение.Вставить("ДатаПоследнейСинхронизации", Дата(1, 1, 1));
	ВозвращаемоеЗначение.Вставить("ТребуетсяЗагрузка",          Ложь);
	
	ДанныеАвторизацииBase64 = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ШтрихкодВBase64(СтрШаблон("%1:%2", ПараметрыУстановки.Логин, ПараметрыУстановки.Пароль));
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Accept",         "application/json");
	ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокHTTP.Вставить("Authorization",  СтрШаблон("Basic %1", ДанныеАвторизацииBase64));
	
	URLЗапроса = "api/v1/status";
	
	ПараметрыЗапросов = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыОтправкиHTTPЗапросовКЛокальномуМодулюЧЗ(ПараметрыУстановки);
	
	РезультатЗапроса = Ждать ОбщегоНазначенияИСМПВебКлиент.ОтправитьДанныеВСервис(
		URLЗапроса,
		,,
		"GET",
		ПараметрыЗапросов,
		ЗаголовокHTTP);
	
	РезультатОтправкиЗапроса = ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса, Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ОбработатьОтветЗапроситьСтатусЛокальногоМодуляЧЗ(РезультатОтправкиЗапроса, ВозвращаемоеЗначение, URLЗапроса);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Изменение пароля администратора системы Локального модуля Честный знак. Выполняется по желанию
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  НовыйПароль - Строка - согласно API ЛМ ЧЗ должна отвечать следующим требованиям:
//		Пароль не может содержать пустую строку
//		Длина пароля должна быть не менее 8 символов. 
//		Пароль должен содержать буквы и цифры
// 
// Возвращаемое значение:
//  Структура - результат иницициализации:
// * ОтказАвторизации - Булево - Истина, если переданы некорректные данные администратора ЛМ ЧЗ
// * РезультатОтправкиЗапроса - (См. ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON). 
// * ТекстОшибки - Строка - текст ошибки, полученной от ЛМ ЧЗ
// * ОшибкаПроверкиНовогоПароля - Булево - если передан пароль, не соответствующий заявленным параметрам
Асинх Функция ИзменитьПарольАдминистратораЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, НовыйПароль) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",           Ложь);
	ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса",   Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                "");
	ВозвращаемоеЗначение.Вставить("ОшибкаПроверкиНовогоПароля", Ложь);
	
	ДанныеАвторизацииBase64 = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ШтрихкодВBase64(СтрШаблон("%1:%2", ПараметрыУстановки.Логин, ПараметрыУстановки.Пароль));
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Accept",         "application/json");
	ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокHTTP.Вставить("Authorization",  СтрШаблон("Basic %1", ДанныеАвторизацииBase64));
	
	URLЗапроса = "api/v1/changePassword";
	
	ПараметрыЗапросов = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыОтправкиHTTPЗапросовКЛокальномуМодулюЧЗ(ПараметрыУстановки);
	
	ПараметрыЗапроса = Новый Структура("newPassword", НовыйПароль);
	ТелоЗапросаJSON  = ОбменДаннымиИСМПКлиентСервер.ОбъектВТекстJSON(ПараметрыЗапроса, Истина);
	
	РезультатЗапроса = Ждать ОбщегоНазначенияИСМПВебКлиент.ОтправитьДанныеВСервис(
		URLЗапроса,
		ТелоЗапросаJSON,
		,
		"PUT",
		ПараметрыЗапросов,
		ЗаголовокHTTP);
	
	РезультатОтправкиЗапроса = ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса, Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ОбработатьОтветИзменитьПарольАдминистратораЛокальногоМодуляЧЗ(РезультатОтправкиЗапроса, ВозвращаемоеЗначение, URLЗапроса);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Настройка товарных групп Локального модуля Честный знак. Выполняется для ограничения объемов выгрузки блэк-листов
// до используемых товарных групп
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  ПараметрыНастройкиТоварныхГрупп - Соответствие из КлючИЗначение:
//  	Ключ - ПеречислениеСсылка.ВидыПродукцииИС - товарная группа для настройки
//  	Значение - Число - количество дней для выгрузки карточек КИ
//  ИдентификаторФискальногоНакопителя - Строка - идентификатор фискального накопителя
// 
// Возвращаемое значение:
//  Структура - результат иницициализации:
// * ТребуетсяОбновлениеКлючаСессииРозница - Булево - признак необходимости обновления ключа сессии
// * ОтказАвторизации - Булево - Истина, если переданы некорректные данные администратора ЛМ ЧЗ
// * РезультатОтправкиЗапроса - Неопределено,
// 		см. ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON
// * ТекстОшибки - Строка - текст ошибки, полученной от ЛМ ЧЗ
Асинх Функция НастройкаТоварныхГруппЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, ПараметрыНастройкиТоварныхГрупп, ИдентификаторФискальногоНакопителя = "") Экспорт
	
	КлючСессии = ИнтерфейсАвторизацииИСМПВызовСервера.ПроверитьОбновитьКлючСессии(ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыЗапросаКлючаСессииИСМПРозница(Организация));
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессииРозница", КлючСессии = Неопределено);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",                      Ложь);
	ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса",              Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                           "");
	
	Если ВозвращаемоеЗначение.ТребуетсяОбновлениеКлючаСессииРозница Тогда
		Возврат ВозвращаемоеЗначение;
	КонецЕсли;
	
	ДанныеАвторизацииBase64 = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ШтрихкодВBase64(СтрШаблон("%1:%2", ПараметрыУстановки.Логин, ПараметрыУстановки.Пароль));
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Accept",         "application/json");
	ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокHTTP.Вставить("Authorization",  СтрШаблон("Basic %1", ДанныеАвторизацииBase64));
	
	Если ЗначениеЗаполнено(ИдентификаторФискальногоНакопителя) Тогда
		ЗаголовокHTTP.Вставить("X-ClientId",     ИдентификаторФискальногоНакопителя);
	КонецЕсли;
	
	URLЗапроса = "api/v1/groups";
	
	ПараметрыЗапросов = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыОтправкиHTTPЗапросовКЛокальномуМодулюЧЗ(ПараметрыУстановки);
	
	ПараметрыЗапроса = Новый Структура();
	
	ПараметрыЗапроса.Вставить("token", КлючСессии);
	
	Если ПараметрыНастройкиТоварныхГрупп.Количество() Тогда
		ПараметрыЗапроса.Вставить("productsGroupSettings", ПараметрыНастройкиТоварныхГрупп);
	КонецЕсли;
	
	ТелоЗапросаJSON  = ОбменДаннымиИСМПКлиентСервер.ОбъектВТекстJSON(ПараметрыЗапроса, Истина);
	
	РезультатЗапроса = Ждать ОбщегоНазначенияИСМПВебКлиент.ОтправитьДанныеВСервис(
		URLЗапроса,
		ТелоЗапросаJSON,
		,
		"POST",
		ПараметрыЗапросов,
		ЗаголовокHTTP);
	
	РезультатОтправкиЗапроса = ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса, Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ОбработатьОтветНастройкаТоварныхГруппЛокальногоМодуляЧЗ(РезультатОтправкиЗапроса, ВозвращаемоеЗначение, URLЗапроса);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Запрос конфигурации системы Локального модуля Честный знак. Выполняется для проверки актуальной конфигурации
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
// 
// Возвращаемое значение:
//  Структура - результат иницициализации:
// * ОтказАвторизации - Булево - Истина, если переданы некорректные данные администратора ЛМ ЧЗ
// * РезультатОтправкиЗапроса - (См. ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON).
// * ТекстОшибки - Строка - текст ошибки, полученной от ЛМ ЧЗ
// * АдресСервернойЧасти - Строка - адрес серверной части ЛМ ЧЗ
// * НастройкаТоварныхГрупп - Неопределено, Соответствие из КлючИЗначение - настройка загруженных карточек ТГ
Асинх Функция ЗапроситьКонфигурациюЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",         Ложь);
	ВозвращаемоеЗначение.Вставить("РезультатОтправкиЗапроса", Неопределено);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",              "");
	ВозвращаемоеЗначение.Вставить("АдресСервернойЧасти",      "");
	ВозвращаемоеЗначение.Вставить("НастройкаТоварныхГрупп",   Неопределено);
	
	ДанныеАвторизацииBase64 = ШтрихкодированиеОбщегоНазначенияИСКлиентСервер.ШтрихкодВBase64(СтрШаблон("%1:%2", ПараметрыУстановки.Логин, ПараметрыУстановки.Пароль));
	
	ЗаголовокHTTP = Новый Соответствие();
	ЗаголовокHTTP.Вставить("Accept",         "application/json");
	ЗаголовокHTTP.Вставить("Accept-Charset", "utf-8");
	ЗаголовокHTTP.Вставить("Authorization",  СтрШаблон("Basic %1", ДанныеАвторизацииBase64));
	
	URLЗапроса = "api/v1/config";
	
	ПараметрыЗапросов = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыОтправкиHTTPЗапросовКЛокальномуМодулюЧЗ(ПараметрыУстановки);
	
	РезультатЗапроса = Ждать ОбщегоНазначенияИСМПВебКлиент.ОтправитьДанныеВСервис(
		URLЗапроса,
		,,
		"GET",
		ПараметрыЗапросов,
		ЗаголовокHTTP);
	
	РезультатОтправкиЗапроса = ОбменДаннымиИСМПКлиентСервер.ОбработатьРезультатОтправкиHTTPЗапросаКакJSON(РезультатЗапроса, Истина);
	
	ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ОбработатьОтветЗапросКонфигурацииЛокальногоМодуляЧЗ(РезультатОтправкиЗапроса, ВозвращаемоеЗначение, URLЗапроса);
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#КонецОбласти
