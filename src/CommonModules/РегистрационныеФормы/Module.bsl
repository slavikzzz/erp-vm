#Область СлужебныйПрограммныйИнтерфейс

Процедура Проверка_ДоляУстКап(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт 
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	ОТЧ = Новый ОписаниеТипов("Число");
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[0]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана номинальная стоимость доли", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
		Если ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) Тогда 
			Если ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Числитель дроби не указывается", ИмяСтраницы, МассивПоказателей[2], УИД));
			КонецЕсли;
			Если ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Знаменатель дроби не указывается", ИмяСтраницы, МассивПоказателей[3], УИД));
			КонецЕсли;
		ИначеЕсли ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Или ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
			Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан числитель дроби", ИмяСтраницы, МассивПоказателей[2], УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан знаменатель дроби", ИмяСтраницы, МассивПоказателей[3], УИД));
			КонецЕсли;
			Если ОТЧ.ПривестиЗначение(Данные[МассивПоказателей[2]]) > ОТЧ.ПривестиЗначение(Данные[МассивПоказателей[3]])
				И ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Значение дроби не должно быть больше 1", ИмяСтраницы, МассивПоказателей[3], УИД));
			КонецЕсли;
		Иначе
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Необходимо заполнить долю либо дробь", ИмяСтраницы, МассивПоказателей[1], УИД));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_СвРожд(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) И Не ЗначениеЗаполнено(Данные[МассивПоказателей[0]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата рождения", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_СвГражд(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[0]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан код гражданства", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(
			Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[1], (Данные[МассивПоказателей[0]] = "2"));
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_УдЛичнФЛ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	УведомлениеОСпецрежимахНалогообложенияСлужебный.Проверка_УдЛичнФЛ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность);
КонецПроцедуры

Процедура Проверка_ИнОргБезИННсОКСМ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт 
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[0], Ложь, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОКСМ(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[2], Истина);
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано полное наименование", ИмяСтраницы, МассивПоказателей[1], УИД));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_ДоговорНотариус(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт 
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[0]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана причина внесения сведений", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан номер договора", ИмяСтраницы, МассивПоказателей[1], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана дата договора", ИмяСтраницы, МассивПоказателей[2], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[3]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указана фамилия нотариуса", ИмяСтраницы, МассивПоказателей[3], УИД));
		КонецЕсли;
		Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[4]]) Тогда 
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указано имя нотариуса", ИмяСтраницы, МассивПоказателей[4], УИД));
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_ИНН_ОГРН_ЮЛ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[0], Истина, Истина);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[1], Истина, Истина);
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_ИНН_ОГРН_ФЛ(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаОГРН(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[0], Истина, Ложь);
		УведомлениеОСпецрежимахНалогообложенияСлужебный.ПроверкаИНН(Данные, ТаблицаОшибок, ИмяСтраницы, МассивПоказателей[1], Истина, Ложь);
	КонецЕсли;
КонецПроцедуры

Процедура Проверка_Адрес(Показатели, Данные, ТаблицаОшибок, ИмяСтраницы, Обязательность = Ложь) Экспорт 
	УИД = Неопределено;
	Данные.Свойство("УИД", УИД);
	Если Обязательность Или УведомлениеОСпецрежимахНалогообложения.БлокЗаполнен(Данные, Показатели) Тогда
		МассивПоказателей = СтрРазделить(Показатели, ",", Ложь);
		Если СтрДлина(Данные[МассивПоказателей[0]]) <> 2
			Или Не СтроковыеФункцииКлиентСервер.ТолькоЦифрыВСтроке(Данные[МассивПоказателей[0]]) Тогда 
			
			ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
				"Не указан / неправильно указан код региона", ИмяСтраницы, МассивПоказателей[0], УИД));
		КонецЕсли;
		Если Данные[МассивПоказателей[0]] <> "99" Тогда 
			Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[1]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указан вид муниципального района", ИмяСтраницы, МассивПоказателей[1], УИД));
			КонецЕсли;
			Если Не ЗначениеЗаполнено(Данные[МассивПоказателей[2]]) Тогда 
				ТаблицаОшибок.Добавить(Документы.УведомлениеОСпецрежимахНалогообложения.ПолучитьПустуюСтруктуруНавигацииПоОшибкам(
					"Не указано наименование муниципального района", ИмяСтраницы, МассивПоказателей[2], УИД));
			КонецЕсли;
		КонецЕсли;
	КонецЕсли;
КонецПроцедуры

Функция ПолучитьПараметрыИзВеткиДерева(СхемаВыгрузки, Путь) Экспорт 
	Результат = Новый Структура;
	ПолучитьПараметрыИзВеткиДереваРек(УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(СхемаВыгрузки, Путь, "Код"), Результат);
	Возврат Результат;
КонецФункции

Процедура ОтправитьКодПодтвержденияВФоне(ПараметрыВыполнения, АдресХранилища) Экспорт
	Если Не ОбщегоНазначения.ПодсистемаСуществует(
		"РегламентированнаяОтчетность.ЭлектронныйДокументооборотСКонтролирующимиОрганами.ГосударственнаяРегистрацияВФНС") Тогда
		
		Возврат;
	КонецЕсли;
	МодульРегистрацияВФНС = ОбщегоНазначения.ОбщийМодуль("ДокументооборотРегистрацияВФНС");
	ОтветОтСервиса = МодульРегистрацияВФНС.СервисРегистрацииФНСРаботоспособность();
	
	Если Не ОтветОтСервиса.Выполнено Тогда
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Сервис для отправки кодов подтверждения недоступен.
			|Обратитесь к администратору.
			|%1';
			|en = 'Сервис для отправки кодов подтверждения недоступен.
			|Обратитесь к администратору.
			|%1'"),
			ОтветОтСервиса.Ошибка);
	КонецЕсли;
	
	ПараметрыПроверки = МодульРегистрацияВФНС.ПараметрыОтправкиКодаПодтверждения();
	ПараметрыПроверки.Тип = ПараметрыВыполнения.СпособПодтверждения;
	ПараметрыПроверки.ПредметОтправки = ПараметрыВыполнения.Значение;
	ПараметрыПроверки.Идентификатор = ПараметрыВыполнения.ИдентификаторКода;
	ДанныеПодтверждения = МодульРегистрацияВФНС.СервисРегистрацииФНСПолучитьКодПодтверждения(ПараметрыПроверки);
	
	ДанныеХранилища = ПолучитьИзВременногоХранилища(АдресХранилища);
	Если ДанныеХранилища = Неопределено И ТипЗнч(ДанныеХранилища) <> Тип("Структура") Тогда
		ДанныеХранилища = Новый Структура;
	КонецЕсли;
	
	ДанныеХранилища.Вставить(ПараметрыВыполнения.СпособПодтверждения, ДанныеПодтверждения);
	ПоместитьВоВременноеХранилище(ДанныеХранилища, АдресХранилища);
КонецПроцедуры

Процедура ОбработатьРезультатПодписанияДокументов(Форма, РезультатПодписания, ПараметрыОтображения, ДополнительныеПараметры) Экспорт
	Если РезультатПодписания <> Неопределено
		И РезультатПодписания.Выполнено
		И ЭтоАдресВременногоХранилища(РезультатПодписания.Адрес) Тогда
		
		Форма.ПодписанныеДокументы = ПрикрепитьПрисоединенныйФайлПодписанногоДокумента(
			РезультатПодписания.Адрес,
			РезультатПодписания.ИмяПакета,
			ПараметрыОтображения.Заявление);
		
		Форма.ОшибкаПодписанияДокументов = Ложь;
		Форма.НетСертификатаПодписи = Ложь;
		Форма.Модифицированность = Ложь;
		
		Для Каждого ТекущийДокумент Из ДополнительныеПараметры Цикл
			Для Каждого ТекущаяСтраница Из ТекущийДокумент.АдресаФайлов Цикл
				УдалитьИзВременногоХранилища(ТекущаяСтраница);
			КонецЦикла;
		КонецЦикла;
	Иначе
		Форма.ПодписанныеДокументы = Неопределено;
		Форма.ОшибкаПодписанияДокументов = (РезультатПодписания <> Неопределено);
		
		КлассификаторОшибок = ИнтерфейсыВзаимодействияБРОКлиентСервер.КлассификаторОшибокПакетаПоЕГРЮЛ();
		
		Если РезультатПодписания <> Неопределено
			И (РезультатПодписания.ТипОшибки = КлассификаторОшибок.ОтсутствуютСертификаты
			Или РезультатПодписания.ТипОшибки = КлассификаторОшибок.ОтсутствуютДействующиеСертификаты) Тогда
			
			Форма.НетСертификатаПодписи = Истина;
		Иначе
			Форма.НетСертификатаПодписи = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	РегистрационныеФормыКлиентСервер.УправлениеФормойПриПодачеДокументовВЭлектронномВиде(Форма, ПараметрыОтображения);
КонецПроцедуры

Функция ПрикрепитьПрисоединенныйФайлПодписанногоДокумента(АдресВоВременномХранилище, ИмяФайла, ВладелецФайлов) Экспорт
	ДопРеквизиты = Новый Массив;
	ДопРеквизиты.Добавить("ПодписанЭП");
	
	РасширениеФайла = ОбщегоНазначенияКлиентСервер.ПолучитьРасширениеИмениФайла(ИмяФайла);
	Если ЗначениеЗаполнено(РасширениеФайла) И СтрЗаканчиваетсяНа(ИмяФайла, РасширениеФайла) Тогда
		ИмяБезРасширения = Сред(ИмяФайла, 1, СтрДлина(ИмяФайла) - СтрДлина(РасширениеФайла) - 1);
	Иначе
		ИмяБезРасширения = ИмяФайла;
	КонецЕсли;
	
	СведенияОФайле = РаботаСФайлами.ПараметрыДобавленияФайла(ДопРеквизиты);
	СведенияОФайле.ВладелецФайлов = ВладелецФайлов;
	СведенияОФайле.Автор = Пользователи.ТекущийПользователь();
	СведенияОФайле.ИмяБезРасширения = ИмяБезРасширения;
	СведенияОФайле.РасширениеБезТочки = РасширениеФайла;
	СведенияОФайле.Служебный = Истина;
	СведенияОФайле.ПодписанЭП = Истина;
	
	ПрисоединенныйФайл = РаботаСФайлами.ДобавитьФайл(
		СведенияОФайле,
		АдресВоВременномХранилище, ,
		РегистрационныеФормыКлиентСервер.ПредставлениеПодписанныеФайлы());
	
	Возврат ПрисоединенныйФайл;
КонецФункции

Функция ПроверкаОКВЭДНаКорректностьСтарый(ОКВЭД) Экспорт 
	Возврат СтрПодобнаПоРегулярномуВыражению(ОКВЭД, "[0-9]{2}|[0-9]{2}.[0-9]{1,2}|[0-9]{2}.[0-9]{2}.[0-9]{1,2}");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПолучитьПараметрыИзВеткиДереваРек(Строка, Результат)
	Если ЗначениеЗаполнено(Строка.Раздел)
		И ЗначениеЗаполнено(Строка.Ключ)
		И Не СтрНачинаетсяС(Строка.Ключ, "X")
		И Не СтрНачинаетсяС(Строка.Ключ, "Х") Тогда 
		
		Результат.Вставить(Строка.Ключ, Неопределено);
	КонецЕсли;
	
	Для Каждого Стр Из Строка.Строки Цикл
		ПолучитьПараметрыИзВеткиДереваРек(Стр, Результат);
	КонецЦикла;
КонецПроцедуры

#КонецОбласти