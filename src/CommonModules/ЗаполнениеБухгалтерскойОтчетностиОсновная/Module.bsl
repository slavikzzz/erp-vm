////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ БУХГАЛТЕРСКОЙ ОТЧЕТНОСТИ.
// Модуль предназначен для заполнения регламентированного отчета
// "Бухгалтерская отчетность организаций" и финансовой отчетности в банки.
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

// Заполняет РегламентированныйОтчетБухОтчетность по форме ФормаОтчета2011Кв4.
//
// Параметры:
//  ПараметрыОтчета - Структура - набор именованных параметров для определения вариантов заполнения отчета.
//  Контейнер - Структура - Показателей отчета.
//
Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем РассчитанныеПоказатели; // Таблица для сбора сумм показателей по организациям
	
	СтруктураДанных = Новый Структура; // Возвращамые сведения процедуры автозаполнения
	
	Если ПараметрыОтчета.Свойство("ТаблицаРасшифровки") И ЗначениеЗаполнено(ПараметрыОтчета.ТаблицаРасшифровки) Тогда
		ТаблицаРасшифровки = ПараметрыОтчета.ТаблицаРасшифровки;
	Иначе
		ТаблицаРасшифровки = Новый ТаблицаЗначений;
		ТаблицаРасшифровки.Колонки.Добавить("ИмяПоказателя");
		ТаблицаРасшифровки.Колонки.Добавить("НаименованиеПоказателя");
		ТаблицаРасшифровки.Колонки.Добавить("ЗнакОперации");
		ТаблицаРасшифровки.Колонки.Добавить("НаименованиеСлагаемого");
		ТаблицаРасшифровки.Колонки.Добавить("Сумма");
		ТаблицаРасшифровки.Колонки.Добавить("ИмяРаздела");
		ТаблицаРасшифровки.Колонки.Добавить("ДополнительныеПараметры");
	КонецЕсли;
	
	#Область ОчисткаТаблицыРасшифровки
	
	// Очистка таблицы расшифровки от сведений заполняемых отчетов.
	ЗаполнятьБаланс = НЕ ПараметрыОтчета.Свойство("ЗаполнятьБаланс")
	              ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьБаланс") И ПараметрыОтчета.ЗаполнятьБаланс);
	Если ЗаполнятьБаланс Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Баланс");
	КонецЕсли;
	
	ЗаполнятьОФР = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОФР")
	           ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОФР") И ПараметрыОтчета.ЗаполнятьОФР);
	Если ЗаполнятьОФР Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ФормаОтчета");
	КонецЕсли;
	
	ЗаполнятьОИК = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОИК")
	           ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОИК") И ПараметрыОтчета.ЗаполнятьОИК);
	Если ЗаполнятьОИК Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОИК");
	КонецЕсли;
	
	ЗаполнятьОДДС = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОДДС")
	            ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОДДС") И ПараметрыОтчета.ЗаполнятьОДДС);
	Если ЗаполнятьОДДС Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОДДС");
	КонецЕсли;
	
	ЗаполнятьОЦИПС = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОЦИПС")
	            ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОЦИПС") И ПараметрыОтчета.ЗаполнятьОЦИПС);
	Если ЗаполнятьОЦИПС Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОЦИПС");
	КонецЕсли;
	
	ЗаполнятьПояснения1 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения1")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения1") И ПараметрыОтчета.ЗаполнятьПояснения1);
	Если ЗаполнятьПояснения1 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения1");
	КонецЕсли;
	
	ЗаполнятьПояснения2 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения2")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения2") И ПараметрыОтчета.ЗаполнятьПояснения2);
	Если ЗаполнятьПояснения2 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения2");
	КонецЕсли;
	
	ЗаполнятьПояснения4 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения4")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения4") И ПараметрыОтчета.ЗаполнятьПояснения4);
	Если ЗаполнятьПояснения4 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения4");
	КонецЕсли;
	
	ЗаполнятьПояснения5 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения5")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения5") И ПараметрыОтчета.ЗаполнятьПояснения5);
	Если ЗаполнятьПояснения5 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения5");
	КонецЕсли;
	
	ЗаполнятьПояснения6 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения6")
	                 ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения6") И ПараметрыОтчета.ЗаполнятьПояснения6);
	Если ЗаполнятьПояснения6 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения6");
	КонецЕсли;
	
	ЗаполнятьПояснения7 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения7")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения7") И ПараметрыОтчета.ЗаполнятьПояснения7);
	Если ЗаполнятьПояснения7 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения7");
	КонецЕсли;
	
	ЗаполнятьПояснения8 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения8")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения8") И ПараметрыОтчета.ЗаполнятьПояснения8);
	Если ЗаполнятьПояснения8 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения8");
	КонецЕсли;
	
	#КонецОбласти
	
	РассчитанныеПоказатели = Новый ТаблицаЗначений;
	РассчитанныеПоказатели.Колонки.Добавить("Раздел");
	РассчитанныеПоказатели.Колонки.Добавить("Показатель");
	РассчитанныеПоказатели.Колонки.Добавить("Сумма");
	
	ТаблицаСведенийСчета75_01 = Новый ТаблицаЗначений;
	ТаблицаСведенийСчета75_01.Колонки.Добавить("Графа");
	ТаблицаСведенийСчета75_01.Колонки.Добавить("Сумма");
	
	МногострочныеПоказатели = Новый Структура;
	
	// Вспомогательные значения.
	ОсновнаяОрганизация = ПараметрыОтчета.Организация;
	
	НачалоПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	КонецПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	НачалоПериодаПредыдущегоГодаОФР = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГодаОФР  = КонецМесяца(ДобавитьМесяц(КонецПериодаОтчета, -12));
	
	НачалоПериодаПредыдущегоГода = НачалоГода(ДобавитьМесяц(НачалоПериодаОтчета, -12));
	КонецПериодаПредыдущегоГода  = КонецГода(НачалоПериодаПредыдущегоГода);
	
	НачалоПериодаГодаПредшествующегоПредыдущему = НачалоГода(ДобавитьМесяц(НачалоПериодаПредыдущегоГода, -12));
	КонецПериодаГодаПредшествующегоПредыдущему  = КонецГода(НачалоПериодаГодаПредшествующегоПредыдущему);
	
	ДоступныеОрганизации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	ПолныйСписокОрганизаций = Новый Массив;
	
	Если ДоступныеОрганизации.Найти(ОсновнаяОрганизация) <> Неопределено Тогда
		ПолныйСписокОрганизаций.Добавить(ОсновнаяОрганизация);
	КонецЕсли;
	
	Если ПараметрыОтчета.Свойство("ГруппаОрганизаций") Тогда
		Для Каждого Организация Из ПараметрыОтчета.ГруппаОрганизаций Цикл
			Если ДоступныеОрганизации.Найти(Организация.Значение) <> Неопределено Тогда
				ПолныйСписокОрганизаций.Добавить(Организация.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	СчетаСРеквизитами = ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетаСРеквизитами();
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	ТаблицаЗначенийДопСтрок5100и5110 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5100");
	ТаблицаЗначенийДопСтрок5140и5150 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5140");
	ТаблицаЗначенийДопСтрок5160и5170 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5160");
	ТаблицаЗначенийДопСтрок5180и5190 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5180");
	
	ТаблицаЗначенийДопСтрок5200и5210 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5200");
	ТаблицаЗначенийДопСтрок5220и5230 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5220");
	ТаблицаЗначенийДопСтрок5240и5250 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5240");
	ТаблицаЗначенийДопСтрок5260      = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5260");
	
	Для Каждого Организация Из ПолныйСписокОрганизаций Цикл
		КонтекстВыполнения = Новый Структура;
		КонтекстВыполнения.Вставить("Организация", Организация);
		КонтекстВыполнения.Вставить("СчетаСРеквизитами", СчетаСРеквизитами);
		КонтекстВыполнения.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
		КонтекстВыполнения.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
		КонтекстВыполнения.Вставить("МногострочныеПоказатели", Новый Структура);
		КонтекстВыполнения.Вставить("СтруктураОтчета", ПараметрыОтчета.СтруктураОтчета);
		КонтекстВыполнения.Вставить("КонецОтчетногоПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);
		КонтекстВыполнения.Вставить("ТаблицаСведенийСчета75_01", ТаблицаСведенийСчета75_01);
		
		КонтекстВыполнения.Вставить("УчетНа70ВедетсяСводно", УчетНа70ВедетсяСводно());
		
		// Бухгалтерский баланс.
		Если ЗаполнятьБаланс Тогда
			КонтекстОтчета = Новый Структура;
			КонтекстВыполнения.Вставить("КонтекстОтчета", КонтекстОтчета);
			
			КонтекстОтчета.Вставить("СоставДополнительныхСтрокБаланс", ПараметрыОтчета.СоставДополнительныхСтрокБаланс);
			
			КонтекстОтчета.Вставить("Графа", "04");
			КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(КонецПериодаОтчета, "ДФ = 'дд ММММ гггг'")+ " г.");
			КонтекстОтчета.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстОтчета.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе(КонтекстВыполнения);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				КонтекстОтчета.Вставить("Графа", "05");
				КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(КонецПериодаПредыдущегоГода, "ДФ = 'дд ММММ гггг'")+ " г.");
				КонтекстОтчета.Вставить("НачалоПериодаОтчета", НачалоПериодаПредыдущегоГода);
				КонтекстОтчета.Вставить("КонецПериодаОтчета", КонецПериодаПредыдущегоГода);
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе(КонтекстВыполнения);
				
				КонтекстОтчета.Вставить("Графа", "06");
				КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(КонецПериодаГодаПредшествующегоПредыдущему, "ДФ = 'дд ММММ гггг'")+ " г.");
				КонтекстОтчета.Вставить("НачалоПериодаОтчета", НачалоПериодаГодаПредшествующегоПредыдущему);
				КонтекстОтчета.Вставить("КонецПериодаОтчета", КонецПериодаГодаПредшествующегоПредыдущему);
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе(КонтекстВыполнения);
			КонецЕсли;
			
			КонтекстВыполнения.Удалить("КонтекстОтчета");
			
		КонецЕсли;
		
		// Отчет о финансовых результатах.
		Если ЗаполнятьОФР Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			КонтекстВыполнения.Вставить("СоставДополнительныхСтрокОПУ", ПараметрыОтчета.СоставДополнительныхСтрокОПУ);
			КонтекстВыполнения.Вставить("ПрименениеЕНВД", ПараметрыОтчета.ПрименениеЕНВД);
			КонтекстВыполнения.Вставить("ОрганизацияПрименяетПБУ18",
				РегламентированнаяОтчетностьПереопределяемый.ПрименяетсяПБУ18(Организация, КонецПериодаОтчета));
			
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_ОФР(КонтекстВыполнения);
			
		КонецЕсли;
		
		// Отчет об изменениях капитала.
		Если ЗаполнятьОИК Тогда
			КонтекстОтчета = Новый Структура;
			КонтекстВыполнения.Вставить("КонтекстОтчета", КонтекстОтчета);
			
			КонтекстОтчета.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстОтчета.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			
			ЗаполнитьФормаОтчета2011Кв4_ОИК(КонтекстВыполнения);
			
			КонтекстВыполнения.Удалить("КонтекстОтчета");
			
		КонецЕсли;
		
		// Отчет о движении денежных средств.
		Если ЗаполнятьОДДС Тогда
			СтрПериод           = "За " + ОписаниеПериода(НачалоПериодаОтчета, КонецПериодаОтчета);
			СтрПериодПрошлыйГод = "За " + ОписаниеПериода(НачалоПериодаПредыдущегоГодаОФР, КонецПериодаПредыдущегоГодаОФР);
			
			КонтекстВыполнения.Вставить("Графа", "03");
			КонтекстВыполнения.Вставить("ЗаголовокГрафы", СтрПериод);
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			КонтекстВыполнения.Вставить("ЕНСРаспределенАвтоматически", Неопределено);
			
			ЗаполнитьФормаОтчета2011Кв4_ОДДС(КонтекстВыполнения);
			
			СтруктураДанных.Вставить("ЕНСРаспределенАвтоматическиОтч", КонтекстВыполнения.ЕНСРаспределенАвтоматически);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				КонтекстВыполнения.Вставить("Графа", "04");
				КонтекстВыполнения.Вставить("ЗаголовокГрафы", СтрПериодПрошлыйГод);
				КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаПредыдущегоГодаОФР);
				КонтекстВыполнения.Вставить("КонецПериодаОтчета",  КонецПериодаПредыдущегоГодаОФР);
				КонтекстВыполнения.Вставить("ЕНСРаспределенАвтоматически", Неопределено);
				
				ЗаполнитьФормаОтчета2011Кв4_ОДДС(КонтекстВыполнения);
				
				СтруктураДанных.Вставить("ЕНСРаспределенАвтоматическиПрошл", КонтекстВыполнения.ЕНСРаспределенАвтоматически);
				
			КонецЕсли;
			
		КонецЕсли;
		
		// Отчет о целевом использовании средств
		Если ЗаполнятьОЦИПС Тогда
			
			ПериодыОтчета = Новый Структура;
			
			ПериодыОтчета.Вставить("ТекущийПериод", Новый Структура);
			ПериодыОтчета.ТекущийПериод.Вставить("Начало", НачалоПериодаОтчета);
			ПериодыОтчета.ТекущийПериод.Вставить("Конец",  КонецПериодаОтчета);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				ПериодыОтчета.Вставить("АналогичныйПериодПредыдущегоГода", Новый Структура);
				ПериодыОтчета.АналогичныйПериодПредыдущегоГода.Вставить("Начало", НачалоПериодаПредыдущегоГодаОФР);
				ПериодыОтчета.АналогичныйПериодПредыдущегоГода.Вставить("Конец",  КонецПериодаПредыдущегоГодаОФР);
			КонецЕсли;
			
			ЗаполнитьФормаОтчета2011Кв4_ОЦИС(КонтекстВыполнения, ПериодыОтчета);
			
		КонецЕсли;
			
		// Пояснения 1.
		Если ЗаполнятьПояснения1 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5100и5110", ТаблицаЗначенийДопСтрок5100и5110);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5140и5150", ТаблицаЗначенийДопСтрок5140и5150);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5160и5170", ТаблицаЗначенийДопСтрок5160и5170);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5180и5190", ТаблицаЗначенийДопСтрок5180и5190);
			
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения1(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 2.
		Если ЗаполнятьПояснения2 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5200и5210", ТаблицаЗначенийДопСтрок5200и5210);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5220и5230", ТаблицаЗначенийДопСтрок5220и5230);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5240и5250", ТаблицаЗначенийДопСтрок5240и5250);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5260", ТаблицаЗначенийДопСтрок5260);
			
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения2(КонтекстВыполнения);
			
		КонецЕсли;
		
		// Пояснения 4.
		Если ЗаполнятьПояснения4 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения4(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 5.
		Если ЗаполнятьПояснения5 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения5(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 6.
		Если ЗаполнятьПояснения6 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			КонтекстВыполнения.Вставить("ПрисутствуетСтрока5665", Контейнер.Пояснения6.Свойство("П000100566503"));
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения6(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 7.
		Если ЗаполнятьПояснения7 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения7(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 8.
		Если ЗаполнятьПояснения8 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", НачалоПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", КонецПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения8(КонтекстВыполнения);
		КонецЕсли;
		
		Для Каждого ЭлементРаздел Из КонтекстВыполнения.МногострочныеПоказатели Цикл
			Раздел = ЭлементРаздел.Ключ;
			МногострочныеЧасти = ЭлементРаздел.Значение;
			
			Если НЕ МногострочныеПоказатели.Свойство(Раздел) Тогда
				МногострочныеПоказатели.Вставить(Раздел, Новый Структура);
			КонецЕсли;
			
			Для Каждого ЭлементМСЧ Из МногострочныеЧасти Цикл
				ИдентификаторМСЧ = ЭлементМСЧ.Ключ;
				МСЧ = ЭлементМСЧ.Значение;
				
				Если МногострочныеПоказатели.Свойство(ИдентификаторМСЧ) Тогда
					МногострочныеПоказатели[Раздел].Вставить(ИдентификаторМСЧ, МСЧ);
				Иначе
					МногострочныеПоказатели[Раздел].Вставить(ИдентификаторМСЧ, МСЧ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	// Дополнительные строки ОФР по номенклатурным группам и статьям затрат.
	Если ЗаполнятьОФР
	   И ПараметрыОтчета.Свойство("СоставДополнительныхСтрокОПУ")
	   И ПараметрыОтчета.СоставДополнительныхСтрокОПУ.Колонки.Найти("Существенность") <> Неопределено
	   И ВыводитьСведенияПоНоменклатурнымГруппам(ПараметрыОтчета) Тогда
		ПрименениеЕНВД_0 = РегламентированнаяОтчетность.ЭтоПлательщикЕНВД(
			ОсновнаяОрганизация, НачалоПериодаОтчета, КонецПериодаОтчета);
		ПрименениеЕНВД_1 = РегламентированнаяОтчетность.ЭтоПлательщикЕНВД(
			ОсновнаяОрганизация, НачалоПериодаПредыдущегоГодаОФР, КонецПериодаПредыдущегоГодаОФР);
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Кт_Дт();
		
		Запрос.УстановитьПараметр("Организации", ПолныйСписокОрганизаций);
		
		Запрос.УстановитьПараметр("НачПериодаОтч",  НачалоПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериодаОтч",  КонецПериодаОтчета);
		Запрос.УстановитьПараметр("НачПериодаПред", НачалоПериодаПредыдущегоГодаОФР);
		Запрос.УстановитьПараметр("КонПериодаПред", КонецПериодаПредыдущегоГодаОФР);
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			Если НЕ ПрименениеЕНВД_0 Тогда
				Запрос.УстановитьПараметр("КонПериодаОтч", НачалоПериодаОтчета - 1); // Графа 04 не заполняется
			КонецЕсли;
			Если НЕ ПрименениеЕНВД_1 Тогда
				Запрос.УстановитьПараметр("КонПериодаПред", НачалоПериодаПредыдущегоГодаОФР - 1); // Графа 05 не заполняется
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗаполнятьПредыдущиеПериоды Тогда
			Запрос.УстановитьПараметр("КонПериодаПред", НачалоПериодаПредыдущегоГодаОФР - 1); // Графа 05 не заполняется
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СчетаПлюс",  СчетаИзСписка("90.01.1, 90.01.2"));
		Запрос.УстановитьПараметр("СчетаМинус", СчетаИзСписка("90.02.1, 90.02.2, 90.03, 90.04, 90.05"));
		Запрос.УстановитьПараметр("ВидСубконтоРазвертки", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21101", Запрос, "90.01.1, 90.03, 90.04, 90.05");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21102", Запрос, "90.01.2");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21201", Запрос, "90.02.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21202", Запрос, "90.02.2");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2110", Запрос, "90.01.1, 90.03, 90.04, 90.05");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2120", Запрос, "90.02.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Дт_Кт_Субконто();
		
		Запрос.УстановитьПараметр("Организации", ПолныйСписокОрганизаций);
		
		Запрос.УстановитьПараметр("НачПериодаОтч",  НачалоПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериодаОтч",  КонецПериодаОтчета);
		Запрос.УстановитьПараметр("НачПериодаПред", НачалоПериодаПредыдущегоГодаОФР);
		Запрос.УстановитьПараметр("КонПериодаПред", КонецПериодаПредыдущегоГодаОФР);
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			Если НЕ ПрименениеЕНВД_0 Тогда
				Запрос.УстановитьПараметр("КонПериодаОтч", НачалоПериодаОтчета - 1); // Графа 04 не заполняется
			КонецЕсли;
			Если НЕ ПрименениеЕНВД_1 Тогда
				Запрос.УстановитьПараметр("КонПериодаПред", НачалоПериодаПредыдущегоГодаОФР - 1); // Графа 05 не заполняется
			КонецЕсли;
		КонецЕсли;
		
		Если НЕ ЗаполнятьПредыдущиеПериоды Тогда
			Запрос.УстановитьПараметр("КонПериодаПред", НачалоПериодаПредыдущегоГодаОФР - 1); // Графа 05 не заполняется
		КонецЕсли;
			
		Запрос.УстановитьПараметр("ВидСубконтоРазвертки", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		
		Запрос.УстановитьПараметр("Счета",  СчетаИзСписка("90.07.1, 90.07.2"));
		Запрос.УстановитьПараметр("КорСчета", МассивСчетовВИерархииИзСписка("44"));
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22101", Запрос, "90.07.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22102", Запрос, "90.07.2");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2210", Запрос, "90.07.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		КонецЕсли;
		
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Дт_Кт_Субконто();
		
		Запрос.УстановитьПараметр("Счета",  СчетаИзСписка("90.08.1, 90.08.2"));
		Запрос.УстановитьПараметр("КорСчета", МассивСчетовВИерархииИзСписка("20, 23, 25, 26"));
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22201", Запрос, "90.08.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22202", Запрос, "90.08.2");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2220", Запрос, "90.08.1");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть);
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	РассчитанныеПоказатели.Свернуть("Раздел, Показатель", "Сумма");
	Для Каждого СтрокаПоказателя Из РассчитанныеПоказатели Цикл
		Контейнер[СтрокаПоказателя.Раздел].Вставить(СтрокаПоказателя.Показатель, СтрокаПоказателя.Сумма);
	КонецЦикла;
	
	Для Каждого ЭлементРаздел Из МногострочныеПоказатели Цикл
		Раздел = ЭлементРаздел.Ключ;
		МногострочныеЧасти = ЭлементРаздел.Значение;
		Для Каждого ЭлементМСЧ Из МногострочныеЧасти Цикл
			ИдентификаторМСЧ = ЭлементМСЧ.Ключ;
			МСЧ = ЭлементМСЧ.Значение;
			СвернутьТаблицуЗначенийДопСтрок(МСЧ);
			
			СтруктураСтроки = ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав[0];
			ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Очистить();
			ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Добавить(СтруктураСтроки);
			
			Для Инд = 0 По МСЧ.Количество() - 1 Цикл
				
				Если Инд >= 1 Тогда
					ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Добавить(СтруктураСтроки);
				КонецЕсли;
				
				Постфикс = "_" + Формат(Инд + 1, "ЧГ=0");
				Для Каждого Колонка Из МСЧ.Колонки Цикл
					Показатель = Колонка.Имя + Постфикс;
					Контейнер[Раздел].Вставить(Показатель, МСЧ[Инд][Колонка.Имя]);
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	// Сведения счета 75.01 для вычета из авторасчета расчета стоимости чистых активов.
	ОборотыСчета75_01 = Новый Структура;
	ОборотыСчета75_01.Вставить("Графа04", 0);
	ОборотыСчета75_01.Вставить("Графа05", 0);
	ОборотыСчета75_01.Вставить("Графа06", 0);
	
	ТаблицаСведенийСчета75_01.Свернуть("Графа", "Сумма");
	Для Каждого Строка75_01 Из ТаблицаСведенийСчета75_01 Цикл
		ОборотыСчета75_01["Графа" + Строка75_01.Графа] = Строка75_01.Сумма;
	КонецЦикла;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контейнер", Контейнер);
	СтруктураДанных.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	СтруктураДанных.Вставить("СтруктураМногострочныхЧастей", ПараметрыОтчета.СтруктураМногострочныхЧастей);
	СтруктураДанных.Вставить("ОборотыСчета75_01", ОборотыСчета75_01);
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

// Заполняет РегламентированныйОтчетБухОтчетность по форме ФормаОтчета2019Кв1.
//
// Параметры:
//  ПараметрыОтчета - Структура - набор именованных параметров для определения вариантов заполнения отчета.
//  Контейнер - Структура - Показателей отчета.
//
Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1(ПараметрыОтчета, Контейнер) Экспорт
	
	Перем РассчитанныеПоказатели; // Таблица для сбора сумм показателей по организациям
	
	Если ПараметрыОтчета.Свойство("ТаблицаРасшифровки") И ЗначениеЗаполнено(ПараметрыОтчета.ТаблицаРасшифровки) Тогда
		ТаблицаРасшифровки = ПараметрыОтчета.ТаблицаРасшифровки;
	Иначе
		ТаблицаРасшифровки = Новый ТаблицаЗначений;
		ТаблицаРасшифровки.Колонки.Добавить("ИмяПоказателя");
		ТаблицаРасшифровки.Колонки.Добавить("НаименованиеПоказателя");
		ТаблицаРасшифровки.Колонки.Добавить("ЗнакОперации");
		ТаблицаРасшифровки.Колонки.Добавить("НаименованиеСлагаемого");
		ТаблицаРасшифровки.Колонки.Добавить("Сумма");
		ТаблицаРасшифровки.Колонки.Добавить("ИмяРаздела");
		ТаблицаРасшифровки.Колонки.Добавить("ДополнительныеПараметры");
	КонецЕсли;
	
	#Область ОчисткаТаблицыРасшифровки
	
		// Очистка таблицы расшифровки от сведений заполняемых отчетов.
	ЗаполнятьБаланс = НЕ ПараметрыОтчета.Свойство("ЗаполнятьБаланс")
	              ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьБаланс") И ПараметрыОтчета.ЗаполнятьБаланс);
	Если ЗаполнятьБаланс Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Баланс");
	КонецЕсли;
	
	ЗаполнятьОФР = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОФР")
	           ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОФР") И ПараметрыОтчета.ЗаполнятьОФР);
	Если ЗаполнятьОФР Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОФР");
	КонецЕсли;
	
	ЗаполнятьОИК = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОИК")
	           ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОИК") И ПараметрыОтчета.ЗаполнятьОИК);
	Если ЗаполнятьОИК Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОИК");
	КонецЕсли;
	
	ЗаполнятьОДДС = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОДДС")
	            ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОДДС") И ПараметрыОтчета.ЗаполнятьОДДС);
	Если ЗаполнятьОДДС Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОДДС");
	КонецЕсли;
	
	ЗаполнятьОЦИПС = НЕ ПараметрыОтчета.Свойство("ЗаполнятьОЦИПС")
	            ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьОЦИПС") И ПараметрыОтчета.ЗаполнятьОЦИПС);
	Если ЗаполнятьОЦИПС Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "ОЦИПС");
	КонецЕсли;
	
	ЗаполнятьПояснения1 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения1")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения1") И ПараметрыОтчета.ЗаполнятьПояснения1);
	Если ЗаполнятьПояснения1 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения1");
	КонецЕсли;
	
	ЗаполнятьПояснения2 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения2")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения2") И ПараметрыОтчета.ЗаполнятьПояснения2);
	Если ЗаполнятьПояснения2 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения2");
	КонецЕсли;
	
	ЗаполнятьПояснения4 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения4")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения4") И ПараметрыОтчета.ЗаполнятьПояснения4);
	Если ЗаполнятьПояснения4 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения4");
	КонецЕсли;
	
	ЗаполнятьПояснения5 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения5")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения5") И ПараметрыОтчета.ЗаполнятьПояснения5);
	Если ЗаполнятьПояснения5 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения5");
	КонецЕсли;
	
	ЗаполнятьПояснения6 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения6")
	                 ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения6") И ПараметрыОтчета.ЗаполнятьПояснения6);
	Если ЗаполнятьПояснения6 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения6");
	КонецЕсли;
	
	ЗаполнятьПояснения7 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения7")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения7") И ПараметрыОтчета.ЗаполнятьПояснения7);
	Если ЗаполнятьПояснения7 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения7");
	КонецЕсли;
	
	ЗаполнятьПояснения8 = НЕ ПараметрыОтчета.Свойство("ЗаполнятьПояснения8")
	                  ИЛИ (ПараметрыОтчета.Свойство("ЗаполнятьПояснения8") И ПараметрыОтчета.ЗаполнятьПояснения8);
	Если ЗаполнятьПояснения8 Тогда
		ОчиститьРазделРасшифровки(ТаблицаРасшифровки, "Пояснения8");
	КонецЕсли;
	
	#КонецОбласти
	
	РассчитанныеПоказатели = Новый ТаблицаЗначений;
	РассчитанныеПоказатели.Колонки.Добавить("Раздел");
	РассчитанныеПоказатели.Колонки.Добавить("Показатель");
	РассчитанныеПоказатели.Колонки.Добавить("Сумма");
	
	ТаблицаСведенийСчета75_01 = Новый ТаблицаЗначений;
	ТаблицаСведенийСчета75_01.Колонки.Добавить("Графа");
	ТаблицаСведенийСчета75_01.Колонки.Добавить("Сумма");
	
	ЗначенияВычетаИзРасчетаАктивов1530 = Новый ТаблицаЗначений;
	ЗначенияВычетаИзРасчетаАктивов1530.Колонки.Добавить("Графа", Новый ОписаниеТипов("Строка"));
	ЗначенияВычетаИзРасчетаАктивов1530.Колонки.Добавить("Сумма", Новый ОписаниеТипов("Число"));
	
	МногострочныеПоказатели = Новый Структура;
	
	// Вспомогательные значения.
	ОсновнаяОрганизация = ПараметрыОтчета.Организация;
	
	ДатаНачалаПериодаОтчета = ПараметрыОтчета.мДатаНачалаПериодаОтчета;
	ДатаКонцаПериодаОтчета  = ПараметрыОтчета.мДатаКонцаПериодаОтчета;
	
	ДатаНачалаПериодаПредыдущегоГода = ДобавитьМесяц(ДатаНачалаПериодаОтчета, -12);
	ДатаКонцаПериодаПредыдущегоГода  = КонецМесяца(ДобавитьМесяц(ДатаКонцаПериодаОтчета, -12));
	
	ДатаНачалаПредыдущегоГода = НачалоГода(ДобавитьМесяц(ДатаНачалаПериодаОтчета, -12));
	ДатаКонцаПредыдущегоГода  = КонецГода(ДатаНачалаПредыдущегоГода);
	
	ДатаНачалаГодаПредшествующегоПредыдущему = НачалоГода(ДобавитьМесяц(ДатаНачалаПредыдущегоГода, -12));
	ДатаКонцаГодаПредшествующегоПредыдущему  = КонецГода(ДатаНачалаГодаПредшествующегоПредыдущему);
	
	ДоступныеОрганизации = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	ПолныйСписокОрганизаций = Новый Массив;
	
	Если ДоступныеОрганизации.Найти(ОсновнаяОрганизация) <> Неопределено Тогда
		ПолныйСписокОрганизаций.Добавить(ОсновнаяОрганизация);
	КонецЕсли;
	
	Если ПараметрыОтчета.Свойство("ГруппаОрганизаций") Тогда
		Для Каждого Организация Из ПараметрыОтчета.ГруппаОрганизаций Цикл
			Если ДоступныеОрганизации.Найти(Организация.Значение) <> Неопределено Тогда
				ПолныйСписокОрганизаций.Добавить(Организация.Значение);
			КонецЕсли;
		КонецЦикла;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(ДатаНачалаПериодаОтчета);
	
	СчетаСРеквизитами = ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетаСРеквизитами();
	
	ТаблицаЗначенийДопСтрок5100и5110 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5100");
	ТаблицаЗначенийДопСтрок5140и5150 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5140");
	ТаблицаЗначенийДопСтрок5160и5170 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5160");
	ТаблицаЗначенийДопСтрок5180и5190 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5180");
	
	ТаблицаЗначенийДопСтрок5200и5210 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5200");
	ТаблицаЗначенийДопСтрок5220и5230 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5220");
	ТаблицаЗначенийДопСтрок5240и5250 = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5240");
	ТаблицаЗначенийДопСтрок5260      = ЗаполнениеБухгалтерскойОтчетностиПояснения.НоваяТаблицаДопСтрокДляСтроки("5260");
	
	Для Каждого Организация Из ПолныйСписокОрганизаций Цикл
		КонтекстВыполнения = Новый Структура;
		КонтекстВыполнения.Вставить("Организация", Организация);
		КонтекстВыполнения.Вставить("СчетаСРеквизитами", СчетаСРеквизитами);
		КонтекстВыполнения.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
		КонтекстВыполнения.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
		КонтекстВыполнения.Вставить("МногострочныеПоказатели", Новый Структура);
		КонтекстВыполнения.Вставить("СтруктураОтчета", ПараметрыОтчета.СтруктураОтчета);
		КонтекстВыполнения.Вставить("КонецОтчетногоПериода", ПараметрыОтчета.мДатаКонцаПериодаОтчета);
		КонтекстВыполнения.Вставить("ТаблицаСведенийСчета75_01", ТаблицаСведенийСчета75_01);
		КонтекстВыполнения.Вставить("ЗначенияВычетаИзРасчетаАктивов1530", ЗначенияВычетаИзРасчетаАктивов1530);
		
		КонтекстВыполнения.Вставить("УчетНа70ВедетсяСводно", УчетНа70ВедетсяСводно());
		
		Если ЗаполнятьБаланс Или ЗаполнятьОФР Тогда
			КонтекстВыполнения.Вставить("ОрганизацияПрименяетФСБУ25", ЗаполнениеБухгалтерскойОтчетности.ПрименяетсяФСБУ25(Организация, ДатаКонцаПериодаОтчета));
		КонецЕсли;
		
		Если ПараметрыОтчета.СтруктураОтчета.ОФР.ИмяМакета = "ОФР_ЕНВД_2020Кв1"
		 ИЛИ ПараметрыОтчета.СтруктураОтчета.ОФР.ИмяМакета = "ОФР_НеЕНВД_2020Кв1" Тогда
			КонтекстВыполнения.Вставить("МакетыОФР", "61н_2020");
		Иначе
			КонтекстВыполнения.Вставить("МакетыОФР", "61н_2019");
		КонецЕсли;
		
		// Бухгалтерский баланс.
		Если ЗаполнятьБаланс Тогда
			КонтекстОтчета = Новый Структура;
			КонтекстВыполнения.Вставить("КонтекстОтчета", КонтекстОтчета);
			
			КонтекстОтчета.Вставить("СоставДополнительныхСтрокБаланс", ПараметрыОтчета.СоставДополнительныхСтрокБаланс);
			
			КонтекстОтчета.Вставить("Графа", "04");
			КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(ДатаКонцаПериодаОтчета, "ДФ = 'дд ММММ гггг'")+ " г.");
			КонтекстОтчета.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстОтчета.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафе(КонтекстВыполнения);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				КонтекстОтчета.Вставить("Графа", "05");
				КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(ДатаКонцаПредыдущегоГода, "ДФ = 'дд ММММ гггг'")+ " г.");
				КонтекстОтчета.Вставить("НачалоПериодаОтчета", ДатаНачалаПредыдущегоГода);
				КонтекстОтчета.Вставить("КонецПериодаОтчета", ДатаКонцаПредыдущегоГода);
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафе(КонтекстВыполнения);
				
				КонтекстОтчета.Вставить("Графа", "06");
				КонтекстОтчета.Вставить("ЗаголовокГрафы", "На " + Формат(ДатаКонцаГодаПредшествующегоПредыдущему, "ДФ = 'дд ММММ гггг'")+ " г.");
				КонтекстОтчета.Вставить("НачалоПериодаОтчета", ДатаНачалаГодаПредшествующегоПредыдущему);
				КонтекстОтчета.Вставить("КонецПериодаОтчета", ДатаКонцаГодаПредшествующегоПредыдущему);
				
				ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафе(КонтекстВыполнения);
				
			КонецЕсли;
			
			КонтекстВыполнения.Удалить("КонтекстОтчета");
			
		КонецЕсли;
		
		// Отчет о финансовых результатах.
		Если ЗаполнятьОФР Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			КонтекстВыполнения.Вставить("СоставДополнительныхСтрокОФР", ПараметрыОтчета.СоставДополнительныхСтрокОФР);
			КонтекстВыполнения.Вставить("ПрименениеЕНВД", ПараметрыОтчета.ПрименениеЕНВД);
			КонтекстВыполнения.Вставить("ОрганизацияПрименяетПБУ18",
				РегламентированнаяОтчетностьПереопределяемый.ПрименяетсяПБУ18(Организация, ДатаКонцаПериодаОтчета));
				
			ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_ОФР(КонтекстВыполнения);
			
		КонецЕсли;
		
		// Отчет об изменениях капитала.
		Если ЗаполнятьОИК Тогда
			КонтекстОтчета = Новый Структура;
			КонтекстВыполнения.Вставить("КонтекстОтчета", КонтекстОтчета);
			
			КонтекстОтчета.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстОтчета.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			
			ЗаполнитьФормаОтчета2011Кв4_ОИК(КонтекстВыполнения);
			
			КонтекстВыполнения.Удалить("КонтекстОтчета");
			
		КонецЕсли;
		
		// Отчет о движении денежных средств.
		Если ЗаполнятьОДДС Тогда
			СтрПериод           = "За " + ОписаниеПериода(ДатаНачалаПериодаОтчета, ДатаКонцаПериодаОтчета);
			СтрПериодПрошлыйГод = "За " + ОписаниеПериода(ДатаНачалаПериодаПредыдущегоГода, ДатаКонцаПериодаПредыдущегоГода);
			
			КонтекстВыполнения.Вставить("Графа", "03");
			КонтекстВыполнения.Вставить("ЗаголовокГрафы", СтрПериод);
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			ЗаполнитьФормаОтчета2011Кв4_ОДДС(КонтекстВыполнения);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				КонтекстВыполнения.Вставить("Графа", "04");
				КонтекстВыполнения.Вставить("ЗаголовокГрафы", СтрПериодПрошлыйГод);
				КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаПредыдущегоГода);
				КонтекстВыполнения.Вставить("КонецПериодаОтчета",  ДатаКонцаПериодаПредыдущегоГода);
				ЗаполнитьФормаОтчета2011Кв4_ОДДС(КонтекстВыполнения);
			КонецЕсли;
		КонецЕсли;
		
		// Отчет о целевом использовании средств
		Если ЗаполнятьОЦИПС Тогда
			
			ПериодыОтчета = Новый Структура;
			
			ПериодыОтчета.Вставить("ТекущийПериод", Новый Структура);
			ПериодыОтчета.ТекущийПериод.Вставить("Начало", ДатаНачалаПериодаОтчета);
			ПериодыОтчета.ТекущийПериод.Вставить("Конец",  ДатаКонцаПериодаОтчета);
			
			Если ЗаполнятьПредыдущиеПериоды Тогда
				ПериодыОтчета.Вставить("АналогичныйПериодПредыдущегоГода", Новый Структура);
				ПериодыОтчета.АналогичныйПериодПредыдущегоГода.Вставить("Начало", ДатаНачалаПериодаПредыдущегоГода);
				ПериодыОтчета.АналогичныйПериодПредыдущегоГода.Вставить("Конец",  ДатаКонцаПериодаПредыдущегоГода);
			КонецЕсли;
			
			ЗаполнитьФормаОтчета2019Кв1_ОЦИС(КонтекстВыполнения, ПериодыОтчета);
			
		КонецЕсли;
		
		// Пояснения 1.
		Если ЗаполнятьПояснения1 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5100и5110", ТаблицаЗначенийДопСтрок5100и5110);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5140и5150", ТаблицаЗначенийДопСтрок5140и5150);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5160и5170", ТаблицаЗначенийДопСтрок5160и5170);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5180и5190", ТаблицаЗначенийДопСтрок5180и5190);

			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения1(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 2.
		Если ЗаполнятьПояснения2 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5200и5210", ТаблицаЗначенийДопСтрок5200и5210);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5220и5230", ТаблицаЗначенийДопСтрок5220и5230);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5240и5250", ТаблицаЗначенийДопСтрок5240и5250);
			КонтекстВыполнения.Вставить("ТаблицаЗначенийДопСтрок5260", ТаблицаЗначенийДопСтрок5260);
			
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения2(КонтекстВыполнения);
			
		КонецЕсли;
		
		// Пояснения 4.
		Если ЗаполнятьПояснения4 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения4(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 5.
		Если ЗаполнятьПояснения5 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения5(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 6.
		Если ЗаполнятьПояснения6 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			КонтекстВыполнения.Вставить("ПрисутствуетСтрока5665", Контейнер.Пояснения6.Свойство("П000100566503"));
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения6(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 7.
		Если ЗаполнятьПояснения7 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения7(КонтекстВыполнения);
		КонецЕсли;
		
		// Пояснения 8.
		Если ЗаполнятьПояснения8 Тогда
			КонтекстВыполнения.Вставить("НачалоПериодаОтчета", ДатаНачалаПериодаОтчета);
			КонтекстВыполнения.Вставить("КонецПериодаОтчета", ДатаКонцаПериодаОтчета);
			ЗаполнениеБухгалтерскойОтчетностиПояснения.ЗаполнитьФормаОтчета2011Кв4_Пояснения8(КонтекстВыполнения);
		КонецЕсли;
		
		Для Каждого ЭлементРаздел Из КонтекстВыполнения.МногострочныеПоказатели Цикл
			Раздел = ЭлементРаздел.Ключ;
			МногострочныеЧасти = ЭлементРаздел.Значение;
			
			Если НЕ МногострочныеПоказатели.Свойство(Раздел) Тогда
				МногострочныеПоказатели.Вставить(Раздел, Новый Структура);
			КонецЕсли;
			
			Для Каждого ЭлементМСЧ Из МногострочныеЧасти Цикл
				ИдентификаторМСЧ = ЭлементМСЧ.Ключ;
				МСЧ = ЭлементМСЧ.Значение;
				
				Если МногострочныеПоказатели.Свойство(ИдентификаторМСЧ) Тогда
					МногострочныеПоказатели[Раздел].Вставить(ИдентификаторМСЧ, МСЧ);
				Иначе
					МногострочныеПоказатели[Раздел].Вставить(ИдентификаторМСЧ, МСЧ);
				КонецЕсли;
				
			КонецЦикла;
		КонецЦикла;
		
	КонецЦикла;
	
	// Дополнительные строки ОФР по номенклатурным группам и статьям затрат.
	Если ЗаполнятьОФР
	   И ПараметрыОтчета.Свойство("СоставДополнительныхСтрокОФР")
	   И ПараметрыОтчета.СоставДополнительныхСтрокОФР.Колонки.Найти("Существенность") <> Неопределено
	   И ВыводитьСведенияПоНоменклатурнымГруппам(ПараметрыОтчета, "ОФР") Тогда
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Кт_Дт();
		
		Запрос.УстановитьПараметр("Организации", ПолныйСписокОрганизаций);
		
		Запрос.УстановитьПараметр("НачПериодаОтч",  ДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериодаОтч",  ДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("НачПериодаПред", ДатаНачалаПериодаПредыдущегоГода);
		Если ЗаполнятьПредыдущиеПериоды Тогда
			Запрос.УстановитьПараметр("КонПериодаПред", ДатаКонцаПериодаПредыдущегоГода);
		Иначе
			// Интервал за который не может быть сведений.
			Запрос.УстановитьПараметр("КонПериодаПред", ДатаНачалаПериодаПредыдущегоГода - 1);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("СчетаПлюс",  СчетаИзСписка("90.01.1, 90.01.2"));
		Запрос.УстановитьПараметр("СчетаМинус", СчетаИзСписка("90.02.1, 90.02.2, 90.03, 90.04, 90.05"));
		Запрос.УстановитьПараметр("ВидСубконтоРазвертки", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.НоменклатурныеГруппы);
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21101", Запрос, "90.01.1, 90.03, 90.04, 90.05", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21102", Запрос, "90.01.2", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21201", Запрос, "90.02.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "21202", Запрос, "90.02.2", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2110", Запрос, "90.01.1, 90.03, 90.04, 90.05", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2120", Запрос, "90.02.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		КонецЕсли;
		
		Запрос = Новый Запрос;
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Дт_Кт_Субконто();
		
		Запрос.УстановитьПараметр("Организации", ПолныйСписокОрганизаций);
		
		Запрос.УстановитьПараметр("НачПериодаОтч",  ДатаНачалаПериодаОтчета);
		Запрос.УстановитьПараметр("КонПериодаОтч",  ДатаКонцаПериодаОтчета);
		Запрос.УстановитьПараметр("НачПериодаПред", ДатаНачалаПериодаПредыдущегоГода);
		Если ЗаполнятьПредыдущиеПериоды Тогда
			Запрос.УстановитьПараметр("КонПериодаПред", ДатаКонцаПериодаПредыдущегоГода);
		Иначе
			// Интервал за который не может быть сведений.
			Запрос.УстановитьПараметр("КонПериодаПред", ДатаНачалаПериодаПредыдущегоГода - 1);
		КонецЕсли;
		
		Запрос.УстановитьПараметр("ВидСубконтоРазвертки", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат);
		
		Запрос.УстановитьПараметр("Счета",  СчетаИзСписка("90.07.1, 90.07.2"));
		Запрос.УстановитьПараметр("КорСчета", МассивСчетовВИерархииИзСписка("44"));
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22101", Запрос, "90.07.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22102", Запрос, "90.07.2", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2210", Запрос, "90.07.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		КонецЕсли;
		
		Запрос.МенеджерВременныхТаблиц.Закрыть();
		Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		Запрос.Текст = ТекстЗапросаСведенийСчета90_Дт_Кт_Субконто();
		
		Запрос.УстановитьПараметр("Счета",  СчетаИзСписка("90.08.1, 90.08.2"));
		Запрос.УстановитьПараметр("КорСчета", МассивСчетовВИерархииИзСписка("20, 23, 25, 26"));
		Запрос.Выполнить();
		
		Если ПараметрыОтчета.ПрименениеЕНВД Тогда
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22201", Запрос, "90.08.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "22202", Запрос, "90.08.2", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		Иначе
			МногострочнаяЧасть = СведенияСчета90ПоСубконто(ПараметрыОтчета, "2220", Запрос, "90.08.1", "ОФР");
			ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, "ОФР");
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Ложь);
	
	РассчитанныеПоказатели.Свернуть("Раздел, Показатель", "Сумма");
	Для Каждого СтрокаПоказателя Из РассчитанныеПоказатели Цикл
		Контейнер[СтрокаПоказателя.Раздел].Вставить(СтрокаПоказателя.Показатель, СтрокаПоказателя.Сумма);
	КонецЦикла;
	
	Для Каждого ЭлементРаздел Из МногострочныеПоказатели Цикл
		Раздел = ЭлементРаздел.Ключ;
		МногострочныеЧасти = ЭлементРаздел.Значение;
		Для Каждого ЭлементМСЧ Из МногострочныеЧасти Цикл
			ИдентификаторМСЧ = ЭлементМСЧ.Ключ;
			МСЧ = ЭлементМСЧ.Значение;
			СвернутьТаблицуЗначенийДопСтрок(МСЧ);
			
			СтруктураСтроки = ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав[0];
			ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Очистить();
			ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Добавить(СтруктураСтроки);
			
			Для Инд = 0 По МСЧ.Количество() - 1 Цикл
				
				Если Инд >= 1 Тогда
					ПараметрыОтчета.СтруктураМногострочныхЧастей[ИдентификаторМСЧ].Состав.Добавить(СтруктураСтроки);
				КонецЕсли;
				
				Постфикс = "_" + Формат(Инд + 1, "ЧГ=0");
				Для Каждого Колонка Из МСЧ.Колонки Цикл
					Показатель = Колонка.Имя + Постфикс;
					Контейнер[Раздел].Вставить(Показатель, МСЧ[Инд][Колонка.Имя]);
				КонецЦикла;
			КонецЦикла;
			
		КонецЦикла;
	КонецЦикла;
	
	// Сведения счета 75.01 для вычета из авторасчета расчета стоимости чистых активов.
	ОборотыСчета75_01 = Новый Структура;
	ОборотыСчета75_01.Вставить("Графа04", 0);
	ОборотыСчета75_01.Вставить("Графа05", 0);
	ОборотыСчета75_01.Вставить("Графа06", 0);
	
	ТаблицаСведенийСчета75_01.Свернуть("Графа", "Сумма");
	Для Каждого Строка75_01 Из ТаблицаСведенийСчета75_01 Цикл
		ОборотыСчета75_01["Графа" + Строка75_01.Графа] = Строка75_01.Сумма;
	КонецЦикла;
	
	ВычетИзРасчетаАктивов1530 = Новый Структура;
	ВычетИзРасчетаАктивов1530.Вставить("Графа04", 0);
	ВычетИзРасчетаАктивов1530.Вставить("Графа05", 0);
	ВычетИзРасчетаАктивов1530.Вставить("Графа06", 0);
	
	ЗначенияВычетаИзРасчетаАктивов1530.Свернуть("Графа", "Сумма");
	Для Каждого СтрокаВычета Из ЗначенияВычетаИзРасчетаАктивов1530 Цикл
		ВычетИзРасчетаАктивов1530["Графа" + СтрокаВычета.Графа] = СтрокаВычета.Сумма;
	КонецЦикла;
	
	СтруктураДанных = Новый Структура;
	СтруктураДанных.Вставить("Контейнер", Контейнер);
	СтруктураДанных.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	СтруктураДанных.Вставить("СтруктураМногострочныхЧастей", ПараметрыОтчета.СтруктураМногострочныхЧастей);
	СтруктураДанных.Вставить("ОборотыСчета75_01", ОборотыСчета75_01); 
	СтруктураДанных.Вставить("ВычетИзРасчетаАктивов1530", ВычетИзРасчетаАктивов1530);
	
	ПоместитьВоВременноеХранилище(СтруктураДанных, ПараметрыОтчета.АдресВоВременномХранилище);
	
КонецПроцедуры

#Область ЗаполнениеОтчетовБО2011Кв4

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе(КонтекстВыполнения) Экспорт
	
	ИмяРаздела = "Баланс";
	
	Организация = КонтекстВыполнения.Организация;
	НачалоПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.НачалоПериодаОтчета;
	КонецПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	РассчитанныеПараметры = Новый Структура;
	КонтекстВыполнения.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	
	СчетаДляРасчета = "76.01.1, 76.03, 76.05, 76.06, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.41, 76.49, 76.К";
	СубконтоДляРасчета = "Контрагенты";
	
	СиО_Контрагенты = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_Контрагенты", СиО_Контрагенты);
	
	СчетаДляРасчета = "60.01, 60.21, 60.31, 62.01, 62.21, 62.31,
	                  |76.01.1, 76.03, 76.05, 76.06, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.К, 76.НА, 76.07.2";
	СубконтоДляРасчета = "Контрагенты, Договоры";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, "Лизинг, НеотфактурованныеПоставки");
	
	СиО_КонтрагентыДоговоры = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_КонтрагентыДоговоры", СиО_КонтрагентыДоговоры);
	
	СчетаДляРасчета = "68.01, 68.02, 68.03, 68.06, 68.07, 68.08, 68.09, 68.11, 68.12, 68.13, 68.15, 68.21, 68.34, 68.52,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7,
	                  |69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.11, 69.12";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_ВидыПлатежей = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_ВидыПлатежей", СиО_ВидыПлатежей);
	
	СчетаДляРасчета = "68.04.1, 68.10";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет, УровниБюджетов";
	
	СиО_ВидыПлатежейУровниБюджетов = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_ВидыПлатежейУровниБюджетов", СиО_ВидыПлатежейУровниБюджетов);
	
	СчетаДляРасчета = "70, 71, 73.03";
	СубконтоДляРасчета = "РаботникиОрганизаций";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_Работники = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_Работники", СиО_Работники);
	
	СчетаДляРасчета = "96.09";
	СубконтоДляРасчета = "Резервы";
	
	СиО_Резервы = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	КонтекстВыполнения.РассчитанныеПараметры.Вставить("СиО_Резервы", СиО_Резервы);
	
	ИдентификаторАвтозаполнения = КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения;
	
	ОбщиеИтогиПоСчетам = Новый Структура;
	ОбщиеИтогиПоСчетам.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	ОбщиеИтогиПоСчетам.Вставить("СиО_КонтрагентыДоговоры", СиО_КонтрагентыДоговоры);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Контрагенты", СиО_Контрагенты);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежейУровниБюджетов", СиО_ВидыПлатежейУровниБюджетов);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежей", СиО_ВидыПлатежей);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Работники", СиО_Работники);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Резервы", СиО_Резервы);
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ПараметрыСчетов = ПараметрыСчетов_Баланс2011Кв4();
	ПроцессорПоказателя.РассчитанныеЗначения = БухгалтерскиеИтоги_Баланс2011Кв4(Организация, КонецПериодаОтчета, ОбщиеИтогиПоСчетам);
	ПроцессорПоказателя.ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = Организация;
	ПроцессорПоказателя.ИмяРаздела = ИмяРаздела;
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	
	ДополнитьБухгалтерскиеИтогиПоВидамАктивов2011Кв4(ПроцессорПоказателя, КонтекстВыполнения);
	
	КонтекстВыполнения.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв1"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел1_2012Кв1(КонтекстВыполнения);
	ИначеЕсли ИдентификаторАвтозаполнения = "Баланс"
			ИЛИ ИдентификаторАвтозаполнения = "БалансНКО" Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел1_2011Кв4(КонтекстВыполнения);
	Иначе
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение бухгалтерской отчетности';
										|en = 'Fill in accounting reporting'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , ,
			НСтр("ru = 'Переданный идентификатор автозаполнения бухгалтерского баланса - """"';
				|en = 'Passed ID of balance sheet auto population - """"'") + ИдентификаторАвтозаполнения + """");
		ВызватьИсключение НСтр("ru = 'Неизвестный идентификатор алгоритма автозаполнения бухгалтерского баланса';
								|en = 'Unknown ID of balance sheet auto population algorithm '");
	КонецЕсли;
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2(КонтекстВыполнения);
	
	Если ИдентификаторАвтозаполнения = "Баланс"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв1"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел3(КонтекстВыполнения);
	ИначеЕсли ИдентификаторАвтозаполнения = "БалансНКО"
	      ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	      ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	      ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	      ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел3_НКО(КонтекстВыполнения);
	Иначе
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Заполнение бухгалтерской отчетности';
										|en = 'Fill in accounting reporting'", ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Ошибка, , ,
			НСтр("ru = 'Переданный идентификатор автозаполнения бухгалтерского баланса - """"';
				|en = 'Passed ID of balance sheet auto population - """"'") + ИдентификаторАвтозаполнения + """");
		ВызватьИсключение НСтр("ru = 'Неизвестный идентификатор алгоритма автозаполнения бухгалтерского баланса';
								|en = 'Unknown ID of balance sheet auto population algorithm '");
	КонецЕсли;
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел4(КонтекстВыполнения);
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("РассчитанныеПараметры");
	КонтекстВыполнения.Удалить("ПроцессорПоказателя");
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел1_2011Кв4(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1110";
	НаименованиеСтроки = "Нематериальные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11101;
	
	НомерСтроки = "11101";
	НаименованиеСтроки = "Нематериальные активы в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11102";
	НаименованиеСтроки = "Приобретение нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1120";
	НаименованиеСтроки = "Результаты исследований и разработок";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11201;
	
	НомерСтроки = "11201";
	НаименованиеСтроки = "Расходы на научно-исследовательские, опытно-конструкторские и технологические работы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11202";
	НаименованиеСтроки = "Выполнение научно-исследовательских, опытно-конструкторских и технологических работ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1130";
	НаименованиеСтроки = "Основные средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.04");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11301;
	
	НомерСтроки = "11301";
	НаименованиеСтроки = "Основные средства в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01 \ 01.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11302";
	НаименованиеСтроки = "Объекты недвижимости, права собственности на которые не зарегистрированы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.08");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01 \ 01.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11303";
	НаименованиеСтроки = "Оборудование к установке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11304";
	НаименованиеСтроки = "Приобретение земельных участков";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11305";
	НаименованиеСтроки = "Приобретение объектов природопользования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11306";
	НаименованиеСтроки = "Строительство объектов основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11307";
	НаименованиеСтроки = "Приобретение объектов основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11308";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1140";
	НаименованиеСтроки = "Доходные вложения в материальные ценности";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11401;
	
	НомерСтроки = "11401";
	НаименованиеСтроки = "Материальные ценности в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11402";
	НаименованиеСтроки = "Материальные ценности предоставленные во временное владение и пользование";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11403";
	НаименованиеСтроки = "Материальные ценности предоставленные во временное пользование";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.03");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11404";
	НаименованиеСтроки = "Прочие доходные вложения";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.04");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1150";
	НаименованиеСтроки = "Финансовые вложения";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.1");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11501;
	
	НомерСтроки = "11501";
	НаименованиеСтроки = "Паи";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.1");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1160";
	НаименованиеСтроки = "Отложенные налоговые активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 09");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1170";
	НаименованиеСтроки = "Прочие внеоборотные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.07");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11701;
	
	НомерСтроки = "11701";
	НаименованиеСтроки = "Перевод молодняка животных в основное стадо";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.06");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11702";
	НаименованиеСтроки = "Приобретение взрослых животных";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11703";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел1_2012Кв1(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;

	НомерСтроки = "1110";
	НаименованиеСтроки = "Нематериальные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.05");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11101;
	
	НомерСтроки = "11101";
	НаименованиеСтроки = "Нематериальные активы в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11102";
	НаименованиеСтроки = "Приобретение нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1120";
	НаименованиеСтроки = "Результаты исследований и разработок";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.08");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11201;
	
	НомерСтроки = "11201";
	НаименованиеСтроки = "Расходы на научно-исследовательские, опытно-конструкторские и технологические работы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 04.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11202";
	НаименованиеСтроки = "Выполнение научно-исследовательских, опытно-конструкторских и технологических работ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1130";
	НаименованиеСтроки = "Нематериальные поисковые активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.11");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1140";
	НаименованиеСтроки = "Материальные поисковые активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.12");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1150";
	НаименованиеСтроки = "Основные средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.04");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11501;
	
	НомерСтроки = "11501";
	НаименованиеСтроки = "Основные средства в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01 \ 01.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11502";
	НаименованиеСтроки = "Объекты недвижимости, права собственности на которые не зарегистрированы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.08");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.01 \ 01.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11503";
	НаименованиеСтроки = "Оборудование к установке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11504";
	НаименованиеСтроки = "Приобретение земельных участков";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11505";
	НаименованиеСтроки = "Приобретение объектов природопользования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11506";
	НаименованиеСтроки = "Строительство объектов основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11507";
	НаименованиеСтроки = "Приобретение объектов основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11508";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11509";
	НаименованиеСтроки = "Основные средства в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 01.03");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.03");
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1160";
	НаименованиеСтроки = "Доходные вложения в материальные ценности";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11601;
	
	НомерСтроки = "11601";
	НаименованиеСтроки = "Материальные ценности в организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11602";
	НаименованиеСтроки = "Материальные ценности предоставленные во временное владение и пользование";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11603";
	НаименованиеСтроки = "Материальные ценности предоставленные во временное пользование";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.03");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11604";
	НаименованиеСтроки = "Прочие доходные вложения";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 03.04");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 02.02 \ 03.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1170";
	НаименованиеСтроки = "Финансовые вложения";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.1");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11701;
	
	НомерСтроки = "11701";
	НаименованиеСтроки = "Паи";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.1");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1180";
	НаименованиеСтроки = "Отложенные налоговые активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 09");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1190";
	НаименованиеСтроки = "Прочие внеоборотные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.07");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 11901;
	
	НомерСтроки = "11901";
	НаименованиеСтроки = "Перевод молодняка животных в основное стадо";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.06");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11902";
	НаименованиеСтроки = "Приобретение взрослых животных";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 08.07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "11903";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2(КонтекстВыполнения)
	
	Если КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	   И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01' Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2_2015Кв1(КонтекстВыполнения);
	Иначе
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2_2011Кв4(КонтекстВыполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2_2011Кв4(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	СальдоИОборотыПоСчетам = КонтекстВыполнения.РассчитанныеПараметры.СальдоИОборотыПоСчетам;
	
	НоваяСтрока75_01 = КонтекстВыполнения.ТаблицаСведенийСчета75_01.Добавить();
	НоваяСтрока75_01.Графа = Графа;
	НоваяСтрока75_01.Сумма = СКД("75.01", СальдоИОборотыПоСчетам);
	
	ИдентификаторАвтозаполнения = КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения;
	
	УчетНа70ВедетсяСводно = КонтекстВыполнения.УчетНа70ВедетсяСводно;
	
	ЭтоБаланс2012 = ИдентификаторАвтозаполнения = "Баланс_2012Кв1" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3";
	
	СтрокаОтраженияСчета46 = "1210";
	СтрокаОтраженияСчета96 = "1260";
	
	СтрокаОтраженияСчета76_АВ = "1260";
	СтрокаОтраженияСчета76_ВА = "1550";
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4" Тогда
		СтрокаОтраженияСчета46 = "1260";
	КонецЕсли;
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета46 = "1230";
		СтрокаОтраженияСчета96 = "1230";
	КонецЕсли;
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета76_АВ = "1520";
		СтрокаОтраженияСчета76_ВА = "1230";
	КонецЕсли;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1210";
	НаименованиеСтроки = "Запасы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
	Если СтрокаОтраженияСчета46 = "1210" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12101;
	
	НомерСтроки = "12101";
	НаименованиеСтроки = "Материалы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12102";
	НаименованиеСтроки = "Брак в производстве";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12103";
	НаименованиеСтроки = "Товары отгруженные";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12104";
	НаименованиеСтроки = "Товары";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12105";
	НаименованиеСтроки = "Готовая продукция";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12106";
	НаименованиеСтроки = "Расходы на продажу";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1210" Тогда
		НомерСтроки = "12107";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
	КонецЕсли;
	
	НомерСтроки = "12108";
	НаименованиеСтроки = "Основное производство";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12109";
	НаименованиеСтроки = "Полуфабрикаты собственного производства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12110";
	НаименованиеСтроки = "Вспомогательные производства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12111";
	НаименованиеСтроки = "Обслуживающие производства и хозяйства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12112";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1220";
	НаименованиеСтроки = "Налог на добавленную стоимость по приобретенным ценностям";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 19.06");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12201;
	
	НомерСтроки = "12201";
	НаименованиеСтроки = "НДС по приобретенным ОС";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12202";
	НаименованиеСтроки = "НДС по приобретенным НМА";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12203";
	НаименованиеСтроки = "НДС по приобретенным материально-производственным запасам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12204";
	НаименованиеСтроки = "НДС по приобретенным услугам";
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12205";
	НаименованиеСтроки = "НДС, уплаченный при ввозе товаров на территорию РФ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12206";
	НаименованиеСтроки = "НДС по товарам, реализованным по ставке 0% (экспорт)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12207";
	НаименованиеСтроки = "НДС при строительстве ОС";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1230";
	НаименованиеСтроки = "Дебиторская задолженность";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.31");
	Если СтрокаОтраженияСчета76_ВА = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 76.ВА");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 62.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.31");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 63");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.04.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.04.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.13");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.6");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.7");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР 69.13");
	Если УчетНа70ВедетсяСводно Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 70");
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 70");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 71");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 73.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 75.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.25");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.35");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.39");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.49");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.26");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.36");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.К");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.07.2");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	Если СтрокаОтраженияСчета96 = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
	КонецЕсли;
	Если СтрокаОтраженияСчета46 = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12301;
	
	НомерСтроки = "12301";
	НаименованиеСтроки = "Расчеты с поставщиками и подрядчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.31");
		Если СтрокаОтраженияСчета76_ВА = "1230" Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "- СКК 76.ВА");
		КонецЕсли;
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12302";
	НаименованиеСтроки = "Расчеты с покупателями и заказчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 62.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.31");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 63");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12303";
	НаименованиеСтроки = "Расчеты по налогам и сборам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.04.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.04.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.07");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.08");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.13");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12304";
	НаименованиеСтроки = "Расчеты по социальному страхованию и обеспечению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.6");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.7");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР 69.13");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12310";
	НаименованиеСтроки = "Расчеты с персоналом по оплате труда";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если УчетНа70ВедетсяСводно Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 70");
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 70");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12305";
	НаименованиеСтроки = "Расчеты с подотчетными лицами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 71");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12306";
	НаименованиеСтроки = "Расчеты с персоналом по прочим операциям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 73.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12307";
	НаименованиеСтроки = "Расчеты по вкладам в уставный (складочный) капитал";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 75.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12308";
	НаименованиеСтроки = "Расчеты с разными дебиторами и кредиторами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.01.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.05");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.25");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.35");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.29");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.39");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.41");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.49");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.26");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.36");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.К");
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.07.2");;
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12309";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1230" Тогда
		НомерСтроки = "12311";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета96 = "1230" Тогда
		НомерСтроки = "12312";
		НаименованиеСтроки = "Оценочные обязательства";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "1240";
	НаименованиеСтроки = "Финансовые вложения";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 59");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.23");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12401;
	
	НомерСтроки = "12401";
	НаименованиеСтроки = "Акции";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.2");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12402";
	НаименованиеСтроки = "Долговые ценные бумаги";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 59");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12403";
	НаименованиеСтроки = "Предоставленные займы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12404";
	НаименованиеСтроки = "Вклады по договору простого товарищества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12405";
	НаименованиеСтроки = "Приобретенные права в рамках оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12406";
	НаименованиеСтроки = "Депозитные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12407";
	НаименованиеСтроки = "Депозитные счета (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1250";
	НаименованиеСтроки = "Денежные средства и денежные эквиваленты";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.21");
	Если ЭтоБаланс2012 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.04");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 51");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 52");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.24");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 57");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12501;
	
	НомерСтроки = "12501";
	НаименованиеСтроки ="Касса организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12502";
	НаименованиеСтроки ="Операционная касса";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12503";
	НаименованиеСтроки ="Касса организации (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12512";
	НаименованиеСтроки = "Касса по деятельности платежного агента";
	
	Если ЭтоБаланс2012 И ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12504";
	НаименованиеСтроки = "Расчетные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 51");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12505";
	НаименованиеСтроки = "Валютные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 52");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12506";
	НаименованиеСтроки = "Аккредитивы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12507";
	НаименованиеСтроки = "Чековые книжки";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12508";
	НаименованиеСтроки = "Прочие специальные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12509";
	НаименованиеСтроки = "Аккредитивы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12510";
	НаименованиеСтроки = "Прочие специальные счета (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.24");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12511";
	НаименованиеСтроки = "Переводы в пути";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 57");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1260";
	НаименованиеСтроки = "Прочие оборотные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.22");
	Если СтрокаОтраженияСчета76_АВ = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.АВ");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.ОТ");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.НА");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.07.9");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 94");
	Если СтрокаОтраженияСчета96 = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
	КонецЕсли;
	Если СтрокаОтраженияСчета46 = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12601;
	
	НомерСтроки = "12601";
	НаименованиеСтроки ="Акцизы по оплаченным материальным ценностям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.06");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12602";
	НаименованиеСтроки ="Денежные документы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12603";
	НаименованиеСтроки ="Денежные документы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12604";
	НаименованиеСтроки ="НДС по экспорту к возмещению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета76_АВ = "1260" Тогда
		НомерСтроки = "12605";
		НаименованиеСтроки ="НДС по авансам и предоплатам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.АВ");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "12606";
	НаименованиеСтроки ="НДС, начисленный по отгрузке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.ОТ");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12607";
	НаименованиеСтроки ="Расчеты по НДС при исполнении обязанностей налогового агента";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.НА");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12608";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12609";
	НаименованиеСтроки ="Недостачи и потери от порчи ценностей";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 94");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета96 = "1260" Тогда
		НомерСтроки = "12610";
		НаименованиеСтроки ="Оценочные обязательства";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	Иначе
		НомерСтроки = "12610";
		НаименованиеСтроки ="НДС по арендным обязательствам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.07.9");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1260" Тогда
		НомерСтроки = "12611";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел2_2015Кв1(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	СальдоИОборотыПоСчетам = КонтекстВыполнения.РассчитанныеПараметры.СальдоИОборотыПоСчетам;
	
	НоваяСтрока75_01 = КонтекстВыполнения.ТаблицаСведенийСчета75_01.Добавить();
	НоваяСтрока75_01.Графа = Графа;
	НоваяСтрока75_01.Сумма = СКД("75.01", СальдоИОборотыПоСчетам);
	
	ИдентификаторАвтозаполнения = КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения;
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	
	УчетНа70ВедетсяСводно = КонтекстВыполнения.УчетНа70ВедетсяСводно;
	
	ЭтоБаланс2012 = ИдентификаторАвтозаполнения = "Баланс_2012Кв1" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	            ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3";
	
	СтрокаОтраженияСчета46 = "1210";
	СтрокаОтраженияСчета96 = "1260";
	
	СтрокаОтраженияСчета76_АВ = "1260";
	СтрокаОтраженияСчета76_ВА = "1550";
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4" Тогда
		СтрокаОтраженияСчета46 = "1260";
	КонецЕсли;
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета46 = "1230";
		СтрокаОтраженияСчета96 = "1230";
	КонецЕсли;
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета76_АВ = "1520";
		СтрокаОтраженияСчета76_ВА = "1230";
	КонецЕсли;
	
	УчетС2018 = (КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета >= '2018-01-01');
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1210";
	НаименованиеСтроки = "Запасы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
	Если СтрокаОтраженияСчета46 = "1210" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12101;
	
	НомерСтроки = "12101";
	НаименованиеСтроки = "Материалы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 10");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.01");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12102";
	НаименованиеСтроки = "Брак в производстве";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 28");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12103";
	НаименованиеСтроки = "Товары отгруженные";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 45");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12104";
	НаименованиеСтроки = "Товары";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 41");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 15.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 16.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 16.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 42");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12105";
	НаименованиеСтроки = "Готовая продукция";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 43");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12106";
	НаименованиеСтроки = "Расходы на продажу";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 44");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1210" Тогда
		НомерСтроки = "12107";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
	КонецЕсли;
	
	НомерСтроки = "12108";
	НаименованиеСтроки = "Основное производство";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 20");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 14.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12109";
	НаименованиеСтроки = "Полуфабрикаты собственного производства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12110";
	НаименованиеСтроки = "Вспомогательные производства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12111";
	НаименованиеСтроки = "Обслуживающие производства и хозяйства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 29");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12112";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1220";
	НаименованиеСтроки = "Налог на добавленную стоимость по приобретенным ценностям";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 19.06");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12201;
	
	НомерСтроки = "12201";
	НаименованиеСтроки = "НДС по приобретенным ОС";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12202";
	НаименованиеСтроки = "НДС по приобретенным НМА";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12203";
	НаименованиеСтроки = "НДС по приобретенным материально-производственным запасам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12204";
	НаименованиеСтроки = "НДС по приобретенным услугам";
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12205";
	НаименованиеСтроки = "НДС, уплаченный при ввозе товаров на территорию РФ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12206";
	НаименованиеСтроки = "НДС по товарам, реализованным по ставке 0% (экспорт)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.07");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12207";
	НаименованиеСтроки = "НДС при строительстве ОС";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.08");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1230";
	НаименованиеСтроки = "Дебиторская задолженность";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.31");
	Если СтрокаОтраженияСчета76_ВА = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 76.ВА");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 62.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.31");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 63");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.01");
	Если ЭтоИП Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.21");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.04.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.04.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.13");
	Если ЭтоИП Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.14");
	КонецЕсли;
	Если УчетС2018 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.34");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.52");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.6");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.7");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР 69.13");
	Если УчетНа70ВедетсяСводно Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 70");
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 70");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 71");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 73.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 75.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.25");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.35");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.39");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 76.10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.49");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.26");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.36");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.К");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.07.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.13");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.14");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	Если СтрокаОтраженияСчета96 = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
	КонецЕсли;
	Если СтрокаОтраженияСчета46 = "1230" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12301;
	
	НомерСтроки = "12301";
	НаименованиеСтроки = "Расчеты с поставщиками и подрядчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 60.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККО_КонтрагентыДоговоры 60.31");
		Если СтрокаОтраженияСчета76_ВА = "1230" Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "- СКК 76.ВА");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12302";
	НаименованиеСтроки = "Расчеты с покупателями и заказчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 62.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДП_КонтрагентыДоговоры 62.31");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 63");
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12303";
	НаименованиеСтроки = "Расчеты по налогам и сборам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.01");
		Если ЭтоИП Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.21");
		КонецЕсли;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.04.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.04.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.07");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.08");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежейУровни 68.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.13");
		Если ЭтоИП Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.14");
		КонецЕсли;
		Если УчетС2018 Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.34");
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 68.52");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12304";
	НаименованиеСтроки = "Расчеты по социальному страхованию и обеспечению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.6");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.02.7");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.03.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.05.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.06.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_ВидыПлатежей 69.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР 69.13");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12310";
	НаименованиеСтроки = "Расчеты с персоналом по оплате труда";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если УчетНа70ВедетсяСводно Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 70");
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 70");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12305";
	НаименованиеСтроки = "Расчеты с подотчетными лицами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 71");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12306";
	НаименованиеСтроки = "Расчеты с персоналом по прочим операциям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 73.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 73.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12307";
	НаименованиеСтроки = "Расчеты по вкладам в уставный (складочный) капитал";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 75.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12308";
	НаименованиеСтроки = "Расчеты с разными дебиторами и кредиторами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.01.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.05");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.25");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.35");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.29");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.39");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Работники 76.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.14");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.41");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Контрагенты 76.49");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.26");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.36");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.К");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.07.2");
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12309";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1230" Тогда
		НомерСтроки = "12311";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета96 = "1230" Тогда
		НомерСтроки = "12312";
		НаименованиеСтроки = "Оценочные обязательства";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "12313";
	НаименованиеСтроки = "Расчеты с факторинговыми компаниями";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1240";
	НаименованиеСтроки = "Финансовые вложения";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.02");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 59");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.23");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12401;
	
	НомерСтроки = "12401";
	НаименованиеСтроки = "Акции";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.01.2");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12402";
	НаименованиеСтроки = "Долговые ценные бумаги";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.02");
		УчестьСоставляющую(ПроцессорПоказателя, "- СКК 59");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12403";
	НаименованиеСтроки = "Предоставленные займы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12404";
	НаименованиеСтроки = "Вклады по договору простого товарищества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12405";
	НаименованиеСтроки = "Приобретенные права в рамках оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 58.05");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12406";
	НаименованиеСтроки = "Депозитные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12407";
	НаименованиеСтроки = "Депозитные счета (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1250";
	НаименованиеСтроки = "Денежные средства и денежные эквиваленты";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.21");
	Если ЭтоБаланс2012 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.04");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 51");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 52");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.24");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 57");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12501;
	
	НомерСтроки = "12501";
	НаименованиеСтроки ="Касса организации";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12502";
	НаименованиеСтроки ="Операционная касса";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12503";
	НаименованиеСтроки ="Касса организации (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12512";
	НаименованиеСтроки = "Касса по деятельности платежного агента";
	
	Если ЭтоБаланс2012 И ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12504";
	НаименованиеСтроки = "Расчетные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 51");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12505";
	НаименованиеСтроки = "Валютные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 52");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12506";
	НаименованиеСтроки = "Аккредитивы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12507";
	НаименованиеСтроки = "Чековые книжки";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12508";
	НаименованиеСтроки = "Прочие специальные счета";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12509";
	НаименованиеСтроки = "Аккредитивы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12510";
	НаименованиеСтроки = "Прочие специальные счета (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 55.24");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12511";
	НаименованиеСтроки = "Переводы в пути";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 57");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1260";
	НаименованиеСтроки = "Прочие оборотные активы";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.23");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.22");
	Если СтрокаОтраженияСчета76_АВ = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.АВ");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.ОТ");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.НА");
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.07.9");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 94");
	Если СтрокаОтраженияСчета96 = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
	КонецЕсли;
	Если СтрокаОтраженияСчета46 = "1260" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
	КонецЕсли;
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 12601;
	
	НомерСтроки = "12601";
	НаименованиеСтроки ="Акцизы по оплаченным материальным ценностям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 19.06");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12602";
	НаименованиеСтроки ="Денежные документы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12603";
	НаименованиеСтроки ="Денежные документы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 50.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12604";
	НаименованиеСтроки ="НДС по экспорту к возмещению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 68.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета76_АВ = "1260" Тогда
		НомерСтроки = "12605";
		НаименованиеСтроки ="НДС по авансам и предоплатам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.АВ");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "12606";
	НаименованиеСтроки ="НДС, начисленный по отгрузке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.ОТ");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12607";
	НаименованиеСтроки ="Расчеты по НДС при исполнении обязанностей налогового агента";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_КонтрагентыДоговоры 76.НА");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12608";
	НаименованиеСтроки = "Расходы будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 97", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП);
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "12609";
	НаименованиеСтроки ="Недостачи и потери от порчи ценностей";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 94");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета96 = "1260" Тогда
		НомерСтроки = "12610";
		НаименованиеСтроки ="Оценочные резервы";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКДР_Резервы 96.09");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	Иначе
		НомерСтроки = "12610";
		НаименованиеСтроки ="НДС по арендным обязательствам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 76.07.9");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтрокаОтраженияСчета46 = "1260" Тогда
		НомерСтроки = "12611";
		НаименованиеСтроки = "Выполненные этапы по незавершенным работам";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 46");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел3(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	Вычитаемый = Истина;
	
	НомерСтроки = "1310";
	НаименованиеСтроки = "Уставный капитал (складочный капитал, уставный фонд, вклады товарищей)";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 80");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1320";
	НаименованиеСтроки = "Собственные акции, выкупленные у акционеров";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКД 81");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, Вычитаемый);
	
	НомерСтроки = "1340";
	НаименованиеСтроки = "Переоценка внеоборотных активов";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 13401;
	
	НомерСтроки = "13401";
	НаименованиеСтроки = "Переоценка основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83.01.1");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "13402";
	НаименованиеСтроки = "Переоценка НМА";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83.01.2");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "13403";
	НаименованиеСтроки = "Переоценка прочих внеоборотных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83.01.3");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1350";
	НаименованиеСтроки = "Добавочный капитал (без переоценки)";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКК 83.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1360";
	НаименованиеСтроки = "Резервный капитал";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 82");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 13601;
	
	НомерСтроки = "13601";
	НаименованиеСтроки = "Резервы, образованные в соответствии с законодательством";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 82.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "13602";
	НаименованиеСтроки = "Резервы, образованные в соответствии с учредительными документами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 82.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1370";
	НаименованиеСтроки = "Нераспределенная прибыль (непокрытый убыток)";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 84");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 84");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 99");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 99");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел3_НКО(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1310";
	НаименованиеСтроки = "Паевой фонд";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 80");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1350";
	НаименованиеСтроки = "Целевые средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 86");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 84");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 84");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 99");
	УчестьСоставляющую(ПроцессорПоказателя, "- СКД 99");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1360";
	НаименованиеСтроки = "Фонд недвижимого и особо ценного движимого имущества";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 83");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1370";
	НаименованиеСтроки = "Резервный и иные целевые фонды";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 82");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел4(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1410";
	НаименованиеСтроки = "Заемные средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.23");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 14101;
	
	НомерСтроки = "14101";
	НаименованиеСтроки = "Долгосрочные кредиты";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "14102";
	НаименованиеСтроки = "Долгосрочные займы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "14103";
	НаименованиеСтроки = "Долгосрочные кредиты (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "14104";
	НаименованиеСтроки = "Долгосрочные займы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1420";
	НаименованиеСтроки = "Отложенные налоговые обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 77");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерСтроки = "1450";
	НаименованиеСтроки = "Прочие обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.07.1");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5(КонтекстВыполнения)
	
	Если КонтекстВыполнения.Свойство("КонецОтчетногоПериода")
	   И КонтекстВыполнения.КонецОтчетногоПериода >= '2015-01-01' Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5_2015Кв1(КонтекстВыполнения);
	Иначе
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5_2011Кв4(КонтекстВыполнения);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5_2011Кв4(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	УчетНа70ВедетсяСводно = КонтекстВыполнения.УчетНа70ВедетсяСводно;
	
	ИдентификаторАвтозаполнения = КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения;
	
	СтрокаОтраженияСчета76_АВ = "1260";
	СтрокаОтраженияСчета76_ВА = "1550";
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета76_АВ = "1520";
		СтрокаОтраженияСчета76_ВА = "1230";
	КонецЕсли;
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1510";
	НаименованиеСтроки = "Заемные средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.24");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15101;
	
	НомерСтроки = "15101";
	НаименованиеСтроки = "Краткосрочные кредиты";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15102";
	НаименованиеСтроки = "Краткосрочные займы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15103";
	НаименованиеСтроки = "Проценты по краткосрочным кредитам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15104";
	НаименованиеСтроки = "Проценты по долгосрочным кредитам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15105";
	НаименованиеСтроки = "Проценты по краткосрочным займам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15106";
	НаименованиеСтроки = "Проценты по долгосрочным займам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15107";
	НаименованиеСтроки = "Краткосрочные кредиты (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15108";
	НаименованиеСтроки = "Краткосрочные займы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15109";
	НаименованиеСтроки = "Проценты по краткосрочным кредитам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15110";
	НаименованиеСтроки = "Проценты по долгосрочным кредитам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15111";
	НаименованиеСтроки = "Проценты по краткосрочным займам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.24");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15112";
	НаименованиеСтроки = "Проценты по долгосрочным займам (в валюте)";
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.24");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1520";
	НаименованиеСтроки = "Кредиторская задолженность";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.31");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 60.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.31");
	
	Если СтрокаОтраженияСчета76_АВ = "1520" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "- СКД 76.АВ");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.04.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.04.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.13");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.6");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.7");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР 69.13");
	Если УчетНа70ВедетсяСводно Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 70");
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 70");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 71");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 73.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 75.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.25");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.35");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.26");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.36");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.39");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.49");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.07.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.К");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.Н");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15201;
	
	НомерСтроки = "15201";
	НаименованиеСтроки = "Расчеты с поставщиками и подрядчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.31");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 60.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15202";
	НаименованиеСтроки = "Расчеты с покупателями и заказчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.31");
		Если СтрокаОтраженияСчета76_АВ = "1520" Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "- СКД 76.АВ");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15203";
	НаименованиеСтроки = "Расчеты по налогам и сборам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.04.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.04.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.07");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.08");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.13");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.42");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15204";
	НаименованиеСтроки = "Расчеты по социальному страхованию и обеспечению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.6");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.7");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР 69.13");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15205";
	НаименованиеСтроки = "Расчеты с персоналом по оплате труда";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если УчетНа70ВедетсяСводно Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 70");
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 70");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15206";
	НаименованиеСтроки = "Расчеты с подотчетными лицами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 71");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15209";
	НаименованиеСтроки = "Расчеты с персоналом по прочим операциям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 73.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15207";
	НаименованиеСтроки = "Задолженность участникам (учредителям) по выплате доходов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 75.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15208";
	НаименованиеСтроки = "Расчеты с разными дебиторами и кредиторами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.05");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.25");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.35");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.26");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.36");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.01.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.29");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.39");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.41");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.49");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.07.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.К");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.Н");
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки, "Раздел5");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1530";
	НаименованиеСтроки = "Доходы будущих периодов";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	НомерВРасшифровке = 15301;
	
	Если ИдентификаторАвтозаполнения = "БалансНКО"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	ИначеЕсли ИдентификаторАвтозаполнения = "Баланс"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв1"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 86");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
		НомерСтроки = "15301";
		НаименованиеСтроки = "Целевое финансирование";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 86");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	Иначе
		ЗаписьЖурналаРегистрации("Заполнение бухгалтерской отчетности", УровеньЖурналаРегистрации.Ошибка, , ,
			"Переданный идентификатор автозаполнения бухгалтерского баланса - """ + ИдентификаторАвтозаполнения + """");
		ВызватьИсключение "Неизвестный идентификатор алгоритма автозаполнения бухгалтерского баланса";
		
	КонецЕсли;
	
	НомерСтроки = "15302";
	НаименованиеСтроки = "Доходы, полученные в счет будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15303";
	НаименованиеСтроки = "Безвозмездные поступления";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15304";
	НаименованиеСтроки = "Предстоящие поступления по недостачам, выявленным за прошлые годы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15305";
	НаименованиеСтроки = "Разница между суммой, подлежащей взысканию с виновных лиц, и балансовой стоимостью по недостачам ценностей";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1540";
	НаименованиеСтроки = "Оценочные обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Резервы 96.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 96.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15401;
	
	НомерСтроки = "15401";
	НаименованиеСтроки = "Оценочные обязательства по вознаграждениям работников";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 96.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15402";
	НаименованиеСтроки = "Резервы предстоящих расходов прочие";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Резервы 96.09");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1550";
	НаименованиеСтроки = "Прочие обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если СтрокаОтраженияСчета76_ВА = "1550" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.ВА");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.НА");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_БалансПоГрафе_Раздел5_2015Кв1(КонтекстВыполнения)
	
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	УчетНа70ВедетсяСводно = КонтекстВыполнения.УчетНа70ВедетсяСводно;
	
	ИдентификаторАвтозаполнения = КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения;
	ЭтоИП = НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(КонтекстВыполнения.Организация);
	
	СтрокаОтраженияСчета76_АВ = "1260";
	СтрокаОтраженияСчета76_ВА = "1550";
	
	Если ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		СтрокаОтраженияСчета76_АВ = "1520";
		СтрокаОтраженияСчета76_ВА = "1230";
	КонецЕсли;
	
	УчетС2018 = (КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета >= '2018-01-01');
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	
	НомерСтроки = "1510";
	НаименованиеСтроки = "Заемные средства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.24");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15101;
	
	НомерСтроки = "15101";
	НаименованиеСтроки = "Краткосрочные кредиты";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15102";
	НаименованиеСтроки = "Краткосрочные займы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.03");

		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15103";
	НаименованиеСтроки = "Проценты по краткосрочным кредитам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15104";
	НаименованиеСтроки = "Проценты по долгосрочным кредитам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15105";
	НаименованиеСтроки = "Проценты по краткосрочным займам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15106";
	НаименованиеСтроки = "Проценты по долгосрочным займам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.04");

		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15107";
	НаименованиеСтроки = "Краткосрочные кредиты (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.21");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15108";
	НаименованиеСтроки = "Краткосрочные займы (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.23");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15109";
	НаименованиеСтроки = "Проценты по краткосрочным кредитам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15110";
	НаименованиеСтроки = "Проценты по долгосрочным кредитам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.22");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15111";
	НаименованиеСтроки = "Проценты по краткосрочным займам (в валюте)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 66.24");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15112";
	НаименованиеСтроки = "Проценты по долгосрочным займам (в валюте)";
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 67.24");

		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1520";
	НаименованиеСтроки = "Кредиторская задолженность";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.31");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 60.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.22");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.31");
	Если СтрокаОтраженияСчета76_АВ = "1520" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "- СКД 76.АВ");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.01");
	Если ЭтоИП Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.21");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.04.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.04.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.07");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.08");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.10");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.13");
	Если ЭтоИП Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.14");
	КонецЕсли;
	Если УчетС2018 Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.34");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.52");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.32");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.42");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.01");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.6");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.7");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.3");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.4");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.5");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.11");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.12");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР 69.13");
	Если УчетНа70ВедетсяСводно Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 70");
	Иначе
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 70");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 71");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 73.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 75.02");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.03");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.05");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.25");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.35");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.06");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.26");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.36");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.01.1");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.21");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.04");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.29");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.39");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.41");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.49");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.07.2");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.К");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.Н");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки);
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15201;
	
	НомерСтроки = "15201";
	НаименованиеСтроки = "Расчеты с поставщиками и подрядчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККП_КонтрагентыДоговоры 60.31");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 60.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15202";
	НаименованиеСтроки = "Расчеты с покупателями и заказчиками";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.22");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 62.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКДО_КонтрагентыДоговоры 62.31");
		Если СтрокаОтраженияСчета76_АВ = "1520" Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "- СКД 76.АВ");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15203";
	НаименованиеСтроки = "Расчеты по налогам и сборам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.01");
		Если ЭтоИП Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.21");
		КонецЕсли;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.02");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.04.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.04.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.07");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.08");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежейУровни 68.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.13");
		Если ЭтоИП Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.14");
		КонецЕсли;
		Если УчетС2018 Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.34");
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 68.52");
		КонецЕсли;
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.32");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 68.42");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15204";
	НаименованиеСтроки = "Расчеты по социальному страхованию и обеспечению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.01");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.6");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.02.7");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.03.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.05.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.3");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.4");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.06.5");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.11");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_ВидыПлатежей 69.12");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР 69.13");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15205";
	НаименованиеСтроки = "Расчеты с персоналом по оплате труда";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если УчетНа70ВедетсяСводно Тогда
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 70");
		Иначе
			УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 70");
		КонецЕсли;
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15206";
	НаименованиеСтроки = "Расчеты с подотчетными лицами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 71");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15209";
	НаименованиеСтроки = "Расчеты с персоналом по прочим операциям";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 73.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15207";
	НаименованиеСтроки = "Задолженность участникам (учредителям) по выплате доходов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 75.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15208";
	НаименованиеСтроки = "Расчеты с разными дебиторами и кредиторами";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.03");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.05");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.25");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.35");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.06");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.26");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.36");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.01.1");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.21");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.04");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.09");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.29");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.39");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Работники 76.10");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.41");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Контрагенты 76.49");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.07.2");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.К");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.Н");
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2011Кв4Баланс(ПроцессорПоказателя, НаименованиеСтроки, "Раздел5");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1530";
	НаименованиеСтроки = "Доходы будущих периодов";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	НомерВРасшифровке = 15301;
	
	Если ИдентификаторАвтозаполнения = "БалансНКО"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв1"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_2"
	 ИЛИ ИдентификаторАвтозаполнения = "БалансНКО_2012Кв4_3" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	ИначеЕсли ИдентификаторАвтозаполнения = "Баланс"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв1"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_2"
	      ИЛИ ИдентификаторАвтозаполнения = "Баланс_2012Кв4_3" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 86");
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
		НомерСтроки = "15301";
		НаименованиеСтроки = "Целевое финансирование";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
			УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 86");
			
			УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
			
		КонецЕсли;
		
	Иначе
		ЗаписьЖурналаРегистрации("Заполнение бухгалтерской отчетности", УровеньЖурналаРегистрации.Ошибка, , ,
			"Переданный идентификатор автозаполнения бухгалтерского баланса - """ + ИдентификаторАвтозаполнения + """");
		ВызватьИсключение "Неизвестный идентификатор алгоритма автозаполнения бухгалтерского баланса";
		
	КонецЕсли;
	
	НомерСтроки = "15302";
	НаименованиеСтроки = "Доходы, полученные в счет будущих периодов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15303";
	НаименованиеСтроки = "Безвозмездные поступления";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.02");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15304";
	НаименованиеСтроки = "Предстоящие поступления по недостачам, выявленным за прошлые годы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.03");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15305";
	НаименованиеСтроки = "Разница между суммой, подлежащей взысканию с виновных лиц, и балансовой стоимостью по недостачам ценностей";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 98.04");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1540";
	НаименованиеСтроки = "Оценочные обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Резервы 96.09");
	УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 96.01");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
	НомерВРасшифровке = 15401;
	
	НомерСтроки = "15401";
	НаименованиеСтроки = "Оценочные обязательства по вознаграждениям работников";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 96.01");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "15402";
	НаименованиеСтроки = "Резервы предстоящих расходов прочие";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_Резервы 96.09");
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
		
	КонецЕсли;
	
	НомерСтроки = "1550";
	НаименованиеСтроки = "Прочие обязательства";
	
	УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если СтрокаОтраженияСчета76_ВА = "1550" Тогда
		УчестьСоставляющую(ПроцессорПоказателя, "+ СКК 76.ВА");
	КонецЕсли;
	УчестьСоставляющую(ПроцессорПоказателя, "+ СККР_КонтрагентыДоговоры 76.НА");
	
	УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_ОФР(КонтекстВыполнения) Экспорт
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ИспользуютсяМакетыЕНВД = КонтекстВыполнения.ПрименениеЕНВД;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ИмяРаздела = "ФормаОтчета";
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода  = КонецМесяца(ДобавитьМесяц(КонецПериодаОтчета, -12));
	
	Если НачалоМесяца(КонецПериодаОтчета) = НачалоПериодаОтчета Тогда
		// Описание периода одного месяца.
		ОписаниеПериода = Формат(КонецПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		ОписаниеПериодаПрошлогоГода = Формат(КонецПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + "г.";
	Иначе
		// Описание диапазона месяцев.
		ОписаниеПериода = Формат(НачалоПериодаОтчета, "ДФ = 'ММММ гггг'") + " - "
		                + Формат(КонецПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		ОписаниеПериодаПрошлогоГода = Формат(НачалоПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + " - "
		                            + Формат(КонецПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + "г.";
	КонецЕсли;
	
	ЗаголовокДатаОтчетногоПериода = "За " + ОписаниеПериода;
	ЗаголовокДатаОтчетногоПериодаПрошлогоГода = "За " + ОписаниеПериодаПрошлогоГода;
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_ОФР_ПоГрафе("04", ЗаголовокДатаОтчетногоПериода, КонтекстВыполнения, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_ОФР_ПоГрафе("05", ЗаголовокДатаОтчетногоПериодаПрошлогоГода, КонтекстВыполнения, НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2011Кв4_ОФР_ПоГрафе(Графа, ЗаголовокГрафы, КонтекстВыполнения, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ИмяРаздела = "ФормаОтчета";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ИспользуютсяМакетыЕНВД = КонтекстВыполнения.ПрименениеЕНВД;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ОрганизацияПрименяетЕНВД = РегламентированнаяОтчетность.ЭтоПлательщикЕНВД(
		Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ОрганизацияПрименяетУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, КонецПериодаОтчета);
	
	ВедетсяУчетКурсовыхРазницВУЕ = (НачалоПериодаОтчета < '2015-01-01');
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация", Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", КонецПериодаОтчета);
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.СоставДополнительныхСтрокОПУ;
	
	ОрганизацияПрименяетПБУ18 = НЕ ОрганизацияПрименяетУСН И
		РегламентированнаяОтчетностьПереопределяемый.ПрименяетсяПБУ18(Организация, ПривестиКДате(КонецПериодаОтчета));
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода", КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	Обороты91ПоВПДР = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоВПДР(НастройкиПолученияБухитогов);
	КО_91_01_ВПДР = Обороты91ПоВПДР.КО_91_01_ВПДР;
	ДО_91_02_ВПДР = Обороты91ПоВПДР.ДО_91_02_ВПДР;
	ДО_91_02__68_02_ВПДР = Обороты91ПоВПДР.ДО_91_02__68_02_ВПДР;
	ДО_91_02__76_ОТ_ВПДР = Обороты91ПоВПДР.ДО_91_02__76_ОТ_ВПДР;
	
	Обороты91ПоПереоценке = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценке(НастройкиПолученияБухитогов);
	КО_91_01__010304_ПереоценкаВнеоборотныхАктивов = Обороты91ПоПереоценке.КО_91_01__010304_ПереоценкаВнеоборотныхАктивов;
	КО_91_01__0205_ПереоценкаВнеоборотныхАктивов   = Обороты91ПоПереоценке.КО_91_01__0205_ПереоценкаВнеоборотныхАктивов;
	ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов = Обороты91ПоПереоценке.ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов;
	ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов   = Обороты91ПоПереоценке.ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов;
	
	Обороты91ПоКурсовымРазницамВУЕ = Новый Структура("КО_91_01__ВУЕ, ДО_91_02__ВУЕ", 0, 0);
	Если НЕ ВедетсяУчетКурсовыхРазницВУЕ Тогда
		Обороты91ПоКурсовымРазницамВУЕ = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоКурсовымРазницамВУЕ(НастройкиПолученияБухитогов);
	КонецЕсли;
	
	Обороты99_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыСчета99_01ПоАналитике(НастройкиПолученияБухитогов);
	
	КО_99_01_ЧрезвычайныеДоходыРасходы = Обороты99_01[Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы].КО;
	ДО_99_01_ЧрезвычайныеДоходыРасходы = Обороты99_01[Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы].ДО;
	
	ДО_99_01_НалогНаПрибыль   = Обороты99_01[Перечисления.ПрибылиИУбытки.НалогНаПрибыль].ДО;
	ДО_99_01_НалоговыеСанкции = Обороты99_01[Перечисления.ПрибылиИУбытки.НалоговыеСанкции].ДО;
	
	НастройкиПолученияБухитогов.Вставить("Счет",    МассивСчетовВИерархииИзСписка("99.01.1"));
	
	КорСубконто = Новый Массив;
	КорСубконто.Добавить(Новый Структура("ВидСубконто, Отбор", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет, Перечисления.ВидыПлатежейВГосБюджет.Налог));
	НастройкиПолученияБухитогов.Вставить("КорСубконто", КорСубконто);
	
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка("68.04.1"));
	ОБ_99_01_1__68_04_1_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка("68.12"));
	ОБ_99_01_1__68_12_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Удалить("Счет");
	НастройкиПолученияБухитогов.Удалить("КорСчет");
	НастройкиПолученияБухитогов.Удалить("КорСубконто");
	
	НомерСтроки = "2110";
	НаименованиеСтроки = "Выручка";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	КО_90_01 = КО("90.01", СальдоИОборотыПоСчетам);
	ДО_90_03 = ДО("90.03", СальдоИОборотыПоСчетам);
	ДО_90_04 = ДО("90.04", СальдоИОборотыПоСчетам);
	ДО_90_05 = ДО("90.05", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = КО_90_01 - ДО_90_03 - ДО_90_04 - ДО_90_05;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("90.01").Код, КО_90_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.03").Код, -ДО_90_03, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.03")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.04").Код, -ДО_90_04, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.04")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.05").Код, -ДО_90_05, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.05")));
	
	НомерСтроки = "2120";
	НаименованиеСтроки = "Себестоимость продаж";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_02 = ДО("90.02", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_02;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02").Код, ДО_90_02, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02")));
	
	НомерСтроки = "2210";
	НаименованиеСтроки = "Коммерческие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_07 = ДО("90.07", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_07;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07").Код, ДО_90_07, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07")));
	
	НомерСтроки = "2220";
	НаименованиеСтроки = "Управленческие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_08 = ДО("90.08", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_08;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08").Код, ДО_90_08, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08")));
	
	Если ИспользуютсяМакетыЕНВД Тогда
		
		НомерСтроки = "21101";
		НаименованиеСтроки = "Выручка по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_90_01_1 = КО("90.01.1", СальдоИОборотыПоСчетам);
		ДО_90_03   = ДО("90.03", СальдоИОборотыПоСчетам);
		ДО_90_04   = ДО("90.04", СальдоИОборотыПоСчетам);
		ДО_90_05   = ДО("90.05", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_90_01_1 - ДО_90_03 - ДО_90_04 - ДО_90_05;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " +  Счет("90.01.1").Код, КО_90_01_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.01.1")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.03").Код, -ДО_90_03, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.03")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.04").Код, -ДО_90_04, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.04")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.05").Код, -ДО_90_05, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.05")));
		
		НомерСтроки = "21102";
		НаименованиеСтроки = "Выручка по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_90_01_2 = КО("90.01.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_90_01_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("90.01.2").Код, КО_90_01_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.1")));
		
		НомерСтроки = "21201";
		НаименованиеСтроки = "Себестоимость продаж по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_02_1 = ДО("90.02.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_02_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02.1").Код, ДО_90_02_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.1")));
		
		НомерСтроки = "21202";
		НаименованиеСтроки = "Себестоимость продаж по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_02_2 = ДО("90.02.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_02_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02.2").Код, ДО_90_02_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.2")));
		
		НомерСтроки = "22101";
		НаименованиеСтроки = "Коммерческие расходы по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_07_1 = ДО("90.07.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_07_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07.1").Код, ДО_90_07_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07.1")));
		
		НомерСтроки = "22102";
		НаименованиеСтроки = "Коммерческие расходы по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_07_2 = ДО("90.07.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_07_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07.2").Код, ДО_90_07_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07.2")));
		
		НомерСтроки = "22201";
		НаименованиеСтроки = "Управленческие расходы по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_08_1 = ДО("90.08.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_08_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08.1").Код, ДО_90_08_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08.1")));
		
		НомерСтроки = "22202";
		НаименованиеСтроки = "Управленческие  расходы по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_08_2 = ДО("90.08.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_08_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08.2").Код, ДО_90_08_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08.2")));
		
	КонецЕсли;
	
	НомерСтроки = "2310";
	НаименованиеСтроки = "Доходы от участия в других организациях";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.УчастиеВДругихОрганизациях
	                   + КО_91_01_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях
	                   + КО_91_01_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "УчастиеВДругихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	НомерВРасшифровке = 23101;
	
	НомерСтроки = "23101";
	НаименованиеСтроки = "Доходы (расходы), связанные с участием в других организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23101") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.УчастиеВДругихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "УчастиеВДругихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23102";
	НаименованиеСтроки = "Долевое участие в иностранных организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23102") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23103";
	НаименованиеСтроки = "Долевое участие в российских организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23103") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2320";
	НаименованиеСтроки = "Проценты к получению";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыКПолучениюУплате
	                   + КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагам
	                   + КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "ПроцентыКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	НомерВРасшифровке = 23201;
	
	НомерСтроки = "23201";
	НаименованиеСтроки = "Проценты к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23202";
	НаименованиеСтроки = "Проценты по государственным ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23202") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;

	НомерСтроки = "23203";
	НаименованиеСтроки = "Проценты по государственным ценным бумагам по ставке 0%";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23203") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2330";
	НаименованиеСтроки = "Проценты к уплате";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыКПолучениюУплате
	                   + ДО_91_02_ВПДР.ПроцентыНачисленныеПоСт269;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	ИмяВПДР = "ПроцентыКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыНачисленныеПоСт269";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23301;
	
	НомерСтроки = "23301";
	НаименованиеСтроки = "Проценты к уплате";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23301") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001023301" + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПроцентыКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23302";
	НаименованиеСтроки = "Проценты, начисленные в соответствии со статьей 269 НК РФ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23302") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыНачисленныеПоСт269;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПроцентыНачисленныеПоСт269";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2340";
	НаименованиеСтроки = "Прочие доходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
	                   + КО_91_01_ВПДР.ЛиквидацияОсновныхСредств
	                   + КО_91_01_ВПДР.РеализацияНематериальныхАктивов - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов
	                   + КО_91_01_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__68_02_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОбъектовСтроительства
	                   + КО_91_01_ВПДР.РеализацияПрочегоИмущества - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
	                   + КО_91_01_ВПДР.РеализацияИмущественныхПравКромеПраваТребования - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
	                   + КО_91_01_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
	                   + КО_91_01_ВПДР.РеализацияЦенныхБумаг
	                   + КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок
	                   + КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
	                   + КО_91_01_ВПДР.СдачаИмуществаВАрендуИлиСубаренду - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
	                   + КО_91_01_ВПДР.ОтчисленияВОценочныеРезервы
	                   + КО_91_01_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
	                   + КО_91_01_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы
	                   + КО_91_01_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
	                   + КО_91_01_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет
	                   + КО_91_01_ВПДР.ВозмещениеУбытковКПолучениюУплате
	                   + КО_91_01_ВПДР.КурсовыеРазницы
	                   + КО_91_01_ВПДР.КурсовыеРазницыПоРасчетамВУЕ
	                   + КО_91_01_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
	                   + КО_91_01_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав
	                   + КО_91_01_ВПДР.ПрочиеВнереализационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
	                   + КО_91_01_ВПДР.ВосстановлениеАмортизационнойПремии
	                   + КО_91_01_ВПДР.ИзлишкиПриИнвентаризации
	                   + КО_99_01_ЧрезвычайныеДоходыРасходы
	                   + КО_91_01__010304_ПереоценкаВнеоборотныхАктивов - ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов
	                   + КО_91_01_ВПДР.КорректировкаПрибылиДоРыночныхЦен - ДО_91_02__68_02_ВПДР.КорректировкаПрибылиДоРыночныхЦен;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "РеализацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ЛиквидацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияНематериальныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОбъектовСтроительства";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПрочегоИмущества";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияЦенныхБумаг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ОтчисленияВОценочныеРезервы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВосстановлениеАмортизационнойПремии";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ИзлишкиПриИнвентаризации";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 99.01 /субконто ""Чрезвычайные доходы (расходы)""/", КО_99_01_ЧрезвычайныеДоходыРасходы, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", КО_91_01__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "01, 03, 04", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "02, 05", ИмяВПДР));
	
	ИмяВПДР = "КорректировкаПрибылиДоРыночныхЦен";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23401;
	
	НомерСтроки = "23401";
	НаименованиеСтроки = "Доходы, связанные с реализацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23401") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23402";
	НаименованиеСтроки = "Доходы, связанные с ликвидацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23402") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ЛиквидацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ЛиквидацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23403";
	НаименованиеСтроки = "Доходы, связанные с реализацией нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23403") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияНематериальныхАктивов
		                   - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияНематериальныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23426";
	НаименованиеСтроки = "Доходы, связанные с реализацией объектов строительства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ИмяВПДР = "РеализацияОбъектовСтроительства";
		ЗначениеПоказателя = КО_91_01_ВПДР[ИмяВПДР]
		                   - ДО_91_02__76_ОТ_ВПДР[ИмяВПДР]
		                   - ДО_91_02__68_02_ВПДР[ИмяВПДР];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23404";
	НаименованиеСтроки = "Доходы, связанные с реализацией прочего имущества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23404") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПрочегоИмущества
		                   - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПрочегоИмущества";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23405";
	НаименованиеСтроки = "Доходы, связанные с реализацией права требования как оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23405") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23406";
	НаименованиеСтроки = "Доходы, связанные с реализацией права до наступления платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23406") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23407";
	НаименованиеСтроки = "Доходы, связанные с реализацией права после наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23407") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23408";
	НаименованиеСтроки = "Доходы, связанные с реализацией имущественных прав, кроме права требования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23408") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23409";
	НаименованиеСтроки = "Доходы, связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23409") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23410";
	НаименованиеСтроки = "Доходы, связанные с реализацией ценных бумаг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23410") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияЦенныхБумаг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияЦенныхБумаг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23411";
	НаименованиеСтроки = "Доходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23411") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23412";
	НаименованиеСтроки = "Доходы по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23412") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23413";
	НаименованиеСтроки = "Доходы, связанные со сдачей имущества в аренду (субаренду)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23413") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
		                   - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23414";
	НаименованиеСтроки = "Доходы в виде восстановленных оценочных резервов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23414") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОтчисленияВОценочныеРезервы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОтчисленияВОценочныеРезервы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23415";
	НаименованиеСтроки = "Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23415") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23416";
	НаименованиеСтроки = "Прочие операционные доходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23416") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23417";
	НаименованиеСтроки = "Штрафы, пени, неустойки к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23417") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
		                   - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23418";
	НаименованиеСтроки = "Прибыль прошлых лет";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23418") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23419";
	НаименованиеСтроки = "Возмещение убытков к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23419") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ВозмещениеУбытковКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23420";
	НаименованиеСтроки = "Курсовые разницы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23420") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		КО_91_01__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.КО_91_01__ВУЕ;
		
		ЗначениеПоказателя = КО_91_01_ВПДР.КурсовыеРазницы
		                   - ?(НЕ ВедетсяУчетКурсовыхРазницВУЕ, КО_91_01__ВУЕ, 0);
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "КурсовыеРазницы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		
		Если НЕ ВедетсяУчетКурсовыхРазницВУЕ Тогда
			ТекстРасшифровки = "Обороты по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
			                 + " в корреспонденции со счетами %1"
			                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
			СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
			ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
			ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "-", ТекстРасшифровки, -КО_91_01__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "23421";
	НаименованиеСтроки = "Курсовые разницы по расчетам в у.е.";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23421") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если ВедетсяУчетКурсовыхРазницВУЕ Тогда
			ЗначениеПоказателя = КО_91_01_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
			
		Иначе
			КО_91_01__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.КО_91_01__ВУЕ;
			
			ЗначениеПоказателя = КО_91_01__ВУЕ + КО_91_01_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ТекстРасшифровки = "Обороты по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
			                 + " в корреспонденции со счетами %1"
			                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
			СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
			ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
			ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ТекстРасшифровки, КО_91_01__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
			
			ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "23422";
	НаименованиеСтроки = "Доходы в виде списанной кредиторской задолженности";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23422") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23423";
	НаименованиеСтроки = "Доходы, связанные с переоценкой внеоборотных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23423") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01__010304_ПереоценкаВнеоборотныхАктивов
		                   - ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", КО_91_01__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "01, 03, 04", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "02, 05", ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23424";
	НаименованиеСтроки = "Прочие внереализационные доходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23424") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрочиеВнереализационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23425";
	НаименованиеСтроки = "Корректировка прибыли до рыночных цен";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23425") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.КорректировкаПрибылиДоРыночныхЦен
		                   - ДО_91_02__68_02_ВПДР.КорректировкаПрибылиДоРыночныхЦен;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "КорректировкаПрибылиДоРыночныхЦен";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2350";
	НаименованиеСтроки = "Прочие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_91_02_ВПДР.УчастиеВДругихОрганизациях
	                   + ДО_91_02_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях
	                   + ДО_91_02_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях
	                   + ДО_91_02_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств
	                   + ДО_91_02_ВПДР.ЛиквидацияОсновныхСредств
	                   + ДО_91_02_ВПДР.РеализацияНематериальныхАктивов - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов
	                   + ДО_91_02_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__68_02_ВПДР.РеализацияОбъектовСтроительства
	                   + ДО_91_02_ВПДР.РеализацияПрочегоИмущества - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
	                   + ДО_91_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
	                   + ДО_91_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
	                   + ДО_91_02_ВПДР.РеализацияЦенныхБумаг
	                   + ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок
	                   + ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
	                   + ДО_91_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
	                   + ДО_91_02_ВПДР.ОтчисленияВОценочныеРезервы
	                   + ДО_91_02_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
	                   + ДО_91_02_ВПДР.РасходыНаУслугиБанков
	                   + ДО_91_02_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы
	                   + ДО_91_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
	                   + ДО_91_02_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет
	                   + ДО_91_02_ВПДР.ВозмещениеУбытковКПолучениюУплате
	                   + ДО_91_02_ВПДР.КурсовыеРазницы
	                   + ДО_91_02_ВПДР.КурсовыеРазницыПоРасчетамВУЕ
	                   + ДО_91_02_ВПДР.НалогиИСборы
	                   + ДО_91_02_ВПДР.ПремияПокупателю
	                   + ДО_91_02_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
	                   + ДО_91_02_ВПДР.НДСПоСписаннойКредиторскойЗадолженности
	                   + ДО_91_02_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав
	                   + ДО_91_02_ВПДР.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд
	                   + ДО_91_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
	                   + ДО_91_02_ВПДР.РасходыОтСниженияСтоимостиАктивов
	                   + ДО_91_02_ВПДР.ПрочиеКосвенныеРасходы - ДО_91_02__68_02_ВПДР.ПрочиеКосвенныеРасходы
	                   + ДО_99_01_ЧрезвычайныеДоходыРасходы
	                   + ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов - КО_91_01__0205_ПереоценкаВнеоборотныхАктивов
	                   + ДО_91_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам - ДО_91_02__68_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	ИмяВПДР = "УчастиеВДругихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ЛиквидацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияНематериальныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОбъектовСтроительства";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПрочегоИмущества";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияЦенныхБумаг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ОтчисленияВОценочныеРезервы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыНаУслугиБанков";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "НалогиИСборы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПремияПокупателю";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "НДСПоСписаннойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыОтСниженияСтоимостиАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеКосвенныеРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 99.01 /субконто ""Чрезвычайные доходы (расходы)""/", ДО_99_01_ЧрезвычайныеДоходыРасходы, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "01, 03, 04", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -КО_91_01__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "02, 05", ИмяВПДР));
	
	ИмяВПДР = "ПрочиеУбыткиПриравненныеКВнереализационнымРасходам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23501;
	
	НомерСтроки = "23501";
	НаименованиеСтроки = "Расходы, связанные с участием в других организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23501") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.УчастиеВДругихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "УчастиеВДругихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23502";
	НаименованиеСтроки = "Расходы, связанные с участием в российских организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23502") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23503";
	НаименованиеСтроки = "Расходы, связанные с участием в иностранных организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23503") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23504";
	НаименованиеСтроки = "Расходы, связанные с реализацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23504") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23505";
	НаименованиеСтроки = "Расходы, связанные с ликвидацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23505") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ЛиквидацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ЛиквидацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23506";
	НаименованиеСтроки = "Расходы, связанные с реализацией нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23506") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияНематериальныхАктивов
		                   - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияНематериальныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23534";
	НаименованиеСтроки = "Расходы, связанные с реализацией объектов строительства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ИмяВПДР = "РеализацияОбъектовСтроительства";
		ЗначениеПоказателя = ДО_91_02_ВПДР[ИмяВПДР]
		                   - ДО_91_02__76_ОТ_ВПДР[ИмяВПДР]
		                   - ДО_91_02__68_02_ВПДР[ИмяВПДР];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23507";
	НаименованиеСтроки = "Расходы, связанные с реализацией прочего имущества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23507") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПрочегоИмущества
		                   - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПрочегоИмущества";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23508";
	НаименованиеСтроки = "Расходы, связанный с реализацией права требования как оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23508") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23509";
	НаименованиеСтроки = "Расходы, связанные с реализацией права требования до наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23509") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23510";
	НаименованиеСтроки = "Расходы, связанные с реализацией права требования после наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23510") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23511";
	НаименованиеСтроки = "Расходы, связанные с реализацией имущественных прав, кроме права требования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23511") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23512";
	НаименованиеСтроки = "Расходы, связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23512") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23513";
	НаименованиеСтроки = "Расходы, связанные с реализацией ценных бумаг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23513") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияЦенныхБумаг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияЦенныхБумаг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23514";
	НаименованиеСтроки = "Расходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23514") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23515";
	НаименованиеСтроки = "Расходы по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23515") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23516";
	НаименованиеСтроки = "Расходы, связанные со сдачей имущества в аренду (субаренду)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23516") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
		                   - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23517";
	НаименованиеСтроки = "Расходы в виде образованных оценочных резервов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23517") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОтчисленияВОценочныеРезервы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОтчисленияВОценочныеРезервы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23518";
	НаименованиеСтроки = "Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23518") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23519";
	НаименованиеСтроки = "Расходы на услуги банков";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23519") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РасходыНаУслугиБанков;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РасходыНаУслугиБанков";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23520";
	НаименованиеСтроки = "Прочие операционные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23520") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеОперационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23521";
	НаименованиеСтроки = "Штрафы, пени, неустойки к уплате";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23521") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
		                   - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23522";
	НаименованиеСтроки = "Убытки прошлых лет";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23522") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрибыльУбытокПрошлыхЛет
		                   - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23523";
	НаименованиеСтроки = "Курсовые разницы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23523") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ДО_91_02__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.ДО_91_02__ВУЕ;
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.КурсовыеРазницы
		                   - ?(НЕ ВедетсяУчетКурсовыхРазницВУЕ, ДО_91_02__ВУЕ, 0);
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "КурсовыеРазницы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
		Если НЕ ВедетсяУчетКурсовыхРазницВУЕ Тогда
			ТекстРасшифровки = "Обороты по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
			                 + " в корреспонденции со счетами %1"
			                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
			СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
			ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
			ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ТекстРасшифровки, -ДО_91_02__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "23524";
	НаименованиеСтроки = "Курсовые разницы по расчетам в у.е.";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23524") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если ВедетсяУчетКурсовыхРазницВУЕ Тогда
			ЗначениеПоказателя = ДО_91_02_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
			
		Иначе
			ДО_91_02__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.ДО_91_02__ВУЕ;
			
			ЗначениеПоказателя = ДО_91_02__ВУЕ + ДО_91_02_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ТекстРасшифровки = "Обороты по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
			                 + " в корреспонденции со счетами %1"
			                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
			СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
			ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
			ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ТекстРасшифровки, ДО_91_02__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
			
			ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "23525";
	НаименованиеСтроки = "Налоги и сборы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23525") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.НалогиИСборы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "НалогиИСборы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
	КонецЕсли;
	
	НомерСтроки = "23526";
	НаименованиеСтроки = "Премия, выплаченная покупателю";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23526") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПремияПокупателю;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПремияПокупателю";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23527";
	НаименованиеСтроки = "Расходы в виде списанной дебиторской задолженности";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23527") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
		                   + ДО_91_02_ВПДР.НДСПоСписаннойКредиторскойЗадолженности;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
		ИмяВПДР = "НДСПоСписаннойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23528";
	НаименованиеСтроки = "Расходы, связанные с безвозмездным получением имущества, работ, услуг или имущественных прав";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23528") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23529";
	НаименованиеСтроки = "Расходы по передаче товаров (работ, услуг) безвозмездно и для собственных нужд";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23529") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23530";
	НаименованиеСтроки = "Прочие внереализационные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23530") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23531";
	НаименованиеСтроки = "Прочие косвенные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23531") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеКосвенныеРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеКосвенныеРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеКосвенныеРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23532";
	НаименованиеСтроки = "Расходы, связанные с переоценкой внеоборотных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23532") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов
		                   - КО_91_01__0205_ПереоценкаВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "01, 03, 04", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -КО_91_01__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "02, 05", ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23533";
	НаименованиеСтроки = "Прочие убытки, приравненные к внереализационным расходам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23533") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам
		                   - ДО_91_02__68_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеУбыткиПриравненныеКВнереализационнымРасходам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2410";
	НаименованиеСтроки = "Текущий налог на прибыль";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если ОрганизацияПрименяетПБУ18 Тогда
		ОБ_68_04_2__68_04_1 = ОБ("68.04.2", "68.04.1", ОборотыМеждуСчетами);
		ОБ_68_04_1__68_04_2 = ОБ("68.04.1", "68.04.2", ОборотыМеждуСчетами);
		
		ЗначениеПоказателя = ОБ_68_04_2__68_04_1 - ОБ_68_04_1__68_04_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"!ОБ " + Счет("68.04.2").Код + " " + Счет("68.04.1").Код,
			ОБ_68_04_2__68_04_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("68.04.1")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!ОБ " + Счет("68.04.1").Код + " " + Счет("68.04.2").Код,
			-ОБ_68_04_1__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("68.04.2")));
		
	ИначеЕсли ОрганизацияПрименяетУСН Тогда
		ЗначениеПоказателя = ОБ_99_01_1__68_12_Налог;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот с кредита счета 68.12 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
			ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01.1"), ОтборПоАналитике));
		
	Иначе
		ЗначениеПоказателя = ОБ_99_01_1__68_04_1_Налог;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот с кредита счета 68.04.1 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
			ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
		
	КонецЕсли;
	
	НомерСтроки = "2421";
	НаименованиеСтроки = "в т. ч. постоянные налоговые обязательства (активы)";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если ОрганизацияПрименяетПБУ18 Тогда
		ОБ_99_02_3__68_04_2 = ОБ("99.02.3", "68.04.2", ОборотыМеждуСчетами);
		ОБ_68_04_2__99_02_3 = ОБ("68.04.2", "99.02.3", ОборотыМеждуСчетами);
		
		ЗначениеПоказателя = ОБ_68_04_2__99_02_3 - ОБ_99_02_3__68_04_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"!ОБ " + Счет("68.04.2").Код + " " +Счет("99.02.3").Код,
			ОБ_68_04_2__99_02_3, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("99.02.3")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!ОБ " + Счет("99.02.3").Код + " " + Счет("68.04.2").Код,
			-ОБ_99_02_3__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.3"), Счет("68.04.2")));
		
	Иначе
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
		
	КонецЕсли;
	
	НомерСтроки = "2430";
	НаименованиеСтроки = "Изменение отложенных налоговых обязательств";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если ОрганизацияПрименяетПБУ18 Тогда
		ОБ_77__68_04_2 = ОБ("77", "68.04.2", ОборотыМеждуСчетами);
		ОБ_68_04_2__77 = ОБ("68.04.2", "77", ОборотыМеждуСчетами);
		
		ЗначениеПоказателя = ОБ_68_04_2__77 - ОБ_77__68_04_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " +  Счет("68.04.2").Код + " " +Счет("77").Код, ОБ_68_04_2__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("77")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("77").Код + " " + Счет("68.04.2").Код, -ОБ_77__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("68.04.2")));
		
	Иначе
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
		
	КонецЕсли;
	
	НомерСтроки = "2450";
	НаименованиеСтроки = "Изменение отложенных налоговых активов";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	Если ОрганизацияПрименяетПБУ18 Тогда
		ОБ_09__68_04_2 = ОБ("09", "68.04.2", ОборотыМеждуСчетами);
		ОБ_68_04_2__09 = ОБ("68.04.2", "09", ОборотыМеждуСчетами);
		
		ЗначениеПоказателя = ОБ_09__68_04_2 - ОБ_68_04_2__09;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("09").Код + " " + Счет("68.04.2").Код, ОБ_09__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("68.04.2")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("68.04.2").Код + " " + Счет("09").Код, -ОБ_68_04_2__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("09")));
		
	Иначе
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
		
	КонецЕсли;
	
	КодСтроки = "2460";
	НаименованиеСтроки = "Прочее";
	
	ИмяОбластиПоказателя = "П000100" + КодСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + КодСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ОБ_99_01__09 = ОБ("99.01", "09", ОборотыМеждуСчетами);
	ОБ_77__99_01 = ОБ("77", "99.01", ОборотыМеждуСчетами);
	
	ОБ_77__99_02_4 = ОБ("77", "99.02.4", ОборотыМеждуСчетами);
	ОБ_99_02_4__77 = ОБ("99.02.4", "77", ОборотыМеждуСчетами);
	
	ОБ_99_02_4__09 = ОБ("99.02.4", "09", ОборотыМеждуСчетами);
	ОБ_09__99_02_4 = ОБ("09", "99.02.4", ОборотыМеждуСчетами);
	
	ДО_99_09     = ДО("99.09", СальдоИОборотыПоСчетам);
	КО_99_09     = КО("99.09", СальдоИОборотыПоСчетам);
	ОБ_68__99_09 = ОБ("68", "99.09", ОборотыМеждуСчетами);
	
	Если ОрганизацияПрименяетУСН Тогда
		ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
		                   - ОБ_99_01_1__68_12_Налог
		                   + ДО_99_01_НалоговыеСанкции
		                   + ДО_99_09 - (КО_99_09 - ОБ_68__99_09)
		                   + ОБ_99_01__09 - ОБ_77__99_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
			ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
			-ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01.1"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалоговыеСанкции + """/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ДО " + Счет("99.09").Код,
			ДО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!КО " + Счет("99.09").Код,
			-КО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ОБ " + Счет("68").Код + " " + Счет("99.09").Код,
			ОБ_68__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68"), Счет("99.09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ОБ " + Счет("99.01").Код + " " + Счет("09").Код,
			ОБ_99_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!ОБ " + Счет("77").Код + " " + Счет("99.01").Код,
			-ОБ_77__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.01")));
		
	Иначе
		ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
		                   - ОБ_99_01_1__68_04_1_Налог
		                   + ДО_99_01_НалоговыеСанкции
		                   - ОБ_77__99_02_4 + ОБ_99_02_4__09
		                   + ДО_99_09 - КО_99_09 + ОБ_68__99_09
		                   + ОБ_99_01__09 - ОБ_77__99_01;
		Если НачалоПериодаОтчета >= '2016-01-01' Тогда
			ЗначениеПоказателя = ЗначениеПоказателя + ОБ_99_02_4__77 - ОБ_09__99_02_4;
		КонецЕсли;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
			ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
			-ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалоговыеСанкции + """/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!ОБ " + Счет("77").Код + " " + Счет("99.02.4").Код,
			-ОБ_77__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.02.4")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ОБ " + Счет("99.02.4").Код + " " + Счет("09").Код,
			ОБ_99_02_4__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ДО " + Счет("99.09").Код,
			ДО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!КО " + Счет("99.09").Код,
			-КО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ОБ " + Счет("68").Код + " " + Счет("99.09").Код,
			ОБ_68__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68"), Счет("99.09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
			"!ОБ " + Счет("99.01").Код + " " + Счет("09").Код,
			ОБ_99_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
			"!ОБ " + Счет("77").Код + " " + Счет("99.01").Код,
			-ОБ_77__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.01")));
		
		Если НачалоПериодаОтчета >= '2016-01-01' Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+",
				"!ОБ " + Счет("99.02.4").Код + " " + Счет("77").Код,
				ОБ_99_02_4__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"!ОБ " + Счет("09").Код + " " + Счет("99.02.4").Код,
				-ОБ_09__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("99.02.4")));
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерВРасшифровке = 24601;
	
	КодСтроки = "24601";
	НаименованиеСтроки = "Налоги, уплачиваемые в связи с применением специальных налоговых режимов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если ОрганизацияПрименяетУСН Тогда
			Если ОрганизацияПрименяетЕНВД Тогда
				ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
				                   - ОБ_99_01_1__68_12_Налог;
				
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
				
				ОтборПоАналитике = Новый Соответствие;
				ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
					"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
					ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
				
				ОтборПоАналитике = Новый Соответствие;
				ОтборПоАналитике.Вставить("КорСубконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
					"Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
					-ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01.1"), Счет("68.12"), ОтборПоАналитике));
				
			Иначе
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
				
			КонецЕсли;
			
		Иначе
			ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
			                   - ОБ_99_01_1__68_04_1_Налог;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
				"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
				ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
				-ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	КодСтроки = "24602";
	НаименованиеСтроки = "Штрафные санкции и пени за нарушение налогового и иного законодательства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_99_01_НалоговыеСанкции;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто ""Причитающиеся налоговые санкции""/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
	КонецЕсли;
	
	КодСтроки = "24603";
	НаименованиеСтроки = "Пересчет отложенных налоговых активов и обязательств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		СтрокаАвтозаполняется = НачалоПериодаОтчета >= '2016-01-01'
		                      И НЕ ОрганизацияПрименяетУСН;
		
		Если СтрокаАвтозаполняется Тогда
			ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
			ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			ЗначениеПоказателя = ОБ_99_02_4__77 - ОБ_09__99_02_4 + ОБ_99_02_4__09 - ОБ_77__99_02_4;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("77").Код,
				ОБ_99_02_4__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("09").Код + " " + Счет("99.02.4").Код,
				-ОБ_09__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("99.02.4")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("09").Код,
				ОБ_99_02_4__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("77").Код + " " + Счет("99.02.4").Код,
				-ОБ_77__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.02.4")));
			
		Иначе
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Показатели строки 2510 и строк расшифровки показателей строки 2510 рассчитываются только при составлении годовой отчетности.
	Если КонецПериодаОтчета = КонецГода(КонецПериодаОтчета) Тогда
		
		НомерСтроки = "2510";
		НаименованиеСтроки = "Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль (убыток) периода";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_83_01 = КО("83.01", СальдоИОборотыПоСчетам);
		ДО_83_01 = ДО("83.01", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_83_01 - ДО_83_01;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+","!КО " + Счет("83.01").Код, КО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-","!ДО " + Счет("83.01").Код, -ДО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
		
		НомерВРасшифровке = 25101;
		
		ОБ_01_01__83_01_1 = ОБ("01.01", "83.01.1", ОборотыМеждуСчетами);
		ОБ_83_01_1__02_01 = ОБ("83.01.1", "02.01", ОборотыМеждуСчетами);
		ОБ_83_01_1__01_01 = ОБ("83.01.1", "01.01", ОборотыМеждуСчетами);
		ОБ_02_01__83_01_1 = ОБ("02.01", "83.01.1", ОборотыМеждуСчетами);
		
		ОБ_04_01__83_01_2 = ОБ("04.01", "83.01.2", ОборотыМеждуСчетами);
		ОБ_83_01_2__05    = ОБ("83.01.2", "05", ОборотыМеждуСчетами);
		ОБ_83_01_2__04_01 = ОБ("83.01.2", "04.01", ОборотыМеждуСчетами);
		ОБ_05__83_01_2    = ОБ("05", "83.01.2", ОборотыМеждуСчетами);
		
		НомерСтроки = "25101";
		НаименованиеСтроки = "Результат от переоценки основных средств, не включаемый в чистую прибыль (убыток) периода";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока25101") Тогда
			ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
			ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			ЗначениеПоказателя = ОБ_01_01__83_01_1 - ОБ_83_01_1__02_01 - ОБ_83_01_1__01_01 + ОБ_02_01__83_01_1;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+","!ОБ " + Счет("01.01").Код + " " + Счет("83.01.1").Код, ОБ_01_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("01.01"), Счет("83.01.1")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, -ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.1"), Счет("02.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.01").Код, -ОБ_83_01_1__01_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.1"), Счет("01.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("83.01.1").Код, ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("02.01"), Счет("83.01.1")));
		КонецЕсли;
		
		НомерСтроки = "25102";
		НаименованиеСтроки = "Результат от переоценки нематериальных активов, не включаемый в чистую прибыль (убыток) периода";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока25102") Тогда
			ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
			ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			ЗначениеПоказателя = ОБ_04_01__83_01_2 - ОБ_83_01_2__05 - ОБ_83_01_2__04_01 + ОБ_05__83_01_2;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+","!ОБ " + Счет("04.01").Код + " " + Счет("83.01.2").Код, ОБ_04_01__83_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("04.01"), Счет("83.01.2")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.2").Код + " " + Счет("05").Код, -ОБ_83_01_2__05, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.2"), Счет("05")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.2").Код + " " + Счет("04.01").Код, -ОБ_83_01_2__04_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.2"), Счет("04.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("05").Код + " " + Счет("83.01.2").Код, ОБ_05__83_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("05"), Счет("83.01.2")));
		КонецЕсли;
		
	Иначе
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001002510" + Графа, 0);
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001025101" + Графа, 0);
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001025102" + Графа, 0);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_ОИК(КонтекстВыполнения) Экспорт
	
	ИмяРаздела = "ОИК";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	НачалоПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	ДатаНачалаПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	ДатаКонцаПериодаПредыдущегоГода = КонецГода(ДатаНачалаПериодаПредыдущегоГода);
	
	ДатаНачалаПериодаГодаПредшествующегоПредыдущему = ДобавитьМесяц(НачалоПериодаОтчета, -24);
	ДатаКонцаПериодаГодаПредшествующегоПредыдущему = КонецГода(ДатаНачалаПериодаГодаПредшествующегоПредыдущему);
	
	ЗаголовкиГрафПодраздела1 = Новый Соответствие;
	ЗаголовкиГрафПодраздела1.Вставить("03", "Уставный капитал");
	ЗаголовкиГрафПодраздела1.Вставить("04", "Собственные акции, выкупленные у акционеров");
	ЗаголовкиГрафПодраздела1.Вставить("05", "Добавочный капитал");
	ЗаголовкиГрафПодраздела1.Вставить("06", "Резервный капитал");
	ЗаголовкиГрафПодраздела1.Вставить("07", "Нераспределенная прибыль (непокрытый убыток)");
	
	ЗаголовкиГрафПодраздела2 = Новый Соответствие;
	ЗаголовкиГрафПодраздела2.Вставить("03", "На " + Формат(ДатаКонцаПериодаГодаПредшествующегоПредыдущему, "ДЛФ=DD"));
	ЗаголовкиГрафПодраздела2.Вставить("04", "Изменения капитала за " + Формат(ДатаКонцаПериодаПредыдущегоГода, "ДФ=yyyy") + " г. - за счет чистой прибыли (убытка)");
	ЗаголовкиГрафПодраздела2.Вставить("06", "На " + Формат(ДатаКонцаПериодаПредыдущегоГода, "ДЛФ=DD"));
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация", Организация);
	
	РассчитанныеПараметры = Новый Структура;
	РассчитанныеПараметры.Вставить("ЗаголовкиГрафПодраздела1", ЗаголовкиГрафПодраздела1);
	
	КонтекстВыполнения.Вставить("РассчитанныеПараметры", РассчитанныеПараметры);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", КонтекстВыполнения.Организация);
	
	ЗаполнятьГодПредыдущий = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	ЗаполнятьГодПредшествующийПредыдущему = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	
	Если ЗаполнятьГодПредшествующийПредыдущему Тогда
		НастройкиПолученияБухитогов.Вставить("НачалоПериода", ДатаНачалаПериодаГодаПредшествующегоПредыдущему);
		НастройкиПолученияБухитогов.Вставить("КонецПериода",  ДатаКонцаПериодаГодаПредшествующегоПредыдущему);
		
		СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
		
		ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", ДатаНачалаПериодаГодаПредшествующегоПредыдущему);
		ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", ДатаКонцаПериодаГодаПредшествующегоПредыдущему);
		
		СКК_80 = СКК("80", СальдоИОборотыПоСчетам);
		СКД_81 = СКД("81", СальдоИОборотыПоСчетам);
		СКК_83 = СКК("83", СальдоИОборотыПоСчетам);
		СКК_82 = СКК("82", СальдоИОборотыПоСчетам);
		СКК_84 = СКК("84", СальдоИОборотыПоСчетам);
		СКД_84 = СКД("84", СальдоИОборотыПоСчетам);
		
		// Подраздел 1.
		
		НомерСтроки = "3100";
		НаименованиеСтроки = "Величина капитала на " + Формат(ДатаКонцаПериодаГодаПредшествующегоПредыдущему, "ДЛФ=DD");
		
		Графа = "03";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
		
		ЗначениеПоказателя = СКК_80;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("80").Код, СКК_80, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("80")));
		
		Графа = "04";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
		
		ЗначениеПоказателя = СКД_81;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКД " + Счет("81").Код, СКД_81, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("81")));
		
		Графа = "05";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
		
		ЗначениеПоказателя = СКК_83;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("83").Код, СКК_83, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83")));
		
		Графа = "06";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
		
		ЗначениеПоказателя = СКК_82;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("82").Код, СКК_82, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("82")));
		
		Графа = "07";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
		
		ЗначениеПоказателя = СКК_84 - СКД_84;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		
		// Подраздел 2.
		
		Графа = "03";
		НаименованиеГрафы = "На " + Формат(ДатаКонцаПериодаГодаПредшествующегоПредыдущему, "ДЛФ=DD");
		
		НомерСтроки = "3400";
		НаименованиеСтроки = "Капитал всего до корректировок";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СКК_80 - СКД_81 + СКК_82 + СКК_83 + СКК_84 - СКД_84;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("80").Код, СКК_80, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("80")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("81").Код, -СКД_81, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("81")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("82").Код, СКК_82, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("82")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("83").Код, СКК_83, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		
		НомерСтроки = "3401";
		НаименованиеСтроки = "нераспределенная прибыль (непокрытый убыток) до корректировок";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """";
		
		ЗначениеПоказателя = СКК_84 - СКД_84;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100340103", "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		
	КонецЕсли;
	
	Если ЗаполнятьГодПредыдущий Тогда
		НастройкиПолученияБухитогов.Вставить("НачалоПериода", ДатаНачалаПериодаПредыдущегоГода);
		НастройкиПолученияБухитогов.Вставить("КонецПериода",  ДатаКонцаПериодаПредыдущегоГода);
		
		СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
		ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
		
		РассчитанныеПараметры.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
		РассчитанныеПараметры.Вставить("ОборотыМеждуСчетами",    ОборотыМеждуСчетами);
		
		// Исключение оборотов межотчетного периода: начало
		МОП_ОБ = Неопределено;
		Если ДатаКонцаПериодаПредыдущегоГода = КонецГода(ДатаКонцаПериодаПредыдущегоГода) Тогда
			МежотчетныйПериод = ДатаКонцаПериодаПредыдущегоГода;
			
			МОП_ОБ = Новый Структура("Настройки, Обороты");
			
			МОП_ОБ.Настройки = Новый Структура;
			МОП_ОБ.Настройки.Вставить("Организация", КонтекстВыполнения.Организация);
			МОП_ОБ.Настройки.Вставить("НачалоПериода", МежотчетныйПериод);
			МОП_ОБ.Настройки.Вставить("КонецПериода", МежотчетныйПериод);
			
			МОП_ОБ.Обороты = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(МОП_ОБ.Настройки);
			
			МОП_ОБ.Вставить("ОБ_84__01_03", ОБ("84", "01.03", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_01_03__84", ОБ("01.03", "84", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__01_09", ОБ("84", "01.09", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__02", ОБ("84", "02", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_02__84", ОБ("02", "84", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__09", ОБ("84", "09", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_09__84", ОБ("09", "84", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__77", ОБ("84", "77", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_77__84", ОБ("77", "84", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__76_07_5", ОБ("84", "76.07.5", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_76_07_5__84", ОБ("76.07.5", "84", МОП_ОБ.Обороты)); 
			МОП_ОБ.Вставить("ОБ_84__04_01", ОБ("84", "04.01", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__04_02", ОБ("84", "04.02", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_84__05", ОБ("84", "05", МОП_ОБ.Обороты));
			МОП_ОБ.Вставить("ОБ_05__84", ОБ("05", "84", МОП_ОБ.Обороты));

		КонецЕсли;
		// Исключение оборотов межотчетного периода: конец
		
		ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", ДатаНачалаПериодаПредыдущегоГода);
		ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", ДатаКонцаПериодаПредыдущегоГода);
		
		СКК_80 = СКК("80", СальдоИОборотыПоСчетам);
		СКД_81 = СКД("81", СальдоИОборотыПоСчетам);
		СКК_82 = СКК("82", СальдоИОборотыПоСчетам);
		СКК_83 = СКК("83", СальдоИОборотыПоСчетам);
		СКК_84 = СКК("84", СальдоИОборотыПоСчетам);
		СКД_84 = СКД("84", СальдоИОборотыПоСчетам);
		
		ОБ_99__84_01 = ОБ("99", "84.01", ОборотыМеждуСчетами);
		ОБ_84_02__99 = ОБ("84.02", "99", ОборотыМеждуСчетами);
		
		// Подраздел 1.
		
		ЗаполнитьФормаОтчета2011Кв4_ОИК_ЗаГод("32", КонтекстВыполнения, ДатаНачалаПериодаПредыдущегоГода, ДатаКонцаПериодаПредыдущегоГода);
		
		// Подраздел 2.
		
		НомерСтроки = "3400";
		НаименованиеСтроки = "Капитал всего до корректировок";
		
		Графа = "04";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела2[Графа] + """";
		
		ЗначениеПоказателя = ОБ_99__84_01 - ОБ_84_02__99;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + НаименованиеГрафы + """", "+", "!ОБ " + Счет("99").Код + " " + Счет("84.01").Код, ОБ_99__84_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99"), Счет("84.01")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("84.02").Код + " " + Счет("99").Код, -ОБ_84_02__99, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84.02"), Счет("99")));
		
		Графа = "06";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела2[Графа] + """";
		
		ЗначениеПоказателя = СКК_80 - СКД_81 + СКК_82 + СКК_83 + СКК_84 - СКД_84;
		// Исключение оборотов межотчетного периода: начало
		Если МОП_ОБ <> Неопределено Тогда
			ЗначениеПоказателя = ЗначениеПоказателя
				+ МОП_ОБ.ОБ_84__01_03
				- МОП_ОБ.ОБ_01_03__84
				+ МОП_ОБ.ОБ_84__01_09
				+ МОП_ОБ.ОБ_84__02
				- МОП_ОБ.ОБ_02__84
				+ МОП_ОБ.ОБ_84__09
				- МОП_ОБ.ОБ_09__84
				+ МОП_ОБ.ОБ_84__77
				- МОП_ОБ.ОБ_77__84
				+ МОП_ОБ.ОБ_84__76_07_5
				- МОП_ОБ.ОБ_76_07_5__84
				+ МОП_ОБ.ОБ_84__04_01
				+ МОП_ОБ.ОБ_84__04_02
				+ МОП_ОБ.ОБ_84__05
				- МОП_ОБ.ОБ_05__84;
		КонецЕсли;
		// Исключение оборотов межотчетного периода: конец
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("80").Код, СКК_80, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("80")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("81").Код, -СКД_81, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("81")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("82").Код, СКК_82, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("82")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("83").Код, СКК_83, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		
		// Исключение оборотов межотчетного периода: начало
		Если МОП_ОБ <> Неопределено Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.03").Код), +МОП_ОБ.ОБ_84__01_03, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.03")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("01.03").Код, Счет("84").Код), -МОП_ОБ.ОБ_01_03__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("01.03"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.09").Код), +МОП_ОБ.ОБ_84__01_09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("02").Код), +МОП_ОБ.ОБ_84__02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("02")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("02").Код, Счет("84").Код), -МОП_ОБ.ОБ_02__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("02"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("09").Код), +МОП_ОБ.ОБ_84__09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("09").Код, Счет("84").Код), -МОП_ОБ.ОБ_09__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("09"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("77").Код), +МОП_ОБ.ОБ_84__77, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("77").Код, Счет("84").Код), -МОП_ОБ.ОБ_77__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("77"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("76.07.5").Код), +МОП_ОБ.ОБ_84__76_07_5, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("76.07.5")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("76.07.5").Код, Счет("84").Код), -МОП_ОБ.ОБ_76_07_5__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("76.07.5"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.01").Код), +МОП_ОБ.ОБ_84__04_01, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.02").Код), +МОП_ОБ.ОБ_84__04_02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.02")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("05").Код), +МОП_ОБ.ОБ_84__05, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("05")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("05").Код, Счет("84").Код), -МОП_ОБ.ОБ_05__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("05"), Счет("84")));
			
		КонецЕсли;
		// Исключение оборотов межотчетного периода: конец
		
		НомерСтроки = "3401";
		НаименованиеСтроки = НСтр("ru = 'нераспределенная прибыль (непокрытый убыток) до корректировок';
									|en = 'retained profit (unrecovered loss) before adjustments'");
		
		Графа = "04";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела2[Графа] + """";
		
		ЗначениеПоказателя = ОБ_99__84_01 - ОБ_84_02__99;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("99").Код + " " + Счет("84.01").Код, ОБ_99__84_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99"), Счет("84.01")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("84.02").Код + " " + Счет("99").Код, -ОБ_84_02__99, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84.02"), Счет("99")));
		
		Графа = "06";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела2[Графа] + """";
		
		ЗначениеПоказателя = СКК_84 - СКД_84;
		// Исключение оборотов межотчетного периода: начало
		Если МОП_ОБ <> Неопределено Тогда
			ЗначениеПоказателя = ЗначениеПоказателя
				+ МОП_ОБ.ОБ_84__01_03
				- МОП_ОБ.ОБ_01_03__84
				+ МОП_ОБ.ОБ_84__01_09
				+ МОП_ОБ.ОБ_84__02
				- МОП_ОБ.ОБ_02__84
				+ МОП_ОБ.ОБ_84__09
				- МОП_ОБ.ОБ_09__84
				+ МОП_ОБ.ОБ_84__77
				- МОП_ОБ.ОБ_77__84
				+ МОП_ОБ.ОБ_84__76_07_5
				- МОП_ОБ.ОБ_76_07_5__84
				+ МОП_ОБ.ОБ_84__04_01
				+ МОП_ОБ.ОБ_84__04_02
				+ МОП_ОБ.ОБ_84__05
				- МОП_ОБ.ОБ_05__84;
		КонецЕсли;
		// Исключение оборотов межотчетного периода: конец
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
		// Исключение оборотов межотчетного периода: начало
		Если МОП_ОБ <> Неопределено Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.03").Код), +МОП_ОБ.ОБ_84__01_03, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.03")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("01.03").Код, Счет("84").Код), -МОП_ОБ.ОБ_01_03__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("01.03"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.09").Код), +МОП_ОБ.ОБ_84__01_09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("02").Код), +МОП_ОБ.ОБ_84__02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("02")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("02").Код, Счет("84").Код), -МОП_ОБ.ОБ_02__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("02"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("09").Код), +МОП_ОБ.ОБ_84__09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("09").Код, Счет("84").Код), -МОП_ОБ.ОБ_09__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("09"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("77").Код), +МОП_ОБ.ОБ_84__77, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("77").Код, Счет("84").Код), -МОП_ОБ.ОБ_77__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("77"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("76.07.5").Код), +МОП_ОБ.ОБ_84__76_07_5, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("76.07.5")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("76.07.5").Код, Счет("84").Код), -МОП_ОБ.ОБ_76_07_5__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("76.07.5"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.01").Код), +МОП_ОБ.ОБ_84__04_01, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.02").Код), +МОП_ОБ.ОБ_84__04_02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.02")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("05").Код), +МОП_ОБ.ОБ_84__05, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("05")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("05").Код, Счет("84").Код), -МОП_ОБ.ОБ_05__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("05"), Счет("84")));
			
		КонецЕсли;
		// Исключение оборотов межотчетного периода: конец
		
		// Отражение оборотов межотчетного периода: начало
		Если МОП_ОБ <> Неопределено Тогда
			НомерСтроки = "3411";
			НаименованиеСтроки = НСтр("ru = 'корректировка в связи с изменением учетной политики';
										|en = 'adjustment due to change of accounting policy'");
			
			Графа = "04";
			
			ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
			ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела2[Графа] + """";
			
			ЗначениеПоказателя = МОП_ОБ.ОБ_01_03__84 - МОП_ОБ.ОБ_84__01_03
								- МОП_ОБ.ОБ_84__01_09
								+ МОП_ОБ.ОБ_02__84 - МОП_ОБ.ОБ_84__02
								+ МОП_ОБ.ОБ_09__84 - МОП_ОБ.ОБ_84__09
								+ МОП_ОБ.ОБ_77__84 - МОП_ОБ.ОБ_84__77
								+ МОП_ОБ.ОБ_76_07_5__84 - МОП_ОБ.ОБ_84__76_07_5
								+ МОП_ОБ.ОБ_84__04_01 + МОП_ОБ.ОБ_84__04_02
								+ МОП_ОБ.ОБ_84__05 - МОП_ОБ.ОБ_05__84;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ПредставлениеМОП_ОБ(Счет("01.03").Код, Счет("84").Код), +МОП_ОБ.ОБ_01_03__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("01.03"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.03").Код), -МОП_ОБ.ОБ_84__01_03, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.03")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.09").Код), -МОП_ОБ.ОБ_84__01_09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("02").Код, Счет("84").Код), +МОП_ОБ.ОБ_02__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("02"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("02").Код), -МОП_ОБ.ОБ_84__02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("02")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("09").Код, Счет("84").Код), +МОП_ОБ.ОБ_09__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("09"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("09").Код), -МОП_ОБ.ОБ_84__09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("77").Код, Счет("84").Код), +МОП_ОБ.ОБ_77__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("77"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("77").Код), -МОП_ОБ.ОБ_84__77, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("76.07.5").Код, Счет("84").Код), +МОП_ОБ.ОБ_76_07_5__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("76.07.5"), Счет("84")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("76.07.5").Код), -МОП_ОБ.ОБ_84__76_07_5, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("76.07.5")));
		КонецЕсли;
		// Отражение оборотов межотчетного периода: конец
		
	КонецЕсли;
	
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	РассчитанныеПараметры.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	РассчитанныеПараметры.Вставить("ОборотыМеждуСчетами",    ОборотыМеждуСчетами);
	
	// Исключение оборотов межотчетного периода: начало
	Если КонецПериодаОтчета = КонецГода(КонецПериодаОтчета) Тогда
		МежотчетныйПериод = КонецПериодаОтчета;
		
		МОП_ОБ = Новый Структура("Настройки, Обороты");
		
		МОП_ОБ.Настройки = Новый Структура;
		МОП_ОБ.Настройки.Вставить("Организация", КонтекстВыполнения.Организация);
		МОП_ОБ.Настройки.Вставить("НачалоПериода", МежотчетныйПериод);
		МОП_ОБ.Настройки.Вставить("КонецПериода", МежотчетныйПериод);
		
		МОП_ОБ.Обороты = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(МОП_ОБ.Настройки);
		
		РассчитанныеПараметры.Вставить("МОП_ОБ", МОП_ОБ);
	КонецЕсли;
	// Исключение оборотов межотчетного периода: конец
	
	ЗаполнитьФормаОтчета2011Кв4_ОИК_ЗаГод("33", КонтекстВыполнения, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	КонтекстВыполнения.Удалить("РассчитанныеПараметры");
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_ОИК_ЗаГод(ГруппаПоказателей, КонтекстВыполнения, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ИмяРаздела = "ОИК";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	РассчитанныеПараметры = КонтекстВыполнения.РассчитанныеПараметры;
	
	СальдоИОборотыПоСчетам = РассчитанныеПараметры.СальдоИОборотыПоСчетам;
	ОборотыМеждуСчетами    = РассчитанныеПараметры.ОборотыМеждуСчетами;
	
	ЗаголовкиГрафПодраздела1 = РассчитанныеПараметры.ЗаголовкиГрафПодраздела1;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация", Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", КонецПериодаОтчета);
	
	СКК_80 = СКК("80", СальдоИОборотыПоСчетам);
	СКД_81 = СКД("81", СальдоИОборотыПоСчетам);
	СКК_82 = СКК("82", СальдоИОборотыПоСчетам);
	СКК_83 = СКК("83", СальдоИОборотыПоСчетам);
	СКК_84 = СКК("84", СальдоИОборотыПоСчетам);
	СКД_84 = СКД("84", СальдоИОборотыПоСчетам);
	
	КО_83_01 = КО("83.01", СальдоИОборотыПоСчетам);
	ДО_83_01 = ДО("83.01", СальдоИОборотыПоСчетам);
	
	ОБ_99__84_01 = ОБ("99", "84.01", ОборотыМеждуСчетами);
	ОБ_84_02__99 = ОБ("84.02", "99", ОборотыМеждуСчетами);
	
	ОБ_84__75_02 = ОБ("84", "75.02", ОборотыМеждуСчетами);
	
	ОБ_84__82 = ОБ("84", "82", ОборотыМеждуСчетами);
	ОБ_82__84 = ОБ("82", "84", ОборотыМеждуСчетами);

	// Исключение оборотов межотчетного периода: начало
	МОП_ОБ = Неопределено;
	Если РассчитанныеПараметры.Свойство("МОП_ОБ") 
		И РассчитанныеПараметры.МОП_ОБ <> Неопределено Тогда
		МОП_ОБ = РассчитанныеПараметры.МОП_ОБ;
		
		МОП_ОБ.Вставить("ОБ_84__01_03", ОБ("84", "01.03", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_01_03__84", ОБ("01.03", "84", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__01_09", ОБ("84", "01.09", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__02", ОБ("84", "02", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_02__84", ОБ("02", "84", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__09", ОБ("84", "09", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_09__84", ОБ("09", "84", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__77", ОБ("84", "77", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_77__84", ОБ("77", "84", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__76_07_5", ОБ("84", "76.07.5", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_76_07_5__84", ОБ("76.07.5", "84", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__04_01", ОБ("84", "04.01", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__04_02", ОБ("84", "04.02", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_84__05", ОБ("84", "05", МОП_ОБ.Обороты));
		МОП_ОБ.Вставить("ОБ_05__84", ОБ("05", "84", МОП_ОБ.Обороты));

	КонецЕсли;
	// Исключение оборотов межотчетного периода: конец
	
	// Строки 3211 и 3311.
	НомерСтроки = ГруппаПоказателей + "11";
	НаименованиеСтроки = "чистая прибыль";
	
	Графа = "07";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = ОБ_99__84_01;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("99").Код + " " + Счет("84.01").Код, ОБ_99__84_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99"), Счет("84.01")));
	
	// Строки 3212 и 3312.
	НомерСтроки = ГруппаПоказателей + "12";
	НаименованиеСтроки = "переоценка имущества";
	
	Графа = "05";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """"
	                     + " (отражается только положительное значение)";
	
	ЗначениеПоказателя = КО_83_01 - ДО_83_01;
	ЗначениеПоказателя = Макс(ЗначениеПоказателя, 0);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("83.01").Код, КО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("83.01").Код, -ДО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
	
	// Строки 3221 и 3321.
	НомерСтроки = ГруппаПоказателей + "21";
	НаименованиеСтроки = "убыток";
	
	Графа = "07";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = ОБ_84_02__99;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("84.02").Код + " " + Счет("99").Код, ОБ_84_02__99, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84.02"), Счет("99")));
	
	// Строки 3222 и 3322.
	НомерСтроки = ГруппаПоказателей + "22";
	НаименованиеСтроки = "переоценка имущества";
	
	Графа = "05";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """"
	                     + " (отражается только отрицательное значение)";
	
	ЗначениеПоказателя = КО_83_01 - ДО_83_01;
	ЗначениеПоказателя = Мин(ЗначениеПоказателя, 0);
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + ГруппаПоказателей + "2205", ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("83.01").Код, КО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("83.01").Код, -ДО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
	
	// Строки 3227 и 3327.
	НомерСтроки = ГруппаПоказателей + "27";
	НаименованиеСтроки = "дивиденды";
	
	Графа = "07";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = ОБ_84__75_02;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("84").Код + " " + Счет("75.02").Код, ОБ_84__75_02, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84"), Счет("75.02")));
	
	// Строки 3240 и 3340.
	НомерСтроки = ГруппаПоказателей + "40";
	НаименованиеСтроки = "изменение резервного капитала";
	
	Графа = "06";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = ОБ_84__82 - ОБ_82__84;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("84").Код + " " + Счет("82").Код, ОБ_84__82, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84"), Счет("82")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("82").Код + " " + Счет("84").Код, -ОБ_82__84, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("82"), Счет("84")));
	
	// Строки 3200 и 3300.
	НомерСтроки = ГруппаПоказателей + "00";
	НаименованиеСтроки = "Величина капитала на " + Формат(КонецПериодаОтчета, "ДЛФ=DD");
	
	Графа = "03";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = СКК_80;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("80").Код, СКК_80, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("80")));
	
	Графа = "04";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = СКД_81;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКД " + Счет("81").Код, СКД_81, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("81")));
	
	Графа = "05";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = СКК_83;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("83").Код, СКК_83, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83")));
	
	Графа = "06";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = СКК_82;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("82").Код, СКК_82, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("82")));
	
	Графа = "07";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовкиГрафПодраздела1[Графа] + """";
	
	ЗначениеПоказателя = СКК_84 - СКД_84;
	// Исключение оборотов межотчетного периода: начало
	Если МОП_ОБ <> Неопределено Тогда
		
		ЗначениеПоказателя = ЗначениеПоказателя
			+ МОП_ОБ.ОБ_84__01_03
			- МОП_ОБ.ОБ_01_03__84
			+ МОП_ОБ.ОБ_84__01_09
			+ МОП_ОБ.ОБ_84__02
			- МОП_ОБ.ОБ_02__84
			+ МОП_ОБ.ОБ_84__09
			- МОП_ОБ.ОБ_09__84
			+ МОП_ОБ.ОБ_84__77
			- МОП_ОБ.ОБ_77__84
			+ МОП_ОБ.ОБ_84__76_07_5
			- МОП_ОБ.ОБ_76_07_5__84
			+ МОП_ОБ.ОБ_84__04_02
			+ МОП_ОБ.ОБ_84__04_01
			+ МОП_ОБ.ОБ_84__05
			- МОП_ОБ.ОБ_05__84;
	КонецЕсли;
	// Исключение оборотов межотчетного периода: конец
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СКК " + Счет("84").Код, СКК_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!СКД " + Счет("84").Код, -СКД_84, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("84")));
	
	// Исключение оборотов межотчетного периода: начало
	Если МОП_ОБ <> Неопределено Тогда
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.03").Код), +МОП_ОБ.ОБ_84__01_03, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.03")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("01.03").Код, Счет("84").Код), -МОП_ОБ.ОБ_01_03__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("01.03"), Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("01.09").Код), +МОП_ОБ.ОБ_84__01_09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("01.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("02").Код), +МОП_ОБ.ОБ_84__02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("02")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("02").Код, Счет("84").Код), -МОП_ОБ.ОБ_02__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("02"), Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("09").Код), +МОП_ОБ.ОБ_84__09, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("09").Код, Счет("84").Код), -МОП_ОБ.ОБ_09__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("09"), Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("77").Код), +МОП_ОБ.ОБ_84__77, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("77")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("77").Код, Счет("84").Код), -МОП_ОБ.ОБ_77__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("77"), Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("76.07.5").Код), +МОП_ОБ.ОБ_84__76_07_5, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("76.07.5")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("76.07.5").Код, Счет("84").Код), -МОП_ОБ.ОБ_76_07_5__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("76.07.5"), Счет("84")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.01").Код), +МОП_ОБ.ОБ_84__04_01, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.01")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("04.02").Код), +МОП_ОБ.ОБ_84__04_02, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("04.02")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", ПредставлениеМОП_ОБ(Счет("84").Код, Счет("05").Код), +МОП_ОБ.ОБ_84__05, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("84"), Счет("05")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", ПредставлениеМОП_ОБ(Счет("05").Код, Счет("84").Код), -МОП_ОБ.ОБ_05__84, ИмяРаздела, НастройкиАнализаСчета(МОП_ОБ.Настройки, Счет("05"), Счет("84")));
		
	КонецЕсли;
	// Исключение оборотов межотчетного периода: конец
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_ОДДС(КонтекстВыполнения) Экспорт
	
	ИмяРаздела = "ОДДС";
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	
	Графа = КонтекстВыполнения.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.ЗаголовокГрафы;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	
	СчетаДДС = Новый Массив;
	СчетаДДС.Добавить(Счет("50.01"));
	СчетаДДС.Добавить(Счет("50.02"));
	СчетаДДС.Добавить(Счет("50.21"));
	
	СчетаДДС.Добавить(Счет("51"));
	СчетаДДС.Добавить(Счет("52"));
	
	СчетаДДС.Добавить(Счет("55.01"));
	СчетаДДС.Добавить(Счет("55.02"));
	СчетаДДС.Добавить(Счет("55.04"));
	СчетаДДС.Добавить(Счет("55.21"));
	СчетаДДС.Добавить(Счет("55.24"));
	
	СчетаДДС.Добавить(Счет("57.01"));
	СчетаДДС.Добавить(Счет("57.21"));
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчетаВМассив(СчетаДДС, "ДСВПути");
	
	СтруктураДДС = ПолучитьСтруктуруДДС(СчетаДДС, Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ОрганизацияПерешлаНаУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, КонецПериодаОтчета);
	
	Если ОрганизацияПерешлаНаУСН Тогда
		СтруктураНДСвДДС = СтруктураДДС.СкопироватьКолонки();
	Иначе
		// Заполнение показателей с учетом ПБУ 23/2011
		СтруктураНДСвДДС = ПолучитьСтруктуруНДСвДДС2011(СчетаДДС, Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	КонецЕсли;
	
	ВидДДСПолучения    = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
	ВидДДСПеречисления = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
	
	РасчетыПоВалютноОбменнымОперациям = ПолучитьСтруктуруПоВалютоОбменнымОперациям(
		Организация, НачалоПериодаОтчета, КонецПериодаОтчета, ВидДДСПолучения, ВидДДСПеречисления);
		
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ХозрасчетныйОбороты.СуммаОборотДт КАК ДО,
	               |	ХозрасчетныйОбороты.СуммаОборотКт КАК КО
	               |ИЗ
	               |	РегистрБухгалтерии.Хозрасчетный.Обороты(
	               |			&НачПериода,
	               |			&КонПериода,
	               |			Период,
	               |			Счет = &Счет_68_90,
	               |			&СубконтоСтатьиДДС,
	               |			Организация = &Организация,
	               |			КорСчет = &Счет_68_02,
	               |			) КАК ХозрасчетныйОбороты";
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("НачПериода", НачалоПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", КонецПериодаОтчета);
	Запрос.УстановитьПараметр("Счет_68_90", Счет("68.90"));
	Запрос.УстановитьПараметр("Счет_68_02", Счет("68.02"));
	Запрос.УстановитьПараметр("СубконтоСтатьиДДС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("Перечисление", ВидДДСПолучения);
	Запрос.УстановитьПараметр("Поступление",  ВидДДСПеречисления);
	Выборка = Запрос.Выполнить().Выбрать();
	
	РасчетыПоНДС = Новый Структура;
	РасчетыПоНДС.Вставить("ПеречисленныйНДС", 0);
	РасчетыПоНДС.Вставить("ПолученныйНДС", 0);
	Если Выборка.Следующий() Тогда
		РасчетыПоНДС.ПеречисленныйНДС = Выборка.КО;
		РасчетыПоНДС.ПолученныйНДС    = Выборка.ДО;
	КонецЕсли;
	
	// Заполнение отдельных показателей общих для алгоритмов до 2010 года и с 2011 года
	
	НомерСтроки = "4450";
	НаименованиеСтроки = "Остаток денежных средств и денежных эквивалентов на начало отчетного периода";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	СНД_50_01 = СНД("50.01", СальдоИОборотыПоСчетам);
	СНД_50_02 = СНД("50.02", СальдоИОборотыПоСчетам);
	СНД_50_21 = СНД("50.21", СальдоИОборотыПоСчетам);
	СНД_51    = СНД("51", СальдоИОборотыПоСчетам);
	СНД_52    = СНД("52", СальдоИОборотыПоСчетам);
	СНД_55_01 = СНД("55.01", СальдоИОборотыПоСчетам);
	СНД_55_02 = СНД("55.02", СальдоИОборотыПоСчетам);
	СНД_55_04 = СНД("55.04", СальдоИОборотыПоСчетам);
	СНД_55_21 = СНД("55.21", СальдоИОборотыПоСчетам);
	СНД_55_24 = СНД("55.24", СальдоИОборотыПоСчетам);
	СНД_57_01 = СНД("57.01", СальдоИОборотыПоСчетам);
	СНД_57_03 = СНД("57.03", СальдоИОборотыПоСчетам);
	СНД_57_21 = СНД("57.21", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = СНД_50_01 + СНД_50_02 + СНД_50_21
	                   + СНД_51 + СНД_52
	                   + СНД_55_01 + СНД_55_02 + СНД_55_04 + СНД_55_21 + СНД_55_24
	                   + СНД_57_01 + СНД_57_03 + СНД_57_21;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!СНД " + Счет("50.01").Код, СНД_50_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("50.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("51.02").Код, СНД_50_02, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("51.02")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("51.21").Код, СНД_50_21, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("51.21")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("51").Код, СНД_51, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("51")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("52").Код, СНД_52, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("52")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("55.01").Код, СНД_55_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("55.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("55.02").Код, СНД_55_02, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("55.02")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("55.04").Код, СНД_55_04, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("55.04")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("55.21").Код, СНД_55_21, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("55.21")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("55.24").Код, СНД_55_24, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("55.24")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("57.01").Код, СНД_57_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("57.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("57.03").Код, СНД_57_03, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("57.03")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!СНД " + Счет("57.21").Код, СНД_57_21, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("57.21")));
	
	НомерСтроки = "4490";
	НаименованиеСтроки = "Величина влияния изменений курса иностранной валюты по отношению к рублю";
	
	СубконтоКурсовыеРазницы = Новый Массив;
	СубконтоКурсовыеРазницы.Добавить(Новый Структура("ВидСубконто, Отбор",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы,
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.КурсовыеРазницы")));
	
	НастройкиПолученияБухитоговДт = Новый Структура;
	НастройкиПолученияБухитоговДт.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитоговДт.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитоговДт.Вставить("КонецПериода",  КонецПериодаОтчета);
	НастройкиПолученияБухитоговДт.Вставить("Субконто", СубконтоКурсовыеРазницы);
	
	НастройкиПолученияБухитоговКт = Новый Структура;
	НастройкиПолученияБухитоговКт.Вставить("Организация",   КонтекстВыполнения.Организация);
	НастройкиПолученияБухитоговКт.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитоговКт.Вставить("КонецПериода",  КонецПериодаОтчета);
	НастройкиПолученияБухитоговКт.Вставить("КорСубконто", СубконтоКурсовыеРазницы);
	
	ОБ_50_21__91_01_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговКт, "50.21", "91.01");
	ОБ_91_02__50_21_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговДт, "91.02", "50.21");
	
	ОБ_52__91_01_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговКт, "52", "91.01");
	ОБ_91_02__52_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговДт, "91.02", "52");
	
	ОБ_55_21__91_01_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговКт, "55.21", "91.01");
	ОБ_91_02__55_21_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговДт, "91.02", "55.21");
	
	ОБ_55_24__91_01_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговКт, "55.24", "91.01");
	ОБ_91_02__55_24_КурсовыеРазницы = ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитоговДт, "91.02", "55.24");
	
	ЗначениеПоказателя = ОБ_50_21__91_01_КурсовыеРазницы - ОБ_91_02__50_21_КурсовыеРазницы
	                   + ОБ_52__91_01_КурсовыеРазницы - ОБ_91_02__52_КурсовыеРазницы
	                   + ОБ_55_21__91_01_КурсовыеРазницы - ОБ_91_02__55_21_КурсовыеРазницы
	                   + ОБ_55_24__91_01_КурсовыеРазницы - ОБ_91_02__55_24_КурсовыеРазницы;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П000100" + НомерСтроки + Графа, ЗначениеПоказателя);
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.КурсовыеРазницы"));
	
	ОтборПоАналитикеКор = Новый Соответствие;
	ОтборПоАналитикеКор.Вставить("КорСубконто1", ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.КурсовыеРазницы"));
	
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, ЗаголовокРасшифровки,
		"+", "Оборот с кредита счета 91.01 в дебет счета 50.21 по статье прочих доходов и расходов ""Курсовые разницы""",
		ОБ_50_21__91_01_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("50.21"), Счет("91.01"), ОтборПоАналитикеКор));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот с кредита счета 50.21 в дебет счета 91.02 по статье прочих доходов и расходов ""Курсовые разницы""",
		-ОБ_91_02__50_21_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("50.21"), ОтборПоАналитике));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот с кредита счета 91.01 в дебет счета 52 по статье прочих доходов и расходов ""Курсовые разницы""",
		ОБ_52__91_01_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("52"), Счет("91.01"), ОтборПоАналитикеКор));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот с кредита счета 52 в дебет счета 91.02 по статье прочих доходов и расходов ""Курсовые разницы""",
		-ОБ_91_02__52_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("52"), ОтборПоАналитике));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот с кредита счета 91.01 в дебет счета 55.21 по статье прочих доходов и расходов ""Курсовые разницы""",
		ОБ_55_21__91_01_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("55.21"), Счет("91.01"), ОтборПоАналитикеКор));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот с кредита счета 55.21 в дебет счета 91.02 по статье прочих доходов и расходов ""Курсовые разницы""",
		-ОБ_91_02__55_21_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("55.21"), ОтборПоАналитике));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"+", "Оборот с кредита счета 91.01 в дебет счета 55.24 по статье прочих доходов и расходов ""Курсовые разницы""",
		ОБ_55_24__91_01_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("55.24"), Счет("91.01"), ОтборПоАналитикеКор));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, "П000100" + НомерСтроки + Графа, "",
		"-", "Оборот с кредита счета 55.24 в дебет счета 91.02 по статье прочих доходов и расходов ""Курсовые разницы""",
		-ОБ_91_02__55_24_КурсовыеРазницы, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("55.24"), ОтборПоАналитике));
	
	// Заполнение показателей различающихся для алгоритмов до 2010 года и с 2011.
	Если КонецПериодаОтчета < '20110101' Тогда
		КонтекстВыполненияОДДС = Новый Структура;
		КонтекстВыполненияОДДС.Вставить("Графа", Графа);
		КонтекстВыполненияОДДС.Вставить("ЗаголовокГрафы", ЗаголовокГрафы);
		КонтекстВыполненияОДДС.Вставить("СтруктураДДС", СтруктураДДС);
		КонтекстВыполненияОДДС.Вставить("СтруктураНДСвДДС", СтруктураНДСвДДС);
		
		КонтекстВыполненияОДДС.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
		КонтекстВыполненияОДДС.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
		
		ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
		КонтекстВыполненияОДДС.Вставить("ДополнительныеПараметрыРасшифровки", ДополнительныеПараметрыРасшифровки);
		КонтекстВыполненияОДДС.Вставить("ОбщиеПараметрыРасшифровки", ОбщиеПараметрыРасшифровки);
		
		КонтекстВыполненияОДДС.Вставить("РасчетыПоНДС", РасчетыПоНДС);
		ЗаполнитьФормаОтчета2011Кв4_ОДДС_2010(КонтекстВыполненияОДДС);
	Иначе
		КонтекстВыполненияОДДС = Новый Структура;
		КонтекстВыполненияОДДС.Вставить("Графа", Графа);
		КонтекстВыполненияОДДС.Вставить("ЗаголовокГрафы", ЗаголовокГрафы);
		КонтекстВыполненияОДДС.Вставить("СтруктураДДС", СтруктураДДС);
		КонтекстВыполненияОДДС.Вставить("СтруктураНДСвДДС", СтруктураНДСвДДС);
		
		КонтекстВыполненияОДДС.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
		КонтекстВыполненияОДДС.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
		
		ДополнительныеПараметрыРасшифровки = Новый Структура("Организация", Организация);
		КонтекстВыполненияОДДС.Вставить("ДополнительныеПараметрыРасшифровки", ДополнительныеПараметрыРасшифровки);
		КонтекстВыполненияОДДС.Вставить("ОбщиеПараметрыРасшифровки", ОбщиеПараметрыРасшифровки);
		
		КонтекстВыполненияОДДС.Вставить("РасчетыПоВалютноОбменнымОперациям", РасчетыПоВалютноОбменнымОперациям);
		КонтекстВыполненияОДДС.Вставить("РасчетыПоНДС", РасчетыПоНДС);
		
		ЗаполнитьФормаОтчета2011Кв4_ОДДС_2011(КонтекстВыполненияОДДС);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_ОДДС_2010(ПараметрыВывода)
	
	НомерСтроки        = "4111";
	НаименованиеСтроки = "поступления от продажи продукции, товаров, работ и услуг";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_Агентские(ПараметрыВывода);
	
	НомерСтроки        = "4119";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_НДС(ПараметрыВывода);
	
	НомерСтроки        = "4121";
	НаименованиеСтроки = "платежи поставщикам (подрядчикам) за сырье, материалы, работы, услуги";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_Агентские(ПараметрыВывода);
	
	НомерСтроки        = "4122";
	НаименованиеСтроки = "платежи в связи с оплатой труда работников";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4129";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.РасчетыПоНалогамИСборам);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ОплатаПоПенсионнымПланам);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендовПроцентов);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_НДС(ПараметрыВывода);
	
	НомерСтроки        = "4211";
	НаименованиеСтроки = "поступления от продажи внеоборотных активов (кроме финансовых вложений)";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиОбъектовОсновныхСредств);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиНематериальныхАктивов);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиДоходныхВложений);
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4213";
	НаименованиеСтроки = "поступления от возврата предоставленных займов, от продажи долговых ценных бумаг (прав требования денежных средств к другим лицам)";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймовПредоставленныхДругимОрганизациям);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиЦенныхБумагИИныхФинансовыхВложений);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.РеализацияПрочихАктивовИнвестиционная);
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4214";
	НаименованиеСтроки = "поступление дивидендов, процентов по долговым финансовым вложениям и аналогичных поступлений от долевого участия в других организациях";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПолученныеДивиденды);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПолученныеПроценты);
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4219";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоИнвестиционнойДеятельности;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4221";
	НаименованиеСтроки = "платежи в связи с приобретением, созданием, модернизацией, реконструкцией и подготовкой к использованию внеоборотных активов";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеОбъектовОсновныхСредств);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ОплатаНИОКР);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеПрочихАктивовИнвестиционное);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеДоходныхВложенийВМатериальныеЦенности);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеНематериальныхАктивов);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4223";
	НаименованиеСтроки = "платежи в связи с приобретением долговых ценных бумаг (прав требования денежных средств к другим лицам), предоставление займов другим лицам";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеЦенныхБумагИИныхФинансовыхВложений);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ЗаймыПредоставленныеДругимОрганизациям);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4224";
	НаименованиеСтроки = "выплата процентов по долговым обязательствам, включаемым в стоимость инвестиционного актива";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаПроцентовВСвязиСоСтроительством;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4229";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоИнвестиционнойДеятельности);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеДочернихОрганизаций);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4311";
	НаименованиеСтроки = "получение кредитов и займов";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4313";
	НаименованиеСтроки = "поступления от выпуска акций, увеличения долей участия";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЭмиссииАкций;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4314";
	НаименованиеСтроки = "поступления от выпуска облигаций, векселей и других долговых ценных бумаг и др.";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыпускДолговыхИнструментов;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4319";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоФинансовойДеятельности);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПоступлениеПлатежейПоФинансовойАренде);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыпускКомплексныхФинансовыхИнструментов);
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4321";
	НаименованиеСтроки = "платежи собственникам (участникам) в связи с выкупом у них акций (долей участия) организации или их выходом из состава участников";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыкупСобственныхАкций);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыкупСобственныхДолевыхИнструментов);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4322";
	НаименованиеСтроки = "на выплату дивидендов и иных платежей по распределению прибыли в пользу собственников (участников)";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендов);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДолиМеньшинства);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4323";
	НаименованиеСтроки = "платежи в связи с погашением (выкупом) векселей и других долговых ценных бумаг, возврат кредитов и займов";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПогашениеЗаймовИКредитов);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4329";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС = Новый Массив;
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоФинансовойДеятельности);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаПроцентовФинансовая);
	ВидДДС.Добавить(Перечисления.ВидыДвиженийДенежныхСредств.ПогашениеОбязательствПоФинансовойАренде);
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2011Кв4_ОДДС_2011(ПараметрыВывода)
	
	НомерСтроки        = "4111";
	НаименованиеСтроки = "поступления от продажи продукции, товаров, работ и услуг";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.СредстваПолученныеОтПокупателейИЗаказчиков;
	
	ФормулаРасчета 	   = Новый Массив;
	ФормулаРасчета.Добавить("ДО");
	ФормулаРасчета.Добавить("КО");
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_Агентские(ПараметрыВывода);
	
	НомерСтроки        = "4112";
	НаименованиеСтроки = "поступления от арендных платежей, лицензионных платежей, роялти, комиссионных и иных аналогичных платежей";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.АрендныеПлатежиРоялтиЛицензионныеПлатежиГонорарыКомиссионные;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4113";
	НаименованиеСтроки = "поступления от перепродажи финансовых вложений";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПерепродажиФинансовыхВложений;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4119";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_НДС(ПараметрыВывода);
	
	НомерСтроки        = "4121";
	НаименованиеСтроки = "платежи поставщикам (подрядчикам) за сырье, материалы, работы, услуги";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаОборотныхАктивов;
	
	ФормулаРасчета 	   = Новый Массив;
	ФормулаРасчета.Добавить("-КО");
	ФормулаРасчета.Добавить("-ДО");
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_Агентские(ПараметрыВывода);
	
	НомерСтроки        = "4122";
	НаименованиеСтроки = "платежи в связи с оплатой труда работников";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ОплатаТруда;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4123";
	НаименованиеСтроки = "уплата процентов по долговым обязательствам";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаПроцентовПоДолговымОбязательствам;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4124";
	НаименованиеСтроки = "уплата налога на прибыль";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.НалогНаПрибыль;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4129";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС_НДС(ПараметрыВывода);
	
	НомерСтроки        = "4211";
	НаименованиеСтроки = "поступления от продажи внеоборотных активов (кроме финансовых вложений)";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыручкаОтПродажиВнеоборотныхАктивовКромеФинансовых;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4212";
	НаименованиеСтроки = "поступления от продажи акций (долей участия) в других организациях";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПродажиАкцийДругихОрганизаций;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4213";
	НаименованиеСтроки = "поступления от возврата предоставленных займов, от продажи долговых ценных бумаг (прав требования денежных средств к другим лицам)";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтПогашенияЗаймовПродажиДолговыхЦенныхБумаг;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4214";
	НаименованиеСтроки = "поступление дивидендов, процентов по долговым финансовым вложениям и аналогичных поступлений от долевого участия в других организациях";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступлениеОтДивидендовПроцентовПоДолговымФинансовымВложениям;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4219";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоИнвестиционнойДеятельности;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4221";
	НаименованиеСтроки = "платежи в связи с приобретением, созданием, модернизацией, реконструкцией и подготовкой к использованию внеоборотных активов";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеСозданиеМодернизацияРеконструкцияВнеоборотныхАктивов;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4222";
	НаименованиеСтроки = "платежи в связи с приобретением акций (долей участия) в других организациях";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеАкцийДругихОрганизаций;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4223";
	НаименованиеСтроки = "платежи в связи с приобретением долговых ценных бумаг (прав требования денежных средств к другим лицам), предоставление займов другим лицам";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПриобретениеДолговыхЦенныхБумагПредоставлениеЗаймов;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4224";
	НаименованиеСтроки = "выплата процентов по долговым обязательствам, включаемым в стоимость инвестиционного актива";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаПроцентовВСвязиСоСтроительством;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4229";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоИнвестиционнойДеятельности;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4311";
	НаименованиеСтроки = "получение кредитов и займов";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЗаймовИКредитовПредоставленныхДругимиОрганизациями;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4312";
	НаименованиеСтроки = "поступление денежных вкладов собственников (участников)";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступлениеДенежныхВкладовСобственников;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4313";
	НаименованиеСтроки = "поступления от выпуска акций, увеличения долей участия";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПоступленияОтЭмиссииАкций;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4314";
	НаименованиеСтроки = "поступления от выпуска облигаций, векселей и других долговых ценных бумаг и др.";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыпускДолговыхИнструментов;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4319";
	НаименованиеСтроки = "прочие поступления";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоФинансовойДеятельности;
	ФормулаРасчета     = "ДО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4321";
	НаименованиеСтроки = "платежи собственникам (участникам) в связи с выкупом у них акций (долей участия) организации или их выходом из состава участников";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПлатежиСобственникамВСвязиСВыкупомАкцийИлиПриВыходеИзСоставаУчастников;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4322";
	НаименованиеСтроки = "на выплату дивидендов и иных платежей по распределению прибыли в пользу собственников (участников)";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ВыплатаДивидендов;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4323";
	НаименованиеСтроки = "платежи в связи с погашением (выкупом) векселей и других долговых ценных бумаг, возврат кредитов и займов";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПогашениеДолговыйЦенныхБумагВозвратКредитовИЗаймов;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
	НомерСтроки        = "4329";
	НаименованиеСтроки = "прочие платежи";
	ВидДДС             = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоФинансовойДеятельности;
	ФормулаРасчета     = "-КО";
	
	ПараметрыВывода.Вставить("НомерСтроки", НомерСтроки);
	ПараметрыВывода.Вставить("НаименованиеСтроки", НаименованиеСтроки);
	ПараметрыВывода.Вставить("ВидДДС", ВидДДС);
	ПараметрыВывода.Вставить("ФормулаРасчета", ФормулаРасчета);
	ВывестиСтрокуОДДС(ПараметрыВывода);
	
КонецПроцедуры

Функция ПолучитьСтруктуруДДС(СчетаДДС, Организация, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ОписаниеТиповЧисло15_2 = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();

	ТаблицаОборотовПоВидамДДС = Новый ТаблицаЗначений;
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("СчетДДС", 	Новый ОписаниеТипов("ПланСчетовСсылка.Хозрасчетный"));
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("ВидДДС", 	Новый ОписаниеТипов("ПеречислениеСсылка.ВидыДвиженийДенежныхСредств"));
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("ДО", 		ОписаниеТиповЧисло15_2);
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("ДО_НДС", 	ОписаниеТиповЧисло15_2);
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("КО", 		ОписаниеТиповЧисло15_2);
	ТаблицаОборотовПоВидамДДС.Колонки.Добавить("КО_НДС",	ОписаниеТиповЧисло15_2);
	
	КоллекцияПеречисления = Перечисления.ВидыДвиженийДенежныхСредств;
	
	Для Каждого ВидДДС Из КоллекцияПеречисления Цикл
		Для Каждого СчетДДС Из СчетаДДС Цикл
			НовыйСтрокаСчетаДДС = ТаблицаОборотовПоВидамДДС.Добавить();
			НовыйСтрокаСчетаДДС.СчетДДС = СчетДДС;
			НовыйСтрокаСчетаДДС.ВидДДС 	= ВидДДС;
		КонецЦикла;
	КонецЦикла;
	
	ТаблицаОборотовПоВидамДДС.Индексы.Добавить("ВидДДС, СчетДДС");
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ХозрасчетныйОбороты.Счет КАК СчетДДС,
	|	ХозрасчетныйОбороты.Субконто1 КАК СтатьяДДС,
	|	ХозрасчетныйОбороты.СуммаОборотДт КАК СуммаОборотДт,
	|	ХозрасчетныйОбороты.СуммаОборотКт КАК СуммаОборотКт
	|ПОМЕСТИТЬ ВТ_Хозрасчетный
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериода, &КонПериода, Период, Счет В (&СчетаДДС), &СубконтоСтатьиДДС, Организация = &Организация, , ) КАК ХозрасчетныйОбороты
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ХозрасчетныйОбороты.Субконто1
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Хозрасчетный.СчетДДС,
	|	СтатьиДвиженияДенежныхСредств.ВидДвиженияДенежныхСредств КАК ВидДДС,
	|	СУММА(ВТ_Хозрасчетный.СуммаОборотДт) КАК СуммаОборотДт,
	|	СУММА(ВТ_Хозрасчетный.СуммаОборотКт) КАК СуммаОборотКт
	|ИЗ
	|	ВТ_Хозрасчетный КАК ВТ_Хозрасчетный
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.СтатьиДвиженияДенежныхСредств КАК СтатьиДвиженияДенежныхСредств
	|		ПО ВТ_Хозрасчетный.СтатьяДДС = СтатьиДвиженияДенежныхСредств.Ссылка
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Хозрасчетный.СчетДДС,
	|	СтатьиДвиженияДенежныхСредств.ВидДвиженияДенежныхСредств";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПереопределитьЗапросСтруктураДДС(Запрос);
	
	Запрос.УстановитьПараметр("НачПериода", НачалоПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода", КонецПериодаОтчета);
	Запрос.УстановитьПараметр("СчетаДДС", СчетаДДС);
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("СубконтоСтатьиДДС", ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	
	СтруктураПоиска = Новый Структура("ВидДДС, СчетДДС");
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(СтруктураПоиска, Выборка);
		НайденныеСтроки = ТаблицаОборотовПоВидамДДС.НайтиСтроки(СтруктураПоиска);
		Если НайденныеСтроки.Количество() > 0 Тогда
			СтрокаТаблицы = НайденныеСтроки[0];
			СтрокаТаблицы.ДО = СтрокаТаблицы.ДО + Выборка.СуммаОборотДт;
			СтрокаТаблицы.КО = СтрокаТаблицы.КО + Выборка.СуммаОборотКт;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ТаблицаОборотовПоВидамДДС;
	
КонецФункции

Функция ПолучитьСтруктуруНДСвДДС2011(СчетаДДС, Организация, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	Запрос = Новый Запрос;
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПереопределитьЗапросСтруктураНДСвДДС(Запрос);
	
	Запрос.УстановитьПараметр("НачПериода",     НачалоПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода",     КонецПериодаОтчета);
	Запрос.УстановитьПараметр("Организация",    Организация);
	Запрос.УстановитьПараметр("СчетаДДС",       СчетаДДС);
	Запрос.УстановитьПараметр("ВалютаРегУчета", Константы.ВалютаРегламентированногоУчета.Получить());	
	
	ТаблицаОборотовПоВидамДДС = Запрос.Выполнить().Выгрузить();
	ТаблицаОборотовПоВидамДДС.Индексы.Добавить("ВидДДС");
	
	Возврат ТаблицаОборотовПоВидамДДС;
	
КонецФункции

Функция ПолучитьСтруктуруПоВалютоОбменнымОперациям(Организация, НачалоПериодаОтчета, КонецПериодаОтчета, ВидДДСПолучения, ВидДДСПеречисления)
	
	СчетаБанка = Новый Массив;
	СчетаБанка.Добавить(Счет("51"));
	СчетаБанка.Добавить(Счет("52"));
	
	СчетаПриобретениеРеализацииВалюты = Новый Массив;
	СчетаПриобретениеРеализацииВалюты.Добавить(Счет("57.02"));
	СчетаПриобретениеРеализацииВалюты.Добавить(Счет("57.22"));
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ВалютоОбменДО, 0)) КАК ВалютоОбменДО,
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ВалютоОбменКО, 0)) КАК ВалютоОбменКО,
	|	0 КАК ВалютоОбменДельта
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СуммаОборот КАК ВалютоОбменДО,
	|		0 КАК ВалютоОбменКО
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				СчетДт В (&СчетаБанка),
	|				&СубконтоСтатьиДДС,
	|				СчетКт В (&СчетаПриобретениеРеализацииВалюты),
	|				,
	|				Организация = &Организация
	|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.СтатьиДвиженияДенежныхСредств).ВидДвиженияДенежныхСредств = &ВидДДСПрочиеПоступления) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		0,
	|		ХозрасчетныйОборотыДтКт.СуммаОборот
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				СчетДт В (&СчетаПриобретениеРеализацииВалюты),
	|				,
	|				СчетКт В (&СчетаБанка),
	|				&СубконтоСтатьиДДС,
	|				Организация = &Организация
	|					И ВЫРАЗИТЬ(СубконтоКт1 КАК Справочник.СтатьиДвиженияДенежныхСредств).ВидДвиженияДенежныхСредств = &ВидДДСПрочиеПлатежи) КАК ХозрасчетныйОборотыДтКт
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОборотыДтКт.СуммаОборот,
	|		0
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|				&НачПериода,
	|				&КонПериода,
	|				,
	|				СчетДт = &СчетРасчетныеСчета,
	|				&СубконтоСтатьиДДС,
	|				СчетКт = &СчетПрочиеДоходы,
	|				&СубконтоПрочиеДоходыРасходы,
	|				Организация = &Организация
	|					И ВЫРАЗИТЬ(СубконтоДт1 КАК Справочник.СтатьиДвиженияДенежныхСредств).ВидДвиженияДенежныхСредств = &ВидДДСПрочиеПоступления
	|					И СубконтоКт1 В (&ПокупкаПродажаВалюты)) КАК ХозрасчетныйОборотыДтКт) КАК ВложенныйЗапрос
	|
	|ИМЕЮЩИЕ
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ВалютоОбменДО, 0)) > 0 И
	|	СУММА(ЕСТЬNULL(ВложенныйЗапрос.ВалютоОбменКО, 0)) > 0";

	Запрос.УстановитьПараметр("НачПериода",                        НачалоПериодаОтчета);
	Запрос.УстановитьПараметр("КонПериода",                        КонецПериодаОтчета);
	Запрос.УстановитьПараметр("Организация",                       Организация);
	Запрос.УстановитьПараметр("СчетаБанка",                        СчетаБанка);
	Запрос.УстановитьПараметр("СчетаПриобретениеРеализацииВалюты", СчетаПриобретениеРеализацииВалюты);
	Запрос.УстановитьПараметр("СчетРасчетныеСчета",                Счет("51"));
	Запрос.УстановитьПараметр("СчетПрочиеДоходы",                  ПланыСчетов.Хозрасчетный.ПрочиеДоходы);
	Запрос.УстановитьПараметр("ПокупкаПродажаВалюты",              ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПредопределенныйЭлемент("Справочник.ПрочиеДоходыИРасходы.ДоходыРасходыПриПродажеПокупкеВалюты"));
	Запрос.УстановитьПараметр("ВидДДСПрочиеПоступления",           ВидДДСПолучения);
	Запрос.УстановитьПараметр("ВидДДСПрочиеПлатежи",               ВидДДСПеречисления);
	Запрос.УстановитьПараметр("СубконтоСтатьиДДС",                 ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиДвиженияДенежныхСредств);
	Запрос.УстановитьПараметр("СубконтоПрочиеДоходыРасходы",       ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрочиеДоходыИРасходы);
	
	ТаблицаПоВалютноОбменнымОперациям = Запрос.Выполнить().Выгрузить();
	
	Возврат ТаблицаПоВалютноОбменнымОперациям;
	
КонецФункции

Процедура ВывестиСтрокуОДДС(ПараметрыВывода)
	
	ИмяРаздела = "ОДДС";
	
	Графа              = ПараметрыВывода.Графа;
	ЗаголовокГрафы     = ПараметрыВывода.ЗаголовокГрафы;
	СтруктураДДС       = ПараметрыВывода.СтруктураДДС;
	СтруктураНДСвДДС   = ПараметрыВывода.СтруктураНДСвДДС;
	НомерСтроки        = ПараметрыВывода.НомерСтроки;
	НаименованиеСтроки = ПараметрыВывода.НаименованиеСтроки;
	ЗначениеВидаДДС    = ПараметрыВывода.ВидДДС;
	ФормулаРасчета     = ПараметрыВывода.ФормулаРасчета;
	ТаблицаРасшифровки = ПараметрыВывода.ТаблицаРасшифровки;
	
	РассчитанныеПоказатели = ПараметрыВывода.РассчитанныеПоказатели;
	ДополнительныеПараметрыРасшифровки = ПараметрыВывода.ДополнительныеПараметрыРасшифровки;
	ОбщиеПараметрыРасшифровки = ПараметрыВывода.ОбщиеПараметрыРасшифровки;
	
	ВидыДДС = Новый Массив;
	Если ТипЗнч(ЗначениеВидаДДС) = Тип("Массив") Тогда
		ВидыДДС = ЗначениеВидаДДС;
	Иначе
		ВидыДДС.Добавить(ЗначениеВидаДДС);
	КонецЕсли;
	
	ИмяОбласти = "П000100" + НомерСтроки + Графа;
	Вычитаемый = (ФормулаРасчета = "-КО");
	
	ЗначениеПоказателя = 0;
	ВыведенПервыйЭлемент = Ложь;
	
	Для Каждого ВидДДС Из ВидыДДС Цикл
		
		НайденныеСтрокиПоВидуДДС = СтруктураДДС.НайтиСтроки(Новый Структура("ВидДДС", ВидДДС));
		
		Для Каждого ЭлементПоказателя Из НайденныеСтрокиПоВидуДДС Цикл
			
			Если НЕ ВыведенПервыйЭлемент Тогда
				ПолноеНаименованиеСтроки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
				ВыведенПервыйЭлемент = Истина;
			Иначе
				ПолноеНаименованиеСтроки = "";
			КонецЕсли;
			
			Если ФормулаРасчета = "ДО" Тогда
				Слагаемое = ЭлементПоказателя.ДО;
				НаименованиеОборота = "Дебетовый";
			ИначеЕсли ФормулаРасчета = "-КО" Тогда
				Слагаемое = ЭлементПоказателя.КО;
				НаименованиеОборота = "Кредитовый";
			Иначе
				ВызватьИсключение "Неверно задана формула для функции ВывестиСтрокуОДДС()";
			КонецЕсли;
			
			НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """/";
			ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
			
			НастройкиРасшифровки = НастройкиОСВПоВидуДДС(ОбщиеПараметрыРасшифровки, ЭлементПоказателя.СчетДДС, ЭлементПоказателя.ВидДДС);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "+", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, НастройкиРасшифровки);
			
			// Отражение уменьшения на сумму НДС.
			ОтборСтрокНДС = Новый Структура;
			ОтборСтрокНДС.Вставить("СчетДДС", ЭлементПоказателя.СчетДДС);
			ОтборСтрокНДС.Вставить("ВидДДС", ЭлементПоказателя.ВидДДС);
			СтрокиНДС = СтруктураНДСвДДС.НайтиСтроки(ОтборСтрокНДС);
			
			Если СтрокиНДС.Количество() > 0 Тогда
				Для Каждого СтрокаНДС Из СтрокиНДС Цикл
					Если СтрокаНДС.ДО = 0 И СтрокаНДС.КО = 0 Тогда
						Если ФормулаРасчета = "ДО" Тогда
							СлагаемоеНДС = -СтрокаНДС.ДО_НДС;
						ИначеЕсли ФормулаРасчета = "-КО" Тогда
							СлагаемоеНДС = -СтрокаНДС.КО_НДС;
						КонецЕсли;
						
						Если СлагаемоеНДС < 0 Тогда
							ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						КонецЕсли;

					ИначеЕсли ФормулаРасчета = "ДО" И СтрокаНДС.ДО < 0 Тогда
						// Сторно выплат комитентам.
						Слагаемое = СтрокаНДС.ДО;
						ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
						НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части денежных потоков комиссионеров или агентов";
						ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						
						// Обнаружен НДС по платежам, не связанными с комитентами.
						Если СтрокаНДС.ДО_НДС > 0 Тогда
							СлагаемоеНДС = -СтрокаНДС.ДО_НДС;
							ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						КонецЕсли;

					ИначеЕсли ФормулаРасчета = "-КО" И СтрокаНДС.КО < 0 Тогда
						// Сторно выплат комитентам.
						Слагаемое = СтрокаНДС.КО;
						ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
						НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части денежных потоков комиссионеров или агентов";
						ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						
						// Обнаружен НДС по платежам, не связанными с комитентами.
						Если СтрокаНДС.КО_НДС > 0 Тогда
							СлагаемоеНДС = -СтрокаНДС.КО_НДС;
							ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						КонецЕсли;
						
					КонецЕсли;
				КонецЦикла;
			Иначе
				НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, 0, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			КонецЕсли;
			
		КонецЦикла;
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбласти, ?(Вычитаемый, -1, 1) * ЗначениеПоказателя);
	
КонецПроцедуры

Процедура ВывестиСтрокуОДДС_НДС(ПараметрыВывода)
	
	ИмяРаздела = "ОДДС";
	
	ВидДДСПолучения    = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеПоступленияПоТекущейДеятельности;
	ВидДДСПеречисления = Перечисления.ВидыДвиженийДенежныхСредств.ПрочиеРасходыПоТекущейДеятельности;
	
	Графа              = ПараметрыВывода.Графа;
	ЗаголовокГрафы     = ПараметрыВывода.ЗаголовокГрафы;
	СтруктураДДС       = ПараметрыВывода.СтруктураДДС;
	СтруктураНДСвДДС   = ПараметрыВывода.СтруктураНДСвДДС;
	НомерСтроки        = ПараметрыВывода.НомерСтроки;
	НаименованиеСтроки = ПараметрыВывода.НаименованиеСтроки;
	ЗначениеВидаДДС    = ПараметрыВывода.ВидДДС;
	ФормулаРасчета     = ПараметрыВывода.ФормулаРасчета;
	ТаблицаРасшифровки = ПараметрыВывода.ТаблицаРасшифровки;
	
	Если ПараметрыВывода.Свойство("РасчетыПоВалютноОбменнымОперациям") Тогда
		РасчетыПоВалютноОбменнымОперациям = ПараметрыВывода.РасчетыПоВалютноОбменнымОперациям;
	Иначе
		РасчетыПоВалютноОбменнымОперациям = Новый ТаблицаЗначений;
	КонецЕсли;
	
	РасчетыПоНДС = ПараметрыВывода.РасчетыПоНДС;
	
	РассчитанныеПоказатели = ПараметрыВывода.РассчитанныеПоказатели;
	ДополнительныеПараметрыРасшифровки = ПараметрыВывода.ДополнительныеПараметрыРасшифровки;
	ОбщиеПараметрыРасшифровки = ПараметрыВывода.ОбщиеПараметрыРасшифровки;
	
	ВидыДДС = Новый Массив;
	Если ТипЗнч(ЗначениеВидаДДС) = Тип("Массив") Тогда
		ВидыДДС = ЗначениеВидаДДС;
	Иначе
		ВидыДДС.Добавить(ЗначениеВидаДДС);
	КонецЕсли;
	
	ИмяОбласти = "П000100" + НомерСтроки + Графа;
	Вычитаемый = (ФормулаРасчета = "-КО");
	
	ЗначениеПоказателя = 0;
	ВыведенПервыйЭлемент = Ложь;
	
	Для Каждого ВидДДС Из ВидыДДС Цикл
		
		НайденныеСтрокиПоВидуДДС = СтруктураДДС.НайтиСтроки(Новый Структура("ВидДДС", ВидДДС));
		
		Для Каждого ЭлементПоказателя Из НайденныеСтрокиПоВидуДДС Цикл
			
			Если НЕ ВыведенПервыйЭлемент Тогда
				ПолноеНаименованиеСтроки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
				ВыведенПервыйЭлемент = Истина;
			Иначе
				ПолноеНаименованиеСтроки = "";
			КонецЕсли;
			
			Если ФормулаРасчета = "ДО" Тогда
				Слагаемое = ЭлементПоказателя.ДО;
				НаименованиеОборота = "Дебетовый";
			ИначеЕсли ФормулаРасчета = "-КО" Тогда
				Слагаемое = ЭлементПоказателя.КО;
				НаименованиеОборота = "Кредитовый";
			Иначе
				ВызватьИсключение "Неверно задана формула для функции ВывестиСтрокуОДДС()";
			КонецЕсли;
			НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """/";
			ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
			
			НастройкиРасшифровки = НастройкиОСВПоВидуДДС(ОбщиеПараметрыРасшифровки, ЭлементПоказателя.СчетДДС, ЭлементПоказателя.ВидДДС);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"+", НаименованиеСоставляющей,
				Слагаемое, ИмяРаздела, НастройкиРасшифровки);
			
			// Отражение уменьшения на сумму НДС.
			ОтборСтрокНДС = Новый Структура;
			ОтборСтрокНДС.Вставить("СчетДДС", ЭлементПоказателя.СчетДДС);
			ОтборСтрокНДС.Вставить("ВидДДС", ЭлементПоказателя.ВидДДС);
			СтрокиНДС = СтруктураНДСвДДС.НайтиСтроки(ОтборСтрокНДС);
			
			Если СтрокиНДС.Количество() > 0 Тогда
				Для Каждого СтрокаНДС Из СтрокиНДС Цикл
					Если СтрокаНДС.ДО = 0 И СтрокаНДС.КО = 0 Тогда
						Если ФормулаРасчета = "ДО" Тогда
							СлагаемоеНДС = -СтрокаНДС.ДО_НДС;
						ИначеЕсли ФормулаРасчета = "-КО" Тогда
							СлагаемоеНДС = -СтрокаНДС.КО_НДС;
						КонецЕсли;
						
						Если СлагаемоеНДС < 0 Тогда
							ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
								"-", НаименованиеСоставляющей,
								СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						КонецЕсли;
						
					ИначеЕсли ФормулаРасчета = "-КО" И СтрокаНДС.КО < 0 Тогда
						// Сторно выплат комитентам.
						Слагаемое = СтрокаНДС.КО;
						ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
						НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части денежных потоков комиссионеров или агентов";
						ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
							"-", НаименованиеСоставляющей,
							Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						
						// Обнаружен НДС по платежам, не связанными с комитентами.
						Если СтрокаНДС.КО_НДС > 0 Тогда
							СлагаемоеНДС = -СтрокаНДС.КО_НДС;
							ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
								"-", НаименованиеСоставляющей,
								СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
						КонецЕсли;
						
					КонецЕсли;
					
				КонецЦикла;
				
			Иначе
				НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
					"-", НаименованиеСоставляющей,
					0, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				
			КонецЕсли;
			
			// Отражение уменьшения на сумму расчетов по НДС.
			Если ЭлементПоказателя.СчетДДС = Счет("51") Тогда
				Если ФормулаРасчета = "ДО" И ВидДДС = ВидДДСПолучения Тогда
					Слагаемое = -РасчетыПоНДС.ПолученныйНДС;
					НаименованиеСоставляющей = "Оборот с кредита счета 68.02 в дебет счета 51" + " /вид движения """ + Строка(ВидДДС) + """";
				ИначеЕсли ФормулаРасчета = "-КО" И ВидДДС = ВидДДСПеречисления Тогда
					Слагаемое = -РасчетыПоНДС.ПеречисленныйНДС;
					НаименованиеСоставляющей = "Оборот с кредита счета 51 в дебет счета 68.02" + " /вид движения """ + Строка(ВидДДС) + """";
				КонецЕсли;
				ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
					"-", НаименованиеСоставляющей,
					Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				
			КонецЕсли;
			
		КонецЦикла;
		
	КонецЦикла;
	
	// Отражение свернутого НДС.
	НДСПоставщиков = СтруктураНДСвДДС.Итог("КО_НДС");
	НДСПокупателей = СтруктураНДСвДДС.Итог("ДО_НДС");
	
	СвернутыйНДС = НДСПокупателей - НДСПоставщиков - РасчетыПоНДС.ПеречисленныйНДС + РасчетыПоНДС.ПолученныйНДС;
	
	// Отражение свернутого показателя (выгоды или потери) от валютно-обменных операций
	ЕстьВалютоОбменныеОперации = РасчетыПоВалютноОбменнымОперациям.Количество() > 0;
	Если ЕстьВалютоОбменныеОперации Тогда
		ВалютоОбменДО               = РасчетыПоВалютноОбменнымОперациям.Итог("ВалютоОбменДО");
		ВалютоОбменКО               = РасчетыПоВалютноОбменнымОперациям.Итог("ВалютоОбменКО");
		ВалютоОбменПродажДельта     = РасчетыПоВалютноОбменнымОперациям.Итог("ВалютоОбменДельта");
		ВыгодаПотеряВалютногоОбмена = ВалютоОбменДО - ВалютоОбменКО - ВалютоОбменПродажДельта;
	КонецЕсли;
	
	Если ФормулаРасчета = "ДО" Тогда
		Если СвернутыйНДС > 0 Тогда
			// Превышение полученного НДС над перечисленным НДС.
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"+", "Сумма НДС начисленного к уплате при расчетах с покупателями",
				НДСПокупателей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"-", "Сумма НДС начисленного к возмещению при расчетах с поставщиками",
				-НДСПоставщиков, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
			"-", "Сумма НДС перечисленного в бюджет (Оборот с кредита счета 51 в дебет счета 68.02, по виду движения денежных средств " + Строка(ВидДДСПеречисления) + ")",
				-РасчетыПоНДС.ПеречисленныйНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"+", "Сумма НДС полученного из бюджета (Оборот с кредита счета 68.02 в дебет счета 51, по виду движения денежных средств " + Строка(ВидДДСПолучения) + ")",
				РасчетыПоНДС.ПолученныйНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			
			ЗначениеПоказателя = ЗначениеПоказателя + СвернутыйНДС;
			
		КонецЕсли;
		
		Если ЕстьВалютоОбменныеОперации Тогда
			Если ВыгодаПотеряВалютногоОбмена > 0 Тогда
				ЗначениеПоказателяУсловное = ЗначениеПоказателя - ВалютоОбменКО;
			Иначе
				ЗначениеПоказателяУсловное = ЗначениеПоказателя - ВалютоОбменДО;
			КонецЕсли;
			
			Если ЗначениеПоказателяУсловное >= 0 Тогда
				Если ВыгодаПотеряВалютногоОбмена > 0 Тогда
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
						"-", "Сумма прочих платежей по текущим операциям в части валютно-обменных операций",
						-ВалютоОбменКО, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				Иначе
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
						"-", "Сумма прочих платежей по текущим операциям в части валютно-обменных операций",
						-ВалютоОбменДО, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				КонецЕсли;
				
				ЗначениеПоказателя = ЗначениеПоказателяУсловное;
				
			Иначе
				// Разница получилась отрицательной, она должна отразиться в строке 4129
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
					"-", "Сумма прочих поступлений по текущим операциям в части валютно-обменных операций",
					-ЗначениеПоказателя, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				
				ЗначениеПоказателя = 0;
				
				РасчетыПоВалютноОбменнымОперациям[0].ВалютоОбменДельта = ЗначениеПоказателяУсловное;
				
			КонецЕсли;
			
		КонецЕсли;
		
	ИначеЕсли ФормулаРасчета = "-КО" Тогда
		Если СвернутыйНДС <= 0 Тогда
			// Превышение перечисленного НДС над полученным НДС.
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"-", "Сумма НДС начисленного к уплате при расчетах с покупателями",
				-НДСПокупателей, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"+", "Сумма НДС начисленного к возмещению при расчетах с поставщиками",
				НДСПоставщиков, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"+", "Сумма НДС перечисленного в бюджет (Оборот с кредита счета 51 в дебет счета 68.02, по виду движения денежных средств " + Строка(ВидДДСПеречисления) + ")",
				РасчетыПоНДС.ПеречисленныйНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
				"-", "Сумма НДС полученного из бюджета (Оборот с кредита счета 68.02 в дебет счета 51, по виду движения денежных средств " + Строка(ВидДДСПолучения) + ")",
				-РасчетыПоНДС.ПолученныйНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			
			ЗначениеПоказателя = ЗначениеПоказателя - СвернутыйНДС;
			
		КонецЕсли;
		
		Если ЕстьВалютоОбменныеОперации Тогда
			Если ВыгодаПотеряВалютногоОбмена < 0 Тогда
				ЗначениеПоказателя = ЗначениеПоказателя - ВалютоОбменДО - ВалютоОбменПродажДельта;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
					"-", "Сумма прочих поступлений по текущим операциям в части валютно-обменных операций",
					-(ВалютоОбменДО + ВалютоОбменПродажДельта), ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			Иначе
				ЗначениеПоказателя = ЗначениеПоказателя - ВалютоОбменКО - ВалютоОбменПродажДельта;
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки,
					"-", "Сумма прочих платежей по текущим операциям в части валютно-обменных операций",
					-(ВалютоОбменКО + ВалютоОбменПродажДельта), ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЕсли;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбласти, ?(Вычитаемый, -1, 1) * ЗначениеПоказателя);
	
КонецПроцедуры

Процедура ВывестиСтрокуОДДС_Агентские(ПараметрыВывода)
	
	ИмяРаздела = "ОДДС";
	
	Графа              = ПараметрыВывода.Графа;
	ЗаголовокГрафы     = ПараметрыВывода.ЗаголовокГрафы;
	СтруктураДДС       = ПараметрыВывода.СтруктураДДС;
	СтруктураНДСвДДС   = ПараметрыВывода.СтруктураНДСвДДС;
	НомерСтроки        = ПараметрыВывода.НомерСтроки;
	НаименованиеСтроки = ПараметрыВывода.НаименованиеСтроки;
	ЗначениеВидаДДС    = ПараметрыВывода.ВидДДС;
	ТаблицаРасшифровки = ПараметрыВывода.ТаблицаРасшифровки;
	
	РассчитанныеПоказатели = ПараметрыВывода.РассчитанныеПоказатели;
	ДополнительныеПараметрыРасшифровки = ПараметрыВывода.ДополнительныеПараметрыРасшифровки;
	ОбщиеПараметрыРасшифровки = ПараметрыВывода.ОбщиеПараметрыРасшифровки;
	
	ВидыДДС = Новый Массив;
	Если ТипЗнч(ЗначениеВидаДДС) = Тип("Массив") Тогда
		ВидыДДС = ЗначениеВидаДДС;
	Иначе
		ВидыДДС.Добавить(ЗначениеВидаДДС);
	КонецЕсли;
	
	ФормулыРасчета = Новый Массив;
	Если ТипЗнч(ПараметрыВывода.ФормулаРасчета) = Тип("Массив") Тогда
		ФормулыРасчета = ПараметрыВывода.ФормулаРасчета;
	Иначе
		ФормулыРасчета.Добавить(ПараметрыВывода.ФормулаРасчета);
	КонецЕсли;
	
	ИмяОбласти = "П000100" + НомерСтроки + Графа;
	
	Вычитаемый = (ФормулыРасчета[0] = "-КО");
	
	ЗначениеПоказателя = 0;
	ВыведенПервыйЭлемент = Ложь;
	
	Для Каждого ВидДДС Из ВидыДДС Цикл
		
		НайденныеСтрокиПоВидуДДС = СтруктураДДС.НайтиСтроки(Новый Структура("ВидДДС", ВидДДС));
		
		Для Каждого ЭлементПоказателя Из НайденныеСтрокиПоВидуДДС Цикл
			
			Если НЕ ВыведенПервыйЭлемент Тогда
				ПолноеНаименованиеСтроки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
				ВыведенПервыйЭлемент = Истина;
			Иначе
				ПолноеНаименованиеСтроки = "";
			КонецЕсли;
			
			Для Каждого ФормулаРасчета Из ФормулыРасчета Цикл 
				
				Если ФормулаРасчета = "ДО" Тогда
					Слагаемое = ЭлементПоказателя.ДО;
					НаименованиеОборота = "Дебетовый";
				ИначеЕсли ФормулаРасчета = "-ДО" Тогда
					Слагаемое = -ЭлементПоказателя.ДО;
					НаименованиеОборота = "Дебетовый";
				ИначеЕсли ФормулаРасчета = "-КО" Тогда
					Слагаемое = ЭлементПоказателя.КО;
					НаименованиеОборота = "Кредитовый";
				ИначеЕсли ФормулаРасчета = "КО" Тогда
					Слагаемое = -ЭлементПоказателя.КО;
					НаименованиеОборота = "Кредитовый";
				Иначе
					ВызватьИсключение "Неверно задана формула для функции ВывестиСтрокуОДДС()";
				КонецЕсли;

				НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """/";
				ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
				
				НастройкиРасшифровки = НастройкиОСВПоВидуДДС(ОбщиеПараметрыРасшифровки, ЭлементПоказателя.СчетДДС, ЭлементПоказателя.ВидДДС);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "+", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, НастройкиРасшифровки);
				
				// Отражение уменьшения на сумму НДС
				ОтборСтрокНДС = Новый Структура;
				ОтборСтрокНДС.Вставить("СчетДДС", ЭлементПоказателя.СчетДДС);
				ОтборСтрокНДС.Вставить("ВидДДС", ЭлементПоказателя.ВидДДС);
				СтрокиНДС = СтруктураНДСвДДС.НайтиСтроки(ОтборСтрокНДС);
				
				Если СтрокиНДС.Количество() > 0 Тогда
					Для Каждого СтрокаНДС Из СтрокиНДС Цикл
						Если СтрокаНДС.ДО = 0 И СтрокаНДС.КО = 0 Тогда
							ЗнакНДС = -1;
							Если ФормулаРасчета = "ДО" Тогда
								СлагаемоеНДС = СтрокаНДС.ДО_НДС;
							ИначеЕсли ФормулаРасчета = "-ДО" Тогда
								СлагаемоеНДС = СтрокаНДС.ДО_НДС;
								ЗнакНДС = 1;
							ИначеЕсли ФормулаРасчета = "-КО" Тогда
								СлагаемоеНДС = СтрокаНДС.КО_НДС;
							ИначеЕсли ФормулаРасчета = "КО" Тогда
								СлагаемоеНДС = СтрокаНДС.КО_НДС;
								ЗнакНДС = 1;
							КонецЕсли;
							
							Если СлагаемоеНДС > 0 Тогда
								ЗначениеПоказателя = ЗначениеПоказателя + ЗнакНДС * СлагаемоеНДС;
								НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
								ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, ЗнакНДС * СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
							КонецЕсли;
	
						ИначеЕсли ФормулаРасчета = "ДО" И СтрокаНДС.ДО < 0 Тогда
							// Сторно выплат комитентам;
							Слагаемое = СтрокаНДС.ДО;
							ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части денежных потоков комиссионеров или агентов";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	
							// Обнаружен НДС по платежам, не связанными с комитентами.
							Если СтрокаНДС.ДО_НДС > 0 Тогда
								СлагаемоеНДС = -СтрокаНДС.ДО_НДС;
								ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
								НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
								ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
							КонецЕсли;
	
						ИначеЕсли ФормулаРасчета = "-КО" И СтрокаНДС.КО < 0 Тогда
							// Сторно выплат комитентам;
							Слагаемое = СтрокаНДС.КО;
							ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
							НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части денежных потоков комиссионеров или агентов";
							ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
	
							// Обнаружен НДС по платежам, не связанными с комитентами.
							Если СтрокаНДС.КО_НДС > 0 Тогда
								СлагаемоеНДС = -СтрокаНДС.КО_НДС;
								ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
								НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
								ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
							КонецЕсли;
							
						КонецЕсли;
					КонецЦикла;
				Иначе
					НаименованиеСоставляющей = НаименованиеОборота + " оборот по счету " + ЭлементПоказателя.СчетДДС.Код + " /вид движения """ + Строка(ВидДДС) + """ в части НДС";
					ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, 0, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
				КонецЕсли;
			КонецЦикла;
		КонецЦикла;
	КонецЦикла;
	
	// Сторно платежей комитентам.
	Для Каждого СтрокаНДС Из СтруктураНДСвДДС Цикл

		Если ЗначениеЗаполнено(СтрокаНДС.СчетДДС) Тогда
			Продолжить;
		КонецЕсли;
	
		Если ФормулаРасчета = "ДО" И СтрокаНДС.ДО < 0 Тогда
			Слагаемое = СтрокаНДС.ДО;
			СлагаемоеНДС = -СтрокаНДС.ДО_НДС;
			
			ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
			НаименованиеСоставляющей = "Поступление денежных средств в части денежных потоков комиссионеров или агентов";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			
			ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
			НаименованиеСоставляющей = "Поступление денежных средств в части денежных потоков комиссионеров или агентов в части НДС";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "+", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);

		ИначеЕсли ФормулаРасчета = "-КО" И СтрокаНДС.КО < 0 Тогда
			Слагаемое = СтрокаНДС.КО;
			СлагаемоеНДС = -СтрокаНДС.КО_НДС;
			
			ЗначениеПоказателя = ЗначениеПоказателя + Слагаемое;
			НаименованиеСоставляющей = "Платежи денежных средств в части денежных потоков комиссионеров или агентов";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "-", НаименованиеСоставляющей, Слагаемое, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			
			ЗначениеПоказателя = ЗначениеПоказателя + СлагаемоеНДС;
			НаименованиеСоставляющей = "Платежи денежных средств в части денежных потоков комиссионеров или агентов в части НДС";
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбласти, ПолноеНаименованиеСтроки, "+", НаименованиеСоставляющей, СлагаемоеНДС, ИмяРаздела, ДополнительныеПараметрыРасшифровки);
			
		КонецЕсли;
	КонецЦикла;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбласти, ?(Вычитаемый, -1, 1) * ЗначениеПоказателя);
	
КонецПроцедуры

#КонецОбласти

#Область ОЦИС // Отчет об использовании целевых средств

Процедура ЗаполнитьФормаОтчета2011Кв4_ОЦИС(КонтекстВыполнения, ПериодыОтчета)
	
	Упрощенная = Ложь;
	Раздел     = "ОЦИПС"; // В упрощенной форме имя раздела отличается
	
	ГрафыОЦИС = ЗаполнениеБухгалтерскойОтчетностиПоказатели.ГрафыОЦИС(Упрощенная);
	
	Для Каждого ОписаниеПериода Из ПериодыОтчета Цикл
	
		ДанныеЗаполнения = ДанныеЗаполненияОЦИС(
			ОписаниеПериода.Значение.Начало,
			ОписаниеПериода.Значение.Конец,
			КонтекстВыполнения.Организация,
			Упрощенная);
			
		Если ДанныеЗаполнения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		КодГрафы = ГрафыОЦИС[ОписаниеПериода.Ключ];
		ЗаполнитьЯчейкиОЦИС(КонтекстВыполнения, ДанныеЗаполнения, Раздел, КодГрафы);
			
	КонецЦикла;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_ОЦИС(КонтекстВыполнения, ПериодыОтчета)
	
	Упрощенная = Ложь;
	Раздел     = "ОЦИС";
	
	ГрафыОЦИС = ЗаполнениеБухгалтерскойОтчетностиПоказатели.ГрафыОЦИС(Упрощенная);
	
	Для Каждого ОписаниеПериода Из ПериодыОтчета Цикл
	
		ДанныеЗаполнения = ДанныеЗаполненияОЦИС(
			ОписаниеПериода.Значение.Начало,
			ОписаниеПериода.Значение.Конец,
			КонтекстВыполнения.Организация,
			Упрощенная);
			
		Если ДанныеЗаполнения = Неопределено Тогда
			Продолжить;
		КонецЕсли;
			
		КодГрафы = ГрафыОЦИС[ОписаниеПериода.Ключ];
		ЗаполнитьЯчейкиОЦИС(КонтекстВыполнения, ДанныеЗаполнения, Раздел, КодГрафы);
			
	КонецЦикла;
	
КонецПроцедуры

Функция ДанныеЗаполненияОЦИС(НачалоПериода, КонецПериода, Организация, Упрощенная) Экспорт
	
	ДанныеЗаполнения = Новый Структура;
	ДанныеЗаполнения.Вставить("Показатели");
	ДанныеЗаполнения.Вставить("Расшифровка");
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ПолучитьДанныеЗаполненияОЦИС(
		ДанныеЗаполнения.Показатели,
		ДанныеЗаполнения.Расшифровка,
		НачалоПериода,
		КонецПериода,
		Организация,
		Упрощенная);
		
	Если ДанныеЗаполнения.Показатели = Неопределено Или ДанныеЗаполнения.Расшифровка = Неопределено Тогда
		Возврат Неопределено;
	КонецЕсли;
	
	Возврат ДанныеЗаполнения;
	
КонецФункции

Процедура ЗаполнитьЯчейкиОЦИС(КонтекстВыполнения, ДанныеЗаполнения, Раздел, КодГрафы)
	
	// Вызывающий код не обеспечивает инициализацию объекта
	Если КонтекстВыполнения.ТаблицаРасшифровки = Неопределено Тогда
		КонтекстВыполнения.ТаблицаРасшифровки = ЗаполнениеРасшифровкаРегламентированнойОтчетности.НовыйРасшифровка();
	КонецЕсли;
	
	ПрефиксРаздела = ЗаполнениеБухгалтерскойОтчетностиПоказатели.ПрефиксЯчейкиОЦИС();
	
	Для Каждого ОписаниеПоказателя Из ДанныеЗаполнения.Показатели Цикл
		
		НомерЯчейки = ЗаполнениеБухгалтерскойОтчетностиПоказатели.НомерЯчейки(
			ПрефиксРаздела,
			ОписаниеПоказателя.Ключ,
			КодГрафы);
		
		Запись = КонтекстВыполнения.РассчитанныеПоказатели.Добавить();
		Запись.Раздел     = Раздел;
		Запись.Показатель = НомерЯчейки;
		Запись.Сумма      = ОписаниеПоказателя.Значение;
		
	КонецЦикла;
	
	Для Каждого ИсходнаяЗапись Из ДанныеЗаполнения.Расшифровка Цикл
		
		Запись = КонтекстВыполнения.ТаблицаРасшифровки.Добавить();
		
		ЗаполнитьЗначенияСвойств(Запись, ИсходнаяЗапись);
		
		Запись.ИмяРаздела    = Раздел;
		Запись.ИмяПоказателя = ЗаполнениеБухгалтерскойОтчетностиПоказатели.НомерЯчейки(
			ПрефиксРаздела,
			ИсходнаяЗапись.ИмяПоказателя,
			КодГрафы);
			
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область ЗаполнениеОтчетовБО2019Кв1

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафе(КонтекстВыполнения) Экспорт
	
	Организация = КонтекстВыполнения.Организация;
	НачалоПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.НачалоПериодаОтчета;
	КонецПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	ОбщиеИтогиПоСчетам = РассчитатьБухгалтерскиеВеличиныФормаОтчета2019Кв1_Баланс(КонтекстВыполнения);
		
	ЭтоБалансНКО = (КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения = "БалансНКО");
	
	// Заполнение значений вычетов для строк Расчета активов.
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	СКД_75_01 = СКД("75.01", ОбщиеИтогиПоСчетам.СальдоИОборотыПоСчетам);
	СКК_86    = СКК("86", ОбщиеИтогиПоСчетам.СальдоИОборотыПоСчетам);
	СКК_98_02 = СКК("98.02", ОбщиеИтогиПоСчетам.СальдоИОборотыПоСчетам);
	
	НоваяСтрока75_01 = КонтекстВыполнения.ТаблицаСведенийСчета75_01.Добавить();
	НоваяСтрока75_01.Графа = Графа;
	НоваяСтрока75_01.Сумма = СКД_75_01;
	
	НоваяСтрокаВычета1530 = КонтекстВыполнения.ЗначенияВычетаИзРасчетаАктивов1530.Добавить();
	НоваяСтрокаВычета1530.Графа = Графа;
	НоваяСтрокаВычета1530.Сумма = ?(ЭтоБалансНКО, 0, СКК_86)
	                            + СКК_98_02;
	
	ПроцессорПоказателя = НовыйПроцессорПоказателя();
	ПроцессорПоказателя.СчетаСРеквизитами = КонтекстВыполнения.СчетаСРеквизитами;
	ПроцессорПоказателя.ПараметрыСчетов = ПараметрыСчетов_Баланс2019Кв1();
	ПроцессорПоказателя.РассчитанныеЗначения = БухгалтерскиеИтоги_Баланс2019Кв1(Организация, КонецПериодаОтчета, ОбщиеИтогиПоСчетам, НачалоПериодаОтчета);
	ПроцессорПоказателя.ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ПроцессорПоказателя.Организация = Организация;
	ПроцессорПоказателя.ИмяРаздела = "Баланс";
	ПроцессорПоказателя.НачалоПериода = НачалоПериодаОтчета;
	ПроцессорПоказателя.КонецПериода  = КонецПериодаОтчета;
	
	КонтекстВыполнения.Вставить("ПроцессорПоказателя", ПроцессорПоказателя);	
	
	ПараметрыАлгоритмов = ПараметрыАлгоритмовБаланса2019(КонтекстВыполнения, ОбщиеИтогиПоСчетам);
	
	КонтекстВыполнения.Вставить("Алгоритмы", АлгоритмыБО2019Кв1_Баланс(ПараметрыАлгоритмов));
	КонтекстВыполнения.Вставить("РассчитанныеПараметры", ОбщиеИтогиПоСчетам);
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафеПоАлгоритмам(КонтекстВыполнения);
	
	КонтекстВыполнения.Удалить("ПроцессорПоказателя");
	
КонецПроцедуры

Функция РассчитатьБухгалтерскиеВеличиныФормаОтчета2019Кв1_Баланс(КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	НачалоПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.НачалоПериодаОтчета;
	КонецПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация",   Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	ОбщиеИтогиПоСчетам = Новый Структура;
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОбщиеИтогиПоСчетам.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	
	СчетаДляРасчета = "76.01.1, 76.03, 76.05, 76.06, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.41, 76.49, 76.К";
	СубконтоДляРасчета = "Контрагенты";
	
	СиО_Контрагенты = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Контрагенты", СиО_Контрагенты);
	
	СчетаДляРасчета = "60.01, 60.21, 60.31, 62.01, 62.21, 62.31,
	                  |76.01.1, 76.03, 76.05, 76.06, 76.07, 76.09, 76.21, 76.25, 76.26, 76.29, 76.35, 76.36, 76.39, 76.К, 76.НА, 76.07.2";
	СубконтоДляРасчета = "Контрагенты, Договоры";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, "Лизинг, НеотфактурованныеПоставки");
	
	СиО_КонтрагентыДоговоры = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_КонтрагентыДоговоры", СиО_КонтрагентыДоговоры);
	
	СчетаДляРасчета = "68.01.1, 68.01.2 68.02, 68.03, 68.06, 68.07, 68.08, 68.09, 68.11, 68.12, 68.13, 68.15,  68.21, 68.34, 68.52,
	                  |69.01, 69.02.1, 69.02.2, 69.02.3, 69.02.4, 69.02.5, 69.02.6, 69.02.7,
	                  |69.03.1, 69.03.2, 69.04, 69.05.1, 69.05.2, 69.06.1, 69.06.2, 69.06.3, 69.06.4, 69.06.5, 69.09, 69.11, 69.12";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_ВидыПлатежей = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежей", СиО_ВидыПлатежей);
	
	СчетаДляРасчета = "68.04.1, 68.10";
	СубконтоДляРасчета = "ВидыПлатежейВГосБюджет, УровниБюджетов";
	
	СиО_ВидыПлатежейУровниБюджетов = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_ВидыПлатежейУровниБюджетов", СиО_ВидыПлатежейУровниБюджетов);
	
	СчетаДляРасчета = "70, 71, 73.03";
	СубконтоДляРасчета = "РаботникиОрганизаций";
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаДляРасчета, СубконтоДляРасчета);
	
	СиО_Работники = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Работники", СиО_Работники);
	
	СчетаДляРасчета = "96.09";
	СубконтоДляРасчета = "Резервы";
	
	СиО_Резервы = СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, СчетаДляРасчета, СубконтоДляРасчета);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Резервы", СиО_Резервы);
	
	СиО_Аренда = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76_07(КонецПериодаОтчета, Организация);
	ОбщиеИтогиПоСчетам.Вставить("СиО_Аренда", СиО_Аренда);
	
	Возврат ОбщиеИтогиПоСчетам;
	
КонецФункции

Функция ПараметрыАлгоритмовБаланса2019(КонтекстВыполнения, ОбщиеИтогиПоСчетам)
	
	Организация = КонтекстВыполнения.Организация;
	
	ПараметрыАлгоритмов = Новый Структура;
	
	ПараметрыАлгоритмов.Вставить("ПрименяетсяФСБУ25", КонтекстВыполнения.ОрганизацияПрименяетФСБУ25);
	ПараметрыАлгоритмов.Вставить("ЭтоИП", НЕ РегламентированнаяОтчетностьПереопределяемый.ЭтоЮридическоеЛицо(Организация));
	ПараметрыАлгоритмов.Вставить("Отражать_68_04_2", (КонтекстВыполнения.МакетыОФР = "61н_2019"));
	ПараметрыАлгоритмов.Вставить("УчетС2018",
		(ПривестиКДате(КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета) >= '2018-01-01'));
	ПараметрыАлгоритмов.Вставить("УчетС2023",
		(ПривестиКДате(КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета) >= '2023-01-01'));
	ПараметрыАлгоритмов.Вставить("СОтчетногоПериода2024",
		(ПривестиКДате(КонтекстВыполнения.КонецОтчетногоПериода) >= '2024-01-01'));
	ПараметрыАлгоритмов.Вставить("УчетНа70ВедетсяСводно", КонтекстВыполнения.УчетНа70ВедетсяСводно);
	ПараметрыАлгоритмов.Вставить("ИдентификаторАвтозаполнения",
		КонтекстВыполнения.СтруктураОтчета.Баланс.ИдентификаторАвтозаполнения);
	ПараметрыАлгоритмов.Вставить("ИсключитьМОБ",
			КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета = КонецГода(КонтекстВыполнения.КонецОтчетногоПериода));
	
	Возврат ПараметрыАлгоритмов;
	
КонецФункции

Функция АлгоритмыБО2019Кв1_Баланс(ПараметрыЗаполнения)
	
	ИдентификаторАвтозаполнения = ПараметрыЗаполнения.ИдентификаторАвтозаполнения;
	
	Алгоритмы = Новый Массив;
	
	ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел1(Алгоритмы, ПараметрыЗаполнения);
	ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел2(Алгоритмы, ПараметрыЗаполнения);
	Если ИдентификаторАвтозаполнения = "Баланс" Тогда
		ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел3(Алгоритмы, ПараметрыЗаполнения);
	ИначеЕсли ИдентификаторАвтозаполнения = "БалансНКО" Тогда
		ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел3_НКО(Алгоритмы, ПараметрыЗаполнения);
	КонецЕсли;
	ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел4(Алгоритмы, ПараметрыЗаполнения);
	ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел5(Алгоритмы, ПараметрыЗаполнения);
	
	ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьАлгоритмыБО2019Кв1Баланс(Алгоритмы, ПараметрыЗаполнения);
	
	Возврат Алгоритмы;
	
КонецФункции

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел1(Алгоритмы, ПараметрыЗаполнения)
	
	ПрименяетсяФСБУ25 = ПараметрыЗаполнения.ПрименяетсяФСБУ25;
	ИсключитьМОБ = ПараметрыЗаполнения.ИсключитьМОБ;
	СОтчетногоПериода2024 = ПараметрыЗаполнения.СОтчетногоПериода2024;

#Область Строка1110
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1110", 11101,
		"Нематериальные активы");
		
	Если СОтчетногоПериода2024 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 04"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
		Если ИсключитьМОБ Тогда
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.01"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.01, 84"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 05"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 05, 84"));
		КонецЕсли;
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11101",
			"Нематериальные активы в организации");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 04"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
		Если ИсключитьМОБ Тогда
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.01"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.01, 84"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 05"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 05, 84"));
		КонецЕсли;
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11102",
			"Приобретение нематериальных активов");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11103",
			"Выполнение научно-исследовательских, опытно-конструкторских и технологических работ");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
		
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 04.01"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
		Если ИсключитьМОБ Тогда
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.01"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.01, 84"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 05"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 05, 84"));
		КонецЕсли;
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11101",
			"Нематериальные активы в организации");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 04.01"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 05"));
		Если ИсключитьМОБ Тогда
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.01"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.01, 84"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 05"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 05, 84"));
		КонецЕсли;
	
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11102",
			"Приобретение нематериальных активов");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.05"));
	
	КонецЕсли;

#КонецОбласти
	
#Область Строка1120

	Если НЕ СОтчетногоПериода2024 Тогда
		
		АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1120", 11201,
			"Результаты исследований и разработок");
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 04.02"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
		Если ИсключитьМОБ Тогда
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.02"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.02, 84"));
		КонецЕсли;
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11201",
			"Расходы на научно-исследовательские, опытно-конструкторские и технологические работы");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 04.02"));
		Если ИсключитьМОБ Тогда
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.02"));
			АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.02, 84"));
		КонецЕсли;
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11202",
			"Выполнение научно-исследовательских, опытно-конструкторских и технологических работ");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.08"));
	КонецЕсли;
	
#КонецОбласти
	
#Область Строка1130
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1130",
		"Нематериальные поисковые активы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.11"));
	
#КонецОбласти
	
#Область Строка1140
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1140",
		"Материальные поисковые активы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.12"));
	
#КонецОбласти
	
#Область Строка1150
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1150", 11501,
		"Основные средства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 02.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 02.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.03"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 01.03, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.09"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 01.03, 08.04.2"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.01"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.01, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.03"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.03, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 76.07.1, 01.03"));
	КонецЕсли;
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11501",
		"Основные средства в организации");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.01 \ 01.01"));;
	
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.01, 84 \ 01.01"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.01 \ 01.01"));
	КонецЕсли;

	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11502",
		"Объекты недвижимости, права собственности на которые не зарегистрированы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.01 \ 01.08"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.01, 84 \ 01.08"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.01 \ 01.08"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11503",
		"Оборудование к установке");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11504",
		"Приобретение земельных участков");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11505",
		"Приобретение объектов природопользования");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11506",
		"Строительство объектов основных средств");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11507",
		"Приобретение объектов основных средств");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11508",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ОсновныеСредства;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11509",
		?(ПрименяетсяФСБУ25, "Права пользования активами", "Арендованное имущество"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 01.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.03"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.03"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 01.03, 84"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.09"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 01.03, 08.04.2"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.01"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.01, 84"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.03"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.03, 84"));
	КонецЕсли;
	
#КонецОбласти
	
#Область Строка1160
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1160", 11601,
		"Доходные вложения в материальные ценности");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.02"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.02, 84"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11601",
		"Материальные ценности в организации");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 03.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02 \ 03.01"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.02, 84 \ 03.01"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.02 \ 03.01"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11602",
		"Материальные ценности предоставленные во временное владение и пользование");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 03.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02 \ 03.02"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.02, 84 \ 03.02"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.02 \ 03.02"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11603",
		"Материальные ценности предоставленные во временное пользование");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 03.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02 \ 03.03"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.02, 84 \ 03.03"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.02 \ 03.03"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11604",
		"Прочие доходные вложения");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 03.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 02.02 \ 03.04"));
	Если ИсключитьМОБ Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 02.02, 84 \ 03.04"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 84, 02.02 \ 03.04"));
	КонецЕсли;
	
#КонецОбласти
	
#Область Строка1170
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1170", 11701,
		"Финансовые вложения");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.1"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11701",
		"Паи");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.1"));
	
#КонецОбласти
	
#Область Строка1180
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1180",
		"Отложенные налоговые активы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 09"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 09"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 09, 84"));
	КонецЕсли;
	
#КонецОбласти
	
#Область Строка1190
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1190", 11901,
		"Прочие внеоборотные активы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.07"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11901",
		"Перевод молодняка животных в основное стадо");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.06"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11902",
		"Приобретение взрослых животных");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 08.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "11903",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеВнеоборотныеАктивы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел2(Алгоритмы, ПараметрыЗаполнения)

	ЭтоИП                         = ПараметрыЗаполнения.ЭтоИП;
	Отражать_68_04_2              = ПараметрыЗаполнения.Отражать_68_04_2;
	УчетС2018                     = ПараметрыЗаполнения.УчетС2018;
	УчетС2023                     = ПараметрыЗаполнения.УчетС2023;
	УчетНа70ВедетсяСводно         = ПараметрыЗаполнения.УчетНа70ВедетсяСводно;
	ПрименяетсяФСБУ25             = ПараметрыЗаполнения.ПрименяетсяФСБУ25;
	ИсключитьМОБ                  = ПараметрыЗаполнения.ИсключитьМОБ;
	
#Область Строка1210
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1210", 12101,
		"Запасы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 14.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 16.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 20"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 23"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 29"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 44"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 14.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 43"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 14.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 14.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 16.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 42"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 45"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 28"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12101",
		"Материалы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 16.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12102",
		"Брак в производстве");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 28"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12103",
		"Товары отгруженные");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 45"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12104",
		"Товары");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 15.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 16.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 16.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 42"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12105",
		"Готовая продукция");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 43"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12106",
		"Расходы на продажу");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 44"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12108",
		"Основное производство");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 20"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 14.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12109",
		"Полуфабрикаты собственного производства");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12110",
		"Вспомогательные производства");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12111",
		"Обслуживающие производства и хозяйства");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 29"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12112",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.Запасы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
#КонецОбласти
	
#Область Строка1220
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1220", 12201,
		"Налог на добавленную стоимость по приобретенным ценностям");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 19"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 19.06"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12201",
		"НДС по приобретенным ОС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12202",
		"НДС по приобретенным НМА");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12203",
		"НДС по приобретенным материально-производственным запасам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12204",
		"НДС по приобретенным услугам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12205",
		"НДС, уплаченный при ввозе товаров на территорию РФ");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.05"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12206",
		"НДС по товарам, реализованным по ставке 0% (экспорт)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.07"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12207",
		"НДС при строительстве ОС");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.08"));
	
#КонецОбласти
	
#Область Строка1230
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1230", 12301,
		"Дебиторская задолженность");

	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 76.ВА"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.31"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.31"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 63"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01.2"));
	Если ЭтоИП Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.21"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежейУровни 68.04.1"));
	Если Отражать_68_04_2 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.04.2"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.08"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежейУровни 68.10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.13"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.15"));
	Если УчетС2018 Тогда
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.34"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.52"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.90"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.6"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.7"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.5"));

	Если УчетС2023 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.09"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР 69.13"));
	
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 70"));
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 70"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 73.03"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 75.01"));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.25"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.35"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.29"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.39"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.49"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.26"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.36"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.К"));
	Если ПрименяетсяФСБУ25 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_Аренда 76.07"));
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.07"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.14"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Резервы 96.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 46"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12301",
		"Расчеты с поставщиками и подрядчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 60.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 76.ВА"));
	
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККО_КонтрагентыДоговоры 60.31"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12302",
		"Расчеты с покупателями и заказчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 62.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДП_КонтрагентыДоговоры 62.31"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 63"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12303",
		"Расчеты по налогам и сборам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.01.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежейУровни 68.04.1"));
	Если Отражать_68_04_2 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.04.2"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.07"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежейУровни 68.10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.13"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.15"));
	Если УчетС2018 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.34"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.52"));
	КонецЕсли;
	Если ЭтоИП Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 68.21"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.90"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12304",
		"Расчеты по социальному страхованию и обеспечению");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.6"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.02.7"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.03.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.05.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.06.5"));
	Если УчетС2023 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.09"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_ВидыПлатежей 69.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР 69.13"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12310",
		"Расчеты с персоналом по оплате труда");
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 70"));
	Иначе
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 70"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12305",
		"Расчеты с подотчетными лицами");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 71"));
		
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12306",
		"Расчеты с персоналом по прочим операциям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 73.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Работники 73.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12307",
		"Расчеты по вкладам в уставный (складочный) капитал");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 75.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12308",
		"Расчеты с разными дебиторами и кредиторами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.05"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.25"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.35"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.29"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.39"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.14"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Контрагенты 76.49"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.26"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.36"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.К"));
	Если ПрименяетсяФСБУ25 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_Аренда 76.07"));
	Иначе
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.07"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12309",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ДебиторскаяЗадолженность;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12311",
		"Выполненные этапы по незавершенным работам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 46"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12312",
		"Оценочные обязательства");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_Резервы 96.09"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12313",
		"Расчеты с факторинговыми компаниями");
	
#КонецОбласти
	
#Область Строка1240
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1240", 12401,
		"Финансовые вложения");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 59"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12401",
		"Акции");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.01.2"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12402",
		"Долговые ценные бумаги");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКК 59"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12403",
		"Предоставленные займы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12404",
		"Вклады по договору простого товарищества");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12405",
		"Приобретенные права в рамках оказания финансовых услуг");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 58.05"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12406",
		"Депозитные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12407",
		"Депозитные счета (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.23"));
	
#КонецОбласти
	
#Область Строка1250
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1250", 12501,
		"Денежные средства и денежные эквиваленты");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 51"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 52"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.24"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 57"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12501",
		"Касса организации");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12502",
		"Операционная касса");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12503",
		"Касса организации (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12512",
		"Касса по деятельности платежного агента");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12504",
		"Расчетные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 51"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12505",
		"Валютные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 52"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12506",
		"Аккредитивы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12507",
		"Чековые книжки");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12508",
		"Прочие специальные счета");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12509",
		"Аккредитивы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12510",
		"Прочие специальные счета (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 55.24"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12511",
		"Переводы в пути");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 57"));
	
#КонецОбласти
	
#Область Строка1260
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1260", 12601,
		"Прочие оборотные активы");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.23"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.ОТ"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.НА"));
	
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	Если НЕ ПрименяетсяФСБУ25 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.07.9"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 94"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 76.07.9, 76.07.1"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12601",
		"Акцизы по оплаченным материальным ценностям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 19.06"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12602",
		"Денежные документы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12603",
		"Денежные документы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 50.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12604",
		"НДС по экспорту к возмещению");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 68.22"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12606",
		"НДС, начисленный по отгрузке");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.ОТ"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12607",
		"Расчеты по НДС при исполнении обязанностей налогового агента");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДР_КонтрагентыДоговоры 76.НА"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12608",
		"Расходы будущих периодов");
	ВидАктиваРБП = Перечисления.ВидыАктивовДляРБП.ПрочиеОборотныеАктивы;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 97", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.2", ВидАктиваРБП));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД_ПоВидуАктива 76.01.9", ВидАктиваРБП));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12609",
		"Недостачи и потери от порчи ценностей");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 94"));
	
	Если НЕ ПрименяетсяФСБУ25 Тогда
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "12610",
			"НДС по арендным обязательствам");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКД 76.07.9"));
	КонецЕсли;
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел3(Алгоритмы, ПараметрыЗаполнения)
	
	ИсключитьМОБ = ПараметрыЗаполнения.ИсключитьМОБ;
	
#Область Строка1310
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1310",
		"Уставный капитал (складочный капитал, уставный фонд, вклады товарищей)");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 80"));
	
#КонецОбласти
	
#Область Строка1320
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1320", 
		"Собственные акции, выкупленные у акционеров");
	АлгоритмСтроки.Вычитаемый = Истина;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКД 81"));
	
#КонецОбласти
	
#Область Строка1340
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1340", 13401,
		"Переоценка внеоборотных активов");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13401",
		"Переоценка основных средств");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.1"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13402",
		"Переоценка НМА");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.2"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13403",
		"Переоценка прочих внеоборотных активов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 83.01.3"));
	
#КонецОбласти
	
#Область Строка1350
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1350",
		"Добавочный капитал (без переоценки)");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКК 83.01"));
	
#КонецОбласти
	
#Область Строка1360
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1360", 13601,
		"Резервный капитал");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 82"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13601",
		"Резервы, образованные в соответствии с законодательством");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 82.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "13602",
		"Резервы, образованные в соответствии с учредительными документами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 82.02"));
	
#КонецОбласти
	
#Область Строка1370
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1370",
		"Нераспределенная прибыль (непокрытый убыток)");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 99"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 99"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.03"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 01.03, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 01.09"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.01"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.01, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.02"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.02, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 02.03"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 02.03, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 09"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 09, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 77"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 77, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 76.07.5"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 76.07.5, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.01"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.01, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 04.02"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 04.02, 84"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 05"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 05, 84"));
	КонецЕсли;
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел3_НКО(Алгоритмы, ПараметрыЗаполнения)
	
#Область Строка1310
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1310",
		"Паевой фонд");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 80"));
	
#КонецОбласти
	
#Область Строка1350
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1350",
		"Целевые средства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 84"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 99"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 99"));
	
#КонецОбласти
	
#Область Строка1360
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1360",
		"Фонд недвижимого и особо ценного движимого имущества");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 83"));
	
#КонецОбласти
	
#Область Строка1370
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1370",
		"Резервный и иные целевые фонды");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 82"));
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел4(Алгоритмы, ПараметрыЗаполнения)
	
	ПрименяетсяФСБУ25 = ПараметрыЗаполнения.ПрименяетсяФСБУ25;
	ИсключитьМОБ      = ПараметрыЗаполнения.ИсключитьМОБ;
	
#Область Строка1410
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1410", 14101,
		"Заемные средства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14101",
		"Долгосрочные кредиты");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14102",
		"Долгосрочные займы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14103",
		"Долгосрочные кредиты (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "14104",
		"Долгосрочные займы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.23"));
	
#КонецОбласти
	
#Область Строка1420
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1420",
		"Отложенные налоговые обязательства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 77"));
	Если ИсключитьМОБ Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 77"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 77, 84"));
	КонецЕсли;
#КонецОбласти
	
#Область Строка1450
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1450",
		"Прочие обязательства");
	Если Не ПрименяетсяФСБУ25 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.07.1"));
		Если ИсключитьМОБ Тогда
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ МОП_ОБ 84, 76.07.1"));
			АлгоритмСтроки.Составляющие.Добавить(Составляющая("- МОП_ОБ 76.07.1, 84"));
		КонецЕсли;
	КонецЕсли;
	
#КонецОбласти
	
КонецПроцедуры

Процедура ЗаполнитьАлгоритмыБО2019Кв1_Баланс_Раздел5(Алгоритмы, ПараметрыЗаполнения)
	
	ИдентификаторАвтозаполнения = ПараметрыЗаполнения.ИдентификаторАвтозаполнения;
	ЭтоИП                       = ПараметрыЗаполнения.ЭтоИП;
	Отражать_68_04_2            = ПараметрыЗаполнения.Отражать_68_04_2;
	УчетС2018                   = ПараметрыЗаполнения.УчетС2018;
	УчетС2023                   = ПараметрыЗаполнения.УчетС2023;
	УчетНа70ВедетсяСводно       = ПараметрыЗаполнения.УчетНа70ВедетсяСводно;
	ПрименяетсяФСБУ25           = ПараметрыЗаполнения.ПрименяетсяФСБУ25;
	
#Область Строка1510
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1510", 15101,
		"Заемные средства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 66"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.24"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15101",
		"Краткосрочные кредиты");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15102",
		"Краткосрочные займы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15103",
		"Проценты по краткосрочным кредитам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15104",
		"Проценты по долгосрочным кредитам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15105",
		"Проценты по краткосрочным займам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15106",
		"Проценты по долгосрочным займам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.04"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15107",
		"Краткосрочные кредиты (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.21"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15108",
		"Краткосрочные займы (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.23"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15109",
		"Проценты по краткосрочным кредитам (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.22"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15110",
		"Проценты по долгосрочным кредитам (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.22"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15111",
		"Проценты по краткосрочным займам (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 66.24"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15112",
		"Проценты по долгосрочным займам (в валюте)");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 67.24"));
	
#КонецОбласти
	
#Область Строка1520
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1520", 15201,
		"Кредиторская задолженность");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.31"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.22"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.31"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("- СКД 76.АВ"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01.2"));
	Если ЭтоИП Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.21"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежейУровни 68.04.1"));
	Если Отражать_68_04_2 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.04.2"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.07"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.08"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежейУровни 68.10"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.13"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.15"));
	Если УчетС2018 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.34"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.52"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.32"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.42"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.90"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.01"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.5"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.6"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.7"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.2"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.3"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.4"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.5"));
	Если УчетС2023 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.09"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.11"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.12"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР 69.13"));
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 70"));
	Иначе
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 70"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 73.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 75.02"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.03"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.05"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.25"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.35"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.06"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.26"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.36"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.21"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.04"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.29"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.39"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.41"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.49"));
	Если Не ПрименяетсяФСБУ25 Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.07.2"));
	КонецЕсли;
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.К"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.Н"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15201",
		"Расчеты с поставщиками и подрядчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККП_КонтрагентыДоговоры 60.31"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 60.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15202",
		"Расчеты с покупателями и заказчиками");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.22"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 62.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКДО_КонтрагентыДоговоры 62.31"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("- СКД 76.АВ"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15203",
		"Расчеты по налогам и сборам");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.01.2"));
	Если ЭтоИП Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.21"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.02"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежейУровни 68.04.1"));
	Если Отражать_68_04_2 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.04.2"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.07"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.08"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежейУровни 68.10"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.13"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.15"));
	Если УчетС2018 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.34"));
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 68.52"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.32"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.42"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 68.90"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15204",
		"Расчеты по социальному страхованию и обеспечению");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.01"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.5"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.6"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.02.7"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.03.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.05.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.2"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.3"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.4"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.06.5"));
	Если УчетС2023 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.09"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.11"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_ВидыПлатежей 69.12"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР 69.13"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15205",
		"Расчеты с персоналом по оплате труда");
	Если УчетНа70ВедетсяСводно Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 70"));
	Иначе
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 70"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15206",
		"Расчеты с подотчетными лицами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 71"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15209",
		"Расчеты с персоналом по прочим операциям");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Работники 73.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15207",
		"Задолженность участникам (учредителям) по выплате доходов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 75.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15208",
		"Расчеты с разными дебиторами и кредиторами");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.03"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.05"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.25"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.35"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.06"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.26"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.36"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.01.1"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.21"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.04"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.09"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.29"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.39"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.41"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Контрагенты 76.49"));
	Если Не ПрименяетсяФСБУ25 Тогда
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.07.2"));
	КонецЕсли;
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.К"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.Н"));
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 76.02"));
	
#КонецОбласти
	
#Область Строка1530
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1530", 15301,
		"Доходы будущих периодов");
	Если ИдентификаторАвтозаполнения = "БалансНКО" Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98"));
	ИначеЕсли ИдентификаторАвтозаполнения = "Баланс" Тогда
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 98"));
	КонецЕсли;
	
	Если ИдентификаторАвтозаполнения = "Баланс" Тогда
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15301",
			"Целевое финансирование");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 86"));
	КонецЕсли;
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15302",
		"Доходы, полученные в счет будущих периодов");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15303",
		"Безвозмездные поступления");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.02"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15304",
		"Предстоящие поступления по недостачам, выявленным за прошлые годы");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.03"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15305",
		"Разница между суммой, подлежащей взысканию с виновных лиц, и балансовой стоимостью по недостачам ценностей");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 98.04"));
	
#КонецОбласти
	
#Область Строка1540
	
	АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1540", 15401,
		"Оценочные обязательства");
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_Резервы 96.09"));
	АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК 96.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15401",
		"Оценочные обязательства по вознаграждениям работников");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК 96.01"));
	
	АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15402",
		"Резервы предстоящих расходов прочие");
	АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СККР_Резервы 96.09"));
	
#КонецОбласти
	
#Область Строка1550
	
	Если Не ПрименяетсяФСБУ25 Тогда
		АлгоритмСтроки = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, "1550",
			"Прочие обязательства");
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.НА"));
	Иначе
		АлгоритмСтроки = ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, "1550", 15501,
			"Прочие обязательства");
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СККР_КонтрагентыДоговоры 76.НА"));
		АлгоритмСтроки.Составляющие.Добавить(Составляющая("+ СКК_Аренда 76.07"));
		
		АлгоритмДопСтроки = ДобавитьНовыйАлгоритмСтроки(АлгоритмСтроки.ДопСтроки, "15501",
			"Краткосрочные обязательства по аренде");
		АлгоритмДопСтроки.Составляющие.Добавить(Составляющая("+ СКК_Аренда 76.07"));
	КонецЕсли;
	
#КонецОбласти
	
КонецПроцедуры

Функция ДобавитьНовыйАлгоритмСтроки(Алгоритмы, Номер, Наименование) Экспорт
	
	АлгоритмСтроки = НовыйАлгоритмСтроки();
	АлгоритмСтроки.Номер = Номер;
	АлгоритмСтроки.Наименование = Наименование;
	
	Алгоритмы.Добавить(АлгоритмСтроки);
	
	Возврат АлгоритмСтроки;
	
КонецФункции

Функция НовыйАлгоритмСтроки() Экспорт
	
	АлгоритмСтроки = Новый Структура;
	
	АлгоритмСтроки.Вставить("Номер", "");
	АлгоритмСтроки.Вставить("Наименование", "");
	АлгоритмСтроки.Вставить("Вычитаемый", Ложь);
	АлгоритмСтроки.Вставить("Составляющие", Новый Массив);

	// Расширение набора параметров для отчетности с 2025 года.
	АлгоритмСтроки.Вставить("Вписываемый", Ложь);
	АлгоритмСтроки.Вставить("ГрафаНаименования", "");
	АлгоритмСтроки.Вставить("ГрафаЗаполнения", "");
	
	Возврат АлгоритмСтроки;
	
КонецФункции

Функция ДобавитьНовыйАлгоритмСтрокиСДопСтроками(Алгоритмы, Номер, НумераторДопСтрок, Наименование) Экспорт
	
	НовыйАлгоритмСтрокиСДопСтроками = ДобавитьНовыйАлгоритмСтроки(Алгоритмы, Номер, Наименование);
	
	НовыйАлгоритмСтрокиСДопСтроками.Вставить("НумераторДопСтрок", НумераторДопСтрок);
	НовыйАлгоритмСтрокиСДопСтроками.Вставить("ДопСтроки", Новый Массив);
	
	Возврат НовыйАлгоритмСтрокиСДопСтроками;
	
КонецФункции

Функция Составляющая(ОписаниеСоставляющей, ДопПараметры = Неопределено)
	
	Составляющая = Новый Массив(2);
	Составляющая[0] = ОписаниеСоставляющей;
	Составляющая[1] = ДопПараметры;
	
	Возврат Составляющая;
	
КонецФункции

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_ОФР(КонтекстВыполнения) Экспорт
	
	НачалоПериодаОтчета = КонтекстВыполнения.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонецПериодаОтчета;
	
	НачалоПериодаПредыдущегоГода = ДобавитьМесяц(НачалоПериодаОтчета, -12);
	КонецПериодаПредыдущегоГода  = КонецМесяца(ДобавитьМесяц(КонецПериодаОтчета, -12));
	
	Если НачалоМесяца(КонецПериодаОтчета) = НачалоПериодаОтчета Тогда
		// Описание периода одного месяца.
		ОписаниеПериода = Формат(КонецПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		ОписаниеПериодаПрошлогоГода = Формат(КонецПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + "г.";
	Иначе
		// Описание диапазона месяцев.
		ОписаниеПериода = Формат(НачалоПериодаОтчета, "ДФ = 'ММММ гггг'") + " - "
		                + Формат(КонецПериодаОтчета, "ДФ = 'ММММ гггг'") + "г.";
		ОписаниеПериодаПрошлогоГода = Формат(НачалоПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + " - "
		                            + Формат(КонецПериодаПредыдущегоГода, "ДФ = 'ММММ гггг'") + "г.";
	КонецЕсли;
	
	ЗаголовокДатаОтчетногоПериода = "За " + ОписаниеПериода;
	ЗаголовокДатаОтчетногоПериодаПрошлогоГода = "За " + ОписаниеПериодаПрошлогоГода;
	
	ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_ОФР_ПоГрафе(
		"04", ЗаголовокДатаОтчетногоПериода, КонтекстВыполнения,
		НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ЗаполнятьПредыдущиеПериоды = НЕ РасширенныйПериодОтчета(НачалоПериодаОтчета);
	Если ЗаполнятьПредыдущиеПериоды Тогда
		ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_ОФР_ПоГрафе(
			"05", ЗаголовокДатаОтчетногоПериодаПрошлогоГода, КонтекстВыполнения,
			НачалоПериодаПредыдущегоГода, КонецПериодаПредыдущегоГода);
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_ОФР_ПоГрафе(Графа, ЗаголовокГрафы, КонтекстВыполнения, НачалоПериодаОтчета, КонецПериодаОтчета)
	
	ИмяРаздела = "ОФР";
	
	МакетыОФР = КонтекстВыполнения.МакетыОФР;
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	ИспользуютсяМакетыЕНВД = КонтекстВыполнения.ПрименениеЕНВД;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	
	ОрганизацияПрименяетЕНВД = РегламентированнаяОтчетность.ЭтоПлательщикЕНВД(
		Организация, НачалоПериодаОтчета, КонецПериодаОтчета);
	
	ОрганизацияПрименяетУСН = УчетнаяПолитика.ПрименяетсяУСН(Организация, КонецПериодаОтчета);
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация", Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода", КонецПериодаОтчета);
	
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.СоставДополнительныхСтрокОФР;
	
	ОрганизацияПрименяетПБУ18 = НЕ ОрганизацияПрименяетУСН И
		РегламентированнаяОтчетностьПереопределяемый.ПрименяетсяПБУ18(Организация, ПривестиКДате(КонецПериодаОтчета));
	
	НастройкиПолученияБухитогов = Новый Структура;
	НастройкиПолученияБухитогов.Вставить("Организация", Организация);
	НастройкиПолученияБухитогов.Вставить("НачалоПериода", НачалоПериодаОтчета);
	НастройкиПолученияБухитогов.Вставить("КонецПериода", КонецПериодаОтчета);
	
	СальдоИОборотыПоСчетам = ЗаполнениеБухгалтерскойОтчетностиИтоги.СальдоИОборотыПоСчетам(НастройкиПолученияБухитогов);
	ОборотыМеждуСчетами    = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(НастройкиПолученияБухитогов);
	
	Обороты91ПоВПДР = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоВПДР(НастройкиПолученияБухитогов);
	КО_91_01_ВПДР = Обороты91ПоВПДР.КО_91_01_ВПДР;
	ДО_91_02_ВПДР = Обороты91ПоВПДР.ДО_91_02_ВПДР;
	ДО_91_02__68_02_ВПДР = Обороты91ПоВПДР.ДО_91_02__68_02_ВПДР;
	ДО_91_02__76_ОТ_ВПДР = Обороты91ПоВПДР.ДО_91_02__76_ОТ_ВПДР;
	
	Обороты91ПоПереоценке = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоПереоценке(НастройкиПолученияБухитогов);
	КО_91_01__010304_ПереоценкаВнеоборотныхАктивов = Обороты91ПоПереоценке.КО_91_01__010304_ПереоценкаВнеоборотныхАктивов;
	КО_91_01__0205_ПереоценкаВнеоборотныхАктивов   = Обороты91ПоПереоценке.КО_91_01__0205_ПереоценкаВнеоборотныхАктивов;
	ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов = Обороты91ПоПереоценке.ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов;
	ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов   = Обороты91ПоПереоценке.ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов;
	
	Обороты91ПоКурсовымРазницамВУЕ = ЗаполнениеБухгалтерскойОтчетностиИтоги.Обороты91ПоКурсовымРазницамВУЕ(НастройкиПолученияБухитогов);
	
	Обороты99_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыСчета99_01ПоАналитике(НастройкиПолученияБухитогов);
	
	КО_99_01_ЧрезвычайныеДоходыРасходы = Обороты99_01[Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы].КО;
	ДО_99_01_ЧрезвычайныеДоходыРасходы = Обороты99_01[Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы].ДО;
	
	ДО_99_01_НалогНаПрибыль   = Обороты99_01[Перечисления.ПрибылиИУбытки.НалогНаПрибыль].ДО;
	ДО_99_01_НалоговыеСанкции = Обороты99_01[Перечисления.ПрибылиИУбытки.НалоговыеСанкции].ДО;

	СубконтоНалог = Новый Массив;
	СубконтоНалог.Добавить(Новый Структура("ВидСубконто, Отбор",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет,
		Перечисления.ВидыПлатежейВГосБюджет.Налог));
	
	НастройкиПолученияБухитогов.Вставить("КорСубконто", СубконтоНалог);
	
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка("68.04.1"));
	НастройкиПолученияБухитогов.Вставить("Счет", МассивСчетовВИерархииИзСписка("99.01.1"));
	ОБ_99_01_1__68_04_1_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	НастройкиПолученияБухитогов.Вставить("Счет", МассивСчетовВИерархииИзСписка("99.01"));
	ОБ_99_01__68_04_1_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка("68.12"));
	ОБ_99_01_1__68_12_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	НастройкиПолученияБухитогов.Вставить("Счет", МассивСчетовВИерархииИзСписка("99.01"));
	ОБ_99_01__68_12_Налог = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Удалить("Счет");
	НастройкиПолученияБухитогов.Удалить("КорСчет");
	НастройкиПолученияБухитогов.Удалить("КорСубконто");
	
	НастройкиПолученияБухитогов.Вставить("Счет",    МассивСчетовВИерархииИзСписка("99.01"));
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка("99.02"));
	Субконто = Новый Массив;
	Субконто.Добавить(Новый Структура("ВидСубконто, Отбор",
		ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ПрибылиИУбытки, Перечисления.ПрибылиИУбытки.НалогНаПрибыль));
	НастройкиПолученияБухитогов.Вставить("Субконто", Субконто);
	
	ОБ_99_01__99_02_НалогНаПрибыль =
		ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Удалить("Счет");
	НастройкиПолученияБухитогов.Удалить("КорСчет");
	НастройкиПолученияБухитогов.Удалить("Субконто");
	
	НомерСтроки = "2110";
	НаименованиеСтроки = "Выручка";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	КО_90_01 = КО("90.01", СальдоИОборотыПоСчетам);
	ДО_90_03 = ДО("90.03", СальдоИОборотыПоСчетам);
	ДО_90_04 = ДО("90.04", СальдоИОборотыПоСчетам);
	ДО_90_05 = ДО("90.05", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = КО_90_01 - ДО_90_03 - ДО_90_04 - ДО_90_05;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("90.01").Код, КО_90_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.03").Код, -ДО_90_03, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.03")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.04").Код, -ДО_90_04, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.04")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.05").Код, -ДО_90_05, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.05")));
	
	НомерСтроки = "2120";
	НаименованиеСтроки = "Себестоимость продаж";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_02 = ДО("90.02", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_02;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02").Код, ДО_90_02, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02")));
	
	НомерСтроки = "2210";
	НаименованиеСтроки = "Коммерческие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_07 = ДО("90.07", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_07;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07").Код, ДО_90_07, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07")));
	
	НомерСтроки = "2220";
	НаименованиеСтроки = "Управленческие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ДО_90_08 = ДО("90.08", СальдоИОборотыПоСчетам);
	
	ЗначениеПоказателя = ДО_90_08;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08").Код, ДО_90_08, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08")));
	
	Если ИспользуютсяМакетыЕНВД Тогда
		НомерСтроки = "21101";
		НаименованиеСтроки = "Выручка по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_90_01_1 = КО("90.01.1", СальдоИОборотыПоСчетам);
		ДО_90_03   = ДО("90.03", СальдоИОборотыПоСчетам);
		ДО_90_04   = ДО("90.04", СальдоИОборотыПоСчетам);
		ДО_90_05   = ДО("90.05", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_90_01_1 - ДО_90_03 - ДО_90_04 - ДО_90_05;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " +  Счет("90.01.1").Код, КО_90_01_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.01.1")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.03").Код, -ДО_90_03, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.03")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.04").Код, -ДО_90_04, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.04")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ДО " + Счет("90.05").Код, -ДО_90_05, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.05")));
		
		НомерСтроки = "21102";
		НаименованиеСтроки = "Выручка по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_90_01_2 = КО("90.01.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_90_01_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!КО " + Счет("90.01.2").Код, КО_90_01_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.1")));
		
		НомерСтроки = "21201";
		НаименованиеСтроки = "Себестоимость продаж по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_02_1 = ДО("90.02.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_02_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02.1").Код, ДО_90_02_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.1")));
		
		НомерСтроки = "21202";
		НаименованиеСтроки = "Себестоимость продаж по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_02_2 = ДО("90.02.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_02_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.02.2").Код, ДО_90_02_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.02.2")));
		
		НомерСтроки = "22101";
		НаименованиеСтроки = "Коммерческие расходы по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_07_1 = ДО("90.07.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_07_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07.1").Код, ДО_90_07_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07.1")));
		
		НомерСтроки = "22102";
		НаименованиеСтроки = "Коммерческие расходы по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_07_2 = ДО("90.07.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_07_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.07.2").Код, ДО_90_07_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.07.2")));
		
		НомерСтроки = "22201";
		НаименованиеСтроки = "Управленческие расходы по деятельности с основной системой налогообложения";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_08_1 = ДО("90.08.1", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_08_1;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08.1").Код, ДО_90_08_1, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08.1")));
		
		НомерСтроки = "22202";
		НаименованиеСтроки = "Управленческие  расходы по отдельным видам деятельности (ЕНВД)";
		
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		ДО_90_08_2 = ДО("90.08.2", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = ДО_90_08_2;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ДО " + Счет("90.08.2").Код, ДО_90_08_2, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("90.08.2")));
		
	КонецЕсли;
	
	НомерСтроки = "2310";
	НаименованиеСтроки = "Доходы от участия в других организациях";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.УчастиеВДругихОрганизациях
	                   + КО_91_01_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях
	                   + КО_91_01_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "УчастиеВДругихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	НомерВРасшифровке = 23101;
	
	НомерСтроки = "23101";
	НаименованиеСтроки = "Доходы (расходы), связанные с участием в других организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23101") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.УчастиеВДругихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "УчастиеВДругихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23102";
	НаименованиеСтроки = "Долевое участие в иностранных организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23102") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23103";
	НаименованиеСтроки = "Долевое участие в российских организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23103") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2320";
	НаименованиеСтроки = "Проценты к получению";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыКПолучениюУплате
	                   + КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагам
	                   + КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "ПроцентыКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	НомерВРасшифровке = 23201;
	
	НомерСтроки = "23201";
	НаименованиеСтроки = "Проценты к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23202";
	НаименованиеСтроки = "Проценты по государственным ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23202") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;

	НомерСтроки = "23203";
	НаименованиеСтроки = "Проценты по государственным ценным бумагам по ставке 0%";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23203") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПроцентыПоГосударственнымЦеннымБумагамПоСтавке0";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2330";
	НаименованиеСтроки = "Проценты к уплате";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыКПолучениюУплате
	                   + ДО_91_02_ВПДР.ПроцентыНачисленныеПоСт269;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	ИмяВПДР = "ПроцентыКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПроцентыНачисленныеПоСт269";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23301;
	
	НомерСтроки = "23301";
	НаименованиеСтроки = "Проценты к уплате";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23301") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001023301" + Графа, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПроцентыКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23302";
	НаименованиеСтроки = "Проценты, начисленные в соответствии со статьей 269 НК РФ";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23302") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПроцентыНачисленныеПоСт269;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПроцентыНачисленныеПоСт269";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2340";
	НаименованиеСтроки = "Прочие доходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
	                   + КО_91_01_ВПДР.ЛиквидацияОсновныхСредств
	                   + КО_91_01_ВПДР.РеализацияНематериальныхАктивов - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов
	                   + КО_91_01_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__68_02_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОбъектовСтроительства
	                   + КО_91_01_ВПДР.РеализацияПрочегоИмущества - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
	                   + КО_91_01_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
	                   + КО_91_01_ВПДР.РеализацияИмущественныхПравКромеПраваТребования - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
	                   + КО_91_01_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
	                   + КО_91_01_ВПДР.РеализацияЦенныхБумаг
	                   + КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок
	                   + КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
	                   + КО_91_01_ВПДР.СдачаИмуществаВАрендуИлиСубаренду - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
	                   + КО_91_01_ВПДР.ОтчисленияВОценочныеРезервы
	                   + КО_91_01_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
	                   + КО_91_01_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы
	                   + КО_91_01_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
	                   + КО_91_01_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет
	                   + КО_91_01_ВПДР.ВозмещениеУбытковКПолучениюУплате
	                   + КО_91_01_ВПДР.КурсовыеРазницы
	                   + КО_91_01_ВПДР.КурсовыеРазницыПоРасчетамВУЕ
	                   + КО_91_01_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
	                   + КО_91_01_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав
	                   + КО_91_01_ВПДР.ПрочиеВнереализационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
	                   + КО_91_01_ВПДР.ВосстановлениеАмортизационнойПремии
	                   + КО_91_01_ВПДР.ИзлишкиПриИнвентаризации
	                   + КО_99_01_ЧрезвычайныеДоходыРасходы
	                   + КО_91_01__010304_ПереоценкаВнеоборотныхАктивов - ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов
	                   + КО_91_01_ВПДР.КорректировкаПрибылиДоРыночныхЦен - ДО_91_02__68_02_ВПДР.КорректировкаПрибылиДоРыночныхЦен;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ИмяВПДР = "РеализацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ЛиквидацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияНематериальныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОбъектовСтроительства";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПрочегоИмущества";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияЦенныхБумаг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ОтчисленияВОценочныеРезервы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВосстановлениеАмортизационнойПремии";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ИмяВПДР = "ИзлишкиПриИнвентаризации";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 99.01 /субконто ""Чрезвычайные доходы (расходы)""/", КО_99_01_ЧрезвычайныеДоходыРасходы, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", КО_91_01__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "01, 03, 04", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "02, 05", ИмяВПДР));
	
	ИмяВПДР = "КорректировкаПрибылиДоРыночныхЦен";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23401;
	
	НомерСтроки = "23401";
	НаименованиеСтроки = "Доходы, связанные с реализацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23401") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23402";
	НаименованиеСтроки = "Доходы, связанные с ликвидацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23402") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ЛиквидацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ЛиквидацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23403";
	НаименованиеСтроки = "Доходы, связанные с реализацией нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23403") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияНематериальныхАктивов
		                   - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияНематериальныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23426";
	НаименованиеСтроки = "Доходы, связанные с реализацией объектов строительства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ИмяВПДР = "РеализацияОбъектовСтроительства";
		ЗначениеПоказателя = КО_91_01_ВПДР[ИмяВПДР]
		                   - ДО_91_02__76_ОТ_ВПДР[ИмяВПДР]
		                   - ДО_91_02__68_02_ВПДР[ИмяВПДР];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23404";
	НаименованиеСтроки = "Доходы, связанные с реализацией прочего имущества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23404") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПрочегоИмущества
		                   - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПрочегоИмущества";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23405";
	НаименованиеСтроки = "Доходы, связанные с реализацией права требования как оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23405") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23406";
	НаименованиеСтроки = "Доходы, связанные с реализацией права до наступления платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23406") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23407";
	НаименованиеСтроки = "Доходы, связанные с реализацией права после наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23407") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23408";
	НаименованиеСтроки = "Доходы, связанные с реализацией имущественных прав, кроме права требования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23408") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23409";
	НаименованиеСтроки = "Доходы, связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23409") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23410";
	НаименованиеСтроки = "Доходы, связанные с реализацией ценных бумаг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23410") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РеализацияЦенныхБумаг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РеализацияЦенныхБумаг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23411";
	НаименованиеСтроки = "Доходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23411") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23412";
	НаименованиеСтроки = "Доходы по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23412") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23413";
	НаименованиеСтроки = "Доходы, связанные со сдачей имущества в аренду (субаренду)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23413") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
		                   - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23414";
	НаименованиеСтроки = "Доходы в виде восстановленных оценочных резервов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23414") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ОтчисленияВОценочныеРезервы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ОтчисленияВОценочныеРезервы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23415";
	НаименованиеСтроки = "Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23415") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23416";
	НаименованиеСтроки = "Прочие операционные доходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23416") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23417";
	НаименованиеСтроки = "Штрафы, пени, неустойки к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23417") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
		                   - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23418";
	НаименованиеСтроки = "Прибыль прошлых лет";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23418") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23419";
	НаименованиеСтроки = "Возмещение убытков к получению";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23419") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ВозмещениеУбытковКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23420";
	НаименованиеСтроки = "Курсовые разницы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23420") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		КО_91_01__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.КО_91_01__ВУЕ;
		
		ЗначениеПоказателя = КО_91_01_ВПДР.КурсовыеРазницы
		                   - КО_91_01__ВУЕ;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "КурсовыеРазницы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		
		ТекстРасшифровки = "Обороты по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
		                 + " в корреспонденции со счетами %1"
		                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
		СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
		ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"-", ТекстРасшифровки,
			-КО_91_01__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		
	КонецЕсли;
	
	НомерСтроки = "23421";
	НаименованиеСтроки = "Курсовые разницы по расчетам в у.е.";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23421") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		КО_91_01__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.КО_91_01__ВУЕ;
		
		ЗначениеПоказателя = КО_91_01__ВУЕ + КО_91_01_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ТекстРасшифровки = "Обороты по кредиту счета 91.01 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
		                 + " в корреспонденции со счетами %1"
		                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
		СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
		ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", ТекстРасшифровки,
			КО_91_01__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		
		ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР),
			КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		
	КонецЕсли;
	
	НомерСтроки = "23422";
	НаименованиеСтроки = "Доходы в виде списанной кредиторской задолженности";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23422") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23423";
	НаименованиеСтроки = "Доходы, связанные с переоценкой внеоборотных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23423") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01__010304_ПереоценкаВнеоборотныхАктивов
		                   - ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", КО_91_01__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "01, 03, 04", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -ДО_91_02__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "02, 05", ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23424";
	НаименованиеСтроки = "Прочие внереализационные доходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23424") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.ПрочиеВнереализационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23425";
	НаименованиеСтроки = "Корректировка прибыли до рыночных цен";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23425") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = КО_91_01_ВПДР.КорректировкаПрибылиДоРыночныхЦен
		                   - ДО_91_02__68_02_ВПДР.КорректировкаПрибылиДоРыночныхЦен;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ИмяВПДР = "КорректировкаПрибылиДоРыночныхЦен";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР), КО_91_01_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2350";
	НаименованиеСтроки = "Прочие расходы";
	
	ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ЗначениеПоказателя = ДО_91_02_ВПДР.УчастиеВДругихОрганизациях
	                   + ДО_91_02_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях
	                   + ДО_91_02_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях
	                   + ДО_91_02_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
	                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств
	                   + ДО_91_02_ВПДР.ЛиквидацияОсновныхСредств
	                   + ДО_91_02_ВПДР.РеализацияНематериальныхАктивов - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов
	                   + ДО_91_02_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОбъектовСтроительства
	                   - ДО_91_02__68_02_ВПДР.РеализацияОбъектовСтроительства
	                   + ДО_91_02_ВПДР.РеализацияПрочегоИмущества - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
	                   + ДО_91_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
	                   + ДО_91_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
	                   + ДО_91_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
	                   + ДО_91_02_ВПДР.РеализацияЦенныхБумаг
	                   + ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок
	                   + ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР
	                   + ДО_91_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
	                   + ДО_91_02_ВПДР.ОтчисленияВОценочныеРезервы
	                   + ДО_91_02_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам
	                   + ДО_91_02_ВПДР.РасходыНаУслугиБанков
	                   + ДО_91_02_ВПДР.ПрочиеОперационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы
	                   + ДО_91_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
	                   + ДО_91_02_ВПДР.ПрибыльУбытокПрошлыхЛет - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет
	                   + ДО_91_02_ВПДР.ВозмещениеУбытковКПолучениюУплате
	                   + ДО_91_02_ВПДР.КурсовыеРазницы
	                   + ДО_91_02_ВПДР.КурсовыеРазницыПоРасчетамВУЕ
	                   + ДО_91_02_ВПДР.НалогиИСборы
	                   + ДО_91_02_ВПДР.ПремияПокупателю
	                   + ДО_91_02_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
	                   + ДО_91_02_ВПДР.НДСПоСписаннойКредиторскойЗадолженности
	                   + ДО_91_02_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав
	                   + ДО_91_02_ВПДР.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд
	                   + ДО_91_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
	                   + ДО_91_02_ВПДР.РасходыОтСниженияСтоимостиАктивов
	                   + ДО_91_02_ВПДР.ПрочиеКосвенныеРасходы - ДО_91_02__68_02_ВПДР.ПрочиеКосвенныеРасходы
	                   + ДО_99_01_ЧрезвычайныеДоходыРасходы
	                   + ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов - КО_91_01__0205_ПереоценкаВнеоборотныхАктивов
	                   + ДО_91_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам - ДО_91_02__68_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам;
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // Вычитаемый
	
	ИмяВПДР = "УчастиеВДругихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ЛиквидацияОсновныхСредств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияНематериальныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияОбъектовСтроительства";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПрочегоИмущества";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РеализацияЦенныхБумаг";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ОтчисленияВОценочныеРезервы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыНаУслугиБанков";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "ВозмещениеУбытковКПолучениюУплате";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "НалогиИСборы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПремияПокупателю";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "НДСПоСписаннойКредиторскойЗадолженности";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ИмяВПДР = "РасходыОтСниженияСтоимостиАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	
	ИмяВПДР = "ПрочиеКосвенныеРасходы";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.ЧрезвычайныеДоходыРасходы);
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 99.01 /субконто ""Чрезвычайные доходы (расходы)""/", ДО_99_01_ЧрезвычайныеДоходыРасходы, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
	
	ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "01, 03, 04", ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -КО_91_01__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "02, 05", ИмяВПДР));
	
	ИмяВПДР = "ПрочиеУбыткиПриравненныеКВнереализационнымРасходам";
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	
	НомерВРасшифровке = 23501;
	
	НомерСтроки = "23501";
	НаименованиеСтроки = "Расходы, связанные с участием в других организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23501") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.УчастиеВДругихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "УчастиеВДругихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23502";
	НаименованиеСтроки = "Расходы, связанные с участием в российских организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23502") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ДолевоеУчастиеВРоссийскихОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ДолевоеУчастиеВРоссийскихОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23503";
	НаименованиеСтроки = "Расходы, связанные с участием в иностранных организациях";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23503") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ДолевоеУчастиеВИностранныхОрганизациях;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ДолевоеУчастиеВИностранныхОрганизациях";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23504";
	НаименованиеСтроки = "Расходы, связанные с реализацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23504") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__76_ОТ_ВПДР.РеализацияОсновныхСредств
		                   - ДО_91_02__68_02_ВПДР.РеализацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23505";
	НаименованиеСтроки = "Расходы, связанные с ликвидацией основных средств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23505") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ЛиквидацияОсновныхСредств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ЛиквидацияОсновныхСредств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23506";
	НаименованиеСтроки = "Расходы, связанные с реализацией нематериальных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23506") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияНематериальныхАктивов
		                   - ДО_91_02__68_02_ВПДР.РеализацияНематериальныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияНематериальныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23534";
	НаименованиеСтроки = "Расходы, связанные с реализацией объектов строительства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ИмяВПДР = "РеализацияОбъектовСтроительства";
		ЗначениеПоказателя = ДО_91_02_ВПДР[ИмяВПДР]
		                   - ДО_91_02__76_ОТ_ВПДР[ИмяВПДР]
		                   - ДО_91_02__68_02_ВПДР[ИмяВПДР];
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 76.ОТ", -ДО_91_02__76_ОТ_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("76.ОТ"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23507";
	НаименованиеСтроки = "Расходы, связанные с реализацией прочего имущества";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23507") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПрочегоИмущества
		                   - ДО_91_02__68_02_ВПДР.РеализацияПрочегоИмущества;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПрочегоИмущества";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23508";
	НаименованиеСтроки = "Расходы, связанный с реализацией права требования как оказания финансовых услуг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23508") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияКакОказанияФинансовыхУслуг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияКакОказанияФинансовыхУслуг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23509";
	НаименованиеСтроки = "Расходы, связанные с реализацией права требования до наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23509") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияДоНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияДоНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23510";
	НаименованиеСтроки = "Расходы, связанные с реализацией права требования после наступления срока платежа";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23510") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа
		                   - ДО_91_02__68_02_ВПДР.РеализацияПраваТребованияПослеНаступленияСрокаПлатежа;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияПраваТребованияПослеНаступленияСрокаПлатежа";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23511";
	НаименованиеСтроки = "Расходы, связанные с реализацией имущественных прав, кроме права требования";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23511") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравКромеПраваТребования;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияИмущественныхПравКромеПраваТребования";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23512";
	НаименованиеСтроки = "Расходы, связанные с реализацией имущественных прав по объектам обслуживающих производств и хозяйств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23512") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств
		                   - ДО_91_02__68_02_ВПДР.РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияИмущественныхПравПоОбъектамОбслуживающихПроизводствИХозяйств";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23513";
	НаименованиеСтроки = "Расходы, связанные с реализацией ценных бумаг";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23513") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РеализацияЦенныхБумаг;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РеализацияЦенныхБумаг";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23514";
	НаименованиеСтроки = "Расходы по операциям с финансовыми инструментами срочных сделок, не обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23514") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделок;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделок";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23515";
	НаименованиеСтроки = "Расходы по операциям с финансовыми инструментами срочных сделок, обращающимися на организованном рынке";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23515") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОперацииСФинансовымиИнструментамиСрочныхСделокОР;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОперацииСФинансовымиИнструментамиСрочныхСделокОР";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23516";
	НаименованиеСтроки = "Расходы, связанные со сдачей имущества в аренду (субаренду)";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23516") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду
		                   - ДО_91_02__68_02_ВПДР.СдачаИмуществаВАрендуИлиСубаренду;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "СдачаИмуществаВАрендуИлиСубаренду";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23517";
	НаименованиеСтроки = "Расходы в виде образованных оценочных резервов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23517") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ОтчисленияВОценочныеРезервы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ОтчисленияВОценочныеРезервы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23518";
	НаименованиеСтроки = "Разница между первоначальной и номинальной стоимостью по долговым ценным бумагам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23518") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РазницаМеждуПервоначальнойИНоминальнойСтоимостьюПоДолговымЦеннымБумагам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23519";
	НаименованиеСтроки = "Расходы на услуги банков";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23519") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РасходыНаУслугиБанков;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РасходыНаУслугиБанков";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23520";
	НаименованиеСтроки = "Прочие операционные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23520") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеОперационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеОперационныеДоходыРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеОперационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23521";
	НаименованиеСтроки = "Штрафы, пени, неустойки к уплате";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23521") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате
		                   - ДО_91_02__68_02_ВПДР.ШтрафыПениНеустойкиКПолучениюУплате;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ШтрафыПениНеустойкиКПолучениюУплате";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23522";
	НаименованиеСтроки = "Убытки прошлых лет";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23522") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрибыльУбытокПрошлыхЛет
		                   - ДО_91_02__68_02_ВПДР.ПрибыльУбытокПрошлыхЛет;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрибыльУбытокПрошлыхЛет";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23523";
	НаименованиеСтроки = "Курсовые разницы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23523") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ДО_91_02__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.ДО_91_02__ВУЕ;
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.КурсовыеРазницы
		                   - ДО_91_02__ВУЕ;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "КурсовыеРазницы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
		ТекстРасшифровки = "Обороты по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
		                 + " в корреспонденции со счетами %1"
		                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
		СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
		ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", ТекстРасшифровки,
			-ДО_91_02__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		
	КонецЕсли;
	
	НомерСтроки = "23524";
	НаименованиеСтроки = "Курсовые разницы по расчетам в у.е.";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23524") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ДО_91_02__ВУЕ = Обороты91ПоКурсовымРазницамВУЕ.ДО_91_02__ВУЕ;
		
		ЗначениеПоказателя = ДО_91_02__ВУЕ + ДО_91_02_ВПДР.КурсовыеРазницыПоРасчетамВУЕ;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ТекстРасшифровки = "Обороты по дебету счета 91.02 /объекты со значением реквизита ""Вид прочих доходов и расходов"" - ""Курсовые разницы""/"
		                 + " в корреспонденции со счетами %1"
		                 + " по договорам, взаиморасчеты по которым ведутся в у.е.";
		СчетаРасшифровкиСтрокой = "60.01, 60.02, 60.21, 60.22, 60.31, 60.32, 62.01, 62.02, 62.21, 62.22, 62.31, 62.32, 63, 68.32, 76.02, 76.05, 76.06, 76.07.2, 76.09, 76.22, 76.25, 76.26, 76.29, 76.32, 76.35, 76.36, 76.39, 76.К";
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДобавитьСчета(СчетаРасшифровкиСтрокой, "Лизинг, РасчетыВСчетОтгрузки, АвансыВыданные");
		ТекстРасшифровки = СтрШаблон(ТекстРасшифровки, СчетаРасшифровкиСтрокой);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", ТекстРасшифровки, ДО_91_02__ВУЕ, ИмяРаздела, ОбщиеПараметрыРасшифровки);
		
		ИмяВПДР = "КурсовыеРазницыПоРасчетамВУЕ";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР),
			ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
	КонецЕсли;
	
	НомерСтроки = "23525";
	НаименованиеСтроки = "Налоги и сборы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23525") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.НалогиИСборы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "НалогиИСборы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
	КонецЕсли;
	
	НомерСтроки = "23526";
	НаименованиеСтроки = "Премия, выплаченная покупателю";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23526") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПремияПокупателю;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПремияПокупателю";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23527";
	НаименованиеСтроки = "Расходы в виде списанной дебиторской задолженности";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23527") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.СписаниеДебиторскойКредиторскойЗадолженности
		                   + ДО_91_02_ВПДР.НДСПоСписаннойКредиторскойЗадолженности;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "СписаниеДебиторскойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		
		ИмяВПДР = "НДСПоСписаннойКредиторскойЗадолженности";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23528";
	НаименованиеСтроки = "Расходы, связанные с безвозмездным получением имущества, работ, услуг или имущественных прав";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23528") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "БезвозмездноеПолучениеИмуществаРаботУслугИмущественныхПрав";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23529";
	НаименованиеСтроки = "Расходы по передаче товаров (работ, услуг) безвозмездно и для собственных нужд";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23529") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "РасходыПоПередачеТоваровБезвозмездноИДляСобственныхНужд";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23530";
	НаименованиеСтроки = "Прочие внереализационные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23530") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеВнереализационныеДоходыРасходы;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеВнереализационныеДоходыРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23531";
	НаименованиеСтроки = "Прочие косвенные расходы";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23531") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеКосвенныеРасходы
		                   - ДО_91_02__68_02_ВПДР.ПрочиеКосвенныеРасходы;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеКосвенныеРасходы";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23532";
	НаименованиеСтроки = "Расходы, связанные с переоценкой внеоборотных активов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23532") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов
		                   - КО_91_01__0205_ПереоценкаВнеоборотныхАктивов;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПереоценкаВнеоборотныхАктивов";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 01, 03, 04", ДО_91_02__010304_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), "01, 03, 04", ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по кредиту счета 91.01 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетами 02, 05", -КО_91_01__0205_ПереоценкаВнеоборотныхАктивов, ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.01"), "02, 05", ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "23533";
	НаименованиеСтроки = "Прочие убытки, приравненные к внереализационным расходам";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока23533") Тогда
		ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_91_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам
		                   - ДО_91_02__68_02_ВПДР.ПрочиеУбыткиПриравненныеКВнереализационнымРасходам;
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ИмяВПДР = "ПрочиеУбыткиПриравненныеКВнереализационнымРасходам";
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР), ДО_91_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиОСВПоСчетуВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), ИмяВПДР));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "Оборот по дебету счета 91.02 " + ОписаниеОбъектовВПДР(ИмяВПДР) + " в корреспонденции со счетом 68.02", -ДО_91_02__68_02_ВПДР[ИмяВПДР], ИмяРаздела, НастройкиАнализаСчетаВПДР(ОбщиеПараметрыРасшифровки, Счет("91.02"), Счет("68.02"), ИмяВПДР));
	КонецЕсли;
	
	НомерСтроки = "2410";
	Если МакетыОФР = "61н_2019" Тогда
		НаименованиеСтроки = "Текущий налог на прибыль";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			ОБ_68_04_2__68_04_1 = ОБ("68.04.2", "68.04.1", ОборотыМеждуСчетами);
			ОБ_68_04_1__68_04_2 = ОБ("68.04.1", "68.04.2", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_68_04_2__68_04_1 - ОБ_68_04_1__68_04_2;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("68.04.2").Код + " " + Счет("68.04.1").Код,
				ОБ_68_04_2__68_04_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("68.04.1")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("68.04.1").Код + " " + Счет("68.04.2").Код,
				-ОБ_68_04_1__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("68.04.2")));
			
		ИначеЕсли ОрганизацияПрименяетУСН Тогда
			ЗначениеПоказателя = ОБ_99_01_1__68_12_Налог;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот с кредита счета 68.12 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
				ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01.1"), ОтборПоАналитике));
			
		Иначе
			ЗначениеПоказателя = ОБ_99_01_1__68_04_1_Налог;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот с кредита счета 68.04.1 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
				ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если МакетыОФР = "61н_2020" Тогда
		НаименованиеСтроки = "Налог на прибыль";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			// ОСНО с применением ПБУ 18/02.
			Расчет = ОборотПоСчетуРасчетаНалогаНаПрибыль(
				"99.02",
				СальдоИОборотыПоСчетам,
				ОборотыМеждуСчетами);
			ЗначениеПоказателя = Расчет.Результат;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьРасшифровкуОборотовПоСчетуРасчетаНалогаНаПрибыль(
				ТаблицаРасшифровки,
				Расчет,
				ОбщиеПараметрыРасшифровки,
				ИмяОбластиПоказателя,
				ИмяРаздела,
				ЗаголовокРасшифровки);
			
		ИначеЕсли ОрганизацияПрименяетУСН Тогда
			// УСН.
			ЗначениеПоказателя = ОБ_99_01_1__68_12_Налог;
			
			// Вычитаемый показатель.
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот с кредита счета 68.12 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
				ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01.1"), ОтборПоАналитике));
			
		Иначе
			// ОСНО без применения ПБУ 18/02.
			ЗначениеПоказателя = ОБ_99_01_1__68_04_1_Налог;
			
			// Вычитаемый показатель.
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот с кредита счета 68.04.1 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
				ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "2411";
	Если МакетыОФР = "61н_2020" Тогда
		НаименованиеСтроки = "текущий налог на прибыль";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			// ОСНО с применением ПБУ 18/02.
			// Счета без применения рекомендации БМЦ Р-102
			ОБ_68_04_1__68_04_2 = ОБ("68.04.1", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__68_04_1 = ОБ("68.04.2", "68.04.1", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_68_04_2__68_04_1 - ОБ_68_04_1__68_04_2;
			
			// Счета в соответствии с рекомендацией БМЦ Р-102
			Расчет = ОборотПоСчетуРасчетаНалогаНаПрибыль(
				"99.02.Т",
				СальдоИОборотыПоСчетам,
				ОборотыМеждуСчетами);
			ЗначениеПоказателя = ЗначениеПоказателя - Расчет.Результат; // вычитаемый показатель
			
			// Вычитаемый показатель.
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
			
			// Счета без применения рекомендации БМЦ Р-102
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("68.04.2").Код + " " + Счет("68.04.1").Код,
				ОБ_68_04_2__68_04_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("68.04.1")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("68.04.1").Код + " " + Счет("68.04.2").Код,
				-ОБ_68_04_1__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("68.04.2")));
				
			// Счета в соответствии с рекомендацией БМЦ Р-102
			ДобавитьРасшифровкуОборотовПоСчетуРасчетаНалогаНаПрибыль(
				ТаблицаРасшифровки,
				Расчет,
				ОбщиеПараметрыРасшифровки,
				ИмяОбластиПоказателя,
				ИмяРаздела,
				ЗаголовокРасшифровки);
				
		ИначеЕсли ОрганизацияПрименяетУСН Тогда
			// УСН.
			ЗначениеПоказателя = 0;
			
		Иначе
			// ОСНО без применения ПБУ 18/02.
			ЗначениеПоказателя = ОБ_99_01_1__68_04_1_Налог;
			
			// Вычитаемый показатель.
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя);
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот с кредита счета 68.04.1 /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета 99.01.1",
				ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "2412";
	Если МакетыОФР = "61н_2020" Тогда
		НаименованиеСтроки = "отложенный налог на прибыль";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			// ОСНО с применением ПБУ 18/02.
			
			// Счета без рекомендации БМЦ Р-102
			ОБ_09__68_04_2 = ОБ("09", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__09 = ОБ("68.04.2", "09", ОборотыМеждуСчетами);
			ОБ_77__68_04_2 = ОБ("77", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__77 = ОБ("68.04.2", "77", ОборотыМеждуСчетами);
			
			ОБ_09__99_02_4 = ОБ("09", "99.02.4", ОборотыМеждуСчетами);
			ОБ_99_02_4__09 = ОБ("99.02.4", "09", ОборотыМеждуСчетами);
			ОБ_77__99_02_4 = ОБ("77", "99.02.4", ОборотыМеждуСчетами);
			ОБ_99_02_4__77 = ОБ("99.02.4", "77", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_09__68_04_2 - ОБ_68_04_2__09
			                   + ОБ_77__68_04_2 - ОБ_68_04_2__77
			                   + ОБ_09__99_02_4 - ОБ_99_02_4__09
			                   + ОБ_77__99_02_4 - ОБ_99_02_4__77;
			
			// Счета в соответствии с рекомендацией БМЦ Р-102
			Расчет = ОборотПоСчетуРасчетаНалогаНаПрибыль(
				"99.02.О",
				СальдоИОборотыПоСчетам,
				ОборотыМеждуСчетами);
			ЗначениеПоказателя = ЗначениеПоказателя + Расчет.Результат;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			// Счета без рекомендации БМЦ Р-102
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("09").Код + " " + Счет("68.04.2").Код,
				ОБ_09__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("68.04.2")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("68.04.2").Код + " " + Счет("09").Код,
				-ОБ_68_04_2__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("77").Код + " " + Счет("68.04.2").Код,
				ОБ_77__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("68.04.2")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("68.04.2").Код + " " + Счет("77").Код,
				-ОБ_68_04_2__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("77")));
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("09").Код + " " + Счет("99.02.4").Код,
				ОБ_09__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("99.02.4")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("99.02.4").Код + " " + Счет("09").Код,
				-ОБ_99_02_4__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("77").Код + " " + Счет("99.02.4").Код,
				ОБ_77__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.02.4")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("99.02.4").Код + " " + Счет("77").Код,
				-ОБ_99_02_4__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("77")));
			
			// Счета в соответствии с рекомендацией БМЦ Р-102
			ДобавитьРасшифровкуОборотовПоСчетуРасчетаНалогаНаПрибыль(
				ТаблицаРасшифровки,
				Расчет,
				ОбщиеПараметрыРасшифровки,
				ИмяОбластиПоказателя,
				ИмяРаздела,
				ЗаголовокРасшифровки);
			
		Иначе
			ЗначениеПоказателя = 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "2421";
	Если МакетыОФР = "61н_2019" Тогда
		НаименованиеСтроки = "в т. ч. постоянные налоговые обязательства (активы)";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			ОБ_99_02_3__68_04_2 = ОБ("99.02.3", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__99_02_3 = ОБ("68.04.2", "99.02.3", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_68_04_2__99_02_3 - ОБ_99_02_3__68_04_2;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
				"!ОБ " + Счет("68.04.2").Код + " " +Счет("99.02.3").Код,
				ОБ_68_04_2__99_02_3, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("99.02.3")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"!ОБ " + Счет("99.02.3").Код + " " + Счет("68.04.2").Код,
				-ОБ_99_02_3__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.3"), Счет("68.04.2")));
			
		Иначе
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "2430";
	Если МакетыОФР = "61н_2019" Тогда
		НаименованиеСтроки = "Изменение отложенных налоговых обязательств";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			ОБ_77__68_04_2 = ОБ("77", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__77 = ОБ("68.04.2", "77", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_68_04_2__77 - ОБ_77__68_04_2;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " +  Счет("68.04.2").Код + " " +Счет("77").Код, ОБ_68_04_2__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("77").Код + " " + Счет("68.04.2").Код, -ОБ_77__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("68.04.2")));
			
		Иначе
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	НомерСтроки = "2450";
	Если МакетыОФР = "61н_2019" Тогда
		НаименованиеСтроки = "Изменение отложенных налоговых активов";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			ОБ_09__68_04_2 = ОБ("09", "68.04.2", ОборотыМеждуСчетами);
			ОБ_68_04_2__09 = ОБ("68.04.2", "09", ОборотыМеждуСчетами);
			
			ЗначениеПоказателя = ОБ_09__68_04_2 - ОБ_68_04_2__09;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+", "!ОБ " + Счет("09").Код + " " + Счет("68.04.2").Код, ОБ_09__68_04_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("68.04.2")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("68.04.2").Код + " " + Счет("09").Код, -ОБ_68_04_2__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.2"), Счет("09")));
			
		Иначе
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
	// Строки 2460, 24601, 24602, 24603.
	ПараметрыЗаполнения = Новый Структура;
	ПараметрыЗаполнения.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	ПараметрыЗаполнения.Вставить("ОбщиеПараметрыРасшифровки", ОбщиеПараметрыРасшифровки);
	ПараметрыЗаполнения.Вставить("ДеревоНастроекСтрокРасшифровки", ДеревоНастроекСтрокРасшифровки);
	
	ПараметрыЗаполнения.Вставить("ИмяРаздела", ИмяРаздела);
	
	ПараметрыЗаполнения.Вставить("Графа", Графа);
	ПараметрыЗаполнения.Вставить("ЗаголовокГрафы", ЗаголовокГрафы);
	ПараметрыЗаполнения.Вставить("ОборотыМеждуСчетами", ОборотыМеждуСчетами);
	ПараметрыЗаполнения.Вставить("СальдоИОборотыПоСчетам", СальдоИОборотыПоСчетам);
	ПараметрыЗаполнения.Вставить("МакетыОФР", МакетыОФР);
	
	ПараметрыЗаполнения.Вставить("ОрганизацияПрименяетПБУ18", ОрганизацияПрименяетПБУ18);
	ПараметрыЗаполнения.Вставить("ОрганизацияПрименяетУСН", ОрганизацияПрименяетУСН);
	ПараметрыЗаполнения.Вставить("ОрганизацияПрименяетЕНВД", ОрганизацияПрименяетЕНВД);
	
	ПараметрыЗаполнения.Вставить("РассчитанныеПоказатели", РассчитанныеПоказатели);
	
	ПараметрыЗаполнения.Вставить("ДО_99_01_НалогНаПрибыль", ДО_99_01_НалогНаПрибыль);
	ПараметрыЗаполнения.Вставить("ДО_99_01_НалоговыеСанкции", ДО_99_01_НалоговыеСанкции);
	ПараметрыЗаполнения.Вставить("ОБ_99_01__99_02_НалогНаПрибыль", ОБ_99_01__99_02_НалогНаПрибыль);
	
	ПараметрыЗаполнения.Вставить("ОБ_99_01_1__68_12_Налог", ОБ_99_01_1__68_12_Налог);
	ПараметрыЗаполнения.Вставить("ОБ_99_01_1__68_04_1_Налог", ОБ_99_01_1__68_04_1_Налог);
	ПараметрыЗаполнения.Вставить("ОБ_99_01__68_04_1_Налог", ОБ_99_01__68_04_1_Налог);
	ПараметрыЗаполнения.Вставить("ОБ_99_01__68_12_Налог", ОБ_99_01__68_12_Налог);
	
	Если МакетыОФР = "61н_2019" Тогда
		ЗаполнитьФормаОтчета2019Кв1_ОФР_ПоГрафе_2460_Бланк2019(ПараметрыЗаполнения);
	ИначеЕсли МакетыОФР = "61н_2020" Тогда
		ЗаполнитьФормаОтчета2019Кв1_ОФР_ПоГрафе_2460_Бланк2020(ПараметрыЗаполнения);
	КонецЕсли;
	
	ОБ_09__83_01 = ОБ("09", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__09 = ОБ("83.01", "09", ОборотыМеждуСчетами);
	ОБ_77__83_01 = ОБ("77", "83.01", ОборотыМеждуСчетами);
	ОБ_83_01__77 = ОБ("83.01", "77", ОборотыМеждуСчетами);
	
	// Показатели строки 2510 и строк расшифровки показателей строки 2510 рассчитываются только при составлении годовой отчетности.
	Если КонецПериодаОтчета = КонецГода(КонецПериодаОтчета) Тогда
		НомерСтроки = "2510";
		НаименованиеСтроки = "Результат от переоценки внеоборотных активов, не включаемый в чистую прибыль (убыток) периода";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		КО_83_01 = КО("83.01", СальдоИОборотыПоСчетам);
		ДО_83_01 = ДО("83.01", СальдоИОборотыПоСчетам);
		
		ЗначениеПоказателя = КО_83_01 - ДО_83_01;
		
		Если МакетыОФР = "61н_2020" И ОрганизацияПрименяетПБУ18 Тогда
			// Вычет значений, отражаемых в строке 2530.
			ЗначениеПоказателя = ЗначениеПоказателя
			                   - ОБ_09__83_01 + ОБ_83_01__09
			                   - ОБ_77__83_01 + ОБ_83_01__77;
			
		КонецЕсли;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+","!КО " + Счет("83.01").Код,
			КО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-","!ДО " + Счет("83.01").Код,
			-ДО_83_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("83.01")));
		
		Если МакетыОФР = "61н_2020" И ОрганизацияПрименяетПБУ18 Тогда
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("09").Код + " " + Счет("83.01").Код,
				-ОБ_09__83_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("83.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("83.01").Код + " " + Счет("09").Код,
				ОБ_83_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01"), Счет("09")));
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("77").Код + " " + Счет("83.01").Код,
				-ОБ_77__83_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("83.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("83.01").Код + " " + Счет("77").Код,
				+ОБ_83_01__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01"), Счет("77")));
			
		КонецЕсли;
		
		НомерВРасшифровке = 25101;
		
		ОБ_01_01__83_01_1 = ОБ("01.01", "83.01.1", ОборотыМеждуСчетами);
		ОБ_83_01_1__02_01 = ОБ("83.01.1", "02.01", ОборотыМеждуСчетами);
		ОБ_83_01_1__01_01 = ОБ("83.01.1", "01.01", ОборотыМеждуСчетами);
		ОБ_02_01__83_01_1 = ОБ("02.01", "83.01.1", ОборотыМеждуСчетами);
		
		ОБ_04_01__83_01_2 = ОБ("04.01", "83.01.2", ОборотыМеждуСчетами);
		ОБ_83_01_2__05    = ОБ("83.01.2", "05", ОборотыМеждуСчетами);
		ОБ_83_01_2__04_01 = ОБ("83.01.2", "04.01", ОборотыМеждуСчетами);
		ОБ_05__83_01_2    = ОБ("05", "83.01.2", ОборотыМеждуСчетами);
		
		НомерСтроки = "25101";
		НаименованиеСтроки = "Результат от переоценки основных средств, не включаемый в чистую прибыль (убыток) периода";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока25101") Тогда
			ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
			ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			ЗначениеПоказателя = ОБ_01_01__83_01_1 - ОБ_83_01_1__02_01 - ОБ_83_01_1__01_01 + ОБ_02_01__83_01_1;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+","!ОБ " + Счет("01.01").Код + " " + Счет("83.01.1").Код, ОБ_01_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("01.01"), Счет("83.01.1")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("02.01").Код, -ОБ_83_01_1__02_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.1"), Счет("02.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.1").Код + " " + Счет("01.01").Код, -ОБ_83_01_1__01_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.1"), Счет("01.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("02.01").Код + " " + Счет("83.01.1").Код, ОБ_02_01__83_01_1, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("02.01"), Счет("83.01.1")));
		КонецЕсли;
		
		НомерСтроки = "25102";
		НаименованиеСтроки = "Результат от переоценки нематериальных активов, не включаемый в чистую прибыль (убыток) периода";
		
		Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока25102") Тогда
			ИмяОбластиПоказателя = "П00010" + НомерСтроки + Графа;
			ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
			
			ЗначениеПоказателя = ОБ_04_01__83_01_2 - ОБ_83_01_2__05 - ОБ_83_01_2__04_01 + ОБ_05__83_01_2;
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+","!ОБ " + Счет("04.01").Код + " " + Счет("83.01.2").Код, ОБ_04_01__83_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("04.01"), Счет("83.01.2")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.2").Код + " " + Счет("05").Код, -ОБ_83_01_2__05, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.2"), Счет("05")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-", "!ОБ " + Счет("83.01.2").Код + " " + Счет("04.01").Код, -ОБ_83_01_2__04_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01.2"), Счет("04.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "+", "!ОБ " + Счет("05").Код + " " + Счет("83.01.2").Код, ОБ_05__83_01_2, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("05"), Счет("83.01.2")));
		КонецЕсли;
		
	Иначе
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001002510" + Графа, 0);
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001025101" + Графа, 0);
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, "П0001025102" + Графа, 0);
	КонецЕсли;
	
	НомерСтроки = "2530";
	Если МакетыОФР = "61н_2020" Тогда
		НаименованиеСтроки = "Налог на прибыль от операций, результат которых не включается в чистую прибыль (убыток) период";
		
		ИмяОбластиПоказателя = "П000100" + НомерСтроки + Графа;
		ЗаголовокРасшифровки = "Строка " + НомерСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
		
		Если ОрганизацияПрименяетПБУ18 Тогда
			// ОСНО с применением ПБУ 18/02.
			ЗначениеПоказателя = ОБ_09__83_01 - ОБ_83_01__09
			                   + ОБ_77__83_01 - ОБ_83_01__77;
			
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("09").Код + " " + Счет("83.01").Код,
				ОБ_09__83_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("83.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("83.01").Код + " " + Счет("09").Код,
				-ОБ_83_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01"), Счет("09")));
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("77").Код + " " + Счет("83.01").Код,
				ОБ_77__83_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("83.01")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("83.01").Код + " " + Счет("77").Код,
				-ОБ_83_01__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("83.01"), Счет("77")));
			
		Иначе
			ЗначениеПоказателя = 0;
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_ОФР_ПоГрафе_2460_Бланк2019(ПараметрыЗаполнения)
	
	ТаблицаРасшифровки = ПараметрыЗаполнения.ТаблицаРасшифровки;
	ОбщиеПараметрыРасшифровки = ПараметрыЗаполнения.ОбщиеПараметрыРасшифровки;
	ДеревоНастроекСтрокРасшифровки = ПараметрыЗаполнения.ДеревоНастроекСтрокРасшифровки;
	
	ИмяРаздела = ПараметрыЗаполнения.ИмяРаздела;
	
	Графа = ПараметрыЗаполнения.Графа;
	ЗаголовокГрафы = ПараметрыЗаполнения.ЗаголовокГрафы;
	ОборотыМеждуСчетами = ПараметрыЗаполнения.ОборотыМеждуСчетами;
	СальдоИОборотыПоСчетам = ПараметрыЗаполнения.СальдоИОборотыПоСчетам;
	МакетыОФР = ПараметрыЗаполнения.МакетыОФР;
	
	ОрганизацияПрименяетУСН = ПараметрыЗаполнения.ОрганизацияПрименяетУСН;
	ОрганизацияПрименяетЕНВД = ПараметрыЗаполнения.ОрганизацияПрименяетЕНВД;
	
	РассчитанныеПоказатели = ПараметрыЗаполнения.РассчитанныеПоказатели;
	
	ДО_99_01_НалогНаПрибыль = ПараметрыЗаполнения.ДО_99_01_НалогНаПрибыль;
	ОБ_99_01_1__68_12_Налог = ПараметрыЗаполнения.ОБ_99_01_1__68_12_Налог;
	ДО_99_01_НалоговыеСанкции = ПараметрыЗаполнения.ДО_99_01_НалоговыеСанкции;
	ОБ_99_01_1__68_04_1_Налог = ПараметрыЗаполнения.ОБ_99_01_1__68_04_1_Налог;
	
	КодСтроки = "2460";
	НаименованиеСтроки = "Прочее";
	
	ИмяОбластиПоказателя = "П000100" + КодСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + КодСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ОБ_99_01__09 = ОБ("99.01", "09", ОборотыМеждуСчетами);
	ОБ_77__99_01 = ОБ("77", "99.01", ОборотыМеждуСчетами);
	
	ОБ_77__99_02_4 = ОБ("77", "99.02.4", ОборотыМеждуСчетами);
	ОБ_99_02_4__77 = ОБ("99.02.4", "77", ОборотыМеждуСчетами);
	
	ОБ_99_02_4__09 = ОБ("99.02.4", "09", ОборотыМеждуСчетами);
	ОБ_09__99_02_4 = ОБ("09", "99.02.4", ОборотыМеждуСчетами);
	
	ДО_99_09     = ДО("99.09", СальдоИОборотыПоСчетам);
	КО_99_09     = КО("99.09", СальдоИОборотыПоСчетам);
	ОБ_68__99_09 = ОБ("68", "99.09", ОборотыМеждуСчетами);
	
	Если ОрганизацияПрименяетУСН Тогда
		ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
		                   - ОБ_99_01_1__68_12_Налог
		                   + ДО_99_01_НалоговыеСанкции
		                   + ДО_99_09 - (КО_99_09 - ОБ_68__99_09)
		                   + ОБ_99_01__09 - ОБ_77__99_01;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
			ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
			-ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01.1"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалоговыеСанкции + """/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ДО " + Счет("99.09").Код,
			ДО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!КО " + Счет("99.09").Код,
			-КО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("68").Код + " " + Счет("99.09").Код,
			ОБ_68__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68"), Счет("99.09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("99.01").Код + " " + Счет("09").Код,
			ОБ_99_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("77").Код + " " + Счет("99.01").Код,
			-ОБ_77__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.01")));
		
	Иначе
		// ОСНО.
		ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
		                   - ОБ_99_01_1__68_04_1_Налог
		                   + ДО_99_01_НалоговыеСанкции
		                   - ОБ_77__99_02_4 + ОБ_99_02_4__09
		                   + ДО_99_09 - КО_99_09 + ОБ_68__99_09
		                   + ОБ_99_01__09 - ОБ_77__99_01
		                   + ОБ_99_02_4__77 - ОБ_09__99_02_4;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
			"+", "Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
			ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
			-ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалоговыеСанкции + """/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("77").Код + " " + Счет("99.02.4").Код,
			-ОБ_77__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.02.4")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("09").Код,
			ОБ_99_02_4__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ДО " + Счет("99.09").Код,
			ДО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!КО " + Счет("99.09").Код,
			-КО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("68").Код + " " + Счет("99.09").Код,
			ОБ_68__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68"), Счет("99.09")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("99.01").Код + " " + Счет("09").Код,
			ОБ_99_01__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("09")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("77").Код + " " + Счет("99.01").Код,
			-ОБ_77__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.01")));
		
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("77").Код,
			ОБ_99_02_4__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("77")));
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
			"-", "!ОБ " + Счет("09").Код + " " + Счет("99.02.4").Код,
			-ОБ_09__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("99.02.4")));
		
	КонецЕсли;
	
	НомерВРасшифровке = 24601;
	
	КодСтроки = "24601";
	НаименованиеСтроки = "Налоги, уплачиваемые в связи с применением специальных налоговых режимов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если ОрганизацияПрименяетУСН Тогда
			Если ОрганизацияПрименяетЕНВД Тогда
				ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
				                   - ОБ_99_01_1__68_12_Налог;
				
				Если МакетыОФР = "61н_2020" Тогда
					УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
				Иначе
					УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
				КонецЕсли;
				
				ОтборПоАналитике = Новый Соответствие;
				ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
					"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
					ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
				
				ОтборПоАналитике = Новый Соответствие;
				ОтборПоАналитике.Вставить("КорСубконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
				ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
					"Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
					-ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01.1"), Счет("68.12"), ОтборПоАналитике));
				
			Иначе
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
				
			КонецЕсли;
			
		Иначе
			// ОСНО.
			ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
			                   - ОБ_99_01_1__68_04_1_Налог;
			
			Если МакетыОФР = "61н_2020" Тогда
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			Иначе
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			КонецЕсли;
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
				"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
				ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
				-ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	КодСтроки = "24602";
	НаименованиеСтроки = "Штрафные санкции и пени за нарушение налогового и иного законодательства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_99_01_НалоговыеСанкции;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто ""Причитающиеся налоговые санкции""/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
		
	КонецЕсли;
	
	КодСтроки = "24603";
	НаименованиеСтроки = "Пересчет отложенных налоговых активов и обязательств";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		СтрокаАвтозаполняется = НЕ ОрганизацияПрименяетУСН;
		
		Если СтрокаАвтозаполняется Тогда
			ЗначениеПоказателя = ОБ_99_02_4__77 - ОБ_09__99_02_4
			                   + ОБ_99_02_4__09 - ОБ_77__99_02_4;
			
			Если МакетыОФР = "61н_2020" Тогда
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
			Иначе
				УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			КонецЕсли;
			
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("77").Код,
				ОБ_99_02_4__77, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("77")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("09").Код + " " + Счет("99.02.4").Код,
				-ОБ_09__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("09"), Счет("99.02.4")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"+", "!ОБ " + Счет("99.02.4").Код + " " + Счет("09").Код,
				ОБ_99_02_4__09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.02.4"), Счет("09")));
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "!ОБ " + Счет("77").Код + " " + Счет("99.02.4").Код,
				-ОБ_77__99_02_4, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("77"), Счет("99.02.4")));
			
		Иначе
			УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, 0);
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьФормаОтчета2019Кв1_ОФР_ПоГрафе_2460_Бланк2020(ПараметрыЗаполнения)
	
	ТаблицаРасшифровки = ПараметрыЗаполнения.ТаблицаРасшифровки;
	ОбщиеПараметрыРасшифровки = ПараметрыЗаполнения.ОбщиеПараметрыРасшифровки;
	ДеревоНастроекСтрокРасшифровки = ПараметрыЗаполнения.ДеревоНастроекСтрокРасшифровки;
	
	ИмяРаздела = ПараметрыЗаполнения.ИмяРаздела;
	
	Графа = ПараметрыЗаполнения.Графа;
	ЗаголовокГрафы = ПараметрыЗаполнения.ЗаголовокГрафы;
	ОборотыМеждуСчетами = ПараметрыЗаполнения.ОборотыМеждуСчетами;
	СальдоИОборотыПоСчетам = ПараметрыЗаполнения.СальдоИОборотыПоСчетам;
	МакетыОФР = ПараметрыЗаполнения.МакетыОФР;
	
	ОрганизацияПрименяетПБУ18 = ПараметрыЗаполнения.ОрганизацияПрименяетПБУ18;
	ОрганизацияПрименяетУСН = ПараметрыЗаполнения.ОрганизацияПрименяетУСН;
	ОрганизацияПрименяетЕНВД = ПараметрыЗаполнения.ОрганизацияПрименяетЕНВД;
	
	РассчитанныеПоказатели = ПараметрыЗаполнения.РассчитанныеПоказатели;
	
	ДО_99_01_НалогНаПрибыль = ПараметрыЗаполнения.ДО_99_01_НалогНаПрибыль;
	ОБ_99_01__99_02_НалогНаПрибыль = ПараметрыЗаполнения.ОБ_99_01__99_02_НалогНаПрибыль;
	ОБ_99_01_1__68_12_Налог = ПараметрыЗаполнения.ОБ_99_01_1__68_12_Налог;
	ДО_99_01_НалоговыеСанкции = ПараметрыЗаполнения.ДО_99_01_НалоговыеСанкции;
	ОБ_99_01_1__68_04_1_Налог = ПараметрыЗаполнения.ОБ_99_01_1__68_04_1_Налог;
	ОБ_99_01__68_04_1_Налог = ПараметрыЗаполнения.ОБ_99_01__68_04_1_Налог;
	ОБ_99_01__68_12_Налог   = ПараметрыЗаполнения.ОБ_99_01__68_12_Налог;
	
	КодСтроки = "2460";
	НаименованиеСтроки = "Прочее";
	
	ИмяОбластиПоказателя = "П000100" + КодСтроки + Графа;
	ЗаголовокРасшифровки = "Строка " + КодСтроки + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
	ОБ_99_01__09 = ОБ("99.01", "09", ОборотыМеждуСчетами);
	ОБ_77__99_01 = ОБ("77", "99.01", ОборотыМеждуСчетами);
	
	ОБ_77__99_02_4 = ОБ("77", "99.02.4", ОборотыМеждуСчетами);
	ОБ_99_02_4__77 = ОБ("99.02.4", "77", ОборотыМеждуСчетами);
	
	ОБ_99_02_4__09 = ОБ("99.02.4", "09", ОборотыМеждуСчетами);
	ОБ_09__99_02_4 = ОБ("09", "99.02.4", ОборотыМеждуСчетами);
	
	ДО_99_09     = ДО("99.09", СальдоИОборотыПоСчетам);
	КО_99_09     = КО("99.09", СальдоИОборотыПоСчетам);
	ОБ_68__99_09 = ОБ("68", "99.09", ОборотыМеждуСчетами);
	
	ОБ_99_09__99 = ОБ("99.09", "99", ОборотыМеждуСчетами);
	ОБ_99__99_09 = ОБ("99", "99.09", ОборотыМеждуСчетами);
	ОБ_99_09__84 = ОБ("99.09", "84", ОборотыМеждуСчетами);
	ОБ_84__99_09 = ОБ("84", "99.09", ОборотыМеждуСчетами);
	
	КО_99_01 = КО("99.01", СальдоИОборотыПоСчетам);
	ОБ_84__99_01 = ОБ("84", "99.01", ОборотыМеждуСчетами);
	ОБ_90__99_01 = ОБ("90", "99.01", ОборотыМеждуСчетами);
	ОБ_91__99_01 = ОБ("91", "99.01", ОборотыМеждуСчетами);
	ОБ_99__99_01 = ОБ("99", "99.01", ОборотыМеждуСчетами);
	
	ДО_99_01 = ДО("99.01", СальдоИОборотыПоСчетам);
	ОБ_99_01__84 = ОБ("99.01", "84", ОборотыМеждуСчетами);
	ОБ_99_01__90 = ОБ("99.01", "90", ОборотыМеждуСчетами);
	ОБ_99_01__91 = ОБ("99.01", "91", ОборотыМеждуСчетами);
	ОБ_99_01__99 = ОБ("99.01", "99", ОборотыМеждуСчетами);
	
	ЗначениеПоказателя = КО_99_09 - ДО_99_09
		+ ОБ_99_09__99 - ОБ_99__99_09
		+ ОБ_99_09__84 - ОБ_84__99_09
		+ КО_99_01 - ОБ_84__99_01 - ОБ_90__99_01 - ОБ_91__99_01 - ОБ_99__99_01
		- ДО_99_01 + ОБ_99_01__84 + ОБ_99_01__90 + ОБ_99_01__91 + ОБ_99_01__99
		+ ОБ_99_01__68_04_1_Налог
		+ ОБ_99_01__68_12_Налог;
	
	УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, ЗначениеПоказателя);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
		"+", "!КО " + Счет("99.09").Код,
		КО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ДО " + Счет("99.09").Код,
		-ДО_99_09, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.09")));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.09").Код + " " + Счет("99").Код,
		ОБ_99_09__99, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.09"), Счет("99")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("99").Код + " " + Счет("99.09").Код,
		-ОБ_99__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99"), Счет("99.09")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.09").Код + " " + Счет("84").Код,
		ОБ_99_09__84, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.09"), Счет("84")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("84").Код + " " + Счет("99.09").Код,
		-ОБ_84__99_09, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84"), Счет("99.09")));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!КО " + Счет("99.01").Код,
		КО_99_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("84").Код + " " + Счет("99.01").Код,
		-ОБ_84__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("84"), Счет("99.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("90").Код + " " + Счет("99.01").Код,
		-ОБ_90__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("90"), Счет("99.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("91").Код + " " + Счет("99.01").Код,
		-ОБ_91__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("91"), Счет("99.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ОБ " + Счет("99").Код + " " + Счет("99.01").Код,
		-ОБ_99__99_01, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99"), Счет("99.01")));
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"-", "!ДО " + Счет("99.01").Код,
		-ДО_99_01, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.01").Код + " " + Счет("84").Код,
		ОБ_99_01__84, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("84")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.01").Код + " " + Счет("90").Код,
		ОБ_99_01__90, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("90")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.01").Код + " " + Счет("91").Код,
		ОБ_99_01__91, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("91")));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "!ОБ " + Счет("99.01").Код + " " + Счет("99").Код,
		ОБ_99_01__99, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("99")));
	
	ОтборПоАналитике = Новый Соответствие;
	ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
	
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01").Код,
		ОБ_99_01__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01"), ОтборПоАналитике));
	ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
		"+", "Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01").Код,
		ОБ_99_01__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.12"), Счет("99.01"), ОтборПоАналитике));
	
	НомерВРасшифровке = 24601;
	
	КодСтроки = "24601";
	НаименованиеСтроки = "Налоги, уплачиваемые в связи с применением специальных налоговых режимов";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		Если ОрганизацияПрименяетУСН Тогда
			ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
			                   - ОБ_99_01_1__68_12_Налог;
			
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
				"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
				ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("КорСубконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"Оборот с кредита счета " + Счет("68.12").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
				-ОБ_99_01_1__68_12_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01.1"), Счет("68.12"), ОтборПоАналитике));
			
		ИначеЕсли ОрганизацияПрименяетПБУ18 Тогда
			ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
			                   - ОБ_99_01__99_02_НалогНаПрибыль;
			
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки,
				"+", "Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
				ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "",
				"-", "Оборот по дебету счета 99.01 /субконто ""Налог на прибыль и аналогичные платежи""/" + " в корреспонденции со счетом 99.02",
				-ОБ_99_01__99_02_НалогНаПрибыль, "ОФР", НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("99.01"), Счет("99.02"), ОтборПоАналитике));
			
		Иначе
			// ОСНО без применения ПБУ 18.
			ЗначениеПоказателя = ДО_99_01_НалогНаПрибыль
			                   - ОБ_99_01_1__68_04_1_Налог;
			
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалогНаПрибыль);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
				"Оборот по дебету счета " + Счет("99.01").Код + " /субконто """ + Перечисления.ПрибылиИУбытки.НалогНаПрибыль + """/",
				ДО_99_01_НалогНаПрибыль, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить("Субконто1", Перечисления.ВидыПлатежейВГосБюджет.Налог);
			ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, "", "-",
				"Оборот с кредита счета " + Счет("68.04.1").Код + " /субконто """ + Перечисления.ВидыПлатежейВГосБюджет.Налог + """/ в дебет счета " + Счет("99.01.1").Код,
				-ОБ_99_01_1__68_04_1_Налог, ИмяРаздела, НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет("68.04.1"), Счет("99.01.1"), ОтборПоАналитике));
			
		КонецЕсли;
		
	КонецЕсли;
	
	КодСтроки = "24602";
	НаименованиеСтроки = "Штрафные санкции и пени за нарушение налогового и иного законодательства";
	
	Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + КодСтроки) Тогда
		ИмяОбластиПоказателя = "П00010" + КодСтроки + Графа;
		ЗаголовокРасшифровки = ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
		
		ЗначениеПоказателя = ДО_99_01_НалоговыеСанкции;
		
		УстановитьЗначениеПоказателя(РассчитанныеПоказатели, ИмяРаздела, ИмяОбластиПоказателя, -ЗначениеПоказателя); // вычитаемый
		
		ОтборПоАналитике = Новый Соответствие;
		ОтборПоАналитике.Вставить("Субконто1", Перечисления.ПрибылиИУбытки.НалоговыеСанкции);
		ДобавитьСтрокуРасшифровки(ТаблицаРасшифровки, ИмяОбластиПоказателя, ЗаголовокРасшифровки, "+",
			"Оборот по дебету счета " + Счет("99.01").Код + " /субконто ""Причитающиеся налоговые санкции""/",
			ДО_99_01_НалоговыеСанкции, ИмяРаздела, НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет("99.01"), ОтборПоАналитике));
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьОтчетБухОтчетностьФормаОтчета2019Кв1_БалансПоГрафеПоАлгоритмам(КонтекстВыполнения)
	
	Графа = КонтекстВыполнения.КонтекстОтчета.Графа;
	ЗаголовокГрафы = КонтекстВыполнения.КонтекстОтчета.ЗаголовокГрафы;
	НачалоПериодаОтчета = КонтекстВыполнения.КонтекстОтчета.НачалоПериодаОтчета;
	КонецПериодаОтчета  = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	Организация = КонтекстВыполнения.Организация;
	ТаблицаРасшифровки = КонтекстВыполнения.ТаблицаРасшифровки;
	РассчитанныеПоказатели = КонтекстВыполнения.РассчитанныеПоказатели;
	ДеревоНастроекСтрокРасшифровки = КонтекстВыполнения.КонтекстОтчета.СоставДополнительныхСтрокБаланс;
	
	ОбщиеПараметрыРасшифровки = Новый Структура;
	ОбщиеПараметрыРасшифровки.Вставить("Организация",   Организация);
	ОбщиеПараметрыРасшифровки.Вставить("НачалоПериода", НачалоПериодаОтчета);
	ОбщиеПараметрыРасшифровки.Вставить("КонецПериода",  КонецПериодаОтчета);
	
	КонтекстДополнения = Новый Структура;
	КонтекстДополнения.Вставить("КонтекстВыполнения", КонтекстВыполнения);
	КонтекстДополнения.Вставить("ИмяРаздела", "Баланс");
	КонтекстДополнения.Вставить("ТаблицаРасшифровки", ТаблицаРасшифровки);
	КонтекстДополнения.Вставить("ОбщиеПараметрыРасшифровки", ОбщиеПараметрыРасшифровки);
	
	ПроцессорПоказателя = КонтекстВыполнения.ПроцессорПоказателя;
	Алгоритмы = КонтекстВыполнения.Алгоритмы;
	
	Для Каждого АлгоритмСтроки Из Алгоритмы Цикл
		НомерСтроки = АлгоритмСтроки.Номер;
		НаименованиеСтроки = АлгоритмСтроки.Наименование;
		
		УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = СтрШаблон("Строка %1 ""%2"", графа ""%3""",
			НомерСтроки, НаименованиеСтроки, ЗаголовокГрафы);
			
		Для Каждого Составляющая Из АлгоритмСтроки.Составляющие Цикл
			ОписаниеСоставлящей = Составляющая[0];
			ДопПараметры = Составляющая[1];
			УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставлящей, ДопПараметры);
		КонецЦикла;
		
		ЗаполнениеБухгалтерскойОтчетностиПереопределяемый.ДополнитьБО2019Кв1Баланс(
			КонтекстДополнения, ПроцессорПоказателя.Показатель.КодПоказателя, ПроцессорПоказателя.Показатель.ЗначениеПоказателя);
		
		УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя, АлгоритмСтроки.Вычитаемый);
		
		Если АлгоритмСтроки.Свойство("ДопСтроки") Тогда
			НомерВРасшифровке = АлгоритмСтроки.НумераторДопСтрок;
			
			Для Каждого ДопСтрока Из АлгоритмСтроки.ДопСтроки Цикл
				НомерСтроки = ДопСтрока.Номер;
				НаименованиеСтроки = ДопСтрока.Наименование;
				
				Если ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, "ДопСтрока" + НомерСтроки) Тогда
					УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, Графа);
					ПроцессорПоказателя.Показатель.НаименованиеПоказателя =
						ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
					
					Для Каждого Составляющая Из ДопСтрока.Составляющие Цикл
						ОписаниеСоставлящей = Составляющая[0];
						ДопПараметры = Составляющая[1];
						УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставлящей, ДопПараметры);
					КонецЦикла;
					
					УстановитьЗначениеПоказателяПоПроцессору(РассчитанныеПоказатели, ПроцессорПоказателя);
					
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

Функция ЗаголовокРасшифровки(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы)
	
	Возврат "Строка "+ СтрокаЧГ0(НомерВРасшифровке) + " """ + НаименованиеСтроки + """, графа """ + ЗаголовокГрафы + """";
	
КонецФункции

Функция ЗаголовокРасшифровкиПоСчетчику(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы)
	
	ТекстНаименования = ЗаголовокРасшифровки(НомерВРасшифровке, НаименованиеСтроки, ЗаголовокГрафы);
	
	НомерВРасшифровке = НомерВРасшифровке + 1;
	
	Возврат ТекстНаименования;
	
КонецФункции

Функция ВключатьДопстрокуВОтчет(ДеревоНастроекСтрокРасшифровки, ИмяДопстроки) Экспорт
	
	Результат = Ложь;
	
	НайденнаяСтрокаДерева = ДеревоНастроекСтрокРасшифровки.Строки.Найти(ИмяДопстроки, "ИмяОбластиДопСтроки", Истина);
	Если НайденнаяСтрокаДерева <> Неопределено Тогда
		Результат = (НайденнаяСтрокаДерева.ВключатьВОтчет <> 0);
	КонецЕсли;
	
	Возврат Результат;
	
КонецФункции

Функция СтрокаЧГ0(ИсходноеЧисло)
	
	Возврат Формат(ИсходноеЧисло, "ЧН=; ЧГ=0");
	
КонецФункции

Функция ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов, Счет, КорСчет)
	
	НастройкиПолученияБухитогов.Вставить("Счет",    МассивСчетовВИерархииИзСписка(Счет));
	НастройкиПолученияБухитогов.Вставить("КорСчет", МассивСчетовВИерархииИзСписка(КорСчет));
	
	ОборотыССубконто = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетамиПоАналитике(НастройкиПолученияБухитогов);
	
	НастройкиПолученияБухитогов.Удалить("Счет");
	НастройкиПолученияБухитогов.Удалить("КорСчет");
	
	Возврат ОборотыССубконто;
	
КонецФункции

Функция НастройкиОСВПоВидуДДС(ОбщиеНастройки, Счет, ВидДДС) Экспорт
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоВидуДДС(ОбщиеНастройки, Счет, ВидДДС);
	
КонецФункции

Процедура СвернутьТаблицуЗначенийДопСтрок(ТаблицаЗначенийДопСтрок)
	
	СписокГрафДляГруппировки = "";
	СписокГрафДляСуммирования = "";
	
	Для Каждого Колонка Из ТаблицаЗначенийДопСтрок.Колонки Цикл
		
		КолонкаСуммируется = (Колонка.ТипЗначения.СодержитТип(Тип("Число")));
		
		Если КолонкаСуммируется Тогда
			СписокГрафДляСуммирования = СписокГрафДляСуммирования + ?(ПустаяСтрока(СписокГрафДляСуммирования), "", ", ") + Колонка.Имя;
		Иначе
			СписокГрафДляГруппировки = СписокГрафДляГруппировки + ?(ПустаяСтрока(СписокГрафДляГруппировки), "", ", ") + Колонка.Имя;
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаЗначенийДопСтрок.Свернуть(СписокГрафДляГруппировки, СписокГрафДляСуммирования);
	
КонецПроцедуры

Функция ТекстЗапросаСведенийСчета90_Кт_Дт()
	
	ТекстЗапроса = "ВЫБРАТЬ
	               |	СоединениеПериодов.Счет КАК Счет,
	               |	СоединениеПериодов.СубконтоРазвертки КАК СубконтоРазвертки,
	               |	СУММА(СоединениеПериодов.Отчетный) КАК Отчетный,
	               |	СУММА(СоединениеПериодов.Предшествующий) КАК Предшествующий
	               |ПОМЕСТИТЬ ВТ_ВсеДанные
	               |ИЗ
	               |	(ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет КАК Счет,
	               |		ХозрасчетныйОбороты.Субконто1 КАК СубконтоРазвертки,
	               |		ХозрасчетныйОбороты.СуммаОборотКт КАК Отчетный,
	               |		0 КАК Предшествующий
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаОтч, &КонПериодаОтч, Период, Счет В (&СчетаПлюс), &ВидСубконтоРазвертки, Организация В (&Организации), , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет,
	               |		ХозрасчетныйОбороты.Субконто1,
	               |		-1 * ХозрасчетныйОбороты.СуммаОборотДт,
	               |		0
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаОтч, &КонПериодаОтч, Период, Счет В (&СчетаМинус), &ВидСубконтоРазвертки, Организация В (&Организации), , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет,
	               |		ХозрасчетныйОбороты.Субконто1,
	               |		0,
	               |		ХозрасчетныйОбороты.СуммаОборотКт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаПред, &КонПериодаПред, Период, Счет В (&СчетаПлюс), &ВидСубконтоРазвертки, Организация В (&Организации), , ) КАК ХозрасчетныйОбороты
	               |	
	               |	ОБЪЕДИНИТЬ ВСЕ
	               |	
	               |	ВЫБРАТЬ
	               |		ХозрасчетныйОбороты.Счет,
	               |		ХозрасчетныйОбороты.Субконто1,
	               |		0,
	               |		-1 * ХозрасчетныйОбороты.СуммаОборотДт
	               |	ИЗ
	               |		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаПред, &КонПериодаПред, Период, Счет В (&СчетаМинус), &ВидСубконтоРазвертки, Организация В (&Организации), , ) КАК ХозрасчетныйОбороты) КАК СоединениеПериодов
	               |
	               |СГРУППИРОВАТЬ ПО
	               |	СоединениеПериодов.Счет,
	               |	СоединениеПериодов.СубконтоРазвертки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Функция ТекстЗапросаСведенийСчета90_Дт_Кт_Субконто()
	
	ТекстЗапроса =
		"ВЫБРАТЬ
		|	СоединениеПериодов.Счет КАК Счет,
		|	СоединениеПериодов.СубконтоРазвертки КАК СубконтоРазвертки,
		|	СУММА(СоединениеПериодов.Отчетный) КАК Отчетный,
		|	СУММА(СоединениеПериодов.Предшествующий) КАК Предшествующий
		|ПОМЕСТИТЬ ВТ_ВсеДанные
		|ИЗ
		|	(ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Счет КАК Счет,
		|		ХозрасчетныйОбороты.КорСубконто1 КАК СубконтоРазвертки,
		|		ХозрасчетныйОбороты.СуммаОборотДт КАК Отчетный,
		|		0 КАК Предшествующий
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаОтч, &КонПериодаОтч, Период, Счет В (&Счета), , Организация В (&Организации), КорСчет В (&КорСчета), &ВидСубконтоРазвертки) КАК ХозрасчетныйОбороты
		|	
		|	ОБЪЕДИНИТЬ ВСЕ
		|	
		|	ВЫБРАТЬ
		|		ХозрасчетныйОбороты.Счет,
		|		ХозрасчетныйОбороты.КорСубконто1,
		|		0,
		|		ХозрасчетныйОбороты.СуммаОборотДт
		|	ИЗ
		|		РегистрБухгалтерии.Хозрасчетный.Обороты(&НачПериодаПред, &КонПериодаПред, Период, Счет В (&Счета), , Организация В (&Организации), КорСчет В (&КорСчета), &ВидСубконтоРазвертки) КАК ХозрасчетныйОбороты) КАК СоединениеПериодов
		|
		|СГРУППИРОВАТЬ ПО
		|	СоединениеПериодов.Счет,
		|	СоединениеПериодов.СубконтоРазвертки";
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ВставитьМногострочнуюЧастьОФР(МногострочныеПоказатели, МногострочнаяЧасть, ИмяРаздела = Неопределено)
	
	Если МногострочнаяЧасть.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	Раздел = ?(ЗначениеЗаполнено(ИмяРаздела), ИмяРаздела, "ФормаОтчета");
	
	Если НЕ МногострочныеПоказатели.Свойство(Раздел) Тогда
		МногострочныеПоказатели.Вставить(Раздел, Новый Структура);
	КонецЕсли;
	
	МногострочныеПоказатели[Раздел].Вставить(МногострочнаяЧасть.ИдМСЧ, МногострочнаяЧасть.ТаблицаМСЧ);
	
КонецПроцедуры

Функция ВыводитьСведенияПоНоменклатурнымГруппам(ПараметрыОтчета, ИмяРаздела = Неопределено)
	
	СоставДопСтрок = ?(ЗначениеЗаполнено(ИмяРаздела),
		ПараметрыОтчета["СоставДополнительныхСтрок" + ИмяРаздела],
		ПараметрыОтчета.СоставДополнительныхСтрокОПУ);
	
	Если ПараметрыОтчета.ПрименениеЕНВД Тогда
		Возврат ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока21101")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока21102")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока21201")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока21202")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока22101")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока22102")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока22201")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока22202");
		
	Иначе
		Возврат ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока2110")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока2120")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока2210")
		    ИЛИ ВключатьДопстрокуВОтчет(СоставДопСтрок, "ДопСтрока2220");
		
	КонецЕсли;
	
КонецФункции

Функция СведенияСчета90ПоСубконто(ПараметрыОтчета, НомерСтроки, Запрос, СчетаПоказателя, ИмяРаздела = Неопределено)
	
	ПолныйНомерСтроки = Сред("00000", СтрДлина(НомерСтроки) + 1) + НомерСтроки;
	ИмяСтроки = "П10010" + ПолныйНомерСтроки;
	ИмяГруппы = "П10010" + ПолныйНомерСтроки;
	ИмяДопСтроки = "ДопСтрока" + НомерСтроки;
	
	МногострочнаяЧасть = Новый ТаблицаЗначений;
	МногострочнаяЧасть.Колонки.Добавить(ИмяСтроки + "01", Новый ОписаниеТипов("Строка"));
	МногострочнаяЧасть.Колонки.Добавить(ИмяСтроки + "02", Новый ОписаниеТипов("Строка"));
	МногострочнаяЧасть.Колонки.Добавить(ИмяСтроки + "04", Новый ОписаниеТипов("Число"));
	МногострочнаяЧасть.Колонки.Добавить(ИмяСтроки + "05", Новый ОписаниеТипов("Число"));
	
	СоставДопСтрок = ?(ЗначениеЗаполнено(ИмяРаздела),
		ПараметрыОтчета["СоставДополнительныхСтрок" + ИмяРаздела],
		ПараметрыОтчета.СоставДополнительныхСтрокОПУ);
	
	Если ВключатьДопстрокуВОтчет(СоставДопСтрок, ИмяДопСтроки) Тогда
		Запрос.Текст = "ВЫБРАТЬ
		               |	ВТ_ВсеДанные.СубконтоРазвертки,
		               |	СУММА(ВТ_ВсеДанные.Отчетный) КАК Отчетный,
		               |	СУММА(ВТ_ВсеДанные.Предшествующий) КАК Предшествующий
		               |ИЗ
		               |	ВТ_ВсеДанные КАК ВТ_ВсеДанные
		               |ГДЕ
		               |	ВТ_ВсеДанные.Счет В(&СчетаПоказателя)
		               |
		               |СГРУППИРОВАТЬ ПО
		               |	ВТ_ВсеДанные.СубконтоРазвертки
		               |
		               |УПОРЯДОЧИТЬ ПО
		               |	Отчетный УБЫВ,
		               |	Предшествующий УБЫВ
		               |ИТОГИ
		               |	СУММА(Отчетный),
		               |	СУММА(Предшествующий)
		               |ПО
		               |	ОБЩИЕ";
		
		Запрос.УстановитьПараметр("СчетаПоказателя", СчетаИзСписка(СчетаПоказателя));
		
		ИтоговыйРезультат = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
		ИтоговыйРезультат.Следующий();
		
		ИтогоОтчетный = ИтоговыйРезультат.Отчетный;
		ИтогоПредшествующий = ИтоговыйРезультат.Предшествующий;
		
		ВыведеноСтрок = 0;
		ДопСтрока = СоставДопСтрок.Строки.Найти(ИмяДопСтроки, "ИмяОбластиДопСтроки", Истина);
		ВыводитьСтрок = ДопСтрока.МаксимальноеКоличество;
		Существенность = ДопСтрока.Существенность/100;
		
		СведенияПоСубконто = ИтоговыйРезультат.Выбрать();
		Пока СведенияПоСубконто.Следующий() Цикл
			
			Если ВыводитьСтрок > 0 И ВыведеноСтрок >= ВыводитьСтрок Тогда
				Прервать;
			КонецЕсли;
			
			Если ИтогоОтчетный <> 0 Тогда
				ВесПоказателя = СведенияПоСубконто.Отчетный / ИтогоОтчетный;
			ИначеЕсли ИтогоПредшествующий <> 0 Тогда
				ВесПоказателя = СведенияПоСубконто.Предшествующий / ИтогоПредшествующий;
			Иначе
				ВесПоказателя = 0;
			КонецЕсли;
			
			Если ВесПоказателя < Существенность Тогда
				Продолжить;
			КонецЕсли;
			
			НоваяСтрока = МногострочнаяЧасть.Добавить();
			НоваяСтрока[ИмяСтроки + "02"] = СведенияПоСубконто.СубконтоРазвертки;
			НоваяСтрока[ИмяСтроки + "04"] = СведенияПоСубконто.Отчетный;
			НоваяСтрока[ИмяСтроки + "05"] = СведенияПоСубконто.Предшествующий;
			
			ВыведеноСтрок = ВыведеноСтрок + 1;
			
		КонецЦикла;
	КонецЕсли;
	
	Возврат Новый Структура("ИдМСЧ, ТаблицаМСЧ", ИмяГруппы, МногострочнаяЧасть);
	
КонецФункции

Функция ПараметрыСчетов_Баланс2011Кв4()
	
	ПараметрыСчетов = Новый Соответствие;
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто1.ВидАктива");
	
	ПараметрыСчетов.Вставить("97", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("76.01.2", ПараметрыСчета);
	ПараметрыСчетов.Вставить("76.01.9", ПараметрыСчета);
	
	Возврат ПараметрыСчетов;
	
КонецФункции

Функция БухгалтерскиеИтоги_Баланс2011Кв4(Организация, КонецПериодаОтчета, ИтогиПоСчетам)
	
	РассчитанныеЗначения = Новый Соответствие;
	
	РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", ИтогиПоСчетам.СальдоИОборотыПоСчетам);
	РассчитанныеЗначения.Вставить("СиО_КонтрагентыДоговоры", ИтогиПоСчетам.СиО_КонтрагентыДоговоры);
	РассчитанныеЗначения.Вставить("СиО_Контрагенты", ИтогиПоСчетам.СиО_Контрагенты);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежейУровниБюджетов", ИтогиПоСчетам.СиО_ВидыПлатежейУровниБюджетов);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежей", ИтогиПоСчетам.СиО_ВидыПлатежей);
	РассчитанныеЗначения.Вставить("СиО_Работники", ИтогиПоСчетам.СиО_Работники);
	РассчитанныеЗначения.Вставить("СиО_Резервы", ИтогиПоСчетам.СиО_Резервы);
	
	РазделенноеСальдоСчета_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_01(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_01__01_01", РазделенноеСальдоСчета_02_01.СКК_02_01__01_01); // Амортизация ОС, учитываемых на счете 01.01
	РассчитанныеЗначения.Вставить("СКК_02_01__01_08", РазделенноеСальдоСчета_02_01.СКК_02_01__01_08); // Амортизация ОС, учитываемых на счете 01.08
	
	РазделенноеСальдоСчета_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_02(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_02__03_01", РазделенноеСальдоСчета_02_02.СКК_02_02__03_01); // Амортизация ОС, учитываемых на счете 03.01
	РассчитанныеЗначения.Вставить("СКК_02_02__03_02", РазделенноеСальдоСчета_02_02.СКК_02_02__03_02); // Амортизация ОС, учитываемых на счете 03.02
	РассчитанныеЗначения.Вставить("СКК_02_02__03_03", РазделенноеСальдоСчета_02_02.СКК_02_02__03_03); // Амортизация ОС, учитываемых на счете 03.03
	РассчитанныеЗначения.Вставить("СКК_02_02__03_04", РазделенноеСальдоСчета_02_02.СКК_02_02__03_04); // Амортизация ОС, учитываемых на счете 03.04
	
	Возврат РассчитанныеЗначения;
	
КонецФункции

Процедура ДополнитьБухгалтерскиеИтогиПоВидамАктивов2011Кв4(ПроцессорПоказателя, КонтекстВыполнения)
	
	Организация = КонтекстВыполнения.Организация;
	КонецПериодаОтчета  = КонтекстВыполнения.КонтекстОтчета.КонецПериодаОтчета;
	
	РассчитанныеЗначения = ПроцессорПоказателя.РассчитанныеЗначения;
	
	СтруктураСальдо97 =ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_97(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_97", СтруктураСальдо97.Сальдо_97);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_2",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.2"), КонецПериодаОтчета, Организация));
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_9",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.9"), КонецПериодаОтчета, Организация));
	
КонецПроцедуры

Функция ПараметрыСчетов_Баланс2019Кв1()
	
	ПараметрыСчетов = Новый Соответствие;
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("60.02", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.22", ПараметрыСчета);
	ПараметрыСчетов.Вставить("60.32", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "/по договорам с признаком отражения в балансе ""%2""/");
	
	ПараметрыСчетов.Вставить("76.ВА", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "по расходам будущих периодов с видом актива в балансе ""%2""");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто1.ВидАктива");
	
	ПараметрыСчетов.Вставить("97", ПараметрыСчета);
	
	ПараметрыСчета = Новый Структура;
	ПараметрыСчета.Вставить("ШаблонОписания", "по расходам будущих периодов с видом актива в балансе ""%2""");
	ПараметрыСчета.Вставить("ОтборПоАналитике", "Субконто2.ВидАктива");
	
	ПараметрыСчетов.Вставить("76.01.2", ПараметрыСчета);
	ПараметрыСчетов.Вставить("76.01.9", ПараметрыСчета);
	
	Возврат ПараметрыСчетов;
	
КонецФункции

Функция БухгалтерскиеИтоги_Баланс2019Кв1(Организация, КонецПериодаОтчета, ИтогиПоСчетам, НачалоПериодаОтчета)
	
	РассчитанныеЗначения = Новый Соответствие;
	
	РассчитанныеЗначения.Вставить("СальдоИОборотыПоСчетам", ИтогиПоСчетам.СальдоИОборотыПоСчетам);
	РассчитанныеЗначения.Вставить("СиО_КонтрагентыДоговоры", ИтогиПоСчетам.СиО_КонтрагентыДоговоры);
	РассчитанныеЗначения.Вставить("СиО_Контрагенты", ИтогиПоСчетам.СиО_Контрагенты);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежейУровниБюджетов", ИтогиПоСчетам.СиО_ВидыПлатежейУровниБюджетов);
	РассчитанныеЗначения.Вставить("СиО_ВидыПлатежей", ИтогиПоСчетам.СиО_ВидыПлатежей);
	РассчитанныеЗначения.Вставить("СиО_Работники", ИтогиПоСчетам.СиО_Работники);
	РассчитанныеЗначения.Вставить("СиО_Резервы", ИтогиПоСчетам.СиО_Резервы);
	
	РазделенноеСальдоСчета_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_01(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_01__01_01", РазделенноеСальдоСчета_02_01.СКК_02_01__01_01); // Амортизация ОС, учитываемых на счете 01.01
	РассчитанныеЗначения.Вставить("СКК_02_01__01_08", РазделенноеСальдоСчета_02_01.СКК_02_01__01_08); // Амортизация ОС, учитываемых на счете 01.08
	
	РазделенноеСальдоСчета_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_02_02(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКК_02_02__03_01", РазделенноеСальдоСчета_02_02.СКК_02_02__03_01); // Амортизация ОС, учитываемых на счете 03.01
	РассчитанныеЗначения.Вставить("СКК_02_02__03_02", РазделенноеСальдоСчета_02_02.СКК_02_02__03_02); // Амортизация ОС, учитываемых на счете 03.02
	РассчитанныеЗначения.Вставить("СКК_02_02__03_03", РазделенноеСальдоСчета_02_02.СКК_02_02__03_03); // Амортизация ОС, учитываемых на счете 03.03
	РассчитанныеЗначения.Вставить("СКК_02_02__03_04", РазделенноеСальдоСчета_02_02.СКК_02_02__03_04); // Амортизация ОС, учитываемых на счете 03.04
	
	СтруктураСальдо97 =ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_97(КонецПериодаОтчета, Организация);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_97", СтруктураСальдо97.Сальдо_97);
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_2",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.2"), КонецПериодаОтчета, Организация));
	РассчитанныеЗначения.Вставить("СКД_ПоВидуАктива_76_01_9",
		ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенноеСальдоСчета_76(Счет("76.01.9"), КонецПериодаОтчета, Организация));
	
	РассчитанныеЗначения.Вставить("СиО_Аренда", ИтогиПоСчетам.СиО_Аренда);
	
	// Исключение оборотов межотчетного периода: начало
	МОП_ОБ = Неопределено;
	Если КонецПериодаОтчета = КонецГода(КонецПериодаОтчета) Тогда
		МежотчетныйПериод = КонецПериодаОтчета;
		
		//МОП_ОБ_Настройки = Новый Структура("Настройки, Обороты");
		
		МОП_ОБ_Настройки = Новый Структура;
		МОП_ОБ_Настройки.Вставить("Организация", Организация);
		МОП_ОБ_Настройки.Вставить("НачалоПериода", МежотчетныйПериод);
		МОП_ОБ_Настройки.Вставить("КонецПериода", МежотчетныйПериод);
		
		МОП_ОБ = ЗаполнениеБухгалтерскойОтчетностиИтоги.ОборотыМеждуСчетами(МОП_ОБ_Настройки);
		
		РазделенныйОборот_02_01 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенныйОборотМежотчетногоПериодаПоСчету_02_01(
			НачалоПериодаОтчета, КонецПериодаОтчета, Организация);
			
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_01__84__01_01", РазделенныйОборот_02_01.МОП_ОБ_02_01__84__01_01);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_01__01_01", РазделенныйОборот_02_01.МОП_ОБ_84__02_01__01_01);
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_01__84__01_08", РазделенныйОборот_02_01.МОП_ОБ_02_01__84__01_08);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_01__01_08", РазделенныйОборот_02_01.МОП_ОБ_84__02_01__01_08);
		
		РазделенныйОборот_02_02 = ЗаполнениеБухгалтерскойОтчетностиИтоги.РазделенныйОборотМежотчетногоПериодаПоСчету_02_02(
			НачалоПериодаОтчета, КонецПериодаОтчета, Организация);
			
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_02__84__03_01", РазделенныйОборот_02_02.МОП_ОБ_02_02__84__03_01);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_02__03_01", РазделенныйОборот_02_02.МОП_ОБ_84__02_02__03_01);
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_02__84__03_02", РазделенныйОборот_02_02.МОП_ОБ_02_02__84__03_02);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_02__03_02", РазделенныйОборот_02_02.МОП_ОБ_84__02_02__03_02);
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_02__84__03_03", РазделенныйОборот_02_02.МОП_ОБ_02_02__84__03_03);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_02__03_03", РазделенныйОборот_02_02.МОП_ОБ_84__02_02__03_03);
		РассчитанныеЗначения.Вставить("МОП_ОБ_02_02__84__03_04", РазделенныйОборот_02_02.МОП_ОБ_02_02__84__03_04);
		РассчитанныеЗначения.Вставить("МОП_ОБ_84__02_02__03_04", РазделенныйОборот_02_02.МОП_ОБ_84__02_02__03_04);
		
	КонецЕсли;
	
	РассчитанныеЗначения.Вставить("МОП_ОБ", МОП_ОБ);
	
	// Исключение оборотов межотчетного периода: конец;
	
	Возврат РассчитанныеЗначения;
	
КонецФункции

#Область ОберткиПроцедурИФункций

Функция Счет(УсловныйКод)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.Счет(УсловныйКод);
	
КонецФункции

Функция СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СчетСРеквизитами(УсловныйКод, СчетаСРеквизитами);
	
КонецФункции

Функция СНД(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СНД(Счет, СальдоИОбороты);
	
КонецФункции

Функция СНК(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СНК(Счет, СальдоИОбороты);
	
КонецФункции

Функция ДО(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.ДО(Счет, СальдоИОбороты);
	
КонецФункции

Функция КО(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.КО(Счет, СальдоИОбороты);
	
КонецФункции

Функция ОБ(Знач СчетДт, Знач СчетКт, ОборотыМеждуСчетами)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.ОБ(СчетДт, СчетКт, ОборотыМеждуСчетами);
	
КонецФункции

Функция СКД(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКД(Счет, СальдоИОбороты);
	
КонецФункции

Функция СКК(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКК(Счет, СальдоИОбороты);
	
КонецФункции

Функция СКДР(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СКДР(Счет, СальдоИОбороты);
	
КонецФункции

Функция СККР(Счет, СальдоИОбороты)
	
	Возврат ЗаполнениеБухгалтерскойОтчетностиИтоги.СККР(Счет, СальдоИОбороты);
	
КонецФункции

Функция ОписаниеПериода(НачалоПериода, КонецПериода)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ОписаниеПериода(НачалоПериода, КонецПериода);
	
КонецФункции

Функция РасширенныйПериодОтчета(ДатаНачалаПериодаОтчета)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.РасширенныйПериодОтчета(ДатаНачалаПериодаОтчета);
	
КонецФункции

Функция УчетНа70ВедетсяСводно()
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.УчетНа70ВедетсяСводно();
	
КонецФункции

Функция СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, Счета, Субконто)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.СальдоИОборотыПоСчетамИСубконто(НастройкиПолученияБухитогов, Счета, Субконто);
	
КонецФункции

Функция СчетаИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.СчетаИзСписка(СписокСчетов, ИмяСпискаСчетов);
	
КонецФункции

Функция МассивСчетовВИерархииИзСписка(Знач СписокСчетов, ИмяСпискаСчетов = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.МассивСчетовВИерархииИзСписка(СписокСчетов, ИмяСпискаСчетов);
	
КонецФункции

Процедура УстановитьЗначениеПоказателя(ПоказателиПоРазделам, ИмяРаздела, ИмяПоказателя, ЗначениеПоказателя)
	
	ЗаполнениеБухгалтерскойОтчетности.УстановитьЗначениеПоказателя(ПоказателиПоРазделам, ИмяРаздела, ИмяПоказателя, ЗначениеПоказателя);
	
КонецПроцедуры

Процедура ОчиститьРазделРасшифровки(ТаблицаРасшифровки, ИмяРаздела)
	
	ЗаполнениеБухгалтерскойОтчетности.ОчиститьРазделРасшифровки(ТаблицаРасшифровки, ИмяРаздела);
	
КонецПроцедуры

Процедура ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры = Неопределено)
	
	ЗаполнениеРасшифровкаРегламентированнойОтчетности.ДобавитьСтрокуРасшифровки(ТаблицаРасшифровок, ИмяПоказателя, НаименованиеПоказателя, ЗнакОперации, НаименованиеСлагаемого, Сумма, ИмяРаздела, ДополнительныеПараметры);
	
КонецПроцедуры

Функция НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчету(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуВПДР(ОбщиеНастройки, Счет, ИмяВидаПрочихДоходовИРасходов)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуВПДР(ОбщиеНастройки, Счет, ИмяВидаПрочихДоходовИРасходов);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ОбщиеНастройки, Счет)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ОбщиеНастройки, Счет);
	
КонецФункции

Функция НастройкиОСВПоСчетуРаботникиРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуРаботникиРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ОбщиеНастройки, Счет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике = Неопределено)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиАнализаСчета(ОбщиеНастройки, Счет, КорСчет, ОтборПоАналитике);
	
КонецФункции

Функция НастройкиАнализаСчетаВПДР(ОбщиеНастройки, Счет, КорСчет, ИмяВидаПрочихДоходовИРасходов)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.НастройкиАнализаСчетаВПДР(ОбщиеНастройки, Счет, КорСчет, ИмяВидаПрочихДоходовИРасходов);
	
КонецФункции

Функция ОписаниеОбъектовВПДР(ИмяВидаПрочихДоходовИРасходов)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ОписаниеОбъектовВПДР(ИмяВидаПрочихДоходовИРасходов);
	
КонецФункции

Функция ПривестиКДате(Период)
	
	Возврат ЗаполнениеБухгалтерскойОтчетности.ПривестиКДате(Период);
	
КонецФункции

#КонецОбласти

#Область РасчетНалогаНаПрибыль

Функция НовыйРасчетОборотовПоСчетуРасчетаНалогаНаПрибыль(КодСчета)
	
	// Счета расчета налога при закрытии года закрываются на 99.01.
	// Особенность расчета в том, что эти обороты нужно исключить.
	
	Расчет = Новый Структура;
	Расчет.Вставить("КодСчета",         КодСчета); // Условный код
	Расчет.Вставить("КодСчетаЗакрытия", "99.01");  // Условный код
	Расчет.Вставить("Результат",        0);
	Расчет.Вставить("ОборотДтВсего",    0);
	Расчет.Вставить("ОборотКтВсего",    0);
	Расчет.Вставить("ОборотДтЗакрытие", 0);
	Расчет.Вставить("ОборотКтЗакрытие", 0);
	
	Возврат Расчет;
	
КонецФункции

Функция ОборотПоСчетуРасчетаНалогаНаПрибыль(КодСчета, СальдоИОборотыПоСчетам, ОборотыМеждуСчетами)
	
	Расчет = НовыйРасчетОборотовПоСчетуРасчетаНалогаНаПрибыль(КодСчета);
	
	Расчет.ОборотДтВсего = ДО(КодСчета, СальдоИОборотыПоСчетам);
	Расчет.ОборотКтВсего = КО(КодСчета, СальдоИОборотыПоСчетам);
	
	Расчет.ОборотДтЗакрытие = ОБ(КодСчета,                Расчет.КодСчетаЗакрытия, ОборотыМеждуСчетами);
	Расчет.ОборотКтЗакрытие = ОБ(Расчет.КодСчетаЗакрытия, КодСчета,                ОборотыМеждуСчетами);
	
	ОборотВсего    = Расчет.ОборотДтВсего    - Расчет.ОборотКтВсего;
	ОборотЗакрытие = Расчет.ОборотДтЗакрытие - Расчет.ОборотКтЗакрытие;
	
	Расчет.Результат = - (ОборотВсего - ОборотЗакрытие); // это - показатель отчета о финансовых результатах; дебетовые значения _уменьшают_ прибыль
	
	Возврат Расчет;
	
КонецФункции

Процедура ДобавитьРасшифровкуОборотовПоСчетуРасчетаНалогаНаПрибыль(ТаблицаРасшифровки, Расчет, ОбщиеПараметрыРасшифровки, ИмяОбластиПоказателя, ИмяРаздела, ЗаголовокРасшифровки)

	// Преобразуем из условных кодов в коды справочника
	Счет             = Счет(Расчет.КодСчета);
	КодСчета         = Счет.Код;
	
	СчетЗакрытия     = Счет(Расчет.КодСчетаЗакрытия);
	КодСчетаЗакрытия = СчетЗакрытия.Код;
	
	ДобавитьСтрокуРасшифровки(
		ТаблицаРасшифровки,
		ИмяОбластиПоказателя,
		ЗаголовокРасшифровки,
		"+",
		"!КО " + КодСчета,
		Расчет.ОборотКтВсего,
		ИмяРаздела,
		НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет));
	
	ДобавитьСтрокуРасшифровки(
		ТаблицаРасшифровки,
		ИмяОбластиПоказателя,
		"",
		"-",
		"!ДО " + КодСчета,
		-Расчет.ОборотДтВсего,
		ИмяРаздела,
		НастройкиОСВПоСчету(ОбщиеПараметрыРасшифровки, Счет));
	
	ДобавитьСтрокуРасшифровки(
		ТаблицаРасшифровки,
		ИмяОбластиПоказателя,
		"",
		"+",
		"!ОБ " + КодСчета + " " + КодСчетаЗакрытия,
		Расчет.ОборотДтЗакрытие,
		ИмяРаздела,
		НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, Счет, СчетЗакрытия));
	
	ДобавитьСтрокуРасшифровки(
		ТаблицаРасшифровки,
		ИмяОбластиПоказателя,
		"",
		"-", 
		"!ОБ " + КодСчетаЗакрытия + " " + КодСчета,
		-Расчет.ОборотКтЗакрытие,
		ИмяРаздела,
		НастройкиАнализаСчета(ОбщиеПараметрыРасшифровки, СчетЗакрытия, Счет));
	
КонецПроцедуры

#КонецОбласти

// Исключение оборотов межотчетного периода: начало
#Область МежотчетныйПериод

Функция ПредставлениеМОП_ОБ(СчетДебета, СчетКредита, СчетОтбора = Неопределено) Экспорт
	
	Если СчетОтбора = Неопределено Тогда
		ТекстШаблона = НСтр("ru = 'Оборот межотчетного периода с дебета счета %1 в кредит счета %2';
							|en = 'In-between reporting period turnover from the debit of account %1 to the credit of account %2'");
		Возврат СтрШаблон(ТекстШаблона, СчетДебета, СчетКредита);
	Иначе
		ТекстШаблона = НСтр("ru = 'Оборот межотчетного периода с дебета счета %1 в кредит счета %2 по объектам, учитываемым на счете %3';
							|en = 'Оборот межотчетного периода с дебета счета %1 в кредит счета %2 по объектам, учитываемым на счете %3'");
		Возврат СтрШаблон(ТекстШаблона, СчетДебета, СчетКредита, СчетОтбора);
	КонецЕсли;
	
КонецФункции

#КонецОбласти
// Исключение оборотов межотчетного периода: конец

#Область ПроцессорПоказателя
// Назначение процессора - устранить избыточность кода.
// Задачи процессора:
//   - изменение значения показателя;
//   - формирование записи в расшифровке;
//   - присваивание итогового значения.

// Конструктор процессора показателя.
//
// Возвращаемое значение:
//   Структура:
//     * СчетаСРеквизитами - ТаблицаЗначений
//     * ПараметрыСчетов - Соответствие
//     * РассчитанныеЗначения - Соответствие
//     * ТаблицаРасшифровки - ТаблицаЗначений
//     * ИмяРаздела - Строка
//     * Организация - СправочникСсылка.Организации
//     * НачалоПериода - Дата
//     * КонецПериода - Дата
//     * Показатель - Структура:
//         ** КодПоказателя - Строка
//         ** НаименованиеПоказателя - Строка
//         ** ЗначениеПоказателя - Число
//
Функция НовыйПроцессорПоказателя() Экспорт
	
	ПроцессорПоказателя = Новый Структура;
	
	// Общие параметры.
	ПроцессорПоказателя.Вставить("СчетаСРеквизитами");
	ПроцессорПоказателя.Вставить("ПараметрыСчетов");
	ПроцессорПоказателя.Вставить("РассчитанныеЗначения");
	ПроцессорПоказателя.Вставить("ТаблицаРасшифровки");
	ПроцессорПоказателя.Вставить("ИмяРаздела");
	ПроцессорПоказателя.Вставить("Организация");
	ПроцессорПоказателя.Вставить("НачалоПериода");
	ПроцессорПоказателя.Вставить("КонецПериода");
	
	// Параметры показателя.
	Показатель = Новый Структура;
	ПроцессорПоказателя.Вставить("Показатель", Показатель);
	
	Показатель.Вставить("КодПоказателя");
	Показатель.Вставить("НаименованиеПоказателя");
	Показатель.Вставить("ЗначениеПоказателя");
	
	Возврат ПроцессорПоказателя;
	
КонецФункции

// Возвращает неинициализированные параметры для вывода расшифровки при отражении составляющей по значению.
// 
// Возвращаемое значение:
//   Структура:
//     * ТокенЗнака - Строка - принимает значение "+" или "-"
//     * ОписаниеРасшифровки - Строка
//     * НастройкаОтчетаРасшифровки - Произвольный
//
Функция НовыеПараметрыРасшифровки() Экспорт
	
	ПараметрыРасшифровки = Новый Структура;
	
	ПараметрыРасшифровки.Вставить("ТокенЗнака");
	ПараметрыРасшифровки.Вставить("ОписаниеРасшифровки");
	ПараметрыРасшифровки.Вставить("НастройкаОтчетаРасшифровки");
	
	Возврат ПараметрыРасшифровки;
	
КонецФункции

// Вносит изменения в итоговое значение показателя и формирует запись в расшифровке алгоритма по описанию алгоритма.
//
// Параметры:
//   ПроцессорПоказателя - Структура - описание параметра см. НовыйПроцессорПоказателя.
//   ОписаниеСоставляющей - Строка - символьное выражение, описывающее порядок отражения составляющей в итоговом показателе.
//   ДопПараметры - Произвольный - допольнительные параметры, требующиеся для отражения составляющей.
//
Процедура УчестьСоставляющую(ПроцессорПоказателя, ОписаниеСоставляющей, ДопПараметры = Неопределено) Экспорт
	
	СчетаСРеквизитами = ПроцессорПоказателя.СчетаСРеквизитами;
	
	СальдоИОборотыПоСчетам = ПроцессорПоказателя.РассчитанныеЗначения["СальдоИОборотыПоСчетам"];
	ОборотыМеждуСчетами    = ПроцессорПоказателя.РассчитанныеЗначения["ОборотыМеждуСчетами"];
	
	СиО_КонтрагентыДоговоры        = ПроцессорПоказателя.РассчитанныеЗначения["СиО_КонтрагентыДоговоры"];
	СиО_Контрагенты                = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Контрагенты"];
	СиО_ВидыПлатежейУровниБюджетов = ПроцессорПоказателя.РассчитанныеЗначения["СиО_ВидыПлатежейУровниБюджетов"];
	СиО_ВидыПлатежей               = ПроцессорПоказателя.РассчитанныеЗначения["СиО_ВидыПлатежей"];
	СиО_Работники                  = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Работники"];
	СиО_Резервы                    = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Резервы"];
	СиО_Аренда                     = ПроцессорПоказателя.РассчитанныеЗначения["СиО_Аренда"];
	МОП_ОБ                         = ПроцессорПоказателя.РассчитанныеЗначения["МОП_ОБ"];
	
	ПараметрыРасшифровки = Новый Структура;
	ПараметрыРасшифровки.Вставить("Организация",   ПроцессорПоказателя.Организация);
	ПараметрыРасшифровки.Вставить("НачалоПериода", ПроцессорПоказателя.НачалоПериода);
	ПараметрыРасшифровки.Вставить("КонецПериода",  ПроцессорПоказателя.КонецПериода);
	
	БезРасшифровки = Новый Структура("Организация", ПроцессорПоказателя.Организация);
	
	Составляющая = СтрЗаменить(ОписаниеСоставляющей, " ", "");
	ТокенЗнака = Лев(Составляющая, 1);
	Множитель = 1;
	Если ТокенЗнака = "-" Тогда
		Множитель = -1;
	КонецЕсли;
	Составляющая = Сред(Составляющая, 2);
	
	Если СтрНачинаетсяС(Составляющая, "СНД_ПоВидуАктива") Тогда
		ТокенОстатка = "СНД_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Сальдо на начало периода по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Сальдо на начало периода по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ДО_ПоВидуАктива") Тогда
		ТокенОстатка = "ДО_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 16);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Оборот по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Оборот по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "КО_ПоВидуАктива") Тогда
		ТокенОстатка = "КО_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 16);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Оборот по кредиту счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Оборот по кредиту счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД_ПоВидуАктива") Тогда
		ТокенОстатка = "СКД_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Сальдо на конец периода по дебету счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Сальдо на конец периода по дебету счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК_ПоВидуАктива") Тогда
		ТокенОстатка = "СКК_ПоВидуАктива";
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ПараметрыСчета = ПроцессорПоказателя.ПараметрыСчетов[ТокенСчета];
		ИмяЗначения = ТокенОстатка + "_" + СтрЗаменить(ТокенСчета, ".", "_");
		ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения][ДопПараметры];
		
		Если ПараметрыСчета.Свойство("ШаблонОписания") Тогда
			ТекстШаблона = "Сальдо на конец периода по кредиту счета %1 " + ПараметрыСчета.ШаблонОписания;
		Иначе
			ТекстШаблона = "Сальдо на конец периода по кредиту счета %1 /объекты со значением реквизита ""Вид актива"" - ""%2""/";
		КонецЕсли;
		ШаблонРасшифровкиПоказателя = СтрШаблон(ТекстШаблона, Счет.Код, Строка(ДопПараметры));
		
		Если ПараметрыСчета.Свойство("ОтборПоАналитике") Тогда
			ОтборПоАналитике = Новый Соответствие;
			ОтборПоАналитике.Вставить(ПараметрыСчета.ОтборПоАналитике, ДопПараметры);
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка, ОтборПоАналитике);
		Иначе
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_КонтрагентыДоговоры") Тогда
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_КонтрагентыДоговоры") Тогда
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДП_КонтрагентыДоговоры") Тогда
		// Дебетовое сальдо на активных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Положительное сальдо на конец периода по дебету счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСКДПоложительное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККП_КонтрагентыДоговоры") Тогда
		// Кредитовое сальдо на пассивных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Положительное сальдо на конец периода по кредиту счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСККПоложительное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДО_КонтрагентыДоговоры") Тогда
		// Кредитовое сальдо на активных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Отрицательное сальдо на конец периода по дебету счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСКДОтрицательное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККО_КонтрагентыДоговоры") Тогда
		// Дебетовое сальдо на пассивных счетах, при развертке счета по субконто.
		ТокенСчета = Сред(Составляющая, 25);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_КонтрагентыДоговоры);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Отрицательное сальдо на конец периода по кредиту счета %1 по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыДоговорыСККОтрицательное(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Контрагенты") Тогда
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Контрагенты);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Контрагенты""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Контрагенты") Тогда
		ТокенСчета = Сред(Составляющая, 17);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Контрагенты);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_ВидыПлатежейУровни") Тогда
		ТокенСчета = Сред(Составляющая, 24);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_ВидыПлатежейУровниБюджетов);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)"", ""Уровни бюджетов""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_ВидыПлатежейУровни") Тогда
		ТокенСчета = Сред(Составляющая, 24);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_ВидыПлатежейУровниБюджетов);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)"", ""Уровни бюджетов""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейУровниБюджетовРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_ВидыПлатежей") Тогда
		ТокенСчета = Сред(Составляющая, 18);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_ВидыПлатежей);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_ВидыПлатежей") Тогда
		ТокенСчета = Сред(Составляющая, 18);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_ВидыПлатежей);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Виды платежей в бюджет (фонды)""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуВидыПлатежейРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Работники") Тогда
		ТокенСчета = Сред(Составляющая, 15);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Работники);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Работники организации""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРаботникиРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Работники") Тогда
		ТокенСчета = Сред(Составляющая, 15);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Работники);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Работники организации""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРаботникиРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР_Резервы") Тогда
		ТокенСчета = Сред(Составляющая, 13);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СиО_Резервы);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по дебету счета %1, развернутое по субконто ""Оценочные обязательства и резервы""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР_Резервы") Тогда
		ТокенСчета = Сред(Составляющая, 13);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СиО_Резервы);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Оценочные обязательства и резервы""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
	
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД_Аренда") Тогда
		ТокенСчета = Сред(Составляющая, 11);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКД(Счет.Ссылка, СиО_Аренда.ДебиторскаяЗадолженность);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);

	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК_Аренда") Тогда
		ТокенСчета = Сред(Составляющая, 11);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКК(Счет.Ссылка, СиО_Аренда.КредиторскаяЗадолженность);
		ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1, развернутое по субконто ""Контрагенты"", ""Договоры""",
			Счет.Код);
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуКонтрагентыРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
	
	ИначеЕсли СтрНачинаетсяС(Составляющая, "МОП_ОБ") Тогда
		ТокенСчета = Сред(Составляющая, 7);
		Если СтрНайти(ТокенСчета, "\") > 0 Тогда
			ТокеныСчетов = СтрРазделить(ТокенСчета, "\");
			Счета = СтрРазделить(ТокеныСчетов[0], ",");
			Счета[0] = СчетСРеквизитами(Счета[0], СчетаСРеквизитами);
			Счета[1] = СчетСРеквизитами(Счета[1], СчетаСРеквизитами);
			ИмяЗначения = "МОП_ОБ_" + СтрЗаменить(Счета[0].Код, ".", "_") + "__" + СтрЗаменить(Счета[1].Код, ".", "_")
			            + "__" + СтрЗаменить(ТокеныСчетов[1], ".", "_");
			ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения];
			ШаблонРасшифровкиПоказателя = ПредставлениеМОП_ОБ(
				Счета[0].Код,
				Счета[1].Код,
				СчетСРеквизитами(ТокеныСчетов[1], СчетаСРеквизитами).Код);
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		Иначе
			Счета = СтрРазделить(Сред(Составляющая, 7), ",");
			Счета[0] = СчетСРеквизитами(Счета[0], СчетаСРеквизитами);
			Счета[1] = СчетСРеквизитами(Счета[1], СчетаСРеквизитами);
			ЗначениеСоставляющей = ОБ(Счета[0].Ссылка, Счета[1].Ссылка, МОП_ОБ);
			ШаблонРасшифровкиПоказателя = ПредставлениеМОП_ОБ(Счета[0].Код, Счета[1].Код);
			НастройкаОтчетаРасшифровки = НастройкиАнализаСчета(ПараметрыРасшифровки, Счета[0].Ссылка, Счета[1].Ссылка);
		КонецЕсли;

	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКДР") Тогда
		ТокенСчета = Сред(Составляющая, 5);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКДР(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СКДР " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СККР") Тогда
		ТокенСчета = Сред(Составляющая, 5);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СККР(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СККР " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчетуРазвернуто(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СНД") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СНД(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СНД " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СНК") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СНК(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СНК " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКД") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = СКД(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!СКД " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "СКК") Тогда
		ТокенСчета = Сред(Составляющая, 4);
		Если СтрНайти(ТокенСчета, "\") > 0 Тогда
			ТокеныСчетов = СтрРазделить(ТокенСчета, "\");
			ИмяЗначения = "СКК_" + СтрЗаменить(ТокеныСчетов[0], ".", "_")
			            + "__" + СтрЗаменить(ТокеныСчетов[1], ".", "_");
			ЗначениеСоставляющей = ПроцессорПоказателя.РассчитанныеЗначения[ИмяЗначения];
			ШаблонРасшифровкиПоказателя = СтрШаблон("Сальдо на конец периода по кредиту счета %1 по объектам, учитываемым на счете %2",
				СчетСРеквизитами(ТокеныСчетов[0], СчетаСРеквизитами).Код,
				СчетСРеквизитами(ТокеныСчетов[1], СчетаСРеквизитами).Код);
			НастройкаОтчетаРасшифровки = БезРасшифровки;
		Иначе
			Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
			ЗначениеСоставляющей = СКК(Счет.Ссылка, СальдоИОборотыПоСчетам);
			ШаблонРасшифровкиПоказателя = "!СКК " + Счет.Код;
			НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		КонецЕсли;
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ДО") Тогда
		ТокенСчета = Сред(Составляющая, 3);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = ДО(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!ДО " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "КО") Тогда
		ТокенСчета = Сред(Составляющая, 3);
		Счет = СчетСРеквизитами(ТокенСчета, СчетаСРеквизитами);
		ЗначениеСоставляющей = КО(Счет.Ссылка, СальдоИОборотыПоСчетам);
		ШаблонРасшифровкиПоказателя = "!КО " + Счет.Код;
		НастройкаОтчетаРасшифровки = НастройкиОСВПоСчету(ПараметрыРасшифровки, Счет.Ссылка);
		
	ИначеЕсли СтрНачинаетсяС(Составляющая, "ОБ") Тогда
		Счета = СтрРазделить(Сред(Составляющая, 3), ",");
		Счета[0] = СчетСРеквизитами(Счета[0], СчетаСРеквизитами);
		Счета[1] = СчетСРеквизитами(Счета[1], СчетаСРеквизитами);
		ЗначениеСоставляющей = ОБ(Счета[0].Ссылка, Счета[1].Ссылка, ОборотыМеждуСчетами);
		ШаблонРасшифровкиПоказателя = "!ОБ " + Счета[0].Код + " " + Счета[1].Код;
		НастройкаОтчетаРасшифровки = НастройкиАнализаСчета(ПараметрыРасшифровки, Счета[0].Ссылка, Счета[1].Ссылка);
		
	Иначе
		ИмяПроцедуры = "ЗаполнениеБухгалтерскойОтчетностиОсновная.УчестьСоставляющую";
		ВызватьИсключение СтрШаблон(НСтр("ru = 'Процедура %1:
			|Недопустимое описание составляющей показателя: %2';
			|en = 'The %1 procedure:
			|Invalid description of the indicator component: %2'"),
			ИмяПроцедуры, ОписаниеСоставляющей);
		
	КонецЕсли;
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя
		+ Множитель * ЗначениеСоставляющей;
	
	ДобавитьСтрокуРасшифровки(
		ПроцессорПоказателя.ТаблицаРасшифровки,
		ПроцессорПоказателя.Показатель.КодПоказателя,
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя,
		ТокенЗнака,
		ШаблонРасшифровкиПоказателя,
		Множитель * ЗначениеСоставляющей,
		ПроцессорПоказателя.ИмяРаздела,
		НастройкаОтчетаРасшифровки);
	
	// Наименование показателя актуально только для первой строки расшифровки.
	// Принудительная очистка в вызывающем коде не требуется.
	ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "";
	
КонецПроцедуры

// Вносит изменения в итоговое значение показателя и формирует запись в расшифровке алгоритма по значению составляющей.
//
// Параметры:
//   ПроцессорПоказателя - Структура - описание параметра см. НовыйПроцессорПоказателя
//   ЗначениеСоставляющей - Число
//   ОписаниеСоставляющей - Строка - символьное выражение, описывающее порядок отражения составляющей в итоговом показателе.
//   ПараметрыРасшифровки - Структура - описание параметра см. НовыеПараметрыРасшифровки
//
Процедура УчестьСоставляющуюПоЗначению(ПроцессорПоказателя, ЗначениеСоставляющей, ПараметрыРасшифровки = Неопределено) Экспорт
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя =
		ПроцессорПоказателя.Показатель.ЗначениеПоказателя + ЗначениеСоставляющей;
		
	Если ПараметрыРасшифровки <> Неопределено Тогда
		
		ТокенЗнака = ПараметрыРасшифровки.ТокенЗнака;
		ШаблонРасшифровкиПоказателя = ПараметрыРасшифровки.ОписаниеРасшифровки;
		НастройкаОтчетаРасшифровки = ПараметрыРасшифровки.НастройкаОтчетаРасшифровки;
		
		Множитель = 1;
		Если ТокенЗнака = "-" Тогда
			Множитель = -1;
		КонецЕсли;
		
		ДобавитьСтрокуРасшифровки(
			ПроцессорПоказателя.ТаблицаРасшифровки,
			ПроцессорПоказателя.Показатель.КодПоказателя,
			ПроцессорПоказателя.Показатель.НаименованиеПоказателя,
			ТокенЗнака,
			ШаблонРасшифровкиПоказателя,
			Множитель * ЗначениеСоставляющей,
			ПроцессорПоказателя.ИмяРаздела,
			НастройкаОтчетаРасшифровки);
		
		// Наименование показателя актуально только для первой строки расшифровки.
		// Принудительная очистка в вызывающем коде не требуется.
		ПроцессорПоказателя.Показатель.НаименованиеПоказателя = "";
		
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьЗначениеПоказателяПоПроцессору(ПоказателиПоРазделам, ПроцессорПоказателя, Вычитаемый = Ложь) Экспорт
	
	Организация = ПроцессорПоказателя.Организация;
	
	ИмяРаздела = ПроцессорПоказателя.ИмяРаздела;
	ИмяПоказателя = ПроцессорПоказателя.Показатель.КодПоказателя;
	
	ЗначениеПоказателя = ПроцессорПоказателя.Показатель.ЗначениеПоказателя;
	Если Вычитаемый Тогда
		ЗначениеПоказателя = -ЗначениеПоказателя;
	КонецЕсли;
	
	НоваяСтрока = ПоказателиПоРазделам.Добавить();
	НоваяСтрока.Раздел = ИмяРаздела;
	НоваяСтрока.Показатель = ИмяПоказателя;
	НоваяСтрока.Сумма = ЗначениеПоказателя;
	
	Если ПоказателиПоРазделам.Колонки.Найти("Организация") <> Неопределено Тогда
		НоваяСтрока.Организация = Организация;
	КонецЕсли;
	
КонецПроцедуры

Процедура УстановитьКодИОбнулитьПоказатель(ПроцессорПоказателя, НомерСтроки, НомерГрафы) Экспорт
	
	Префикс         = "П00010";
	ПолныйКодНомера = "00000";
	ПолныйКодГрафы  = "00";
	
	ПроцессорПоказателя.Показатель.КодПоказателя = Префикс
		+ Лев(ПолныйКодНомера, 5 - СтрДлина(НомерСтроки)) + НомерСтроки
		+ Лев(ПолныйКодГрафы, 2 - СтрДлина(НомерГрафы)) + НомерГрафы;
	
	ПроцессорПоказателя.Показатель.ЗначениеПоказателя = 0;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
