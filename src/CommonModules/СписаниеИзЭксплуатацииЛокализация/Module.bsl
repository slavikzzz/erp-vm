////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Списание из эксплуатации".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт

	//++ Локализация
	РеглУчетПроведениеСервер.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- Локализация
	
КонецПроцедуры

Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	//++ Локализация

	НепроверяемыеРеквизиты = Новый Массив;

	Если НЕ ТМЦВЭксплуатацииПовтИсп.СтоимостьТМЦВЭксплуатацииСписана(Объект.Организация, НачалоМесяца(Объект.Дата)) Тогда
		ПараметрыВыбораСтатейИАналитик = Документы.СписаниеИзЭксплуатации.ПараметрыВыбораСтатейИАналитик();
		ДоходыИРасходыСервер.ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты, ПараметрыВыбораСтатейИАналитик);
	Иначе
		НепроверяемыеРеквизиты.Добавить("Товары.СтатьяРасходов");
		НепроверяемыеРеквизиты.Добавить("Товары.АналитикаРасходов");
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, НепроверяемыеРеквизиты);

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ПроведениеПоРеглУчету

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт

	ТекстЗапроса = "";

	//++ Локализация
	
	ТекстыОтражения = Новый Массив;

	#Область СписаниеИзЭксплуатацииЗабалансовыйУчет
	ТекстЗапроса = 
	"////////////////////////////////////////////////////////////////////////////////////////////////////
	|// Списание из эксплуатации, забалансовый учет (Дт --- :: Кт МЦ.0Х)
	|ВЫБРАТЬ
	|	
	|	Операция.Ссылка КАК Ссылка,
	|	Операция.Дата КАК Период,
	|	Операция.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|	
	|	0 КАК Сумма,
	|	0 КАК СуммаУУ,
	|	
	|	// Дт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	НЕОПРЕДЕЛЕНО КАК ВидСчетаДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК АналитикаУчетаДт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаДт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеДт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиДт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт1,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|	
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|	
	|	// Кт ///////////////////////////////////////////////////////////////////////////////////////////
	|	
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ВидСчетаКт,
	|	Строки.Партия.КатегорияЭксплуатации КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО КАК МестоУчетаКт,
	|	
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	Операция.Подразделение КАК ПодразделениеКт,
	|	ЗНАЧЕНИЕ(Справочник.НаправленияДеятельности.ПустаяСсылка) КАК НаправлениеДеятельностиКт,
	|	
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Строки.Номенклатура КАК СубконтоКт1,
	|	Строки.Партия КАК СубконтоКт2,
	|	Строки.ФизическоеЛицо КАК СубконтоКт3,
	|	
	|	0 КАК ВалютнаяСуммаКт,
	|	Строки.Количество КАК КоличествоКт,
	|
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|
	|	""Списание из эксплуатации, забалансовый учет"" КАК Содержание
	|	
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеИзЭксплуатации КАК Операция
	|	ПО ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеИзЭксплуатации.Товары КАК Строки
	|	ПО Строки.Ссылка = Операция.Ссылка
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ УчетнаяПолитикаОрганизаций КАК УчетнаяПолитикаОрганизации
	|	ПО Операция.Ссылка = УчетнаяПолитикаОрганизации.Ссылка
	|		И Операция.Организация = УчетнаяПолитикаОрганизации.Организация
	|		И НАЧАЛОПЕРИОДА(Операция.Дата, ДЕНЬ) = УчетнаяПолитикаОрганизации.ДатаОтражения
	|
	|ГДЕ
	|	ЕСТЬNULL(УчетнаяПолитикаОрганизации.ЗабалансовыйУчетТМЦВЭксплуатации, ЛОЖЬ) = ИСТИНА
	|	И Строки.Партия.КатегорияЭксплуатации.ИмущественныйУчет
	|	И Строки.Партия.ДатаНачалаЭксплуатации >= &ДатаНачалаДействияФСБУ5
	|";
	ТекстыОтражения.Добавить(ТекстЗапроса);
	#КонецОбласти

	СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация

	Возврат ТекстЗапроса;

КонецФункции

#КонецОбласти

#Область Печать

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.Идентификатор = "МБ8";
	КомандаПечати.Представление = НСтр("ru = 'Акт на списание (МБ-8)';
										|en = 'Statement of writing-off (No. MB-8)'");
	КомандаПечати.ПроверкаПроведенияПередПечатью = Истина;
	КомандаПечати.Картинка = БиблиотекаКартинок.Печать;
	
	//-- Локализация

КонецПроцедуры

Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	//++ Локализация
	
	Если УправлениеПечатью.НужноПечататьМакет(КоллекцияПечатныхФорм, "МБ8") Тогда
		
		УправлениеПечатью.ВывестиТабличныйДокументВКоллекцию(
			КоллекцияПечатныхФорм,
			"МБ8",
			НСтр("ru = 'Акт на списание (МБ-8)';
				|en = 'Statement of writing-off (No. MB-8)'"),
			ПечатьМБ8(МассивОбъектов, ОбъектыПечати, ПараметрыПечати),,
			"Документ.СписаниеИзЭксплуатации.ПФ_MXL_МБ8");
		
	КонецЕсли;
	
	//-- Локализация

КонецПроцедуры

//++ Локализация

Функция ПолучитьДанныеДляПечатнойФормыМБ8(МассивДокументов)
	
	#Область ТекстЗапросаДанныхПечатнойФормыМБ8
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Товары.Ссылка.Организация КАК Организация,
	|	Товары.Ссылка.Подразделение КАК Подразделение,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	ВЫБОР
	|		КОГДА &КолонкаКодов = ""Артикул""
	|			ТОГДА Товары.Номенклатура.Артикул
	|		ИНАЧЕ Товары.Номенклатура.Код
	|	КОНЕЦ КАК НоменклатурныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Номенклатура.НаименованиеПолное КАК НоменклатураНаименование,
	|	Товары.Характеристика.НаименованиеПолное КАК ХарактеристикаНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Наименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.Номенклатура.ЕдиницаИзмерения.Код КАК ЕдиницаИзмеренияКод,
	|	Товары.Партия КАК Партия,
	|	Товары.Партия.ДатаНачалаЭксплуатации КАК ДатаПередачи,
	|	Товары.Партия.СрокЭксплуатации КАК СрокСлужбы,
	|	Товары.Партия.КатегорияЭксплуатации КАК КатегорияЭксплуатации,
	|	Товары.СтатьяРасходов КАК СтатьяРасходов,
	|	Товары.АналитикаРасходов КАК АналитикаРасходов,
	|	Товары.Количество КАК Количество
	|ПОМЕСТИТЬ Товары
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации.Товары КАК Товары
	|ГДЕ
	|	Товары.Ссылка В(&МассивДокументов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение,
	|	НомерСтроки,
	|	Ссылка,
	|	Партия,
	|	Номенклатура,
	|	Характеристика,
	|	СтатьяРасходов,
	|	АналитикаРасходов
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Организация КАК Организация,
	|	Товары.Партия КАК Партия,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))) КАК СчетУчета,
	|	ЕСТЬNULL(НастройкиПоОрганизации.ВидСчета, ЕСТЬNULL(НастройкиПоАналитике.ВидСчета, НЕОПРЕДЕЛЕНО)) = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ТМЦВЭксплуатацииЗаБалансом) КАК ЗаБаланс
	|ПОМЕСТИТЬ СчетаУчета
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоОрганизации
	|		ПО НастройкиПоОрганизации.ВидСчета В (&ВидыСчетовТМЦВЭксплуатации)
	|		И НастройкиПоОрганизации.Организация = Товары.Организация
	|		И НастройкиПоОрганизации.АналитикаУчета = Товары.КатегорияЭксплуатации
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|		ПО НастройкиПоАналитике.ВидСчета В (&ВидыСчетовТМЦВЭксплуатации)
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И НастройкиПоАналитике.АналитикаУчета = Товары.КатегорияЭксплуатации
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	СчетУчета,
	|	Номенклатура,
	|	Партия
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Партия КАК Партия,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	Товары.ЗаБаланс КАК ЗаБаланс,
	|	Хозрасчетный.Счет КАК Счет,
	|	Хозрасчетный.Счет.Забалансовый КАК Забалансовый,
	|	СУММА(Хозрасчетный.КоличествоОборотДт) КАК Передано,
	|	СУММА(Хозрасчетный.СуммаОборотДт) КАК Сумма
	|ПОМЕСТИТЬ втОбороты
	|ИЗ
	|	СчетаУчета КАК Товары
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрБухгалтерии.Хозрасчетный.Обороты() КАК Хозрасчетный
	|		ПО Товары.Организация = Хозрасчетный.Организация
	|			И Товары.СчетУчета = Хозрасчетный.Счет
	|			И Товары.Номенклатура = Хозрасчетный.Субконто1
	|			И Товары.Партия = Хозрасчетный.Субконто2
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Партия,
	|	Товары.Номенклатура,
	|	Хозрасчетный.Счет,
	|	Хозрасчетный.Счет.Забалансовый,
	|	Товары.Характеристика,
	|	Товары.ЗаБаланс,
	|	Товары.Количество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	Партия,
	|	Номенклатура,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.Партия КАК Партия,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.Характеристика КАК Характеристика,
	|	Товары.Количество КАК Количество,
	|	ЕСТЬNULL(СтоимостьБаланс.Счет, СтоимостьЗаБаланс.Счет) КАК Счет,
	|	СУММА(ЕСТЬNULL(СтоимостьБаланс.Передано, СтоимостьЗаБаланс.Передано)) КАК Передано,
	|	СУММА(ЕСТЬNULL(СтоимостьБаланс.Сумма, СтоимостьЗаБаланс.Сумма)) КАК Сумма,
	|	СтоимостьЗаБаланс.Счет КАК СчетЗаБаланс,
	|	СУММА(СтоимостьЗаБаланс.Передано) КАК ПереданоЗаБаланс,
	|	СУММА(СтоимостьЗаБаланс.Сумма) КАК СуммаЗабаланс
	|ПОМЕСТИТЬ ПервоначальнаяСтоимость
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК СтоимостьБаланс
	|		ПО Товары.Ссылка = СтоимостьБаланс.Ссылка
	|			И Товары.Партия = СтоимостьБаланс.Партия
	|			И Товары.Номенклатура = СтоимостьБаланс.Номенклатура
	|			И НЕ СтоимостьБаланс.ЗаБаланс
	|		ЛЕВОЕ СОЕДИНЕНИЕ втОбороты КАК СтоимостьЗаБаланс
	|		ПО Товары.Ссылка = СтоимостьЗаБаланс.Ссылка
	|			И Товары.Партия = СтоимостьЗаБаланс.Партия
	|			И Товары.Номенклатура = СтоимостьЗаБаланс.Номенклатура
	|			И СтоимостьЗаБаланс.ЗаБаланс
	|
	|СГРУППИРОВАТЬ ПО
	|	Товары.Ссылка,
	|	Товары.НомерСтроки,
	|	Товары.Партия,
	|	Товары.Номенклатура,
	|	СтоимостьБаланс.Счет,
	|	СтоимостьЗаБаланс.Счет,
	|	Товары.Характеристика,
	|	Товары.Количество
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Амортизация.Партия КАК Партия,
	|	Амортизация.Номенклатура КАК Номенклатура,
	|	СУММА(Амортизация.Сумма) КАК Сумма
	|ПОМЕСТИТЬ Амортизация
	|ИЗ
	|	(ВЫБРАТЬ
	|		Амортизация.Партия КАК Партия,
	|		Амортизация.Номенклатура КАК Номенклатура,
	|		Амортизация.СуммаБУ КАК Сумма
	|	ИЗ
	|		Документ.ПогашениеСтоимостиТМЦВЭксплуатации.Расходы КАК Амортизация
	|	ГДЕ
	|		Амортизация.Ссылка.Проведен
	|		И (Амортизация.Партия, Амортизация.Номенклатура) В
	|			(ВЫБРАТЬ
	|				Товары.Партия,
	|				Товары.Номенклатура
	|			ИЗ
	|				Товары КАК Товары)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Амортизация.Партия КАК Партия,
	|		Амортизация.Номенклатура КАК Номенклатура,
	|		Амортизация.ПервоначальнаяСумма - Амортизация.Сумма КАК Сумма
	|	ИЗ
	|		Документ.ВводОстатков.ТМЦВЭксплуатации КАК Амортизация
	|	ГДЕ
	|		Амортизация.Ссылка.Проведен
	|		И (Амортизация.Партия, Амортизация.Номенклатура) В
	|			(ВЫБРАТЬ
	|				Товары.Партия,
	|				Товары.Номенклатура
	|			ИЗ
	|				Товары КАК Товары)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Амортизация.Партия КАК Партия,
	|		Амортизация.Номенклатура КАК Номенклатура,
	|		Амортизация.ПервоначальнаяСумма - Амортизация.Сумма КАК Сумма
	|	ИЗ
	|		Документ.ВводОстатковТМЦВЭксплуатации.ТМЦВЭксплуатации КАК Амортизация
	|	ГДЕ
	|		Амортизация.Ссылка.Проведен
	|		И (Амортизация.Партия, Амортизация.Номенклатура) В
	|			(ВЫБРАТЬ
	|				Товары.Партия,
	|				Товары.Номенклатура
	|			ИЗ
	|				Товары КАК Товары)
	|
	|	) КАК Амортизация
	|
	|СГРУППИРОВАТЬ ПО
	|	Амортизация.Партия,
	|	Амортизация.Номенклатура
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Партия,
	|	Номенклатура
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.Организация КАК Организация,
	|	Товары.Подразделение КАК Подразделение,
	|	ЕСТЬNULL(НастройкиПоМестуУчета.СчетУчета, ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка)))) КАК СчетУчета,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ЕСТЬNULL(НастройкиПоМестуУчета.СчетУчета, ЕСТЬNULL(НастройкиПоОрганизации.СчетУчета, ЕСТЬNULL(НастройкиПоАналитике.СчетУчета, ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка))))) КАК НомерСчета
	|ИЗ
	|	Товары КАК Товары
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоМестуУчета
	|	ПО 
	|		НастройкиПоМестуУчета.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		И Товары.Организация = НастройкиПоМестуУчета.Организация
	|		И Товары.СтатьяРасходов.ГруппаФинансовогоУчетаРегл = НастройкиПоМестуУчета.АналитикаУчета
	|		И Товары.Подразделение = НастройкиПоМестуУчета.МестоУчета
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоОрганизации
	|	ПО 
	|		НастройкиПоОрганизации.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		И Товары.Организация = НастройкиПоОрганизации.Организация
	|		И Товары.СтатьяРасходов.ГруппаФинансовогоУчетаРегл = НастройкиПоОрганизации.АналитикаУчета
	|		И НастройкиПоОрганизации.МестоУчета = НЕОПРЕДЕЛЕНО
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ 
	|		РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК НастройкиПоАналитике
	|	ПО 
	|		НастройкиПоАналитике.ВидСчета = ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Расходы)
	|		И НастройкиПоАналитике.Организация = ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|		И Товары.СтатьяРасходов.ГруппаФинансовогоУчетаРегл = НастройкиПоАналитике.АналитикаУчета
	|		И НастройкиПоАналитике.МестоУчета = НЕОПРЕДЕЛЕНО
	|ИТОГИ ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Ссылка,
	|	ДанныеДокумента.Номер КАК Номер,
	|	ДанныеДокумента.Дата КАК ДатаДокумента,
	|	ДанныеДокумента.Дата КАК ДатаСоставления,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Организация) КАК ПредставлениеОрганизации,
	|	ДанныеДокумента.Организация.КодПоОКПО КАК ОрганизацияПоОКПО,
	|	ДанныеДокумента.Организация.Префикс КАК Префикс,
	|	ДанныеДокумента.Подразделение КАК Подразделение,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Подразделение) КАК ПредставлениеПодразделения,
	|	ПРЕДСТАВЛЕНИЕССЫЛКИ(ДанныеДокумента.Подразделение.ТекущийРуководитель) КАК РуководительПодразделения
	|ИЗ
	|	Документ.СписаниеИзЭксплуатации КАК ДанныеДокумента
	|ГДЕ
	|	ДанныеДокумента.Ссылка В(&МассивДокументов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаДокумента,
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Товары.Ссылка КАК Ссылка,
	|	Товары.НомерСтроки КАК НомерСтроки,
	|	Товары.НоменклатурныйНомер КАК НоменклатурныйНомер,
	|	Товары.Номенклатура КАК Номенклатура,
	|	Товары.НоменклатураНаименование КАК НоменклатураНаименование,
	|	Товары.ХарактеристикаНаименование КАК ХарактеристикаНаименование,
	|	Товары.ЕдиницаИзмеренияНаименование КАК ЕдиницаИзмеренияНаименование,
	|	Товары.ЕдиницаИзмеренияКод КАК ЕдиницаИзмеренияКод,
	|	Товары.ДатаПередачи КАК ДатаВводаВЭксплуатацию,
	|	Товары.СрокСлужбы КАК СрокСлужбы,
	|	Товары.Количество КАК Количество,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ ЕСТЬNULL(ПервоначальнаяСтоимость.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК Цена,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Количество * ЕСТЬNULL(ПервоначальнаяСтоимость.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК СуммаПервоначальнойСтоимости,
	|	ВЫБОР
	|		КОГДА ЕСТЬNULL(ПервоначальнаяСтоимость.Передано, 0) = 0
	|			ТОГДА 0
	|		ИНАЧЕ Товары.Количество * ЕСТЬNULL(Амортизация.Сумма, 0) / ПервоначальнаяСтоимость.Передано
	|	КОНЕЦ КАК СуммаПогашеннойСтоимости
	|ИЗ
	|	Товары КАК Товары
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальнаяСтоимость КАК ПервоначальнаяСтоимость
	|		ПО Товары.Ссылка = ПервоначальнаяСтоимость.Ссылка
	|			И Товары.НомерСтроки = ПервоначальнаяСтоимость.НомерСтроки
	|		ЛЕВОЕ СОЕДИНЕНИЕ Амортизация КАК Амортизация
	|		ПО Товары.Партия = Амортизация.Партия
	|			И Товары.Номенклатура = Амортизация.Номенклатура
	|
	|УПОРЯДОЧИТЬ ПО
	|	Ссылка,
	|	НомерСтроки
	|ИТОГИ
	|	СУММА(Количество),
	|	СУММА(СуммаПервоначальнойСтоимости),
	|	СУММА(СуммаПогашеннойСтоимости)
	|ПО
	|	Ссылка";
	#КонецОбласти
	
	Запрос = Новый Запрос(ТекстЗапроса);
	
	КолонкаКодов = ФормированиеПечатныхФорм.ДополнительнаяКолонкаПечатныхФормДокументов().ИмяКолонки;
	Если Не ЗначениеЗаполнено(КолонкаКодов) Тогда
		КолонкаКодов = "Код";
	КонецЕсли;
	Запрос.УстановитьПараметр("КолонкаКодов",                    КолонкаКодов);
	Запрос.УстановитьПараметр("МассивДокументов", МассивДокументов);
	Запрос.УстановитьПараметр("ВидыСчетовТМЦВЭксплуатации", РегистрыСведений.СчетаРеглУчетаТребующиеНастройки.НастраиваемыеВидыСчетов("ТМЦВЭксплуатации"));
	
	РезультатПакетаЗапросов = Запрос.ВыполнитьПакет();
	// Пакет запросов:
	// 		[0] - Выборка по табличным частям документов со всеми вспомогательными реквизитами
	// 		[1] - Уточнение счета учета по организации
	// 		[2] - ВСЕ счета учета
	// 		[3] - Обороты счета
	// 		[4] - Первоначальная стоимость
	// 		[5] - Амортизация
	// 		[6] - Выборка счетов учета расходов (Корр. счета)
	// 		[7] - Выборка шапкам документов
	// 		[8] - Результирующая выборка по товарам
	
	Возврат Новый Структура(
		"КоррСчета, РезультатПоШапке, РезультатПоТабличнойЧасти",
		РезультатПакетаЗапросов[5],
		РезультатПакетаЗапросов[6],
		РезультатПакетаЗапросов[7]);
	
КонецФункции

Функция ПечатьМБ8(МассивОбъектов, ОбъектыПечати, ПараметрыПечати)
	
	УстановитьПривилегированныйРежим(Истина);
	
	ШаблонОшибкиПустойТЧ = НСтр("ru = 'В документе %1 отсутствуют товары. Печать МБ-8 не требуется';
								|en = 'No goods in the %1 document. MB-8 print is not required'");
	
	ТабличныйДокумент = Новый ТабличныйДокумент;
	ТабличныйДокумент.АвтоМасштаб = Истина;
	ТабличныйДокумент.ОриентацияСтраницы = ОриентацияСтраницы.Ландшафт;
	ТабличныйДокумент.ИмяПараметровПечати = "ПАРАМЕТРЫ_ПЕЧАТИ_СписаниеИзЭксплуатации_МБ8";
	
	Макет = УправлениеПечатью.МакетПечатнойФормы("Документ.СписаниеИзЭксплуатации.ПФ_MXL_МБ8");
	ОбластьШапка = Макет.ПолучитьОбласть("Шапка");
	ОбластьЗаголовокТаблицы = Макет.ПолучитьОбласть("ЗаголовокТаблицы");
	ОбластьСтрокаТаблицы = Макет.ПолучитьОбласть("Строка");
	ОбластьПустаяСтрокаТаблицы = Макет.ПолучитьОбласть("ПустаяСтрока");
	ОбластьПоследняяСтрокаТаблицы = Макет.ПолучитьОбласть("ПоследняяСтрока");
	ОбластьИтого = Макет.ПолучитьОбласть("Итого");
	ОбластьПодвал = Макет.ПолучитьОбласть("Подвал");
	
	ДанныеДляПечатнойФормы = ПолучитьДанныеДляПечатнойФормыМБ8(МассивОбъектов);
	КоррСчетаПоДокументам = ДанныеДляПечатнойФормы.КоррСчета.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	ВыборкаДокументы = ДанныеДляПечатнойФормы.РезультатПоШапке.Выбрать();
	ВыборкаСтрокиПоДокументам = ДанныеДляПечатнойФормы.РезультатПоТабличнойЧасти.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	ПервыйДокумент = Истина;
	
	Пока ВыборкаДокументы.Следующий() Цикл
		
		Если ПервыйДокумент Тогда
			ПервыйДокумент = Ложь;
		Иначе
			ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		КонецЕсли;
		НомерСтрокиНачало = ТабличныйДокумент.ВысотаТаблицы + 1;
		
		ОтборПоДокументу = Новый Структура("Ссылка", ВыборкаДокументы.Ссылка);
		
		КоррСчетаПоДокументам.Сбросить();
		КоррСчета = Новый Массив;
		Если КоррСчетаПоДокументам.НайтиСледующий(ОтборПоДокументу) Тогда
			ВыборкаКоррСчета = КоррСчетаПоДокументам.Выбрать();
			Пока ВыборкаКоррСчета.Следующий() Цикл
				КоррСчета.Добавить(ВыборкаКоррСчета.НомерСчета);
			КонецЦикла;
		КонецЕсли;
		КоррСчет = СтрСоединить(КоррСчета,",");
		
		ВыборкаСтрокиПоДокументам.Сбросить();
		Если Не ВыборкаСтрокиПоДокументам.НайтиСледующий(ОтборПоДокументу) Тогда
			
			ОбщегоНазначения.СообщитьПользователю(
				СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
					ШаблонОшибкиПустойТЧ,
					ВыборкаДокументы.Ссылка),
				ВыборкаДокументы.Ссылка);
			
			Продолжить;
			
		КонецЕсли;
		
		ОбластьШапка.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьШапка.Параметры.НомерДокумента = ПрефиксацияОбъектовКлиентСервер.НомерНаПечать(ВыборкаДокументы.Номер);
		ОбластьШапка.Параметры.ПредставлениеОрганизации = ФормированиеПечатныхФорм.ОписаниеОрганизации(
			ФормированиеПечатныхФорм.СведенияОЮрФизЛице(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента));
		ОбластьШапка.Параметры.Счет = КоррСчет;
		
		ОтветственныеЛица = ОтветственныеЛицаСервер.ПолучитьОтветственныеЛицаОрганизации(ВыборкаДокументы.Организация, ВыборкаДокументы.ДатаДокумента);
		ОбластьШапка.Параметры.РасшифровкаПодписиРуководителя = ОтветственныеЛица.РуководительНаименование;
		ОбластьШапка.Параметры.ДолжностьРуководителя = ОтветственныеЛица.РуководительДолжность;
		ОбластьШапка.Параметры.ПредставлениеГода = Формат(ВыборкаДокументы.ДатаДокумента, "ДФ=yyyy");
		ТабличныйДокумент.Вывести(ОбластьШапка);
		
		ТабличныйДокумент.Вывести(ОбластьЗаголовокТаблицы);
		
		ВыборкаСтроки = ВыборкаСтрокиПоДокументам.Выбрать();
		Пока ВыборкаСтроки.Следующий() Цикл
			
			ОбластьСтрокаТаблицы.Параметры.Заполнить(ВыборкаСтроки);
			Если ЗначениеЗаполнено(ВыборкаСтроки.ХарактеристикаНаименование) Тогда
				НоменклатураНаименование = СтрШаблон("%1 (%2)",ВыборкаСтроки.НоменклатураНаименование,ВыборкаСтроки.ХарактеристикаНаименование);
				ОбластьСтрокаТаблицы.Параметры.НоменклатураНаименование = НоменклатураНаименование;
			КонецЕсли;
			ТабличныйДокумент.Вывести(ОбластьСтрокаТаблицы);
			
		КонецЦикла;
		ТабличныйДокумент.Вывести(ОбластьПоследняяСтрокаТаблицы);
		
		ОбластьИтого.Параметры.Заполнить(ВыборкаДокументы);
		ОбластьИтого.Параметры.КоличествоПорядковыхНомеровЗаписейПрописью = ЧислоПрописью(ВыборкаСтрокиПоДокументам.Количество,"Л=ru_RU",",,,,,,,,0");
		ОбластьИтого.Параметры.ИтогоСуммаПервоначальнойСтоимости = ВыборкаСтрокиПоДокументам.СуммаПервоначальнойСтоимости;
		ОбластьИтого.Параметры.ИтогоСуммаПогашеннойСтоимости = ВыборкаСтрокиПоДокументам.СуммаПогашеннойСтоимости;
		ТабличныйДокумент.Вывести(ОбластьИтого);
		
		ТабличныйДокумент.ВывестиГоризонтальныйРазделительСтраниц();
		ОбластьПодвал.Параметры.ПредставлениеГода = Формат(ВыборкаДокументы.ДатаДокумента, "ДФ=yyyy");
		ТабличныйДокумент.Вывести(ОбластьПодвал);
		
		УправлениеПечатью.ЗадатьОбластьПечатиДокумента(ТабличныйДокумент, НомерСтрокиНачало, ОбъектыПечати, ВыборкаДокументы.Ссылка);
		
	КонецЦикла;
	
	Возврат ТабличныйДокумент;
	
КонецФункции

//-- Локализация

#КонецОбласти

#Область Форма

Процедура НастроитьЗависимыеЭлементыФормы(Форма, ИзмененныеРеквизиты) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	СтруктураИзмененныхРеквизитов = Новый Структура(ИзмененныеРеквизиты);
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;

	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
			
		СтоимостьСписана = ТМЦВЭксплуатацииПовтИсп.СтоимостьТМЦВЭксплуатацииСписана(Объект.Организация, НачалоМесяца(Объект.Дата));

		Элементы.ТоварыСтатьяРасходов.Видимость = НЕ СтоимостьСписана; 
		Элементы.ТоварыАналитикаРасходов.Видимость = НЕ СтоимостьСписана; 
		
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
