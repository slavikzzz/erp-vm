
#Область СлужебныйПрограммныйИнтерфейс

// Получает набор внешних данных по имени объекта.
// Параметры:
//	ИмяОбъекта - Строка - Идентификатор данных которые требуется получить.
// Возвращаемое значение
//	ТаблицаЗначений, Неопределено - Набор данных в виде таблицы, если для запрашиваемого объекта нет данных возвращает неопределено.
//
Функция ВнешниеДанные(ИмяОбъекта, МакетКомпоновки) Экспорт
	
	Если ИмяОбъекта = "БуквенныеКодыРазделовОКВЭД2" Тогда
		// В схеме компоновки данных Перечисления.ИсточникиДанныхСтатистическихПоказателей.Макеты.ОсновнойВидДеятельности.
		Возврат ОрганизацииЛокализация.БуквенныеКодыРазделовОКВЭД2();
	ИначеЕсли ИмяОбъекта = "ЗадолженностьПокупателейПросроченнаяERP" Тогда
		// В схеме компоновки данных Перечисления.ИсточникиДанныхСтатистическихПоказателей.Макеты.ОборотныеАктивы.
		Возврат ЗаполнениеФормСтатистикиПереопределяемый.ЗадолженностьПокупателейПросроченная(МакетКомпоновки);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
КонецФункции

// Возвращает список форм статистики для которых может быть выполнена настройка заполнения
// и которые встречаются в настройках списка налогов и отчетов переданной организации.
// Параметры:
//	Организация - СправочникСсылка.Организации - Организация для которой нужно найти формы.
// Возвращаемое значение:
// ТаблицаЗначений:
//	* Форма- СправочникСсылка.ФормыСтатистики - Форма статистики.
//	* Организация - СправочникСсылка.Организации - Организация.
//
Функция НастраиваемыеФормыСтатистикиПредоставляемыеОрганизацией(Организация) Экспорт

	Результат = Новый ТаблицаЗначений; // Ссылки на формы.
	Результат.Колонки.Добавить("Форма", 		Новый ОписаниеТипов("СправочникСсылка.ФормыСтатистики"));
	Результат.Колонки.Добавить("Организация", 	Новый ОписаниеТипов("СправочникСсылка.Организации"));
	
	Возврат Результат;
	
КонецФункции

// Заполняет показатели выручки предпринимателя.
// Параметры:
//	Показатели - ТаблицаЗначений - Коллекция показателей формы статистики с необходимыми настройками, подробнее см. НовыйОписаниеПоказателей().
//	Формулы - ТаблицаЗначений - Коллекция показателей формы статистики для которых указан дополнительный алгоритм, подробнее см. НовыйОписаниеПоказателей().
//
Процедура ВыручкаПредпринимателя(Показатели, Формулы) Экспорт

КонецПроцедуры

// Заполняет показатели численности персонала.
// Параметры:
//	Показатели - ТаблицаЗначений - Коллекция показателей формы статистики с необходимыми настройками, подробнее см. НовыйОписаниеПоказателей().
//	Формула - ТаблицаЗначений - Коллекция показателей формы статистики для которых указан дополнительный алгоритм, подробнее см. НовыйОписаниеПоказателей().
//	ПараметрыОтчета - Структура - структура параметров отчета.
//
Процедура ЧисленностьПерсонала(Показатели, Формула, ПараметрыОтчета) Экспорт

		Если Формула.ДополнительныйАлгоритм 
		<> Перечисления.ДополнительныеАлгоритмыЗаполненияФормСтатистики.ЧисленностьПерсонала Тогда
		Возврат;
	КонецЕсли;

	СведенияОЧисленности = КадровыйУчет.СреднесписочнаяЧисленностьРаботающих(
	ПараметрыОтчета.Организация, Формула.НачалоПериода, Формула.КонецПериода);

	Отбор =	Новый Структура;
	Отбор.Вставить("ДополнительныйАлгоритм", Перечисления.ДополнительныеАлгоритмыЗаполненияФормСтатистики.ЧисленностьПерсонала);
	Отбор.Вставить("НачалоПериода", Формула.НачалоПериода); 
	Отбор.Вставить("КонецПериода",  Формула.КонецПериода);
	
	ПоказателиЧисленности = Показатели.НайтиСтроки(Отбор);       
	
	Для Каждого Показатель Из ПоказателиЧисленности Цикл    
		Если Показатель.Характеристика = "СреднесписочнаяЧисленность" Тогда   
			Характеристика = "СреднесписочнаяЧисленностьРаботников";
		ИначеЕсли Показатель.Характеристика = "СреднесписочнаяЧисленностьСовместители" Тогда
			Характеристика = "СреднесписочнаяЧисленностьВнешнихСовместителей";
		Иначе
			Характеристика = Показатель.Характеристика; 
		КонецЕсли;	
		Если СведенияОЧисленности.Свойство(Характеристика) Тогда
			Показатель.Значение = СведенияОЧисленности[Характеристика]; 
		КонецЕсли;	
	КонецЦикла;

КонецПроцедуры

// Выполняет поиск единицы измерения в классификаторе единиц измерения.
//
// Параметры:
//	КодЕдиницыИзмерения - Строка - код единицы измерения по ОКЕИ.
//	НаименованиеЕдиницыИзмерения - Строка - Наименование единицы измерения.
//
// Возвращаемое значение:
// СправочникСсылка.УпаковкиЕдиницыИзмерения, Неопределено - если поиск и попытка добавления элемента не дали результатов то неопределено.
//
Функция ЕдиницаИзмеренияПоКоду(КодЕдиницыИзмерения, НаименованиеЕдиницыИзмерения) Экспорт

	Результат = Справочники.УпаковкиЕдиницыИзмерения.НайтиПоКоду(КодЕдиницыИзмерения);

	Если НЕ ЗначениеЗаполнено(Результат) Тогда
		// Еще нет такой единицы измерения, создадим.
		СозданныеЕдиницыИзмерения = Справочники.УпаковкиЕдиницыИзмерения.ЗаполнитьЕдиницыИзмеренияИзКлассификатора(КодЕдиницыИзмерения, Истина);
		Результат = СозданныеЕдиницыИзмерения[КодЕдиницыИзмерения];
	КонецЕсли;

	Возврат Результат;

КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция ЗадолженностьПокупателейПросроченная(МакетКомпоновки) Экспорт
	
	Организации = МакетКомпоновки.ЗначенияПараметров.Организация.Значение;
	Данные = Новый ТаблицаЗначений;
	
	Для Каждого Организация Из Организации Цикл
		
		ПараметрыЗаполнения = Новый Структура;
		ПараметрыЗаполнения.Вставить("Организация", Организация.Значение);
		ПараметрыЗаполнения.Вставить("Дата", МакетКомпоновки.ЗначенияПараметров.КонецПериода.Значение);
		ПараметрыЗаполнения.Вставить("ПустойДокумент", Истина);
		
		Результат = Документы.НачислениеСписаниеРезервовПоСомнительнымДолгам.ПолучитьДанныеДляЗаполненияДебиторскойЗадолженности(ПараметрыЗаполнения);
		ДанныеЗадолженности = Результат.Выгрузить();
		ДанныеЗадолженности.Колонки.Добавить("Организация", Новый ОписаниеТипов("СправочникСсылка.Организации"));
		ДанныеЗадолженности.ЗаполнитьЗначения(Организация.Значение, "Организация");
		
		Если Данные.Количество() = 0 Тогда
			Данные = ДанныеЗадолженности;
		Иначе
			ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(ДанныеЗадолженности, Данные);
		КонецЕсли;
		
	КонецЦикла;
	
	СчетаОтбор = Новый СписокЗначений;
	ПолеОтбора = Новый ПолеКомпоновкиДанных("Отбор.ЗадолженностьПокупателей");
	НастройкиОтбора = Перечисления.ИсточникиДанныхСтатистическихПоказателей.ПолучитьМакет("ОборотныеАктивы").НастройкиПоУмолчанию.Отбор;
	Для Каждого Отбор Из НастройкиОтбора.Элементы Цикл
		Если Отбор.ЛевоеЗначение = ПолеОтбора Тогда
			СчетаОтбор = Отбор.ПравоеЗначение;
			Прервать;
		КонецЕсли;
	КонецЦикла;

	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТаблицаДанные", Данные);
	Запрос.УстановитьПараметр("СчетаОтбор", СчетаОтбор);
	Запрос.УстановитьПараметр("Организация", МакетКомпоновки.ЗначенияПараметров.Организация.Значение);
	Запрос.УстановитьПараметр("КонецПериода", МакетКомпоновки.ЗначенияПараметров.КонецПериода.Значение);
	Запрос.УстановитьПараметр("ВидыСубконтоКонтрагентИДоговор",МакетКомпоновки.ЗначенияПараметров.ВидыСубконтоКонтрагентИДоговор.Значение);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ТаблицаДанные.Организация КАК Организация,
	|	ТаблицаДанные.Партнер КАК Партнер,
	|	ТаблицаДанные.Контрагент КАК Контрагент,
	|	ТаблицаДанные.Договор КАК Договор,
	|	ТаблицаДанные.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	ТаблицаДанные.ОбъектРасчетов КАК ОбъектРасчетов,
	|	ТаблицаДанные.РасчетныйДокумент КАК РасчетныйДокумент,
	|	ТаблицаДанные.ТипСуммы КАК ТипСуммы,
	|	ТаблицаДанные.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
	|	ТаблицаДанные.СуммаЗадолженностиРегл КАК СуммаЗадолженностиРегл,
	|	ТаблицаДанные.СуммаЗадолженности КАК СуммаЗадолженности,
	|	ТаблицаДанные.Валюта КАК Валюта,
	|	ТаблицаДанные.СуммаОбеспеченияПоАналитике КАК СуммаОбеспеченияПоАналитике,
	|	ТаблицаДанные.Оценка КАК Оценка,
	|	ТаблицаДанные.РезервБУ КАК РезервБУ,
	|	ТаблицаДанные.Резерв КАК Резерв,
	|	ТаблицаДанные.ВидЗадолженности КАК ВидЗадолженности,
	|	ТаблицаДанные.НеНачислять КАК НеНачислять,
	|	ТаблицаДанные.РучнаяКорректировка КАК РучнаяКорректировка,
	|	ТаблицаДанные.НужнаПроверка КАК НужнаПроверка
	|ПОМЕСТИТЬ ВтДанные
	|ИЗ
	|	&ТаблицаДанные КАК ТаблицаДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВтДанные.Организация КАК Организация,
	|	ЕСТЬNULL(ВтДанные.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(ВтДанные.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор,
	|	ВтДанные.ДатаВозникновенияЗадолженности КАК ДатаВозникновенияЗадолженности,
	|	ВтДанные.СуммаЗадолженностиРегл КАК СуммаЗадолженности
	|ПОМЕСТИТЬ втЗадолженностьПокупателейПросроченная
	|ИЗ
	|	ВтДанные КАК ВтДанные
	|ГДЕ
	|	ВтДанные.РучнаяКорректировка = ЛОЖЬ
	|	И ВтДанные.ВидЗадолженности В (ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.ЗадолженностьКонтрагентовРегл),
	|									ЗНАЧЕНИЕ(Перечисление.ВидыЗадолженности.ЗадолженностьКонтрагентовВал))
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВтДанные
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Хозрасчетный.Ссылка КАК Счет
	|ПОМЕСТИТЬ ВТ_Счета
	|ИЗ
	|	ПланСчетов.Хозрасчетный КАК Хозрасчетный
	|ГДЕ
	|	Хозрасчетный.Ссылка В(&СчетаОтбор)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПокупателейПоДоговорам.Счет КАК Счет,
	|	ЗадолженностьПокупателейПоДоговорам.Организация КАК Организация,
	|	ЕСТЬNULL(ЗадолженностьПокупателейПоДоговорам.Контрагент, ЗНАЧЕНИЕ(Справочник.Контрагенты.ПустаяСсылка)) КАК Контрагент,
	|	ЕСТЬNULL(ЗадолженностьПокупателейПоДоговорам.Договор, ЗНАЧЕНИЕ(Справочник.ДоговорыКонтрагентов.ПустаяСсылка)) КАК Договор
	|ПОМЕСТИТЬ ДоговорыПоКоторымЕстьЗадолженностьПокупателей
	|ИЗ
	|	(ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЗадолженностьПокупателей.Счет КАК Счет,
	|		ЗадолженностьПокупателей.Организация КАК Организация,
	|		ВЫРАЗИТЬ(ЗадолженностьПокупателей.Субконто1 КАК Справочник.Контрагенты) КАК Контрагент,
	|		ВЫРАЗИТЬ(ЗадолженностьПокупателей.Субконто2 КАК Справочник.ДоговорыКонтрагентов) КАК Договор
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Остатки(
	|				&КонецПериода,
	|				Счет В
	|					(ВЫБРАТЬ
	|						ВТ_Счета.Счет
	|					ИЗ
	|						ВТ_Счета КАК ВТ_Счета),
	|				&ВидыСубконтоКонтрагентИДоговор,
	|				Организация В (&Организация)) КАК ЗадолженностьПокупателей
	|	ГДЕ
	|		ЗадолженностьПокупателей.СуммаРазвернутыйОстатокДт > 0) КАК ЗадолженностьПокупателейПоДоговорам
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Контрагент,
	|	Договор,
	|	Счет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗадолженностьПокупателей.Счет КАК Счет,
	|	ЗадолженностьПокупателей.Организация КАК Организация,
	|	ЗадолженностьПокупателей.Контрагент КАК Контрагент,
	|	ЗадолженностьПокупателей.Договор КАК Договор,
	|	ДОБАВИТЬКДАТЕ(ЗадолженностьПокупателейПросроченная.ДатаВозникновенияЗадолженности, ДЕНЬ, ВЫБОР
	|			КОГДА ДоговорыКонтрагентов.УстановленСрокОплаты
	|				ТОГДА ДоговорыКонтрагентов.СрокОплаты
	|			ИНАЧЕ 30
	|		КОНЕЦ) КАК СрокОплаты,
	|	ЗадолженностьПокупателейПросроченная.СуммаЗадолженности КАК Сумма
	|ПОМЕСТИТЬ ДебиторскаяЗадолженностьПоСрокамОплаты
	|ИЗ
	|	ДоговорыПоКоторымЕстьЗадолженностьПокупателей КАК ЗадолженностьПокупателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втЗадолженностьПокупателейПросроченная КАК ЗадолженностьПокупателейПросроченная
	|		ПО ЗадолженностьПокупателей.Организация = ЗадолженностьПокупателейПросроченная.Организация
	|			И ЗадолженностьПокупателей.Контрагент = ЗадолженностьПокупателейПросроченная.Контрагент
	|			И ЗадолженностьПокупателей.Договор = ЗадолженностьПокупателейПросроченная.Договор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ДоговорыКонтрагентов КАК ДоговорыКонтрагентов
	|		ПО ЗадолженностьПокупателей.Договор = ДоговорыКонтрагентов.Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДебиторскаяЗадолженность.Счет КАК Счет,
	|	ДебиторскаяЗадолженность.Контрагент КАК Контрагент,
	|	ДебиторскаяЗадолженность.Договор КАК Договор,
	|	СУММА(ДебиторскаяЗадолженность.Сумма) КАК Сумма
	|ИЗ
	|	ДебиторскаяЗадолженностьПоСрокамОплаты КАК ДебиторскаяЗадолженность
	|ГДЕ
	|	ДебиторскаяЗадолженность.СрокОплаты < &КонецПериода
	|
	|СГРУППИРОВАТЬ ПО
	|	ДебиторскаяЗадолженность.Счет,
	|	ДебиторскаяЗадолженность.Контрагент,
	|	ДебиторскаяЗадолженность.Договор";
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

#КонецОбласти
