#Область ПрограммныйИнтерфейс

// Возвращает дату начала применения единого налогового счета
// 
// Возвращаемое значение:
//	Дата - Дата начала использования ЕНС
//
Функция ДатаНачалаПрименения() Экспорт
	
	Возврат '20230101';
	
КонецФункции

Функция РеквизитыМИДол() Экспорт
	
	// Реквизиты получателя единого налогового платежа едины для всех.
	// Поэтому зададим их в явном виде.
	
	Реквизиты = Новый Структура;
	Реквизиты.Вставить("Ссылка");
	Реквизиты.Вставить("Код", "9967");
	Реквизиты.Вставить("ИНН", "7727406020");
	Реквизиты.Вставить("КПП", "770801001");
	Реквизиты.Вставить("Наименование",
		НСтр("ru = 'МИ ФНС России по управлению долгом';
			|en = 'Interregional Inspection of the FTS of Russia for debt management'"));
	Реквизиты.Вставить("ПолноеНаименование",
		НСтр("ru = 'Межрегиональная инспекция Федеральной налоговой службы по управлению долгом';
			|en = 'Interregional Inspection of the Federal Tax Service for debt management'"));
	
	Реквизиты.Вставить("ПлатежныеРеквизиты", ЗначенияРеквизитовЕдиногоНалоговогоСчета());
	
	Реквизиты.ПлатежныеРеквизиты.Вставить("Банк");
	Реквизиты.ПлатежныеРеквизиты.Вставить("БанковскийСчет");
	Реквизиты.ПлатежныеРеквизиты.Вставить("ПолучательПлатежа",
		НСтр("ru = 'Казначейство России (ФНС России)';
			|en = 'Russian Treasury (Federal Tax Service of the Russian Federation)'"));
	
	Возврат Реквизиты;
	
КонецФункции

Функция ЭтоРеквизитыЕдиногоНалоговогоСчета(ПлатежныеРеквизиты) Экспорт
	
	Если Не ЗначениеЗаполнено(ПлатежныеРеквизиты) Или ТипЗнч(ПлатежныеРеквизиты) <> Тип("Структура") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	РеквизитыЕНС = ЗначенияРеквизитовЕдиногоНалоговогоСчета();
	КлючиДляПроверки = Новый Структура("БИК, РасчетныйСчет, КоррСчет");
	
	Для Каждого КлючИЗначение Из КлючиДляПроверки Цикл
		Если Не ПлатежныеРеквизиты.Свойство(КлючИЗначение.Ключ)
			Или РеквизитыЕНС[КлючИЗначение.Ключ] <> ПлатежныеРеквизиты[КлючИЗначение.Ключ] Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

//++ НЕ УТ

Функция ОбслуживаемыеСчетаУчета(Знач Период = '00010101') Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	ИначеЕсли Период < ДатаНачалаПрименения() Тогда
		Период = ДатаНачалаПрименения();
	КонецЕсли;
	
	Период = НачалоМесяца(Период);
	
	СчетаУчета = ЕдиныйНалоговыйСчетПовтИсп.ОбслуживаемыеСчетаУчетаНалогов();
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СчетаУчета,
		ЕдиныйНалоговыйСчетПовтИсп.ОбслуживаемыеСчетаУчетаСтраховыхВзносов(Период));
	
	Возврат СчетаУчета;
	
КонецФункции

Функция ТекстЗапросаВтТипыНалоговВФонды(Запрос, ТекстыЗапроса) Экспорт
	
	ИмяВременнойТаблицы = "ВтТипыНалоговВФонды";
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРНакопительнаяЧасть) КАК ТипНалога,
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРНакопительная) КАК ВидСтрахования
	|ПОМЕСТИТЬ ВтТипыНалоговВФонды
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРДополнительныйТарифЛЭ),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ДоплатаКПенсииЛетчикам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРДополнительныйТарифШахтеры),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ДоплатаКПенсииШахтерам)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРЗаЗанятыхНаПодземныхИВредныхРаботах)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРЗаЗанятыхНаТяжелыхИПрочихРаботах)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ПФРПоСуммарномуТарифу),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ПФРПоСуммарномуТарифу)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФФОМС),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФФОМС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ТФОМС),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ТФОМС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФСС),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФСС)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(Перечисление.ТипыНалогов.ФССНС),
	|	ЗНАЧЕНИЕ(Перечисление.ВидыОбязательногоСтрахованияСотрудников.ФССНесчастныеСлучаи)";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяВременнойТаблицы);
	
	Возврат ТекстЗапроса;
	
КонецФункции

Процедура ЗачетАвансаПоЕдиномуНалоговомуСчету(ПараметрыПроведения, МенеджерВременныхТаблиц = Неопределено, Движения, Отказ) Экспорт
	
	Параметры = ПодготовитьПараметрыЗачетаАвансаПоЕдиномуНалоговомуСчету(ПараметрыПроведения.ТаблицаРеквизиты);
	
	Реквизиты = Параметры.Реквизиты[0];
	
	ТаблицаОстатковНаЕдиномНалоговомСчете = ТаблицаОстатковНаЕдиномНалоговомСчете(Реквизиты.Организация, Реквизиты.Период);
	
	РаспределитьВозвратыНалоговПоОплатам(ТаблицаОстатковНаЕдиномНалоговомСчете, Параметры.Реквизиты, Движения);
	
	РаспределитьОплатуПоОстаткамРасчетов565ФЗ(ТаблицаОстатковНаЕдиномНалоговомСчете, Параметры.Реквизиты, Движения, Отказ);
	
	ЗачетНалогов = Движения.РасчетыПоНалогамНаЕдиномНалоговомСчете.Выгрузить();
	
	Если ЗачетНалогов.Итог("Сумма") = 0 Тогда
		Возврат;
	КонецЕсли;
	
	// Передача в БЗК
	
	Запрос = Новый Запрос();
	Если МенеджерВременныхТаблиц = Неопределено Тогда
		МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	КонецЕсли; 
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Параметры.Вставить("ЗачетНалогов", ЗачетНалогов);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Т.Регистратор КАК Ссылка,
	|	Т.Налог КАК ТипНалога,
	|	Т.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	Т.РегистрацияВНалоговомОргане КАК Субконто1,
	|	Т.РегистрацияВНалоговомОргане КАК Субконто2,
	|	Т.РегистрацияВНалоговомОргане КАК Субконто3,
	|	Т.Сумма КАК Сумма
	|ПОМЕСТИТЬ втУплатаНалогов
	|ИЗ
	|	&ЗачетНалогов КАК Т
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ТипНалога";
	
	Запрос.Выполнить();
	
КонецПроцедуры

// Проверяет можно ли для данного налога использовать отрицательную сумму в уведомлении
//
// Параметры:
//  ТипНалога - ПеречислениеСсылка.ТипыНалогов - проверяемый налог
// 
// Возвращаемое значение:
//  Булево - Истина, если можно
//
Функция МожноИспользоватьОтрицательнуюСуммуВУведомлении(ТипНалога) Экспорт
	Возврат ТипНалога = ПредопределенноеЗначение("Перечисление.ТипыНалогов.УСН_ДоходыМинусРасходы")
		Или ТипНалога = ПредопределенноеЗначение("Перечисление.ТипыНалогов.УСН_Доходы")
		Или ТипНалога = ПредопределенноеЗначение("Перечисление.ТипыНалогов.НДФЛ_ИП")
		Или ТипНалога = ПредопределенноеЗначение("Перечисление.ТипыНалогов.ЕСХН");
КонецФункции

Функция КБКПоТипамНалогов(Знач Период = '00010101') Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	КонецЕсли;
	
	Период = НачалоГода(Период);
	
	Возврат ЕдиныйНалоговыйСчетПовтИсп.КБКПоТипамНалогов(Период);
	
КонецФункции

// Функция возвращает таблицу зачета налогов за заданный период.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - Организация для получения остатков
//  ДатаНачала - Дата - начала осмотра.
//  ДатаОкончания - Дата - окончания осмотра.
//  ВидыНалогов - Массив из ПеречислениеСсылка.ВидыНалогов, СправочникСсылка.ВидыНалоговВзносов, Неопределено. - 
//  ПоВсейОрганизации - Булево - признак возврата данных по всей организации с ОП.
// 
// Возвращаемое значение:
//  ТаблицаЗначений - Зачтенные уплаты налогов за период
// Таблица значений
// * Организация                 - СправочникСсылка.Организации - 
// * РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
// * ВидНалога                   - СправочникСсылка.ВидыНалоговВзносов -
// * Сумма                       - Число - Сумма оборота по ЕНС.
Функция ЗачтенныеУплатыНалоговЗаПериод(Организация, ДатаНачала, ДатаОкончания, ВидыНалогов = Неопределено, ПоВсейОрганизации = Ложь) Экспорт
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация КАК Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог КАК ВидНалога,
	|	СУММА(РасчетыПоНалогамНаЕдиномНалоговомСчете.Сумма) КАК Сумма
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете КАК РасчетыПоНалогамНаЕдиномНалоговомСчете

	|ГДЕ
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Период МЕЖДУ &ДатаНачала И &ДатаОкончания
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.ВидДвижения = &ВидДвижения
	|	И &УсловиеВидыНалога
	|	И &УсловиеОрганизация
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог";
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация", БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Организация));
	Запрос.УстановитьПараметр("Организация",         Организация);
	Запрос.УстановитьПараметр("ДатаНачала",          НачалоДня(ДатаНачала));
	Запрос.УстановитьПараметр("ДатаОкончания",       КонецДня(ДатаОкончания));
	Запрос.УстановитьПараметр("ВидДвижения",         ВидДвиженияНакопления.Расход);
	Запрос.УстановитьПараметр("ВидыНалогов",         ВидыНалогов);

	ОсновнаяРегистрацияВНалоговомОргане = Справочники.Организации.РегистрацияВНалоговомОргане(Организация, ДатаОкончания);
	Запрос.УстановитьПараметр("ОсновнаяРегистрацияВНалоговомОргане", ОсновнаяРегистрацияВНалоговомОргане);
	
	Если ЗначениеЗаполнено(ВидыНалогов) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидыНалога", "РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В(&ВидыНалогов)");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеВидыНалога", "Истина");
	КонецЕсли;
	Если ПоВсейОрганизации Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "Истина");
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&УсловиеОрганизация", "РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация = &Организация");
	КонецЕсли;
	Запрос.Текст = ТекстЗапроса;
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

//-- НЕ УТ

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ЗначенияРеквизитовЕдиногоНалоговогоСчета() Экспорт
	
	// Реквизиты единого налогового счета едины для всех.
	// Поэтому зададим их в явном виде.
	
	Реквизиты = Новый Структура();
	
	Реквизиты.Вставить("БИК",           "017003983");
	Реквизиты.Вставить("РасчетныйСчет", "03100643000000018500");
	Реквизиты.Вставить("КоррСчет",      "40102810445370000059");
	Реквизиты.Вставить("НаименованиеБанка",
		НСтр("ru = 'ОТДЕЛЕНИЕ ТУЛА БАНКА РОССИИ//УФК по Тульской области г. Тула';
			|en = 'TULA BRANCH OF THE BANK OF RUSSIA//Federal Treasury Department of the Tula region, Tula'"));
	Реквизиты.Вставить("ТекстКорреспондента", "");
	
	Возврат Реквизиты;
	
КонецФункции

Функция ВидыНалоговУплачиваемыеОтдельно(Знач Период = '00010101') Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	ИначеЕсли Период < ДатаНачалаПрименения() Тогда
		Период = ДатаНачалаПрименения();
	КонецЕсли;
	
	Период = НачалоМесяца(Период);
	
	Возврат ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговУплачиваемыеОтдельно(Период);
	
КонецФункции

//++ НЕ УТ

Функция ВидыНалоговУплачиваемыеБезУведомлений() Экспорт
	
	Возврат ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговУплачиваемыеБезУведомлений();
	
КонецФункции

Функция ВидыНалоговУстаревшие(Знач Период = '00010101') Экспорт
	
	Если Не ЗначениеЗаполнено(Период) Тогда
		Период = ТекущаяДатаСеанса();
	ИначеЕсли Период < ДатаНачалаПрименения() Тогда
		Период = ДатаНачалаПрименения();
	КонецЕсли;
	
	Период = НачалоМесяца(Период);
	
	Возврат ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговУстаревшие(Период);
	
КонецФункции

// Возвращает дату изменения алгоритма
// 
// Возвращаемое значение:
//	Дата - Дата смены алгоритма
//
Функция ДатаСменыАлгоритмаЗачетаУплат() Экспорт
	
	// Дата не формализована нормативными документами - так фактически было реализовано на стороне ФНС
	Возврат Дата(2022,09,09);
	
КонецФункции

// Функция возвращает дату изменения последовательности уплаты налогов
// Возвращаемое значение:
//  Дата смены алгоритма - Дата
Функция ДатаСменыПоследовательностиЗачетаУплат() Экспорт
	
	// Дата по 196-ФЗ от 29.05.2023 г.
	Возврат Дата(2023,05,29);
	
КонецФункции

// Функция возвращает дату изменения последовательности уплаты налогов при подачи уведомления
// Возвращаемое значение:
//  Дата смены алгоритма - Дата
Функция ДатаПриоритезацииУведомленияПоНДФЛ() Экспорт
	
	// Дата по 196-ФЗ от 29.05.2023 г. - через месяц после публикации
	Возврат ДобавитьМесяц(ДатаСменыПоследовательностиЗачетаУплат(), 1) + 86400;
	
КонецФункции

// Функция возвращает дату изменения последовательности уплаты налогов при подачи уведомления
// Возвращаемое значение:
//  Дата смены алгоритма - Дата
//
Функция ДатаПриоритезацииУведомленияПоСтраховымВзносам() Экспорт
	
	// Дата по 389-ФЗ от 31.07.2023 г. - с 01.10.2023
	Возврат Дата(2023, 10, 01);
	
КонецФункции

// Возвращает дату вступления в силу положений Федерального закона от 27.11.2023 № 539-ФЗ
// 
// Возвращаемое значение:
//  Дата - 01.01.2024
//
Функция ДатаВступленияВСилу539ФЗ() Экспорт
	
	// Дата по 539-ФЗ от 27.11.2023 г. - с 01.01.2024
	Возврат Дата(2024, 01, 01);
	
КонецФункции

// Возвращает версию используемого алгоритма
//
// Параметры:
//	Дата - Дата - Дата проведения зачета.
//	
// Возвращаемое значение:
//	Число - Версия алгоритма
//
Функция ВерсияАлгоритмаЗачетаУплат(Дата) Экспорт
	
	Если Дата <= ДатаСменыАлгоритмаЗачетаУплат() Тогда
		// Зачет с даты самого первого документа оплаты
		Возврат 1;
	Иначе
		// Зачет в обратной последовательности с даты ближайшего документа оплаты
		Возврат 2;
	КонецЕсли;
	
КонецФункции

// Возвращает таблицу остатков расчетов по единому налоговому счету по правилам НК.
//
// Параметры:
//  Организация    - СправочникСсылка.Организации - Организация для получения остатков
//  Дата           - Дата - дата получения остатков.
//  ДокументСсылка - ДокументСсылка - если заполнен - остаток будет получен на момент времени документа
//	
// Возвращаемое значение:
//  ТаблицаЗначений - таблица с платежными документами и суммами на дату
//
Функция ТаблицаОстатковНаЕдиномНалоговомСчете(Организация, Дата, ДокументСсылка = Неопределено) Экспорт
	
	УстановитьПривилегированныйРежим(Истина);
	
	СуммаОстаток = 0;
	
	Если ЗначениеЗаполнено(ДокументСсылка) Тогда
		ПериодОстатков = Новый Граница(ДокументСсылка.МоментВремени(), ВидГраницы.Исключая);
	Иначе
		ПериодОстатков = Новый Граница(КонецДня(Дата), ВидГраницы.Включая);
	КонецЕсли;
	
	Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организации",    Организации);
	Запрос.УстановитьПараметр("ПериодОстатков", ПериодОстатков);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.СуммаОстаток КАК СуммаОстаток,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.Организация КАК Организация,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_РасчетыПоЕдиномуНалоговомуСчетуОстатки
	|ИЗ
	|	РегистрНакопления.РасчетыПоЕдиномуНалоговомуСчету.Остатки(
	|			&ПериодОстатков,
	|			Организация В (&Организации)) КАК РасчетыПоЕдиномуНалоговомуСчетуОстатки
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	ПлатежныйДокумент
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СУММА(РасчетыПоЕдиномуНалоговомуСчетуОстатки.СуммаОстаток) КАК Сумма,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.ПлатежныйДокумент КАК ПлатежныйДокумент,
	|	ЕСТЬNULL(ДанныеПервичныхДокументов.ДатаРегистратора, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаРегистратора,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.Организация КАК Организация,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_РасчетыПоЕдиномуНалоговомуСчетуОстатки КАК РасчетыПоЕдиномуНалоговомуСчетуОстатки
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО РасчетыПоЕдиномуНалоговомуСчетуОстатки.Организация = ДанныеПервичныхДокументов.Организация
	|			И РасчетыПоЕдиномуНалоговомуСчетуОстатки.ПлатежныйДокумент = ДанныеПервичныхДокументов.Документ
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.ПлатежныйДокумент,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.Организация,
	|	РасчетыПоЕдиномуНалоговомуСчетуОстатки.НомерСтроки,
	|	ДанныеПервичныхДокументов.ДатаРегистратора
	|
	|УПОРЯДОЧИТЬ ПО
	|	ДатаРегистратора,
	|	ПлатежныйДокумент";
	
	Результат = Запрос.Выполнить().Выгрузить();
	
	Возврат Результат;
	
КонецФункции

#Область ФормированиеДвиженийПоРегистрам

Процедура СформироватьДвиженияПоНалогамНаЕдиномНалоговомСчете(ТаблицаРеквизиты, ТаблицаНалоги, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаНалоги)
		Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	НаборДвижений = Движения.РасчетыПоНалогамНаЕдиномНалоговомСчете;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНалоги Цикл
		НоваяСтрока = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация;
		НоваяСтрока.Активность = Истина;
	КонецЦикла;
	
	НаборДвижений.Записывать = Истина;
	
КонецПроцедуры

Процедура СформироватьДвиженияПоСанкциямНаЕдиномНалоговомСчете(ТаблицаРеквизиты, ТаблицаНалоги, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаНалоги)
		Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	НаборДвижений = Движения.РасчетыПоСанкциямНаЕдиномНалоговомСчете;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНалоги Цикл
		НоваяСтрока = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация;
		НоваяСтрока.Активность = Истина;
	КонецЦикла;
	
	НаборДвижений.Записывать = Истина;
	
КонецПроцедуры

Процедура ЗарегистрироватьЗачислениеНаЕдиныйНалоговыйСчет(ТаблицаРеквизиты, ТаблицаНалоги, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаНалоги)
		Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	Если Не ПлатежиВБюджет.ИспользуетсяЕдиныйНалоговыйПлатеж(Реквизиты.Организация, Реквизиты.Период) Тогда
		Возврат;
	КонецЕсли;
	
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	
	СуммаЕдиногоНалоговогоПлатежа = 0;
	СчетУчета = ПланыСчетов.Хозрасчетный.ЕдиныйНалоговыйСчет;
	Для Каждого СтрокаТаблицы Из ТаблицаНалоги Цикл
		Если СтрокаТаблицы.СчетДт = СчетУчета Тогда
			СуммаЕдиногоНалоговогоПлатежа = СуммаЕдиногоНалоговогоПлатежа + СтрокаТаблицы.СуммаРуб;
		КонецЕсли;
	КонецЦикла;
	
	Если СуммаЕдиногоНалоговогоПлатежа = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаРасчетов = Движения.РасчетыПоЕдиномуНалоговомуСчету.Выгрузить();
	НоваяСтрока = ТаблицаРасчетов.Добавить();
	ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
	НоваяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация;
	НоваяСтрока.Сумма               = СуммаЕдиногоНалоговогоПлатежа;
	НоваяСтрока.ВидДвижения         = ВидДвиженияНакопления.Приход;
	НоваяСтрока.ПлатежныйДокумент   = Реквизиты.Регистратор;
	СформироватьДвиженияНаЕдиномНалоговомСчете(ТаблицаРеквизиты, ТаблицаРасчетов, Движения, Отказ);
	
КонецПроцедуры

Процедура СформироватьДвиженияНаЕдиномНалоговомСчете(ТаблицаРеквизиты, ТаблицаНалоги, Движения, Отказ) Экспорт
	
	Если Не ЗначениеЗаполнено(ТаблицаНалоги)
		Или Не ЗначениеЗаполнено(ТаблицаРеквизиты) Тогда
		Возврат;
	КонецЕсли;
	
	ТаблицаНалоги.Свернуть("ПлатежныйДокумент, ВидДвижения", "Сумма");
	
	Реквизиты = ТаблицаРеквизиты[0];
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	НаборДвижений = Движения.РасчетыПоЕдиномуНалоговомуСчету;
	
	Для Каждого СтрокаТаблицы Из ТаблицаНалоги Цикл
		НоваяСтрока = НаборДвижений.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
		ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
		НоваяСтрока.ГоловнаяОрганизация = ГоловнаяОрганизация;
		НоваяСтрока.Активность  = Истина;
	КонецЦикла;
	
	НаборДвижений.Записывать = Истина;
	
КонецПроцедуры

#КонецОбласти

Процедура СинхронизироватьСостояниеУведомлений(Уведомление) Экспорт
	
	Если Уведомление.ДополнительныеСвойства.Свойство("СинхронизацияСостоянийУведомлений") Тогда
		Возврат;
	Иначе
		Уведомление.ДополнительныеСвойства.Вставить("СинхронизацияСостоянийУведомлений", Истина);
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Уведомление",     Уведомление.Ссылка);
	Запрос.УстановитьПараметр("ПометкаУдаления", Уведомление.ПометкаУдаления);
	
	Если ТипЗнч(Уведомление) = Тип("ДокументОбъект.УведомлениеОбИсчисленныхСуммахНалогов") Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	УведомлениеОСпецрежимахНалогообложения.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.УведомлениеОбИсчисленныхСуммахНалогов КАК УведомлениеОбИсчисленныхСуммахНалогов
			|		ЛЕВОЕ СОЕДИНЕНИЕ Документ.УведомлениеОСпецрежимахНалогообложения КАК УведомлениеОСпецрежимахНалогообложения
			|		ПО УведомлениеОбИсчисленныхСуммахНалогов.Уведомление = УведомлениеОСпецрежимахНалогообложения.Ссылка
			|ГДЕ
			|	УведомлениеОбИсчисленныхСуммахНалогов.Ссылка = &Уведомление
			|	И УведомлениеОСпецрежимахНалогообложения.ПометкаУдаления <> &ПометкаУдаления";
	ИначеЕсли ТипЗнч(Уведомление) = Тип("ДокументОбъект.УведомлениеОСпецрежимахНалогообложения") Тогда
		ТекстЗапроса =
			"ВЫБРАТЬ
			|	УведомлениеОбИсчисленныхСуммахНалогов.Ссылка КАК Ссылка
			|ИЗ
			|	Документ.УведомлениеОбИсчисленныхСуммахНалогов КАК УведомлениеОбИсчисленныхСуммахНалогов
			|ГДЕ
			|	УведомлениеОбИсчисленныхСуммахНалогов.Уведомление = &Уведомление
			|	И УведомлениеОбИсчисленныхСуммахНалогов.ПометкаУдаления <> &ПометкаУдаления";
	Иначе
		Возврат;
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ДокументОбъект = Выборка.Ссылка.ПолучитьОбъект();
		ДокументОбъект.ДополнительныеСвойства.Вставить("СинхронизацияСостоянийУведомлений", Истина);
		ДокументОбъект.УстановитьПометкуУдаления(Уведомление.ПометкаУдаления);
	КонецЦикла;
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

//-- НЕ УТ

Функция ДатаВыделенияДополнительныхВзносовЛетчиковИШахтеровИзСоставаЕНП() Экспорт
	Возврат '20250101'
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТ

#Область ПрочиеВспомогательныеПроцедуры

Процедура РаспределениеСуммыОплатыПоСрокам(Реквизиты, СуммыЕдиногоНалоговогоПлатежа, ОстаткиПоНалогам, СрокиУплаты, НаборДвиженийНалог, УчтенныеДанные = Неопределено)
	
	ИспользуетсяЕдиныйНалоговыйПлатеж = Истина;
	
	НоваяВерсияПоследовательностиЗачетаУплатНДФЛ = Реквизиты.Период >= ДатаСменыПоследовательностиЗачетаУплат();
	ВсеВидыНалоговНДФЛ = ЕдиныйНалоговыйСчетПовтИсп.ВсеВидыНалоговНДФЛ();
	
	НоваяВерсияПоследовательностиЗачетаУплатСтраховыеВзносы = Реквизиты.Период >= ДатаПриоритезацииУведомленияПоСтраховымВзносам();
	ВидыНалоговСтраховыеВзносы = ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговСтраховыеВзносы();
	
	УточнятьДатуОперации = ТипЗнч(Реквизиты.Регистратор) = Тип("ДокументСсылка.РегламентнаяОперация");
	
	ОтборПоСрокам = Новый Структура("СрокУплаты");
	ОтборПоИзмерениям = Новый Структура("ГоловнаяОрганизация, Организация, РегистрацияВНалоговомОргане, КодПоОКТМО, Налог, КодБК, СчетУчета, СрокУплаты");
	
	Для Каждого СтрокаТаблицыПлатежа Из СуммыЕдиногоНалоговогоПлатежа Цикл
		Если СтрокаТаблицыПлатежа.Сумма <= 0 Тогда
			Продолжить;
		КонецЕсли;
		Для Каждого СтрокаТаблицы Из СрокиУплаты Цикл
			ОтборПоСрокам.СрокУплаты = СтрокаТаблицы.СрокУплаты;
			ОстаткиПоДате = ОстаткиПоНалогам.Скопировать(ОтборПоСрокам);
			
			СуммаОстаток = ОстаткиПоДате.Итог("Сумма");
			СуммаПогашения = Мин(СтрокаТаблицыПлатежа.Сумма, СуммаОстаток);
			Если СуммаПогашения <> 0 Тогда
				
				Коэффициенты = ОстаткиПоДате.ВыгрузитьКолонку("Сумма");
				РаспределеннаяСумма = ОбщегоНазначения.РаспределитьСуммуПропорциональноКоэффициентам(СуммаПогашения, Коэффициенты, 2);
				Если РаспределеннаяСумма = Неопределено Тогда
					Продолжить;
				КонецЕсли;
				ОстаткиПоДате.ЗагрузитьКолонку(РаспределеннаяСумма, "Сумма");
				
				Для Каждого СтрокаТаблицыПоДате Из ОстаткиПоДате Цикл
					
					Если СтрокаТаблицыПоДате.Сумма = 0 Тогда
						Продолжить;
					КонецЕсли;
					
					НоваяСтрока = НаборДвиженийНалог.Добавить();
					ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
					ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицыПоДате);
					
					Если ИспользуетсяЕдиныйНалоговыйПлатеж И УточнятьДатуОперации Тогда
						// Уточнение периода уплаты - привязываемся к дате операции
						
						ПриоритетныйЗачетНДФЛ = НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
							И ВсеВидыНалоговНДФЛ.Найти(НоваяСтрока.Налог) <> Неопределено;
						
						ПриоритетныйЗачетСтраховыхВзносов = НоваяВерсияПоследовательностиЗачетаУплатСтраховыеВзносы
							И ВидыНалоговСтраховыеВзносы.Найти(НоваяСтрока.Налог) <> Неопределено;
						
						Если СтрокаТаблицыПлатежа.ДатаРегистратора >= НоваяСтрока.СрокУплаты 
							Или ПриоритетныйЗачетНДФЛ
							Или ПриоритетныйЗачетСтраховыхВзносов
							Или НоваяСтрока.СрокУплаты < НачалоМесяца(Реквизиты.Период) Тогда
							ДатаОперации = Макс(НоваяСтрока.Период, СтрокаТаблицыПлатежа.ДатаРегистратора);
						Иначе
							ДатаОперации = НоваяСтрока.СрокУплаты;
						КонецЕсли;
						НоваяСтрока.Период = КонецДня(ДатаОперации);
					КонецЕсли;
					
					Если УчтенныеДанные <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(УчтенныеДанные.Добавить(), СтрокаТаблицыПоДате);
					КонецЕсли;
					
					ЗаполнитьЗначенияСвойств(ОтборПоИзмерениям, НоваяСтрока);
					СтрокиИсходнойТаблицы = ОстаткиПоНалогам.НайтиСтроки(ОтборПоИзмерениям);
					СтрокиИсходнойТаблицы[0].Сумма = СтрокиИсходнойТаблицы[0].Сумма - НоваяСтрока.Сумма;
					
					НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Расход;
					НоваяСтрока.ПлатежныйДокумент = СтрокаТаблицыПлатежа.ПлатежныйДокумент;
				КонецЦикла;
				
				СтрокаТаблицыПлатежа.Сумма = СтрокаТаблицыПлатежа.Сумма - СуммаПогашения;
				
			КонецЕсли;
			
			Если СтрокаТаблицыПлатежа.Сумма <= 0 Тогда
				СтрокаТаблицыПлатежа.Сумма = 0;
				Прервать;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	НаборДвиженийНалог.Записывать = Истина;
	
КонецПроцедуры

Процедура РаспределениеСуммыОплатыПоСрокамИПриоритетамПогашения(Реквизиты, СуммыЕдиногоНалоговогоПлатежа, ОстаткиПоНалогам, НаборДвиженийНалог, УчтенныеДанные = Неопределено)
	
	ДатаСменыАлгоритмаЗачетаУплат = ДатаСменыАлгоритмаЗачетаУплат();
	ПереходныйПериод              = ВерсияАлгоритмаЗачетаУплат(НачалоМесяца(Реквизиты.Период)) = 1;
	
	ВременнаяТаблицаОстатков = ОстаткиПоНалогам.СкопироватьКолонки();
	ВременнаяТаблицаОплат    = СуммыЕдиногоНалоговогоПлатежа.СкопироватьКолонки();
	
	// Приоритеты:
	Если Реквизиты.Период < ДатаСменыПоследовательностиЗачетаУплат() Тогда
		// - 1. Недоимка прочие налоги
		// - 2. Текущий платеж прочие налоги
		ЧислоПриоритетов = 2;
	Иначе
		// - 1. Недоимка НДФЛ
		// - 2. Текущий платеж НДФЛ
		// - 3. Недоимка прочие налоги
		//   4. Текущий платеж по взносам (начиная с 01.10.2023 - вступления в силу 389-ФЗ, до этого момента страховые взносы идут с приоритетом 5)
		// - 5. Текущий платеж прочие налоги
		ЧислоПриоритетов = 5;
	КонецЕсли;
	
	Для Приоритет = 1 По ЧислоПриоритетов Цикл
		// Погашение недоимки (определяемой однозначно определенной по сроку платежа)
		ОстаткиПоТекущимНалогам = ОстаткиПоНалогам.Скопировать(Новый Структура("Недоимка, Приоритет, ЭтоНалог", Истина, Приоритет, Истина));
		Если ОстаткиПоТекущимНалогам.Итог("Сумма") > 0 И СуммыЕдиногоНалоговогоПлатежа.Итог("Сумма") > 0 Тогда
			// Сначала очистим таблицы от пустых записей, чтобы уменьшить количество итераций
			ОчиститьТаблицуОтПустыхЗаписей(ОстаткиПоТекущимНалогам);
			ОчиститьТаблицуОтПустыхЗаписей(СуммыЕдиногоНалоговогоПлатежа);
			
			СрокиУплаты = ОстаткиПоТекущимНалогам.Скопировать(Новый Структура("Недоимка", Истина), "СрокУплаты, Недоимка");
			СрокиУплаты.Свернуть("СрокУплаты, Недоимка", );
			СрокиУплаты.Сортировать("СрокУплаты");
			РаспределениеСуммыОплатыПоСрокам(Реквизиты,
				СуммыЕдиногоНалоговогоПлатежа,
				ОстаткиПоТекущимНалогам,
				СрокиУплаты,
				НаборДвиженийНалог,
				УчтенныеДанные);
			// Принудительно сменим приоритет, чтобы последующее распределение обязательно выполнилось.
			Приоритет = Приоритет + 1;
		КонецЕсли;
		// Погашение текущей задолженности или выявленной недоимки периода проведения
		ОстаткиПоТекущимНалогам = ОстаткиПоНалогам.Скопировать(Новый Структура("Недоимка, Приоритет, ЭтоНалог", Ложь, Приоритет, Истина));
		
		Если ПереходныйПериод Тогда
			Если СуммыЕдиногоНалоговогоПлатежа.Итог("Сумма") > 0 Тогда
				// Сначала очистим таблицы от пустых записей, чтобы уменьшить количество итераций
				ОчиститьТаблицуОтПустыхЗаписей(ОстаткиПоТекущимНалогам);
				ОчиститьТаблицуОтПустыхЗаписей(СуммыЕдиногоНалоговогоПлатежа);
				
				// При условии, что есть что распределять
				// Сначала обработаем налоги и платежи до даты изменения алгоритма - "по старому"
				ВременнаяТаблицаОстатков.Очистить();
				ВременнаяТаблицаОплат.Очистить();
				Для Каждого СтрокаТаблицыОстатков Из ОстаткиПоТекущимНалогам Цикл
					Если СтрокаТаблицыОстатков.СрокУплаты < ДатаСменыАлгоритмаЗачетаУплат Тогда
						ЗаполнитьЗначенияСвойств(ВременнаяТаблицаОстатков.Добавить(), СтрокаТаблицыОстатков);
					КонецЕсли;
				КонецЦикла;
				Если ВременнаяТаблицаОстатков.Итог("Сумма") > 0 Тогда
					Для Каждого СтрокаТаблицыПлатежа Из СуммыЕдиногоНалоговогоПлатежа Цикл
						Если СтрокаТаблицыПлатежа.ДатаРегистратора < ДатаСменыАлгоритмаЗачетаУплат Тогда
							ЗаполнитьЗначенияСвойств(ВременнаяТаблицаОплат.Добавить(), СтрокаТаблицыПлатежа);
						КонецЕсли;
					КонецЦикла;
					СрокиУплаты = ВременнаяТаблицаОстатков.Скопировать(
						Новый Структура("Недоимка, Приоритет", Ложь, Приоритет), "СрокУплаты, Недоимка");
					СрокиУплаты.Свернуть("СрокУплаты", );
					СрокиУплаты.Сортировать("СрокУплаты");
					РаспределениеСуммыОплатыПоСрокам(Реквизиты,
						ВременнаяТаблицаОплат,
						ВременнаяТаблицаОстатков,
						СрокиУплаты,
						НаборДвиженийНалог,
						УчтенныеДанные);
					
					// Учтем списанные суммы
					Для Каждого СтрокаТаблицыПлатежа Из ВременнаяТаблицаОплат Цикл
						ТекущаяСтрокаПлатежа = СуммыЕдиногоНалоговогоПлатежа.Найти(СтрокаТаблицыПлатежа.ПлатежныйДокумент, "ПлатежныйДокумент");
						Если ТекущаяСтрокаПлатежа <> Неопределено Тогда
							ЗаполнитьЗначенияСвойств(ТекущаяСтрокаПлатежа, СтрокаТаблицыПлатежа);
						КонецЕсли;
					КонецЦикла;
					Для Каждого СтрокаТаблицыОстатков Из ВременнаяТаблицаОстатков Цикл
						ТекущаяСтрокаОстатков = ОстаткиПоТекущимНалогам.Найти(СтрокаТаблицыОстатков.НомерСтроки, "НомерСтроки");
						Если ТекущаяСтрокаОстатков <> Неопределено Тогда
							ЗаполнитьЗначенияСвойств(ТекущаяСтрокаОстатков, СтрокаТаблицыОстатков);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
			КонецЕсли;
		КонецЕсли;
		
		Если ОстаткиПоТекущимНалогам.Итог("Сумма") > 0 И СуммыЕдиногоНалоговогоПлатежа.Итог("Сумма") > 0 Тогда
			// При условии, что есть что распределять и погашать
			
			// Принцип следующий:
			//   Перебираем таблицу остатков и ищем в таблице оплат суммы со сроками более ранними чем срок уплаты налога
			//   Если сумма остатка погашена не полностью (оперативная недоимка) переходим к перебору таблицы оплат со сроками
			//   болеее поздними чем срок уплаты налога
			
			// Сначала очистим таблицы от пустых записей, чтобы уменьшить количество итераций
			ОчиститьТаблицуОтПустыхЗаписей(ОстаткиПоТекущимНалогам);
			ОчиститьТаблицуОтПустыхЗаписей(СуммыЕдиногоНалоговогоПлатежа);
			
			СрокиУплаты = ОстаткиПоТекущимНалогам.Скопировать(
				Новый Структура("Недоимка, Приоритет, ЭтоНалог", Ложь, Приоритет, Истина), "СрокУплаты, Недоимка");
			СрокиУплаты.Свернуть("СрокУплаты", );
			СрокиУплаты.Сортировать("СрокУплаты");
			
			ОтборПоСрокам = Новый Структура("СрокУплаты");
			
			Для Каждого СтрокаТаблицы Из СрокиУплаты Цикл
				
				ОтборПоСрокам.СрокУплаты = СтрокаТаблицы.СрокУплаты;
				ВременнаяТаблицаОстатков = ОстаткиПоТекущимНалогам.Скопировать(ОтборПоСрокам);
				
				ВременнаяТаблицаОплат.Очистить();
				Для Каждого СтрокаТаблицыПлатежа Из СуммыЕдиногоНалоговогоПлатежа Цикл
					Если СтрокаТаблицыПлатежа.Сумма > 0 И НачалоДня(СтрокаТаблицыПлатежа.ДатаРегистратора) <= СтрокаТаблицы.СрокУплаты Тогда
						ЗаполнитьЗначенияСвойств(ВременнаяТаблицаОплат.Добавить(), СтрокаТаблицыПлатежа);
					КонецЕсли;
				КонецЦикла;
				ВременнаяТаблицаОплат.Сортировать("ДатаРегистратора Убыв");
				
				// Погасим задолженнность уплатами, совершенными до наступления срока платежа
				СрокиУплатыВрем = ВременнаяТаблицаОстатков.Скопировать(, "СрокУплаты");
				СрокиУплатыВрем.Свернуть("СрокУплаты", );
				СрокиУплатыВрем.Сортировать("СрокУплаты");
				РаспределениеСуммыОплатыПоСрокам(Реквизиты,
					ВременнаяТаблицаОплат,
					ВременнаяТаблицаОстатков,
					СрокиУплатыВрем,
					НаборДвиженийНалог,
					УчтенныеДанные);
				
				// Учтем списанные суммы
				Для Каждого СтрокаТаблицыПлатежа Из ВременнаяТаблицаОплат Цикл
					ТекущаяСтрокаПлатежа = СуммыЕдиногоНалоговогоПлатежа.Найти(СтрокаТаблицыПлатежа.ПлатежныйДокумент, "ПлатежныйДокумент");
					Если ТекущаяСтрокаПлатежа <> Неопределено Тогда
						ЗаполнитьЗначенияСвойств(ТекущаяСтрокаПлатежа, СтрокаТаблицыПлатежа);
					КонецЕсли;
				КонецЦикла;
				
				// Задолженность не погашена полностью: появилась оперативная недоимка - ее погашают документы уплаты после срока платежа
				Если ВременнаяТаблицаОстатков.Итог("Сумма") > 0 Тогда
					РаспределениеСуммыОплатыПоСрокам(Реквизиты,
						СуммыЕдиногоНалоговогоПлатежа,
						ВременнаяТаблицаОстатков,
						СрокиУплатыВрем,
						НаборДвиженийНалог,
						УчтенныеДанные);
				КонецЕсли;
				
				Если СуммыЕдиногоНалоговогоПлатежа.Итог("Сумма") > 0 Тогда
					// Очистим таблицу от пустых записей, чтобы уменьшить количество итераций
					ОчиститьТаблицуОтПустыхЗаписей(СуммыЕдиногоНалоговогоПлатежа);
				Иначе
					// Распределять больше нечего
					Прервать;
				КонецЕсли;
				
			КонецЦикла;
		КонецЕсли;
	КонецЦикла;
		
КонецПроцедуры

Функция ПодготовитьПараметрыЗачетаАвансаПоЕдиномуНалоговомуСчету(ТаблицаРеквизиты)

	Параметры = Новый Структура;

	// Подготовка таблицы Параметры.Реквизиты

	СписокОбязательныхКолонок = ""
	+ "Период,"            // <Дата>
	+ "Организация,"       // <СправочникСсылка.Организации>
	+ "Регистратор,"       // <ДокументСсылка.*>
	+ "ВидОперации,"       // <ПеречислениеСсылка.ВидыРегламентныхОпераций>
	+ "ВыдаватьСообщения"; // <Булево>

	Параметры.Вставить("Реквизиты",
		ОбщегоНазначенияБПВызовСервера.ПолучитьТаблицуПараметровПроведения(ТаблицаРеквизиты, СписокОбязательныхКолонок));

	Возврат Параметры;

КонецФункции

Процедура РаспределитьОплатуПоОстаткамРасчетов565ФЗ(ТаблицаСуммыЕдиногоНалоговогоПлатежа, ТаблицаРеквизиты, Движения, Отказ)
	
	Реквизиты = ТаблицаРеквизиты[0];
	
	// Основные параметры алгоритма
	
	// Исторически сначала был изменен приоритет зачета для НДФЛ, потом для страховых взносов.
	// Поэтому если не действует новая версия НДФЛ, то это значит, что и для взносов тоже не действует.
	ДатаСменыПоследовательностиЗачетаУплатНДФЛ   = ДатаСменыПоследовательностиЗачетаУплат();
	НоваяВерсияПоследовательностиЗачетаУплатНДФЛ = Реквизиты.Период >= ДатаСменыПоследовательностиЗачетаУплатНДФЛ;
	ПереходныйПериодНДФЛ                         = НачалоМесяца(Реквизиты.Период) = НачалоМесяца(ДатаСменыПоследовательностиЗачетаУплатНДФЛ);
	
	СуммыЕдиногоНалоговогоПлатежа = ТаблицаСуммыЕдиногоНалоговогоПлатежа.Скопировать();
	СуммыЕдиногоНалоговогоПлатежа.Сортировать("ДатаРегистратора Возр");
	
	НаборДвиженийНалог   = Движения.РасчетыПоНалогамНаЕдиномНалоговомСчете;
	НаборДвиженийСанкции = Движения.РасчетыПоСанкциямНаЕдиномНалоговомСчете;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	Организации         = БухгалтерскийУчетПереопределяемый.ВсяОрганизация(ГоловнаяОрганизация);
	
	ПериодОстатков      = Новый Граница(КонецМесяца(ДобавитьМесяц(Реквизиты.Период, -1)), ВидГраницы.Включая);
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ГоловнаяОрганизация",                            ГоловнаяОрганизация);
	Запрос.УстановитьПараметр("Организации",                                    Организации);
	Запрос.УстановитьПараметр("ПериодОстатков",                                 ПериодОстатков);
	Запрос.УстановитьПараметр("НачалоПериода",                                  НачалоМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("КонецПериода",                                   КонецМесяца(Реквизиты.Период));
	Запрос.УстановитьПараметр("ПредельныйСрокУплаты",                           Реквизиты.Период);
	Запрос.УстановитьПараметр("ВсеВидыНалоговНДФЛ",                             ЕдиныйНалоговыйСчетПовтИсп.ВсеВидыНалоговНДФЛ());
	Запрос.УстановитьПараметр("ВидыНалоговНДФЛНалоговогоАгента",                ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговНДФЛНалоговогоАгента());
	Запрос.УстановитьПараметр("ИсключаемыйРегистратор",                         Реквизиты.Регистратор);
	Запрос.УстановитьПараметр("НоваяВерсияПоследовательностиЗачетаУплатНДФЛ",   НоваяВерсияПоследовательностиЗачетаУплатНДФЛ);
	Запрос.УстановитьПараметр("ДатаПриоритезацииУведомленияПоНДФЛ",             ДатаПриоритезацииУведомленияПоНДФЛ());
	Запрос.УстановитьПараметр("ДатаПриоритезацииУведомленияПоСтраховымВзносам", ДатаПриоритезацииУведомленияПоСтраховымВзносам());
	Запрос.УстановитьПараметр("ВидыНалоговСтраховыеВзносы",                     ЕдиныйНалоговыйСчетПовтИсп.ВидыНалоговСтраховыеВзносы());
	Запрос.Текст =
	"ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(ВЫБОР
	|			КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|				ТОГДА ВЫБОР
	|						КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Период > РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты
	|							ТОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Период
	|							
	|						КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В (&ВидыНалоговНДФЛНалоговогоАгента)
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период >= &ДатаПриоритезацииУведомленияПоНДФЛ
	|							ТОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Период
	|							
	|						КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В (&ВидыНалоговСтраховыеВзносы)
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период >= &ДатаПриоритезацииУведомленияПоСтраховымВзносам
	|							ТОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Период
	|							
	|						ИНАЧЕ РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты
	|					КОНЕЦ
	|			ИНАЧЕ РасчетыПоНалогамНаЕдиномНалоговомСчете.Период
	|		КОНЕЦ, ДЕНЬ) КАК Период,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация КАК Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СчетУчета КАК СчетУчета,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог КАК Налог,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.КодБК КАК КодБК,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты КАК СрокУплаты,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Сумма КАК Сумма,
	|	NULL КАК ВидПлатежа,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ПредельныйСрокУплаты, МЕСЯЦ)
	|			ТОГДА ВЫБОР
	|					КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В (&ВсеВидыНалоговНДФЛ)
	|							ИЛИ НЕ &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|						ТОГДА 1
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ = ЛОЖЬ
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В (&ВидыНалоговНДФЛНалоговогоАгента)
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог В (&ВидыНалоговСтраховыеВзносы)
	|						И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период >= &ДатаПриоритезацииУведомленияПоСтраховымВзносам
	|					ТОГДА 4
	|				ИНАЧЕ 5
	|			КОНЕЦ
	|	КОНЕЦ КАК Приоритет,
	|	ИСТИНА КАК ЭтоНалог
	|ПОМЕСТИТЬ ВТ_Начисление
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете КАК РасчетыПоНалогамНаЕдиномНалоговомСчете
	|ГДЕ
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация В(&Организации)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Регистратор <> &ИсключаемыйРегистратор
	|	И НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ВЫБОР
	|			КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|					И &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|					И РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговНДФЛНалоговогоАгента)
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1), МЕСЯЦ)
	|				
	|			КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты, МЕСЯЦ) >= НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|					И &НачалоПериода >= &ДатаПриоритезацииУведомленияПоСтраховымВзносам
	|					И РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговСтраховыеВзносы)
	|				ТОГДА КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1), МЕСЯЦ)
	|				
	|			ИНАЧЕ РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты
	|		КОНЕЦ, ДЕНЬ),
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.ГоловнаяОрганизация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СчетУчета,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.КодБК,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.КодПоОКТМО,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты,
	|	СУММА(РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СуммаОстаток),
	|	NULL,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ПредельныйСрокУплаты, МЕСЯЦ)
	|			ТОГДА ВЫБОР
	|					КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВсеВидыНалоговНДФЛ)
	|							ИЛИ НЕ &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|						ТОГДА 1
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ = ЛОЖЬ
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговНДФЛНалоговогоАгента)
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговСтраховыеВзносы)
	|						И &НачалоПериода >= &ДатаПриоритезацииУведомленияПоСтраховымВзносам
	|					ТОГДА 4
	|				ИНАЧЕ 5
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ИСТИНА
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете.Остатки(
	|			&ПериодОстатков,
	|			ГоловнаяОрганизация = &ГоловнаяОрганизация
	|				И Организация В (&Организации)
	|				И НАЧАЛОПЕРИОДА(СрокУплаты, МЕСЯЦ) <= НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)) КАК РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки
	|ГДЕ
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СуммаОстаток > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СчетУчета,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.КодПоОКТМО,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.КодБК,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.ГоловнаяОрганизация,
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.СрокУплаты, МЕСЯЦ) < НАЧАЛОПЕРИОДА(&ПредельныйСрокУплаты, МЕСЯЦ)
	|			ТОГДА ВЫБОР
	|					КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|								И РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВсеВидыНалоговНДФЛ)
	|							ИЛИ НЕ &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|						ТОГДА 1
	|					ИНАЧЕ 3
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ = ЛОЖЬ
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговНДФЛНалоговогоАгента)
	|					ТОГДА 2
	|				КОГДА РасчетыПоНалогамНаЕдиномНалоговомСчетеОстатки.Налог В (&ВидыНалоговСтраховыеВзносы)
	|						И &НачалоПериода >= &ДатаПриоритезацииУведомленияПоСтраховымВзносам
	|					ТОГДА 4
	|				ИНАЧЕ 5
	|			КОНЕЦ
	|	КОНЕЦ
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НАЧАЛОПЕРИОДА(РасчетыПоСанкциямНаЕдиномНалоговомСчете.Период, ДЕНЬ),
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ГоловнаяОрганизация,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.Организация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.Сумма,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|						ТОГДА 6
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|						ТОГДА 7
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|						ТОГДА 8
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|					ТОГДА 3
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|					ТОГДА 4
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|					ТОГДА 5
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.РасчетыПоСанкциямНаЕдиномНалоговомСчете КАК РасчетыПоСанкциямНаЕдиномНалоговомСчете
	|ГДЕ
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Организация В(&Организации)
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Регистратор <> &ИсключаемыйРегистратор
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	КОНЕЦПЕРИОДА(ДОБАВИТЬКДАТЕ(&НачалоПериода, ДЕНЬ, -1), МЕСЯЦ),
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ГоловнаяОрганизация,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.Организация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	СУММА(РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.СуммаОстаток),
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|						ТОГДА 6
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|						ТОГДА 7
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|						ТОГДА 8
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|					ТОГДА 3
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|					ТОГДА 4
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|					ТОГДА 5
	|			КОНЕЦ
	|	КОНЕЦ,
	|	ЛОЖЬ
	|ИЗ
	|	РегистрНакопления.РасчетыПоСанкциямНаЕдиномНалоговомСчете.Остатки(
	|			&ПериодОстатков,
	|			ГоловнаяОрганизация = &ГоловнаяОрганизация
	|				И Организация В (&Организации)) КАК РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки
	|
	|СГРУППИРОВАТЬ ПО
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ГоловнаяОрганизация,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.Организация,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа,
	|	ВЫБОР
	|		КОГДА &НоваяВерсияПоследовательностиЗачетаУплатНДФЛ
	|			ТОГДА ВЫБОР
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|						ТОГДА 6
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|						ТОГДА 7
	|					КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|						ТОГДА 8
	|				КОНЕЦ
	|		ИНАЧЕ ВЫБОР
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениАкт), ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.ПениСам))
	|					ТОГДА 3
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Проценты))
	|					ТОГДА 4
	|				КОГДА РасчетыПоСанкциямНаЕдиномНалоговомСчетеОстатки.ВидПлатежа В (ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосбюджет.Штраф))
	|					ТОГДА 5
	|			КОНЕЦ
	|	КОНЕЦ
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Начисление.Период КАК Период,
	|	ВТ_Начисление.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_Начисление.Организация КАК Организация,
	|	ВТ_Начисление.СчетУчета КАК СчетУчета,
	|	ВТ_Начисление.Налог КАК Налог,
	|	ВТ_Начисление.КодБК КАК КодБК,
	|	ВТ_Начисление.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_Начисление.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_Начисление.СрокУплаты КАК СрокУплаты,
	|	СУММА(ВТ_Начисление.Сумма) КАК Сумма,
	|	ВТ_Начисление.ВидПлатежа КАК ВидПлатежа,
	|	ВТ_Начисление.Приоритет КАК Приоритет,
	|	ВТ_Начисление.ЭтоНалог КАК ЭтоНалог,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_РасчетыПоНалогам
	|ИЗ
	|	ВТ_Начисление КАК ВТ_Начисление
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Начисление.ВидПлатежа,
	|	ВТ_Начисление.СрокУплаты,
	|	ВТ_Начисление.ЭтоНалог,
	|	ВТ_Начисление.Налог,
	|	ВТ_Начисление.Период,
	|	ВТ_Начисление.СчетУчета,
	|	ВТ_Начисление.РегистрацияВНалоговомОргане,
	|	ВТ_Начисление.ГоловнаяОрганизация,
	|	ВТ_Начисление.Организация,
	|	ВТ_Начисление.КодПоОКТМО,
	|	ВТ_Начисление.КодБК,
	|	ВТ_Начисление.Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчетыПоНалогам.Период КАК Период,
	|	ВТ_РасчетыПоНалогам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_РасчетыПоНалогам.Организация КАК Организация,
	|	ВТ_РасчетыПоНалогам.СчетУчета КАК СчетУчета,
	|	ВТ_РасчетыПоНалогам.Налог КАК Налог,
	|	ВТ_РасчетыПоНалогам.КодБК КАК КодБК,
	|	ВТ_РасчетыПоНалогам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_РасчетыПоНалогам.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_РасчетыПоНалогам.СрокУплаты КАК СрокУплаты,
	|	СУММА(ВТ_РасчетыПоНалогам.Сумма) КАК Сумма,
	|	ВТ_РасчетыПоНалогам.ВидПлатежа КАК ВидПлатежа,
	|	ВТ_РасчетыПоНалогам.Приоритет КАК Приоритет,
	|	ВТ_РасчетыПоНалогам.НомерСтроки КАК НомерСтроки,
	|	ВТ_РасчетыПоНалогам.ЭтоНалог КАК ЭтоНалог
	|ПОМЕСТИТЬ ВТ_ТаблицаРасчетыПромежуточная
	|ИЗ
	|	ВТ_РасчетыПоНалогам КАК ВТ_РасчетыПоНалогам
	|ГДЕ
	|	ВТ_РасчетыПоНалогам.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РасчетыПоНалогам.Период,
	|	ВТ_РасчетыПоНалогам.КодБК,
	|	ВТ_РасчетыПоНалогам.Налог,
	|	ВТ_РасчетыПоНалогам.СрокУплаты,
	|	ВТ_РасчетыПоНалогам.РегистрацияВНалоговомОргане,
	|	ВТ_РасчетыПоНалогам.КодПоОКТМО,
	|	ВТ_РасчетыПоНалогам.ВидПлатежа,
	|	ВТ_РасчетыПоНалогам.Организация,
	|	ВТ_РасчетыПоНалогам.ЭтоНалог,
	|	ВТ_РасчетыПоНалогам.СчетУчета,
	|	ВТ_РасчетыПоНалогам.ГоловнаяОрганизация,
	|	ВТ_РасчетыПоНалогам.Приоритет,
	|	ВТ_РасчетыПоНалогам.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫБОР
	|		КОГДА НАЧАЛОПЕРИОДА(РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты, МЕСЯЦ) = НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|			ТОГДА РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты
	|		ИНАЧЕ РасчетыПоНалогамНаЕдиномНалоговомСчете.Период
	|	КОНЕЦ КАК Период,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация КАК Организация,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СчетУчета КАК СчетУчета,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Налог КАК Налог,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.КодБК КАК КодБК,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.КодПоОКТМО КАК КодПоОКТМО,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты КАК СрокУплаты,
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.Сумма КАК Сумма,
	|	NULL КАК ВидПлатежа
	|ПОМЕСТИТЬ ВТ_СписаниеПромежуточная
	|ИЗ
	|	РегистрНакопления.РасчетыПоНалогамНаЕдиномНалоговомСчете КАК РасчетыПоНалогамНаЕдиномНалоговомСчете
	|ГДЕ
	|	РасчетыПоНалогамНаЕдиномНалоговомСчете.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Организация В(&Организации)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Регистратор <> &ИсключаемыйРегистратор
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.СрокУплаты <= НАЧАЛОПЕРИОДА(&НачалоПериода, МЕСЯЦ)
	|	И РасчетыПоНалогамНаЕдиномНалоговомСчете.Активность
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.Период,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ГоловнаяОрганизация,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.Организация,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	NULL,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.Сумма,
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидПлатежа
	|ИЗ
	|	РегистрНакопления.РасчетыПоСанкциямНаЕдиномНалоговомСчете КАК РасчетыПоСанкциямНаЕдиномНалоговомСчете
	|ГДЕ
	|	РасчетыПоСанкциямНаЕдиномНалоговомСчете.ГоловнаяОрганизация = &ГоловнаяОрганизация
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Организация В(&Организации)
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Период МЕЖДУ &НачалоПериода И &КонецПериода
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И РасчетыПоСанкциямНаЕдиномНалоговомСчете.Активность
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_СписаниеПромежуточная.Период КАК Период,
	|	ВТ_СписаниеПромежуточная.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_СписаниеПромежуточная.Организация КАК Организация,
	|	ВТ_СписаниеПромежуточная.СчетУчета КАК СчетУчета,
	|	ВТ_СписаниеПромежуточная.Налог КАК Налог,
	|	ВТ_СписаниеПромежуточная.КодБК КАК КодБК,
	|	ВТ_СписаниеПромежуточная.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_СписаниеПромежуточная.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_СписаниеПромежуточная.СрокУплаты КАК СрокУплаты,
	|	ВТ_СписаниеПромежуточная.Сумма КАК Сумма,
	|	ВТ_СписаниеПромежуточная.ВидПлатежа КАК ВидПлатежа,
	|	АВТОНОМЕРЗАПИСИ() КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_Списание
	|ИЗ
	|	ВТ_СписаниеПромежуточная КАК ВТ_СписаниеПромежуточная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Списание.Период КАК Период,
	|	ВТ_Списание.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_Списание.Организация КАК Организация,
	|	ВТ_Списание.СчетУчета КАК СчетУчета,
	|	ВТ_Списание.Налог КАК Налог,
	|	ВТ_Списание.КодБК КАК КодБК,
	|	ВТ_Списание.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_Списание.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_Списание.СрокУплаты КАК СрокУплаты,
	|	СУММА(ВТ_Списание.Сумма) КАК Сумма,
	|	ВТ_Списание.ВидПлатежа КАК ВидПлатежа,
	|	ВТ_Списание.НомерСтроки КАК НомерСтроки
	|ПОМЕСТИТЬ ВТ_ТаблицаЗачетыПромежуточная
	|ИЗ
	|	ВТ_Списание КАК ВТ_Списание
	|ГДЕ
	|	ВТ_Списание.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Списание.КодПоОКТМО,
	|	ВТ_Списание.СчетУчета,
	|	ВТ_Списание.Период,
	|	ВТ_Списание.РегистрацияВНалоговомОргане,
	|	ВТ_Списание.КодБК,
	|	ВТ_Списание.ВидПлатежа,
	|	ВТ_Списание.ГоловнаяОрганизация,
	|	ВТ_Списание.Налог,
	|	ВТ_Списание.СрокУплаты,
	|	ВТ_Списание.Организация,
	|	ВТ_Списание.НомерСтроки
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_РасчетыПоНалогам.Период КАК Период,
	|	ВТ_РасчетыПоНалогам.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_РасчетыПоНалогам.Организация КАК Организация,
	|	ВТ_РасчетыПоНалогам.СчетУчета КАК СчетУчета,
	|	ВТ_РасчетыПоНалогам.Налог КАК Налог,
	|	ВТ_РасчетыПоНалогам.КодБК КАК КодБК,
	|	ВТ_РасчетыПоНалогам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_РасчетыПоНалогам.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_РасчетыПоНалогам.СрокУплаты КАК СрокУплаты,
	|	СУММА(-ВТ_РасчетыПоНалогам.Сумма) КАК Сумма,
	|	ВТ_РасчетыПоНалогам.ВидПлатежа КАК ВидПлатежа
	|ИЗ
	|	ВТ_РасчетыПоНалогам КАК ВТ_РасчетыПоНалогам
	|ГДЕ
	|	ВТ_РасчетыПоНалогам.Сумма < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_РасчетыПоНалогам.СчетУчета,
	|	ВТ_РасчетыПоНалогам.ВидПлатежа,
	|	ВТ_РасчетыПоНалогам.ГоловнаяОрганизация,
	|	ВТ_РасчетыПоНалогам.Организация,
	|	ВТ_РасчетыПоНалогам.СрокУплаты,
	|	ВТ_РасчетыПоНалогам.КодПоОКТМО,
	|	ВТ_РасчетыПоНалогам.Налог,
	|	ВТ_РасчетыПоНалогам.КодБК,
	|	ВТ_РасчетыПоНалогам.РегистрацияВНалоговомОргане,
	|	ВТ_РасчетыПоНалогам.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаРасчетыПромежуточная.Период КАК Период,
	|	ВТ_ТаблицаРасчетыПромежуточная.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_ТаблицаРасчетыПромежуточная.Организация КАК Организация,
	|	ВТ_ТаблицаРасчетыПромежуточная.СчетУчета КАК СчетУчета,
	|	ВТ_ТаблицаРасчетыПромежуточная.Налог КАК Налог,
	|	ВТ_ТаблицаРасчетыПромежуточная.КодБК КАК КодБК,
	|	ВТ_ТаблицаРасчетыПромежуточная.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_ТаблицаРасчетыПромежуточная.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_ТаблицаРасчетыПромежуточная.СрокУплаты КАК СрокУплаты,
	|	СУММА(ВТ_ТаблицаРасчетыПромежуточная.Сумма) КАК Сумма,
	|	ВТ_ТаблицаРасчетыПромежуточная.ВидПлатежа КАК ВидПлатежа,
	|	ВТ_ТаблицаРасчетыПромежуточная.Приоритет КАК Приоритет,
	|	ВТ_ТаблицаРасчетыПромежуточная.НомерСтроки КАК НомерСтроки,
	|	ВТ_ТаблицаРасчетыПромежуточная.ЭтоНалог КАК ЭтоНалог,
	|	ЛОЖЬ КАК Недоимка
	|ИЗ
	|	ВТ_ТаблицаРасчетыПромежуточная КАК ВТ_ТаблицаРасчетыПромежуточная
	|ГДЕ
	|	ВТ_ТаблицаРасчетыПромежуточная.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаРасчетыПромежуточная.ГоловнаяОрганизация,
	|	ВТ_ТаблицаРасчетыПромежуточная.ЭтоНалог,
	|	ВТ_ТаблицаРасчетыПромежуточная.ВидПлатежа,
	|	ВТ_ТаблицаРасчетыПромежуточная.Период,
	|	ВТ_ТаблицаРасчетыПромежуточная.Организация,
	|	ВТ_ТаблицаРасчетыПромежуточная.СчетУчета,
	|	ВТ_ТаблицаРасчетыПромежуточная.Налог,
	|	ВТ_ТаблицаРасчетыПромежуточная.КодБК,
	|	ВТ_ТаблицаРасчетыПромежуточная.РегистрацияВНалоговомОргане,
	|	ВТ_ТаблицаРасчетыПромежуточная.КодПоОКТМО,
	|	ВТ_ТаблицаРасчетыПромежуточная.СрокУплаты,
	|	ВТ_ТаблицаРасчетыПромежуточная.Приоритет,
	|	ВТ_ТаблицаРасчетыПромежуточная.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период,
	|	Приоритет
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_Списание.Период КАК Период,
	|	ВТ_Списание.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_Списание.Организация КАК Организация,
	|	ВТ_Списание.СчетУчета КАК СчетУчета,
	|	ВТ_Списание.Налог КАК Налог,
	|	ВТ_Списание.КодБК КАК КодБК,
	|	ВТ_Списание.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_Списание.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_Списание.СрокУплаты КАК СрокУплаты,
	|	СУММА(-ВТ_Списание.Сумма) КАК Сумма,
	|	ВТ_Списание.ВидПлатежа КАК ВидПлатежа
	|ИЗ
	|	ВТ_Списание КАК ВТ_Списание
	|ГДЕ
	|	ВТ_Списание.Сумма < 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_Списание.ГоловнаяОрганизация,
	|	ВТ_Списание.Организация,
	|	ВТ_Списание.СчетУчета,
	|	ВТ_Списание.КодБК,
	|	ВТ_Списание.Налог,
	|	ВТ_Списание.РегистрацияВНалоговомОргане,
	|	ВТ_Списание.КодПоОКТМО,
	|	ВТ_Списание.СрокУплаты,
	|	ВТ_Списание.ВидПлатежа,
	|	ВТ_Списание.Период
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВТ_ТаблицаЗачетыПромежуточная.Период КАК Период,
	|	ВТ_ТаблицаЗачетыПромежуточная.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	ВТ_ТаблицаЗачетыПромежуточная.Организация КАК Организация,
	|	ВТ_ТаблицаЗачетыПромежуточная.СчетУчета КАК СчетУчета,
	|	ВТ_ТаблицаЗачетыПромежуточная.Налог КАК Налог,
	|	ВТ_ТаблицаЗачетыПромежуточная.КодБК КАК КодБК,
	|	ВТ_ТаблицаЗачетыПромежуточная.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ВТ_ТаблицаЗачетыПромежуточная.КодПоОКТМО КАК КодПоОКТМО,
	|	ВТ_ТаблицаЗачетыПромежуточная.СрокУплаты КАК СрокУплаты,
	|	СУММА(ВТ_ТаблицаЗачетыПромежуточная.Сумма) КАК Сумма,
	|	ВТ_ТаблицаЗачетыПромежуточная.ВидПлатежа КАК ВидПлатежа,
	|	ВТ_ТаблицаЗачетыПромежуточная.НомерСтроки КАК НомерСтроки
	|ИЗ
	|	ВТ_ТаблицаЗачетыПромежуточная КАК ВТ_ТаблицаЗачетыПромежуточная
	|ГДЕ
	|	ВТ_ТаблицаЗачетыПромежуточная.Сумма > 0
	|
	|СГРУППИРОВАТЬ ПО
	|	ВТ_ТаблицаЗачетыПромежуточная.Период,
	|	ВТ_ТаблицаЗачетыПромежуточная.ВидПлатежа,
	|	ВТ_ТаблицаЗачетыПромежуточная.СчетУчета,
	|	ВТ_ТаблицаЗачетыПромежуточная.Организация,
	|	ВТ_ТаблицаЗачетыПромежуточная.ГоловнаяОрганизация,
	|	ВТ_ТаблицаЗачетыПромежуточная.Налог,
	|	ВТ_ТаблицаЗачетыПромежуточная.СрокУплаты,
	|	ВТ_ТаблицаЗачетыПромежуточная.КодПоОКТМО,
	|	ВТ_ТаблицаЗачетыПромежуточная.РегистрацияВНалоговомОргане,
	|	ВТ_ТаблицаЗачетыПромежуточная.КодБК,
	|	ВТ_ТаблицаЗачетыПромежуточная.НомерСтроки
	|
	|УПОРЯДОЧИТЬ ПО
	|	Период";
	
	Результат = Запрос.ВыполнитьПакет();
	
	ТаблицаРасчетыСторно = Результат[Результат.Количество()-4].Выгрузить();
	ТаблицаРасчеты       = Результат[Результат.Количество()-3].Выгрузить();
	ТаблицаЗачетыСторно  = Результат[Результат.Количество()-2].Выгрузить();
	ТаблицаЗачеты        = Результат[Результат.Количество()-1].Выгрузить();
	
	КолонкиОтбора = "ГоловнаяОрганизация, Организация, СчетУчета, Налог, КодБК,
		|РегистрацияВНалоговомОргане, КодПоОКТМО, СрокУплаты, ВидПлатежа";
		
	ТаблицаРасчеты.Индексы.Добавить(КолонкиОтбора);
	ТаблицаРасчеты.Индексы.Добавить("Период, СрокУплаты, ЭтоНалог");
	ТаблицаРасчеты.Индексы.Добавить("НомерСтроки");
	
	СкорректироватьНаСуммыСторно(ТаблицаРасчеты, ТаблицаРасчетыСторно);
	СкорректироватьНаСуммыСторно(ТаблицаЗачеты,  ТаблицаЗачетыСторно);
	
	СтруктураОтбора = Новый Структура(КолонкиОтбора);
	
	//Исключим из оборотов принудительно проведенные зачеты (операции, уведомления, заявления)
	Для Каждого СтрокаТаблицыЗачета Из ТаблицаЗачеты Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТаблицыЗачета);
		ТаблицаКЗачету = ТаблицаРасчеты.Скопировать(СтруктураОтбора);
		ТаблицаКЗачету.Сортировать("Период Убыв, Приоритет");
		
		МассивОбработанныхСтрок = Новый Массив;
		Для Каждого СтрокаТаблицыКЗачету Из ТаблицаКЗачету Цикл
			// Считается зачтенной сумма, которая ранее была отражена в учете как начисленная
			Если СтрокаТаблицыКЗачету.Период > СтрокаТаблицыЗачета.Период Тогда
				Продолжить;
			КонецЕсли;
			ЗачтеннаяСумма = Макс(0, СтрокаТаблицыКЗачету.Сумма - СтрокаТаблицыЗачета.Сумма);
			СтрокаТаблицыКЗачету.Сумма = ЗачтеннаяСумма;
			СтрокаТаблицыЗачета.Сумма = СтрокаТаблицыЗачета.Сумма - ЗачтеннаяСумма;
			МассивОбработанныхСтрок.Добавить(СтрокаТаблицыКЗачету);
		КонецЦикла;
		Для Каждого СтрокаТаблицыКЗачету Из МассивОбработанныхСтрок Цикл
			ТекущаяСтрока = ТаблицаРасчеты.Найти(СтрокаТаблицыКЗачету.НомерСтроки, "НомерСтроки");
			Если ТекущаяСтрока <> Неопределено Тогда
				ТекущаяСтрока.Сумма = СтрокаТаблицыКЗачету.Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ОчиститьТаблицуОтПустыхЗаписей(ТаблицаРасчеты);
	
	ПериодыОплаты = ОбщегоНазначения.ВыгрузитьКолонку(СуммыЕдиногоНалоговогоПлатежа, "ДатаРегистратора", Истина);
	ОтборПериодовОплаты   = Новый Структура("ДатаРегистратора");
	ОстаткиПоНалогам      = ТаблицаРасчеты.СкопироватьКолонки();
	ОстаткиПоСанкциям     = ТаблицаРасчеты.СкопироватьКолонки();
	УчтенныеДанныеНалоги  = ТаблицаРасчеты.СкопироватьКолонки();
	УчтенныеДанныеСанкции = ТаблицаРасчеты.СкопироватьКолонки();
	
	УчтенныеДанныеНалоги.Индексы.Добавить("НомерСтроки");
	УчтенныеДанныеСанкции.Индексы.Добавить("НомерСтроки");
	
	ПериодыРегистраций = ОбщегоНазначения.ВыгрузитьКолонку(ТаблицаРасчеты, "Период", Истина);
	
	// Принцип зачета налогов:
	// - Обрабатываем данные в последовательности документов уплаты.
	// - Переплата прошлого периода распределяется по всей имеющейся задолженности в последовательности ее возникновения (*1).
	// - Уплата текущего периода (*2):
	//     - сначала погашает задолженность, зарегистрированную до отражения уплаты (*3);
	//     - если сумма списана не вся, погашается задолженность, зарегистрированная после отражения уплаты (*4).
	// - Последовательность зачета корректируется из-за переходного периода, который создал 196-ФЗ:
	//     - в выборке новая последовательность устанавливается для всех записей нового периода;
	//     - если зачет фактически происходит до даты применения 196-ФЗ, то последовательность принудительно указывается "старая" (*5).
	// - В первую очередь зачитываются недоимки и текущая задолженность по налогу/взносу. Приоритеты 1-5.(*6)
	// - После каждой итерации зачета налогов запускается итерация зачета санкций. Приоритеты 6-8. (*7).
	
	Для Каждого ПериодОплаты Из ПериодыОплаты Цикл
		
		// Уточнение приоритета требуется только для переходного периода по НДФЛ.
		// Для страховых взносов переходного периода нет, т.к. они изменения приоритета по ним вступают в силу с 01.10.2023
		УточнятьПриоритет = ПереходныйПериодНДФЛ И ПериодОплаты < ДатаСменыПоследовательностиЗачетаУплатНДФЛ;
		
		ОтборПериодовОплаты.ДатаРегистратора = ПериодОплаты;
		СуммыЕдиногоНалоговогоПлатежаПоПериодам = СуммыЕдиногоНалоговогоПлатежа.Скопировать(ОтборПериодовОплаты);
		
		Если НачалоМесяца(ПериодОплаты) < НачалоМесяца(Реквизиты.Период) Тогда
			// (*1)
			Отбор = Новый Структура("ЭтоНалог, Период");
			Для Каждого ПериодРегистрации Из ПериодыРегистраций Цикл
				Отбор.Период   = ПериодРегистрации;
				Отбор.ЭтоНалог = Истина;
				ТекущиеОстаткиПоНалогам(ОстаткиПоНалогам,
					ТаблицаРасчеты,
					УчтенныеДанныеНалоги,
					Отбор,
					УточнятьПриоритет И ПериодРегистрации < ДатаСменыПоследовательностиЗачетаУплатНДФЛ);
				// (*6)
				РаспределениеСуммыОплатыПоСрокамИПриоритетамПогашения(Реквизиты,
					СуммыЕдиногоНалоговогоПлатежаПоПериодам,
					ОстаткиПоНалогам,
					НаборДвиженийНалог,
					УчтенныеДанныеНалоги);
				Если СуммыЕдиногоНалоговогоПлатежаПоПериодам.Итог("Сумма") > 0 Тогда
					// (*7)
					Отбор.ЭтоНалог = Ложь;
					ТекущиеОстаткиПоНалогам(ОстаткиПоСанкциям,
						ТаблицаРасчеты,
						УчтенныеДанныеСанкции,
						Отбор,
						Ложь);
					РаспределениеСуммыОплатыСанкцийПоПриоритетам(Реквизиты,
						СуммыЕдиногоНалоговогоПлатежаПоПериодам,
						ОстаткиПоСанкциям,
						НаборДвиженийСанкции,
						УчтенныеДанныеСанкции);
				КонецЕсли;
			КонецЦикла;
		Иначе
			// (*2)
			Отбор = Новый Структура("ЭтоНалог, Период, ПериодОплаты, Ретроспективно");
			Отбор.Период       = Дата('00010101');
			Отбор.ПериодОплаты = ПериодОплаты;
			
			КоличествоИтераций = ?(ПереходныйПериодНДФЛ, 3, 2);
			// 1. Ретроспективно осмотр (*3)
			// 2. Перспективный осмотр (*4). С ограничением на переходную дату, если применимо
			// 3. Перспективный осмотр (*4). Без ограничения на переходную дату, если она была применена на ш. 2
			Для НомерИтерации = 1 По КоличествоИтераций Цикл
				
				Если СуммыЕдиногоНалоговогоПлатежаПоПериодам.Итог("Сумма") <= 0 Тогда
					Продолжить;
				КонецЕсли;
				Отбор.Ретроспективно = НомерИтерации = 1;
				
				Если НомерИтерации = 1 Тогда 
					// (*6)
					Отбор.ЭтоНалог = Истина;
					ТекущиеОстаткиПоНалогам(ОстаткиПоНалогам,
						ТаблицаРасчеты,
						УчтенныеДанныеНалоги,
						Отбор,
						УточнятьПриоритет);
					РаспределениеСуммыОплатыПоСрокамИПриоритетамПогашения(Реквизиты,
						СуммыЕдиногоНалоговогоПлатежаПоПериодам,
						ОстаткиПоНалогам,
						НаборДвиженийНалог,
						УчтенныеДанныеНалоги);
					Если СуммыЕдиногоНалоговогоПлатежаПоПериодам.Итог("Сумма") > 0 Тогда
						// (*7)
						Отбор.ЭтоНалог = Ложь;
						ТекущиеОстаткиПоНалогам(ОстаткиПоСанкциям,
							ТаблицаРасчеты,
							УчтенныеДанныеСанкции,
							Отбор,
							Ложь);
						РаспределениеСуммыОплатыСанкцийПоПриоритетам(Реквизиты,
							СуммыЕдиногоНалоговогоПлатежаПоПериодам,
							ОстаткиПоСанкциям,
							НаборДвиженийСанкции,
							УчтенныеДанныеСанкции);
					КонецЕсли;
				Иначе
					Для Каждого ПериодРегистрации Из ПериодыРегистраций Цикл
						Отбор.Период = ПериодРегистрации;
						// (*6)
						Отбор.ЭтоНалог = Истина;
						ТекущиеОстаткиПоНалогам(ОстаткиПоНалогам,
							ТаблицаРасчеты,
							УчтенныеДанныеНалоги,
							Отбор,
							УточнятьПриоритет И ПериодРегистрации < ДатаСменыПоследовательностиЗачетаУплатНДФЛ);
						РаспределениеСуммыОплатыПоСрокамИПриоритетамПогашения(Реквизиты,
							СуммыЕдиногоНалоговогоПлатежаПоПериодам,
							ОстаткиПоНалогам,
							НаборДвиженийНалог,
							УчтенныеДанныеНалоги);
						Если СуммыЕдиногоНалоговогоПлатежаПоПериодам.Итог("Сумма") > 0 Тогда
							// (*7)
							Отбор.ЭтоНалог = Ложь;
							ТекущиеОстаткиПоНалогам(ОстаткиПоСанкциям,
								ТаблицаРасчеты,
								УчтенныеДанныеСанкции,
								Отбор,
								Ложь);
							РаспределениеСуммыОплатыСанкцийПоПриоритетам(Реквизиты,
								СуммыЕдиногоНалоговогоПлатежаПоПериодам,
								ОстаткиПоСанкциям,
								НаборДвиженийСанкции,
								УчтенныеДанныеСанкции);
						КонецЕсли;
					КонецЦикла;
				КонецЕсли;
				
			КонецЦикла;
			
		КонецЕсли;
		
	КонецЦикла;
	
	ТаблицаНалоги = Движения.РасчетыПоЕдиномуНалоговомуСчету.Выгрузить().СкопироватьКолонки();
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборДвиженийНалог.Выгрузить(),   ТаблицаНалоги);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(НаборДвиженийСанкции.Выгрузить(), ТаблицаНалоги);
	
	СформироватьДвиженияНаЕдиномНалоговомСчете(ТаблицаРеквизиты, ТаблицаНалоги, Движения, Отказ);
	
	УстановитьПривилегированныйРежим(Ложь);
	
КонецПроцедуры

Процедура СкорректироватьНаСуммыСторно(ТаблицаРасчета, ТаблицаСторно)
		
	СтруктураОтбора = Новый Структура("ГоловнаяОрганизация, Организация, СчетУчета, Налог, КодБК,
		|РегистрацияВНалоговомОргане, КодПоОКТМО, СрокУплаты, ВидПлатежа");
	
	// Поправка на сторно записи расчетов по налогам и санкциям
	Для Каждого СтрокаТаблицыЗачета Из ТаблицаСторно Цикл
		ЗаполнитьЗначенияСвойств(СтруктураОтбора, СтрокаТаблицыЗачета);
		ТаблицаКЗачету = ТаблицаРасчета.Скопировать(СтруктураОтбора);
		ТаблицаКЗачету.Сортировать("Период Убыв");
		
		МассивОбработанныхСтрок = Новый Массив;
		Для Каждого СтрокаТаблицыКЗачету Из ТаблицаКЗачету Цикл
			// Считается зачтенной сумма, которая ранее была отражена в учете как начисленная
			Если СтрокаТаблицыКЗачету.Период > СтрокаТаблицыЗачета.Период
				Или СтрокаТаблицыЗачета.Сумма = 0 Тогда
				Продолжить;
			КонецЕсли;
			ЗачтеннаяСумма = Мин(СтрокаТаблицыКЗачету.Сумма, СтрокаТаблицыЗачета.Сумма);
			СтрокаТаблицыКЗачету.Сумма = СтрокаТаблицыКЗачету.Сумма - ЗачтеннаяСумма;
			СтрокаТаблицыЗачета.Сумма  = СтрокаТаблицыЗачета.Сумма - ЗачтеннаяСумма;
			МассивОбработанныхСтрок.Добавить(СтрокаТаблицыКЗачету);
		КонецЦикла;
		Если СтрокаТаблицыЗачета.Сумма <> 0 И ТаблицаКЗачету.Итог("Сумма") <> 0 Тогда
			ТаблицаКЗачету.Сортировать("Период Возр");
			Для Каждого СтрокаТаблицыКЗачету Из ТаблицаКЗачету Цикл
				// Считается зачтенной сумма, которая позже была отражена в учете как начисленная
				Если СтрокаТаблицыКЗачету.Период <= СтрокаТаблицыЗачета.Период
					Или СтрокаТаблицыЗачета.Сумма = 0 Тогда
					Продолжить;
				КонецЕсли;
				ЗачтеннаяСумма = Мин(СтрокаТаблицыКЗачету.Сумма, СтрокаТаблицыЗачета.Сумма);
				СтрокаТаблицыКЗачету.Сумма = СтрокаТаблицыКЗачету.Сумма - ЗачтеннаяСумма;
				СтрокаТаблицыЗачета.Сумма  = СтрокаТаблицыЗачета.Сумма - ЗачтеннаяСумма;
				МассивОбработанныхСтрок.Добавить(СтрокаТаблицыКЗачету);
			КонецЦикла;
		КонецЕсли;
		Для Каждого СтрокаТаблицыКЗачету Из МассивОбработанныхСтрок Цикл
			ТекущаяСтрока = ТаблицаРасчета.Найти(СтрокаТаблицыКЗачету.НомерСтроки, "НомерСтроки");
			Если ТекущаяСтрока <> Неопределено Тогда
				ТекущаяСтрока.Сумма = СтрокаТаблицыКЗачету.Сумма;
			КонецЕсли;
		КонецЦикла;
	КонецЦикла;
	
	ОчиститьТаблицуОтПустыхЗаписей(ТаблицаРасчета);
	
КонецПроцедуры

Процедура ТекущиеОстаткиПоНалогам(ОстаткиПоНалогам, ТаблицаРасчеты, УчтенныеДанные, Отбор, УточнятьПриоритет)
	
	ДатаСменыПоследовательностиЗачетаУплат = ДатаСменыПоследовательностиЗачетаУплат();
	
	ЭтоНалог       = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Отбор, "ЭтоНалог",       Ложь);
	Ретроспективно = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Отбор, "Ретроспективно", Ложь);
	
	Период         = НачалоДня(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Отбор, "Период",         Дата('00010101')));
	ПериодОплаты   = НачалоДня(ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(Отбор, "ПериодОплаты",   Дата('00010101')));
	
	ДополнитьОграничениеПериода = ЭтоНалог И Не Ретроспективно И УточнятьПриоритет;
	
	ОстаткиПоНалогам.Очистить();
	Для Каждого СтрокаТаблицы ИЗ ТаблицаРасчеты Цикл
		Если ЗначениеЗаполнено(Период) Тогда
			ВыполненоУсловиеПериода = НачалоДня(СтрокаТаблицы.Период) = Период;
		Иначе
			ВыполненоУсловиеПериода = ?(Ретроспективно, НачалоДня(СтрокаТаблицы.Период) <= ПериодОплаты, НачалоДня(СтрокаТаблицы.Период) > ПериодОплаты);
		КонецЕсли;
		Если ДополнитьОграничениеПериода Тогда
			ВыполненоУсловиеПериода = ВыполненоУсловиеПериода И СтрокаТаблицы.Период < ДатаСменыПоследовательностиЗачетаУплат;
		КонецЕсли;
		Если СтрокаТаблицы.ЭтоНалог = ЭтоНалог И ВыполненоУсловиеПериода Тогда
			НепогашеннаяСумма = СтрокаТаблицы.Сумма;
			УчтенныеСтроки = УчтенныеДанные.НайтиСтроки(Новый Структура("НомерСтроки", СтрокаТаблицы.НомерСтроки));
			Для Каждого УчтеннаяСтрока Из УчтенныеСтроки Цикл
				НепогашеннаяСумма = Макс(0, НепогашеннаяСумма - УчтеннаяСтрока.Сумма);
			КонецЦикла;
			Если НепогашеннаяСумма > 0 Тогда
				НоваяСтрока = ОстаткиПоНалогам.Добавить();
				ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
				НоваяСтрока.Сумма = НепогашеннаяСумма;
				// (*5)
				УточнитьПриоритетЗачета(УточнятьПриоритет, НоваяСтрока.Приоритет);
			КонецЕсли;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура УточнитьПриоритетЗачета(УточнитьПриоритет, Приоритет)
	
	Если Не УточнитьПриоритет Тогда
		Возврат;
	КонецЕсли;
	
	// До даты смены последовательности НДФЛ зачитываем по-старому
	Если Приоритет = 3 Тогда
		Приоритет = 1;
	ИначеЕсли Приоритет = 5 Тогда
		Приоритет = 2;
	КонецЕсли;
	
КонецПроцедуры

Процедура РаспределениеСуммыОплатыСанкцийПоПриоритетам(Реквизиты, СуммыЕдиногоНалоговогоПлатежа, ОстаткиПоНалогам, НаборДвиженийСанкции, УчтенныеДанные = Неопределено)
	
	ИспользуетсяЕдиныйНалоговыйПлатеж = Истина;
	
	// Приоритеты:
	Если Реквизиты.Период < ДатаСменыПоследовательностиЗачетаУплат() Тогда
		// - 3. Пени
		// - 4. Проценты
		// - 5. Штрафы
		НачальноеЗначение = 3;
		ЧислоПриоритетов  = 5;
	Иначе
		// - 6. Пени
		// - 7. Проценты
		// - 8. Штрафы
		НачальноеЗначение = 6;
		ЧислоПриоритетов  = 8;
	КонецЕсли;
	
	Для Приоритет = НачальноеЗначение По ЧислоПриоритетов Цикл
		ОстаткиПоСанкциям = ОстаткиПоНалогам.Скопировать(Новый Структура("Приоритет", Приоритет));
		Если СуммыЕдиногоНалоговогоПлатежа.Итог("Сумма") > 0 Тогда
			// При условии, что есть что погашать
			Для Каждого СтрокаТаблицы Из ОстаткиПоСанкциям Цикл
				Для Каждого СтрокаТаблицыПлатежа Из СуммыЕдиногоНалоговогоПлатежа Цикл
					Если СтрокаТаблицыПлатежа.Сумма <= 0 Тогда
						Продолжить;
					КонецЕсли;
					СуммаПогашения = Мин(СтрокаТаблицыПлатежа.Сумма, СтрокаТаблицы.Сумма);
					Если СуммаПогашения <> 0 Тогда
						
						НоваяСтрока = НаборДвиженийСанкции.Добавить();
						ЗаполнитьЗначенияСвойств(НоваяСтрока, Реквизиты);
						ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
						НоваяСтрока.Сумма             = СуммаПогашения;
						НоваяСтрока.ВидДвижения       = ВидДвиженияНакопления.Расход;
						НоваяСтрока.ПлатежныйДокумент = СтрокаТаблицыПлатежа.ПлатежныйДокумент;
						
						Если ИспользуетсяЕдиныйНалоговыйПлатеж Тогда
							// Уточнение периода уплаты - привязываемся к дате операции
							Если СтрокаТаблицыПлатежа.ДатаРегистратора < НачалоМесяца(Реквизиты.Период) Тогда
								ДатаОперации = НоваяСтрока.Период;
							Иначе
								ДатаОперации = Макс(СтрокаТаблицыПлатежа.ДатаРегистратора, НоваяСтрока.Период);
							КонецЕсли;
							НоваяСтрока.Период = ДатаОперации;
						КонецЕсли;
						
						Если УчтенныеДанные <> Неопределено Тогда
							НоваяСтрока = УчтенныеДанные.Добавить();
							ЗаполнитьЗначенияСвойств(НоваяСтрока, СтрокаТаблицы);
							НоваяСтрока.Сумма = СуммаПогашения;
						КонецЕсли;
						
						СтрокаТаблицы.Сумма        = СтрокаТаблицы.Сумма - СуммаПогашения;
						СтрокаТаблицыПлатежа.Сумма = СтрокаТаблицыПлатежа.Сумма - СуммаПогашения;
					КонецЕсли;
					Если СтрокаТаблицыПлатежа.Сумма <= 0 Тогда
						СтрокаТаблицыПлатежа.Сумма = 0;
						Прервать;
					КонецЕсли;
				КонецЦикла;
			КонецЦикла;
			НаборДвиженийСанкции.Записывать = Истина;
		КонецЕсли;
	КонецЦикла;
	
КонецПроцедуры

Процедура ОчиститьТаблицуОтПустыхЗаписей(ТаблицаДанных)
	
	МассивСтрокКУдалению = ТаблицаДанных.НайтиСтроки(Новый Структура("Сумма", 0));
	Для Каждого СтрокаМассива Из МассивСтрокКУдалению Цикл
		ТаблицаДанных.Удалить(СтрокаМассива);
	КонецЦикла;
	
КонецПроцедуры

// Если были возвраты налогов, то перед распределением оплат на налоги и санкции 
// необходимо учесть возвраты и уменьшить доступные суммы для оплат
Процедура РаспределитьВозвратыНалоговПоОплатам(ТаблицаСуммыЕдиногоНалоговогоПлатежа, ТаблицаРеквизиты, Движения)
	
	ОстатокКПогашению = 0;
	ОстатокОплат = 0;
	
	Для каждого СтрокаТЗ Из ТаблицаСуммыЕдиногоНалоговогоПлатежа Цикл
		Если СтрокаТЗ.Сумма > 0 Тогда
			ОстатокОплат = ОстатокОплат + СтрокаТЗ.Сумма;
		Иначе
			ОстатокКПогашению = ОстатокКПогашению + СтрокаТЗ.Сумма;
		КонецЕсли;
	КонецЦикла;
	
	Если ОстатокКПогашению = 0 Тогда
		Возврат;
	КонецЕсли;
	
	СуммаРаспределения 	= Мин(-ОстатокКПогашению, ОстатокОплат);
	ОстатокКПогашению 	= СуммаРаспределения;
	ОстатокОплат 		= СуммаРаспределения;
	
	Реквизиты = ТаблицаРеквизиты[0];
	ГоловнаяОрганизация = БухгалтерскийУчетПереопределяемый.ГоловнаяОрганизация(Реквизиты.Организация);
	НаборДвижений = Движения.РасчетыПоЕдиномуНалоговомуСчету;
	
	Итератор = ТаблицаСуммыЕдиногоНалоговогоПлатежа.Количество() - 1;
	
	Пока Итератор >= 0 Цикл
	
		СтрокаТЗ = ТаблицаСуммыЕдиногоНалоговогоПлатежа[Итератор];
		
		Если СтрокаТЗ.Сумма > 0 Тогда
			ЭтоОплата = Истина;
			СуммаДокумента = СтрокаТЗ.Сумма;
		Иначе
			ЭтоОплата = Ложь;
			СуммаДокумента = -СтрокаТЗ.Сумма;
		КонецЕсли;
		
		СуммаКОплате = Мин(?(ЭтоОплата,ОстатокОплат, ОстатокКПогашению), СуммаДокумента);
			
		Если СуммаКОплате = 0 Тогда
			Итератор = Итератор - 1;
			Продолжить;
		КонецЕсли;
		
		Если ЭтоОплата Тогда
			ОстатокОплат = ОстатокОплат - СуммаКОплате;
		Иначе
			ОстатокКПогашению = ОстатокКПогашению - СуммаКОплате;
		КонецЕсли;
		
		СтрокаДвижений = НаборДвижений.Добавить();
		СтрокаДвижений.ВидДвижения = ?(ЭтоОплата, ВидДвиженияНакопления.Расход, ВидДвиженияНакопления.Приход);
		ЗаполнитьЗначенияСвойств(СтрокаДвижений, Реквизиты);
		СтрокаДвижений.ГоловнаяОрганизация = ГоловнаяОрганизация;
		СтрокаДвижений.ПлатежныйДокумент = СтрокаТЗ.ПлатежныйДокумент;
		СтрокаДвижений.Сумма = СуммаКОплате;
		
		Если СуммаКОплате = СуммаДокумента ИЛИ  НЕ ЭтоОплата Тогда
			ТаблицаСуммыЕдиногоНалоговогоПлатежа.Удалить(Итератор)
		Иначе
			СтрокаТЗ.Сумма = СтрокаТЗ.Сумма - СуммаКОплате;
		КонецЕсли;
		Итератор = Итератор - 1;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

//-- НЕ УТ

#КонецОбласти
