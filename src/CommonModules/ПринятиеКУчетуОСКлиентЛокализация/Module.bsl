////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Принятие к учету ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныйПрограммныйИнтерфейс

#Область ФормаДокумента

// 
// Параметры:
// 	Элемент - ПолеФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриИзмененииРеквизита(Элемент, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьИзменениеРеквизита = Истина;
	
	//++ Локализация
	
	Объект = Форма.Объект;
	Элементы = Форма.Элементы;
	
	Если Элемент.Имя = Элементы.ВариантПримененияЦелевогоФинансирования.Имя Тогда
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ВариантПримененияЦелевогоФинансирования.Имя
		ИЛИ Элемент.Имя = Элементы.НедвижимоеИмущество.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ГруппаОС.Имя Тогда
	
		Если ЗначениеЗаполнено(Объект.ГруппаОС) Тогда
			ГруппыНедвижимогоИмущества = ВнеоборотныеАктивыКлиентСерверЛокализация.ГруппыНедвижимогоИмущества();
			Объект.НедвижимоеИмущество = (ГруппыНедвижимогоИмущества.Найти(Объект.ГруппаОС) <> Неопределено);
		КонецЕсли; 
		
		ТребуетсяВызовСервера = Истина;
		
		ДополнительныеПараметры = Новый Структура;
		ДополнительныеПараметры.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы", Элемент.Имя);
		
	ИначеЕсли Элемент.Имя = Элементы.ЦелевоеФинансированиеСчет.Имя
		ИЛИ Элемент.Имя = Элементы.АмортизационнаяГруппа.Имя
		ИЛИ Элемент.Имя = Элементы.МетодНачисленияАмортизацииБУ.Имя 
		ИЛИ Элемент.Имя = Элементы.ВключитьАмортизационнуюПремиюВСоставРасходов.Имя
		ИЛИ Элемент.Имя = Элементы.ПорядокУчетаНУ.Имя Тогда
		
		ТребуетсяВызовСервера = Истина;
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьБУ_Расширенная.Имя Тогда
		
		ОССтоимостьБУПриИзменении(Форма, ДополнительныеПараметры);
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьНУ.Имя Тогда
		
		ОССтоимостьНУПриИзменении(Форма);
		
	ИначеЕсли Элемент.Имя = Элементы.ОССтоимостьПР.Имя Тогда
		
		ОССтоимостьПРПриИзменении(Форма);
		
	КонецЕсли; 
	
	//-- Локализация
	
	ВнеоборотныеАктивыКлиентЛокализация.ПриИзмененииРеквизитаПринятияКУчетуОС(
		Элемент, Форма, ДополнительныеПараметры, ТребуетсяВызовСервера);
	
	Если ПродолжитьИзменениеРеквизита Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			Элемент.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
	
	КонецЕсли;
	
КонецПроцедуры

// 
// Параметры:
// 	Команда - КомандаФормы - 
// 	Форма - ФормаКлиентскогоПриложения - 
Процедура ПриВыполненииКоманды(Команда, Форма) Экспорт

	ДополнительныеПараметры = Неопределено;
	ТребуетсяВызовСервера = Ложь;
	ПродолжитьВыполнениеКоманды = Истина;
	
	//++ Локализация
	
	Если Команда.Имя = Форма.Команды.ЗаполнитьИсточникиФинансирования.Имя Тогда
		ТребуетсяВызовСервера = Истина;
	КонецЕсли; 
	
	//-- Локализация
	
	Если ПродолжитьВыполнениеКоманды Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьВыполнениеКоманды(
			Форма, 
			Команда.Имя, 
			ТребуетсяВызовСервера,
			ДополнительныеПараметры);
			
	КонецЕсли; 
	
КонецПроцедуры

Функция ТребуетсяВызовСервераДляНастройкиЭлементовФормы(Объект, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	Если СтруктураИзмененныхРеквизитов.Количество() = 0
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяГруппа")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НедвижимоеИмущество")
		
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")  
			И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
			И ЗначениеЗаполнено(Объект.СтатьяРасходовБУ) Тогда
			
		Возврат Истина;
	КонецЕсли; 
	//-- Локализация
	
	Возврат Ложь;

КонецФункции

Процедура ОбработкаНавигационнойСсылки(Форма, НавигационнаяСсылкаФорматированнойСтроки, СтандартнаяОбработка) Экспорт
	
	//++ Локализация
	
	Объект = Форма.Объект;
	
	Если НавигационнаяСсылкаФорматированнойСтроки = "УстановкаПорядкаУчетаНУ" Тогда
		СтандартнаяОбработка = Ложь;
		
		Форма.Модифицированность = Истина;
		Объект.ПорядокУчетаНУ = Форма.РекомендуемыйПорядокУчетаНУ;
		
		ДополнительныеПараметрыДействия = Новый Структура;
		ДополнительныеПараметрыДействия.Вставить("Выполнить_НастроитьЗависимыеЭлементыФормы");
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			Форма, 
			"ПорядокУчетаНУ", 
			Ложь,
			ДополнительныеПараметрыДействия);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура НачалоВыбора(Элемент, ДанныеВыбора, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.СтатьяРасходовБУ
		ИЛИ Элемент = Элементы.СтатьяРасходовНУ
		ИЛИ Элемент = Элементы.СтатьяРасходовНалог
		ИЛИ Элемент = Элементы.СтатьяРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораСтатьи(Форма, Элемент, СтандартнаяОбработка);
		
	ИначеЕсли Элемент = Элементы.АналитикаРасходовБУ
		ИЛИ Элемент = Элементы.АналитикаРасходовНУ
		ИЛИ Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.НачалоВыбораАналитикиРасходов(Форма, Элемент, СтандартнаяОбработка);
		
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура АвтоПодбор(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, Ожидание, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовБУ
		ИЛИ Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.АвтоПодборАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ОкончаниеВводаТекста(Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка, Форма) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	Если Элемент = Элементы.АналитикаРасходовБУ
		ИЛИ Элемент = Элементы.АналитикаРасходовНалог
		ИЛИ Элемент = Элементы.АналитикаРасходовАмортизационнойПремии Тогда
		
		ДоходыИРасходыКлиент.ОкончаниеВводаТекстаАналитикиРасходов(Форма, Элемент, Текст, ДанныеВыбора, ПараметрыПолученияДанных, СтандартнаяОбработка);
	КонецЕсли; 
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДокументНаОснованииПриИзменении(Форма) Экспорт
	
	//++ Локализация
	Объект = Форма.Объект;
	
	Если НЕ Объект.ДокументНаОсновании Тогда
		Возврат;
	КонецЕсли; 
		
	ОтборСписка = Новый Структура;
	ОтборСписка.Вставить("Проведен", Истина);
	Если ЗначениеЗаполнено(Объект.Организация) Тогда
		ОтборСписка.Вставить("Организация", Объект.Организация);
	КонецЕсли;
	
	ИмяФормыВыбора = "Документ.ИнвентаризацияОС.ФормаВыбора";
	Если ЗначениеЗаполнено(Объект.Местонахождение) Тогда
		ОтборСписка.Вставить("ПодразделениеОрганизации", Объект.Местонахождение);
	КонецЕсли;
	
	ПараметрыОповещения = Новый Структура;
	ПараметрыОповещения.Вставить("Форма", Форма);
	ОписаниеОповещения = Новый ОписаниеОповещения("ДокументНаОснованииПриИзмененииЗавершение", ЭтотОбъект, ПараметрыОповещения);
	
	ПараметрыФормы = Новый Структура;
	ПараметрыФормы.Вставить("Отбор", ОтборСписка);
	ОткрытьФорму(ИмяФормыВыбора, ПараметрыФормы,,,,, ОписаниеОповещения);
		
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область ФормаДокумента

//++ Локализация

Процедура ДокументНаОснованииПриИзмененииЗавершение(РезультатЗакрытия, ДополнительныеПараметры) Экспорт

	Форма = ДополнительныеПараметры.Форма;
	Объект = Форма.Объект;
	
	Если ЗначениеЗаполнено(РезультатЗакрытия) Тогда
		Объект.ДокументОснование = РезультатЗакрытия;
	Иначе
		Объект.ДокументНаОсновании = Ложь;
	КонецЕсли;
	
	Если ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		ТекстВопроса = НСтр("ru = 'Заполнить документ по данным документа-основания?';
							|en = 'Fill in the document by base document data?'");
		ПараметрыОповещения = Новый Структура;
		ПараметрыОповещения.Вставить("Форма", Форма);
		ОписаниеОповещения = Новый ОписаниеОповещения("ЗаполнитьПоДаннымОснованияЗавершение", ЭтотОбъект, ПараметрыОповещения);
		ПоказатьВопрос(ОписаниеОповещения, ТекстВопроса, РежимДиалогаВопрос.ДаНет); 
	КонецЕсли; 
	
КонецПроцедуры

Процедура ЗаполнитьПоДаннымОснованияЗавершение(РезультатВопроса, ДополнительныеПараметры) Экспорт
	
	Если РезультатВопроса = КодВозвратаДиалога.Да Тогда
		
		ОбщегоНазначенияУТКлиент.ПродолжитьИзменениеРеквизита(
			ДополнительныеПараметры.Форма, 
			"ДокументНаОсновании", 
			Истина);
			
	КонецЕсли;
	
КонецПроцедуры

Процедура ОССтоимостьБУПриИзменении(Форма, ДополнительныеПараметры)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	
	Если ТекущиеДанные.СтоимостьНУ = Форма.ЗначенияРеквизитовОСДоИзменения.СтоимостьБУ 
		И Форма.РасширеннаяСтоимостьРегл Тогда
		
		ТекущиеДанные.СтоимостьНУ = ТекущиеДанные.СтоимостьБУ;
	КонецЕсли;
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Выполнить_ЗаполнитьЗначенияРеквизитовОСДоИзменения");
	
КонецПроцедуры

Процедура ОССтоимостьНУПриИзменении(Форма)
	
	Если НЕ Форма.СлужебныеПараметрыФормы.ВедетсяУчетПостоянныхИВременныхРазниц Тогда
		Возврат;
	КонецЕсли;
	
	Элементы = Форма.Элементы;
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	
КонецПроцедуры

Процедура ОССтоимостьПРПриИзменении(Форма)
	
	Элементы = Форма.Элементы;
	
	ТекущиеДанные = Элементы.ОС.ТекущиеДанные;
	ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	Если ТекущиеДанные.СтоимостьВР < 0 Тогда
		ТекущиеДанные.СтоимостьНУ = ТекущиеДанные.СтоимостьНУ + ТекущиеДанные.СтоимостьВР;
		ТекущиеДанные.СтоимостьВР = ТекущиеДанные.СтоимостьБУ - ТекущиеДанные.СтоимостьНУ - ТекущиеДанные.СтоимостьПР;
	КонецЕсли;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
