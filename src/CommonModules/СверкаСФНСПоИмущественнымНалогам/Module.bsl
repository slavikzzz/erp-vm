#Область ПрограммныйИнтерфейс

// Срабатывает после записи объекта ДокументРеализацииПолномочийНалоговыхОрганов, когда уже записаны его файлы.
// 
// Параметры:
//  Сообщение - СправочникСсылка.ДокументыРеализацииПолномочийНалоговыхОрганов - Входящее сообщение от ФНС
//  Файлы - Массив из Структура - содержит:
// 		* Адрес - Строка - Адрес во временном хранилище.
// 		* ИмяФайла - Строка - Имя файла с расширением.
Процедура ПослеЗаписиДокументаРеализацииПолномочийНалоговыхОрганов(Сообщение, Файлы) Экспорт
	
	// Анализируем только сообщения с расчетом имущественных налогов: транспортного, земельного и налога на имущество.
	// Все прочее игнорируем.
	РеквизитыВходящегоСообщения = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Сообщение, "Организация, ВидДокумента");
	Если РеквизитыВходящегоСообщения.ВидДокумента <> Перечисления.ВидыНалоговыхДокументов.СообщениеОбИсчисленнойСуммеТранспортногоНалога
		 И РеквизитыВходящегоСообщения.ВидДокумента <> Перечисления.ВидыНалоговыхДокументов.СообщениеОбИсчисленнойСуммеЗемельногоНалога
		 И РеквизитыВходящегоСообщения.ВидДокумента <> Перечисления.ВидыНалоговыхДокументов.СообщениеОбИсчисленнойСуммеТранспортногоИмущественногоЗемельногоНалогов Тогда
		Возврат;
	КонецЕсли;
	
	ТекстОшибки = "";
	СведенияОРассчитанныхНалогах = СведенияОРассчитанныхНалогахИзФайлов(Файлы,, ТекстОшибки);
	
	Если Не ПустаяСтрока(ТекстОшибки) Тогда
		
		ЗаписьЖурналаРегистрации(НСтр("ru = 'Загрузка сообщения об исчисленных суммах имущественных налогов';
										|en = 'Import the message about the calculated amounts of property taxes'", 
										ОбщегоНазначения.КодОсновногоЯзыка()),
			УровеньЖурналаРегистрации.Предупреждение,
			Метаданные.Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов, 
			Сообщение, 
			ТекстОшибки);
			
	КонецЕсли;
	
	// Записываем (перезаписываем) все записи по конкретному отправителю целиком.
	НаборЗаписей = РегистрыСведений.СообщенияСРасчетомИмущественныхНалогов.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.Организация.Установить(РеквизитыВходящегоСообщения.Организация, Истина);
	
	Для Каждого Расчет Из СведенияОРассчитанныхНалогах.РассчитанныеНалоги Цикл
		
		НаборЗаписей.Очистить();
		
		НаборЗаписей.Отбор.Налог.Установить(Расчет.Налог, Истина);
		НаборЗаписей.Отбор.НалоговыйПериод.Установить(Расчет.НалоговыйПериод, Истина);
		НаборЗаписей.Отбор.КодОтправителя.Установить(Расчет.КодОтправителя, Истина);
		
		Для Каждого КодНалоговогоОргана Из Расчет.КодыНалоговыхОрганов Цикл
			Запись = НаборЗаписей.Добавить();
			ЗаполнитьЗначенияСвойств(Запись, Расчет);
			Запись.Организация = РеквизитыВходящегоСообщения.Организация;
			Запись.КодНалоговогоОргана = КодНалоговогоОргана;
			Запись.Сообщение = Сообщение; 
		КонецЦикла;
		
		НаборЗаписей.Записать(); // замещаем все записи по значениям отбора
		
	КонецЦикла;
	
КонецПроцедуры

// Собирает подробности о содержимом файлов с расчетом налогов.
// Используется как первая итерация обработки содержимого файлов. 
//
// Параметры:
//  Файлы - Массив из Структура - массив описаний вложений документа - содержит: 
//        * Адрес - Строка - адрес файла во временном хранилище или 
//        * Данные - ДвоичныеДанные - данные файла.
//        * ИмяФайла - Строка - Имя файла с расширением.
//  Отбор - Структура - отбор данных из файлов. Возможные свойства - содержит:
//           * Организация - СправочникСсылка.Организации
//           * Налог - ПеречислениеСсылка.ВидыИмущественныхНалогов
//           * НалоговыйПериод - Дата
//  ТекстОшибки - Строка - Описание возникших при выполнении процедуры ошибок.
// 
// Возвращаемое значение:
//  Структура - содержит:
//         * РассчитанныеНалоги - ТаблицаЗначений - таблица расчетов налогов, которые содержатся в файлах
//         * ИмяПервогоФайла - Строка - имя файла без расширения, которое записано внутри первого файла массива
//
Функция СведенияОРассчитанныхНалогахИзФайлов(Файлы, Отбор = Неопределено, ТекстОшибки = "") Экспорт 
	
	СведенияОРассчитанныхНалогах = Новый Структура;
	СведенияОРассчитанныхНалогах.Вставить("РассчитанныеНалоги", Новый ТаблицаЗначений); // данные, сгруппированные по налогам и периодам
	СведенияОРассчитанныхНалогах.Вставить("ИмяПервогоФайла", ""); // имя файла, записанное в атрибут ИдФайл первого файла
	
	РазобранныеСведенияОРасчетеНалога = Новый ТаблицаЗначений; // "сырые" данные
	РассчитанныеНалоги = СведенияОРассчитанныхНалогах.РассчитанныеНалоги; 
	
	ИзмеренияРегистра = Метаданные.РегистрыСведений.СообщенияСРасчетомИмущественныхНалогов.Измерения;
	
	РазобранныеСведенияОРасчетеНалога.Колонки.Добавить("Организация", ИзмеренияРегистра.Организация.Тип);
	РазобранныеСведенияОРасчетеНалога.Колонки.Добавить("Налог", ИзмеренияРегистра.Налог.Тип);
	РазобранныеСведенияОРасчетеНалога.Колонки.Добавить("НалоговыйПериод", ИзмеренияРегистра.НалоговыйПериод.Тип);
	РазобранныеСведенияОРасчетеНалога.Колонки.Добавить("КодОтправителя", ИзмеренияРегистра.КодОтправителя.Тип);
	РазобранныеСведенияОРасчетеНалога.Колонки.Добавить("КодНалоговогоОргана", ИзмеренияРегистра.КодНалоговогоОргана.Тип);
	
	РассчитанныеНалоги.Колонки.Добавить("Организация", ИзмеренияРегистра.Организация.Тип);
	РассчитанныеНалоги.Колонки.Добавить("Налог", ИзмеренияРегистра.Налог.Тип);
	РассчитанныеНалоги.Колонки.Добавить("НалоговыйПериод", ИзмеренияРегистра.НалоговыйПериод.Тип);
	РассчитанныеНалоги.Колонки.Добавить("КодОтправителя", ИзмеренияРегистра.КодОтправителя.Тип);
	РассчитанныеНалоги.Колонки.Добавить("КодыНалоговыхОрганов"); // массив
	
	// Если по виду документа сообщение нельзя отвергнуть, то далее проверяем вложения.
	// С 2022 года ФНС присылает расчет транспортного и земельного налогов в отдельных xml-файлах.
	// С 2023 года файл с расчетом будет общий для трех налогов: имущество, транспорт и земля.
	
	ОтборОрганизация = Неопределено;
	ГоловнаяОрганизация = Неопределено;
	ОтборНалог = Неопределено;
	ОтборНалоговыйПериод = Неопределено;
	
	Если Отбор <> Неопределено Тогда
		Если Отбор.Свойство("Организация", ОтборОрганизация) Тогда 
			ГоловнаяОрганизация = ОбщегоНазначенияБПВызовСервераПовтИсп.ГоловнаяОрганизация(ОтборОрганизация);
		КонецЕсли;
		Отбор.Свойство("Налог", ОтборНалог);
		Отбор.Свойство("НалоговыйПериод", ОтборНалоговыйПериод);
	КонецЕсли;

	ВозможныеНачалаИмениФайла = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ВозможныеНачалаИмениФайлаРасчета(ОтборНалог);
	
	ТекстОшибок = Новый Массив;
	
	Для Каждого Файл Из Файлы Цикл
		
		ИмяФайла = СокрЛП(Файл.ИмяФайла);
		
		Если Не СтрЗаканчиваетсяНа(ИмяФайла, ".xml") Тогда
			ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'У файла %1 неверное расширение: ожидается ""xml""';
												|en = 'The %1 file has an incorrect extension: XML is expected'"), ИмяФайла));
			Продолжить;
		КонецЕсли;
		
		НеверноеНачалоИмени = Истина;
		Для каждого ВозможноеНачалоФайла Из ВозможныеНачалаИмениФайла Цикл
			Если СтрНачинаетсяС(ИмяФайла, ВозможноеНачалоФайла) Тогда
				НеверноеНачалоИмени = Ложь;
				Прервать;
			КонецЕсли;
		КонецЦикла;

		Если НеверноеНачалоИмени Тогда
			НачалоФайлаОписание = Новый Массив;
			
			Если ВозможныеНачалаИмениФайла.Количество() > 2 Тогда
				ПеречислениеЧерезИ = Новый Массив;
				Для Эл = 0 По ВозможныеНачалаИмениФайла.ВГраница() - 1 Цикл
					ПеречислениеЧерезИ.Добавить("""" + ВозможныеНачалаИмениФайла[Эл] + """");
				КонецЦикла;
				НачалоФайлаОписание.Добавить(СтрСоединить(ПеречислениеЧерезИ, " "+ НСтр("ru = 'и';
																						|en = 'and'") + " "));
				НачалоФайлаОписание.Добавить("""" + ВозможныеНачалаИмениФайла[ВозможныеНачалаИмениФайла.ВГраница()] + """");
			Иначе
				Для Эл = 0 По ВозможныеНачалаИмениФайла.ВГраница() Цикл
					НачалоФайлаОписание.Добавить("""" + ВозможныеНачалаИмениФайла[Эл] + """");
				КонецЦикла;
			КонецЕсли;
			ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'У файла %1 неверный формат имени: имя файла должно начинаться на %2';
												|en = 'The %1 file has an incorrect name format. The file name must begin with %2'"),
			    ИмяФайла,
				СтрСоединить(НачалоФайлаОписание, " " + НСтр("ru = ' или ';
															|en = ' или '") + " ")));
			Продолжить;
		КонецЕсли;
		
		Если ТипЗнч(Файл) = Тип("Структура") И Файл.Свойство("Адрес") Тогда
			ДанныеФайла = Файл.Адрес;
		Иначе
			ДанныеФайла = Файл.Данные;
		КонецЕсли;
		
		Попытка
			ПредставлениеXML = Справочники.ДокументыРеализацииПолномочийНалоговыхОрганов.ТекстСообщения(ДанныеФайла);
			ДеревоЗагрузки = УведомлениеОСпецрежимахНалогообложения.СформироватьДеревоЗагрузки(ПредставлениеXML);
		Исключение
			ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'Ошибка при чтении файла %1. Возможно, файл имеет неверный формат:
				|%2';
				|en = 'An error occurred while reading the %1 file. The file might have an incorrect format:
				|%2'"),
				ИмяФайла,
				ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
			Продолжить;
		КонецПопытки;
	
		// Атрибут ИдФайл содержит имя файла в формате 1152006_O_P_N1_GGGGMMDD_N2, где:
		// 1152006 - префикс, принимающий значение кода документа в соответствии с КНД (также может принимать значения 1153007 и 1152029);
		// O - идентификатор налогового органа, сформировавшего файл, - четырехразрядный код налогового органа;
		// P - идентификатор налогоплательщика, для которого предназначен файл, имеет вид:
		// для организаций - девятнадцатиразрядный код (ИНН и КПП организации);
		УзелИмяФайла = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/ИдФайл", "ИмяЭлемента");
		ИдФайл = УзелИмяФайла.ЗначениеЭлемента; //имя файла без расширения
		Если ПустаяСтрока(СведенияОРассчитанныхНалогах.ИмяПервогоФайла) Тогда
			СведенияОРассчитанныхНалогах.ИмяПервогоФайла = ИдФайл;
		КонецЕсли;	
		
		ЧастиИмени = СтрРазделить(ИдФайл, "_");
		
		КодОтправителя = "";
		Если ЧастиИмени.Количество() > 1 Тогда
			КодОтправителя = ЧастиИмени[1];
		КонецЕсли; 
		
		ИННПолучателя = "";
		Организация = Справочники.Организации.ПустаяСсылка();
		Если ЧастиИмени.Количество() > 2 Тогда
			ИННПолучателя = Лев(ЧастиИмени[2], 10);
			Организация = ОрганизацииЛокализация.НайтиОрганизацию(ИННПолучателя);
		КонецЕсли; 

		Если ЗначениеЗаполнено(ГоловнаяОрганизация) И ГоловнаяОрганизация <> Организация Тогда
			ТекстОшибок.Добавить(СтрШаблон(Нстр("ru = 'Организация в файле %1 (ИНН %2) не соответствует текущей.';
												|en = 'The company in the %1 file (TIN %2) does not match the current one.'"),
				ИмяФайла, ИННПолучателя));
			Продолжить;
		КонецЕсли;

		// Если есть отбор по организации, то берем указанную организацию (может быть обособленным подразделением).
		// В ином случае берем организацию, найденную по ИНН из файла (всегда головная).
		Организация = ?(ЗначениеЗаполнено(ОтборОрганизация), ОтборОрганизация, Организация);
		
		ВидыНалогов = Перечисления.ВидыИмущественныхНалогов;
		
		ЭтоРасчетТранспортногоНалога = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаТранспортногоНалога(ИмяФайла);
		ЭтоРасчетЗемельногоНалога = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаЗемельногоНалога(ИмяФайла);
		ЭтоРасчетИмущественныхНалогов = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.ЭтоФайлРасчетаИмущественныхНалогов(ИмяФайла);
		
		// ТРАНСПОРТНЫЙ НАЛОГ
		Если (ЭтоРасчетТранспортногоНалога Или ЭтоРасчетИмущественныхНалогов)
			 И (Не ЗначениеЗаполнено(ОтборНалог) Или ОтборНалог = ВидыНалогов.ТранспортныйНалог) Тогда
			Попытка
				СтрокиРасчета = СтрокиРасчетаНалога(ДеревоЗагрузки, ВидыНалогов.ТранспортныйНалог);
			Исключение
				ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'Ошибка при чтении файла %1. Возможно, файл имеет неверный формат:
					|%2';
					|en = 'An error occurred while reading the %1 file. The file might have an incorrect format:
					|%2'"),
					ИмяФайла,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
				Продолжить;
			КонецПопытки;
			ДополнитьСведенияОРасчетеНалога(РазобранныеСведенияОРасчетеНалога, СтрокиРасчета,
				Организация, ВидыНалогов.ТранспортныйНалог, КодОтправителя, ОтборНалоговыйПериод);
		КонецЕсли;
		
		// ЗЕМЕЛЬНЫЙ НАЛОГ
		Если (ЭтоРасчетЗемельногоНалога Или ЭтоРасчетИмущественныхНалогов)
			 И (Не ЗначениеЗаполнено(ОтборНалог) Или ОтборНалог = ВидыНалогов.ЗемельныйНалог) Тогда
			Попытка
				СтрокиРасчета = СтрокиРасчетаНалога(ДеревоЗагрузки, ВидыНалогов.ЗемельныйНалог);
			Исключение
				ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'Ошибка при чтении файла %1. Возможно, файл имеет неверный формат:
					|%2';
					|en = 'An error occurred while reading the %1 file. The file might have an incorrect format:
					|%2'"),
					ИмяФайла,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
				Продолжить;
			КонецПопытки;
			ДополнитьСведенияОРасчетеНалога(РазобранныеСведенияОРасчетеНалога, СтрокиРасчета,
				Организация, ВидыНалогов.ЗемельныйНалог, КодОтправителя, ОтборНалоговыйПериод);
		КонецЕсли;

		// НАЛОГ НА ИМУЩЕСТВО
		Если ЭтоРасчетИмущественныхНалогов
			 И (Не ЗначениеЗаполнено(ОтборНалог) Или ОтборНалог = ВидыНалогов.НалогНаИмущество) Тогда
			Попытка
				СтрокиРасчета = СтрокиРасчетаНалога(ДеревоЗагрузки, ВидыНалогов.НалогНаИмущество);
			Исключение
				ТекстОшибок.Добавить(СтрШаблон(НСтр("ru = 'Ошибка при чтении файла %1. Возможно, файл имеет неверный формат:
					|%2';
					|en = 'An error occurred while reading the %1 file. The file might have an incorrect format:
					|%2'"),
					ИмяФайла,
					ПодробноеПредставлениеОшибки(ИнформацияОбОшибке())));
				Продолжить;
			КонецПопытки;
			ДополнитьСведенияОРасчетеНалога(РазобранныеСведенияОРасчетеНалога, СтрокиРасчета,
				Организация, ВидыНалогов.НалогНаИмущество, КодОтправителя, ОтборНалоговыйПериод);
		КонецЕсли;

	КонецЦикла;

	ТекстОшибки = СтрСоединить(ТекстОшибок, Символы.ПС);
	
	Если РазобранныеСведенияОРасчетеНалога.Количество() = 0 Тогда
		Возврат СведенияОРассчитанныхНалогах;
	КонецЕсли;	
	
	// За конкретный налоговый период по каждому из налоговых органов - отправителей (КодОтправителя)
	// у организации может быть только одна версия расчета налога за конкретный период.
	// При этом в самом расчете могут быть объекты, учтенные в разных налоговых органах (КодНалоговогоОргана). 
	// По каждому налогу за конкретный период сформируем массив кодов налоговых органов, по которым составлен расчет.
	ИзмеренияКонтроляУникальности = "Организация, Налог, НалоговыйПериод, КодОтправителя";
	РазобранныеСведенияОРасчетеНалога.Свернуть("Организация, Налог, НалоговыйПериод, КодОтправителя, КодНалоговогоОргана");

	СведенияОРассчитанныхНалогах.РассчитанныеНалоги = РазобранныеСведенияОРасчетеНалога.Скопировать(, ИзмеренияКонтроляУникальности);
	РассчитанныеНалоги = СведенияОРассчитанныхНалогах.РассчитанныеНалоги;
	РассчитанныеНалоги.Свернуть(ИзмеренияКонтроляУникальности);
	РассчитанныеНалоги.Колонки.Добавить("КодыНалоговыхОрганов"); // массив

	РазобранныеСведенияОРасчетеНалога.Индексы.Добавить(ИзмеренияКонтроляУникальности);
	Поиск = Новый Структура(ИзмеренияКонтроляУникальности);

	Для Каждого СтрокаРасчета Из РассчитанныеНалоги Цикл
		ЗаполнитьЗначенияСвойств(Поиск, СтрокаРасчета);
		КодыНалоговыхОрганов = Новый Массив;
		Для Каждого СтрокаИсходныхСведений Из РазобранныеСведенияОРасчетеНалога.НайтиСтроки(Поиск) Цикл
			КодыНалоговыхОрганов.Добавить(СтрокаИсходныхСведений.КодНалоговогоОргана);
		КонецЦикла;
		СтрокаРасчета.КодыНалоговыхОрганов = КодыНалоговыхОрганов;
	КонецЦикла;

	Возврат СведенияОРассчитанныхНалогах;

КонецФункции

// Выбирает строки расчета нужного налога из дерева структуры xml-файла
//
// Параметры:
//  ДеревоЗагрузки - ДеревоЗначений - результат разбора файла расчета налога
//  Налог - ПеречислениеСсылка.ВидыИмущественныхНалогов - налог, который нужно выбрать из файла
// 
// Возвращаемое значение:
//  Массив - Массив из СтрокаДереваЗначений - с расчетом налога. 
//
Функция СтрокиРасчетаНалога(ДеревоЗагрузки, Налог) Экспорт

	СтрокиРасчета = Неопределено;
	ВидыНалогов = Перечисления.ВидыИмущественныхНалогов;
	
	УзелКНД = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, "Файл/Документ/КНД", "ИмяЭлемента");
	ПутьКРасчетуНалога = "";
	ПутьКПересчетуНалога = "";
	ИмяУзлаРасчетНалога = "";
	ИмяУзлаПересчетНалога = "";
	ИмяУзлаПересчетПоОбъекту = "";
	
	Если Налог = ВидыНалогов.ТранспортныйНалог 
		 И УзелКНД.ЗначениеЭлемента = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаТранспортногоНалога() Тогда
		
		ПутьКРасчетуНалога = "Файл/Документ/СообщИсчНОТрНал/ИсчТрНал";
		ПутьКПересчетуНалога = "Файл/Документ/СообщИсчНОТрНал/ПерТрНал";
		ИмяУзлаРасчетНалога = "ИсчТрНал";
		ИмяУзлаПересчетНалога = "ПерТрНал";
		ИмяУзлаПересчетПоОбъекту = "СведТСПер";
		
	ИначеЕсли Налог = ВидыНалогов.ЗемельныйНалог
		 И УзелКНД.ЗначениеЭлемента = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаЗемельногоНалога() Тогда
		
		ПутьКРасчетуНалога = "Файл/Документ/СообщИсчНОЗемНал/ИсчЗемНал";
		ПутьКПересчетуНалога = "Файл/Документ/СообщИсчНОЗемНал/ПерЗемНал";
		ИмяУзлаРасчетНалога = "ИсчЗемНал";
		ИмяУзлаПересчетНалога = "ПерЗемНал";
		ИмяУзлаПересчетПоОбъекту = "СведЗУПер";
		
	ИначеЕсли УзелКНД.ЗначениеЭлемента = СверкаСФНСПоИмущественнымНалогамФормыКлиентСервер.КНДРасчетаИмущественныхНалогов() Тогда	
		
		Если Налог = ВидыНалогов.ТранспортныйНалог Тогда
		
			ПутьКРасчетуНалога = "Файл/Документ/СообщИсчНОНал/ТрНалог/ИсчТрНал";
			ПутьКПересчетуНалога = "Файл/Документ/СообщИсчНОНал/ТрНалог/ПерТрНал";
			ИмяУзлаРасчетНалога = "ИсчТрНал";
			ИмяУзлаПересчетНалога = "ПерТрНал";
			ИмяУзлаПересчетПоОбъекту = "СведТСПер";
			
		ИначеЕсли Налог = ВидыНалогов.ЗемельныйНалог Тогда	
			
			ПутьКРасчетуНалога = "Файл/Документ/СообщИсчНОНал/ЗемНалог/ИсчЗемНал";
			ПутьКПересчетуНалога = "Файл/Документ/СообщИсчНОНал/ЗемНалог/ПерЗемНал";
			ИмяУзлаРасчетНалога = "ИсчЗемНал";
			ИмяУзлаПересчетНалога = "ПерЗемНал";
			ИмяУзлаПересчетПоОбъекту = "СведЗУПер";
			
		ИначеЕсли Налог = ВидыНалогов.НалогНаИмущество Тогда	
			
			ПутьКРасчетуНалога = "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ИсчНалИмОрг";
			ПутьКПересчетуНалога = "Файл/Документ/СообщИсчНОНал/НалогИмОрг/ПерНалИмОрг";
			ИмяУзлаРасчетНалога = "ИсчНалИмОрг";
			ИмяУзлаПересчетНалога = "ПерНалИмОрг";
			ИмяУзлаПересчетПоОбъекту = "СведИмОргПер";
			
		КонецЕсли;
			
	КонецЕсли;

	СтрокиРасчета = Новый Массив;
	ДанныеПоИсчисленномуНалогу = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, ПутьКРасчетуНалога, "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоИсчисленномуНалогу) = Тип("СтрокаДереваЗначений") Тогда
		// Найдены сведения по расчету одного объекта.
		// В расчете могут быть и другие объекты - выберем все дочерние элементы родителя, содержащие расчет по объектам.
		СтрокиРасчета = ДанныеПоИсчисленномуНалогу.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяУзлаРасчетНалога));
	КонецЕсли;

	// Возможно, по некоторым объектам выполнен пересчет налога.
	// В этом случае пересчет хранится в отдельном(-ых) узле(-ах). Дополним строки расчета данными пересчета.
	ДанныеПоПересчетуНалога = УведомлениеОСпецрежимахНалогообложения.НайтиУзелВДеревеПоПути(ДеревоЗагрузки, ПутьКПересчетуНалога, "ИмяЭлемента");
	Если ТипЗнч(ДанныеПоПересчетуНалога) = Тип("СтрокаДереваЗначений") Тогда
		// Есть как минимум 1 узел пересчета налога. Но их может быть несколько - обойдем все узлы пересчета в родительском узле.
		УзлыПересчета = ДанныеПоПересчетуНалога.Родитель.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяУзлаПересчетНалога));
		Для Каждого УзелПересчета Из УзлыПересчета Цикл 
			СтрокиПересчета = УзелПересчета.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяУзлаПересчетПоОбъекту));
			ОбщегоНазначенияКлиентСервер.ДополнитьМассив(СтрокиРасчета, СтрокиПересчета);
		КонецЦикла;
	КонецЕсли;

	Возврат СтрокиРасчета;
	
КонецФункции

// Получает значение атрибута строки сведений об объекте налогообложения.
//
// Параметры:
//  СтрокаРасчета - СтрокаДереваЗначений - строка дерева узлов, полученного из xml-файла
//                  с расчетом налога.
//  ИмяПараметра - Строка - наименование атрибута узла со сведениями об объекте налогообложения.
// 
// Возвращаемое значение:
//  Строка - строковое представление значения атрибута.
//
Функция ЗначениеПараметраРасчета(СтрокаРасчета, ИмяПараметра) Экспорт 
	
	ОтобранныеСтроки = СтрокаРасчета.Строки.НайтиСтроки(Новый Структура("ИмяЭлемента", ИмяПараметра));
	Если ОтобранныеСтроки.Количество() = 1 Тогда 
		Возврат ОтобранныеСтроки[0].ЗначениеЭлемента;
	Иначе
		Возврат "";
	КонецЕсли;
	
КонецФункции

// Формирует таблицу для поиска основного средства на основании данных его регистрации
// в качестве объекта налогообложения.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - владелец объекта налогообложения
//  Налог - ПеречислениеСсылка.ВидыИмущественныхНалогов - налог, которым облагаются основные средства
//  ПоискПоVIN - Булево - нужно искать ТС по VIN (имеет смысл только для транспортного налога)
// 
// Возвращаемое значение:
//  ТаблицаЗначений: 
//  * ОсновноеСредство - СправочникСсылка.ОбъектыЭксплуатации - объект налогообложения.
//  * Идентификатор - Строка - регистрационный номер ТС или кадастровый номер недвижимости (участка).
//  * КодВидаТС - Строка - код вида ТС (только для транспортного налога).
Функция ИдентификаторыОбъектовНалогообложения(Организация, Налог, ПоискПоVIN = Ложь) Экспорт 

	ИдентификаторыОбъектов = Новый ТаблицаЗначений;
	Запрос = Новый Запрос;
	
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	ПериодРасчета = Дата(3999,12,31);
	ПараметрыРасчета = Новый Структура;
	ПараметрыРасчета.Вставить("Организация", Организация);
	ПараметрыРасчета.Вставить("ПериодРасчета", ПериодРасчета);
	ПараметрыРасчета.Вставить("МенеджерВременныхТаблиц", Запрос.МенеджерВременныхТаблиц);

	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		РасчетИмущественныхНалогов.СформироватьТаблицуРегистрацияТранспортныхСредствЗаписи(ПараметрыРасчета,КонецГода(ПериодРасчета));

		// Запрос всегда выбирает данные о соответствии гос номера и ОС.
		// Если в расчете ФНС есть VIN, то дополнительно в таблицу поиска записывается соответствие VIN и ОС.
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.Период КАК Период,
		|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер,
		|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТранспортногоСредства
		|ПОМЕСТИТЬ РегистрацияТранспортныхСредств
		|ИЗ
		|	РегистрацияТранспортныхСредств_Записи КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация = &Организация
		|	И РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.Период КАК Период,
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак,
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер
		|ПОМЕСТИТЬ СнятиеСУчетаТранспортныхСредств
		|ИЗ
		|	РегистрацияТранспортныхСредств_Записи КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	РегистрацияТранспортныхСредств.Организация = &Организация
		|	И НЕ РегистрацияТранспортныхСредств.ВключатьВНалоговуюБазу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияТранспортныхСредств.Период) КАК Период,
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак
		|ПОМЕСТИТЬ ПоследниеРегистрацииРегНомеров
		|ИЗ
		|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрационныйЗнак,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СнятиеСУчетаТранспортныхСредств.Период) КАК Период,
		|	СнятиеСУчетаТранспортныхСредств.РегистрационныйЗнак КАК РегистрационныйЗнак
		|ПОМЕСТИТЬ ПоследниеСнятияСУчетаРегНомеров
		|ИЗ
		|	СнятиеСУчетаТранспортныхСредств КАК СнятиеСУчетаТранспортныхСредств
		|
		|СГРУППИРОВАТЬ ПО
		|	СнятиеСУчетаТранспортныхСредств.РегистрационныйЗнак
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	РегистрационныйЗнак,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияТранспортныхСредств.Период) КАК Период,
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер
		|ПОМЕСТИТЬ ПоследниеРегистрацииVIN
		|ИЗ
		|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|ГДЕ
		|	&ПоискПоVIN
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификационныйНомер,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(СнятиеСУчетаТранспортныхСредств.Период) КАК Период,
		|	СнятиеСУчетаТранспортныхСредств.ИдентификационныйНомер КАК ИдентификационныйНомер
		|ПОМЕСТИТЬ ПоследниеСнятияСУчетаVIN
		|ИЗ
		|	СнятиеСУчетаТранспортныхСредств КАК СнятиеСУчетаТранспортныхСредств
		|ГДЕ
		|	&ПоискПоVIN
		|
		|СГРУППИРОВАТЬ ПО
		|	СнятиеСУчетаТранспортныхСредств.ИдентификационныйНомер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ИдентификационныйНомер,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияТранспортныхСредств.РегистрационныйЗнак КАК Идентификатор,
		|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства КАК КодВидаТС,
		|	ЕСТЬNULL(ПоследниеСнятияСУчетаРегНомеров.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСнятияСУчета
		|ИЗ
		|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРегистрацииРегНомеров КАК ПоследниеРегистрацииРегНомеров
		|		ПО РегистрацияТранспортныхСредств.РегистрационныйЗнак = ПоследниеРегистрацииРегНомеров.РегистрационныйЗнак
		|			И РегистрацияТранспортныхСредств.Период = ПоследниеРегистрацииРегНомеров.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСнятияСУчетаРегНомеров КАК ПоследниеСнятияСУчетаРегНомеров
		|		ПО РегистрацияТранспортныхСредств.РегистрационныйЗнак = ПоследниеСнятияСУчетаРегНомеров.РегистрационныйЗнак
		|			И РегистрацияТранспортныхСредств.Период < ПоследниеСнятияСУчетаРегНомеров.Период
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ
		|	РегистрацияТранспортныхСредств.ОсновноеСредство,
		|	РегистрацияТранспортныхСредств.ИдентификационныйНомер,
		|	РегистрацияТранспортныхСредств.КодВидаТранспортногоСредства,
		|	ЕСТЬNULL(ПоследниеСнятияСУчетаVIN.Период, ДАТАВРЕМЯ(1, 1, 1))
		|ИЗ
		|	РегистрацияТранспортныхСредств КАК РегистрацияТранспортныхСредств
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРегистрацииVIN КАК ПоследниеРегистрацииVIN
		|		ПО РегистрацияТранспортныхСредств.ИдентификационныйНомер = ПоследниеРегистрацииVIN.ИдентификационныйНомер
		|			И РегистрацияТранспортныхСредств.Период = ПоследниеРегистрацииVIN.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСнятияСУчетаVIN КАК ПоследниеСнятияСУчетаVIN
		|		ПО РегистрацияТранспортныхСредств.ИдентификационныйНомер = ПоследниеСнятияСУчетаVIN.ИдентификационныйНомер
		|			И РегистрацияТранспортныхСредств.Период < ПоследниеСнятияСУчетаVIN.Период
		|ГДЕ
		|	&ПоискПоVIN";

		Запрос.УстановитьПараметр("ПоискПоVIN", ПоискПоVIN);
		
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		
		РасчетИмущественныхНалогов.СформироватьТаблицуРегистрацияЗемельныхУчастковЗаписи(
										ПараметрыРасчета,
										КонецГода(ПериодРасчета),
										Неопределено);
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.Период КАК Период,
		|	РегистрацияЗемельныхУчастков.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастков.ОсновноеСредство.Наименование КАК НаименованиеОбъекта,
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК КадастровыйНомер
		|ПОМЕСТИТЬ РегистрацияЗемельныхУчастков
		|ИЗ
		|	РегистрацияЗемельныхУчастков_Записи КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Организация = &Организация
		|	И РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияЗемельныхУчастков.Период) КАК Период,
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК КадастровыйНомер
		|ПОМЕСТИТЬ ПоследниеРегистрацииКадастровыхНомеров
		|ИЗ
		|	РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КадастровыйНомер,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияЗемельныхУчастков.Период) КАК Период,
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК КадастровыйНомер
		|ПОМЕСТИТЬ ПоследниеСнятияСУчетаЗемельныхУчастков
		|ИЗ
		|	РегистрацияЗемельныхУчастков_Записи КАК РегистрацияЗемельныхУчастков
		|ГДЕ
		|	РегистрацияЗемельныхУчастков.Организация = &Организация
		|	И НЕ РегистрацияЗемельныхУчастков.ВключатьВНалоговуюБазу
		|
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияЗемельныхУчастков.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияЗемельныхУчастков.НаименованиеОбъекта КАК НаименованиеОбъекта,
		|	РегистрацияЗемельныхУчастков.КадастровыйНомер КАК Идентификатор,
		|	ЕСТЬNULL(ПоследниеСнятияСУчетаЗемельныхУчастков.Период, ДАТАВРЕМЯ(1, 1, 1)) КАК ДатаСнятияСУчета
		|ИЗ
		|	РегистрацияЗемельныхУчастков КАК РегистрацияЗемельныхУчастков
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРегистрацииКадастровыхНомеров КАК ПоследниеРегистрацииКадастровыхНомеров
		|		ПО РегистрацияЗемельныхУчастков.КадастровыйНомер = ПоследниеРегистрацииКадастровыхНомеров.КадастровыйНомер
		|			И РегистрацияЗемельныхУчастков.Период = ПоследниеРегистрацииКадастровыхНомеров.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСнятияСУчетаЗемельныхУчастков КАК ПоследниеСнятияСУчетаЗемельныхУчастков
		|		ПО РегистрацияЗемельныхУчастков.КадастровыйНомер = ПоследниеСнятияСУчетаЗемельныхУчастков.КадастровыйНомер
		|			И РегистрацияЗемельныхУчастков.Период < ПоследниеСнятияСУчетаЗемельныхУчастков.Период";
	
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда 
		РасчетИмущественныхНалогов.СформироватьТаблицуСтавкиНалогаНаИмуществоПоОтдельнымОСЗаписи(ПараметрыРасчета,
																									Дата(1,1,1),
																									КонецГода(ПериодРасчета));
		
		Запрос.Текст = 
		"ВЫБРАТЬ
		|	РегистрацияИмущества.Период КАК Период,
		|	РегистрацияИмущества.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияИмущества.ОсновноеСредство.Наименование КАК НаименованиеОбъекта,
		|	ВЫБОР
		|		КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|			ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|		ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|	КОНЕЦ КАК КадастровыйНомер
		|ПОМЕСТИТЬ РегистрацияИмущества
		|ИЗ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи КАК РегистрацияИмущества
		|ГДЕ
		|	РегистрацияИмущества.Организация = &Организация
		|	И РегистрацияИмущества.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияИмущества.Период) КАК Период,
		|	РегистрацияИмущества.КадастровыйНомер КАК КадастровыйНомер
		|ПОМЕСТИТЬ ПоследниеРегистрацииКадастровыхНомеров
		|ИЗ
		|	РегистрацияИмущества КАК РегистрацияИмущества
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияИмущества.КадастровыйНомер
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	КадастровыйНомер,
		|	Период
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияИмущества.Период) КАК Период,
		|	ВЫБОР
		|		КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|			ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|		ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|	КОНЕЦ КАК КадастровыйНомер
		|ПОМЕСТИТЬ ПериодУстановкиДатыСнятияСУчета
		|ИЗ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи КАК РегистрацияИмущества
		|ГДЕ
		|	РегистрацияИмущества.Организация = &Организация
		|	И РегистрацияИмущества.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
		|	И РегистрацияИмущества.ДатаПрекращенияПраваСобственности <> ДАТАВРЕМЯ(1, 1, 1)
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|			ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|		ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияИмущества.ДатаПрекращенияПраваСобственности) КАК ДатаСнятияСУчета,
		|	ВЫБОР
		|		КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|			ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|		ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|	КОНЕЦ КАК КадастровыйНомер
		|ПОМЕСТИТЬ ПоследниеСнятияСУчетаИмущества
		|ИЗ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи КАК РегистрацияИмущества
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПериодУстановкиДатыСнятияСУчета КАК ПериодУстановкиДатыСнятияСУчета
		|		ПО РегистрацияИмущества.Период = ПериодУстановкиДатыСнятияСУчета.Период
		|		И ВЫБОР
		|			КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|				ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|			ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|		КОНЕЦ = ПериодУстановкиДатыСнятияСУчета.КадастровыйНомер
		|ГДЕ
		|	РегистрацияИмущества.Организация = &Организация
		|	И РегистрацияИмущества.НалоговаяБаза = ЗНАЧЕНИЕ(Перечисление.НалоговаяБазаПоНалогуНаИмущество.КадастроваяСтоимость)
		|	И РегистрацияИмущества.ДатаПрекращенияПраваСобственности <> ДАТАВРЕМЯ(1, 1, 1)
		|СГРУППИРОВАТЬ ПО
		|	ВЫБОР
		|		КОГДА РегистрацияИмущества.КадастровыйНомер = """"
		|			ТОГДА РегистрацияИмущества.КадастровыйНомерПомещения
		|		ИНАЧЕ РегистрацияИмущества.КадастровыйНомер
		|	КОНЕЦ
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	МАКСИМУМ(РегистрацияИмущества.Период) КАК Период,
		|	РегистрацияИмущества.ОсновноеСредство КАК ОсновноеСредство
		|ПОМЕСТИТЬ ПрекращениеНачисленияНалога
		|ИЗ
		|	СтавкиНалогаНаИмуществоПоОтдельнымОС_Записи КАК РегистрацияИмущества
		|ГДЕ
		|	РегистрацияИмущества.НеПодлежитНалогообложению
		|	И РегистрацияИмущества.Организация = &Организация
		|СГРУППИРОВАТЬ ПО
		|	РегистрацияИмущества.ОсновноеСредство
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ОсновноеСредство
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	РегистрацияИмущества.ОсновноеСредство КАК ОсновноеСредство,
		|	РегистрацияИмущества.НаименованиеОбъекта КАК НаименованиеОбъекта,
		|	РегистрацияИмущества.КадастровыйНомер КАК Идентификатор,
		|	ВЫБОР
		|		КОГДА ПоследниеСнятияСУчетаИмущества.ДатаСнятияСУчета ЕСТЬ NULL
		|			ТОГДА ЕСТЬNULL(ПрекращениеНачисленияНалога.Период, ДАТАВРЕМЯ(1, 1, 1))
		|		КОГДА ПрекращениеНачисленияНалога.Период ЕСТЬ NULL
		|			ТОГДА ПоследниеСнятияСУчетаИмущества.ДатаСнятияСУчета
		|		КОГДА ПоследниеСнятияСУчетаИмущества.ДатаСнятияСУчета < ПрекращениеНачисленияНалога.Период
		|			ТОГДА ПоследниеСнятияСУчетаИмущества.ДатаСнятияСУчета
		|		ИНАЧЕ ПрекращениеНачисленияНалога.Период
		|	КОНЕЦ КАК ДатаСнятияСУчета
		|ИЗ
		|	РегистрацияИмущества КАК РегистрацияИмущества
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ПоследниеРегистрацииКадастровыхНомеров КАК ПоследниеРегистрацииКадастровыхНомеров
		|		ПО РегистрацияИмущества.КадастровыйНомер = ПоследниеРегистрацииКадастровыхНомеров.КадастровыйНомер
		|		И РегистрацияИмущества.Период = ПоследниеРегистрацииКадастровыхНомеров.Период
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПоследниеСнятияСУчетаИмущества КАК ПоследниеСнятияСУчетаИмущества
		|		ПО РегистрацияИмущества.КадастровыйНомер = ПоследниеСнятияСУчетаИмущества.КадастровыйНомер
		|		И РегистрацияИмущества.Период < ПоследниеСнятияСУчетаИмущества.ДатаСнятияСУчета
		|		ЛЕВОЕ СОЕДИНЕНИЕ ПрекращениеНачисленияНалога КАК ПрекращениеНачисленияНалога
		|		ПО РегистрацияИмущества.ОсновноеСредство = ПрекращениеНачисленияНалога.ОсновноеСредство
		|		И РегистрацияИмущества.Период < ПрекращениеНачисленияНалога.Период";

	КонецЕсли;

	Запрос.УстановитьПараметр("Организация", Организация);
	ИдентификаторыОбъектов = Запрос.Выполнить().Выгрузить();

	Для Каждого СтрокаИдентификатора Из ИдентификаторыОбъектов Цикл
		СтрокаИдентификатора.Идентификатор = ВРег(СтрЗаменить(СтрокаИдентификатора.Идентификатор, " ", ""));
	КонецЦикла; 

	ИдентификаторыОбъектов.Индексы.Добавить("Идентификатор");

	Возврат ИдентификаторыОбъектов;

КонецФункции

// Заполняет основное средство в строке сверки на основании данных регистрации в качестве объекта налогообложения
//
// Параметры:
//  СтрокаСверки - СтрокаТаблицыЗначений - строка ТЧ Сверка документа СверкаСФНСПоИмущественнымНалогам
//  ИдентификаторыОбъектов - ТаблицаЗначений - см. ИдентификаторыОбъектовНалогообложения()
//  ЗначенияКлюча - Структура - значения полей, по которым сопоставляются объекты налогообложения при сверке расчетов
//  Налог - ПеречислениеСсылка.ВидыИмущественныхНалогов - налог, которым облагаются основные средства
//  ПоискПоVIN - Булево - нужно искать ТС по VIN (имеет смысл только для транспортного налога)
//
Процедура УстановитьОсновноеСредствоПоИдентификатору(СтрокаСверки, ИдентификаторыОбъектов, ЗначенияКлюча, Налог, ПоискПоVIN = Ложь) Экспорт 
	
	СтрокаОС = Неопределено;
	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		Если ПоискПоVIN И ЗначенияКлюча.Свойство("ИдентификационныйНомер") Тогда
			СтрокаОС = ИдентификаторыОбъектов.Найти(ЗначенияКлюча.ИдентификационныйНомер, "Идентификатор");
		Иначе
			СтрокаОС = ИдентификаторыОбъектов.Найти(ЗначенияКлюча.РегистрационныйЗнак, "Идентификатор");
		КонецЕсли; 
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.ЗемельныйНалог Тогда
		СтрокаОС = ИдентификаторыОбъектов.Найти(ЗначенияКлюча.КадастровыйНомер, "Идентификатор");
	ИначеЕсли Налог = Перечисления.ВидыИмущественныхНалогов.НалогНаИмущество Тогда
		СтрокаОС = ИдентификаторыОбъектов.Найти(ЗначенияКлюча.КадастровыйНомер, "Идентификатор");
	КонецЕсли;

	Если СтрокаОС = Неопределено Тогда
		СтрокаСверки.ОсновноеСредство = Справочники.ОбъектыЭксплуатации.ПустаяСсылка();
		Возврат;
	КонецЕсли;

	Если Налог = Перечисления.ВидыИмущественныхНалогов.ТранспортныйНалог Тогда
		СтрокаСверки.КодВидаТС = СтрокаОС.КодВидаТС;
	Иначе
		СтрокаСверки.НаименованиеОбъекта = СтрокаОС.НаименованиеОбъекта;
	КонецЕсли;
	
	СтрокаСверки.ОсновноеСредство = СтрокаОС.ОсновноеСредство;
	СтрокаСверки.ДатаСнятияСУчета = СтрокаОС.ДатаСнятияСУчета;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ДополнитьСведенияОРасчетеНалога(СведенияОРасчете, СтрокиРасчета, Организация, Налог, КодОтправителя, ОтборНалоговыйПериод)
	
	Если Не ЗначениеЗаполнено(СтрокиРасчета) Тогда
		Возврат;
	КонецЕсли;	
		
	Для каждого СтрокаРасчета Из СтрокиРасчета Цикл
		НалоговыйПериод = Дата(ЗначениеПараметраРасчета(СтрокаРасчета, "НалПер"), 1, 1);		
		Если ЗначениеЗаполнено(ОтборНалоговыйПериод) И НалоговыйПериод <> ОтборНалоговыйПериод Тогда
			Продолжить;
		КонецЕсли;	
		НовыеСведения = СведенияОРасчете.Добавить();
		НовыеСведения.Организация = Организация;
		НовыеСведения.Налог = Налог;
		НовыеСведения.НалоговыйПериод = НалоговыйПериод;
		НовыеСведения.КодОтправителя = КодОтправителя;
		НовыеСведения.КодНалоговогоОргана = ЗначениеПараметраРасчета(СтрокаРасчета, "КодНО");
	КонецЦикла; 

КонецПроцедуры	

#КонецОбласти
