
#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Заполняет список команд печати.
//
// Параметры:
//   КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
//
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	// Оприходование ценностей
	
#Область ПоступлениеЦенностей  // (Дт 10, 41, 20 :: Кт 15, 60.НП)
	ЗакупкаЦенности = "
	|ВЫБРАТЬ // Поступление товаров на склад или цеховую кладовую (Дт 10, 41, 20 :: Кт 15, 60.НП)
	|
	|	Операция.Ссылка КАК Ссылка,
	// Период, Организация, ИдентификаторСтроки 
	|	Операция.Дата			КАК Период,
	|	Операция.Организация	КАК Организация,
	|	НЕОПРЕДЕЛЕНО			КАК ИдентификаторСтроки,
	|
	// Сумма
	|	Строки.Сумма	 		КАК Сумма,
	|	Строки.СуммаУУ 			КАК СуммаУУ,
	|
	// ДТ - Вид счета, Аналитика учета, Место учета
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.Производство)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе)
	|	КОНЕЦ																КАК ВидСчетаДт,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) ТОГДА
	|		НЕОПРЕДЕЛЕНО
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета 
	|	КОНЕЦ												 				КАК АналитикаУчетаДт,
	|	Строки.МестоУчета 													КАК МестоУчетаДт,
	|
	// ДТ - Валюта, Подразделение, Счет
	|	НЕОПРЕДЕЛЕНО														КАК ВалютаДт,
	|	Строки.Подразделение												КАК ПодразделениеДт,
	|	Строки.НаправлениеДеятельности 										КАК НаправлениеДеятельностиДт,
	|
	|	НЕОПРЕДЕЛЕНО														КАК СчетДт,
	// ДТ - Субконто
	|	Строки.Номенклатура													КАК СубконтоДт1,
	|	ВЫБОР КОГДА Строки.РазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты) ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.МатериальныеЗатраты)
	|	ИНАЧЕ
	|		Строки.Склад
	|	КОНЕЦ 																КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО														КАК СубконтоДт3,
	|	
	// ДТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0																	КАК ВалютнаяСуммаДт,
	|	Строки.Количество													КАК КоличествоДт,
	|	Строки.Сумма - Строки.ПостояннаяРазница - Строки.ВременнаяРазница	КАК СуммаНУДт,
	|	Строки.ПостояннаяРазница											КАК СуммаПРДт,
	|	Строки.ВременнаяРазница												КАК СуммаВРДт,
	|	
	// КТ - Вид счета, Аналитика учета, Место учета
	|	ВЫБОР КОГДА Строки.НеотфактурованнаяПоставка ТОГДА
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НеотфактурованныеПоставки)
	|	ИНАЧЕ
	|		ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.ЗатратыНаПриобретениеТМЦ)
	|	КОНЕЦ 																КАК ВидСчетаКт,
	|	ВЫБОР КОГДА Строки.НеотфактурованнаяПоставка ТОГДА
	|		Операция.Договор.ГруппаФинансовогоУчета
	|	ИНАЧЕ
	|		Строки.ГруппаФинансовогоУчета
	|	КОНЕЦ 																КАК АналитикаУчетаКт,
	|	НЕОПРЕДЕЛЕНО														КАК МестоУчетаКт,
	|
	// КТ - Валюта, Подразделение, Счет
	|	&ВалютаРеглУчета					 								КАК ВалютаКт,
	|	Операция.Договор.Подразделение										КАК ПодразделениеКт,
	|	ВЫБОР КОГДА Строки.НеотфактурованнаяПоставка ТОГДА
	|		Операция.Договор.НаправлениеДеятельности
	|	ИНАЧЕ
	|		Строки.КорНаправлениеДеятельности 							
	|	КОНЕЦ 																КАК НаправлениеДеятельностиКт,
	|
	|	НЕОПРЕДЕЛЕНО														КАК СчетКт,
	|
	// КТ - Субконто
	|	Строки.Номенклатура 				КАК СубконтоКт1,
	|	Операция.Контрагент 				КАК СубконтоКт2,
	|	Операция.Договор 					КАК СубконтоКт3,
	|
	// КТ - Валютная сумма, Количество, Суммы ПР,ВР,НУ
	|	0 									КАК ВалютнаяСуммаКт,
	|	0 									КАК КоличествоКт,
	|	Строки.Сумма - Строки.ПостояннаяРазница - Строки.ВременнаяРазница	КАК СуммаНУКт,
	|	Строки.ПостояннаяРазница											КАК СуммаПРКт,
	|	Строки.ВременнаяРазница												КАК СуммаВРКт,
	|	""Поступление товаров на склад""	КАК Содержание
	|
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Документ.ПоступлениеТоваровНаСклад КАК Операция
	|	ПО
	|		ДокументыКОтражению.Ссылка = Операция.Ссылка
	|	
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
	|		ВтСебестоимость КАК Строки
	|	ПО 
	|		Строки.Ссылка = Операция.Ссылка
	|
	|";
#КонецОбласти

#Область ВключениеИсключениеНДСВСтоимость // (Дт 41.01 :: Кт 19.03)
	ТекстВключениеИсключениеНДСВСтоимость = "
	|ВЫБРАТЬ //// Включение/исключение НДС в стоимость товара на складе - получателе (Дт 41.01 :: Кт 19.03) @НДСПредъявленный
	|
	|	Партии.Ссылка КАК Ссылка,
	|	Партии.Период КАК Период,
	|	Партии.Организация КАК Организация,
	|	НЕОПРЕДЕЛЕНО КАК ИдентификаторСтроки,
	|
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСРегл
	|	ИНАЧЕ
	|		-Партии.НДСРегл
	|	КОНЕЦ КАК Сумма,
	|	ВЫБОР КОГДА Партии.ВключениеНДСВСтоимость ТОГДА
	|		Партии.НДСУпр
	|	ИНАЧЕ
	|		-Партии.НДСУпр
	|	КОНЕЦ КАК СуммаУУ,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НаСкладе) КАК ВидСчетаДт,
	|	Партии.КорГруппаФинансовогоУчета КАК АналитикаУчетаДт,
	|	Операция.Склад КАК МестоУчетаДт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаДт,
	|	Операция.Склад.Подразделение КАК ПодразделениеДт,
	|	Партии.КорНаправлениеДеятельности КАК НаправлениеДеятельностиДт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетДт,
	|	Партии.КорНоменклатура КАК СубконтоДт1,
	|	Операция.Склад КАК СубконтоДт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоДт3,
	|
	|	0 КАК ВалютнаяСуммаДт,
	|	0 КАК КоличествоДт,
	|	0 КАК СуммаНУДт,
	|	0 КАК СуммаПРДт,
	|	0 КАК СуммаВРДт,
	|
	|	ЗНАЧЕНИЕ(Перечисление.ВидыСчетовРеглУчета.НДСпоПриобретеннымЦенностям) КАК ВидСчетаКт,
	|	Партии.ВидДеятельностиНДС                                              КАК АналитикаУчетаКт,
	|	Партии.ВидЦенности                                                     КАК МестоУчетаКт,
	|
	|	ЗНАЧЕНИЕ(Справочник.Валюты.ПустаяСсылка) КАК ВалютаКт,
	|	НЕОПРЕДЕЛЕНО КАК ПодразделениеКт,
	|	ЕСТЬNULL(ВводСобственныхСредств.НаправлениеДеятельности, Партии.НаправлениеДеятельности) КАК НаправлениеДеятельностиКт,
	|
	|	ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.ПустаяСсылка) КАК СчетКт,
	|	Партии.Контрагент КАК СубконтоКт1,
	|	Партии.ДокументПоступления КАК СубконтоКт2,
	|	НЕОПРЕДЕЛЕНО КАК СубконтоКт3,
	|
	|	0 КАК ВалютнаяСуммаКт,
	|	0 КоличествоКт,
	|	0 КАК СуммаНУКт,
	|	0 КАК СуммаПРКт,
	|	0 КАК СуммаВРКт,
	|	""Включение/исключение НДС в стоимость товара"" КАК Содержание
	|ИЗ
	|	Документ.ПоступлениеТоваровНаСклад КАК Операция
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Партии КАК Партии
	|	ПО
	|		Партии.Ссылка = Операция.Ссылка
	|	
	|	ЛЕВОЕ СОЕДИНЕНИЕ ВТВводСобственныхСредств КАК ВводСобственныхСредств
	|	ПО Партии.Ссылка = ВводСобственныхСредств.Ссылка
	|		И Партии.ДокументПоступления = ВводСобственныхСредств.СчетФактура
	|		И Партии.НаправлениеДеятельности = ВводСобственныхСредств.ИсходноеНаправлениеДеятельности
	|ГДЕ
	|	(Партии.ВключениеНДСВСтоимость ИЛИ Партии.ИсключениеНДСИзСтоимости)
	|";
#КонецОбласти

	ТекстыОтражения = Новый Массив;
	// Закупка
	ТекстыОтражения.Добавить(ЗакупкаЦенности);
	ТекстыОтражения.Добавить(ТекстВключениеИсключениеНДСВСтоимость);
	
	Возврат СтрСоединить(ТекстыОтражения, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	
	//-- Локализация
	Возврат "";
	
КонецФункции

// Функция возвращает текст запроса дополнительных временных таблиц,
// необходимых для отражения в регламентированном учете
//
// Возвращаемое значение:
//   Строка - сформированный текст запроса.
//
Функция ТекстЗапросаВТОтраженияВРеглУчете() Экспорт
	
	//++ Локализация
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Себестоимость.Регистратор КАК Ссылка,
	|	Себестоимость.КорРазделУчета КАК РазделУчета,
	|	Себестоимость.Организация КАК Организация,
	|	СУММА(Себестоимость.Количество) КАК Количество,
	|	СУММА(Себестоимость.СтоимостьРегл + Себестоимость.ДопРасходыРегл) КАК Сумма,
	|	СУММА(Себестоимость.ПостояннаяРазница) КАК ПостояннаяРазница,
	|	СУММА(Себестоимость.ВременнаяРазница) КАК ВременнаяРазница,
	|	СУММА(Себестоимость.СтоимостьУпр + Себестоимость.ДопРасходыУпр) КАК СуммаУУ,
	|	Себестоимость.ХозяйственнаяОперация КАК ХозяйственнаяОперация,
	|	ВЫБОР КОГДА КорАналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад) ТОГДА
	|		КорАналитика.СкладскаяТерритория.Подразделение 
	|	ИНАЧЕ
	|		КорАналитика.Подразделение 
	|	КОНЕЦ КАК Подразделение,
	|	КорАналитика.Номенклатура КАК Номенклатура,
	|	КорАналитика.МестоХранения КАК Склад,
	|	КорНазначения.НаправлениеДеятельности КАК НаправлениеДеятельности,
	|	Назначения.НаправлениеДеятельности КАК КорНаправлениеДеятельности,
	|	Себестоимость.КорВидДеятельностиНДС КАК ВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета И КорАналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА Себестоимость.КорВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ КАК ГруппаФинансовогоУчета,
	|	ВЫБОР
	|		КОГДА Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА Себестоимость.Подразделение
	|		ИНАЧЕ КорАналитика.МестоХранения
	|	КОНЕЦ КАК МестоУчета,
	|	ВЫБОР
	|		КОГДА Себестоимость.ХозяйственнаяОперация В (ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаУПоставщикаНеотфактурованнаяПоставка), 
	|													 ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ЗакупкаВСтранахЕАЭСНеотфактурованнаяПоставка))
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК НеотфактурованнаяПоставка
	|ПОМЕСТИТЬ ВтСебестоимость
	|ИЗ
	|	ДокументыКОтражению КАК ДокументыКОтражению
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрНакопления.СебестоимостьТоваров КАК Себестоимость
	|		ПО ДокументыКОтражению.Ссылка = Себестоимость.Регистратор
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК Аналитика
	|		ПО (Себестоимость.АналитикаУчетаНоменклатуры = Аналитика.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.КлючиАналитикиУчетаНоменклатуры КАК КорАналитика
	|		ПО (Себестоимость.КорАналитикаУчетаНоменклатуры = КорАналитика.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК Назначения
	|		ПО (Аналитика.Назначение = Назначения.Ссылка)
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.Назначения КАК КорНазначения
	|		ПО (КорАналитика.Назначение = КорНазначения.Ссылка)
	|ГДЕ
	|	Себестоимость.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И НЕ Себестоимость.Сторно
	|	И Себестоимость.Активность
	|
	|СГРУППИРОВАТЬ ПО
	|	Себестоимость.Регистратор,
	|	Себестоимость.КорРазделУчета,
	|	Себестоимость.Организация,
	|	Себестоимость.ХозяйственнаяОперация,
	|	ВЫБОР КОГДА КорАналитика.ТипМестаХранения = ЗНАЧЕНИЕ(Перечисление.ТипыМестХранения.Склад) ТОГДА
	|		КорАналитика.СкладскаяТерритория.Подразделение 
	|	ИНАЧЕ
	|		КорАналитика.Подразделение 
	|	КОНЕЦ,
	|	КорАналитика.Номенклатура,
	|	КорАналитика.МестоХранения,
	|	Назначения.НаправлениеДеятельности,
	|	КорНазначения.НаправлениеДеятельности,
	|	Себестоимость.КорВидДеятельностиНДС,
	|	ВЫБОР
	|		КОГДА &ФормироватьВидыЗапасовПоГруппамФинансовогоУчета И КорАналитика.Номенклатура.ТипНоменклатуры <> ЗНАЧЕНИЕ(Перечисление.ТипыНоменклатуры.Работа)
	|			ТОГДА Себестоимость.КорВидЗапасов.ГруппаФинансовогоУчета
	|		ИНАЧЕ КорАналитика.Номенклатура.ГруппаФинансовогоУчета
	|	КОНЕЦ,
	|	ВЫБОР
	|		КОГДА Себестоимость.КорРазделУчета = ЗНАЧЕНИЕ(Перечисление.РазделыУчетаСебестоимостиТоваров.ПроизводственныеЗатраты)
	|			ТОГДА Себестоимость.Подразделение
	|		ИНАЧЕ КорАналитика.МестоХранения
	|	КОНЕЦ
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка
	|;
	|";
	
	Возврат ТекстЗапроса;
	
	//-- Локализация
	Возврат "";
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

// Заполняет массив допустимых наименований входящих документов.
//
// Параметры:
//  МассивНаименований	 - Массив - массив наименования входящих документов.
//
Процедура ДополнитьНаименованияВходящихДокументов(МассивНаименований) Экспорт
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры
//++ Локализация

//++ НЕ УТ

Функция ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ОтражениеДокументовВРеглУчете";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли; 
	
	ТекстЗапроса = "
	|ВЫБРАТЬ
	|	&Период                      КАК Период,
	|	&Организация                 КАК Организация,
	|	НАЧАЛОПЕРИОДА(&Период, ДЕНЬ) КАК ДатаОтражения
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
	
КонецФункции
//-- НЕ УТ

//-- Локализация

#КонецОбласти

#КонецОбласти
