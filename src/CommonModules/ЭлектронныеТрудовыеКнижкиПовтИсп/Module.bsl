#Область СлужебныеПроцедурыИФункции

Функция СвойстваДолжности(Должность) Экспорт
	
	Свойства = Новый Структура("Представление,КодПоРееструДолжностей");
	
	Если ЗначениеЗаполнено(Должность) Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			Должность, "Наименование,НаименованиеДляЗаписейОТрудовойДеятельности");
		
		Если ЗначениеЗаполнено(ЗначенияРеквизитов.НаименованиеДляЗаписейОТрудовойДеятельности) Тогда
			Свойства.Представление = ЗначенияРеквизитов.НаименованиеДляЗаписейОТрудовойДеятельности;
		Иначе
			Свойства.Представление = ЗначенияРеквизитов.Наименование;
		КонецЕсли;
		
		Свойства.КодПоРееструДолжностей = ЭлектронныеТрудовыеКнижки.КодДолжностиПоРееструГосударственнойСлужбы(Должность);
		
	КонецЕсли;
	
	Возврат Свойства;
	
КонецФункции

Функция ПредставлениеПодразделения(Подразделение) Экспорт
	
	Если Не ЗначениеЗаполнено(Подразделение) Тогда
		Возврат "";
	КонецЕсли;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
		Подразделение, "Наименование,НаименованиеДляЗаписейОТрудовойДеятельности");
	
	Если ЗначениеЗаполнено(ЗначенияРеквизитов.НаименованиеДляЗаписейОТрудовойДеятельности) Тогда
		Возврат ЗначенияРеквизитов.НаименованиеДляЗаписейОТрудовойДеятельности;
	КонецЕсли;
	
	Возврат ЗначенияРеквизитов.Наименование;
	
КонецФункции

Функция СвойстваОснованияУвольнения(ОснованиеУвольнения) Экспорт
	
	СвойстваОснования = Новый Структура(
		"ОснованиеУвольненияНаименованиеОснования,
		|ОснованиеУвольненияТекстОснования,
		|ОснованиеУвольненияСтатья,
		|ОснованиеУвольненияЧасть,
		|ОснованиеУвольненияПункт,
		|ОснованиеУвольненияПодпункт,
		|ОснованиеУвольненияАбзац");
	
	Если ЗначениеЗаполнено(ОснованиеУвольнения) Тогда
		
		ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(
			ОснованиеУвольнения, "ТекстОснования,Статья,Часть,Пункт,Подпункт,Абзац");
		
		СвойстваОснования.ОснованиеУвольненияТекстОснования = ЗначенияРеквизитов.ТекстОснования;
		СвойстваОснования.ОснованиеУвольненияСтатья = ЗначенияРеквизитов.Статья;
		СвойстваОснования.ОснованиеУвольненияЧасть = ЗначенияРеквизитов.Часть;
		СвойстваОснования.ОснованиеУвольненияПункт = ЗначенияРеквизитов.Пункт;
		СвойстваОснования.ОснованиеУвольненияПодпункт = ЗначенияРеквизитов.Подпункт;
		СвойстваОснования.ОснованиеУвольненияАбзац = ЗначенияРеквизитов.Абзац;
		
		Если ТипЗнч(ОснованиеУвольнения) <> Тип("СправочникСсылка.ОснованияУвольненияПользовательские") Тогда
			
			Запрос = Новый Запрос;
			Запрос.УстановитьПараметр("Ссылка", ОснованиеУвольнения);
			
			Запрос.Текст =
				"ВЫБРАТЬ
				|	Представления.ТекстОснования КАК ТекстОснования,
				|	Представления.Наименование КАК Наименование
				|ИЗ
				|	РегистрСведений.ПредставленияОснованийУвольнения КАК Представления
				|ГДЕ
				|	Представления.Использовать
				|	И Представления.Объект = &Ссылка";
			
			Выборка = Запрос.Выполнить().Выбрать();
			Если Выборка.Следующий() Тогда
				СвойстваОснования.ОснованиеУвольненияНаименованиеОснования = Выборка.Наименование;
				СвойстваОснования.ОснованиеУвольненияТекстОснования = Выборка.ТекстОснования;
			КонецЕсли;
			
		КонецЕсли;
	
	КонецЕсли;
	
	Возврат СвойстваОснования;
	
КонецФункции

Функция НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности(Организация) Экспорт
	
	Если Не ЗначениеЗаполнено(Организация) Тогда
		Возврат Ложь;
	КонецЕсли;
	
	ЗначениеРеквизита = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(Организация, "НеЗаполнятьПодразделенияВМероприятияхТрудовойДеятельности");
	Если ТипЗнч(ЗначениеРеквизита) <> Тип("Булево") Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Возврат ЗначениеРеквизита;
	
КонецФункции

Функция НастройкиЭлектронныхТрудовыхКнижек() Экспорт
	
	ЗаписьНастроек = РегистрыСведений.НастройкиЭлектронныхТрудовыхКнижек.СоздатьМенеджерЗаписи();
	ЗаписьНастроек.Прочитать();
	
	Настройки = ОбщегоНазначения.СтруктураПоМенеджеруЗаписи(ЗаписьНастроек, Метаданные.РегистрыСведений.НастройкиЭлектронныхТрудовыхКнижек);
	
	Возврат Настройки;
	
КонецФункции

Функция ПредставлениеРазрядаКатегории(РазрядКатегория) Экспорт
	
	Если Не ЗначениеЗаполнено(РазрядКатегория) Тогда
		Возврат "";
	КонецЕсли;
	
	Возврат ЭлектронныеТрудовыеКнижки.ПредставлениеРазрядаКатегории(РазрядКатегория);
	
КонецФункции

Функция ОрганизацияПоРегистрационномуНомеруПФРСФР(РегистрационныйНомер) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("РегистрационныйНомер", РегистрационныйНомер);
	
	Запрос.Текст =
		"ВЫБРАТЬ РАЗРЕШЕННЫЕ ПЕРВЫЕ 1
		|	ИсторияРегистрацийВОрганеПФР.Организация КАК Организация
		|ИЗ
		|	РегистрСведений.ИсторияРегистрацийВОрганеПФР КАК ИсторияРегистрацийВОрганеПФР
		|ГДЕ
		|	НЕ ИсторияРегистрацийВОрганеПФР.Организация.ПометкаУдаления
		|	И (ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерПФР = &РегистрационныйНомер
		|			ИЛИ ИсторияРегистрацийВОрганеПФР.РегистрационныйНомерСФР = &РегистрационныйНомер)";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Возврат Выборка.Организация;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ТерриториальныеУсловияПФР(ДатаМероприятия, Организация, Подразделение) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("ДатаМероприятия", ДатаМероприятия);
	
	Если ЗначениеЗаполнено(Подразделение) Тогда
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Подразделение);
	ИначеЕсли ЗначениеЗаполнено(Организация) Тогда
		Запрос.УстановитьПараметр("СтруктурнаяЕдиница", Организация);
	Иначе
		Возврат Неопределено;
	КонецЕсли;
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	ТерриториальныеУсловия.ТерриториальныеУсловияПФР КАК ТерриториальныеУсловияПФР
		|ИЗ
		|	РегистрСведений.ТерриториальныеУсловияПФР.СрезПоследних(&ДатаМероприятия, СтруктурнаяЕдиница = &СтруктурнаяЕдиница) КАК ТерриториальныеУсловия";
	
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		Если Выборка.ТерриториальныеУсловияПФР = Справочники.ТерриториальныеУсловияПФР.МКС
			Или Выборка.ТерриториальныеУсловияПФР = Справочники.ТерриториальныеУсловияПФР.РКС Тогда
			
			Возврат Выборка.ТерриториальныеУсловияПФР;
		ИначеЕсли Выборка.ТерриториальныеУсловияПФР = Справочники.ТерриториальныеУсловияПФР.МКСРКСР Тогда
			Возврат Справочники.ТерриториальныеУсловияПФР.РКС;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция КодПоОКЗТрудовойФункции(ТрудоваяФункция) Экспорт
	
	Если ЗначениеЗаполнено(ТрудоваяФункция) Тогда
		Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТрудоваяФункция, "КодПоОКЗ");
	КонецЕсли;
	
	Возврат Неопределено;
	
КонецФункции

Функция ПредставлениеКодаОКЗ(КодПоОКЗ) Экспорт
	
	Если Не ЗначениеЗаполнено(КодПоОКЗ) Тогда
		Возврат "";
	КонецЕсли;
	
	ЗначенияРеквизитов = ОбщегоНазначения.ЗначенияРеквизитовОбъекта(КодПоОКЗ, "Код,КонтрольноеЧисло");
	Возврат ЗначенияРеквизитов.Код + "." + ЗначенияРеквизитов.КонтрольноеЧисло;
	
КонецФункции

Функция ПричинаУвольненияПФР(ОснованиеУвольнения) Экспорт
	
	Если ЗначениеЗаполнено(ОснованиеУвольнения) Тогда
		ПричинаУвольненияПФР = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ОснованиеУвольнения, "ПричинаУвольненияПФР");
		Если ЗначениеЗаполнено(ПричинаУвольненияПФР) Тогда
			Возврат ПричинаУвольненияПФР;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Справочники.ПричиныУвольненияПФР.Иное;
	
КонецФункции

Функция КодТрудовойФункцииДоговораГПХ(ДатаСобытия, ТрудоваяФункция) Экспорт
	Если Не ЗначениеЗаполнено(ТрудоваяФункция) Тогда
		Возврат "";
	КонецЕсли;
	ТрудоваяФункцияДоговора = ТрудоваяФункция;
	Если ДатаСобытия < ПерсонифицированныйУчетКлиентСервер.ДатаПостановленияЕФС1_2023() Тогда
		Если ТрудоваяФункцияДоговора = Справочники.ТрудовыеФункции.ДАВТФЛНС Тогда
			ТрудоваяФункцияДоговора = Справочники.ТрудовыеФункции.ДАВТ;
		ИначеЕсли ТрудоваяФункцияДоговора = Справочники.ТрудовыеФункции.ДГПХФЛНС Тогда
			ТрудоваяФункцияДоговора = Справочники.ТрудовыеФункции.ДГПХ;
		КонецЕсли;
	КонецЕсли;
	Возврат ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ТрудоваяФункцияДоговора, "КодПрофессиональнойДеятельности");
КонецФункции

#КонецОбласти
