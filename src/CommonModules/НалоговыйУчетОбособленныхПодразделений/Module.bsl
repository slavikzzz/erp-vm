#Область ПрограммныйИнтерфейс

////////////////////////////////////////////////////////////////////////////////
// ОБЩИЕ СВЕДЕНИЯ О НАЛОГОВОМ УЧЕТЕ ОБОСОБЛЕННЫХ ПОДРАЗДЕЛЕНИЙ

Функция УчетВРазрезеНалоговыхОрганов() Экспорт
	
	Возврат Истина;
	
КонецФункции

// Определяет ставку налога в региональный бюджет, действующую по месту регистрации в налоговом органе.
Функция НалоговаяСтавка(Организация, НалоговыйОрган, Дата) Экспорт
	
	Возврат НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(Дата, Организация,,,НалоговыйОрган);
	
КонецФункции

// Устарела. Следует использовать ЗаполнитьНалоговыеСтавкиВБюджетыРФ
//
// Определяет ставки налога на прибыль, подлежащего уплате в региональные бюджеты
// по местам нахождения организации и ее обособленных подразделений.
//
// Параметры:
//  Ставки - Соответствие - заполняемая коллекция
//        * Ключ - СправочникСсылка.РегистрацииВНалоговомОргане - все значения из параметра РегистрацииВНалоговомОргане
//        * Значение - ставка в виде доли от единицы (например, 0.135 для 13,5%)
//  Период	    - Дата - характеризует налоговый период
//  Организация - СправочникСсылка.Организации	- налогоплательщик
//  РегистрацииВНалоговомОргане - Массив - перечень регистраций в налоговом органе, в отношении которых нужно получить ставки.
// 
Процедура ЗаполнитьНалоговыеСтавкиРегиональныйБюджет(Ставки, Период, Организация, РегистрацииВНалоговомОргане) Экспорт
	
	// Ставка может быть задана для организации в целом ...
	СтавкаНалога = НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(Период, Организация);
	Для Каждого РегистрацияВНалоговомОргане Из РегистрацииВНалоговомОргане Цикл
		Ставки.Вставить(РегистрацияВНалоговомОргане, СтавкаНалога);
	КонецЦикла;
	
	// ... а может - для обособленных подразделений
	Если ПолучитьФункциональнуюОпцию("ПрименяютсяРазныеСтавкиНалогаНаПрибыль") Тогда
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",                      Период);
		Запрос.УстановитьПараметр("Организация",                 Организация); // Регистрации в налоговом органе всегда подчинены головной организации, но не обособленному подразделению
		Запрос.УстановитьПараметр("РегистрацииВНалоговомОргане", РегистрацииВНалоговомОргане);
		Запрос.Текст =
		"ВЫБРАТЬ
		|	СтавкиНалога.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
		|	МАКСИМУМ(СтавкиНалога.СтавкаСубъектРФ / 100) КАК СтавкаНалогаРегиональныйБюджет
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
		|			&Период,
		|			Организация = &Организация
		|				И РегистрацияВНалоговомОргане В (&РегистрацииВНалоговомОргане)) КАК СтавкиНалога
		|
		|СГРУППИРОВАТЬ ПО
		|	СтавкиНалога.РегистрацияВНалоговомОргане";
		Выборка = Запрос.Выполнить().Выбрать();
		Пока Выборка.Следующий() Цикл
			Ставки.Вставить(Выборка.РегистрацияВНалоговомОргане, Выборка.СтавкаНалогаРегиональныйБюджет);
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры

// Заполняет ставки в переданную параметром таблицу
//
// Параметры:
// ТаблицаДанных - ТаблицаЗначений:
//  	* ВариантНалогообложенияПрибыли - СправочникСсылка.ВариантыНалогообложенияПрибыли - если нет индекса по колонке, будет создан
//  	* РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане - если нет индекса по колонке, будет создан
//  	* СтавкаФедеральныйБюджет     - Число - доля
//  	* СтавкаРегиональныйБюджет    - Число - доля
//  Период	    - Дата - характеризует налоговый период
//  Организация - СправочникСсылка.Организации	- налогоплательщик
//  СтавкаНалогаФБ - Неопределено, Число - Основная ставка по организации. Если ставка уже посчитана, можно передать.
//  СтавкаНалогаРБ - Неопределено, Число - Основная ставка по организации. Если ставка уже посчитана, можно передать.
// 
Процедура ЗаполнитьНалоговыеСтавкиВБюджетыРФ(ТаблицаДанных,
											Период,
											Организация,
											Знач СтавкаНалогаФБ = Неопределено,
											Знач СтавкаНалогаРБ = Неопределено) Экспорт
	
	// Ставка может быть задана для организации в целом ...
	Если СтавкаНалогаФБ = Неопределено Тогда
		СтавкаНалогаФБ = НалоговыйУчет.НалоговаяСтавкаФедеральныйБюджет(Период, Организация);
	КонецЕсли;
	Если СтавкаНалогаРБ = Неопределено Тогда
		СтавкаНалогаРБ = НалоговыйУчет.НалоговаяСтавкаРегиональныйБюджет(Период, Организация);
	КонецЕсли;
	
	Для Каждого СтрокаДанных Из ТаблицаДанных Цикл
		СтрокаДанных.СтавкаФедеральныйБюджет  = СтавкаНалогаФБ;
		СтрокаДанных.СтавкаРегиональныйБюджет = СтавкаНалогаРБ;
	КонецЦикла;
	
	ПоляПоиска = "ВариантНалогообложенияПрибыли, РегистрацияВНалоговомОргане";
	
	ТаблицаДанных.Индексы.Добавить(ПоляПоиска);
	
	// ... а может - для обособленных подразделений
	Если НалоговыйУчет.ПрименяютсяРазныеСтавкиНалогаНаПрибыль() Тогда
		
		ВариантыНалогообложенияПрибылиПоУмолчанию =
			РаздельныйУчетПоНалогуНаПрибыль.ВариантыНалогообложенияПрибылиПоУмолчанию();
		ОсновнойВариантНалогообложенияПрибыли     =
			РаздельныйУчетПоНалогуНаПрибыль.ОсновнойВариантНалогообложенияПрибыли(
				Организация,
				Период);
		
		ОтборВариантовНалогообложения = Новый Массив();
		ОбщегоНазначенияКлиентСервер.ДополнитьМассив(ОтборВариантовНалогообложения,
			ВариантыНалогообложенияПрибылиПоУмолчанию);
		ОтборВариантовНалогообложения.Добавить(ОсновнойВариантНалогообложенияПрибыли);
		
		Запрос = Новый Запрос;
		Запрос.УстановитьПараметр("Период",        Период);
		Запрос.УстановитьПараметр("Организация",   Организация); // Регистрации в налоговом органе всегда подчинены головной организации, но не обособленному подразделению
		Запрос.УстановитьПараметр("ТаблицаДанных", ТаблицаДанных);
		
		Запрос.УстановитьПараметр("ВариантыНалогообложенияПрибылиПоУмолчанию", ВариантыНалогообложенияПрибылиПоУмолчанию);
		Запрос.УстановитьПараметр("ОсновнойВариантНалогообложенияПрибыли",     ОсновнойВариантНалогообложенияПрибыли);
		Запрос.УстановитьПараметр("ОтборВариантовНалогообложения",             ОтборВариантовНалогообложения);
		
		Запрос.Текст =
		"ВЫБРАТЬ
		|	ВЫРАЗИТЬ(ТаблицаДанных.ВариантНалогообложенияПрибыли
		|				КАК Справочник.ВариантыНалогообложенияПрибыли) КАК ВариантНалогообложенияПрибыли,
		|	ВЫРАЗИТЬ(ТаблицаДанных.РегистрацияВНалоговомОргане
		|				КАК Справочник.РегистрацииВНалоговомОргане)    КАК РегистрацияВНалоговомОргане
		|ПОМЕСТИТЬ ТаблицаОтбора
		|ИЗ
		|	&ТаблицаДанных КАК ТаблицаДанных
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВариантНалогообложенияПрибыли,
		|	РегистрацияВНалоговомОргане
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СтавкиНалога.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
		|	(СтавкиНалога.СтавкаФБ / 100)              КАК СтавкаФБ,
		|	(СтавкиНалога.СтавкаСубъектРФ / 100)       КАК СтавкаРБ
		|ПОМЕСТИТЬ СтавкиДляВсехОрганизаций
		|ИЗ
		|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(
		|		&Период,
		|		ВариантНалогообложенияПрибыли В
		|						(ВЫБРАТЬ
		|							ТаблицаОтбора.ВариантНалогообложенияПрибыли
		|						ИЗ
		|							ТаблицаОтбора КАК ТаблицаОтбора
		|						)
		|	) КАК СтавкиНалога
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВариантНалогообложенияПрибыли
		|
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НайденныеСтавкиНалога.Приоритет                       КАК Приоритет,
		|	НайденныеСтавкиНалога.ВариантНалогообложенияПрибыли   КАК ВариантНалогообложенияПрибыли,
		|	НайденныеСтавкиНалога.РегистрацияВНалоговомОргане     КАК РегистрацияВНалоговомОргане,
		|	(НайденныеСтавкиНалога.СтавкаРБ / 100)                КАК СтавкаРБ
		|ПОМЕСТИТЬ СтавкиСубъектовРФ_ПоПриоритетам
		|ИЗ
		|	(ВЫБРАТЬ
		|		1                                            КАК Приоритет,
		|		СтавкиНалога.ВариантНалогообложенияПрибыли   КАК ВариантНалогообложенияПрибыли,
		|		СтавкиНалога.РегистрацияВНалоговомОргане     КАК РегистрацияВНалоговомОргане,
		|		СтавкиНалога.СтавкаСубъектРФ                 КАК СтавкаРБ
		|	ИЗ
		|		РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И (ВариантНалогообложенияПрибыли, РегистрацияВНалоговомОргане) В
		|						(ВЫБРАТЬ
		|							ТаблицаОтбора.ВариантНалогообложенияПрибыли,
		|							ТаблицаОтбора.РегистрацияВНалоговомОргане
		|						ИЗ
		|							ТаблицаОтбора КАК ТаблицаОтбора
		|						)
		|		) КАК СтавкиНалога
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		2,
		|		ТаблицаОтбора.ВариантНалогообложенияПрибыли,
		|		ТаблицаОтбора.РегистрацияВНалоговомОргане,
		|		СтавкиНалога.СтавкаСубъектРФ
		|	ИЗ
		|		ТаблицаОтбора КАК ТаблицаОтбора
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И (ВариантНалогообложенияПрибыли) В
		|						(ВЫБРАТЬ
		|							ТаблицаОтбора.ВариантНалогообложенияПрибыли
		|						ИЗ
		|							ТаблицаОтбора КАК ТаблицаОтбора
		|						)
		|					И РегистрацияВНалоговомОргане =
		|						ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
		|			) КАК СтавкиНалога
		|		ПО
		|			ТаблицаОтбора.ВариантНалогообложенияПрибыли = СтавкиНалога.ВариантНалогообложенияПрибыли
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		ВЫБОР
		|			КОГДА СтавкиНалога.ВариантНалогообложенияПрибыли = &ОсновнойВариантНалогообложенияПрибыли
		|				ТОГДА 3
		|			ИНАЧЕ // Варианты н/о по умолчанию
		|				4
		|		КОНЕЦ,
		|		ТаблицаОтбора.ВариантНалогообложенияПрибыли,
		|		ТаблицаОтбора.РегистрацияВНалоговомОргане,
		|		СтавкиНалога.СтавкаСубъектРФ
		|	ИЗ
		|		ТаблицаОтбора КАК ТаблицаОтбора
		|		
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ 
		|			РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
		|				&Период,
		|				Организация = &Организация
		|					И (ВариантНалогообложенияПрибыли) В
		|						(&ОтборВариантовНалогообложения)
		|					И (РегистрацияВНалоговомОргане) В
		|						(ВЫБРАТЬ
		|							ТаблицаОтбора.РегистрацияВНалоговомОргане
		|						ИЗ
		|							ТаблицаОтбора КАК ТаблицаОтбора
		|						)
		|			) КАК СтавкиНалога
		|		ПО
		|			ТаблицаОтбора.РегистрацияВНалоговомОргане = СтавкиНалога.РегистрацияВНалоговомОргане
		|	
		|	) КАК НайденныеСтавкиНалога
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВариантНалогообложенияПрибыли,
		|	РегистрацияВНалоговомОргане
		|
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеСтавки.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
		|	ВсеСтавки.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане,
		|	ВсеСтавки.СтавкаРБ                      КАК СтавкаРБ
		|ПОМЕСТИТЬ СтавкиСубъектовРФ
		|ИЗ
		|	(ВЫБРАТЬ
		|		Т.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
		|		Т.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане,
		|		МИНИМУМ(Т.Приоритет)            КАК Приоритет
		|	ИЗ
		|		СтавкиСубъектовРФ_ПоПриоритетам КАК Т
		|
		|	СГРУППИРОВАТЬ ПО
		|		Т.ВариантНалогообложенияПрибыли,
		|		Т.РегистрацияВНалоговомОргане
		|	) КАК КлючиОтбораСтавок
		|	
		|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
		|		СтавкиСубъектовРФ_ПоПриоритетам КАК ВсеСтавки
		|	ПО
		|		КлючиОтбораСтавок.ВариантНалогообложенияПрибыли = ВсеСтавки.ВариантНалогообложенияПрибыли
		|		И КлючиОтбораСтавок.РегистрацияВНалоговомОргане = ВсеСтавки.РегистрацияВНалоговомОргане
		|		И КлючиОтбораСтавок.Приоритет                   = ВсеСтавки.Приоритет
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	ВариантНалогообложенияПрибыли,
		|	РегистрацияВНалоговомОргане
		|;
		|
		|///////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ТаблицаОтбора.ВариантНалогообложенияПрибыли              КАК ВариантНалогообложенияПрибыли,
		|	ТаблицаОтбора.РегистрацияВНалоговомОргане                КАК РегистрацияВНалоговомОргане,
		|	
		|	МАКСИМУМ(НЕ СтавкиДляВсехОрганизаций.ВариантНалогообложенияПрибыли ЕСТЬ NULL) КАК НайденаСтавкаФБ,
		|	МАКСИМУМ(НЕ СтавкиСубъектовРФ.ВариантНалогообложенияПрибыли ЕСТЬ NULL)        КАК НайденаСтавкаРБ,
		|
		|	МАКСИМУМ(ЕСТЬNULL(СтавкиДляВсехОрганизаций.СтавкаФБ, 0)) КАК СтавкаФБ,
		|	МАКСИМУМ(ЕСТЬNULL(СтавкиСубъектовРФ.СтавкаРБ,
		|		СтавкиДляВсехОрганизаций.СтавкаРБ))                  КАК СтавкаРБ
		|
		|ИЗ
		|	ТаблицаОтбора КАК ТаблицаОтбора
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиДляВсехОрганизаций КАК СтавкиДляВсехОрганизаций
		|			ПО ТаблицаОтбора.ВариантНалогообложенияПрибыли = СтавкиДляВсехОрганизаций.ВариантНалогообложенияПрибыли
		|		
		|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиСубъектовРФ КАК СтавкиСубъектовРФ
		|			ПО ТаблицаОтбора.ВариантНалогообложенияПрибыли = СтавкиСубъектовРФ.ВариантНалогообложенияПрибыли
		|			И  ТаблицаОтбора.РегистрацияВНалоговомОргане   = СтавкиСубъектовРФ.РегистрацияВНалоговомОргане
		|
		|ГДЕ
		|	(НЕ СтавкиДляВсехОрганизаций.ВариантНалогообложенияПрибыли ЕСТЬ NULL
		|		ИЛИ НЕ СтавкиСубъектовРФ.ВариантНалогообложенияПрибыли ЕСТЬ NULL)
		|
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаОтбора.ВариантНалогообложенияПрибыли,
		|	ТаблицаОтбора.РегистрацияВНалоговомОргане
		|
		|";
		
		ПараметрыПоиска = Новый Структура(ПоляПоиска);
		
		РезультатЗапроса = Запрос.Выполнить();
		Выборка = РезультатЗапроса.Выбрать();
		Пока Выборка.Следующий() Цикл
			
			ЗаполнитьЗначенияСвойств(ПараметрыПоиска, Выборка);
			
			НайденныеСтроки = ТаблицаДанных.НайтиСтроки(ПараметрыПоиска);
			
			Для каждого СтрокаДанных Из НайденныеСтроки Цикл
				Если Выборка.НайденаСтавкаФБ Тогда
					СтрокаДанных.СтавкаФедеральныйБюджет  = Выборка.СтавкаФБ;
				КонецЕсли;
				Если Выборка.НайденаСтавкаРБ Тогда
					СтрокаДанных.СтавкаРегиональныйБюджет = Выборка.СтавкаРБ;
				КонецЕсли;
			КонецЦикла;
			
		КонецЦикла;
			
	КонецЕсли;
	
КонецПроцедуры


// Для заполнения декларации по налогу на прибыль получает общую налоговую базу,
// рассчитанную для закрытых в течение текущего отчетного периода подразделений
//
// Параметры:
//  НалоговаяБазаЗакрытыхПодразделений
//             - Число        - возвращаемое значение, налоговая база закрытых подразделений
//             - Неопределено - возвращаемое значение, в отчетном периоде не закрывались подразделения
//  КонтекстРасчета	- см. НалогНаПрибыльДекларация.НовыйКонтекстРасчета() - описывает период и организацию, по которой готовится расчет
//
Процедура ОпределитьНалоговуюБазуЗакрытыхПодразделений(НалоговаяБазаЗакрытыхПодразделений, КонтекстРасчета) Экспорт
	
	НалоговаяБазаЗакрытыхПодразделений = РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.НалоговаяБазаЗакрытыхПодразделений(КонтекстРасчета);
	
КонецПроцедуры

// Заполняет массив регистраций в налоговых органах, в которые организация представляет декларацию по налогу на прибыль.
// Данный массив является фильтром для списка выбора налогового органа из формы декларации.
// Если массив пустой, то список выбора налогового органа не фильтруется. 
//
// Параметры:
//		Организация - СправочникСсылка.Организации - плательщик налога на прибыль
//		Период - Дата - дата, характеризующая отчетный период по налогу на прибыль
//		НалоговыеОрганы - Массив Из СправочникСсылка.РегистрацииВНалоговомОргане - налоговые органы,
//                         в которые организация представляет декларации.
//
Процедура НалоговыеОрганыПолучателиДекларацийПоПрибыли(Организация, Период, НалоговыеОрганы) Экспорт
	
	УплачиватьНалогПоГруппамПодразделений = УплачиватьНалогНаПрибыльПоГруппамПодразделений(Организация, Период);
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Организации = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	
	// Создаем временную таблицу НалоговыеОрганыПоНалогуНаПрибыль 
	СоздатьНалоговыеОрганыПоНалогуНаПрибыль(МенеджерВременныхТаблиц, Организации, Период,, УплачиватьНалогПоГруппамПодразделений);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации КАК НалоговыйОрган
	|ИЗ
	|	НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПоНалогуНаПрибыль";
	
	НалоговыеОрганы = Запрос.Выполнить().Выгрузить().ВыгрузитьКолонку("НалоговыйОрган");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// РАСПРЕДЕЛЕНИЕ НАЛОГОВОЙ БАЗЫ МЕЖДУ НАЛОГОВЫМИ ОРГАНАМИ

// Читает из информационной базы данные о фактическом распределении налоговой базы,
// рассчитанные и зарегистрированные регламентной операцией РасчетНалогаНаПрибыль.
//
// Параметры:
//  Расчет		 - ТаблицаЗначений - см. НовыйРасчетРаспределенияНалоговойБазы()
//                 Возвращаемый параметр. Следует передать неинициализированную переменную;
//                 процедура поместит в нее результат НовыйРасчетРаспределенияНалоговойБазы().
//  Период		 - Дата - дата, характеризующая отчетный период - любая дата последнего месяца отчетного периода.
//  Организация	 - СправочникСсылка.Организации - налогоплательщик.
//  ИспользуетсяРаздельныйУчет - Неопределено - признак не известен, будет получен из базы данных
//                             - Булево - признак известен, обращение к базе данных не требуется
//
Процедура ПрочитатьРасчетРаспределенияНалоговойБазы(Расчет, Период, Организация, ИспользуетсяРаздельныйУчет = Неопределено) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат;
	КонецЕсли;
	
	Если ИспользуетсяРаздельныйУчет = Неопределено Тогда
		ИспользуетсяРаздельныйУчет = РаздельныйУчетПоНалогуНаПрибыль.ИспользуетсяРаздельныйУчет(
				Организация,
				Период);
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца",                НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца",                 КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",                 Организация);
	Запрос.УстановитьПараметр("ИспользуетсяРаздельныйУчет",  ИспользуетсяРаздельныйУчет);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьАмортизируемогоИмущества КАК СтоимостьАмортизируемогоИмущества,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|	РасчетДолейБазыНалогаНаПрибыль.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца,
	|	РасчетДолейБазыНалогаНаПрибыль.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетДолейБазыНалогаНаПрибыль.НалоговаяБаза КАК НалоговаяБаза,
	|	РасчетДолейБазыНалогаНаПрибыль.Закрыто КАК Закрыто
	|ПОМЕСТИТЬ РасчетДолейБазыНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РасчетДолейБазыНалогаНаПрибыль.Активность
	|
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
	|	РасчетДолейБазыНалогаНаПрибыль.НалоговаяБаза КАК НалоговаяБаза
	|ПОМЕСТИТЬ РазвернутыйРасчетПоВариантамНалогообложения
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыльПоВариантамНалогообложения КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РасчетДолейБазыНалогаНаПрибыль.Активность
	|	И &ИспользуетсяРаздельныйУчет
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ОбщийРасчет.РегистрацияВНалоговомОргане                        КАК РегистрацияВНалоговомОргане,
	|	ОбщийРасчет.СтоимостьАмортизируемогоИмущества                  КАК СтоимостьАмортизируемогоИмущества,
	|	ОбщийРасчет.СтоимостьОСПрошлыхМесяцев                          КАК СтоимостьОСПрошлыхМесяцев,
	|	ОбщийРасчет.СтоимостьОССледующегоМесяца                        КАК СтоимостьОССледующегоМесяца,
	|	ОбщийРасчет.РасходыПоОплатеТруда                               КАК РасходыПоОплатеТруда,
	|	ОбщийРасчет.ДоляНалоговойБазы                                  КАК ДоляНалоговойБазы,
	|	ОбщийРасчет.НалоговаяБаза                                      КАК НалоговаяБаза,
	|	ОбщийРасчет.Закрыто                                            КАК Закрыто,
	|
	|	ЕСТЬNULL(РасчетПоВариантамНалогообложения.ВариантНалогообложенияПрибыли,
	|				ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК ВариантНалогообложенияПрибыли,
	|	ВЫБОР
	|		КОГДА &ИспользуетсяРаздельныйУчет
	|			ТОГДА ЕСТЬNULL(РасчетПоВариантамНалогообложения.НалоговаяБаза, 0)
	|		ИНАЧЕ
	|			ОбщийРасчет.НалоговаяБаза
	|	КОНЕЦ                                                          КАК НалоговаяБазаПоВариантуНалогообложения
	|
	|ИЗ
	|	РасчетДолейБазыНалогаНаПрибыль КАК ОбщийРасчет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РазвернутыйРасчетПоВариантамНалогообложения КАК РасчетПоВариантамНалогообложения
	|			ПО ОбщийРасчет.РегистрацияВНалоговомОргане = РасчетПоВариантамНалогообложения.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистрацияВНалоговомОргане
	|
	|ИТОГИ
	|	МАКСИМУМ(СтоимостьАмортизируемогоИмущества),
	|	МАКСИМУМ(СтоимостьОСПрошлыхМесяцев),
	|	МАКСИМУМ(СтоимостьОССледующегоМесяца),
	|	МАКСИМУМ(РасходыПоОплатеТруда),
	|	МАКСИМУМ(ДоляНалоговойБазы),
	|	МАКСИМУМ(НалоговаяБаза),
	|	МАКСИМУМ(Закрыто)
	|ПО
	|	РегистрацияВНалоговомОргане
	|
	|";
	
	Расчет = НовыйРасчетРаспределенияНалоговойБазы();
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаОбщийРасчет = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщийРасчет.Следующий() Цикл
		
		НоваяСтрокаРасчета = Расчет.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрокаРасчета, ВыборкаОбщийРасчет);
		
		ВыборкаДетали = ВыборкаОбщийРасчет.Выбрать();
		
		Пока ВыборкаДетали.Следующий() Цикл
			ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
				НоваяСтрокаРасчета,
				ВыборкаДетали.ВариантНалогообложенияПрибыли,
				ВыборкаДетали.НалоговаяБазаПоВариантуНалогообложения);
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Читает из информационной базы данные о фактическом распределении налоговой базы,
// рассчитанные и зарегистрированные регламентной операцией РасчетНалогаНаПрибыль.
//
// Параметры:
//  Расчет		 - ТаблицаЗначений - см. НовыйРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения
//                 Возвращаемый параметр. Следует передать неинициализированную переменную;
//                 процедура поместит в нее результат НовыйРасчетРаспределенияНалоговойБазы().
//  Период		 - Дата - дата, характеризующая отчетный период - любая дата последнего месяца отчетного периода.
//  Организация	 - СправочникСсылка.Организации - налогоплательщик.
//  ВариантНалогообложенияПрибыли - СправочникСсылка.ВариантыНалогообложенияПрибыли, Неопределено -
//
Процедура ПрочитатьРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения(
	Расчет, Период, Организация, ВариантНалогообложенияПрибыли = Неопределено) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("НачалоМесяца", НачалоМесяца(Период));
	Запрос.УстановитьПараметр("КонецМесяца",  КонецМесяца(Период));
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("ВариантНалогообложенияПрибыли",  ВариантНалогообложенияПрибыли);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетДолейБазыНалогаНаПрибыль.Закрыто КАК Закрыто
	|ПОМЕСТИТЬ РасчетДолейБазыНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И РасчетДолейБазыНалогаНаПрибыль.Активность
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
	|	РасчетДолейБазыНалогаНаПрибыль.НалоговаяБаза                 КАК НалоговаяБаза,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы             КАК ДоляНалоговойБазы
	|ПОМЕСТИТЬ РазвернутыйРасчетПоВариантамНалогообложения
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыльПоВариантамНалогообложения КАК РасчетДолейБазыНалогаНаПрибыль
	|
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация = &Организация
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецМесяца
	|	И (&ВариантНалогообложенияПрибыли = НЕОПРЕДЕЛЕНО
	|		ИЛИ РасчетДолейБазыНалогаНаПрибыль.ВариантНалогообложенияПрибыли = &ВариантНалогообложенияПрибыли)
	|	И РасчетДолейБазыНалогаНаПрибыль.Активность
	|
	|;
	|
	|/////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетПоВариантамНалогообложения.РегистрацияВНалоговомОргане   КАК РегистрацияВНалоговомОргане,
	|	РасчетПоВариантамНалогообложения.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
	|	РасчетПоВариантамНалогообложения.НалоговаяБаза                 КАК НалоговаяБаза,
	|	РасчетПоВариантамНалогообложения.ДоляНалоговойБазы             КАК ДоляНалоговойБазы,
	|	ОбщийРасчет.ДоляНалоговойБазы                                  КАК ДоляФНС,
	|	ОбщийРасчет.Закрыто                                            КАК Закрыто
	|ИЗ
	|	РазвернутыйРасчетПоВариантамНалогообложения КАК РасчетПоВариантамНалогообложения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетДолейБазыНалогаНаПрибыль КАК ОбщийРасчет
	|			ПО РасчетПоВариантамНалогообложения.РегистрацияВНалоговомОргане = ОбщийРасчет.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	РегистрацияВНалоговомОргане";
	
	Расчет = НовыйРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения();

	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Расчет.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

// Описание
// 
// Параметры:
// 	ВидыСубконто - Массив Из ПланВидовХарактеристикСсылка.ВидыСубконтоХозрасчетные
Процедура ДобавитьВидСубконтоРегистрацияВНалоговомОргане(ВидыСубконто) Экспорт
	
	ВидыСубконто.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВНалоговомОргане);
	
КонецПроцедуры

// Готовит данные о распределении налоговой базы между обособленными подразделениями в соответствии со ст. 288 НК 
//
// Параметры:
//  РасчетРаспределенияНалоговойБазы	 - см. НовыйРасчетРаспределенияНалоговойБазы
//  КонтекстРасчета						 - см. РасчетНалогаНаПрибыль.НовыйКонтекстРасчета
//  ПараметрТаблицаНалоговаяБаза		 - см. РасчетНалогаНаПрибыль.СуммыНалоговойБазыВРазрезеВариантовНалогообложения
//  МенеджерВременныхТаблиц				 - МенеджерВременныхТаблиц - может применяться для повторного использования (передачи из процедуры в вызывающий код)
//                                         создаваемой в процедуре временной таблицы СоответствиеПрежнихИТекущихНалоговыхОрганов.
//
Процедура ПодготовитьРасчетРаспределенияНалоговойБазы(РасчетРаспределенияНалоговойБазы, КонтекстРасчета, ПараметрТаблицаНалоговаяБаза, МенеджерВременныхТаблиц) Экспорт
	
	Если Не БухгалтерскийУчетПереопределяемый.ВестиУчетПоПодразделениям() Тогда
		Возврат;
	КонецЕсли;
	
	УплачиватьНалогПоГруппамПодразделений = УплачиватьНалогНаПрибыльПоГруппамПодразделений(КонтекстРасчета.Организация, КонтекстРасчета.КонецПериода);
	
	// Создаем временную таблицу НалоговыеОрганыПоНалогуНаПрибыль 
	СоздатьНалоговыеОрганыПоНалогуНаПрибыль(МенеджерВременныхТаблиц, КонтекстРасчета.Организации, КонтекстРасчета.КонецПериода,, УплачиватьНалогПоГруппамПодразделений);
	СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, КонтекстРасчета.Организации, КонтекстРасчета.КонецПериода);
	
	// Убедимся, что имеет смысл рассчитывать базу распределения
	Если НЕ ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц) Тогда
		Возврат;
	КонецЕсли;
	
	// Определим, существует ли запись в РС РасчетДолейБазыНалогаНаПрибыль за прошлый месяц 
	// Если запись есть, то данные прошлых месяцев возьмем из нее, если нет - получим из регистра бухгалтерии.
	// Разница в том, что в РС РасчетДолейБазыНалогаНаПрибыль значения показателей (затраты на оплату труда и стоимость ОС)
	// уже разнесены по тем КПП, которые были актуальны на момент закрытия каждого месяца.
	// Таким образом, остается только выбрать данные текущего месяца (затраты на оплату труда за месяц и стоимость ОС на начало следующего),
	// разнести их по тем КПП, которые актуальны сейчас и сложить с данными из РС.
	// Если же расчет долей ранее не выполнялся (например, ранее не было обособленных подразделений),
	// то указанные показатели выбираются за период с начала года и разносятся по тем КПП, которые актуальны сейчас. 
	ПрошлыйМесяц = ДобавитьМесяц(КонтекстРасчета.КонецПериода, -1);
	ЕстьРасчетДолейЗаПрошлыйМесяц = РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.ЕстьРасчетДолейЗаМесяц(
		КонтекстРасчета.Организации,
		ПрошлыйМесяц);
	
	// Получим суммы расходов по оплате труда за текущий месяц
	
	РасходыПоОплатеТруда = Новый Массив;
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ОплатаТруда);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахование);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеЛичноеСтрахованиеНаСлучайСмертиИлиУтратыРаботоспособности);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.ДобровольноеСтрахованиеПоДоговорамДолгосрочногоСтрахованияЖизниРаботников);
	РасходыПоОплатеТруда.Добавить(Перечисления.ВидыРасходовНУ.РасходыНаВозмещениеЗатратРаботниковПоУплатеПроцентов);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	// Если есть расчет долей за прошлый месяц, то расходы по оплате труда выбираем из регистра бухгалтерии только за текущий месяц.
	// В этом случае позже к ним добавим рассчитанные ранее расходы прошлых месяцев, хранящиеся в РС РасчетДолейБазыНалогаНаПрибыль
	// (см. запрос временной таблицы ДанныеДляРасчета в последнем пакете запросов).
	// Если РС РасчетДолейБазыНалогаНаПрибыль не заполнен, то выбираем здесь данные с начала года 
	Запрос.УстановитьПараметр("НачалоПериода",        ?(ЕстьРасчетДолейЗаПрошлыйМесяц, КонтекстРасчета.НачалоМесяца, КонтекстРасчета.НачалоНалоговогоПериода));
	Запрос.УстановитьПараметр("КонецПериода",         КонтекстРасчета.КонецПериода);
	Запрос.УстановитьПараметр("СписокОрганизаций",    КонтекстРасчета.Организации);
	Запрос.УстановитьПараметр("РасходыПоОплатеТруда", РасходыПоОплатеТруда);
	Запрос.УстановитьПараметр("СчетаРасходов",        БухгалтерскийУчет.СформироватьМассивСубсчетов(НалоговыйУчет.ПолучитьМассивСчетовУчетаРасходов()));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	СтатьиРасходов.Ссылка КАК Статья
	|ПОМЕСТИТЬ СтатьиОплатыТруда
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиРасходов КАК СтатьиРасходов
	|ГДЕ
	|	СтатьиРасходов.ВидРасходов В(&РасходыПоОплатеТруда)
	|	И НЕ СтатьиРасходов.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Статья
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасходыПоОплатеТруда.Организация КАК Организация,
	|	РасходыПоОплатеТруда.Подразделение КАК Подразделение,
	|	СУММА(РасходыПоОплатеТруда.Сумма) КАК Сумма
	|ПОМЕСТИТЬ РасходыПоОплатеТруда
	|ИЗ
	|	(ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотДт, 0) КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В (&СчетаРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.СтатьиЗатрат),
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						СтатьиОплатыТруда.Статья
	|					ИЗ
	|						СтатьиОплатыТруда),
	|			НЕ КорСчет В (&СчетаРасходов),
	|			) КАК ХозрасчетныйОбороты
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ХозрасчетныйОбороты.Организация КАК Организация,
	|		ХозрасчетныйОбороты.Подразделение КАК Подразделение,
	|		ЕСТЬNULL(ХозрасчетныйОбороты.СуммаНУОборотДт, 0) КАК Сумма
	|	ИЗ
	|		РегистрБухгалтерии.Хозрасчетный.Обороты(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			Счет В (&СчетаРасходов),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ТипыЗатрат),
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 = ЗНАЧЕНИЕ(Перечисление.ТипыЗатратРегл.СдельнаяОплатаТруда),
	|			НЕ КорСчет В (&СчетаРасходов) 
	|				И НЕ КорСчет В ИЕРАРХИИ (ЗНАЧЕНИЕ(ПланСчетов.Хозрасчетный.РасчетыПоСоциальномуСтрахованию)),
	|			) КАК ХозрасчетныйОбороты) КАК РасходыПоОплатеТруда
	|
	|СГРУППИРОВАТЬ ПО
	|	РасходыПоОплатеТруда.Организация,
	|	РасходыПоОплатеТруда.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|";
	
	Запрос.Выполнить();
	
	// Письмо Минфина от 23 мая 2014 г. N 03-03-рз/24791 обращает внимание, что для целей ст. 288
	// под амортизируемым имуществом понимаются только основные средства.
	// Поэтому объекты, не являющиеся основными средствами, такие как капитальные вложения,
	// из расчета следует исключить.
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ОсновныеСредства.Ссылка КАК Объект
	|ПОМЕСТИТЬ АрендованноеИмущество
	|ИЗ
	|	Справочник.ОбъектыЭксплуатации КАК ОсновныеСредства
	|ГДЕ
	|	ОсновныеСредства.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.КапитальныеВложенияВАрендованноеИмущество)
	|	ИЛИ ОсновныеСредства.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ЗемельныеУчастки)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Объект";
	Запрос.Выполнить();
	
	// Получим по каждому подразделению
	// - стоимость амортизируемого имущества на начало месяца расчета (СтоимостьОСПрошлыхМесяцев)
	// - стоимость амортизируемого имущества на начало следующего месяца (СтоимостьОССледующегоМесяца)
	
	// Стоимость ОС на начало следующего месяца всегда рассчитываем по данным регистра бухгалтерии.
	// Стоимость ОС на начало месяца расчета (т.е. сумму стоимости ОС на начало каждого месяца с начала года
	// до текущего месяца) получаем по данным РС РасчетДолейБазыНалогаНаПрибыль
	// (см. запрос временной таблицы ДанныеДляРасчета в последнем пакете запросов).
	// Если доли за прошлый месяц не рассчитаны, то стоимость ОС рассчитываем здесь же по данным регистра бухгалтерии - 
	// выбираем остатки на начало каждого месяца периода с начала года.
	
	СчетаАмортизируемогоИмущества = Новый Массив;
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.ОсновныеСредства);
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.АмортизацияОсновныхСредств);
	СчетаАмортизируемогоИмущества.Добавить(ПланыСчетов.Хозрасчетный.ДоходныеВложенияВ_МЦ);
	СчетаАмортизируемогоИмущества = БухгалтерскийУчет.СформироватьМассивСубсчетов(СчетаАмортизируемогоИмущества); // разворачиваем до субсчетов
	
	// На счете 01.К отражается сумма будущих расходов, подлежащих признанию в соответствии с подп. 10 п. 1. ст. 264.
	// Эти суммы не включаются в стоимость ОС.
	КорректировкаСтоимостиАрендованногоИмущества = БухгалтерскийУчетПовтИсп.СчетаВИерархии(
		ПланыСчетов.Хозрасчетный.КорректировкаСтоимостиАрендованногоИмущества);
		
	СчетаАмортизируемогоИмущества = ОбщегоНазначенияКлиентСервер.РазностьМассивов(
		СчетаАмортизируемогоИмущества,
		КорректировкаСтоимостиАрендованногоИмущества);
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СчетаАмортизируемогоИмущества", 	СчетаАмортизируемогоИмущества);
	Запрос.УстановитьПараметр("СписокОрганизаций",    			КонтекстРасчета.Организации);
	Запрос.УстановитьПараметр("НачалоПериода",        			КонтекстРасчета.НачалоМесяца);
	Запрос.УстановитьПараметр("НачалоСледующегоМесяца", 		КонтекстРасчета.КонецПериода + 1);
	
	// Текст запроса далее может быть модифицирован схемой запроса - см. ДобавитьПериодыВЗапросОстатковАмортизируемогоИмущества()
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация КАК Организация,
	|	ХозрасчетныйОстатки.Подразделение КАК Подразделение,
	|	0 КАК СтоимостьОСПрошлыхМесяцев,
	|	ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0) КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ СтоимостьАмортизируемогоИмущества
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|		&НачалоСледующегоМесяца, 
	|		Счет В (&СчетаАмортизируемогоИмущества), 
	|		ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства), 
	|		Организация В (&СписокОрганизаций)) КАК ХозрасчетныйОстатки
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ХозрасчетныйОстатки.Организация,
	|	ХозрасчетныйОстатки.Подразделение,
	|	0,
	|	-ЕСТЬNULL(ХозрасчетныйОстатки.СуммаНУОстаток, 0)
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.Остатки(
	|			&НачалоСледующегоМесяца,
	|			Счет В (&СчетаАмортизируемогоИмущества),
	|			ЗНАЧЕНИЕ(ПланВидовХарактеристик.ВидыСубконтоХозрасчетные.ОсновныеСредства),
	|			Организация В (&СписокОрганизаций)
	|				И Субконто1 В
	|					(ВЫБРАТЬ
	|						АрендованноеИмущество.Объект КАК Объект
	|					ИЗ
	|						АрендованноеИмущество КАК АрендованноеИмущество)) КАК ХозрасчетныйОстатки";
	
	// См. письма Минфина 
	// - от 10 марта 2006 г. N 03-03-04/1/199
	//   "Средняя (среднегодовая) остаточная стоимость указанных основных средств за отчетный (налоговый) период
	//    определяется аналогично порядку, изложенному в п. 4 ст. 376 Кодекса,
	//    как частное от деления суммы, полученной в результате сложения величин остаточной стоимости основных средств 
	//    на 1-е число каждого месяца отчетного (налогового) периода и 1-е число следующего за отчетным (налоговым) периодом месяца,
	//    на количество месяцев в отчетном (налоговом) периоде, увеличенное на единицу."
	// - от 30 декабря 2004 г. N 03-06-01-02/26
	//   "при определении средней стоимости имущества должно учитываться общее количество месяцев в календарном году,
	//    а также в соответствующем отчетном периоде (т.е. квартале, полугодии и 9 месяцах календарного года)."
	
	// С учетом этого 
	// - для организации, зарегистрированной в декабре
	//  -- в первый месяц (декабрь) средняя рассчитывается как 1/13 суммы на конец декабря
	//     (это значение используется лишь для того, чтобы примерно посчитать ставку для ПБУ 18, но не участвует в расчете показателей декларации)
	//  -- во второй месяц (январь) и далее - как средняя за календарный год (для января - средняя сумм на начало и конец января)
	// - для организации, зарегистрированной в другом месяце (например, сентябре) - как средняя за календарный год,
	//   предполагая учет значений за месяцы до регистрации организации - считая их равными 0.
	//   Например:
	//  -- за сентябрь - 1/10 стоимости на конец сентября 
	//  -- за год      - 1/13 стоимости на конец сентября, октября, ноября, декабря
	
	Если Не ЕстьРасчетДолейЗаПрошлыйМесяц Тогда
		
		ДобавляемыеПериоды = Новый Массив;
		
		ПрошлыйПериод = КонтекстРасчета.НачалоМесяца;
		
		Пока ПрошлыйПериод >= КонтекстРасчета.НачалоНалоговогоПериода Цикл
			
			// Если организация зарегистрирована 1 декабря, то в первом налоговом периоде будет добавляться избыточный запрос на 1 декабря года регистрации.
			// Такой запрос не кажется проблемой - он заведомо ничего не вернет, т.к. на момент регистрации в организации не может быть амортизируемого имущества
		
			ДобавляемыеПериоды.Добавить(ПрошлыйПериод);
			ПрошлыйПериод = ДобавитьМесяц(ПрошлыйПериод, -1);
			
		КонецЦикла;
		
		ДобавитьПериодыВЗапросОстатковАмортизируемогоИмущества(Запрос, ДобавляемыеПериоды);
		
	КонецЕсли;
	
	// Сложим в одну таблицу все данные в разрезе налоговых органов
	// - оплату труда
	// - стоимость амортизируемого имущества
	// - среднесписочная численность
	
	// В запросе временной таблицы ДанныеДляРасчета во 2-м и 3-м подзапросах объединения выбираем данные, рассчитанные в предыдущем месяце.
	// СтоимостьОСПрошлыхМесяцев в текущем месяце равна сумме СтоимостьОСПрошлыхМесяцев и СтоимостьОССледующегоМесяца, рассчитанных в прошлом месяце.
	// Но если текущий месяц - январь, то СтоимостьОСПрошлыхМесяцев равна СтоимостьОССледующегоМесяца, рассчитанная в декабре.
	// Если используется уплата налога по группам подразделений, то данные прошлых периодов по региону относим на текущий налоговый орган -
	// получатель декларации по региону (кроме случая, когда в прежнем периоде закрылась вся группа подразделений - см. условие соединения).
	// Если не используется уплата налога по группам подразделений, то данные по прежним регистрациям головной организации
	// относим на текущую регистрацию головной организации.
		
	// По закрытым подразделениям (КПП) в норме не должно быть остатков ОС и расходов по оплате труда после закрытия.
	// Но если остатки ОС и начисления по зарплате остались в учете на закрытых регистрациях,
	// то за периоды после закрытия относим эти данные на регистрацию (КПП) головной организации
	// (см. 1-й подзапрос объединения в запросе врем. табл. ПоказателиПоНалоговымОрганам)
	
	// Также в распределение должны попасть все регистрации (КПП),
	// которые использовались в течение периода, кроме тех, которые:
	//	- закрыты до начала года
	//	- открыты после окончания текущего отчетного периода
	// (см. 2-й подзапрос объединения в запросе врем. табл. ПоказателиПоНалоговымОрганам).
	// Здесь также если не используется уплата налога по группам подразделений, то прежние регистрации головной организации подменяются на текущую.
	
	Запрос.Выполнить();
	
	Запрос.УстановитьПараметр("Организация",                           КонтекстРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода",               КонтекстРасчета.НачалоНалоговогоПериода);
	Запрос.УстановитьПараметр("НачалоПрошлогоМесяца",	               НачалоМесяца(ПрошлыйМесяц));
	Запрос.УстановитьПараметр("КонецПрошлогоМесяца",	               КонецМесяца(ПрошлыйМесяц));
	Запрос.УстановитьПараметр("КонецПериода",			               КонтекстРасчета.КонецПериода);
	Запрос.УстановитьПараметр("УплачиватьНалогПоГруппамПодразделений", УплачиватьНалогПоГруппамПодразделений);
	Запрос.УстановитьПараметр("РегистрацияГоловнойОрганизации",        КонтекстРасчета.РегистрацияПоМестуНахожденияОрганизации);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ДанныеДляРасчета.Организация КАК Организация,
	|	ДанныеДляРасчета.Подразделение КАК Подразделение,
	|	СУММА(ДанныеДляРасчета.РасходыПоОплатеТруда) КАК РасходыПоОплатеТруда,
	|	СУММА(ДанныеДляРасчета.СтоимостьОСПрошлыхМесяцев) КАК СтоимостьОСПрошлыхМесяцев,
	|	СУММА(ДанныеДляРасчета.СтоимостьОССледующегоМесяца) КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ ДанныеТекущегоПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		ОплатаТруда.Организация КАК Организация,
	|		ОплатаТруда.Подразделение КАК Подразделение,
	|		ОплатаТруда.Сумма КАК РасходыПоОплатеТруда,
	|		0 КАК СтоимостьОСПрошлыхМесяцев,
	|		0 КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		РасходыПоОплатеТруда КАК ОплатаТруда
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		АмортизируемоеИмущество.Организация,
	|		АмортизируемоеИмущество.Подразделение,
	|		0,
	|		АмортизируемоеИмущество.СтоимостьОСПрошлыхМесяцев,
	|		АмортизируемоеИмущество.СтоимостьОССледующегоМесяца
	|	ИЗ
	|		СтоимостьАмортизируемогоИмущества КАК АмортизируемоеИмущество) КАК ДанныеДляРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчета.Организация,
	|	ДанныеДляРасчета.Подразделение
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&РегистрацияГоловнойОрганизации КАК НалоговыйОрганТекущий,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане КАК НалоговыйОрганПрежний
	|ПОМЕСТИТЬ СоответствиеПрежнихИТекущихНалоговыхОргановПредварительная
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|ГДЕ
	|	НЕ &УплачиватьНалогПоГруппамПодразделений
	|	И ИсторияРегистраций.СтруктурнаяЕдиница = &Организация
	|	И ИсторияРегистраций.Период МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	&РегистрацияГоловнойОрганизации,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|			&НачалоНалоговогоПериода,
	|			НЕ &УплачиватьНалогПоГруппамПодразделений
	|				И СтруктурнаяЕдиница = &Организация) КАК ИсторияРегистраций
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации,
	|	НалоговыеОрганыПодачиДеклараций.НалоговыйОрган
	|ИЗ
	|	НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПодачиДеклараций
	|ГДЕ
	|	&УплачиватьНалогПоГруппамПодразделений
	|	И (НалоговыеОрганыПодачиДеклараций.НалоговыйОрган.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1)
	|			ИЛИ НалоговыеОрганыПодачиДеклараций.НалоговыйОрган.ДатаСнятияСУчета > &КонецПрошлогоМесяца
	|			ИЛИ НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации = &РегистрацияГоловнойОрганизации)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаСоответствия.НалоговыйОрганТекущий КАК НалоговыйОрганТекущий,
	|	ТаблицаСоответствия.НалоговыйОрганПрежний КАК НалоговыйОрганПрежний
	|ПОМЕСТИТЬ СоответствиеПрежнихИТекущихНалоговыхОрганов
	|ИЗ
	|	СоответствиеПрежнихИТекущихНалоговыхОргановПредварительная КАК ТаблицаСоответствия
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НалоговыйОрганПрежний
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ СоответствиеПрежнихИТекущихНалоговыхОргановПредварительная
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДанныеДляРасчета.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ДанныеДляРасчета.РасходыПоОплатеТруда) КАК РасходыПоОплатеТруда,
	|	СУММА(ДанныеДляРасчета.СтоимостьОСПрошлыхМесяцев) КАК СтоимостьОСПрошлыхМесяцев,
	|	СУММА(ДанныеДляРасчета.СтоимостьОССледующегоМесяца) КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ ДанныеДляРасчета
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫРАЗИТЬ(ЕСТЬNULL(НеОбособ.НалоговыйОрган, Филиалы.НалоговыйОрган) КАК Справочник.РегистрацииВНалоговомОргане) КАК РегистрацияВНалоговомОргане,
	|		ДанныеТекущегоПериода.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|		ДанныеТекущегоПериода.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|		ДанныеТекущегоПериода.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		ДанныеТекущегоПериода КАК ДанныеТекущегоПериода
	|			ЛЕВОЕ СОЕДИНЕНИЕ НеОбособленныеПодразделения КАК НеОбособ
	|			ПО ДанныеТекущегоПериода.Организация = НеОбособ.Организация
	|				И ДанныеТекущегоПериода.Подразделение = НеОбособ.Подразделение
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ Филиалы КАК Филиалы
	|			ПО ДанныеТекущегоПериода.Организация = Филиалы.Организация
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСТЬNULL(СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганТекущий, РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане),
	|		РасчетДолейБазыНалогаНаПрибыль.РасходыПоОплатеТруда,
	|		РасчетДолейБазыНалогаНаПрибыль.СтоимостьОСПрошлыхМесяцев,
	|		0
	|	ИЗ
	|		РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеПрежнихИТекущихНалоговыхОрганов КАК СоответствиеПрежнихИТекущихНалоговыхОрганов
	|			ПО РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганПрежний
	|	ГДЕ
	|		РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоПрошлогоМесяца И &КонецПрошлогоМесяца
	|		И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета >= &НачалоНалоговогоПериода
	|		И РасчетДолейБазыНалогаНаПрибыль.Организация В(&СписокОрганизаций)
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ЕСТЬNULL(СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганТекущий, РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане),
	|		0,
	|		РасчетДолейБазыНалогаНаПрибыль.СтоимостьОССледующегоМесяца,
	|		0
	|	ИЗ
	|		РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеПрежнихИТекущихНалоговыхОрганов КАК СоответствиеПрежнихИТекущихНалоговыхОрганов
	|			ПО РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганПрежний
	|	ГДЕ
	|		РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &НачалоПрошлогоМесяца И &КонецПрошлогоМесяца
	|		И РасчетДолейБазыНалогаНаПрибыль.Организация В(&СписокОрганизаций)) КАК ДанныеДляРасчета
	|
	|СГРУППИРОВАТЬ ПО
	|	ДанныеДляРасчета.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ПоказателиПоНалоговымОрганам.РасходыПоОплатеТруда) КАК РасходыПоОплатеТруда,
	|	СУММА(ПоказателиПоНалоговымОрганам.СтоимостьОСПрошлыхМесяцев) КАК СтоимостьОСПрошлыхМесяцев,
	|	СУММА(ПоказателиПоНалоговымОрганам.СтоимостьОССледующегоМесяца) КАК СтоимостьОССледующегоМесяца
	|ПОМЕСТИТЬ ПоказателиПоНалоговымОрганамПредварительный
	|ИЗ
	|	(ВЫБРАТЬ
	|		ВЫБОР
	|			КОГДА ДанныеДляРасчета.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|					И ДанныеДляРасчета.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <= &КонецПериода
	|				ТОГДА &РегистрацияГоловнойОрганизации
	|			ИНАЧЕ ДанныеДляРасчета.РегистрацияВНалоговомОргане
	|		КОНЕЦ КАК РегистрацияВНалоговомОргане,
	|		ДанныеДляРасчета.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|		ДанныеДляРасчета.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|		ДанныеДляРасчета.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца
	|	ИЗ
	|		ДанныеДляРасчета КАК ДанныеДляРасчета
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ РАЗЛИЧНЫЕ
	|		ЕСТЬNULL(СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганТекущий, НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации),
	|		0,
	|		0,
	|		0
	|	ИЗ
	|		НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПодачиДеклараций
	|			ЛЕВОЕ СОЕДИНЕНИЕ СоответствиеПрежнихИТекущихНалоговыхОрганов КАК СоответствиеПрежнихИТекущихНалоговыхОрганов
	|			ПО (НЕ &УплачиватьНалогПоГруппамПодразделений)
	|				И НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации = СоответствиеПрежнихИТекущихНалоговыхОрганов.НалоговыйОрганПрежний
	|	ГДЕ
	|		НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации.ДатаПостановкиНаУчет <= &КонецПериода
	|		И (НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1)
	|				ИЛИ НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации.ДатаСнятияСУчета >= &НачалоНалоговогоПериода)) КАК ПоказателиПоНалоговымОрганам
	|
	|СГРУППИРОВАТЬ ПО
	|	ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаПоказателей.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	СУММА(ТаблицаПоказателей.СреднесписочнаяЧисленностьСотрудников) / (РАЗНОСТЬДАТ(&НачалоНалоговогоПериода, &КонецПериода, МЕСЯЦ) + 1) КАК СреднесписочнаяЧисленность
	|ПОМЕСТИТЬ ПоказателиСтатистикиПерсонала
	|ИЗ
	|	Документ.СтатистикаПерсонала.Показатели КАК ТаблицаПоказателей
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СтатистикаПерсонала КАК СтатистикаПерсонала
	|		ПО ТаблицаПоказателей.Ссылка = СтатистикаПерсонала.Ссылка
	|ГДЕ
	|	СтатистикаПерсонала.Организация В (&СписокОрганизаций)
	|	И СтатистикаПерсонала.Проведен
	|	И СтатистикаПерсонала.ПериодРегистрации МЕЖДУ &НачалоНалоговогоПериода И &КонецПериода
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаПоказателей.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПоказателиПоНалоговымОрганам.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|	ПоказателиПоНалоговымОрганам.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|	ПоказателиПоНалоговымОрганам.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца,
	|	ЕСТЬNULL(СтатистикаПерсонала.СреднесписочнаяЧисленность, 0) КАК СреднесписочнаяЧисленность
	|ПОМЕСТИТЬ ПоказателиПоНалоговымОрганам
	|ИЗ
	|	ПоказателиПоНалоговымОрганамПредварительный КАК ПоказателиПоНалоговымОрганам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПоказателиСтатистикиПерсонала КАК СтатистикаПерсонала
	|		ПО ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане = СтатистикаПерсонала.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане.ДатаСнятияСУчета КАК ДатаСнятияСУчета
	|ИЗ
	|	ПоказателиПоНалоговымОрганам КАК ЗакрытыеПодразделения
	|ГДЕ
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане <> &РегистрацияГоловнойОрганизации
	|	И ЗакрытыеПодразделения.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|	И ЗакрытыеПодразделения.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <= &КонецПериода";
	
	// По закрытым подразделениям (регистрациям) рассчитывается ПоследнийОтчетныйПериод - это конец последнего месяца того отчетного периода,
	// после которого закрылось подразделение. Этот отчетный период считается последним для закрытого подразделения, 
	// и из него берутся доля и налоговая база закрытого подразделения (регистрации).
	
	ЗакрытыеПодразделения = Новый ТаблицаЗначений;
	ЗакрытыеПодразделения.Колонки.Добавить("РегистрацияВНалоговомОргане", Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ЗакрытыеПодразделения.Колонки.Добавить("ДатаСнятияСУчета",            Новый ОписаниеТипов("Дата"));
	ЗакрытыеПодразделения.Колонки.Добавить("ПоследнийОтчетныйПериод",     Новый ОписаниеТипов("Дата"));
	ЗакрытыеПодразделения.Колонки.Добавить("НачалоПоследнегоМесяца",      Новый ОписаниеТипов("Дата"));
	ЗакрытыеПодразделения.Колонки.Добавить("КонецПоследнегоМесяца",       Новый ОписаниеТипов("Дата"));
	
	НалоговыйПериодКеш = Новый Соответствие;
	
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		
		// Показатели закрытых подразделений учитываются особым образом с отчетного периода, следующего за его закрытием.
			
		ОписаниеПодразделения = ЗакрытыеПодразделения.Добавить();
		
		ЗаполнитьЗначенияСвойств(ОписаниеПодразделения, Выборка);
		ОписаниеПодразделения.ПоследнийОтчетныйПериод = НалоговыйУчет.КонецПредыдущегоОтчетногоПериода(
			Выборка.ДатаСнятияСУчета,
			КонтекстРасчета.Организация,
			НалоговыйПериодКеш);	
			
		// Если регистрация (КПП) закрыта в первом отчетном периоде, то декларация по ней не представляется
		// См. Письмо ИФНС по г.Москве от 13 апреля 2010 г. N 16-15/038587
		// То есть, если это первый отчетный период года, то расчеты по подразделениям, закрытым в этом периоде, не создаем
		
		Если Не ЗначениеЗаполнено(ОписаниеПодразделения.ПоследнийОтчетныйПериод) Тогда
			Продолжить;
		КонецЕсли;
		
		ОписаниеПодразделения.НачалоПоследнегоМесяца = НачалоМесяца(ОписаниеПодразделения.ПоследнийОтчетныйПериод);
		ОписаниеПодразделения.КонецПоследнегоМесяца  = КонецМесяца(ОписаниеПодразделения.ПоследнийОтчетныйПериод);
		
	КонецЦикла;
	
	Запрос.Параметры.Вставить("ЗакрытыеПодразделения", ЗакрытыеПодразделения);
	Запрос.Текст =
	"ВЫБРАТЬ
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЗакрытыеПодразделения.ДатаСнятияСУчета КАК ДатаСнятияСУчета,
	|	ЗакрытыеПодразделения.ПоследнийОтчетныйПериод КАК ПоследнийОтчетныйПериод,
	|	ЗакрытыеПодразделения.НачалоПоследнегоМесяца КАК НачалоПоследнегоМесяца,
	|	ЗакрытыеПодразделения.КонецПоследнегоМесяца КАК КонецПоследнегоМесяца
	|ПОМЕСТИТЬ ЗакрытыеПодразделения
	|ИЗ
	|	&ЗакрытыеПодразделения КАК ЗакрытыеПодразделения
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЗакрытыеПодразделения.НачалоПоследнегоМесяца КАК ПоследнийОтчетныйПериод,
	|	МАКСИМУМ(РасчетПоследнегоОтчетногоПериода.ПериодРасчета) КАК ПериодРасчета,
	|	РасчетПоследнегоОтчетногоПериода.Организация КАК Организация,
	|	РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ КлючиДанныхЗакрытыхПодразделений
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетПоследнегоОтчетногоПериода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ЗакрытыеПодразделения КАК ЗакрытыеПодразделения
	|		ПО РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане = ЗакрытыеПодразделения.РегистрацияВНалоговомОргане
	|			И (РасчетПоследнегоОтчетногоПериода.Организация = &Организация)
	|			И (РасчетПоследнегоОтчетногоПериода.ПериодРасчета МЕЖДУ ЗакрытыеПодразделения.НачалоПоследнегоМесяца И ЗакрытыеПодразделения.КонецПоследнегоМесяца)
	|
	|СГРУППИРОВАТЬ ПО
	|	ЗакрытыеПодразделения.НачалоПоследнегоМесяца,
	|	РасчетПоследнегоОтчетногоПериода.Организация,
	|	РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ПериодРасчета,
	|	Организация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетПоследнегоОтчетногоПериода.ПериодРасчета КАК ПериодРасчета,
	|	РасчетПоследнегоОтчетногоПериода.Организация КАК Организация,
	|	РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетПоследнегоОтчетногоПериода.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетПоследнегоОтчетногоПериода.НалоговаяБаза КАК НалоговаяБаза
	|ПОМЕСТИТЬ РасчетПоследнегоОтчетногоПериода
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетПоследнегоОтчетногоПериода
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ КлючиДанныхЗакрытыхПодразделений КАК КлючиДанныхЗакрытыхПодразделений
	|		ПО РасчетПоследнегоОтчетногоПериода.ПериодРасчета = КлючиДанныхЗакрытыхПодразделений.ПериодРасчета
	|			И РасчетПоследнегоОтчетногоПериода.Организация = КлючиДанныхЗакрытыхПодразделений.Организация
	|			И РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане = КлючиДанныхЗакрытыхПодразделений.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане";
	
	Запрос.Выполнить();
	
	// Для читаемости кода данные выбираются на сервер приложения отдельными запросами - см. ниже.
	
	// Рассчитываем доли налоговой базы по закрытым и действующим КПП (подразделениям).
	
	Если КонтекстРасчета.КонецПериода < '2014-01-01' Тогда
		ТочностьРасчета = 2;
	Иначе
		ТочностьРасчета = 0; // с 2014 года налог на прибыль исчисляется в целых рублях
	КонецЕсли;
	
	// Сначала выполняем расчет долей и налоговых баз для закрытых КПП,
	// поскольку остаток общей налоговой базы по организации далее будем распределять между действующими КПП согласно рассчитанным долям.
	
	// Выбираются доля и налоговая база, рассчитанные в последнем перед их закрытием отчетном периоде.
	// Однако, база затем может быть уточнена - см. УточнитьБазуНалогаНаПрибыльЗакрытыхРегистраций().
	// Для этого данные о закрытых подразделениях упорядочены.
	//
	// Имена полей соответствуют таблице конструктора НовыйРасчетРаспределенияНалоговойБазы().
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЗакрытыеПодразделения.ПоследнийОтчетныйПериод КАК ПоследнийОтчетныйПериод,
	|
	|	ЕСТЬNULL(РасчетПоследнегоОтчетногоПериода.ДоляНалоговойБазы, 0) КАК ДоляНалоговойБазы,
	|	ЕСТЬNULL(РасчетПоследнегоОтчетногоПериода.НалоговаяБаза, 0) КАК НалоговаяБаза,
	|
	|	ЕСТЬNULL(РасчетПоВариантамНалогообложения.ВариантНалогообложенияПрибыли,
	|			ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК ВариантНалогообложенияПрибыли,
	|
	|	ВЫБОР
	|		КОГДА &ИспользуетсяРаздельныйУчет
	|			ТОГДА ЕСТЬNULL(РасчетПоВариантамНалогообложения.НалоговаяБаза, 0)
	|		ИНАЧЕ
	|			ЕСТЬNULL(РасчетПоследнегоОтчетногоПериода.НалоговаяБаза, 0)
	|	КОНЕЦ                                                               КАК НалоговаяБазаПоВариантуНалогообложения
	|
	|ИЗ
	|	ЗакрытыеПодразделения КАК ЗакрытыеПодразделения
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетПоследнегоОтчетногоПериода КАК РасчетПоследнегоОтчетногоПериода
	|			ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.РасчетДолейБазыНалогаНаПрибыльПоВариантамНалогообложения КАК РасчетПоВариантамНалогообложения
	|				ПО &ИспользуетсяРаздельныйУчет
	|				И РасчетПоследнегоОтчетногоПериода.ПериодРасчета = РасчетПоВариантамНалогообложения.ПериодРасчета
	|				И РасчетПоследнегоОтчетногоПериода.Организация = РасчетПоВариантамНалогообложения.Организация
	|				И РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане = РасчетПоВариантамНалогообложения.РегистрацияВНалоговомОргане
	|		ПО ЗакрытыеПодразделения.РегистрацияВНалоговомОргане = РасчетПоследнегоОтчетногоПериода.РегистрацияВНалоговомОргане
	|
	|УПОРЯДОЧИТЬ ПО
	|	НалоговаяБаза УБЫВ,
	|	ДоляНалоговойБазы УБЫВ,
	|	ПоследнийОтчетныйПериод УБЫВ,
	|	РегистрацияВНалоговомОргане
	|
	|ИТОГИ
	|	МАКСИМУМ(ПоследнийОтчетныйПериод),
	|	МАКСИМУМ(ДоляНалоговойБазы),
	|	МАКСИМУМ(НалоговаяБаза)
	|ПО
	|	РегистрацияВНалоговомОргане
	|
	|";
	
	Запрос.УстановитьПараметр("ИспользуетсяРаздельныйУчет", КонтекстРасчета.ИспользуетсяРаздельныйУчет);
	
	РасчетЗакрытыхПодразделений = НовыйРасчетРаспределенияНалоговойБазы();
	ВыборкаОбщийРасчет          = Запрос.Выполнить().Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	Пока ВыборкаОбщийРасчет.Следующий() Цикл
		
		// Если регистрация (КПП) закрыта в первом отчетном периоде, то декларация по ней не представляется
		// См. Письмо ИФНС по г.Москве от 13 апреля 2010 г. N 16-15/038587
		
		Если Не ЗначениеЗаполнено(ВыборкаОбщийРасчет.ПоследнийОтчетныйПериод) Тогда
			Продолжить;
		КонецЕсли;	
		
		НоваяСтрокаЗакрытыхПодразделений = РасчетЗакрытыхПодразделений.Добавить();
		
		ЗаполнитьЗначенияСвойств(НоваяСтрокаЗакрытыхПодразделений, ВыборкаОбщийРасчет);
		
		ВыборкаДетали = ВыборкаОбщийРасчет.Выбрать();
		
		Пока ВыборкаДетали.Следующий() Цикл
			ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
				НоваяСтрокаЗакрытыхПодразделений,
				ВыборкаДетали.ВариантНалогообложенияПрибыли,
				ВыборкаДетали.НалоговаяБазаПоВариантуНалогообложения);
		КонецЦикла;
		
	КонецЦикла;
	
	РасчетЗакрытыхПодразделений.ЗаполнитьЗначения(Истина, "Закрыто");
	
	ТаблицаНалоговаяБаза = НовыйНалоговаяБазаПоВариантамНалогообложения(ПараметрТаблицаНалоговаяБаза);
	
	УточнитьБазуНалогаНаПрибыльЗакрытыхРегистраций(
		РасчетЗакрытыхПодразделений,
		ТаблицаНалоговаяБаза,
		КонтекстРасчета,
		ТочностьРасчета);
	
	// Остаток текущей налоговой базы распределяем между действующими КПП в соответствии с долями.
	// При этом сумма долей по действующим КПП должна быть 1. 
	
	// Упорядочивание в запросе не выполняется - данные сортируются после расчета базы.
	// Имена полей соответствуют таблице конструктора НовыйРасчетРаспределенияНалоговойБазы().
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ПоказателиПоНалоговымОрганам.РасходыПоОплатеТруда КАК РасходыПоОплатеТруда,
	|	ПоказателиПоНалоговымОрганам.СтоимостьОСПрошлыхМесяцев КАК СтоимостьОСПрошлыхМесяцев,
	|	ПоказателиПоНалоговымОрганам.СтоимостьОССледующегоМесяца КАК СтоимостьОССледующегоМесяца,
	|	ПоказателиПоНалоговымОрганам.СреднесписочнаяЧисленность КАК СреднесписочнаяЧисленность
	|ИЗ
	|	ПоказателиПоНалоговымОрганам КАК ПоказателиПоНалоговымОрганам
	|		ЛЕВОЕ СОЕДИНЕНИЕ ЗакрытыеПодразделения КАК ЗакрытыеПодразделения
	|		ПО ПоказателиПоНалоговымОрганам.РегистрацияВНалоговомОргане = ЗакрытыеПодразделения.РегистрацияВНалоговомОргане
	|ГДЕ
	|	ЗакрытыеПодразделения.РегистрацияВНалоговомОргане ЕСТЬ NULL";
	
	РасчетДействующихПодразделений = НовыйРасчетРаспределенияНалоговойБазы();
	Выборка = Запрос.Выполнить().Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(РасчетДействующихПодразделений.Добавить(), Выборка);
	КонецЦикла;
	
	// Согласно п. 10.2 Порядка заполнения декларации:
	// "[Налоговая база подразделения] определяются путем умножения показателя [общая налоговая база по организации] ...
	// на [долю налоговой базы]."
	
	// Для определения остаточной стоимости основных средств за отчетный (налоговый) период 
	// рассчитывается показатель средней (среднегодовой) остаточной стоимости основных средств
	// аналогично порядку п. 4 ст. 376 НК - в соответствии с письмом Минфина от 10 марта 2006 г. N 03-03-04/1/199
	
	КоличествоМесяцевКалендарногоГода = Месяц(КонтекстРасчета.КонецПериода);
	
	Если КонтекстРасчета.ПоказательОпределенияДолиПрибыли = Перечисления.ПоказателиДляОпределенияДолиПрибыли.СреднесписочнаяЧисленность Тогда
		ИтогПоказательОпределенияДолиПрибыли = РасчетДействующихПодразделений.Итог("СреднесписочнаяЧисленность");
	Иначе
		ИтогПоказательОпределенияДолиПрибыли = РасчетДействующихПодразделений.Итог("РасходыПоОплатеТруда");
	КонецЕсли;
	ИтогСредняяСтоимостьИмущества = 
		(РасчетДействующихПодразделений.Итог("СтоимостьОСПрошлыхМесяцев") + РасчетДействующихПодразделений.Итог("СтоимостьОССледующегоМесяца"))
		/ (КоличествоМесяцевКалендарногоГода + 1);
		
	Для Каждого Запись Из РасчетДействующихПодразделений Цикл
			
		// Расчет среднегодовой стоимости ОС по подразделению сохраняем в отдельную переменную, чтобы избежать округления
		СтоимостьАмортизируемогоИмущества = 
			(Запись.СтоимостьОСПрошлыхМесяцев + Запись.СтоимостьОССледующегоМесяца) 
			/ (КоличествоМесяцевКалендарногоГода + 1);
			
		Запись.СтоимостьАмортизируемогоИмущества = СтоимостьАмортизируемогоИмущества;
		
		Если КонтекстРасчета.ПоказательОпределенияДолиПрибыли = Перечисления.ПоказателиДляОпределенияДолиПрибыли.СреднесписочнаяЧисленность Тогда
			ПоказательОпределенияДолиПрибыли = Запись.СреднесписочнаяЧисленность;
		Иначе
			ПоказательОпределенияДолиПрибыли = Запись.РасходыПоОплатеТруда;
		КонецЕсли;
		
		Если ИтогПоказательОпределенияДолиПрибыли = 0 И ИтогСредняяСтоимостьИмущества = 0 Тогда
			Запись.ДоляНалоговойБазы = 0;
		ИначеЕсли ИтогПоказательОпределенияДолиПрибыли = 0 Тогда
			Запись.ДоляНалоговойБазы = СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества;
		ИначеЕсли ИтогСредняяСтоимостьИмущества = 0 Тогда
			Запись.ДоляНалоговойБазы = ПоказательОпределенияДолиПрибыли / ИтогПоказательОпределенияДолиПрибыли;
		Иначе
			Запись.ДоляНалоговойБазы = 
				(СтоимостьАмортизируемогоИмущества / ИтогСредняяСтоимостьИмущества
				+ ПоказательОпределенияДолиПрибыли / ИтогПоказательОпределенияДолиПрибыли)
				/2;
		КонецЕсли;
		
		// Налоговую базу по каждому варианту н/о умножаем на рассчитанную долю
		// Агрегированное значение по всем вариантам н/о записываем в Запись.НалоговаяБаза
		Запись.НалоговаяБаза = 0;
		Для каждого СтрокаНалоговаяБаза Из ТаблицаНалоговаяБаза Цикл
			
			НалоговаяБазаПоВариантуНалогообложения =
				Окр(Запись.ДоляНалоговойБазы * СтрокаНалоговаяБаза.НалоговаяБаза, ТочностьРасчета);
			
			ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
				Запись,
				СтрокаНалоговаяБаза.ВариантНалогообложенияПрибыли,
				НалоговаяБазаПоВариантуНалогообложения);
			
			Запись.НалоговаяБаза = Запись.НалоговаяБаза + НалоговаяБазаПоВариантуНалогообложения;
			
		КонецЦикла;
		
	КонецЦикла;
	
	РасчетДействующихПодразделений.Сортировать("НалоговаяБаза УБЫВ, ДоляНалоговойБазы УБЫВ, ПоследнийОтчетныйПериод УБЫВ, РегистрацияВНалоговомОргане", Новый СравнениеЗначений);
	
	// Отклонение округления добавляем в самую большую долю	
	ПогрешностьОкругления = 1 - РасчетДействующихПодразделений.Итог("ДоляНалоговойБазы");
	Если ЗначениеЗаполнено(РасчетДействующихПодразделений) И ПогрешностьОкругления <> 0 Тогда
		
		ЗаписьМаксимальнойДоли = РасчетДействующихПодразделений[0];
		ЗаписьМаксимальнойДоли.ДоляНалоговойБазы = ЗаписьМаксимальнойДоли.ДоляНалоговойБазы + ПогрешностьОкругления;
		
		// Налоговую базу по каждому варианту н/о умножаем на рассчитанную долю
		// Агрегированное значение по всем вариантам н/о записываем в Запись.НалоговаяБаза
		ЗаписьМаксимальнойДоли.НалоговаяБаза = 0;
		Для каждого СтрокаНалоговаяБаза Из ТаблицаНалоговаяБаза Цикл
			
			НалоговаяБазаПоВариантуНалогообложения =
				Окр(ЗаписьМаксимальнойДоли.ДоляНалоговойБазы * СтрокаНалоговаяБаза.НалоговаяБаза, ТочностьРасчета);
			
			ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
				ЗаписьМаксимальнойДоли,
				СтрокаНалоговаяБаза.ВариантНалогообложенияПрибыли,
				НалоговаяБазаПоВариантуНалогообложения);
			
			ЗаписьМаксимальнойДоли.НалоговаяБаза =
				ЗаписьМаксимальнойДоли.НалоговаяБаза + НалоговаяБазаПоВариантуНалогообложения;
			
		КонецЦикла;
		
	КонецЕсли;
	
	РасчетРаспределенияНалоговойБазы = НовыйРасчетРаспределенияНалоговойБазы();
	
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетДействующихПодразделений, РасчетРаспределенияНалоговойБазы);
	ОбщегоНазначенияКлиентСервер.ДополнитьТаблицу(РасчетЗакрытыхПодразделений,    РасчетРаспределенияНалоговойБазы);
	
КонецПроцедуры

// Возвращает развернутый расчет налоговой базы по вариантам н/о. 
// Если нет исходных данных по вариантам н/о, будет возвращена пустая таблица.
// 
// Параметры:
// 	ИсходныйРасчет - см. НовыйРасчетРаспределенияНалоговойБазы
// Возвращаемое значение:
// 	см. НовыйРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения
//
Функция РазвернутьРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения(ИсходныйРасчет) Экспорт
	
	РазвернутыйРасчет = НовыйРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения();
	
	Для каждого СтрокаИсходныйРасчет Из ИсходныйРасчет Цикл
		
		МаксимальноеЗначение         = 0;
		СтрокаСМаксимальнымЗначением = Неопределено;
		
		РасчетнаяСуммаДолейБазы      = 0;
		ИсходнаяСуммаДолейБазы       = СтрокаИсходныйРасчет.ДоляНалоговойБазы;
		
		Для каждого КлючИЗначение Из СтрокаИсходныйРасчет.НалоговаяБазаПоВариантамНалогообложения Цикл
			
			СтрокаРазвернутыйРасчет                               = РазвернутыйРасчет.Добавить();
			
			СтрокаРазвернутыйРасчет.РегистрацияВНалоговомОргане   = СтрокаИсходныйРасчет.РегистрацияВНалоговомОргане;
			СтрокаРазвернутыйРасчет.ВариантНалогообложенияПрибыли = КлючИЗначение.Ключ;
			СтрокаРазвернутыйРасчет.НалоговаяБаза                 = КлючИЗначение.Значение;
			
			СтрокаРазвернутыйРасчет.ДоляФНС                       = СтрокаИсходныйРасчет.ДоляНалоговойБазы;
			СтрокаРазвернутыйРасчет.Закрыто                       = СтрокаИсходныйРасчет.Закрыто;
			
			Если СтрокаИсходныйРасчет.НалоговаяБаза > 0 Тогда
				СтрокаРазвернутыйРасчет.ДоляНалоговойБазы = ИсходнаяСуммаДолейБазы
					* (СтрокаРазвернутыйРасчет.НалоговаяБаза / СтрокаИсходныйРасчет.НалоговаяБаза);
			Иначе
				СтрокаРазвернутыйРасчет.ДоляНалоговойБазы = 0;
			КонецЕсли;
			
			Если СтрокаРазвернутыйРасчет.НалоговаяБаза >= МаксимальноеЗначение Тогда
				СтрокаСМаксимальнымЗначением = СтрокаРазвернутыйРасчет;
				МаксимальноеЗначение         = СтрокаРазвернутыйРасчет.НалоговаяБаза;
			КонецЕсли;
			
			РасчетнаяСуммаДолейБазы = РасчетнаяСуммаДолейБазы + СтрокаРазвернутыйРасчет.ДоляНалоговойБазы;
			
		КонецЦикла;
		
		Если СтрокаСМаксимальнымЗначением <> Неопределено Тогда
			ПогрешностьОкругления                          = ИсходнаяСуммаДолейБазы - РасчетнаяСуммаДолейБазы;
			СтрокаСМаксимальнымЗначением.ДоляНалоговойБазы =
				СтрокаСМаксимальнымЗначением.ДоляНалоговойБазы + ПогрешностьОкругления;
		КонецЕсли;
		
	КонецЦикла;
	
	Возврат РазвернутыйРасчет;
	
КонецФункции

Процедура ДобавитьПериодыВЗапросОстатковАмортизируемогоИмущества(Запрос, ДобавляемыеПериоды)
	
	Если Не ЗначениеЗаполнено(ДобавляемыеПериоды) Тогда
		Возврат;
	КонецЕсли;
	
	СхемаЗапроса = Новый СхемаЗапроса;
	СхемаЗапроса.УстановитьТекстЗапроса(Запрос.Текст);
	
	ЗапросВыбора = СхемаЗапроса.ПакетЗапросов[0];
	ОператорыЗапроса = ЗапросВыбора.Операторы;
	
	ИсходноеКоличествоОператоров = ОператорыЗапроса.Количество();
	
	// Продублируем эти операторы столько раз, сколько добавляемых периодов, при этом
	// - в параметрах виртуальных таблиц установим другую дату
	// - поменяем местами выражения для СтоимостьОСПрошлыхМесяцев и СтоимостьОССледующегоМесяца
	
	Колонки = ЗапросВыбора.Колонки;
	ИндексПрошлыйПериод = Колонки.Индекс(Колонки.Найти("СтоимостьОСПрошлыхМесяцев"));
	ИндексТекущийПериод = Колонки.Индекс(Колонки.Найти("СтоимостьОССледующегоМесяца"));
	
	Для ИндексПериода = 0 По ДобавляемыеПериоды.ВГраница() Цикл
		
		Период = ДобавляемыеПериоды[ИндексПериода];
		
		Для ИндексОператора = 0 По ИсходноеКоличествоОператоров - 1 Цикл
			
			ОператорТекущийПериод = ОператорыЗапроса[ИндексОператора];
			ОператорПрошлыйПериод = ОператорыЗапроса.Добавить(ОператорТекущийПериод);
			
			// Предполагается, что источник - один, и это виртуальная таблица Остатки,
			// первый параметр которой - дата получения остатков
			ИмяДатаОстатков = "ДатаОстатков" + ИндексПериода;
			ОператорПрошлыйПериод.Источники[0].Источник.Параметры[0].Выражение = Новый ВыражениеСхемыЗапроса("&" + ИмяДатаОстатков);
			Запрос.УстановитьПараметр(ИмяДатаОстатков, Период);
			
			// Обменяемся выражениями полей
			ОператорПрошлыйПериод.ВыбираемыеПоля[ИндексПрошлыйПериод] =
				Новый ВыражениеСхемыЗапроса(Строка(ОператорТекущийПериод.ВыбираемыеПоля[ИндексТекущийПериод]));
				
			ОператорПрошлыйПериод.ВыбираемыеПоля[ИндексТекущийПериод] =
				Новый ВыражениеСхемыЗапроса(Строка(ОператорТекущийПериод.ВыбираемыеПоля[ИндексПрошлыйПериод]));
			
		КонецЦикла;
		
	КонецЦикла;
	
	Запрос.Текст = СхемаЗапроса.ПолучитьТекстЗапроса();
		
КонецПроцедуры

// Рассчитывает базу налога по закрытым регистрациям (КПП)
//  - добавляет записи в ТаблицаРаспределенияБазыНалогаНаПрибыль.
//  - вычитает из таблицы налоговой базы суммы закрытых подразделений.
//
// Параметры:
//  ТаблицаРаспределенияБазыНалогаНаПрибыль - ТаблицаЗначений - 
//  			таблица, содержащая результат распределения налога, т.е. доли и налоговые базы по регистрациям (КПП).
//  
//  // прибыль текущего отчетного (налогового) периода по всей организации в разрезе вариантов н/о.
//  ТаблицаНалоговаяБаза	- см. НовыйНалоговаяБазаПоВариантамНалогообложения
//  
//  КонтекстРасчета			- см. РасчетНалогаНаПрибыль.НовыйКонтекстРасчета
//  
//  ТочностьРасчета			- Число - длина дробной части при округлении сумм налоговых баз по регистрациям (КПП)
//
Процедура УточнитьБазуНалогаНаПрибыльЗакрытыхРегистраций(ТаблицаРаспределенияБазыНалогаНаПрибыль, ТаблицаНалоговаяБаза, КонтекстРасчета, ТочностьРасчета)
	
	Если Не ЗначениеЗаполнено(ТаблицаРаспределенияБазыНалогаНаПрибыль) Тогда
		Возврат;
	КонецЕсли;
	
	// Определим, как рассчитывать базу налога по закрытым регистрациям.
	// Если выполняются 2 условия
	//	- уменьшилась прибыль по всей организации по сравнению с предыдущим отчетным периодом
	//	- уменьшилась прибыль по всей организации по сравнению с отчетным периодом, после которого закрыто ОП
	// тогда для расчета налоговой базы по КПП берется доля налоговой базы, рассчитанная за последний отчетный период до закрытия данного КПП,
	// и умножается на общую прибыль по организации за текущий период.
	// В ином случае налоговая база для КПП принимается равной налоговой базе, рассчитанной для данного КПП за последний отчетный период до закрытия.
	// Доля и налоговая база, рассчитанные за последний отчетный период до закрытия регистрации, уже заполнены в строках массива ЗакрытыеРегистрации
	
	Период                     = КонтекстРасчета.КонецПериода;
	Организация                = КонтекстРасчета.Организация;
	ИспользуетсяРаздельныйУчет = КонтекстРасчета.ИспользуетсяРаздельныйУчет;
	
	НалоговаяБазаПрошлыхПериодов = Новый Соответствие;
	
	ПрошлыйОтчетныйПериод = НалоговыйУчет.КонецПредыдущегоОтчетногоПериода(Период, Организация);
	
	Если Не ЗначениеЗаполнено(ПрошлыйОтчетныйПериод) Тогда
		// Если регистрация (КПП) закрыта в первом отчетном периоде, то декларация по ней не представляется
		// См. Письмо ИФНС по г.Москве от 13 апреля 2010 г. N 16-15/038587
		// То есть, если это первый отчетный период года, то расчеты по подразделениям, закрытым в этом периоде, не создаем
		Возврат;
	КонецЕсли;
	
	// Для каждого варианта н/о считаем налоговую базу
	// Если раздельный учет не используется, в данной таблице только один вариант н/о - пустая ссылка,
	// на ней висит вся налоговая база.
	Для каждого СтрокаНалоговаяБаза Из ТаблицаНалоговаяБаза Цикл
		
		ВариантНалогообложенияПрибыли = СтрокаНалоговаяБаза.ВариантНалогообложенияПрибыли;
		
		ОбщаяНалоговаяБаза = СтрокаНалоговаяБаза.НалоговаяБаза;
		
		ТаблицаНалоговаяБазаПрошлогоПериода =
			НалоговаяБаза(Организация, ПрошлыйОтчетныйПериод, НалоговаяБазаПрошлыхПериодов, ИспользуетсяРаздельныйУчет);
		
		СтрокаНалоговаяБазаПрошлогоПериода =
			ТаблицаНалоговаяБазаПрошлогоПериода.Найти(
				ВариантНалогообложенияПрибыли,
				"ВариантНалогообложенияПрибыли");
		
		ОбщаяНалоговаяБазаПрошлогоПериода = 0;
		
		Если СтрокаНалоговаяБазаПрошлогоПериода <> Неопределено Тогда
			ОбщаяНалоговаяБазаПрошлогоПериода = СтрокаНалоговаяБазаПрошлогоПериода.НалоговаяБаза;
		КонецЕсли;
		
		НалоговаяБазаСнизилась = (ОбщаяНалоговаяБазаПрошлогоПериода > 0) И (ОбщаяНалоговаяБазаПрошлогоПериода > ОбщаяНалоговаяБаза);
		
		// Налоговая база текущего периода за вычетом налоговых баз тех регистраций,
		// по которым фиксируется налоговая база, рассчитанная в последнем до закрытия отчетном периоде
		НалоговаяБазаОстаток = ОбщаяНалоговаяБаза;
		
		РегистрацииСФиксированнойДолей = Новый Массив;
		
		// В первую очередь считаем налоговые базы закрытых КПП, по которым зафиксирована база налога,
		// и вычитаем эти суммы из текущей общей базы налога.
		Для Каждого Запись Из ТаблицаРаспределенияБазыНалогаНаПрибыль Цикл
			
			// Считаем общую налоговую базу по организации за период, после которого закрылось подразделение.
			// Этот период считается последним для закрытого подразделения.
			ТаблицаНалоговаяБазаПередЗакрытием =
				НалоговаяБаза(
					Организация,
					Запись.ПоследнийОтчетныйПериод,
					НалоговаяБазаПрошлыхПериодов,
					ИспользуетсяРаздельныйУчет);
			
			СтрокаНалоговаяБазаПередЗакрытием =
				ТаблицаНалоговаяБазаПередЗакрытием.Найти(
					ВариантНалогообложенияПрибыли,
					"ВариантНалогообложенияПрибыли");
			
			ОбщаяНалоговаяБазаПередЗакрытием = 0;
			
			Если СтрокаНалоговаяБазаПередЗакрытием <> Неопределено Тогда
				ОбщаяНалоговаяБазаПередЗакрытием = СтрокаНалоговаяБазаПередЗакрытием.НалоговаяБаза;
			КонецЕсли;
			
			Если ОбщаяНалоговаяБаза <= 0 Тогда
				// Если налоговая база до закрытия была не 0, то нужно сторнировать начисления налога по закрытому подразделению
				НалоговаяБазаПоВариантуНалогообложения = 0;
				ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
					Запись,
					ВариантНалогообложенияПрибыли,
					НалоговаяБазаПоВариантуНалогообложения);
				
			ИначеЕсли НЕ НалоговаяБазаСнизилась ИЛИ ОбщаяНалоговаяБазаПередЗакрытием <= ОбщаяНалоговаяБаза Тогда
				
				// П. 10.11 Порядка заполнения декларации по прибыли:
				// "... по закрытому обособленному подразделению в Декларациях за последующие отчетные периоды и текущий налоговый период
				// ... указывается доля налоговой базы и налоговая база с учетом доли в размерах,
				// исчисленных и отраженных в Декларациях за отчетный период, предшествующий кварталу, в котором оно было закрыто".
				
				// По таким регистрациям фиксируются налоговая база и доля, рассчитанные в последнем до закрытия отчетном периоде.
				
				НалоговаяБазаПоВариантуНалогообложения =
					Запись.НалоговаяБазаПоВариантамНалогообложения.Получить(ВариантНалогообложенияПрибыли);
				
				Если НЕ ЗначениеЗаполнено(НалоговаяБазаПоВариантуНалогообложения) Тогда
					НалоговаяБазаПоВариантуНалогообложения = 0;
				КонецЕсли;
				
				Если Запись.ДоляНалоговойБазы <> 0 И НалоговаяБазаПоВариантуНалогообложения = 0 Тогда
					// Запись.ДоляНалоговойБазы - это доля налоговой базы по подразделению в последнем отчетном периоде до закрытия.
					// Если она отлична от 0, но при этом не заполнена налоговая база в регистре сведений, то
					// возможно, закрытие соответствующего месяца выполнялось до обновления ИБ.
					// Рассчитаем налоговую базу исходя из доли, рассчитанной в последнем отчетном периоде перед закрытием, и общей налоговой базы того периода.
					НалоговаяБазаПоВариантуНалогообложения =
						Окр(Запись.ДоляНалоговойБазы * ОбщаяНалоговаяБазаПередЗакрытием, ТочностьРасчета);
				КонецЕсли;
				
				// Налоговая база уже заполнена, но нужно, чтобы она не превышала текущую налоговую базу
				НалоговаяБазаПоВариантуНалогообложения =
					Мин(НалоговаяБазаПоВариантуНалогообложения, НалоговаяБазаОстаток);
				
				ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
					Запись,
					ВариантНалогообложенияПрибыли,
					НалоговаяБазаПоВариантуНалогообложения);
				
				НалоговаяБазаОстаток = НалоговаяБазаОстаток - НалоговаяБазаПоВариантуНалогообложения;
				
			Иначе
				
				// Общая налоговая база снизилась и по отношению к прошлому отчетному периоду, 
				// и по отношению к тому отчетному периоду, после которого закрылось подразделение.
				
				// П. 10.11 Порядка заполнения декларации по прибыли:
				// "При снижении налоговой базы в целом по организации по сравнению с предыдущим отчетным периодом 
				// и отчетным периодом, после которого закрыто обособленное подразделение ... [налоговая база подразделения] ...
				// определяется путем умножения показателя [доли налоговой базы] на показатель [общей налоговой базы текущего периода]".
				
				// Запишем в массив - такие строки обработаем ниже.
				РегистрацииСФиксированнойДолей.Добавить(Запись);
				
			КонецЕсли;
						
		КонецЦикла;
		
		РаспределяемаяНалоговаяБаза = НалоговаяБазаОстаток; // Налоговая база текущего за вычетом налоговых баз всех закрытых регистраций
		
		// Далее считаем закрытые КПП, по которым зафиксированы доли налоговой базы.
		Для Каждого Запись Из РегистрацииСФиксированнойДолей Цикл
			
			// Считаем налоговую базу по фиксированной доле, рассчитанной в последнем отчетном периоде до закрытия.
			// За 100% берем текущую налоговую базу, уменьшенную на налоговые базы тех КПП, где база зафиксирована с прошлых периодов.
			НалоговаяБазаПоВариантуНалогообложения =
				Мин(Окр(Запись.ДоляНалоговойБазы * НалоговаяБазаОстаток, ТочностьРасчета), РаспределяемаяНалоговаяБаза);
			
			ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(
				Запись,
				ВариантНалогообложенияПрибыли,
				НалоговаяБазаПоВариантуНалогообложения);
			
			РаспределяемаяНалоговаяБаза = РаспределяемаяНалоговаяБаза - НалоговаяБазаПоВариантуНалогообложения;
			
		КонецЦикла;
		
		// После расчета налоговой базы закрытых подразделений по варианту н/о, вычтем эти суммы из общей базы
		ВычитаемаяНалоговаяБаза = 0;
		
		Для Каждого Запись Из ТаблицаРаспределенияБазыНалогаНаПрибыль Цикл
			
			НалоговаяБазаПоВариантуНалогообложения =
				Запись.НалоговаяБазаПоВариантамНалогообложения.Получить(ВариантНалогообложенияПрибыли);
			
			Если ЗначениеЗаполнено(НалоговаяБазаПоВариантуНалогообложения) Тогда
				ВычитаемаяНалоговаяБаза = ВычитаемаяНалоговаяБаза + НалоговаяБазаПоВариантуНалогообложения;
			КонецЕсли;
			
		КонецЦикла;
		
		СтрокаНалоговаяБаза.НалоговаяБаза = Макс(ОбщаяНалоговаяБаза - ВычитаемаяНалоговаяБаза, 0);
		
	КонецЦикла;
	
	
	// После расчета налоговой базы в разрезе каждого варианта н/о, заполним агрегированное значение
	Для Каждого Запись Из ТаблицаРаспределенияБазыНалогаНаПрибыль Цикл
		
		Запись.НалоговаяБаза = 0;
		
		Для каждого КлючИЗначение Из Запись.НалоговаяБазаПоВариантамНалогообложения Цикл
			Запись.НалоговаяБаза = Запись.НалоговаяБаза + КлючИЗначение.Значение;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

// Возвращает таблицу налоговой базы в разрезе долей. Может заполняться из таблицы, полученных при расчете НнП
// 
// Параметры:
// 	ИсхТаблицаНалоговаяБаза - см. РасчетНалогаНаПрибыль.СуммыНалоговойБазыВРазрезеВариантовНалогообложения
//
// Возвращаемое значение:
// 	ТаблицаЗначений - содержит:
//  	* ВариантНалогообложенияПрибыли - СправочникСсылка.ВариантыНалогообложенияПрибыли - 
//  	* НалоговаяБаза                 - Число -
Функция НовыйНалоговаяБазаПоВариантамНалогообложения(ИсхТаблицаНалоговаяБаза = Неопределено)
	
	ОписаниеТипаЧисло = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	
	ТаблицаДанных = Новый ТаблицаЗначений();
	ТаблицаДанных.Колонки.Добавить("ВариантНалогообложенияПрибыли",
		Новый ОписаниеТипов("СправочникСсылка.ВариантыНалогообложенияПрибыли"));
	ТаблицаДанных.Колонки.Добавить("НалоговаяБаза", ОписаниеТипаЧисло);
	
	Если ЗначениеЗаполнено(ИсхТаблицаНалоговаяБаза) Тогда
		Для каждого ИсхСтрока Из ИсхТаблицаНалоговаяБаза Цикл
			НоваяСтрока = ТаблицаДанных.Добавить();
			НоваяСтрока.ВариантНалогообложенияПрибыли = ИсхСтрока.ВариантНалогообложенияПрибыли;
			НоваяСтрока.НалоговаяБаза                 = ИсхСтрока.СуммаНУ;
		КонецЦикла;
	КонецЕсли;
	
	Возврат ТаблицаДанных;
	
КонецФункции

// Возвращает налоговую базу в разрезе вариантов н/о. Результат кэшируется по значению периода
// 
// Параметры:
// 	Организация                - СправочникСсылка.Организации -
// 	Период                     - Дата -
// 	КэшНалоговойБазыПоПериодам - Соответствие -
// 	ИспользуетсяРаздельныйУчет - Булево, Неопределено -
//
// Возвращаемое значение:
// 	см. НовыйНалоговаяБазаПоВариантамНалогообложения
Функция НалоговаяБаза(Организация, Период, КэшНалоговойБазыПоПериодам, ИспользуетсяРаздельныйУчет = Неопределено)
		
	КонецПериода = КонецМесяца(Период);
	
	НалоговаяБаза = КэшНалоговойБазыПоПериодам[КонецПериода];
	Если НалоговаяБаза = Неопределено Тогда
		
		НачалоНалоговогоПериода = КэшНалоговойБазыПоПериодам["НачалоНалоговогоПериода"];
		Если НачалоНалоговогоПериода = Неопределено Тогда
			НачалоНалоговогоПериода = НалоговыйУчет.НачалоНалоговогоПериода(КонецПериода, Организация);
			КэшНалоговойБазыПоПериодам.Вставить("НачалоНалоговогоПериода", НачалоНалоговогоПериода);
		КонецЕсли;
		
		Если НачалоНалоговогоПериода = Неопределено Тогда
			НалоговаяБаза = НовыйНалоговаяБазаПоВариантамНалогообложения();
		Иначе
			СуммыНалоговойБазы = РасчетНалогаНаПрибыль.СуммыНалоговойБазыВРазрезеВариантовНалогообложения(
				НачалоНалоговогоПериода, КонецПериода, Организация, ИспользуетсяРаздельныйУчет);
			НалоговаяБаза = НовыйНалоговаяБазаПоВариантамНалогообложения(СуммыНалоговойБазы);
		КонецЕсли;
		
		КэшНалоговойБазыПоПериодам.Вставить(КонецПериода, НалоговаяБаза);
		
	КонецЕсли;
	
	Возврат НалоговаяБаза;
	
КонецФункции

////////////////////////////////////////////////////////////////////////////////
// ПЕРЕСЧЕТ ОНА И ОНО ПО РАСЧЕТНОЙ СТАВКЕ НАЛОГА НА ПРИБЫЛЬ

Процедура ПроведениеПересчетаОНАиОНОКаждыйМесяц(СтруктураШапкиДокумента, Движения, Отказ) Экспорт
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ДОКУМЕНТА
	
	ПараметрыПроведения = ПодготовитьПараметрыПересчетаОНАИОНО(СтруктураШапкиДокумента, Отказ);
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ПОДГОТОВКА ПРОВЕДЕНИЯ ПО ДАННЫМ ИНФОРМАЦИОННОЙ БАЗЫ
	
	ТаблицаОНАОНО       = ЗакрытиеМесяца.ПодготовитьТаблицуПересчетОНАиОНО(
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода,
		СтруктураШапкиДокумента.СписокОрганизаций, Отказ, Ложь);
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	// ФОРМИРОВАНИЕ ДВИЖЕНИЙ
	
	ЗакрытиеМесяца.ЗаписьВоВспомогательныеРегистрыСведений(
		Движения,
		ТаблицаОНАОНО,
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода,
		"РасчетСтоимостиНалоговыхАктивовИОбязательствПослеИзмененияСтавкиНалогаНаПрибыль");
	
	ЗакрытиеМесяца.СформироватьДвиженияуПересчетОНАиОНО(ТаблицаОНАОНО,
		ПараметрыПроведения.ТаблицаРеквизитыЗакрытиеГода, Движения, Отказ, Ложь);
	
КонецПроцедуры // ПроведениеПересчетаОНАиОНОКаждыйМесяц()

Функция ПолучитьРасчетнуюСтавкуНалогаНаПрибыль(Организация, Дата) Экспорт 

		Отбор    = Новый Структура("Организация,ПериодРасчета", Организация, Дата);
		Ставки   = РегистрыСведений.РасчетСтавкиНалогаНаПрибыльЗаМесяц.Получить(Отбор);
		Если Ставки = Неопределено Или Ставки.Ставка = 0 Тогда
			ПараметрыСтавки = Новый Структура("Организация, Дата", Организация, Дата);
			СтавкаНалога = БухгалтерскийУчетПереопределяемый.ПолучитьСтавкуНалогаНаПрибыль(ПараметрыСтавки);
		Иначе
			СтавкаНалога = Ставки.Ставка / 100;
		КонецЕсли;
	
	Возврат СтавкаНалога;

КонецФункции // ПолучитьРасчетнуюСтавкуНалогаНаПрибыль()


////////////////////////////////////////////////////////////////////////////////
// ЗАПОЛНЕНИЕ ЛИСТА ДЕКЛАРАЦИИ С РАСЧЕТОМ БАЗЫ В РАЗРЕЗЕ НАЛОГОВЫХ ОРГАНОВ


// Для заполнения декларации по налогу на прибыль получает данные информационной базы
// о распределении налога между обособленными подразделениями.
//
// Параметры:
//  Расчет							 - см. НовыйРасчетРаспределенияНалоговойБазы
//  КонтекстРасчета					 - см. НалогНаПрибыльДекларация.НовыйКонтекстРасчета
//  ВариантыНО						- Массив из СправочникСсылка.ВариантыНалогообложенияПрибыли - 
//
Процедура ПолучитьРаспределениеНалогаДляЗаполненияДекларации(Расчет, КонтекстРасчета, ВариантыНО) Экспорт
	
	// Получим данные о распределении налога между налоговыми органами (КПП)
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ВариантыНалогообложенияПрибыли.Ссылка КАК ВариантНалогообложенияПрибыли
	|ПОМЕСТИТЬ ВариантыНО
	|ИЗ
	|	Справочник.ВариантыНалогообложенияПрибыли КАК ВариантыНалогообложенияПрибыли
	|ГДЕ
	|	ВариантыНалогообложенияПрибыли.Ссылка В (&ВариантыНО)
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Распределение.Организация КАК Организация,
	|	Распределение.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	ЕСТЬNULL(ВариантыНО.ВариантНалогообложенияПрибыли,
	|		ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК ВариантНалогообложенияПрибыли,
	|	Распределение.РегистрацияВНалоговомОргане.КодРегиона КАК КодРегиона,
	|	Распределение.ДоляНалоговойБазы * 100 КАК ДоляНалоговойБазы,
	|	Распределение.Закрыто КАК Закрыто,
	|	Распределение.НалоговаяБаза КАК НалоговаяБаза,
	|	ВЫБОР
	|		КОГДА Распределение.Закрыто
	|			ТОГДА Распределение.НалоговаяБаза
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК НалоговаяБазаЗакрытогоПодразделения,
	|	Распределение.РегистрацияВНалоговомОргане.КПП КАК КПП,
	|	НЕ Распределение.Организация.ОбособленноеПодразделение
	|	И Распределение.РегистрацияВНалоговомОргане = Распределение.Организация.РегистрацияВНалоговомОргане КАК
	|		ПоМестуНахожденияОрганизации,
	|	Распределение.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения КАК
	|		НаименованиеОбособленногоПодразделения,
	|	Распределение.Организация.НаименованиеПолное КАК НаименованиеОрганизации,
	|	Распределение.РегистрацияВНалоговомОргане <> Распределение.Организация.РегистрацияВНалоговомОргане
	|	И ЕСТЬNULL(Распределение.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения, """") = """" КАК
	|		НаименованиеСледуетОпределитьИзПодразделения
	|ПОМЕСТИТЬ РаспределениеНалоговойБазы
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК Распределение
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВариантыНО КАК ВариантыНО
	|		ПО ИСТИНА
	|ГДЕ
	|	Распределение.Организация = &Организация
	|	И Распределение.ПериодРасчета МЕЖДУ &НачалоМесяца И &КонецПериода";
	
	Если Не ПустаяСтрока(КонтекстРасчета.КППОбособленногоПодразделения) Тогда
		
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		
		СхемаЗапроса.ПакетЗапросов[1].Операторы[0].Отбор.Добавить("Распределение.РегистрацияВНалоговомОргане.КПП = &КППОбособленногоПодразделения");
		
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",                   КонтекстРасчета.Организация);
	Запрос.УстановитьПараметр("НачалоМесяца",                  НачалоМесяца(КонтекстРасчета.КонецПериода)); // В каждом месяце формируются записи, характеризующие весь налоговый период
	Запрос.УстановитьПараметр("КонецПериода",                  КонтекстРасчета.КонецПериода);
	Запрос.УстановитьПараметр("КППОбособленногоПодразделения", КонтекстРасчета.КППОбособленногоПодразделения);
	Запрос.УстановитьПараметр("ВариантыНО",                    ВариантыНО);
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
	
	// Создаем временную таблицу НалоговыеОрганыПоНалогуНаПрибыль
	// Данная таблица требуется, чтобы определить, как отчитывается организация в данном налоговом органе:
	//	- только за один адрес регистрации в налоговых органах
	//	- или по нескольким адресам регистрации в одном регионе
	
	УплачиватьНалогПоГруппамПодразделений = УплачиватьНалогНаПрибыльПоГруппамПодразделений(КонтекстРасчета.Организация, КонтекстРасчета.КонецПериода);
	СоздатьНалоговыеОрганыПоНалогуНаПрибыль(
		МенеджерВременныхТаблиц,
		КонтекстРасчета.Организации,
		КонтекстРасчета.КонецПериода,
		?(ЗначениеЗаполнено(КонтекстРасчета.КППОбособленногоПодразделения), "РаспределениеНалоговойБазы", ""),
		УплачиватьНалогПоГруппамПодразделений);
	
	// Дополняем именами подразделений
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Период", КонтекстРасчета.КонецПериода);
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Подразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(Подразделения.НаименованиеПолное) КАК Наименование
	|ПОМЕСТИТЬ НаименованияПодразделенийНаОтдельномБалансе
	|ИЗ
	|	Справочник.Организации КАК Подразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеНалоговойБазы КАК ДолиНалоговойБазы
	|		ПО (Подразделения.ОбособленноеПодразделение)
	|		И Подразделения.РегистрацияВНалоговомОргане = ДолиНалоговойБазы.РегистрацияВНалоговомОргане
	|		И (ДолиНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения)
	|ГДЕ
	|	Подразделения.НаименованиеПолное <> """"
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Подразделения.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(Подразделения.Подразделение.Наименование) КАК Наименование
	|ПОМЕСТИТЬ НаименованияПодразделенийНаОбщемБалансе
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(&Период, Организация В
	|		(ВЫБРАТЬ
	|			Т.Организация
	|		ИЗ
	|			РаспределениеНалоговойБазы КАК Т)) КАК Подразделения
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РаспределениеНалоговойБазы КАК ДолиНалоговойБазы
	|		ПО Подразделения.Организация = ДолиНалоговойБазы.Организация
	|		И Подразделения.РегистрацияВНалоговомОргане = ДолиНалоговойБазы.РегистрацияВНалоговомОргане
	|		И (ДолиНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения)
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОтдельномБалансе КАК НайденныеРанееНаименования
	|		ПО Подразделения.РегистрацияВНалоговомОргане = НайденныеРанееНаименования.РегистрацияВНалоговомОргане
	|ГДЕ
	|	Подразделения.Подразделение.Наименование <> """"
	|	И НайденныеРанееНаименования.РегистрацияВНалоговомОргане ЕСТЬ NULL
	|СГРУППИРОВАТЬ ПО
	|	Подразделения.РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(ВЫБОР
	|		КОГДА РаспределениеНалоговойБазы.ПоМестуНахожденияОрганизации
	|			ТОГДА РаспределениеНалоговойБазы.НаименованиеОрганизации
	|		КОГДА НЕ РаспределениеНалоговойБазы.НаименованиеСледуетОпределитьИзПодразделения
	|			ТОГДА РаспределениеНалоговойБазы.НаименованиеОбособленногоПодразделения
	|		КОГДА НЕ НаименованияПодразделенийНаОтдельномБалансе.Наименование ЕСТЬ NULL
	|			ТОГДА НаименованияПодразделенийНаОтдельномБалансе.Наименование
	|		КОГДА НЕ НаименованияПодразделенийНаОбщемБалансе.Наименование ЕСТЬ NULL
	|			ТОГДА НаименованияПодразделенийНаОбщемБалансе.Наименование
	|		ИНАЧЕ РаспределениеНалоговойБазы.НаименованиеОрганизации
	|	КОНЕЦ) КАК НаименованиеПодразделения
	|ПОМЕСТИТЬ НаименованияПодразделений
	|ИЗ
	|	РаспределениеНалоговойБазы КАК РаспределениеНалоговойБазы
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОтдельномБалансе КАК НаименованияПодразделенийНаОтдельномБалансе
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = НаименованияПодразделенийНаОтдельномБалансе.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделенийНаОбщемБалансе КАК НаименованияПодразделенийНаОбщемБалансе
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = НаименованияПодразделенийНаОбщемБалансе.РегистрацияВНалоговомОргане
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации КАК НалоговыйОрганПодачиДекларации
	|ПОМЕСТИТЬ ГруппыНалоговыхОрганов
	|ИЗ
	|	НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПодачиДеклараций
	|СГРУППИРОВАТЬ ПО
	|	НалоговыеОрганыПодачиДеклараций.НалоговыйОрганПодачиДекларации
	|ИМЕЮЩИЕ
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ НалоговыеОрганыПодачиДеклараций.НалоговыйОрган) > 1
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	НалоговыйОрганПодачиДекларации
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РаспределениеНалоговойБазы.КПП КАК КПП,
	|	РаспределениеНалоговойБазы.Закрыто КАК Закрыто,
	|	РаспределениеНалоговойБазы.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
	|	МАКСИМУМ(РаспределениеНалоговойБазы.ПоМестуНахожденияОрганизации) КАК ПоМестуНахожденияОрганизации,
	|	ВЫБОР
	|		КОГДА ГруппыНалоговыхОрганов.НалоговыйОрганПодачиДекларации ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ КАК ЭтоГруппаНалоговыхОрганов,
	|	НаименованияПодразделений.НаименованиеПодразделения КАК НаименованиеПодразделения,
	|	СУММА(РаспределениеНалоговойБазы.ДоляНалоговойБазы) КАК ДоляНалоговойБазы,
	|	СУММА(РаспределениеНалоговойБазы.НалоговаяБаза) КАК НалоговаяБазаПодразделения,
	|	СУММА(РаспределениеНалоговойБазы.НалоговаяБазаЗакрытогоПодразделения) КАК НалоговаяБазаЗакрытогоПодразделения
	|ИЗ
	|	РаспределениеНалоговойБазы КАК РаспределениеНалоговойБазы
	|		ЛЕВОЕ СОЕДИНЕНИЕ НаименованияПодразделений КАК НаименованияПодразделений
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = НаименованияПодразделений.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ ГруппыНалоговыхОрганов КАК ГруппыНалоговыхОрганов
	|		ПО РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане = ГруппыНалоговыхОрганов.НалоговыйОрганПодачиДекларации
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНалоговойБазы.КПП,
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане,
	|	РаспределениеНалоговойБазы.Закрыто,
	|	РаспределениеНалоговойБазы.ВариантНалогообложенияПрибыли,
	|	ВЫБОР
	|		КОГДА ГруппыНалоговыхОрганов.НалоговыйОрганПодачиДекларации ЕСТЬ NULL
	|			ТОГДА ЛОЖЬ
	|		ИНАЧЕ ИСТИНА
	|	КОНЕЦ,
	|	НаименованияПодразделений.НаименованиеПодразделения
	|
	|УПОРЯДОЧИТЬ ПО
	|	ПоМестуНахожденияОрганизации УБЫВ,
	|	КПП,
	|	РегистрацияВНалоговомОргане";
	
	РезультатЗапроса = Запрос.Выполнить();
	Если РезультатЗапроса.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Выбрать();
	Пока Выборка.Следующий() Цикл
		
		НоваяСтрока = Расчет.Добавить();
		ЗаполнитьЗначенияСвойств(НоваяСтрока, Выборка);
		
		Если Выборка.Закрыто Тогда
			// Для расчета по закрытому подразделению предусмотрено отдельное значение признака "Расчет составлен (код)".
			// Если закрыта группа подразделений в регионе, то признак "Расчет составлен (код)" ставится как по закрытому подразделению.
			// Здесь группа подразделений считается закрытой, если закрыто ответственное подразделение (т.е. налоговый орган - получатель декларации)
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "3"; // = "по обособленному подразделению, закрытому в течение текущего налогового периода", см. пояснение к полю на форме декларации
		ИначеЕсли Выборка.ЭтоГруппаНалоговыхОрганов Тогда
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "4"; // = "по группе обособленных подразделений", см. пояснение к полю на форме декларации
		ИначеЕсли Выборка.ПоМестуНахожденияОрганизации Тогда
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "1"; // = "по организации без входящих в нее обособленных подразделений", см. пояснение к полю на форме декларации
		Иначе
			НоваяСтрока.МестоНахожденияНалоговогоОргана = "2"; // = "по обособленному подразделению", см. пояснение к полю на форме декларации
		КонецЕсли;
		
		Если Выборка.ПоМестуНахожденияОрганизации Тогда
			НоваяСтрока.ВозложенаОбязанностьУплатыНалога = "1"; // = "возложена", см. пояснение к полю на форме декларации
		Иначе
			// Организация может возложить обязанность по уплате на обособленное подразделение.
			// При этом порядок такой: организация рассчитывает сумму налога и сообщает ее обособленному подразделению,
			// а подразделение (филиал или представительство) уплачивает со своего счета.
			// В программе нет сведений о выбранном порядке.
			// Поэтому в этом случае поле не заполняем.
			НоваяСтрока.ВозложенаОбязанностьУплатыНалога = "";
		КонецЕсли;
		
	КонецЦикла;
	
	// Получим ставки налога на прибыль в региональный бюджет.
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	РаспределениеНалоговойБазы.ВариантНалогообложенияПрибыли КАК ВариантНалогообложенияПрибыли,
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	0 КАК СтавкаФедеральныйБюджет,
	|	0 КАК СтавкаРегиональныйБюджет
	|ИЗ
	|	РаспределениеНалоговойБазы КАК РаспределениеНалоговойБазы
	|СГРУППИРОВАТЬ ПО
	|	РаспределениеНалоговойБазы.ВариантНалогообложенияПрибыли,
	|	РаспределениеНалоговойБазы.РегистрацияВНалоговомОргане";
	
	ИменаПолей = "ВариантНалогообложенияПрибыли, РегистрацияВНалоговомОргане";
	
	ТаблицаСтавок = Запрос.Выполнить().Выгрузить();
	ТаблицаСтавок.Индексы.Добавить(ИменаПолей);
	
	ПараметрыОтбора = Новый Структура(ИменаПолей);
	
	ЗаполнитьНалоговыеСтавкиВБюджетыРФ(ТаблицаСтавок, КонтекстРасчета.НачалоПериода, КонтекстРасчета.Организация);
		
	Для Каждого Запись Из Расчет Цикл
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, Запись);
		
		СтрокиСтавок = ТаблицаСтавок.НайтиСтроки(ПараметрыОтбора);
		Запись.СтавкаНалогаРегиональныйБюджет = СтрокиСтавок[0].СтавкаРегиональныйБюджет * 100; // Следует показывать в процентах, а не в долях
	КонецЦикла;
	
	// Налог может быть уменьшен на суммы торгового сбора
	
	// См. также НалогНаПрибыльДекларация.ПолучитьТорговыйСбор()
	
	ЕстьЗадолженностьПоТорговомуСбору = РасчетНалогаНаПрибыль.ЕстьЗадолженностьПоТорговомуСбору(
		КонтекстРасчета.Организация,
		КонтекстРасчета.ДатаПодписи);
		
	Если Не НалогНаПрибыльДекларация.ЗадолженностьПоТорговомуСборуОпределяетсяПоНачислению(КонтекстРасчета.КонецПериода)
		И ЕстьЗадолженностьПоТорговомуСбору Тогда
		Возврат;
	КонецЕсли;	
		
	// РАСЧЕТ СУММ ТОРГОВОГО СБОРА, НА КОТОРЫЕ УМЕНЬШЕН НАЛОГ ЗА ТЕКУЩИЙ ОТЧЕТНЫЙ (НАЛОГОВЫЙ) ПЕРИОД
	УменьшениеНалога = РасчетНалогаНаПрибыль.НалогФактическиУменьшенныйНаСуммыТорговогоСбора(
		КонтекстРасчета.КонецПериода,
		КонтекстРасчета.Организация);
	
	// Торговый сбор относится только к основному варианту н/о
	ПараметрыОтбора.ВариантНалогообложенияПрибыли = КонтекстРасчета.ОсновнойВариантНО;
	
	Для Каждого ЗаписьУменьшениеНалога Из УменьшениеНалога Цикл
		
		ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ЗаписьУменьшениеНалога);
		ЗаписиРасчета = Расчет.НайтиСтроки(ПараметрыОтбора);
		
		Если ЗаписиРасчета.Количество() = 0 Тогда
			Продолжить;
		КонецЕсли;
		
		ЗаписиРасчета[0].УменьшениеНалогаНаТорговыйСбор = ЗаписьУменьшениеНалога.Сумма;
		
	КонецЦикла;
	
	Если НЕ НалогНаПрибыльДекларация.ЗаполнятьДетальнуюИнформациюПоТорговомуСборуВДекларации(КонтекстРасчета.КонецПериода) Тогда
		Возврат;
	КонецЕсли;
	
	// РАСЧЕТ СУММ ТОРГОВОГО СБОРА, НА КОТОРЫЕ УМЕНЬШЕН НАЛОГ ЗА ПРОШЛЫЙ ОТЧЕТНЫЙ ПЕРИОД
	// Если текущий отчетный период является первым, то торговый сбор прошлого периода не заполняем.
	КонецПрошлогоПериода = ИнтерфейсыВзаимодействияБРОКлиентСервер.ДобавитьПериод(КонтекстРасчета.КонецПериода, КонтекстРасчета.Периодичность, -1);
	КонецПрошлогоПериода = КонецМесяца(КонецПрошлогоПериода);
	Если КонецПрошлогоПериода > КонтекстРасчета.НачалоПериода Тогда
		
		УменьшениеНалогаПрошлогоПериода = РасчетНалогаНаПрибыль.НалогФактическиУменьшенныйНаСуммыТорговогоСбора(
			КонецПрошлогоПериода,
			КонтекстРасчета.Организация);
		
		Для Каждого ЗаписьУменьшениеНалога Из УменьшениеНалогаПрошлогоПериода Цикл
			
			ЗаполнитьЗначенияСвойств(ПараметрыОтбора, ЗаписьУменьшениеНалога);
			ЗаписиРасчета = Расчет.НайтиСтроки(ПараметрыОтбора);
			
			Если ЗаписиРасчета.Количество() = 0 Тогда
				Продолжить;
			КонецЕсли;
			
			ЗаписиРасчета[0].УменьшениеНалогаНаТорговыйСборПрошлогоПериода = ЗаписьУменьшениеНалога.Сумма;
			
		КонецЦикла;
		
	КонецЕсли;	
	
	// РАСЧЕТ СУММ УПЛАЧЕННОГО ТОРГОВОГО СБОРА
	// Для целей расчета сумму уплаченного торгового сбора признаем равной сумме начисленного.
	
	СуммаУменьшенияНалога = Расчет.Итог("УменьшениеНалогаНаТорговыйСбор");
	
	// Если налог не уменьшается на торговый сбор, то уплаченный торговый сбор также не считаем.
	Если СуммаУменьшенияНалога = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	// 1. Возьмем сумму начисленного торгового сбора с начала года по конец закрываемого месяца
	// Это целое число.
	СуммаТорговогоСбора = РасчетНалогаНаПрибыль.СуммаНачисленногоТорговогоСбора(КонтекстРасчета.КонецПериода, КонтекстРасчета.Организация);

	Если СуммаТорговогоСбора = 0 Тогда
		Возврат;
	КонецЕсли;	
	
	// 2. Распределим сумму из п. 1 между регистрациями
	// Если сумма уплаченного торгового сбора равна сумме торгового сбора, на которую уменьшен налог,
	// то по каждой отдельной регистрации эти суммы также должны быть равны.
	Если СуммаТорговогоСбора = СуммаУменьшенияНалога Тогда
		
		Для каждого ЗаписьРасчет Из Расчет Цикл
			ЗаписьРасчет.ТорговыйСборУплаченный = ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор;
		КонецЦикла; 
		
	Иначе
								
		// Распределим сумму торгового сбора пропорционально суммам уменьшения налога на торговый сбор
		// Это позволяет выполнить 2 ограничения:
		//	- сумма уплаченного торгового сбора распределяется только на те территории,
		//    где установлен торговый сбор (УменьшениеНалогаНаТорговыйСбор <> 0)
		//	- сумма уплаченного торгового сбора для каждой отдельной регистрации не меньше суммы уменьшения налога
		// Т.к. здесь СуммаТорговогоСбора > СуммаУменьшенияНалога (см. РасчетНалогаНаПрибыль.УменьшениеНалогаНаСуммуТорговогоСбора()),
		// то после распределения во всех строках расчета ТорговыйСборУплаченный >= УменьшениеНалогаНаТорговыйСбор.
		РаспределеннаяСумма = 0;
		Для Каждого ЗаписьРасчет Из Расчет Цикл 
			ЗаписьРасчет.ТорговыйСборУплаченный = Окр(СуммаТорговогоСбора * ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор / СуммаУменьшенияНалога, 0);
			РаспределеннаяСумма = РаспределеннаяСумма + ЗаписьРасчет.ТорговыйСборУплаченный;
		КонецЦикла; 
		
		// Погрешность округления распределяем так, 
		// чтобы ни по какой регистрации не оказалось, что ТорговыйСборУплаченный < УменьшениеНалогаНаТорговыйСбор.
		ПогрешностьОкругления = СуммаТорговогоСбора - РаспределеннаяСумма;
		Если ПогрешностьОкругления <> 0 Тогда
			
			// Для сохранения сортировки пронумеруем таблицу 
			ОбщегоНазначенияБПВызовСервера.ПронумероватьТаблицу(Расчет);  // Добавляется колонка "НомерСтроки"
			Расчет.Сортировать("УменьшениеНалогаНаТорговыйСбор Убыв");
						
			Если ПогрешностьОкругления > 0 Тогда
			    // Добавляем погрешность в строку с максимальной суммой торгового сбора 
				Расчет[0].ТорговыйСборУплаченный = Расчет[0].ТорговыйСборУплаченный + ПогрешностьОкругления;
			Иначе
				// Уменьшаем ТорговыйСборУплаченный с учетом ограничения (ТорговыйСборУплаченный >= УменьшениеНалогаНаТорговыйСбор).
				Для каждого ЗаписьРасчет Из Расчет Цикл
					// Из двух отрицательных чисел выбираем минимальное по модулю и добавляем к ТорговыйСборУплаченный.
					СуммаУменьшения = Макс(ПогрешностьОкругления, ЗаписьРасчет.УменьшениеНалогаНаТорговыйСбор - ЗаписьРасчет.ТорговыйСборУплаченный); 
					ЗаписьРасчет.ТорговыйСборУплаченный = ЗаписьРасчет.ТорговыйСборУплаченный + СуммаУменьшения; 
					ПогрешностьОкругления = ПогрешностьОкругления - СуммаУменьшения; 
					
					Если ПогрешностьОкругления = 0 Тогда
						Прервать;
					КонецЕсли;	
					
				КонецЦикла; 
			КонецЕсли; 
			
			Расчет.Сортировать("НомерСтроки"); // Возвращаем исходную сортировку
			Расчет.Колонки.Удалить("НомерСтроки");
			
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьЛист2Приложение5ДекларацииПоПрибыли(Контейнер, ПараметрыОтчета, СписокОрганизаций, Лист02_Прил5) Экспорт
	
	//////////////////////////////////////////////////////////////////////////
	//// ЗАПОЛНЕНИЕ ЛИСТ 2 ПРИЛОЖЕНИЕ 5
	
	СтраницаЛист02_Прил5 = Лист02_Прил5[0].Данные[0].Значение;
	
	ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(СтраницаЛист02_Прил5);
	
	Пока Лист02_Прил5.Количество()>1 Цикл
		Лист02_Прил5.Удалить(1);
	КонецЦикла;
	
	КПП = ПараметрыОтчета.КПП;
	ПоВсем = Истина;
	КППРеквизитОрганизации = ОбщегоНазначения.ЗначениеРеквизитаОбъекта(ПараметрыОтчета.Организация, "КПП");
	Если КПП = КППРеквизитОрганизации Тогда
		РегистрацияВНалоговомОргане = ПараметрыОтчета.Организация.РегистрацияВНалоговомОргане; 
	Иначе
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.НайтиПоРеквизиту("КПП",КПП,,ПараметрыОтчета.Организация);
		ПоВсем = Ложь;
		Если РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По указанному КПП %1 не обнаружена регистрация в налоговом органе. Необходимо проверить правильность указания КПП или регистрации в налоговом органе. Приложение 5 листа 02 заполнено не будет';
					|en = 'Registration with tax authority is not found by specified CRTR %1. Check if the CRTR or registration with tax authority is specified correctly. Annex 5 of sheet 02 will not be filled in'"),
				КПП));
			ЗаполнитьПриложение5Листа2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	// Создаем временную таблицу НалоговыеОрганыПоНалогуНаПрибыль 
	СоздатьНалоговыеОрганыПоНалогуНаПрибыль(МенеджерВременныхТаблиц, СписокОрганизаций, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, СписокОрганизаций, ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	
	Если НЕ ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц) Тогда
		Возврат;
	КонецЕсли;
	
	Если КПП = КППРеквизитОрганизации Тогда
		РегистрацияВНалоговомОргане = ПараметрыОтчета.Организация.РегистрацияВНалоговомОргане; 
	Иначе
		РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.НайтиПоРеквизиту("КПП",КПП,,ПараметрыОтчета.Организация);
		ПоВсем = Ложь;
		Если РегистрацияВНалоговомОргане = Справочники.РегистрацииВНалоговомОргане.ПустаяСсылка() Тогда
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				НСтр("ru = 'По указанному КПП %1 не обнаружена регистрация в налоговом органе. Необходимо проверить правильность указания КПП или регистрации в налоговом органе. Приложение 5 листа 02 заполнено не будет';
					|en = 'Registration with tax authority is not found by specified CRTR %1. Check if the CRTR or registration with tax authority is specified correctly. Annex 5 of sheet 02 will not be filled in'"),
				КПП));
			ЗаполнитьПриложение5Листа2 = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("ДатаНач",           ПараметрыОтчета.мДатаНачалаПериодаОтчета);
	Запрос.УстановитьПараметр("ДатаНачМесяца",     НачалоМесяца(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	Запрос.УстановитьПараметр("ДатаКон",           ПараметрыОтчета.мДатаКонцаПериодаОтчета);
	Запрос.УстановитьПараметр("РегистрацияВНалоговомОргане", РегистрацияВНалоговомОргане);
	Запрос.УстановитьПараметр("ДатаНачГода", НачалоГода(ПараметрыОтчета.мДатаКонцаПериодаОтчета));
	
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ РАЗЛИЧНЫЕ
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане.НаименованиеОбособленногоПодразделения КАК ОбособленноеПодразделение,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане.КПП КАК КПП
	|ПОМЕСТИТЬ ДолиНалоговойБазы
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация В(&СписокОрганизаций)
	|	И РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане
	|	И РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ &ДатаНачМесяца И &ДатаКон
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаСубъектРФ КАК Ставка
	|ПОМЕСТИТЬ ОбщаяСтавка
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&ДатаНач, ) КАК СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.РегистрацияВНалоговомОргане.КПП КАК КПП,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.СтавкаСубъектРФ КАК Ставка
	|ПОМЕСТИТЬ РазныеСтавки
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
	|			&ДатаНач,
	|			Организация В (&СписокОрганизаций)
	|				И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане) КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КПП
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ПрименяютсяРазныеСтавкиНалогаНаПрибыль.Значение КАК Значение
	|ПОМЕСТИТЬ ПрименяютсяРазныеСтавки
	|ИЗ
	|	Константа.ПрименяютсяРазныеСтавкиНалогаНаПрибыль КАК ПрименяютсяРазныеСтавкиНалогаНаПрибыль
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВложенныйЗапрос.ДоляНалоговойБазы,
	|	ВложенныйЗапрос.ОбособленноеПодразделение,
	|	ВложенныйЗапрос.КПП,
	|	ВложенныйЗапрос.Ставка КАК СтавкаСубъектРФ
	|ИЗ
	|	(ВЫБРАТЬ
	|		ДолиНалоговойБазы.ДоляНалоговойБазы КАК ДоляНалоговойБазы,
	|		ДолиНалоговойБазы.ОбособленноеПодразделение КАК ОбособленноеПодразделение,
	|		ДолиНалоговойБазы.КПП КАК КПП,
	|		ОбщаяСтавка.Ставка КАК Ставка
	|	ИЗ
	|		ПрименяютсяРазныеСтавки КАК ПрименяютсяРазныеСтавки,
	|		ДолиНалоговойБазы КАК ДолиНалоговойБазы,
	|		ОбщаяСтавка КАК ОбщаяСтавка
	|	ГДЕ
	|		НЕ ПрименяютсяРазныеСтавки.Значение
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		ДолиНалоговойБазы.ДоляНалоговойБазы,
	|		ДолиНалоговойБазы.ОбособленноеПодразделение,
	|		ДолиНалоговойБазы.КПП,
	|		ЕСТЬNULL(РазныеСтавки.Ставка, 0)
	|	ИЗ
	|		ПрименяютсяРазныеСтавки КАК ПрименяютсяРазныеСтавки,
	|		ДолиНалоговойБазы КАК ДолиНалоговойБазы
	|			ЛЕВОЕ СОЕДИНЕНИЕ РазныеСтавки КАК РазныеСтавки
	|			ПО ДолиНалоговойБазы.КПП = РазныеСтавки.КПП
	|	ГДЕ
	|		ПрименяютсяРазныеСтавки.Значение) КАК ВложенныйЗапрос
	|
	|СГРУППИРОВАТЬ ПО
	|	ВложенныйЗапрос.ДоляНалоговойБазы,
	|	ВложенныйЗапрос.ОбособленноеПодразделение,
	|	ВложенныйЗапрос.КПП,
	|	ВложенныйЗапрос.Ставка";
	
	Если ПоВсем Тогда
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане","");
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "И РегистрацияВНалоговомОргане = &РегистрацияВНалоговомОргане","");
	КонецЕсли;                                      
	
	Результат = Запрос.Выполнить();
	
	Если Результат.Пустой() Тогда  
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Приложение 5 листа 02 заполнено не будет.
			|По указанному КПП %1 не обнаружено начисление налога на прибыль.
			|Необходимо проверить правильность указания КПП или регистрации в налоговом органе
			|или проведение операции закрытия месяца ""Расчет налога на прибыль""';
			|en = 'Annex 5 of sheet 02 will not be filled in.
			|Profit tax accrual is not found for the specified CRTR %1.
			|Make sure that the specified CRTR, registration with tax authority,
			|and performance of month-end closing operation ""Profit tax calculation"" are correct'"), КПП));
	Иначе
		ПерваяСтраница = Истина;
		ЕстьОбособленныеПодразделения = Ложь;
		
		Результат = Результат.Выгрузить();
		Для Каждого ДоляНалоговойБазы Из Результат Цикл
			Если Не ПерваяСтраница Тогда
				
				СтруктураНовойТаблицы = Новый Структура();
				
				Для Каждого Показатель Из СтраницаЛист02_Прил5 Цикл
					СтруктураНовойТаблицы.Вставить(Показатель.Ключ, Показатель.Значение);
				КонецЦикла;
				
				ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(СтруктураНовойТаблицы);
				
				Лист02_Прил5.Добавить().Данные = Новый СписокЗначений();
				Лист02_Прил5[Лист02_Прил5.Количество()-1].Данные.Добавить(СтруктураНовойТаблицы); 
				ЕстьОбособленныеПодразделения = Истина;
			Иначе
				// На последующих выполнениях цикла нужно будет создавать дополнительные страницы
				ПерваяСтраница = Ложь;
			КонецЕсли;
			
			СтраницаЛист02_Прил5 = Лист02_Прил5[Лист02_Прил5.Количество()-1].Данные[0].Значение;
			
			ЭтоОбособленноеПодразделение = ЗначениеЗаполнено(РегистрацияВНалоговомОргане);
			СтраницаЛист02_Прил5.П002050000100 = "1";
			Если ЭтоОбособленноеПодразделение Тогда
				СтраницаЛист02_Прил5.П002050001000 = "2"; 
				СтраницаЛист02_Прил5.П002050002003 = ДоляНалоговойБазы.ОбособленноеПодразделение;
				СтраницаЛист02_Прил5.П002050002001 = ДоляНалоговойБазы.КПП;
			Иначе
				СтраницаЛист02_Прил5.П002050001000 = "1";
				СтраницаЛист02_Прил5.П002050002003 = "";
				СтраницаЛист02_Прил5.П002050002001 = "";
			КонецЕсли;
			СтраницаЛист02_Прил5.П002050004003 = ДоляНалоговойБазы.ДоляНалоговойБазы * 100;
			СтраницаЛист02_Прил5.П002050006003 = ДоляНалоговойБазы.СтавкаСубъектРФ;
		КонецЦикла;
		
		Если ЕстьОбособленныеПодразделения Тогда 
			// Налогоплательщики, имеющие обособленные подразделения, проставляют только налоговую ставку для исчисления налога
			// на прибыль, подлежащего уплате в федеральный бюджет.
			СтраницаЛист02 = Контейнер.Лист02[0].Данные[0].Значение;
			СтраницаЛист02.П002000016003 = 0;
			СтраницаЛист02.П002000017003 = 0;
		КонецЕсли;

	КонецЕсли;
	
КонецПроцедуры


//////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ПРОЦЕДУРЫ РАБОТЫ С ВАРИАНТАМИ ОТЧЕТОВ

Процедура СписокОтчетовПоддерживаемыхПодсистемой(СписокОтчетов) Экспорт
	
	СписокОтчетов.Добавить("Отчет.СправкаРасчетДолиНалоговойБазы");
	
КонецПроцедуры


////////////////////////////////////////////////////////////////////////////////
// СПРАВКИ-РАСЧЕТЫ

Процедура ДополнитьСписокСправокРасчетов(Список) Экспорт
	
	Список.Добавить("СправкаРасчетДолиНалоговойБазы", НСтр("ru = 'Распределение прибыли по бюджетам субъектов РФ';
															|en = 'Profit allocation by budgets of the RF territorial entities'"));
	
КонецПроцедуры	

Функция ВыполнитьЗапросРасчетСтавкиНалогаНаПрибыльЗаМесяц(Организация, КонецПериода) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокДоступныхОрганизаций(Организация));
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Ставка,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.СуммаНалога,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.СуммаБазы,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация,
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация.ГоловнаяОрганизация
	|ИЗ
	|	РегистрСведений.РасчетСтавкиНалогаНаПрибыльЗаМесяц КАК РасчетСтавкиНалогаНаПрибыльЗаМесяц
	|ГДЕ
	|	РасчетСтавкиНалогаНаПрибыльЗаМесяц.Организация В(&СписокОрганизаций)
	|	И РасчетСтавкиНалогаНаПрибыльЗаМесяц.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ) И &КонецПериода";
	
	Запрос.УстановитьПараметр("КонецПериода",КонецПериода);
	Возврат Запрос.Выполнить();
	
КонецФункции

// Возвращает результат запроса расчета НнП
// 
// Параметры:
// 	Организация - СправочникСсылка.Организации -
// 	КонецПериода - Дата -
// 	ВариантНО - СправочникСсылка.ВариантыНалогообложенияПрибыли -
//
// Возвращаемое значение:
// 	РезультатЗапроса -
//
Функция ВыполнитьЗапросРасчетНалогаНаПрибыль(Организация, КонецПериода, ВариантНО = Неопределено) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	НалогГод.СуммаОборот КАК СуммаНалогГод,
	|	НалогГод.Организация,
	|	ЕСТЬNULL(НалогГод.СубконтоКт3, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	НалогГод.СубконтоКт2 КАК Бюджет
	|ПОМЕСТИТЬ НалогГод
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			&НачалоПериода,
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В (&СчетаРасчетыСБюджетом),
	|			&Субконто68_04_1,
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И СубконтоКт2 В (&УровниБюджетов)) КАК НалогГод
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НалогМесяц.СуммаОборот КАК СуммаНалогМесяц,
	|	НалогМесяц.Организация,
	|	ЕСТЬNULL(НалогМесяц.СубконтоКт3, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	НалогМесяц.СубконтоКт2 КАК Бюджет
	|ПОМЕСТИТЬ НалогМесяц
	|ИЗ
	|	РегистрБухгалтерии.Хозрасчетный.ОборотыДтКт(
	|			НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ),
	|			&КонецПериода,
	|			,
	|			,
	|			,
	|			СчетКт В (&СчетаРасчетыСБюджетом),
	|			&Субконто68_04_1,
	|			Организация В (&СписокОрганизаций)
	|				И СубконтоКт1 = ЗНАЧЕНИЕ(Перечисление.ВидыПлатежейВГосБюджет.Налог)
	|				И СубконтоКт2 В (&УровниБюджетов)) КАК НалогМесяц
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	РасчетДолейБазыНалогаНаПрибыль.Организация,
	|	РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы
	|ПОМЕСТИТЬ РасчетДолейБазыНалогаНаПрибыль
	|ИЗ
	|	РегистрСведений.РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|ГДЕ
	|	РасчетДолейБазыНалогаНаПрибыль.ПериодРасчета МЕЖДУ НАЧАЛОПЕРИОДА(&КонецПериода, МЕСЯЦ) И &КонецПериода
	|	И РасчетДолейБазыНалогаНаПрибыль.Организация В (&СписокОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|// На текущий момент отчет не поддерживает корректный вывод ставки налога в случаях,
	|// когда две и более организации привязаны к одной ФНС с разными ставками.
	|// Будет выведена максимальная ставка, но фактические суммы налога будут корректны.
	|ВЫБРАТЬ
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.Организация.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	МАКСИМУМ(СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СтавкаСубъектРФ) КАК СтавкаСубъектРФ
	|ПОМЕСТИТЬ СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|ИЗ
	|	РегистрСведений.СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.СрезПоследних(
	|			&КонецПериода,
	|			Организация.ГоловнаяОрганизация В (&СписокОрганизаций)
	|		) КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФ
	|
	|СГРУППИРОВАТЬ ПО
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.Организация.ГоловнаяОрганизация,
	|	СтавкиНалогаНаПрибыльВБюджетСубъектовРФ.РегистрацияВНалоговомОргане
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ГоловнаяОрганизация,
	|	РегистрацияВНалоговомОргане
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НалогГод.РегистрацияВНалоговомОргане, ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)) КАК РегистрацияВНалоговомОргане,
	|	ВЫБОР
	|		КОГДА НалогГод.Бюджет = ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА 1
	|		ИНАЧЕ РасчетДолейБазыНалогаНаПрибыль.ДоляНалоговойБазы
	|	КОНЕЦ КАК ДоляНалоговойБазы,
	|	ВЫБОР
	|		КОГДА НалогГод.Бюджет = ЗНАЧЕНИЕ(Перечисление.УровниБюджетов.ФедеральныйБюджет)
	|			ТОГДА СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаФБ
	|		ИНАЧЕ ЕСТЬNULL(СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.СтавкаСубъектРФ, СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних.СтавкаСубъектРФ)
	|	КОНЕЦ КАК СтавкаСубъектРФ,
	|	НалогГод.СуммаНалогГод,
	|	НалогМесяц.СуммаНалогМесяц,
	|	НалогГод.СуммаНалогГод - НалогМесяц.СуммаНалогМесяц КАК СуммаНалогОстальныеМесяцы,
	|	НалогГод.Бюджет,
	|	НалогГод.Организация КАК Организация,
	|	НалогГод.Организация.ГоловнаяОрганизация
	|ИЗ
	|	НалогГод КАК НалогГод
	|		ЛЕВОЕ СОЕДИНЕНИЕ НалогМесяц КАК НалогМесяц
	|		ПО НалогГод.Организация = НалогМесяц.Организация
	|			И НалогГод.РегистрацияВНалоговомОргане = НалогМесяц.РегистрацияВНалоговомОргане
	|			И НалогГод.Бюджет = НалогМесяц.Бюджет
	|		ЛЕВОЕ СОЕДИНЕНИЕ РасчетДолейБазыНалогаНаПрибыль КАК РасчетДолейБазыНалогаНаПрибыль
	|		ПО НалогГод.Организация = РасчетДолейБазыНалогаНаПрибыль.Организация
	|			И НалогГод.РегистрацияВНалоговомОргане = РасчетДолейБазыНалогаНаПрибыль.РегистрацияВНалоговомОргане
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних КАК СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних
	|		ПО НалогГод.РегистрацияВНалоговомОргане = СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.РегистрацияВНалоговомОргане
	|			И НалогГод.Организация = СтавкиНалогаНаПрибыльВБюджетСубъектовРФСрезПоследних.ГоловнаяОрганизация,
	|	РегистрСведений.СтавкиНалогаНаПрибыльДляВсехОрганизаций.СрезПоследних(&КонецПериода, ВариантНалогообложенияПрибыли = ЗНАЧЕНИЕ(Справочник.ВариантыНалогообложенияПрибыли.ПустаяСсылка)) КАК СтавкиНалогаНаПрибыльДляВсехОрганизацийСрезПоследних";
	
	Субконто68_04_1 = Новый Массив;
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.ВидыПлатежейВГосБюджет);
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.УровниБюджетов);
	Субконто68_04_1.Добавить(ПланыВидовХарактеристик.ВидыСубконтоХозрасчетные.РегистрацияВНалоговомОргане);
	
	УровниБюджетов = Новый Массив;
	УровниБюджетов.Добавить(Перечисления.УровниБюджетов.ФедеральныйБюджет);
	УровниБюджетов.Добавить(Перечисления.УровниБюджетов.РегиональныйБюджет);
	
	НачалоПериода = НалоговыйУчет.НачалоНалоговогоПериода(КонецПериода, Организация);
	Если НачалоПериода = Неопределено Тогда
		НачалоПериода = НачалоГода(КонецПериода);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("СписокОрганизаций",        СписокДоступныхОрганизаций(Организация));
	Запрос.УстановитьПараметр("Субконто68_04_1",          Субконто68_04_1);
	Запрос.УстановитьПараметр("НачалоПериода",            НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",             КонецПериода);
	Запрос.УстановитьПараметр("УровниБюджетов",           УровниБюджетов);
	Запрос.УстановитьПараметр("СчетаРасчетыСБюджетом",    БухгалтерскийУчетПовтИсп.СчетаВИерархии(ПланыСчетов.Хозрасчетный.РасчетыСБюджетом));
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

// Создает временную таблицу НалоговыеОрганыПоНалогуНаПрибыль
// (все регистрации организации в налоговых органах (налоговые органы), которые использовались в течение периода -
// по каждому налоговому органу определяется налоговый орган, в который подается декларация)
//
// В таблицу попадают все регистрации в налоговом органе, которые использовались с начала года, т.е.
//	- либо указаны в организациях / обособленных подразделениях
//	- либо были упомянуты в истории регистраций в течение года (и на начало года)
// Это нужно для того, чтобы в дальнейшем в таблицу распределения попали все регистрации (КПП),
// которые использовались в течение периода, даже если их доля равна 0
// (например, см. ПодготовитьРасчетРаспределенияНалоговойБазы())
//
// Если используется подача декларации по группам подразделений,
// то в итоговом запросе налоговый орган подразделения подменится на налоговый орган по группе
// (см. СписокОбособленныхПодразделений())
//
// Если используется отбор по временной таблице регистраций (параметр ИмяВременнойТаблицыРегистраций),
// то в этой таблице должны быть поля 
// 	- РегистрацияВНалоговомОргане
//  - КодРегиона
// Отбор по КодРегиона выполняется в том случае, если используется уплата налога на прибыль по группам подразделений.
// В этом случае таблица налоговых органов будет содержать кроме налогового органа - получателя декларации также и другие
// регистрации региона: это позволит далее правильно определить, отчитываемся ли мы за одно подразделение или за группу
// (см. ПолучитьРаспределениеНалогаДляЗаполненияДекларации())
//
Процедура СоздатьНалоговыеОрганыПоНалогуНаПрибыль(МенеджерВременныхТаблиц, Организации, Период, ИмяВременнойТаблицыРегистраций = "", УплачиватьНалогПоГруппамПодразделений = Ложь)
	
	НачалоНалоговогоПериода = Неопределено;
	Если ЗначениеЗаполнено(Организации) Тогда
		НачалоНалоговогоПериода = НалоговыйУчет.НачалоНалоговогоПериода(Период, Организации[0]);
	КонецЕсли;
	Если НачалоНалоговогоПериода = Неопределено Тогда
		НачалоНалоговогоПериода = Период;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("СписокОрганизаций",       Организации);
	Запрос.УстановитьПараметр("Период",                  Период);
	Запрос.УстановитьПараметр("НачалоНалоговогоПериода", НачалоНалоговогоПериода);
	
	// Ниже текст запроса дополняется в зависимости от настроек уплаты налога.
	// Также в текст запроса добавляются отборы, если передано имя временной таблицы менеджера, 
	// в которой содержатся ссылки на регистрации.
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.Ссылка КАК СтруктурнаяЕдиница,
	|	Организации.ГоловнаяОрганизация КАК ГоловнаяОрганизация,
	|	Организации.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ СтруктурныеЕдиницы_Филиалы
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&СписокОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	СтруктурныеЕдиницы.Организация                 КАК Организация,
	|	СтруктурныеЕдиницы.КодРегиона                  КАК КодРегиона,
	|	СтруктурныеЕдиницы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ВсеРегистрацииПериода
	|ИЗ
	|	(ВЫБРАТЬ
	|		СтруктурныеЕдиницы.ГоловнаяОрганизация КАК Организация,
	|		СтруктурныеЕдиницы.РегистрацияВНалоговомОргане.КодРегиона КАК КодРегиона,
	|		СтруктурныеЕдиницы.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|	ИЗ
	|		СтруктурныеЕдиницы_Филиалы КАК СтруктурныеЕдиницы
	|
	|	ОБЪЕДИНИТЬ ВСЕ 
	|
	|	ВЫБРАТЬ
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.Владелец,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.КодРегиона,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане
	|	ИЗ
	|		РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|			&НачалоНалоговогоПериода,
	|			СтруктурнаяЕдиница В
	|				(ВЫБРАТЬ
	|					СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|				ИЗ
	|					СтруктурныеЕдиницы_Филиалы КАК СтруктурныеЕдиницы)) КАК ИсторияРегистраций
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.Владелец,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.КодРегиона,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане
	|	ИЗ
	|		РегистрСведений.ИсторияРегистрацийВНалоговомОргане КАК ИсторияРегистраций
	|	ГДЕ
	|		ИсторияРегистраций.Период МЕЖДУ &НачалоНалоговогоПериода И &Период
	|		И ИсторияРегистраций.СтруктурнаяЕдиница В
	|			(ВЫБРАТЬ
	|				СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|			ИЗ
	|				СтруктурныеЕдиницы_Филиалы КАК СтруктурныеЕдиницы)
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсторияРегистраций.Организация,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.КодРегиона,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане
	|	ИЗ
	|		РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(
	|			&НачалоНалоговогоПериода,
	|			Организация В
	|				(ВЫБРАТЬ
	|					СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|				ИЗ
	|					СтруктурныеЕдиницы_Филиалы КАК СтруктурныеЕдиницы)) КАК ИсторияРегистраций
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсторияРегистраций.Организация,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане.КодРегиона,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане
	|	ИЗ
	|		РегистрСведений.РегистрацииВНалоговомОргане КАК ИсторияРегистраций
	|	ГДЕ
	|		ИсторияРегистраций.Период МЕЖДУ &НачалоНалоговогоПериода И &Период
	|		И ИсторияРегистраций.Организация В
	|			(ВЫБРАТЬ
	|				СтруктурныеЕдиницы.СтруктурнаяЕдиница
	|			ИЗ
	|				СтруктурныеЕдиницы_Филиалы КАК СтруктурныеЕдиницы)
	|
	|	) КАК СтруктурныеЕдиницы
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	КодРегиона";
	
	// Если используется уплата налога по группам подразделений, то в пакет добавляются запросы временных таблиц
	// ОрганизацииУчетаНалогаПоГруппамПодразделений и НастройкиГруппПодразделений.
	Если УплачиватьНалогПоГруппамПодразделений Тогда
	
		ТекстЗапроса = ТекстЗапроса +
		";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	Настройки.Организация КАК Организация
		|ПОМЕСТИТЬ ОрганизацииУчетаНалогаПоГруппамПодразделений
		|ИЗ
		|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация В (&СписокОрганизаций)) КАК Настройки
		|ГДЕ
		|	Настройки.УплачиватьНалогПоГруппамОбособленныхПодразделений
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	НастройкиГруппПодразделений.Организация КАК Организация,
		|	НастройкиГруппПодразделений.КодРегиона КАК КодРегиона,
		|	НастройкиГруппПодразделений.РегистрацияВНалоговомОргане КАК НалоговыйОрган
		|ПОМЕСТИТЬ НастройкиГруппПодразделений
		|ИЗ
		|	РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СрезПоследних(
		|			&Период,
		|			Организация В
		|				(ВЫБРАТЬ
		|					ОрганизацииУчетаНалогаПоГруппамПодразделений.Организация
		|				ИЗ
		|					ОрганизацииУчетаНалогаПоГруппамПодразделений КАК ОрганизацииУчетаНалогаПоГруппамПодразделений)) КАК НастройкиГруппПодразделений
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Организация,
		|	КодРегиона
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеРегистрацииПериода.РегистрацияВНалоговомОргане КАК НалоговыйОрган,
		|	ЕСТЬNULL(НалоговыеОрганыПоРегионам.НалоговыйОрган, ВсеРегистрацииПериода.РегистрацияВНалоговомОргане) КАК НалоговыйОрганПодачиДекларации
		|ПОМЕСТИТЬ НалоговыеОрганыПоНалогуНаПрибыль
		|ИЗ
		|	ВсеРегистрацииПериода КАК ВсеРегистрацииПериода
		|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиГруппПодразделений КАК НалоговыеОрганыПоРегионам
		|		ПО ВсеРегистрацииПериода.Организация = НалоговыеОрганыПоРегионам.Организация
		|			И ВсеРегистрацииПериода.КодРегиона = НалоговыеОрганыПоРегионам.КодРегиона
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ОрганизацииУчетаНалогаПоГруппамПодразделений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ НастройкиГруппПодразделений
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтруктурныеЕдиницы_Филиалы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВсеРегистрацииПериода";
		
	Иначе
		
		ТекстЗапроса = ТекстЗапроса +
		";
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВсеРегистрацииПериода.РегистрацияВНалоговомОргане КАК НалоговыйОрган,
		|	ВсеРегистрацииПериода.РегистрацияВНалоговомОргане КАК НалоговыйОрганПодачиДекларации
		|ПОМЕСТИТЬ НалоговыеОрганыПоНалогуНаПрибыль
		|ИЗ
		|	ВсеРегистрацииПериода КАК ВсеРегистрацииПериода
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	НалоговыйОрган
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ СтруктурныеЕдиницы_Филиалы
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|УНИЧТОЖИТЬ ВсеРегистрацииПериода";
		
	КонецЕсли;	
	
	// Добавляем отбор по регистрациям в запросы пакета, если в менеджере есть таблица со ссылками на регистрации.
	// Если используется уплата налога по группам подразделений, то в запрос временной таблицы ВсеРегистрацииПериода
	// добавляем отбор по коду региона - чтобы корректно определить, подается ли декларация за группу подразделений
	// (см. ПолучитьРаспределениеНалогаДляЗаполненияДекларации()).
	// Также в запрос временной таблицы НастройкиГруппПодразделений добавляем отбор по регистрациям.
	// Если не используется уплата налога по группам подразделений, то добавляем отбор по регистрациям
	// в запрос ВсеРегистрацииПериода.
	// Таблицу СтруктурныеЕдиницы сразу не фильтруем, чтобы далее корректно отобрать историю регистраций.
	
	Если Не ПустаяСтрока(ИмяВременнойТаблицыРегистраций) И МенеджерВременныхТаблиц.Таблицы.Найти(ИмяВременнойТаблицыРегистраций) <> Неопределено Тогда
				
		// Далее модифицируем ТекстЗапроса с помощью СхемаЗапроса  
		СхемаЗапроса = Новый СхемаЗапроса;
		СхемаЗапроса.УстановитьТекстЗапроса(ТекстЗапроса);
		
		// Используем шаблоны условия отбора по ссылке, либо по коду региона.
		// Ниже в шаблон отбора вместо %1 подставляется имя фильтруемой таблицы запроса. 
		ШаблонОтбораПоСсылке 		= "%1.РегистрацияВНалоговомОргане В (ВЫБРАТЬ ВременнаяТаблица.РегистрацияВНалоговомОргане ИЗ "+ ИмяВременнойТаблицыРегистраций + " КАК ВременнаяТаблица)";
		ШаблонОтбораПоКодуРегиона 	= "%1.РегистрацияВНалоговомОргане.КодРегиона В (ВЫБРАТЬ ВременнаяТаблица.КодРегиона ИЗ "+ ИмяВременнойТаблицыРегистраций + " КАК ВременнаяТаблица)";
		
		ШаблонОтбораТаблицыРегистраций = ?(УплачиватьНалогПоГруппамПодразделений, ШаблонОтбораПоКодуРегиона, ШаблонОтбораПоСсылке); 
		
		// Добавляем отбор во временную таблицу ВсеРегистрацииПериода - во все подзапросы
		Для Индекс = 0 По СхемаЗапроса.ПакетЗапросов[1].Операторы.Количество()-1 Цикл
			ИмяТаблицы = СхемаЗапроса.ПакетЗапросов[1].Операторы[Индекс].Источники[0].Источник.Псевдоним;
			СхемаЗапроса.ПакетЗапросов[1].Операторы[Индекс].Отбор.Добавить(СтрШаблон(ШаблонОтбораТаблицыРегистраций, ИмяТаблицы));
		КонецЦикла;	
		
		Если УплачиватьНалогПоГруппамПодразделений Тогда
			// Добавляем отбор во временную таблицу НастройкиГруппПодразделений
			СхемаЗапроса.ПакетЗапросов[3].Операторы[0].Отбор.Добавить(СтрШаблон(ШаблонОтбораПоСсылке, "НастройкиГруппПодразделений")); 
		КонецЕсли;
				
		ТекстЗапроса = СхемаЗапроса.ПолучитьТекстЗапроса();
		
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	Запрос.Выполнить();
		
КонецПроцедуры

// Создает временную таблицу Регионы
// В ней содержатся все регионы, в которых у организации есть действующие регистрации в налоговых органах
// История налоговых органов читается на указанный период.
//
// Параметры:
// 	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - 
// 	Организация             - СправочникСсылка.Организации - 
// 	Период                  - Дата -
Процедура СоздатьТаблицуРегионов(МенеджерВременныхТаблиц, Организация, Период) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период",      Период);
	
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Организации.ГоловнаяОрганизация                        КАК ГоловнаяОрганизация,
	|	Организации.Ссылка                                     КАК Ссылка,
	|	(Организации.ГоловнаяОрганизация = Организации.Ссылка) КАК РегионГО
	|ПОМЕСТИТЬ втВрем_Организации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	(Организации.Ссылка = &Организация
	|			ИЛИ Организации.ГоловнаяОрганизация = &Организация)
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регионы.КодРегиона         КАК КодРегиона,
	|	МАКСИМУМ(Регионы.РегионГО) КАК РегионГО
	|ПОМЕСТИТЬ Регионы
	|ИЗ
	|	(ВЫБРАТЬ
	|		ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодРегиона КАК КодРегиона,
	|		СтруктурныеЕдиницы.РегионГО
	|	ИЗ
	|		втВрем_Организации КАК СтруктурныеЕдиницы
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|					&Период,
	|					СтруктурнаяЕдиница В
	|						(ВЫБРАТЬ
	|							СтруктурныеЕдиницы.Ссылка
	|						ИЗ
	|							втВрем_Организации КАК СтруктурныеЕдиницы)
	|				) КАК ИсторияРегистрацийВНалоговомОргане
	|			ПО СтруктурныеЕдиницы.Ссылка = ИсторияРегистрацийВНалоговомОргане.СтруктурнаяЕдиница
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		ИсторияРегистрацийВНалоговомОргане.РегистрацияВНалоговомОргане.КодРегиона,
	|		ЛОЖЬ
	|	ИЗ
	|		РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(
	|				&Период,
	|				Организация В
	|					(ВЫБРАТЬ
	|						СтруктурныеЕдиницы.Ссылка
	|					ИЗ
	|						втВрем_Организации КАК СтруктурныеЕдиницы)
	|		) КАК ИсторияРегистрацийВНалоговомОргане
	|
	|	) КАК Регионы
	|
	|СГРУППИРОВАТЬ ПО
	|	Регионы.КодРегиона
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодРегиона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ втВрем_Организации";
	
	Запрос.Выполнить();
	
КонецПроцедуры	

// Создает временные таблицы 
// - Филиалы                   (список обособленных подразделений, выделенных на отдельный баланс)
// - НеОбособленныеПодразделения (список обособленных подразделений, не выделенных на отдельный баланс, с указанием всех
// их потомков до 3 колена)
// Во всех таблицах указан налоговый орган, в который подается декларация.
// В менеджере временных таблиц обязательно должна присутствовать таблица НалоговыеОрганыПоНалогуНаПрибыль.
//
// Параметры:
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - в менеджере временных таблиц должна присутствовать 
//								таблица НалоговыеОрганыПоНалогуНаПрибыль (см. СоздатьНалоговыеОрганыПоНалогуНаПрибыль())
//  СписокОрганизаций - Массив - организация и ее обособленные подразделения
//								в справочнике организаций (на выделенном балансе).
//  Период - Дата - характеризует налоговый период
//
Процедура СписокОбособленныхПодразделений(МенеджерВременныхТаблиц, СписокОрганизаций, Период)
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Организации.ГоловнаяОрганизация         КАК ГоловнаяОрганизация,
	|	Организации.Ссылка                      КАК Организация,
	|	Организации.РегистрацияВНалоговомОргане КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_Филиалы
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.Ссылка В(&СписокОрганизаций)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ИсторияРегистраций.СтруктурнаяЕдиница КАК СтруктурнаяЕдиница,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане КАК НалоговыйОрган
	|ПОМЕСТИТЬ ВТ_ИсторияРегистрацийФилиалов
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(
	|			&Период,
	|			СтруктурнаяЕдиница В
	|				(ВЫБРАТЬ
	|					Филиалы.Организация
	|				ИЗ
	|					ВТ_Филиалы КАК Филиалы)
	|	) КАК ИсторияРегистраций
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	СтруктурнаяЕдиница
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Филиалы.Организация КАК Организация,
	|	ЕСТЬNULL(ИсторияРегистраций.НалоговыйОрган, Филиалы.НалоговыйОрган) КАК НалоговыйОрганФилиала,
	|	ЕСТЬNULL(ПолучателиДекларацийИстория.НалоговыйОрганПодачиДекларации,
	|		ПолучателиДеклараций.НалоговыйОрганПодачиДекларации) КАК НалоговыйОрган
	|ПОМЕСТИТЬ Филиалы
	|ИЗ
	|	ВТ_Филиалы КАК Филиалы
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВТ_ИсторияРегистрацийФилиалов КАК ИсторияРегистраций
	|			ВНУТРЕННЕЕ СОЕДИНЕНИЕ НалоговыеОрганыПоНалогуНаПрибыль КАК ПолучателиДекларацийИстория
	|			ПО ИсторияРегистраций.НалоговыйОрган = ПолучателиДекларацийИстория.НалоговыйОрган
	|		ПО Филиалы.Организация = ИсторияРегистраций.СтруктурнаяЕдиница
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ НалоговыеОрганыПоНалогуНаПрибыль КАК ПолучателиДеклараций
	|		ПО Филиалы.НалоговыйОрган = ПолучателиДеклараций.НалоговыйОрган
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ИсторияРегистраций.Организация						КАК Организация,
	|	ИсторияРегистраций.Подразделение					КАК Подразделение,
	|	ИсторияРегистраций.РегистрацияВНалоговомОргане		КАК НалоговыйОрганПодразделения,
	|	ЕСТЬNULL(НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации,
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане) КАК НалоговыйОрган
	|ПОМЕСТИТЬ НеОбособленныеПодразделения
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(
	|				&Период,
	|				Организация В (&СписокОрганизаций)
	|	) КАК ИсторияРегистраций
	|
	|	ВНУТРЕННЕЕ СОЕДИНЕНИЕ
	|		Справочник.СтруктураПредприятия КАК Подразделения
	|	ПО
	|		Подразделения.Ссылка = ИсторияРегистраций.Подразделение
	|
	|	ЛЕВОЕ СОЕДИНЕНИЕ
	|		НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПоНалогуНаПрибыль
	|	ПО
	|		ИсторияРегистраций.РегистрацияВНалоговомОргане = НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрган
	|
	|ГДЕ
	|	НЕ Подразделения.ПометкаУдаления
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Организация,
	|	Подразделение
	|
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_Филиалы
	|;
	|////////////////////////////////////////////////////////////////////////////////
	|УНИЧТОЖИТЬ ВТ_ИсторияРегистрацийФилиалов
	|";
	
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("СписокОрганизаций", СписокОрганизаций);
	Запрос.УстановитьПараметр("Период", Период);
	Запрос.Выполнить();
	
КонецПроцедуры

Функция ЕстьРазныеНалоговыеОрганы(МенеджерВременныхТаблиц)
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст = 
	"ВЫБРАТЬ РАЗЛИЧНЫЕ ПЕРВЫЕ 2
	|	Т.НалоговыйОрган КАК НалоговыйОрган
	|ИЗ
	|	(ВЫБРАТЬ
	|		Т.НалоговыйОрганФилиала КАК НалоговыйОрган
	|	ИЗ
	|		Филиалы КАК Т
	|	
	|	ОБЪЕДИНИТЬ ВСЕ
	|	
	|	ВЫБРАТЬ
	|		Т.НалоговыйОрганПодразделения
	|	ИЗ
	|		НеОбособленныеПодразделения КАК Т
	|	) КАК Т
	|";
	
	Выборка = Запрос.Выполнить().Выбрать(); 
	Возврат (Выборка.Количество() > 1);
	
КонецФункции

// Возвращает признак того, что у организации есть обособленные подразделения
// Учитываются как выделенные на отдельный баланс, так и невыделенные
//
// Параметры:
//  Организация  - СправочникСсылка.Организации
//
// Возвращаемое значение:
// 	Булево -
//   Ложь   - у организации нет обособленных подразделений
//	 Истина - у организации есть хотя бы 1 обособленное подразделение.
//
Функция ЕстьОбособленныеПодразделения(Организация) Экспорт
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация", Организация);
	
	Запрос.Текст = 
	"ВЫБРАТЬ ПЕРВЫЕ 1
	|	Организации.Ссылка КАК ОбособленноеПодразделение
	|ИЗ
	|	Справочник.Организации КАК Организации
	|ГДЕ
	|	Организации.ГоловнаяОрганизация = &Организация
	|	И Организации.Ссылка <> &Организация
	|	И НЕ Организации.ПометкаУдаления
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ ПЕРВЫЕ 1
	|	РегистрацииВНО.Подразделение
	|ИЗ
	|	РегистрСведений.РегистрацииВНалоговомОргане.СрезПоследних(, Организация.ГоловнаяОрганизация = &Организация) КАК РегистрацииВНО
	|";
	
	Возврат НЕ Запрос.Выполнить().Пустой();
	
КонецФункции

// Функция определяет, как уплачивается налог на прибыль:
// - по каждому обособленному подразделению отдельно
// - или по группам обособленных подразделений.
//
// Параметры:
//  Организация  - СправочникСсылка.Организации - организация, настройки которой требуется получить
//  Период       - Дата - дата, на которую читаются настройки.
//
// Возвращаемое значение:
//  Булево -
//   Ложь   - налог рассчитывается по каждому обособленному подразделению (по умолчанию)
//   Истина - налог рассчитывается суммарно по группе подразделений, находящихся в одном регионе.
//
Функция УплачиватьНалогНаПрибыльПоГруппамПодразделений(Организация, Период)
	
	ПараметрыУчетнойПолитики = НастройкиНалоговУчетныхПолитик.ДействующиеПараметрыНалоговУчетныхПолитикНаДату(
		"НастройкиУчетаНалогаНаПрибыль",
		Организация,
		Период,
		Ложь);
			
	Результат = ОбщегоНазначенияКлиентСервер.СвойствоСтруктуры(
		ПараметрыУчетнойПолитики,
		"УплачиватьНалогПоГруппамОбособленныхПодразделений",
		Ложь);
	
	Возврат Результат;

КонецФункции

// Находит налоговый орган, в который подается декларация по налогу на прибыль
// за указанный отчетный период по головной организации.
//
// Параметры:
//  РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
//               переменная, в которую помещается найденная регистрация
//  Организация	 - СправочникСсылка.Организации - организация, по которой нужно найти регистрацию
//  Период		 - Дата - характеризует проверяемый период
//
Процедура ОпределитьТекущуюРегистрациюОрганизацииВНалоговомОргане(РегистрацияВНалоговомОргане, Организация, Период) Экспорт
	
	Запрос = Новый Запрос;
	
	Запрос.УстановитьПараметр("Организация",   Организация);
	Запрос.УстановитьПараметр("Период",        Период);
	
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	ТекущаяРегистрация.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ТекущаяРегистрацияВИстории
	|ИЗ
	|	РегистрСведений.ИсторияРегистрацийВНалоговомОргане.СрезПоследних(&Период, СтруктурнаяЕдиница = &Организация) КАК ТекущаяРегистрация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ВЫРАЗИТЬ(ЕСТЬNULL(ТекущаяРегистрацияВИстории.РегистрацияВНалоговомОргане, Организации.РегистрацияВНалоговомОргане) КАК Справочник.РегистрацииВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ ТекущаяРегистрацияОрганизации
	|ИЗ
	|	Справочник.Организации КАК Организации
	|		ЛЕВОЕ СОЕДИНЕНИЕ ТекущаяРегистрацияВИстории КАК ТекущаяРегистрацияВИстории
	|		ПО (ИСТИНА)
	|ГДЕ
	|	Организации.Ссылка = &Организация
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Настройки.Организация КАК Организация
	|ПОМЕСТИТЬ ОрганизацииУчетаНалогаПоГруппамПодразделений
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыль.СрезПоследних(&Период, Организация = &Организация) КАК Настройки
	|ГДЕ
	|	Настройки.УплачиватьНалогПоГруппамОбособленныхПодразделений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	НастройкиГруппПодразделений.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане
	|ПОМЕСТИТЬ НастройкиГруппПодразделений
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СрезПоследних(
	|			&Период,
	|			Организация В
	|					(ВЫБРАТЬ
	|						ОрганизацииУчетаНалогаПоГруппамПодразделений.Организация
	|					ИЗ
	|						ОрганизацииУчетаНалогаПоГруппамПодразделений КАК ОрганизацииУчетаНалогаПоГруппамПодразделений)
	|				И КодРегиона В
	|					(ВЫБРАТЬ
	|						ТекущаяРегистрацияОрганизации.РегистрацияВНалоговомОргане.КодРегиона
	|					ИЗ
	|						ТекущаяРегистрацияОрганизации КАК ТекущаяРегистрацияОрганизации)) КАК НастройкиГруппПодразделений
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ЕСТЬNULL(НастройкиГруппПодразделений.РегистрацияВНалоговомОргане, ТекущаяРегистрацияОрганизации.РегистрацияВНалоговомОргане) КАК РегистрацияВНалоговомОргане
	|ИЗ
	|	ТекущаяРегистрацияОрганизации КАК ТекущаяРегистрацияОрганизации
	|		ЛЕВОЕ СОЕДИНЕНИЕ НастройкиГруппПодразделений КАК НастройкиГруппПодразделений
	|		ПО (ИСТИНА)";
	
	Результат = Запрос.Выполнить();
		
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Выборка.Следующий(); // в выборке 1 запись
	
	РегистрацияВНалоговомОргане = Выборка.РегистрацияВНалоговомОргане;

КонецПроцедуры

// Выявляет неполноту настроек: указано, что декларация представляется в одну из налоговых каждого региона,
// но не выбрано, в какую именно.
//
// Параметры:
//  Ошибки		 - ДеревоЗначений - см. ВыводСообщенийОбОшибках.НовыйДетальнаяИнформацияОбОшибках() 
//               коллекция с информацией об ошибках, может быть дополнена в процедуре.
//  Период		 - Дата - характеризует проверяемый период (месяц)
//  Организация	 - СправочникСсылка.Организации - организация, настройки которой проверяются
//  ПредставлениеОшибки - Строка - в переданный параметр помещается представление ошибки
//
Процедура ПроверитьНастроеныПолучателиДеклараций(Ошибки, Период, Организация, ПредставлениеОшибки = "") Экспорт
	
	Если Не УплачиватьНалогНаПрибыльПоГруппамПодразделений(Организация, Период) Тогда
		Возврат;
	КонецЕсли;
		
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
		
	СоздатьТаблицуРегионов(МенеджерВременныхТаблиц, Организация, Период); 
		
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация", Организация);
	Запрос.УстановитьПараметр("Период",      Период);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Настройки.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Настройки.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ Настройки
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СрезПоследних(
	|			&Период,
	|			Организация = &Организация
	|				И КодРегиона В
	|					(ВЫБРАТЬ
	|						Регионы.КодРегиона
	|					ИЗ
	|						Регионы)) КАК Настройки
	|ГДЕ
	|	Настройки.РегистрацияВНалоговомОргане <> ЗНАЧЕНИЕ(Справочник.РегистрацииВНалоговомОргане.ПустаяСсылка)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	КодРегиона
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Регионы.КодРегиона КАК КодРегиона,
	|	Регионы.РегионГО КАК РегионГО
	|ИЗ
	|	Регионы КАК Регионы
	|		ЛЕВОЕ СОЕДИНЕНИЕ Настройки КАК Настройки
	|		ПО Регионы.КодРегиона = Настройки.КодРегиона
	|ГДЕ
	|	Настройки.РегистрацияВНалоговомОргане ЕСТЬ NULL 
	|
	|УПОРЯДОЧИТЬ ПО
	|	Регионы.РегионГО УБЫВ,
	|	КодРегиона";
	
	Результат = Запрос.Выполнить();
		
	Если Результат.Пустой() Тогда
		// Ошибок нет
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Если Выборка.Количество() = 1 Тогда
		ШаблонЛокализацииОшибки = НСтр("ru = 'По состоянию на %1 получатель декларации не выбран в следующем регионе:';
										|en = 'As of %1, a declaration recipient is not selected in the following region:'");
	Иначе
		ШаблонЛокализацииОшибки = НСтр("ru = 'По состоянию на %1 получатели декларации не выбраны в следующих регионах:';
										|en = 'As of %1, declaration recipients are not selected in the following regions:'");
	КонецЕсли;
	
	ПредставлениеПериода = Формат(Период, НСтр("ru = 'ДФ=''MMMM yyyy''';
												|en = 'DF=''MMMM yyyy'''"));
	ШаблонЛокализацииОшибки = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонЛокализацииОшибки, ПредставлениеПериода);
	
	ШаблонСообщения = НСтр("ru = 'В настройках налога на прибыль указано, что декларация представляется только в одну инспекцию каждого региона.
                                    |Поэтому для каждого региона должна быть выбрана налоговая инспекция - получатель декларации.
                                    |%1';
                                    |en = 'In the income tax settings it is specified that the declaration is submitted only to one tax office of each region.
                                    |So, the tax office that receives declarations must be selected for each region.
                                    |%1'");// см. ШаблонЛокализацииОшибки
	
									
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьПростоеОписаниеОшибки(Ошибки);
	Ошибка.Описание     = НСтр("ru = 'Невозможно распределить сумму налога на прибыль между регионами.';
								|en = 'Cannot allocate the income tax amount among regions.'");
	Ошибка.Локализация  = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонСообщения, ШаблонЛокализацииОшибки);
	
	ШаблонПредставленияРегиона = НСтр("ru = '%1, %2';
										|en = '%1, %2'");  //например: "77, Москва г"
	
	Пока Выборка.Следующий() Цикл
		
		НаименованиеРегиона = АдресныйКлассификатор.НаименованиеРегионаПоКоду(Выборка.КодРегиона);
		
		Ошибка.ЛокализацияДетально.Добавить().Локализация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонПредставленияРегиона,
			Выборка.КодРегиона,
			НаименованиеРегиона);
	
	КонецЦикла;	
	
	ШаблонРекомендация   = НСтр("ru = 'Перейдите в настройки налога на прибыль и выберите получателей деклараций в указанных регионах.
									|Если в %1 году представляются декларации отдельно по каждому обособленному подразделению,
									|то необходимо изменить порядок представления декларации в настройках налога на прибыль';
									|en = 'Go to the income tax settings and select declaration recipients in the specified regions.
									|If in %1, declarations are submitted for each business unit separately,
									|change the declaration submission procedure in the income tax settings'");
									
	ПредставлениеПериода = Формат(Период, "ДФ=yyyy");
	Ошибка.Рекомендация = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(ШаблонРекомендация, ПредставлениеПериода);
	
	
	// Текстовое представление ошибки
	
	ОписаниеОшибки = Ошибка.Описание;
	
	мСтрокаРегионов = Новый Массив;
	
	Для каждого СтрокаДетализацииОшибки Из Ошибка.ЛокализацияДетально Цикл
		мСтрокаРегионов.Добавить(СтрокаДетализацииОшибки.Локализация);
	КонецЦикла;
	
	СтрокаРегионов = СтрСоединить(мСтрокаРегионов, "; ");
	
	ПричинаОшибки = СтрШаблон(НСтр("ru = '%1 %2';
									|en = '%1 %2'"), Ошибка.Локализация, СтрокаРегионов);
	
	РекомендацияПоОшибке = Ошибка.Рекомендация;
	
	ШаблонПредставлениеОшибки = НСтр("ru = '%1
								|
								| Причина:
								|	%2
								|
								| Рекомендация:
								|	%3';
								|en = '%1
								|
								| Reason:
								|	%2
								|
								| Recommendation:
								|	%3'");
	
	ПредставлениеОшибки = СтрШаблон(ШаблонПредставлениеОшибки, ОписаниеОшибки, ПричинаОшибки, РекомендацияПоОшибке);

КонецПроцедуры

// Выявляет некорректность настроек: указано, что декларация представляется в налоговый орган, где организация снята с учета,
// но при этом в регионе есть другие действующие регистрации.
//
// Параметры:
//  Ошибки		 - ДеревоЗначений - см. ВыводСообщенийОбОшибках.НовыйДетальнаяИнформацияОбОшибках()
//               - коллекция с информацией об ошибках, может быть дополнена в процедуре.
//  Период		 - Дата - характеризует проверяемый период (месяц)
//  Организация	 - СправочникСсылка.Организации - организация, настройки которой проверяются
//  ПредставлениеОшибки - Строка - в переданный параметр помещается представление ошибки
//
Процедура ПроверитьСнятыСУчетаОтветственныеПодразделения(Ошибки, Период, Организация, ПредставлениеОшибки = "") Экспорт
	
	Если Не УплачиватьНалогНаПрибыльПоГруппамПодразделений(Организация, Период) Тогда
		Возврат;
	КонецЕсли;
	
	МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("Организация",  Организация);
	Запрос.УстановитьПараметр("Период",       Период);
		
	Запрос.Текст =
	"ВЫБРАТЬ
	|	Настройки.РегистрацияВНалоговомОргане КАК РегистрацияВНалоговомОргане,
	|	Настройки.КодРегиона КАК КодРегиона
	|ПОМЕСТИТЬ СнятыеСУчета
	|ИЗ
	|	РегистрСведений.НастройкиУчетаНалогаНаПрибыльГруппОбособленныхПодразделений.СрезПоследних(&Период, Организация = &Организация) КАК Настройки
	|ГДЕ
	|	Настройки.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <> ДАТАВРЕМЯ(1, 1, 1)
	|	И Настройки.РегистрацияВНалоговомОргане.ДатаСнятияСУчета <= &Период";

	Запрос.Выполнить();
	
	// Далее создаем временную таблицу НалоговыеОрганыПоНалогуНаПрибыль - выбираем все регистрации по организации за период.
	// Передаем отбор по созданной временной таблице СнятыеСУчета.
	СоздатьНалоговыеОрганыПоНалогуНаПрибыль(
		МенеджерВременныхТаблиц,
		ОбщегоНазначенияБПВызовСервераПовтИсп.ВсяОрганизация(Организация),
		Период,
		"СнятыеСУчета",
		Истина);  // Налог уплачивается по группам подразделений - см. проверку выше
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации КАК НалоговыйОрган,
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации.Наименование КАК Наименование,
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации.КПП КАК КПП,
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации.КодРегиона КАК КодРегиона
	|ИЗ
	|	НалоговыеОрганыПоНалогуНаПрибыль КАК НалоговыеОрганыПоНалогуНаПрибыль
	|ГДЕ
	|	НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрган.ДатаСнятияСУчета = ДАТАВРЕМЯ(1, 1, 1)
	|		И НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрган <> НалоговыеОрганыПоНалогуНаПрибыль.НалоговыйОрганПодачиДекларации
	|
	|УПОРЯДОЧИТЬ ПО
	|	КодРегиона";
	
	Результат = Запрос.Выполнить();
		
	Если Результат.Пустой() Тогда
		// Ошибок нет
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	
	Описание     = НСтр("ru = 'Данные для заполнения декларации по налогу на прибыль некорректны';
						|en = 'Data for filling the income tax declaration is incorrect'");
	
	ЧтоСлучилось = Новый Массив;
	ЧтоСлучилось.Добавить(НСтр("ru = 'В настройках налога на прибыль указано, что на все подразделения, находящиеся в одном регионе, 
					|представляется единая декларация. 
					|В каждом регионе выбрано подразделение, ответственное за предоставление этой декларации.';
					|en = 'In the income tax settings it is specified that all business units of the same region 
					|receive a unified declaration. 
					|Each region has a business unit responsible for the declaration submission.'"));
	
	Если Выборка.Количество() = 1 Тогда
		
		Выборка.Следующий();
		
		ШаблонЧтоСлучилось = НСтр("ru = 'В одном из регионов организация обязана платить налог, однако ответственное за это подразделение
						|снято с учета в налоговой инспекции.
						|Это подразделение ранее стояло на учете в %1 (%2) с КПП %3.';
						|en = 'In one of the regions, a company must pay the tax but the business unit responsible for it
						|is deregistered with the tax office.
						|This business unit was registered with %1 (%2) with CRTR %3.'");
						// например, "... в ИФНС 2701 (Хабаровский край) с КПП 270143001"
						
		НаименованиеРегиона = АдресныйКлассификатор.НаименованиеРегионаПоКоду(Выборка.КодРегиона);
		ЧтоСлучилось.Добавить(СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			ШаблонЧтоСлучилось,
			Выборка.Наименование,
			НаименованиеРегиона,
			Выборка.КПП));
						
	Иначе

		ЧтоСлучилось.Добавить(НСтр("ru = 'В некоторых регионах организация обязана платить налог, однако ответственные за это подразделения
						|сняты с учета в налоговой инспекции:';
						|en = 'In some regions, a company must pay the tax but the business units responsible for it
						|are deregistered with the tax office:'"));
	КонецЕсли;
	
	
	Ошибка = ВыводСообщенийОбОшибках.ДобавитьОписаниеОшибки(Ошибки);
	
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "Описание", Описание);
	ВыводСообщенийОбОшибках.ДобавитьРаздел(Ошибка, "ЧтоСлучилось", ЧтоСлучилось);
	
	мРегистрацииФНСОшибки = Новый Массив;
	
	// Если ошибки в нескольких регионах, то в описание добавляется таблица налоговых инспекций.
	// В ином случае данные налоговой инспекции уже указаны в тексте сообщения ЧтоСлучилось (см. выше).
	Если Выборка.Количество() > 1 Тогда
		
		ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "ЗакрытоОтветственноеПодразделение_Шапка", Новый Структура);
		ШаблонПредставленияРегиона = НСтр("ru = '%1, %2';
											|en = '%1, %2'");  //например: "77, Москва г"
		
		Пока Выборка.Следующий() Цикл
			
			ДанныеДляВывода = Новый Структура("Регион, НалоговыйОрган, КПП, РасшифровкаНалоговыйОрган");
			
			НаименованиеРегиона = АдресныйКлассификатор.НаименованиеРегионаПоКоду(Выборка.КодРегиона);
			
			ПредставлениеРегиона = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
				ШаблонПредставленияРегиона,
				Выборка.КодРегиона,
				НаименованиеРегиона);
			
			ДанныеДляВывода.Регион 			= ПредставлениеРегиона;
			ДанныеДляВывода.НалоговыйОрган 	= Выборка.Наименование;
			ДанныеДляВывода.КПП 			= Выборка.КПП;
			
			// Расшифровка
			ДанныеДляВывода.РасшифровкаНалоговыйОрган = Выборка.НалоговыйОрган;			
						
			ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, 
													"ЗакрытоОтветственноеПодразделение_Строка", 
													ДанныеДляВывода);
			
			мРегистрацииФНСОшибки.Добавить(СтрШаблон(НСтр("ru = '%1 (%2) с КПП %3';
															|en = '%1 (%2) with CRTR %3'"),
				ДанныеДляВывода.НалоговыйОрган,
				ДанныеДляВывода.Регион,
				ДанныеДляВывода.КПП));
		
		КонецЦикла;
		
	КонецЕсли;
	
	// ЧтоДелать
	мРекомендации = Новый Массив;
	
	ЧтоДелать = НСтр("ru = 'Проверьте настройки налога на прибыль, корректность данных о подразделениях, снятых с учета.
				|Если ответственным выбрано другое подразделение, укажите его в настройках налога на прибыль.';
				|en = 'Check the income tax settings and whether the derecognized business unit data is correct.
				|If you select another business unit, specify it in the income tax settings.'");
				
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", ЧтоДелать);
	мРекомендации.Добавить(ЧтоДелать);
	
	Если Выборка.Количество() = 1 Тогда
				
		ЧтоДелать = НСтр("ru = 'Если в указанном регионе все подразделения прекратили деятельность, укажите это в сведениях
					|об этих подразделениях.';
					|en = 'If all business units of the specified region ceased their activities,
					|specify it in their information.'");
						
	Иначе

		ЧтоДелать = НСтр("ru = 'Если в указанных регионах все подразделения прекратили деятельность, укажите это в сведениях
					|об этих подразделениях.';
					|en = 'If all business units of the specified regions ceased their activities,
					|specify it in their information.'");
					
	КонецЕсли;
	
					
	ВыводСообщенийОбОшибках.ДобавитьСекцию(Ошибка, "Текст", ЧтоДелать);
	мРекомендации.Добавить(ЧтоДелать);
	
	
	// Текстовое представление ошибки
	
	ОписаниеОшибки = Описание;
	
	Если мРегистрацииФНСОшибки.Количество() > 0 Тогда
		
		// ошибка в нескольких регионах
		
		ИндексОписанияОшибкиСФНС        = 1;
		СтрокаРегистрацииФНСОшибки      = СтрСоединить(мРегистрацииФНСОшибки, ";" + Символы.ПС);
		ПричинаОшибки_ОписаниеФНС       = ЧтоСлучилось[ИндексОписанияОшибкиСФНС];
		ШаблонПричинаОшибки_ОписаниеФНС = НСтр("ru = '%1
												|%2';
												|en = '%1
												|%2'");
		ПричинаОшибки_ОписаниеФНС = СтрШаблон(ШаблонПричинаОшибки_ОписаниеФНС, СтрокаРегистрацииФНСОшибки);
		
		мПричинаОшибки = Новый Массив;
		
		Для ИндексЧтоСлучилось = 0 По (ЧтоСлучилось.Количество() - 1) Цикл
			Если ИндексЧтоСлучилось = ИндексОписанияОшибкиСФНС Тогда
				мПричинаОшибки.Добавить(ПричинаОшибки_ОписаниеФНС);
			Иначе
				мПричинаОшибки.Добавить(ЧтоСлучилось.Получить(ИндексЧтоСлучилось));
			КонецЕсли;
		КонецЦикла;
		
		ПричинаОшибки = СтрСоединить(мПричинаОшибки, Символы.ПС);
		
	Иначе
		
		ПричинаОшибки = СтрСоединить(ЧтоСлучилось, Символы.ПС);
		
	КонецЕсли;
	
	РекомендацияПоОшибке = СтрСоединить(мРекомендации, Символы.ПС);
	
	ШаблонПредставлениеОшибки = НСтр("ru = '%1
								|
								| Причина:
								|	%2
								|
								| Рекомендация:
								|	%3';
								|en = '%1
								|
								| Reason:
								|	%2
								|
								|Recommendation:
								|	%3'");
	
	ПредставлениеОшибки = СтрШаблон(ШаблонПредставлениеОшибки, ОписаниеОшибки, ПричинаОшибки, РекомендацияПоОшибке);
	
КонецПроцедуры

// Функция-конструктор расчета распределения налоговой базы
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// * РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
// * НалоговаяБазаПоВариантамНалогообложения - Соответствие - содержит:
// 		** Ключ     - СправочникСсылка.ВариантыНалогообложенияПрибыли -
// 		** Значение - Число - сумма налоговой базы
// * СтоимостьАмортизируемогоИмущества - Число -
// * СтоимостьОСПрошлыхМесяцев - Число -
// * СтоимостьОССледующегоМесяца - Число -
// * РасходыПоОплатеТруда - Число -
// * ДоляНалоговойБазы - Число -
// * НалоговаяБаза - Число -
// * Закрыто - Булево -
// * ПоследнийОтчетныйПериод - Дата -
Функция НовыйРасчетРаспределенияНалоговойБазы()
	
	ОписаниеТипаЧисла15_2 = ОбщегоНазначенияУТ.ОписаниеТипаДенежногоПоля();
	
	ЗаписьРаспределенияБазыНалогаНаПрибыль = Новый ТаблицаЗначений;
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("РегистрацияВНалоговомОргане",
		Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("НалоговаяБазаПоВариантамНалогообложения",
		Новый ОписаниеТипов("Соответствие"));
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьАмортизируемогоИмущества", ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОСПрошлыхМесяцев",         ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СтоимостьОССледующегоМесяца",       ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("РасходыПоОплатеТруда",              ОписаниеТипаЧисла15_2);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("СреднесписочнаяЧисленность",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.СреднесписочнаяЧисленность.Тип);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("ДоляНалоговойБазы",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.ДоляНалоговойБазы.Тип);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("НалоговаяБаза",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.НалоговаяБаза.Тип);
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("Закрыто",
		Новый ОписаниеТипов("Булево"));
	
	ЗаписьРаспределенияБазыНалогаНаПрибыль.Колонки.Добавить("ПоследнийОтчетныйПериод",
		ОбщегоНазначения.ОписаниеТипаДата(ЧастиДаты.Дата));
	
	Возврат ЗаписьРаспределенияБазыНалогаНаПрибыль;
	
КонецФункции

// функция-конструктор расчета распределения налоговой базы по вариантам налогообложения
// 
// Возвращаемое значение:
// 	ТаблицаЗначений - Описание:
// * РегистрацияВНалоговомОргане - СправочникСсылка.РегистрацииВНалоговомОргане -
// * ВариантНалогообложенияПрибыли - СправочникСсылка.ВариантыНалогообложенияПрибыли -
// * НалоговаяБаза - Число -
//
Функция НовыйРасчетРаспределенияНалоговойБазыПоВариантамНалогообложения()
	
	ТаблицаРасчета = Новый ТаблицаЗначений;
	ТаблицаРасчета.Колонки.Добавить("РегистрацияВНалоговомОргане",
		Новый ОписаниеТипов("СправочникСсылка.РегистрацииВНалоговомОргане"));
	ТаблицаРасчета.Колонки.Добавить("ВариантНалогообложенияПрибыли",
		Новый ОписаниеТипов("СправочникСсылка.ВариантыНалогообложенияПрибыли"));
	ТаблицаРасчета.Колонки.Добавить("НалоговаяБаза",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыльПоВариантамНалогообложения.Ресурсы.НалоговаяБаза.Тип);
	ТаблицаРасчета.Колонки.Добавить("ДоляНалоговойБазы",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыльПоВариантамНалогообложения.Ресурсы.ДоляНалоговойБазы.Тип);
	ТаблицаРасчета.Колонки.Добавить("ДоляФНС",
		Метаданные.РегистрыСведений.РасчетДолейБазыНалогаНаПрибыль.Ресурсы.ДоляНалоговойБазы.Тип);
	ТаблицаРасчета.Колонки.Добавить("Закрыто",
		Новый ОписаниеТипов("Булево"));
	
	Возврат ТаблицаРасчета;
	
КонецФункции

// Добавляет в строку таблицы налоговую базу по варианту налогообложения
// 
// Параметры:
// 	Запись                  - СтрокаТаблицыЗначений Из см. НовыйРасчетРаспределенияНалоговойБазы
// 	ВариантНалогообложения  - СправочникСсылка.ВариантыНалогообложенияПрибыли -
// 	НалоговаяБаза           - Число -
//
Процедура ДобавитьВРасчетНалоговуюБазуПоВариантуНалогообложения(Запись, ВариантНалогообложения, НалоговаяБаза)
	
	Запись.НалоговаяБазаПоВариантамНалогообложения.Вставить(ВариантНалогообложения, НалоговаяБаза);
	
КонецПроцедуры

Функция ПодготовитьПараметрыПересчетаОНАИОНО(СтруктураШапки, Отказ)  
	
	ПараметрыПроведения = Новый Структура;
	
	Запрос = Новый Запрос;
	
	СодержаниеРеформация   = НСтр("ru = 'Пересчет ОНА и ОНО';
									|en = 'Recalculate deferred tax assets and deferred tax liabilities'");
	СодержаниеЗакрытиеГода = "";
	
	Период        = СтруктураШапки.Дата;
	НоваяСтавка   = СтруктураШапки.СтавкаНалогаНаПрибыль * 100;
	ДатаДляСтавки = КонецМесяца(НачалоМесяца(СтруктураШапки.Дата) - 1);
	СтараяСтавка  = ПолучитьРасчетнуюСтавкуНалогаНаПрибыль(СтруктураШапки.Организация, ДатаДляСтавки) * 100;
	
	Запрос.УстановитьПараметр("Ссылка",                 СтруктураШапки.Ссылка);
	Запрос.УстановитьПараметр("НоваяСтавка",            НоваяСтавка);
	Запрос.УстановитьПараметр("СтараяСтавка",           СтараяСтавка);
	Запрос.УстановитьПараметр("Предприниматель",        СтруктураШапки.Предприниматель);
	Запрос.УстановитьПараметр("СодержаниеРеформация",   СодержаниеРеформация);
	Запрос.УстановитьПараметр("СодержаниеЗакрытиеГода", СодержаниеЗакрытиеГода);
	
	НомераТаблиц = Новый Структура;
	НомераТаблиц.Вставить("ТаблицаРеквизитыЗакрытиеГода", НомераТаблиц.Количество());
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	РегламентнаяОперация.Ссылка КАК Регистратор,
	|	РегламентнаяОперация.Организация КАК Организация,
	|	РегламентнаяОперация.Дата КАК Период,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, ГОД) КАК НачалоГода,
	|	НАЧАЛОПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК НачДата,
	|	КОНЕЦПЕРИОДА(РегламентнаяОперация.Дата, МЕСЯЦ) КАК КонДата,
	|	&НоваяСтавка КАК НоваяСтавка,
	|	&СтараяСтавка КАК СтараяСтавка,
	|	&Предприниматель КАК Предприниматель,
	|	&СодержаниеРеформация КАК СодержаниеРеформация,
	|	&СодержаниеЗакрытиеГода КАК СодержаниеЗакрытиеГода
	|ИЗ
	|	Документ.РегламентнаяОперация КАК РегламентнаяОперация
	|ГДЕ
	|	РегламентнаяОперация.Ссылка = &Ссылка";
	
	Запрос.Текст = ТекстЗапроса + ОбщегоНазначенияБПВызовСервера.ТекстРазделителяЗапросовПакета();
	Результат    = Запрос.ВыполнитьПакет();

	Для каждого НомерТаблицы Из НомераТаблиц Цикл
		ПараметрыПроведения.Вставить(НомерТаблицы.Ключ, Результат[НомерТаблицы.Значение].Выгрузить());
	КонецЦикла;
	
	Возврат ПараметрыПроведения;
	
КонецФункции // ПодготовитьПараметрыПересчетаОНАИОНО()

// Выполняет обнуление показалетей Листа2 Приложения 5 декларация по прибыли.
//
Процедура ОбнулитьПоказателиЛист2Приложение5ДекларацииПоПрибыли(КоллекцияПоказателей)

	// Показатели из форм отчета до 2015Кв1
	КоллекцияПоказателей.П002050000100 = "";
	КоллекцияПоказателей.П002050001000 = "";
	КоллекцияПоказателей.П002050002001 = "";
	КоллекцияПоказателей.П002050002002 = "";
	КоллекцияПоказателей.П002050002003 = "";
	КоллекцияПоказателей.П002050003003 = 0;
	КоллекцияПоказателей.П002050003103 = 0;
	КоллекцияПоказателей.П002050004003 = 0;
	КоллекцияПоказателей.П002050005003 = 0;
	КоллекцияПоказателей.П002050006003 = 0;
	КоллекцияПоказателей.П002050007003 = 0;
	КоллекцияПоказателей.П002050008003 = 0;
	КоллекцияПоказателей.П002050009003 = 0;
	КоллекцияПоказателей.П002050010003 = 0;
	КоллекцияПоказателей.П002050011003 = 0;
	КоллекцияПоказателей.П002050012003 = 0;
	КоллекцияПоказателей.П002050012103 = 0;

КонецПроцедуры

Функция СписокДоступныхОрганизаций(Организация)
	
	СписокДоступныхОрганизаций = ОбщегоНазначенияБПВызовСервераПовтИсп.ВсеОрганизацииДанныеКоторыхДоступныПоRLS(Ложь);
	
	Если ЗначениеЗаполнено(Организация) И СписокДоступныхОрганизаций.Найти(Организация) <> Неопределено Тогда
		СписокОрганизаций = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(Организация);
	ИначеЕсли СписокДоступныхОрганизаций.Количество() <> 0 Тогда
		СписокОрганизаций = СписокДоступныхОрганизаций;
	Иначе
		Возврат Справочники.Организации.ПустаяСсылка();
	КонецЕсли;
	
	Возврат СписокОрганизаций;
	
КонецФункции

#КонецОбласти
