
#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытийОбъекта

// Вызывается из соответствующего обработчика плана видов характеристик
//
// Параметры:
//  Объект - ПланВидовХарактеристикОбъект.СтатьиРасходов - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	Если Объект.ЭтоГруппа Тогда
		Возврат;
	КонецЕсли;
	
	//++ Локализация

	//++ НЕ УТ
	МассивНепроверяемыхРеквизитов = Новый Массив;
	
	Если Объект.ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидАктива");
	КонецЕсли;
	
	// Предопределенные значения
	ВидРасходовНеУчитываемые = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
	ВидРасходовИспользуется = ВидРасходовИспользуется(Объект);
	
	Если НЕ ВидРасходовИспользуется Тогда	
		
	// Вид расходов должен соответствовать флагу принятия к НУ
	ИначеЕсли Не Объект.ПринятиеКНалоговомуУчету И (Объект.ВидРасходов <> ВидРасходовНеУчитываемые И ЗначениеЗаполнено(Объект.ВидРасходов)) Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Вид расходов должен быть не принимаемым к налоговому учету.';
				|en = 'Expense kind must not be entered in tax accounting.'"),
			Объект,
			"ВидРасходов",
			,
			Отказ);
		
	ИначеЕсли Объект.ПринятиеКНалоговомуУчету И Объект.ВидРасходов = ВидРасходовНеУчитываемые Тогда
		
		ОбщегоНазначенияКлиентСервер.СообщитьПользователю(
			НСтр("ru = 'Вид расходов должен быть принимаемым к налоговому учету.';
				|en = 'Expense kind must be entered in tax accounting.'"),
			Объект,
			"ВидРасходов",
			,
			Отказ);
		
	КонецЕсли;
	
	Если НЕ (Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов 
		И Объект.ПринятиеКНалоговомуУчету) Тогда 
		МассивНепроверяемыхРеквизитов.Добавить("ВидРБП"); 
	КонецЕсли;
	
	Если НЕ ВидРасходовИспользуется Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидРасходов"); 
	КонецЕсли;
	
	Если НЕ (Объект.ПринятиеКНалоговомуУчету И ВидПрочихРасходовИспользуется(Объект)) Тогда
		МассивНепроверяемыхРеквизитов.Добавить("ВидПрочихДоходовИРасходов"); 
	КонецЕсли;
	
	Если Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.ТранспортныеРасходы И
			Не (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
			И Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности)
	Тогда
		
		ОбщегоНазначения.СообщитьПользователю(
			НСтр("ru = 'Транспортными могут быть только косвенные расходы (варианты распределения регл. учета - на финансовый результат).';
				|en = 'Only indirect expenses can be transportation expenses. Local accounting allocation options: to profitability & cost.'"),
			Объект,
			"ВидРасходов",
			,
			Отказ);
		
	КонецЕсли;
	
	ОбщегоНазначения.УдалитьНепроверяемыеРеквизитыИзМассива(ПроверяемыеРеквизиты, МассивНепроверяемыхРеквизитов);
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика плана видов характеристик
//
// Параметры:
//  Объект - ПланВидовХарактеристикОбъект.СтатьиРасходов - Обрабатываемый объект
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, СтандартнаяОбработка) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	Если ЗначениеЗаполнено(Объект.ВидРасходов) Тогда
		НормируемыеРасходы = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
		Если НормируемыеРасходы.Найти(Объект.ВидРасходов) <> Неопределено Тогда
			Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		КонецЕсли;
	КонецЕсли;
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика плана видов характеристик
//
// Параметры:
//  Объект - ПланВидовХарактеристикОбъект.СтатьиРасходов - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПередЗаписью(Объект, Отказ) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	Если Не Объект.ЭтоГруппа Тогда
		Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов 
				И Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов Тогда
			Объект.ВидРасходов = Неопределено;
			Объект.ВидПрочихДоходовИРасходов = Неопределено;
		КонецЕсли;
		
		Если Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов Тогда
			Объект.ПринятиеКНалоговомуУчету = Истина;
		КонецЕсли;
		
		Если Не Объект.ПринятиеКНалоговомуУчету 
			И Объект.ВидРасходов.Пустая()
			И ВидРасходовИспользуется(Объект) Тогда
			Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
		КонецЕсли;
		
		Если НЕ ДоступнаНастройкаВариантаРаспределенияНУ(Объект.ТипРасходов, Объект.ВариантРаспределенияРасходовРегл) Тогда
			Объект.ВариантРаспределенияРасходовНУ = Объект.ВариантРаспределенияРасходовРегл;
			Объект.ПравилоРаспределенияРасходовНУ = Объект.ПравилоРаспределенияРасходовРегл;
		КонецЕсли;
	
		Если Не ЗначениеЗаполнено(Объект.ВариантРаспределенияРасходовНУ) Тогда
			Объект.ВариантРаспределенияРасходовНУ = Объект.ВариантРаспределенияРасходовРегл;
		КонецЕсли;
	
		Объект.КосвенныеЗатратыНУ = 
			Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;

	КонецЕсли;
	
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика плана видов характеристик
//
// Параметры:
//  Объект - ПланВидовХарактеристикОбъект.СтатьиРасходов - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	//++ Локализация
	//-- Локализация
КонецПроцедуры

#КонецОбласти

#Область МетодыМодуляМенеджера

// Дополняет массив блокируемых реквизитов объекта (см. ПланыВидовХарактеристик.СтатьиРасходов.ПолучитьБлокируемыеРеквизитыОбъекта).
//
// Параметры:
// 	БлокируемыеРеквизиты - Массив - Блокируемые реквизиты объекта
// 	БезЭлементовФорм - Булево - Добавлять в массив только реквизиты, без управляющих элементов форм.
//
Процедура ДополнитьБлокируемыеРеквизитыОбъекта(БлокируемыеРеквизиты, БезЭлементовФорм = Ложь) Экспорт
	//++ Локализация
	БлокируемыеРеквизиты.Добавить("ВидАктива");
	БлокируемыеРеквизиты.Добавить("ПринятиеКНалоговомуУчету");
	БлокируемыеРеквизиты.Добавить("ВидРасходов");
	БлокируемыеРеквизиты.Добавить("ВидПрочихДоходовИРасходов");
	БлокируемыеРеквизиты.Добавить("ВидРБП");
	БлокируемыеРеквизиты.Добавить("ПризнаватьРасходамиПриУСН");
	БлокируемыеРеквизиты.Добавить("ВидДеятельностиДляНалоговогоУчетаЗатрат");
	//-- Локализация
КонецПроцедуры

// Дополняет список недоступных для выбора предопределенных статей расходов
//
// Параметры:
// 	ЗаблокированныеСтатьи - Массив Из ПланВидовХарактеристикСсылка.СтатьиРасходов - Ссылки на недоступные статьи расходов 
//
Процедура ДополнитьСписокЗаблокированныхСтатей(ЗаблокированныеСтатьи) Экспорт

КонецПроцедуры

// Заполняет реквизиты параметров настройки счетов учета расходов, которые влияют на настройку,
// 	соответствующими им именам реквизитов аналитики учета.
//
// Параметры:
// 	СоответствиеИмен - Соответствие - ключом выступает имя реквизита, используемое в настройке счетов учета,
// 		значением является соответствующее имя реквизита аналитики учета.
// 
Процедура ЗаполнитьСоответствиеРеквизитовНастройкиСчетовУчета(СоответствиеИмен) Экспорт
	
	//++ Локализация

	//++ НЕ УТ
	СоответствиеИмен.ВидДеятельностиДляНалоговогоУчетаЗатрат = "ВидДеятельностиДляНалоговогоУчетаЗатрат";
	СоответствиеИмен.КосвенныеРасходыНУ = "КосвенныеЗатратыНУ";
	//-- НЕ УТ

	//-- Локализация
	
КонецПроцедуры

Процедура ПриНачальномЗаполненииЭлемента(Элемент) Экспорт
	
	//++ Локализация
	
	//++ НЕ УТ
	Если Элемент.ИмяПредопределенныхДанных = "ТорговыйСбор" Тогда
		Элемент.ПринятиеКНалоговомуУчету = Ложь;
	Иначе
		Элемент.ПринятиеКНалоговомуУчету = Истина;
	КонецЕсли;
	
	// ВидРасходов
	Если ВидРасходовИспользуется(Элемент) Тогда
		Если Элемент.ИмяПредопределенныхДанных = "ВыбытияТоваровВПрошлыхПериодах"
		 ИЛИ Элемент.ИмяПредопределенныхДанных = "СторноПроизводственныхЗатрат" Тогда
			Элемент.ВидРасходов = Перечисления.ВидыРасходовНУ.МатериальныеРасходы;
		
		ИначеЕсли Элемент.ИмяПредопределенныхДанных = "ТорговыйСбор" Тогда
			Элемент.ВидРасходов = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
		Иначе
			Элемент.ВидРасходов = Перечисления.ВидыРасходовНУ.ПрочиеРасходы;
		КонецЕсли;
	Иначе
		Элемент.ВидРасходов = Неопределено;
	КонецЕсли;
	
	// ВидПрочихДоходовИРасходов
	Если ВидПрочихРасходовИспользуется(Элемент) Тогда
		
		Если Элемент.ИмяПредопределенныхДанных = "КурсовыеРазницы" Тогда
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.КурсовыеРазницы;
		
		ИначеЕсли Элемент.ИмяПредопределенныхДанных = "РасходыПриКонвертацииВалюты" Тогда
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
		
		ИначеЕсли Элемент.ИмяПредопределенныхДанных = "ВыбытияТоваровВПрошлыхПериодах" Тогда
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
		
		ИначеЕсли Элемент.ИмяПредопределенныхДанных = "ПрибыльУбытокПрошлыхЛет" Тогда
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрибыльУбытокПрошлыхЛет;
			
		ИначеЕсли Элемент.ИмяПредопределенныхДанных = "ФормированиеРезервовПоСомнительнымДолгам" Тогда
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ОтчисленияВОценочныеРезервы;
			
		Иначе
			Элемент.ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПрочиеВнереализационныеДоходыРасходы;
		КонецЕсли;
	Иначе
		Элемент.ВидПрочихДоходовИРасходов = Неопределено;
	КонецЕсли;
		
	// ВидДеятельностиДляНалоговогоУчетаЗатрат
	Элемент.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
	//-- НЕ УТ
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийФормы

// Вызывается из соответствующего обработчика формы плана видов характеристик
//
// Параметры:
// 	Форма - ФормаКлиентскогоПриложения - Форма плана видов характеристик
//
Процедура ПриЧтенииСозданииНаСервере(Форма) Экспорт
	//++ Локализация
	Объект = Форма.Объект;
	ЗаполнитьСписокВыбораКорСчета(Форма);
	//-- Локализация
	НастройкиСистемыЛокализация.УстановитьВидимостьЭлементовЛокализации(Форма);
КонецПроцедуры

Процедура ВидДеятельностиРасходовПриИзменении(Форма) Экспорт
	//++ Локализация
	ЗаполнитьСписокВыбораКорСчета(Форма);
	//-- Локализация
КонецПроцедуры

Процедура ТипЗначенияПриИзмененииСервер(Форма) Экспорт
	//++ Локализация
	ИзмененныеРеквизиты = Новый СписокЗначений;
	//-- Локализация
КонецПроцедуры

Процедура ВариантРаспределенияРасходовРеглПриИзмененииСервер(Форма) Экспорт
	//++ Локализация
	ИзмененныеРеквизиты = Новый СписокЗначений;
	ЗаполнитьВариантРаздельногоУчетаНДС(ИзмененныеРеквизиты, Форма);
	//++ НЕ УТ
	ЗаполнитьВидДеятельностиДляНалоговогоУчетаЗатрат(ИзмененныеРеквизиты, Форма);
	ЗаполнитьКосвенныеЗатратыНУ(ИзмененныеРеквизиты, Форма);
	ЗаполнитьПризнаватьРасходамиПриУСН(ИзмененныеРеквизиты, Форма);
	ПривестиВидРасходов(ИзмененныеРеквизиты, Форма);
	//-- НЕ УТ

	//-- Локализация
КонецПроцедуры

Процедура ВариантРаспределенияРасходовРеглПриИзменении(Форма) Экспорт
	//++ Локализация
	ВариантРаспределенияРасходовРеглПриИзмененииСервер(Форма);
	УправлениеЭлементамиФормы(Форма);
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика формы объекта
//
// Параметры:
// 	ИмяЭлемента - Строка - Имя элемента управления
// 	Форма - ФормаКлиентскогоПриложения - Форма плана видов характеристик
//
Процедура ПриИзмененииРеквизита(ИмяЭлемента, Форма) Экспорт
	//++ Локализация

	//++ НЕ УТ
	ИзмененныеРеквизиты = Новый СписокЗначений;
	ИзмененныйРеквизит = Форма.Элементы[ИмяЭлемента].ПутьКДанным;
	ИзмененныеРеквизиты.Добавить(СтрЗаменить(ИзмененныйРеквизит, "Объект.", ""));
	ПринятиеКНалоговомуУчетуПриИзменении(ИзмененныеРеквизиты, Форма);
	ВидРасходовПриИзменении(ИзмененныеРеквизиты, Форма);
	ВидДеятельностиДляНалоговогоУчетаЗатратПриИзменении(ИзмененныеРеквизиты, Форма);
	Если ИзмененныеРеквизиты.НайтиПоЗначению("ВариантРаспределенияРасходовНУ") <> Неопределено Тогда
		СтатьиРасходовСервер.УправлениеЭлементамиФормы(Форма);
	Иначе
		УправлениеЭлементамиФормы(Форма);
	КонецЕсли;
	
	Если ИзмененныеРеквизиты.НайтиПоЗначению("ПринятиеКНалоговомуУчету") <> Неопределено Тогда
		ПроверитьСоответствиеПринятияВНДДиНУ(Форма);
	КонецЕсли;
	//-- НЕ УТ
	
	//-- Локализация
КонецПроцедуры

// Вызывается из соответствующего обработчика формы объекта
//
// Параметры:
// 	ИмяКоманды - Строка - Имя команды
// 	Форма - ФормаКлиентскогоПриложения - Форма плана видов характеристик
//
Процедура ВыполнитьКоманду(ИмяКоманды, Форма) Экспорт
	Возврат;
КонецПроцедуры

#КонецОбласти

#Область Прочее

// Дополняет список типов аналитик описанием объектов производства 2.1
//
// Параметры:
// 	СписокТипов - СписокЗначений - Список типов аналитик:
// 		* Значение - Строка - Строковое описание типа (Например, "ДокументСсылка.ЗаказНаПроизводство")
// 		* Представление - Строка - Представление типа для отображения на форме.
//
Процедура ДополнитьСписокТиповАналитикамиПроизводством21(СписокТипов) Экспорт
	//++ Локализация

	//++ НЕ УТКА
	Если ПолучитьФункциональнуюОпцию("ИспользуетсяУправлениеПроизводством21и22") Тогда
		СписокТипов.Добавить("ДокументСсылка.ЗаказНаПроизводство", НСтр("ru = 'Заказ на производство (2.1)';
																		|en = 'Production order (2.1)'"));
	Иначе
		СписокТипов.Добавить("ДокументСсылка.ЗаказНаПроизводство", НСтр("ru = 'Заказ на производство';
																		|en = 'Production order'"));
	КонецЕсли;
	//-- НЕ УТКА

	//-- Локализация
КонецПроцедуры

// Дополняет список типов аналитик описанием учета зарплаты
//
// Параметры:
// 	СписокТипов - СписокЗначений - Список типов аналитик:
// 		* Значение - Строка - Строковое описание типа (Например, "ПеречислениеСсылка.ВидыОперацийПоЗарплате")
// 		* Представление - Строка - Представление типа для отображения на форме.
//
Процедура ДополнитьСписокТиповАналитикамиУчетаЗарплаты(СписокТипов) Экспорт
	//++ Локализация

	//++ НЕ УТ
	СписокТипов.Добавить("ПеречислениеСсылка.ВидыОперацийПоЗарплате", НСтр("ru = 'Виды обязательного страхования';
																			|en = 'Compulsory medical insurance kinds'"));
	//-- НЕ УТ

	//-- Локализация
КонецПроцедуры

//++ НЕ УТ

// Дополняет список выбора типов аналитик расходов для типа расходов "ФормированиеСтоимостиВНА".
//
// Параметры:
// 	СписокВыбора - СписокЗначений - Список типов аналитик:
// 		* Значение - Строка - Строковое описание типа (Например, "ПеречислениеСсылка.ВидыОперацийПоЗарплате")
// 		* Представление - Строка - Представление типа для отображения на форме.
//
Процедура ДополнитьСписокВыбораФормированиеСтоимостиВНА(СписокВыбора) Экспорт
	//++ Локализация
	Если ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") И ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_4") Тогда
		СписокВыбора.Добавить("СправочникСсылка.ОбъектыСтроительства22",НСтр("ru = 'Объекты строительства (2.2)';
																			|en = 'Construction objects (2.2)'"));
		СписокВыбора.Добавить("СправочникСсылка.ОбъектыСтроительства", 	НСтр("ru = 'Объекты строительства (2.4)';
																				|en = 'Construction objects (2.4)'"));
	ИначеЕсли ПолучитьФункциональнуюОпцию("ИспользоватьВнеоборотныеАктивы2_2") Тогда
		СписокВыбора.Добавить("СправочникСсылка.ОбъектыСтроительства22",НСтр("ru = 'Объекты строительства';
																			|en = 'Assets under construction'"));
	КонецЕсли;
	//-- Локализация
КонецПроцедуры
//-- НЕ УТ

#КонецОбласти

#КонецОбласти

//++ Локализация

#Область СлужебныеПроцедурыИФункции

#Область ПриИзмененииРеквизитов

Процедура ЗаполнитьВариантРаздельногоУчетаНДС(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	ВариантРаздельногоУчетаНДС = Неопределено;
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
		ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента;
	//++ НЕ УТ
	ИначеЕсли Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы
		      И Форма.ТипЗначения = "СправочникСсылка.НематериальныеАктивы" Тогда
		ВариантРаздельногоУчетаНДС = Перечисления.ВариантыРаздельногоУчетаНДС.Распределение;
	//-- НЕ УТ
	КонецЕсли;
	
	Если ВариантРаздельногоУчетаНДС <> Неопределено
		 И Объект.ВариантРаздельногоУчетаНДС <> ВариантРаздельногоУчетаНДС Тогда
		Объект.ВариантРаздельногоУчетаНДС = ВариантРаздельногоУчетаНДС;
		ИзмененныеРеквизиты.Добавить("ВариантРаздельногоУчетаНДС");
	КонецЕсли;
	
КонецПроцедуры

//++ НЕ УТ

Процедура ПринятиеКНалоговомуУчетуПриИзменении(ИзмененныеРеквизиты, Форма)
	
	Если ИзмененныеРеквизиты.НайтиПоЗначению("ПринятиеКНалоговомуУчету") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьВидРасходов(ИзмененныеРеквизиты, Форма);
	
КонецПроцедуры

Процедура ВидРасходовПриИзменении(ИзмененныеРеквизиты, Форма)
	
	Если ИзмененныеРеквизиты.НайтиПоЗначению("ВидРасходов") = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	ЗаполнитьПринятиеКНалоговомуУчетуПриИзменении(ИзмененныеРеквизиты, Форма);
	ЗаполнитьКосвенныеЗатратыНУ(ИзмененныеРеквизиты, Форма);
	
КонецПроцедуры

Процедура ВидДеятельностиДляНалоговогоУчетаЗатратПриИзменении(ИзмененныеРеквизиты, Форма)
	
	Если ИзмененныеРеквизиты.НайтиПоЗначению("ВидДеятельностиДляНалоговогоУчетаЗатрат") = Неопределено Тогда
		Возврат;
	КонецЕсли;

	Объект = Форма.Объект;
	Если Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
		Объект.ПризнаватьРасходамиПриУСН = Ложь;
		ИзмененныеРеквизиты.Добавить("ПризнаватьРасходамиПриУСН");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВидДеятельностиДляНалоговогоУчетаЗатрат(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	ВидДеятельностиДляНалоговогоУчетаЗатрат = Неопределено;
	Если НЕ Объект.ПринятиеКНалоговомуУчету 
		ИЛИ Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты Тогда
		ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсновнаяСистемаНалогообложения;
	КонецЕсли;
	
	Если ВидДеятельностиДляНалоговогоУчетаЗатрат <> Неопределено
		 И Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат <> ВидДеятельностиДляНалоговогоУчетаЗатрат Тогда
		Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = ВидДеятельностиДляНалоговогоУчетаЗатрат;
		ИзмененныеРеквизиты.Добавить("ВидДеятельностиДляНалоговогоУчетаЗатрат");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьКосвенныеЗатратыНУ(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	КосвенныеЗатратыНУ = Неопределено;
	НормируемыеРасходы = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
	Если НормируемыеРасходы.Найти(Объект.ВидРасходов) <> Неопределено Тогда
		КосвенныеЗатратыНУ = Истина;
	Иначе
		КосвенныеЗатратыНУ = Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
	КонецЕсли;
	
	Если КосвенныеЗатратыНУ <> Неопределено
		И Объект.КосвенныеЗатратыНУ <> КосвенныеЗатратыНУ Тогда
		Объект.КосвенныеЗатратыНУ = КосвенныеЗатратыНУ;
		ИзмененныеРеквизиты.Добавить("КосвенныеЗатратыНУ");
	КонецЕсли;
	
	Если КосвенныеЗатратыНУ <> Неопределено И КосвенныеЗатратыНУ
		И Объект.ВариантРаспределенияРасходовНУ <> Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности Тогда
		Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности;
		Если Объект.ВариантРаспределенияРасходовРегл <> Объект.ВариантРаспределенияРасходовНУ Тогда
			Форма.ПолныеВозможности = Истина;
		КонецЕсли;
		ИзмененныеРеквизиты.Добавить("ВариантРаспределенияРасходовНУ");
	КонецЕсли;
	
КонецПроцедуры

Процедура ПривестиВидРасходов(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	Если Не (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
			Или Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности) Тогда
		Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.ПустаяСсылка();
	КонецЕсли;
	
	ИзмененныеРеквизиты.Добавить("ВидРасходов");
	
КонецПроцедуры

Процедура ЗаполнитьПризнаватьРасходамиПриУСН(ИзмененныеРеквизиты, Форма)

	Объект = Форма.Объект;
	ПризнаватьРасходамиПриУСН = Неопределено;
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
		Объект.ПризнаватьРасходамиПриУСН = Истина;
	КонецЕсли;
	
	Если ПризнаватьРасходамиПриУСН <> Неопределено
		И Объект.ПризнаватьРасходамиПриУСН <> ПризнаватьРасходамиПриУСН Тогда
		Объект.ПризнаватьРасходамиПриУСН = ПризнаватьРасходамиПриУСН;
		ИзмененныеРеквизиты.Добавить("ПризнаватьРасходамиПриУСН");
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаполнитьВидРасходов(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	ВидРасходов = Неопределено;
	ВидПрочихДоходовИРасходов = Неопределено;
	ВидРБП = Неопределено;
	
	Если Не Объект.ПринятиеКНалоговомуУчету Тогда
		ВидРасходов = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения;
		ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка();
	КонецЕсли;
	Если Объект.ПринятиеКНалоговомуУчету
		И Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения Тогда
		ВидРасходов = Перечисления.ВидыРасходовНУ.ПустаяСсылка();
	КонецЕсли;
	
	Если Не ВидРасходовИспользуется(Форма.Объект) Тогда
		ВидРасходов = Перечисления.ВидыРасходовНУ.ПустаяСсылка();
	КонецЕсли;
	
	Если Не ВидПрочихРасходовИспользуется(Форма.Объект) Тогда
		ВидПрочихДоходовИРасходов = Перечисления.ВидыПрочихДоходовИРасходов.ПустаяСсылка();
	КонецЕсли;
	
	Если Объект.ВариантРаспределенияРасходовРегл <> Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов Тогда
		ВидРБП = Перечисления.ВидыРБП.ПустаяСсылка();
	КонецЕсли;
	
	Если ВидРасходов <> Неопределено
		И ВидРасходов <> Объект.ВидРасходов Тогда
		Объект.ВидРасходов = ВидРасходов;
		ИзмененныеРеквизиты.Добавить("ВидРасходов");
	КонецЕсли;
	
	Если ВидПрочихДоходовИРасходов <> Неопределено
		И ВидПрочихДоходовИРасходов <> Объект.ВидПрочихДоходовИРасходов Тогда
		Объект.ВидПрочихДоходовИРасходов = ВидПрочихДоходовИРасходов;
		ИзмененныеРеквизиты.Добавить("ВидПрочихДоходовИРасходов");
	КонецЕсли;
	
	Если ВидРБП <> Неопределено
		И ВидРасходов <> Объект.ВидРБП Тогда
		Объект.ВидРБП = ВидРБП;
		ИзмененныеРеквизиты.Добавить("ВидРБП");
	КонецЕсли;

КонецПроцедуры

Процедура ЗаполнитьПринятиеКНалоговомуУчетуПриИзменении(ИзмененныеРеквизиты, Форма)
	
	Объект = Форма.Объект;
	ПринятиеКНалоговомуУчету = Неопределено;
	
	Если Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.НеУчитываемыеВЦеляхНалогообложения Тогда
		ПринятиеКНалоговомуУчету = Ложь;
	КонецЕсли;
	
	Если ПринятиеКНалоговомуУчету <> Неопределено
		И ПринятиеКНалоговомуУчету <> Объект.ПринятиеКНалоговомуУчету Тогда
		Объект.ПринятиеКНалоговомуУчету = ПринятиеКНалоговомуУчету;
		ИзмененныеРеквизиты.Добавить("ПринятиеКНалоговомуУчету");
	КонецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#Область НастройкаСчетовРеглУчета

Процедура ЗаполнитьСписокВыбораКорСчета(Форма)
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	СписокВыбора = Элементы.КорреспондирующийСчет.СписокВыбора;
	СписокВыбора.Очистить();
	
	Если Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность
		 ИЛИ Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность Тогда
		СписокВыбора.Добавить("20", НСтр("ru = 'Основное производство (20)';
										|en = 'Main production (20)'"));
		СписокВыбора.Добавить("23", НСтр("ru = 'Вспомогательные производства (23)';
										|en = 'Auxiliary production (23)'"));
		СписокВыбора.Добавить("25", НСтр("ru = 'Общепроизводственные расходы (25)';
										|en = 'Production expenses (25)'"));
		СписокВыбора.Добавить("26", НСтр("ru = 'Общехозяйственные расходы (26)';
										|en = 'Business expenses (26)'"));
		СписокВыбора.Добавить("44.01", НСтр("ru = 'Издержки обращения (44.01)';
											|en = 'Support request costs (44.01)'"));
		СписокВыбора.Добавить("44.02", НСтр("ru = 'Коммерческие расходы (44.02)';
											|en = 'Selling expenses (44.02)'"));
	КонецЕсли;
	Если Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность
		 ИЛИ Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность Тогда
		СписокВыбора.Добавить("91.02", НСтр("ru = 'Прочие расходы (91.02)';
											|en = 'Other expenses (91.02)'"));
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура УправлениеЭлементамиФормы(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ВариантРаспределенияРегл = Объект.ВариантРаспределенияРасходовРегл;
	ВариантРаспределенияНУ = Объект.ВариантРаспределенияРасходовНУ;
	НаПрочиеАктивы = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаПрочиеАктивы);
	НаВнеоборотныеАктивы = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
	НаСебестоимостьТоваровРегл = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	НаНаправленияДеятельностиРегл = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НаРасходыБудущихПериодовРегл = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	НаРасходыБудущихПериодовНУ = (ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	НаПроизводственныеЗатратыРегл = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	НаПроизводственныеЗатратыНУ = (ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	НеРаспределятьРегл = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	
	Если Форма.ПолныеВозможности Тогда
		ВидимостьДоступностьНастроекРаспределения(Форма);
	Иначе
		// Косвенные затраты в упрощенном режиме просмотра 
		Элементы.ЛокализацияГруппаИндикаторКосвенныхЗатрат.Видимость = Ложь;
	КонецЕсли;
	
	//++ НЕ УТ	
	
	НастройкиРегл = ПолучитьНастройкиРегл(Объект);
	
	ОсновнаяДеятельность = НЕ НастройкиРегл.ВсеНаРасходыБудущихПериодов;
	ПрочаяДеятельность = НастройкиРегл.НаФинансовыйРезультат ИЛИ НастройкиРегл.НеРаспределять
							ИЛИ НастройкиРегл.НаОбъектыВозникновенияЗатрат;
	
	Элементы.ЛокализацияГруппаВидДеятельностиРасходов.Видимость = ОсновнаяДеятельность;
	Элементы.ВидДеятельностиРасходовПрочаяДеятельность.Доступность = ПрочаяДеятельность;
	Элементы.ВидДеятельностиРасходовОсновнаяИПрочаяДеятельность.Видимость = Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность;
	
	Элементы.ГруппаВидовРасходовОсновнаяДеятельность.Видимость = ОсновнаяДеятельность И Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность;
	Элементы.ГруппаВидовРасходовОсновнаяДеятельность.Доступность = НастройкиРегл.ПринимаетсяКНУ;
	Элементы.ГруппаВидовРасходовПрочаяДеятельность.Видимость = ПрочаяДеятельность И Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность;
	
	Элементы.ГиперссылкаПрямыеКосвенные.Видимость = НастройкиРегл.ПринимаетсяКНУ;

	Элементы.ГруппаВидДеятельностиДляНалоговогоУчетаЗатрат.Видимость = НастройкиРегл.ИспользуетсяЕНВД И (НастройкиРегл.НаФинансовыйРезультат ИЛИ НастройкиРегл.НеРаспределять);

	Элементы.ГруппаРБП.Видимость = НастройкиРегл.ПринимаетсяКНУ И НастройкиРегл.НаРасходыБудущихПериодов;

	Элементы.ПризнаватьРасходамиПриУСН.Видимость = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходыМинусРасходы") И НЕ Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы;

	Если Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения Тогда
		Элементы.ПризнаватьРасходамиПриУСН.Доступность = Ложь;
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка = 
			НСтр("ru = 'Расходы, относящиеся только к деятельности облагаемой ЕНВД, не могут быть признаны для целей УСН.';
				|en = 'Expenses related only to the activity subject to UTII cannot be recognized for STS purposes.'");
	ИначеЕсли Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров Тогда
		Элементы.ПризнаватьРасходамиПриУСН.Доступность = Ложь;
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка = 
			НСтр("ru = 'Расходы, распределяющиеся на себестоимость товаров, всегда признаются для целей УСН.';
				|en = 'Expenses allocated to goods cost are always recognized for STS purposes.'");
	Иначе
		Элементы.ПризнаватьРасходамиПриУСН.Доступность = Истина;
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка =
			НСтр("ru = 'Определяет, должен ли заноситься расход в Книгу учета доходов и расходов для целей УСН при объекте налогообложения ""Доходы минус расходы"".';
				|en = 'Determines whether the expense should be recorded in the Ledger of income and expenditure for STS purposes for the ""Income minus expenses"" taxation object.'");
	КонецЕсли;
	
	// Настройки по НДС
	ЭлементСпискаВыбора = Элементы.ВариантРаздельногоУчетаНДСНаНаправленияДеятельности.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента);
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
	 ИЛИ Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты Тогда
		ЭлементСпискаВыбора.Представление = НСтр("ru = 'Определяется учетной политикой организации';
												|en = 'Determined by company accounting policy'");
	Иначе
		ЭлементСпискаВыбора.Представление = НСтр("ru = 'НДС относится на вид налогообложения документа закупки';
												|en = 'VAT is classified as taxation kind of purchase document'");
	КонецЕсли;
	ЭлементСпискаВыбора = Элементы.ВариантРаздельногоУчетаНДС_ОС.СписокВыбора.НайтиПоЗначению(Перечисления.ВариантыРаздельногоУчетаНДС.ИзДокумента);
	Если Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты
	 ИЛИ Объект.ВариантРаспределенияРасходовУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты Тогда
		ЭлементСпискаВыбора.Представление = НСтр("ru = 'Определяется учетной политикой организации';
												|en = 'Determined by company accounting policy'");
	Иначе
		ЭлементСпискаВыбора.Представление = НСтр("ru = 'НДС относится на вид налогообложения документа закупки';
												|en = 'VAT is classified as taxation kind of purchase document'");
	КонецЕсли;
	
	ИспользуетсяВидРасходов = ВидРасходовИспользуется(Объект);
	ИспользуетсяВидПрочихРасходов = ВидПрочихРасходовИспользуется(Объект);
	Элементы.ВидРасходов.Видимость = ИспользуетсяВидРасходов;
	Элементы.ВидПрочихРасходов.Видимость = ИспользуетсяВидПрочихРасходов;
	
	Элементы.ВидРасходов.Доступность                        = Объект.ПринятиеКНалоговомуУчету;
	
	ВедетсяУчетПоНДД = РасчетСебестоимостиЛокализация.ПолучитьФункциональнуюОпциюУчетПоНДД();
	Элементы.ПризнаютсяВРасходахНДД.Видимость				= ВедетсяУчетПоНДД;
	Элементы.ПризнаютсяВРасходахНДД.Доступность				= Объект.ПринятиеКНалоговомуУчету;
	
	Элементы.ГруппаРБП.Видимость                            = НаРасходыБудущихПериодовРегл ИЛИ НаРасходыБудущихПериодовНУ;
	Элементы.ВидАктиваРБП.Видимость                         = НаРасходыБудущихПериодовРегл;
	Элементы.ВидРБП.Видимость                               = НаРасходыБудущихПериодовНУ;
	Элементы.ВидРБП.Доступность                             = Объект.ПринятиеКНалоговомуУчету;

	Элементы.ГиперссылкаПрямыеКосвенные.Видимость   = НаПроизводственныеЗатратыРегл;
	Если Элементы.ГиперссылкаПрямыеКосвенные.Видимость Тогда
		Элементы.ГиперссылкаПрямыеКосвенные.Доступность = Объект.ПринятиеКНалоговомуУчету;
	КонецЕсли;
	
	ДоступенВариантРаспределенияРасходовНУ = Истина;
	Если ИспользуетсяВидРасходов И ЗначениеЗаполнено(Объект.ВидРасходов) Тогда
		НормируемыеРасходы = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
		Если НормируемыеРасходы.Найти(Объект.ВидРасходов) <> Неопределено Тогда
			ДоступенВариантРаспределенияРасходовНУ = Ложь;
		КонецЕсли;
	КонецЕсли;
	Элементы.ВариантРаспределенияРасходовНУПолные.Доступность = ДоступенВариантРаспределенияРасходовНУ;
	
	ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД") ИЛИ УчетнаяПолитикаПереопределяемый.ИспользуетсяПСН();
	РасходыПоЕНВД = (Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.ОсобыйПорядокНалогообложения);
	РасходыПоОСНОиЕНВД = (Объект.ВидДеятельностиДляНалоговогоУчетаЗатрат = Перечисления.ВидыДеятельностиДляНалоговогоУчетаЗатрат.РаспределяемыеЗатраты);
	Элементы.ГруппаВидДеятельностиДляНалоговогоУчетаЗатрат.Видимость =
			(НаПроизводственныеЗатратыРегл ИЛИ  НаНаправленияДеятельностиРегл ИЛИ НеРаспределятьРегл) 
			И (ИспользуетсяЕНВД ИЛИ РасходыПоЕНВД ИЛИ РасходыПоОСНОиЕНВД);
	Элементы.ВидДеятельностиДляНалоговогоУчетаЗатратЕНВД.Видимость = ИспользуетсяЕНВД;
	Элементы.ВидДеятельностиДляНалоговогоУчетаЗатратОСНОиЕНВД.Видимость = ИспользуетсяЕНВД И НаНаправленияДеятельностиРегл;
	Элементы.ВидДеятельностиДляНалоговогоУчетаЗатратОСНО.Доступность = Объект.ПринятиеКНалоговомуУчету;
	Элементы.ВидДеятельностиДляНалоговогоУчетаЗатратЕНВД.Доступность = Объект.ПринятиеКНалоговомуУчету;
	Элементы.ВидДеятельностиДляНалоговогоУчетаЗатратОСНОиЕНВД.Доступность = Объект.ПринятиеКНалоговомуУчету;
	
	Элементы.ПризнаватьРасходамиПриУСН.Видимость = ПолучитьФункциональнуюОпцию("ПрименяетсяУСНДоходыМинусРасходы") И НЕ НаВнеоборотныеАктивы;
	Элементы.ПризнаватьРасходамиПриУСН.Доступность = Не РасходыПоЕНВД И Не НаСебестоимостьТоваровРегл;
	Если РасходыПоЕНВД Тогда
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка = 
			НСтр("ru = 'Расходы, не относящиеся к основной деятельности, не могут быть признаны для целей УСН.';
				|en = 'Expenses not related to main activity cannot be recognized for STS purposes.'");
	ИначеЕсли НаСебестоимостьТоваровРегл Тогда
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка = 
			НСтр("ru = 'Расходы, распределяющиеся на себестоимость товаров, всегда признаются для целей УСН.';
				|en = 'Expenses allocated to goods cost are always recognized for STS purposes.'");
	Иначе
		Элементы.ПризнаватьРасходамиПриУСН.Подсказка =
			НСтр("ru = 'Определяет, должен ли заноситься расход в Книгу учета доходов и расходов для целей УСН при объекте налогообложения ""Доходы минус расходы"".';
				|en = 'Determines whether the expense should be recorded in the Ledger of income and expenditure for STS purposes for the ""Income minus expenses"" taxation object.'");
	КонецЕсли;
	
	Элементы.ПринятиеКНалоговомуУчетуПоПрочимРасходам.Заголовок = ?(НаРасходыБудущихПериодовНУ,
		НСтр("ru = 'РБП всегда принимаются к налоговому учету по налогу на прибыль';
			|en = 'Deferred expenses are always recorded in income tax accounting'"),
		НСтр("ru = 'Принимаются к налоговому учету по налогу на прибыль';
			|en = 'Recorded in income tax accounting'"));
	Элементы.ПринятиеКНалоговомуУчетуПоПрочимРасходам.Доступность = Не НаРасходыБудущихПериодовНУ ИЛИ Не Объект.ПринятиеКНалоговомуУчету;
	//-- НЕ УТ
	
КонецПроцедуры

Функция ДоступнаНастройкаВариантаРаспределенияНУ(ТипРасходов, ВариантРаспределенияРасходовРегл)
	Возврат ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.Производственные")
			ИЛИ ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ПрочиеРасходы")
			ИЛИ ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ПроизводствоПродукции")
			ИЛИ ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ВозникновениеЗатратНаОбъектах")
			ИЛИ ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ФормированиеСтоимостиВНА")
			ИЛИ ВариантРаспределенияРасходовРегл = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров")
			ИЛИ ВариантРаспределенияРасходовРегл = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности")
				И (ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.ЗакупкаТоваров")
					ИЛИ ТипРасходов = ПредопределенноеЗначение("Перечисление.ТипыРасходов.СкладскоеХранение"));
					
КонецФункции

Процедура ВидимостьДоступностьНастроекРаспределения(Форма) Экспорт
	
	Элементы = Форма.Элементы;
	Объект = Форма.Объект;
	
	ДоступнаНастройкаВариантаРаспределенияНУ = ДоступнаНастройкаВариантаРаспределенияНУ(Объект.ТипРасходов, Объект.ВариантРаспределенияРасходовРегл);
	Элементы.ВариантРаспределенияРасходовНУПолные.Доступность = ДоступнаНастройкаВариантаРаспределенияНУ;

	Элементы.ПравилоРаспределенияРасходовНУПолные.Видимость = 
		Перечисления.ВариантыРаспределенияРасходов.ВариантИспользуетПравилоРаспределенияНУ(Объект.ВариантРаспределенияРасходовНУ)
		И (НЕ Объект.ВариантРаспределенияРасходовРегл = Объект.ВариантРаспределенияРасходовНУ
			ИЛИ Объект.ВариантРаспределенияРасходовНУ = ПредопределенноеЗначение("Перечисление.ВариантыРаспределенияРасходов.НаНаправленияДеятельности"));

	Элементы.НадписьНеТребуетРаспределенияНУ.Видимость = 
		НЕ Объект.ВариантРаспределенияРасходовНУ.Пустая() 
			И Перечисления.ВариантыРаспределенияРасходов.ВариантБезРаспределенияНУ(Объект.ВариантРаспределенияРасходовНУ);
			
	Элементы.НадписьПравилоРаспределенияНУКакРегл.Видимость = 
		НЕ Объект.ВариантРаспределенияРасходовНУ.Пустая()
		И Объект.ВариантРаспределенияРасходовНУ = Объект.ВариантРаспределенияРасходовРегл
		И НЕ Перечисления.ВариантыРаспределенияРасходов.ВариантБезРаспределенияНУ(Объект.ВариантРаспределенияРасходовНУ)
		И Перечисления.ВариантыРаспределенияРасходов.ВариантИспользуетПравилоРаспределенияНУ(Объект.ВариантРаспределенияРасходовНУ)
		И ДоступнаНастройкаВариантаРаспределенияНУ;

	Элементы.ЛокализацияГруппаПолныеНастройкиНУ.Видимость = 
		ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");

КонецПроцедуры

//++ НЕ УТ

Процедура ПривестиВариантыИПравилаКНастройкамРегл(Объект) Экспорт
	Объект.ВариантРаспределенияРасходовНУ = Объект.ВариантРаспределенияРасходовРегл; 
	Объект.ПравилоРаспределенияРасходовНУ = Объект.ПравилоРаспределенияРасходовРегл;
	
	Если Объект.ВариантРаспределенияРасходовНУ <> Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности
		И ЗначениеЗаполнено(Объект.ВидРасходов)
	Тогда
		НормируемыеРасходы = Перечисления.ВидыРасходовНУ.НормируемыеРасходы();
		Если НормируемыеРасходы.Найти(Объект.ВидРасходов) <> Неопределено Тогда
			Объект.ВидРасходов = Перечисления.ВидыРасходовНУ.ПустаяСсылка();
		КонецЕсли;
	КонецЕсли;
	
КонецПроцедуры

Функция ПолучитьНастройкиРегл(Объект)
	
	НастройкиРегл = Новый Структура("ИспользоватьРеглУчет,ИспользуетсяЕНВД,УпрУчетНаСчетахРегл,ПринимаетсяКНУ,НаВнеоборотныеАктивы,НаФинансовыйРезультат,НаСебестоимостьТоваров,НаРасходыБудущихПериодов,НаСебестоимостьПроизводства,НаПроизводственныеЗатраты,НаОбъектыВозникновенияЗатрат,НеРаспределять,ВсеНаРасходыБудущихПериодов");
	
	НастройкиРегл.ИспользоватьРеглУчет = ПолучитьФункциональнуюОпцию("ИспользоватьРеглУчет");
	НастройкиРегл.ИспользуетсяЕНВД = ПолучитьФункциональнуюОпцию("ИспользуетсяЕНВД");
	НастройкиРегл.УпрУчетНаСчетахРегл = ПолучитьФункциональнуюОпцию("ВестиУУНаПланеСчетовХозрасчетный");

	НастройкиРегл.ПринимаетсяКНУ = Объект.ПринятиеКНалоговомуУчету;
	
	ВариантРаспределенияРегл = Объект.ВариантРаспределенияРасходовРегл;
	ВариантРаспределенияНУ = Объект.ВариантРаспределенияРасходовНУ;
	
	НастройкиРегл.НаВнеоборотныеАктивы = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
	НастройкиРегл.НаФинансовыйРезультат = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НастройкиРегл.НаСебестоимостьТоваров = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
	НастройкиРегл.НаРасходыБудущихПериодов = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	НастройкиРегл.ВсеНаРасходыБудущихПериодов = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов И ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
	НастройкиРегл.НаСебестоимостьПроизводства = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства);
	НастройкиРегл.НаПроизводственныеЗатраты = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	НастройкиРегл.НаОбъектыВозникновенияЗатрат = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат);
	НастройкиРегл.НеРаспределять = (ВариантРаспределенияРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять ИЛИ ВариантРаспределенияНУ = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	
	Если НастройкиРегл.УпрУчетНаСчетахРегл Тогда
		
		ВариантРаспределенияУпр = Объект.ВариантРаспределенияРасходовУпр;
			
		НастройкиРегл.НаВнеоборотныеАктивы = НастройкиРегл.НаВнеоборотныеАктивы ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
		НастройкиРегл.НаФинансовыйРезультат = НастройкиРегл.НаФинансовыйРезультат ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
		НастройкиРегл.НаСебестоимостьТоваров = НастройкиРегл.НаСебестоимостьТоваров ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьТоваров);
		НастройкиРегл.НаРасходыБудущихПериодов = НастройкиРегл.НаРасходыБудущихПериодов ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
		НастройкиРегл.ВсеНаРасходыБудущихПериодов = НастройкиРегл.ВсеНаРасходыБудущихПериодов И (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаРасходыБудущихПериодов);
		НастройкиРегл.НаСебестоимостьПроизводства = НастройкиРегл.НаСебестоимостьПроизводства ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства);
		НастройкиРегл.НаПроизводственныеЗатраты = НастройкиРегл.НаПроизводственныеЗатраты ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
		НастройкиРегл.НаОбъектыВозникновенияЗатрат = НастройкиРегл.НаОбъектыВозникновенияЗатрат ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат);
		НастройкиРегл.НеРаспределять = НастройкиРегл.НеРаспределять ИЛИ (ВариантРаспределенияУпр = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
		
	КонецЕсли;
	
	Возврат НастройкиРегл;
	
КонецФункции

Функция ВидРасходовИспользуется(Объект)

	НаВнеоборотныеАктивы = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
	НаНаправленияДеятельности = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НеРаспределять = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	НаПроизводственныеЗатраты = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	НаСебестоимостьПроизводства = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства);
	НаОВЗ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат);
	
	РасходыПоОсновнойДеятельности = (Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяДеятельность);
	РасходыПоОсновнойИПрочейДеятельности = (Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность);
	
	Используется =	(НаНаправленияДеятельности ИЛИ НеРаспределять ИЛИ НаПроизводственныеЗатраты ИЛИ НаВнеоборотныеАктивы 
						ИЛИ НаСебестоимостьПроизводства ИЛИ НаОВЗ)
					И (РасходыПоОсновнойДеятельности ИЛИ РасходыПоОсновнойИПрочейДеятельности);
	
	НаВнеоборотныеАктивыНУ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаВнеоборотныеАктивы);
	НаНаправленияДеятельностиНУ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НеРаспределятьНУ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	НаПроизводственныеЗатратыНУ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаПроизводственныеЗатраты);
	НаСебестоимостьПроизводстваНУ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаСебестоимостьПроизводства);
	
	Используется = Используется ИЛИ 
		(НаНаправленияДеятельностиНУ ИЛИ НеРаспределятьНУ ИЛИ НаПроизводственныеЗатратыНУ ИЛИ НаВнеоборотныеАктивыНУ ИЛИ НаСебестоимостьПроизводстваНУ)
		И (РасходыПоОсновнойДеятельности ИЛИ РасходыПоОсновнойИПрочейДеятельности);
	
	Возврат Используется
	
КонецФункции

Функция ВидПрочихРасходовИспользуется(Объект)
	
	НаНаправленияДеятельности = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НеРаспределять = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	НаОВЗ = (Объект.ВариантРаспределенияРасходовРегл = Перечисления.ВариантыРаспределенияРасходов.НаОбъектыВозникновенияЗатрат);
	
	РасходыПоПрочейДеятельности = (Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ПрочаяДеятельность);
	РасходыПоОсновнойИПрочейДеятельности = (Объект.ВидДеятельностиРасходов = Перечисления.ВидыДеятельностиРасходов.ОсновнаяИПрочаяДеятельность);
	
	Используется = (НаНаправленияДеятельности ИЛИ НеРаспределять ИЛИ НаОВЗ)
		И (РасходыПоПрочейДеятельности ИЛИ РасходыПоОсновнойИПрочейДеятельности);
			
	НаНаправленияДеятельностиНУ = (Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НаНаправленияДеятельности);
	НеРаспределятьНУ = (Объект.ВариантРаспределенияРасходовНУ = Перечисления.ВариантыРаспределенияРасходов.НеРаспределять);
	
	Используется = Используется ИЛИ (НаНаправленияДеятельностиНУ ИЛИ НеРаспределятьНУ) 
		И (РасходыПоПрочейДеятельности ИЛИ РасходыПоОсновнойИПрочейДеятельности);
	
	Возврат Используется
	
КонецФункции

Процедура ПроверитьСоответствиеПринятияВНДДиНУ(Форма)
	
	Объект = Форма.Объект;
	
	Если НЕ Объект.ПринятиеКНалоговомуУчету Тогда
		Объект.ПризнаютсяВРасходахНДД = Ложь;
	КОнецЕсли;
	
КонецПроцедуры

//-- НЕ УТ

#КонецОбласти

#КонецОбласти

//-- Локализация
