////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Ввод остатков внеоборотных активов".
// 
////////////////////////////////////////////////////////////////////////////////

#Область СлужебныеПроцедурыИФункции

#Область ФормаРедактированияСтрокиОС

Процедура ФормаРедактированияСтрокиОС_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	ВспомогательныеРеквизиты = Форма.ВспомогательныеРеквизиты;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ПараметрыВводаОстатковОС = ВнеоборотныеАктивыКлиентСервер.ПараметрыВводаОстатковОС(Форма, ВспомогательныеРеквизиты);
	
	СтоимостьБУДоступна = (Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету")
							И Форма.ОтражатьВРеглУчете);
							
	АмортизацияДоступна = ПараметрыВводаОстатковОС.АмортизацияБУДоступна 
			И Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
							
	#Область СтраницаУчет
	
	Если ОбновитьВсе Тогда
		
		Если ВспомогательныеРеквизиты.ДоступенУчетНУ 
			И НЕ ВспомогательныеРеквизиты.ДоступенУчетУУ 
			И НЕ ВспомогательныеРеквизиты.ДоступенУчетБУ Тогда
				
			Элементы.ДатаПринятияКУчетуНУ.Заголовок = НСтр("ru = 'Принят к учету';
															|en = 'Recognized'");
			Элементы.ПорядокУчетаНУ.Заголовок = НСтр("ru = 'Порядок учета';
													|en = 'Accounting procedure'");
			Элементы.ГруппаПорядокУчета.ОтображатьЗаголовок = Ложь;
		КонецЕсли;
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			Форма.ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль,
			ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации"),,
			0);
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора,
			Форма.ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы,
			ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключитьВСоставАмортизируемогоИмущества"),,
			0);
			
		Если Элементы.ПорядокУчетаНУ.СписокВыбора.НайтиПоЗначению(Форма.ПорядокУчетаНУ) = Неопределено Тогда
			Форма.ПорядокУчетаНУ = Элементы.ПорядокУчетаНУ.СписокВыбора.Получить(0).Значение;
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Форма.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
		
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
	
		ЗначениеВидно = Форма.ВспомогательныеРеквизиты.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета;
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.АмортизацияНачислена");
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			3);
			
		//	
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена");
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаНУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ ОбновитьВсе Тогда
		
		ПроверяемоеЗначение = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету");
		
		ЗначениеВидно = (Форма.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ПроизводственныйИХозяйственныйИнвентарь")
							ИЛИ Форма.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислитьАмортизациюПриПринятииКУчету"));
		
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.ПорядокУчетаУУ.СписокВыбора, 
			ЗначениеВидно, 
			ПроверяемоеЗначение,, 
			1);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаСтоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Форма.ПрименениеЦелевогоФинансирования 
			И Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц
			И СтоимостьБУДоступна;
			
		Элементы.ТекущаяСтоимостьВРЦФ.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
	
		ЗначениеСвойства = 
			Форма.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВБУ 
			И Форма.ПлательщикНалогаНаПрибыль
			И Форма.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		Элементы.НакопленнаяАмортизацияВРЦФ.Видимость = ЗначениеСвойства;
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна Тогда
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			
		Иначе
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") 
			И Форма.ОтражатьВРеглУчете Тогда
			Если ПараметрыВводаОстатковОС.АмортизацияУУДоступна Тогда
				Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация и износ';
																		|en = 'Accumulated depreciation and wear'");
			Иначе
				Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленный износ';
																		|en = 'Accumulated depreciation'");
			КонецЕсли; 
		Иначе
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация';
																	|en = 'Accumulated depreciation'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		ВидимостьЭлементов =
			Форма.ОтражатьВРеглУчете 
			И (АмортизацияДоступна
				ИЛИ ПараметрыВводаОстатковОС.АмортизацияУУДоступна);
		
		Элементы.ОстаточнаяСтоимостьВР.Видимость = ВидимостьЭлементов И Форма.ВедетсяУчетПостоянныхИВременныхРазниц;
		Элементы.ОстаточнаяСтоимостьПР.Видимость = ВидимостьЭлементов И Форма.ВедетсяУчетПостоянныхИВременныхРазниц;
		Элементы.ОстаточнаяСтоимостьНУ.Видимость = ВидимостьЭлементов;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		Элементы.ОстаточнаяСтоимостьУУ.Видимость = ПараметрыВводаОстатковОС.АмортизацияУУДоступна;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ВидимостьЭлементов = Элементы.КорректировкаСтоимостиАрендованногоИмуществаНУ.Видимость;
		
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаБУ.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаПР.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаВР.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаУУ.Видимость = ВидимостьЭлементов;
		Элементы.КорректировкаСтоимостиАрендованногоИмуществаБУЗаголовок.Видимость = ВидимостьЭлементов;
		
	КонецЕсли;
		
	Элементы.ДекорацияЗаголовокБУ.Видимость = Элементы.ТекущаяСтоимостьБУ.Видимость;
	
	//
	Элементы.ОстаточнаяСтоимостьБУ.Видимость = Элементы.НакопленнаяАмортизацияБУ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУ.Видимость = Элементы.НакопленнаяАмортизацияНУ.Видимость;
	Элементы.ОстаточнаяСтоимостьПР.Видимость = Элементы.НакопленнаяАмортизацияПР.Видимость;
	Элементы.ОстаточнаяСтоимостьВР.Видимость = Элементы.НакопленнаяАмортизацияВР.Видимость;
	Элементы.ОстаточнаяСтоимостьУУ.Видимость = Элементы.НакопленнаяАмортизацияУУ.Видимость;
	
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Видимость = 
		Элементы.ОстаточнаяСтоимостьБУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьНУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьПР.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьВР.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьУУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость = Элементы.НакопленнаяАмортизацияНУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьПРЦФ.Видимость = Элементы.НакопленнаяАмортизацияПРЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьВРЦФ.Видимость = Элементы.НакопленнаяАмортизацияВРЦФ.Видимость;
	
	//
	Элементы.ТекущаяСтоимостьУУЦФ.Видимость = 
		Элементы.ТекущаяСтоимостьУУ.Видимость
		И Элементы.ТекущаяСтоимостьБУЦФ.Видимость;

	Элементы.НакопленнаяАмортизацияУУЦФ.Видимость = 
		Элементы.ТекущаяСтоимостьУУ.Видимость
		И Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;

	Элементы.ОстаточнаяСтоимостьУУЦФ.Видимость = 
		Элементы.ТекущаяСтоимостьУУ.Видимость
		И Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость;

	//
	Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Видимость = 
		Элементы.ТекущаяСтоимостьВРЦФ.Видимость
		ИЛИ Элементы.ТекущаяСтоимостьПРЦФ.Видимость
		ИЛИ Элементы.ТекущаяСтоимостьНУЦФ.Видимость
		ИЛИ Элементы.ТекущаяСтоимостьБУЦФ.Видимость;
	
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Видимость = 
		Элементы.НакопленнаяАмортизацияВРЦФ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияПРЦФ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияНУЦФ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
		
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовокЦФ.Видимость = 
		Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьПРЦФ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьВРЦФ.Видимость;
		
	#КонецОбласти
	
	#Область СтраницаСобытия
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ Тогда
			ЗаголовокГруппы = НСтр("ru = 'Модернизация (бухгалтерский и налоговый учет)';
									|en = 'Renovation (bookkeeping and tax accounting)'");
		Иначе
			ЗаголовокГруппы = НСтр("ru = 'Модернизация (бухгалтерский учет)';
									|en = 'Renovation (bookkeeping)'");
		КонецЕсли; 
		Элементы.ГруппаПоследняяМодернизацияРегл.Заголовок = ЗаголовокГруппы;
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтраницаАмортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Форма.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьРезервПереоценкиРегл") 
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ЕстьИзменениеПараметровАмортизацииБУ И Форма.ЕстьРезервПереоценкиРегл Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru = 'Целевые средства в остаточной стоимость на дату последней модернизации и переоценки.';
																			|en = 'Targeted funds in the depreciation value at the date of last modernisation and reevaluation.'");
		ИначеЕсли Форма.ЕстьИзменениеПараметровАмортизацииБУ Тогда
			Элементы.СтоимостьДляВычисленияАмортизацииЦФ.Подсказка = НСтр("ru = 'Целевые средства в остаточной стоимость на дату последней модернизации.';
																			|en = 'Target funds in the depreciation value at the date of last modernization.'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ОтражатьВРеглУчете
			И Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") Тогда
			Если Форма.ОтражатьВУпрУчете 
				И Форма.ПорядокУчетаУУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию") Тогда
				Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Амортизация и износ';
																|en = 'Depreciation and wear'");
			Иначе
				Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Износ';
																|en = 'Wear '");
			КонецЕсли; 
		Иначе	
			Элементы.СтраницаАмортизация.Заголовок = НСтр("ru = 'Амортизация';
															|en = 'Depreciation'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеВидно = НЕ Форма.ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоСуммеЧиселЛетИспользования"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ"));
			
		ВнеоборотныеАктивыКлиентСервер.УстановитьВидимостьЗначенияСпискаВыбора(
			Элементы.МетодНачисленияАмортизацииБУ.СписокВыбора, 
			ЗначениеВидно, 
			ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"));
			
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		Если Форма.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета 
			И Форма.УпрУчетПоДаннымБУ
			И Форма.ОтражатьВУпрУчете Тогда
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru = 'Остаточный срок';
															|en = 'Residual period'");
			Элементы.СрокИспользованияУУ.Подсказка = НСтр("ru = 'Остаточный срок на дату перехода';
															|en = 'Residual lifetime on the date of transfer'");
			Элементы.СрокИспользованияУУ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Видимость = 
		Элементы.НакопленнаяАмортизацияУУ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияБУ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияНУ.Видимость;
		
	Элементы.ДекорацияКоэффициентАмортизацииБУПроцент.Видимость = Элементы.КоэффициентАмортизацииБУ.Видимость;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковОС.СтатьяРасходовНУОбязательна 
			ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовНУ) Тогда
			
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = "";
			
		Иначе
			
			ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
										|en = 'matches accounting'");
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			
		КонецЕсли; 
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		Элементы.СтраницаОтражениеРасходов.Заголовок = 
			?(Форма.ПрименениеЦелевогоФинансирования, 
				НСтр("ru = 'Отражение доходов и расходов';
					|en = 'Record income and expenses'"), 
				НСтр("ru = 'Отражение расходов';
					|en = 'Expense parameters'"));
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиОС_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация
	
	ТребуетсяПересчитатьЗависимыеСуммы = 
		СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ");
		
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиОС_ПриИзмененииРеквизитов(Форма, СписокРеквизитов) Экспорт

	//++ Локализация
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ДатаПринятияКУчетуБУ") <> Неопределено Тогда
		Если Форма.ОтражатьВНУ 
			И Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуБУ = Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуНУ Тогда
			Форма.ДатаПринятияКУчетуНУ = Форма.ДатаПринятияКУчетуБУ;
			СписокРеквизитов.Добавить("ДатаПринятияКУчетуНУ");
		КонецЕсли; 
	КонецЕсли;

	Если СписокРеквизитов.Найти("ПорядокУчетаНУ") <> Неопределено Тогда
		
		Если Форма.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации") Тогда
			
			Форма.НачислятьАмортизациюНУ = Ложь;
			Форма.СтатьяРасходовАмортизационнойПремии = Неопределено;
			Форма.АналитикаРасходовАмортизационнойПремии = Неопределено;
			Форма.ВключитьАмортизационнуюПремиюВСоставРасходов = Ложь;
			Форма.СуммаКапитальныхВложенийВключаемыхВРасходыНУ = 0;
			
			СписокРеквизитов.Добавить("НачислятьАмортизациюНУ");
			
		КонецЕсли;
		
		Если Форма.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")  Тогда
			Форма.НакопленнаяАмортизацияНУ = 0;
		КонецЕсли;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	//++ Локализация
	
	МножительЦФ = ?(Форма.ПрименениеЦелевогоФинансирования, 1, 0);
	
	Если Не Форма.ПервоначальнаяСтоимостьОтличается Тогда
		
		Форма.ПервоначальнаяСтоимостьНУ = Форма.ТекущаяСтоимостьНУ + Форма.ТекущаяСтоимостьНУЦФ * МножительЦФ;
		Форма.ПервоначальнаяСтоимостьПР = Форма.ТекущаяСтоимостьПР + Форма.ТекущаяСтоимостьПРЦФ * МножительЦФ;
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ПересчитатьИтоговыеСуммы(Форма) Экспорт

	//++ Локализация
	
	// Временные разницы не редактируются
	Форма.ТекущаяСтоимостьВР         = Форма.ТекущаяСтоимостьБУ         - Форма.ТекущаяСтоимостьНУ         - Форма.ТекущаяСтоимостьПР;
	Форма.ТекущаяСтоимостьВРЦФ       = Форма.ТекущаяСтоимостьБУЦФ       - Форма.ТекущаяСтоимостьНУЦФ       - Форма.ТекущаяСтоимостьПРЦФ;
	Форма.ПервоначальнаяСтоимостьВР	 = Форма.ПервоначальнаяСтоимостьБУ  - Форма.ПервоначальнаяСтоимостьНУ  - Форма.ПервоначальнаяСтоимостьПР;
	
	Если Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ") Тогда
		Форма.НакопленнаяАмортизацияВР   = Форма.НакопленнаяАмортизацияБУ   - Форма.НакопленнаяАмортизацияНУ   - Форма.НакопленнаяАмортизацияПР;
		Форма.НакопленнаяАмортизацияВРЦФ = Форма.НакопленнаяАмортизацияБУЦФ - Форма.НакопленнаяАмортизацияНУЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	КонецЕсли; 
	
	// Остаточная стоимость не редактируется
	
	Если Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		И Форма.ОтражатьВРеглУчете Тогда
		Форма.ОстаточнаяСтоимостьБУ   = Форма.ТекущаяСтоимостьБУ   - Форма.НакопленнаяАмортизацияБУ;
		Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
		Форма.ОстаточнаяСтоимостьПР   = Форма.ТекущаяСтоимостьПР   - Форма.НакопленнаяАмортизацияПР;
		Форма.ОстаточнаяСтоимостьВР   = Форма.ТекущаяСтоимостьВР   - Форма.НакопленнаяАмортизацияВР;
		
		Форма.ОстаточнаяСтоимостьБУЦФ = Форма.ТекущаяСтоимостьБУЦФ - Форма.НакопленнаяАмортизацияБУЦФ;
		Форма.ОстаточнаяСтоимостьНУЦФ = Форма.ТекущаяСтоимостьНУЦФ - Форма.НакопленнаяАмортизацияНУЦФ;
		Форма.ОстаточнаяСтоимостьПРЦФ = Форма.ТекущаяСтоимостьПРЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
		Форма.ОстаточнаяСтоимостьВРЦФ = Форма.ТекущаяСтоимостьВРЦФ - Форма.НакопленнаяАмортизацияВРЦФ;
	Иначе	
		Форма.ОстаточнаяСтоимостьБУ   = 0;
		Форма.ОстаточнаяСтоимостьНУ   = 0;
		Форма.ОстаточнаяСтоимостьПР   = 0;
		Форма.ОстаточнаяСтоимостьВР   = 0;
		
		Форма.ОстаточнаяСтоимостьБУЦФ = 0;
		Форма.ОстаточнаяСтоимостьНУЦФ = 0;
		Форма.ОстаточнаяСтоимостьПРЦФ = 0;
		Форма.ОстаточнаяСтоимостьВРЦФ = 0;
	КонецЕсли; 

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиОС_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	СписокРеквизитов = 
	"ДатаПринятияКУчетуНУ,
	|СрокИспользованияНУ,
	|ТекущаяСтоимостьНУ,
	|НакопленнаяАмортизацияНУ,
	|ПервоначальнаяСтоимостьНУ";
	
	ЗначенияРеквизитовДоИзмененияЛокализация = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДоИзмененияЛокализация, Форма);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияРеквизитовДоИзменения, ЗначенияРеквизитовДоИзмененияЛокализация, Истина);
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#Область ФормаРедактированияСтрокиНМА

Процедура ФормаРедактированияСтрокиНМА_НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов, ПараметрыВводаОстатковНМА, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	Элементы = Форма.Элементы;
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	ЭтоНИОКР = (Форма.ВидАктива = ПредопределенноеЗначение("Перечисление.ВидыВнеоборотныхАктивов.НИОКР"));
	
	СтоимостьБУДоступна = (Форма.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
	
	#Область СтраницаПараметрыУчета
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР") Тогда
			Элементы.ПорядокУчетаНУ.СписокВыбора[0].Представление = НСтр("ru = 'Списание расходов';
																		|en = 'Expense write-off'");
		Иначе
			Элементы.ПорядокУчетаНУ.СписокВыбора[0].Представление = НСтр("ru = 'Начислять амортизацию';
																		|en = 'Accrue depreciation '");
		КонецЕсли; 
		
	КонецЕсли;	
	
	#КонецОбласти
	
	#Область СтраницаСтоимость
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования Тогда
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Собственные средства:';
																			|en = 'Own funds:'");
			
		Иначе
			
			Элементы.ГруппаТекущаяСтоимостьЗаголовок.Заголовок       = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Заголовок = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Заголовок    = НСтр("ru = 'Сумма:';
																			|en = 'Amount:'");
			
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И Форма.ОтражатьВРеглУчете И НЕ Форма.ОтражатьВУпрУчете Тогда
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленный износ';
																	|en = 'Accumulated depreciation'");
		Иначе
			Элементы.ГруппаНакопленнаяАмортизация.Заголовок = НСтр("ru = 'Накопленная амортизация';
																	|en = 'Accumulated depreciation'");
		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Форма.ПрименениеЦелевогоФинансирования И СтоимостьБУДоступна;
		Элементы.ТекущаяСтоимостьВРЦФ.Видимость = ЗначениеСвойства;
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ ОбновитьВсе Тогда
		
		АмортизацияЦФДоступна = ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииБУ
									И Форма.ПрименениеЦелевогоФинансирования
									И Форма.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
		Элементы.НакопленнаяАмортизацияВРЦФ.Видимость = АмортизацияЦФДоступна;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ")
		ИЛИ ОбновитьВсе Тогда
		
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьБУ.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияБУ.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияБУ.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияБУ.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияБУ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьНУ.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияНУ.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияНУ.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияНУ.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияНУ.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьПР.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияПР.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияПР.Видимость = Истина;
			Элементы.НакопленнаяАмортизацияПР.ТолькоПросмотр = Истина;
		Иначе
			Элементы.НакопленнаяАмортизацияПР.ТолькоПросмотр = Ложь;
		КонецЕсли;
		Если Элементы.НакопленнаяАмортизацияУУ.Видимость 
			И Элементы.ТекущаяСтоимостьВР.Видимость
			И НЕ Элементы.НакопленнаяАмортизацияВР.Видимость Тогда
			
			Элементы.НакопленнаяАмортизацияВР.Видимость = Истина;
		КонецЕсли;
	КонецЕсли;
	
	//
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовок.Видимость = 
		Элементы.НакопленнаяАмортизацияУУ.Видимость 
		ИЛИ Элементы.НакопленнаяАмортизацияБУ.Видимость
		ИЛИ Элементы.НакопленнаяАмортизацияНУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУ.Видимость = Элементы.НакопленнаяАмортизацияБУ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУ.Видимость = Элементы.НакопленнаяАмортизацияНУ.Видимость;
	Элементы.ОстаточнаяСтоимостьПР.Видимость = Элементы.НакопленнаяАмортизацияПР.Видимость;
	Элементы.ОстаточнаяСтоимостьВР.Видимость = Элементы.НакопленнаяАмортизацияВР.Видимость;
	Элементы.ОстаточнаяСтоимостьУУ.Видимость = Элементы.НакопленнаяАмортизацияУУ.Видимость;
		
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовок.Видимость = 
		Элементы.ОстаточнаяСтоимостьУУ.Видимость 
		ИЛИ Элементы.ОстаточнаяСтоимостьБУ.Видимость
		ИЛИ Элементы.ОстаточнаяСтоимостьНУ.Видимость;
		
	//
	Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьНУЦФ.Видимость = Элементы.НакопленнаяАмортизацияНУЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьПРЦФ.Видимость = Элементы.НакопленнаяАмортизацияПРЦФ.Видимость;
	Элементы.ОстаточнаяСтоимостьВРЦФ.Видимость = Элементы.НакопленнаяАмортизацияВРЦФ.Видимость;
	
	Элементы.ГруппаТекущаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ТекущаяСтоимостьБУЦФ.Видимость;
	Элементы.ГруппаНакопленнаяАмортизацияЗаголовокЦФ.Видимость = Элементы.НакопленнаяАмортизацияБУЦФ.Видимость;
	Элементы.ГруппаОстаточнаяСтоимостьЗаголовокЦФ.Видимость = Элементы.ОстаточнаяСтоимостьБУЦФ.Видимость;
	
	//
	Элементы.ДекорацияЗаголовокБУ.Видимость = Элементы.ТекущаяСтоимостьБУ.Видимость;
		
	Элементы.ОбесценениеНУ.Видимость = Элементы.ТекущаяСтоимостьНУ.Видимость;
	Элементы.ОбесценениеПР.Видимость = Элементы.ДекорацияЗаголовокПР.Видимость;
	Элементы.ОбесценениеВР.Видимость = Элементы.ДекорацияЗаголовокВР.Видимость;

	#КонецОбласти
	
	#Область СтраницаАмортизация
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР") Тогда
			
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru = 'Срок списания';
															|en = 'Amortization period'");
			
		Иначе
			
			Элементы.СрокИспользованияНУ.Заголовок = НСтр("ru = 'Срок использования';
															|en = 'Useful life'");

		КонецЕсли;
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУ")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.СрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Форма.СрокИспользованияНУ);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("СрокИспользованияНУДо2009")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ФактическийСрокИспользованияНУРасшифровка = ВнеоборотныеАктивыКлиентСервер.ПредставлениеКоличестваМесяцевСтрокой(
			Форма.СрокИспользованияНУДо2009);
			
	КонецЕсли;
	
	Если ОбновитьВсе Тогда
		Если Форма.Дата < Форма.ВспомогательныеРеквизиты.ДатаНачалаУчета 
			И Форма.УпрУчетПоДаннымБУ
			И Форма.ОтражатьВУпрУчете Тогда
			Элементы.СрокИспользованияУУ.Заголовок = НСтр("ru = 'Остаточный срок';
															|en = 'Residual period'");
			Элементы.СрокИспользованияУУ.Подсказка = НСтр("ru = 'Остаточный срок на дату перехода';
															|en = 'Residual lifetime on the date of transfer'");
			Элементы.СрокИспользованияУУ.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		КонецЕсли; 
	КонецЕсли;
	
	Элементы.СрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУ.Видимость;
	Элементы.ФактическийСрокИспользованияНУРасшифровка.Видимость = Элементы.СрокИспользованияНУДо2009.Видимость;
	
	#КонецОбласти
	
	#Область СтраницаОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		Если Форма.ПрименениеЦелевогоФинансирования Тогда
			Элементы.СтраницаОтражениеРасходов.Заголовок = НСтр("ru = 'Отражение доходов и расходов';
																|en = 'Record income and expenses'");
		Иначе
			Элементы.СтраницаОтражениеРасходов.Заголовок = НСтр("ru = 'Отражение расходов';
																|en = 'Expense parameters'");
		КонецЕсли; 
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		Элементы.ГруппаРасходыНУ.Заголовок = 
			?(ЭтоНИОКР,
				НСтр("ru = 'Списание расходов (налоговый учет)';
					|en = 'Expense write-off (tax accounting)'"),
				НСтр("ru = 'Амортизация (налоговый учет)';
					|en = 'Depreciation (tax accounting)'"));
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("СтатьяРасходовНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ ОбновитьВсе Тогда
		
		Если ПараметрыВводаОстатковНМА.СтатьяРасходовНУОбязательна 
			ИЛИ ЗначениеЗаполнено(Форма.СтатьяРасходовНУ) Тогда
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = "";
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = "";
		Иначе
			ПодсказкаВводаСтатьи = НСтр("ru = 'совпадает с бухгалтерским учетом';
										|en = 'matches accounting'");
			Элементы.СтатьяРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
			Элементы.АналитикаРасходовНУ.ПодсказкаВвода = ПодсказкаВводаСтатьи;
		КонецЕсли; 
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Функция ФормаРедактированияСтрокиНМА_ТребуетсяПересчитатьЗависимыеСуммы(СтруктураИзмененныхРеквизитов) Экспорт

	ТребуетсяПересчитатьЗависимыеСуммы = Ложь;
	
	//++ Локализация
	
	ТребуетсяПересчитатьЗависимыеСуммы =
		СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияВРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияБУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияНУЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования");
	
	//-- Локализация
	
	Возврат ТребуетсяПересчитатьЗависимыеСуммы;

КонецФункции

Процедура ФормаРедактированияСтрокиНМА_ПриИзмененииРеквизитов(Форма, СписокРеквизитов) Экспорт

	//++ Локализация
	
	// ВАЖНО: Порядок имеет значение!
	
	Если СписокРеквизитов.Найти("ДатаПринятияКУчетуБУ") <> Неопределено Тогда
		Если Форма.ОтражатьВНУ 
			И Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуБУ = Форма.ЗначенияРеквизитовДоИзменения.ДатаПринятияКУчетуНУ Тогда
			Форма.ДатаПринятияКУчетуНУ = Форма.ДатаПринятияКУчетуБУ;
			СписокРеквизитов.Добавить("ДатаПринятияКУчетуНУ");
		КонецЕсли; 
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ДополнитьЗначенияРеквизитовДоИзменения(Форма, ЗначенияРеквизитовДоИзменения) Экспорт

	//++ Локализация
	
	СписокРеквизитов = 
	"ДатаПринятияКУчетуНУ,
	|СрокИспользованияНУ,
	|ТекущаяСтоимостьНУ,
	|НакопленнаяАмортизацияНУ,
	|ПервоначальнаяСтоимостьНУ";
	
	ЗначенияРеквизитовДоИзмененияЛокализация = Новый Структура(СписокРеквизитов);
	ЗаполнитьЗначенияСвойств(ЗначенияРеквизитовДоИзмененияЛокализация, Форма);
	
	ОбщегоНазначенияКлиентСервер.ДополнитьСтруктуру(ЗначенияРеквизитовДоИзменения, ЗначенияРеквизитовДоИзмененияЛокализация, Истина);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ФормаРедактированияСтрокиНМА_ПересчитатьЗависимыеСуммы(Форма) Экспорт
	
	МножительЦФ = ?(Форма.ПрименениеЦелевогоФинансирования, 1, 0);
	
	Форма.ТекущаяСтоимостьПРЦФ       = Форма.ТекущаяСтоимостьБУЦФ;
	Форма.НакопленнаяАмортизацияПРЦФ = Форма.НакопленнаяАмортизацияБУЦФ;
	
	Если Не Форма.ПервоначальнаяСтоимостьОтличается Тогда
		
		Форма.ПервоначальнаяСтоимостьБУ = Форма.ТекущаяСтоимостьБУ + Форма.ТекущаяСтоимостьБУЦФ * МножительЦФ;
		Форма.ПервоначальнаяСтоимостьНУ = Форма.ТекущаяСтоимостьНУ + Форма.ТекущаяСтоимостьНУЦФ * МножительЦФ;
		
	КонецЕсли;
	
	// Временные разницы не редактируются
	Форма.ТекущаяСтоимостьВР         = Форма.ТекущаяСтоимостьБУ         - Форма.ТекущаяСтоимостьНУ         - Форма.ТекущаяСтоимостьПР;
	Форма.ТекущаяСтоимостьВРЦФ       = Форма.ТекущаяСтоимостьБУЦФ       - Форма.ТекущаяСтоимостьНУЦФ       - Форма.ТекущаяСтоимостьПРЦФ;
	Форма.НакопленнаяАмортизацияВР   = Форма.НакопленнаяАмортизацияБУ   - Форма.НакопленнаяАмортизацияНУ   - Форма.НакопленнаяАмортизацияПР;
	Форма.НакопленнаяАмортизацияВРЦФ = Форма.НакопленнаяАмортизацияБУЦФ - Форма.НакопленнаяАмортизацияНУЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	
	// Остаточная стоимость не редактируется
	Форма.ОстаточнаяСтоимостьНУ   = Форма.ТекущаяСтоимостьНУ   - Форма.НакопленнаяАмортизацияНУ;
	Форма.ОстаточнаяСтоимостьПР   = Форма.ТекущаяСтоимостьПР   - Форма.НакопленнаяАмортизацияПР;
	Форма.ОстаточнаяСтоимостьВР   = Форма.ТекущаяСтоимостьВР   - Форма.НакопленнаяАмортизацияВР;
	
	Форма.ОстаточнаяСтоимостьБУЦФ = Форма.ТекущаяСтоимостьБУЦФ - Форма.НакопленнаяАмортизацияБУЦФ;
	Форма.ОстаточнаяСтоимостьНУЦФ = Форма.ТекущаяСтоимостьНУЦФ - Форма.НакопленнаяАмортизацияНУЦФ;
	Форма.ОстаточнаяСтоимостьПРЦФ = Форма.ТекущаяСтоимостьПРЦФ - Форма.НакопленнаяАмортизацияПРЦФ;
	Форма.ОстаточнаяСтоимостьВРЦФ = Форма.ТекущаяСтоимостьВРЦФ - Форма.НакопленнаяАмортизацияВРЦФ;
	
КонецПроцедуры

#КонецОбласти

#Область Прочее

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_ОС(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.СписаниеПриПринятииКУчету"));
								
	ТипыДоговоровПоФСБУ25 = УчетАрендованныхОСКлиентСервер.ТипыДоговоровДоходнойАренды();
	ПереданоВФинАренду = (ТипыДоговоровПоФСБУ25.Найти(ВспомогательныеРеквизиты.ТипДоговораПередачиВАренду) <> Неопределено);
	
	#Область ПараметрыУчета
	Если СтруктураИзмененныхРеквизитов.Свойство("ХозяйственнаяОперация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЭтоАренда =	
			ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе")
				ИЛИ ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковПереданныхВАрендуПредметовЛизингаНаБалансе");
		
		ЗначениеСвойства =
			НЕ ЭтоАренда
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВБУ 
			И ВспомогательныеРеквизиты.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности
			И НЕ ПереданоВФинАренду; 
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ИспользоватьРеглУчет;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ГруппаОС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ИспользоватьРеглУчет 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизационнаяГруппа", 
			"АмортизационнаяГруппа", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства,
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ИспользоватьРеглУчет
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
			И ВспомогательныеРеквизиты.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.РабочийСкот")
			И ВспомогательныеРеквизиты.ГруппаОС <> ПредопределенноеЗначение("Перечисление.ГруппыОС.ПродуктивныйСкот");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НедвижимоеИмущество", 
			"НедвижимоеИмущество", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуНУ", 
			"ДатаПринятияКУчетуНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС.РаздельныйУчетТоваровПоНалогообложениюНДС
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСИзДокумента")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			Объект.ПрименениеЦелевогоФинансирования, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Стоимость
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ТекущаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПервоначальнаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования 
			И ВспомогательныеРеквизиты.ОтражатьВБУ 
			И СтоимостьБУДоступна;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования 
			И ВспомогательныеРеквизиты.ОтражатьВНУ
			И СтоимостьБУДоступна
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования 
			И СтоимостьБУДоступна
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ СтоимостьБУДоступна 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			СтоимостьБУДоступна 
			И НЕ Объект.ПрименениеЦелевогоФинансирования
			И НЕ ((ПереданоВФинАренду ИЛИ НЕ СтоимостьБУДоступна)
					И (ВспомогательныеРеквизиты.ОтражатьВБУ
						ИЛИ НЕ ВспомогательныеРеквизиты.ВедетсяРегламентированныйУчетВНА));
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ВключениеВРасходыПриПринятииКУчету")
				ИЛИ НЕ ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
					И Объект.ПорядокУчетаНУ <> ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
				ИЛИ НЕ ВспомогательныеРеквизиты.ОтражатьВРеглУчете);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
									
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
					
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НакопленнаяАмортизацияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненногоБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьПР", 
			"ПервоначальнаяСтоимостьПР", 
			"ТолькоПросмотрБезОчистки", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ВспомогательныеРеквизиты.ХозяйственнаяОперация = ПредопределенноеЗначение("Перечисление.ХозяйственныеОперации.ВводОстатковАрендованныхОСНаБалансе")
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНалогаНаПрибыль.ВключатьВСоставНалоговыхРасходовАрендныеПлатежи;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"КорректировкаСтоимостиАрендованногоИмуществаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область События
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаПринятияКУчету", 
			"НазваниеДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаПринятияКУчету", 
			"НомерДокументаПринятияКУчету", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоговорПередачиВАренду") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И НЕ ПереданоВФинАренду;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ЕстьИзменениеПараметровАмортизацииБУ;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НазваниеДокументаМодернизации", 
			"НазваниеДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НомерДокументаМодернизации", 
			"НомерДокументаМодернизации", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"СтоимостьДляВычисленияАмортизацииБУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ПрименениеЦелевогоФинансирования;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"СтоимостьДляВычисленияАмортизацииЦФ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ПРДляВычисленияАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ЕстьИзменениеПараметровАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ТекущаяСтоимостьПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПР")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НакопленнаяАмортизацияПРЦФ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ЕстьИзменениеПараметровАмортизацииБУ 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц
			И (Объект.ТекущаяСтоимостьПР 
				+ Объект.ТекущаяСтоимостьПРЦФ 
				- Объект.НакопленнаяАмортизацияПР 
				- Объект.НакопленнаяАмортизацияПРЦФ) > 0;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПРДляВычисленияАмортизации", 
			"ПРДляВычисленияАмортизации", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументВводаВЭксплуатациюБУ", 
			"ДокументВводаВЭксплуатациюБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДействуетНачислениеИзноса
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьИзносБУ", 
			"НачислятьИзносБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВРеглУчете 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУДо2009", 
			"НакопленнаяАмортизацияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"СрокИспользованияНУРасшифровка", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
								
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДатаПринятияКУчетуБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
				И ВспомогательныеРеквизиты.ОтражатьВРеглУчете
				И (НачалоМесяца(ВспомогательныеРеквизиты.Дата) = НачалоМесяца(Объект.ДатаПринятияКУчетуБУ)
					ИЛИ ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета)
			ИЛИ НЕ ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
				И ВспомогательныеРеквизиты.ОтражатьВБУиНУ;
								
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"ВключитьАмортизационнуюПремиюВСоставРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
		    ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И ((Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФ")
						ИЛИ Объект.МетодНачисленияАмортизацииБУ = ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега"))
					И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
				ИЛИ ПараметрыВводаОстатковОС.ДействуетНачислениеИзноса);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"КоэффициентАмортизацииБУ",
			"КоэффициентАмортизацииБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = Объект.ВключитьАмортизационнуюПремиюВСоставРасходов;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"СуммаКапитальныхВложенийВключаемыхВРасходыНУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПропорциональноОбъемуПродукции")
			И Объект.МетодНачисленияАмортизацииБУ <> ПредопределенноеЗначение("Перечисление.СпособыНачисленияАмортизацииОС.ПоЕНАОФНа1000кмПробега")
			И ПараметрыВводаОстатковОС.ДоступныПараметрыАмортизацииБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И НЕ ВспомогательныеРеквизиты.ПрименяетсяФСБУ6;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ГрафикАмортизации", 
			"ГрафикАмортизации", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ
					ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ
					ИЛИ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовУУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОсновноеСредство")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("АмортизационнаяГруппа") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("НедвижимоеИмущество") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ТребуетсяНастройкаОтраженияРасходовПоНалогам
				ИЛИ (ДобавитьМесяц(ВспомогательныеРеквизиты.Дата, 1) >= '201901010000'
						И (ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ЗемельныеУчастки")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ОбъектыПриродопользования")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.ТранспортныеСредства")
							ИЛИ ВспомогательныеРеквизиты.ГруппаОС = ПредопределенноеЗначение("Перечисление.ГруппыОС.МашиныИОборудование"))));
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНалог", 
			"СтатьяРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНалог", 
			"АналитикаРасходовНалог", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходовЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковОС.СтатьяРасходовНУОбязательна
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ Объект.ПередаватьРасходыВДругуюОрганизацию,
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВключитьАмортизационнуюПремиюВСоставРасходов")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
		    Объект.ВключитьАмортизационнуюПремиюВСоставРасходов
			И ПараметрыВводаОстатковОС.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовАмортизационнойПремии", 
			"СтатьяРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовАмортизационнойПремии", 
			"АналитикаРасходовАмортизационнойПремии", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьЗначенияСвойствЗависимыхРеквизитов_ВводОстатков_НМА(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА, СтруктураИзмененныхРеквизитов, ПараметрыРеквизитовОбъекта) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
			
	СтоимостьБУДоступна = (Объект.ПорядокУчетаБУ <> ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.СписыватьПриПринятииКУчету"));
			
	#Область ПараметрыУчетаБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.ИспользоватьУчетВнеоборотныхАктивовПоНаправлениямДеятельности;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПрименениеЦелевогоФинансирования", 
			"ПрименениеЦелевогоФинансирования", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
	
	#Область ПараметрыУчетаНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВНУ 
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДатаПринятияКУчетуНУ", 
			"ДатаПринятияКУчетуНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПорядокУчетаНУ", 
			"ПорядокУчетаНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
	
	КонецЕсли;
	
	#КонецОбласти
							
	#Область ПараметрыУчетаПрочее
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпособПоступления", 
			"СпособПоступления", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НаправлениеДеятельности", 
			"НаправлениеДеятельности", 
			"АвтоОтметкаНезаполненного", 
			Объект.ПрименениеЦелевогоФинансирования, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС <> Неопределено
			И ВспомогательныеРеквизиты.ПараметрыУчетнойПолитикиНастройкиУчетаНДС.РаздельныйУчетТоваровПоНалогообложениюНДС
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСИзДокумента", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ВариантРаздельногоУчетаНДСРаспределяется", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДС")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСИзДокумента")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВариантРаздельногоУчетаНДСРаспределяется")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВариантРаздельногоУчетаНДС = ПредопределенноеЗначение("Перечисление.ВариантыРаздельногоУчетаНДС.ИзДокумента")
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НалогообложениеНДС", 
			"НалогообложениеНДС", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтоимостьБУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"ТекущаяСтоимостьВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ПараметрыВводаОстатковНМА.АмортизацияБУДоступна
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			 
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПР", 
			"НакопленнаяАмортизацияПР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"", 
			"НакопленнаяАмортизацияВР", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область СтоимостьНУ
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУ", 
			"ТекущаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства =
			ВспомогательныеРеквизиты.ОтражатьВНУ
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;	
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ПараметрыВводаОстатковНМА.АмортизацияНУДоступна
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУ", 
			"НакопленнаяАмортизацияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И СтоимостьБУДоступна;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУЦФ", 
			"ТекущаяСтоимостьБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

		//
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования 
			И СтоимостьБУДоступна		
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьНУЦФ", 
			"ТекущаяСтоимостьНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования 
			И СтоимостьБУДоступна
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПРЦФ", 
			"ТекущаяСтоимостьПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			(ПараметрыВводаОстатковНМА.АмортизацияБУДоступна ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета)
			И Объект.ПрименениеЦелевогоФинансирования
			И СтоимостьБУДоступна
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУЦФ", 
			"НакопленнаяАмортизацияБУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(ПараметрыВводаОстатковНМА.АмортизацияБУДоступна ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета)
			И Объект.ПрименениеЦелевогоФинансирования
			И СтоимостьБУДоступна
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияНУЦФ", 
			"НакопленнаяАмортизацияНУЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			(ПараметрыВводаОстатковНМА.АмортизацияБУДоступна ИЛИ НЕ ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета)
			И Объект.ПрименениеЦелевогоФинансирования
			И СтоимостьБУДоступна
			И Объект.ВидОбъектаУчета <> ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.РасходыНаНИОКР")
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ВспомогательныеРеквизиты.ВедетсяУчетПостоянныхИВременныхРазниц;
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияПРЦФ", 
			"НакопленнаяАмортизацияПРЦФ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПервоначальнаяСтоимостьОтличается")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = НЕ Объект.ПервоначальнаяСтоимостьОтличается;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПервоначальнаяСтоимостьНУ", 
			"ПервоначальнаяСтоимостьНУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			НЕ СтоимостьБУДоступна 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьБУ", 
			"ТекущаяСтоимостьБУ", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ТекущаяСтоимостьПР", 
			"ТекущаяСтоимостьПР", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НакопленнаяАмортизацияБУ", 
			"НакопленнаяАмортизацияБУ", 
			"ТолькоПросмотр", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		ЗначениеСвойства = 
			НЕ СтоимостьБУДоступна 
			И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
		
	КонецЕсли;
		
	#КонецОбласти
	
	#Область События
		
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВБУ
			И (ВспомогательныеРеквизиты.Дата < ВспомогательныеРеквизиты.ДатаНачалаУчета)
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ДокументПринятияКУчетуБУ", 
			"ДокументПринятияКУчетуБУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	#КонецОбласти
	
	#Область Амортизация
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ 
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив")
				ИЛИ Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.ПустаяСсылка"))
			И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
				ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.ПустаяСсылка"))
			И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
				ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
				
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"НачислятьАмортизациюНУ", 
			"НачислятьАмортизациюНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
		//
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета
				ИЛИ Объект.НачислятьАмортизациюНУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУ", 
			"СрокИспользованияНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ВидОбъектаУчета") 
		ИЛИ ОбновитьВсе Тогда
			
		ЗначениеСвойства = 
			ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииНУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И Объект.ВидОбъектаУчета = ПредопределенноеЗначение("Перечисление.ВидыОбъектовУчетаНМА.НематериальныйАктив");
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СпециальныйКоэффициентНУ", 
			"СпециальныйКоэффициентНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
			
	// СВЕДЕНИЯ ДО 2009 ГОДА
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ОтражатьВНУ 
			И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ ОбновитьВсе Тогда
		
		// Для поддержки переноса данных
		ЗначениеСвойства = (ВспомогательныеРеквизиты.Дата >= ВспомогательныеРеквизиты.ДатаНачалаУчета);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"МетодНачисленияАмортизацииНУ", 
			"МетодНачисленияАмортизацииНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли; 
	
	Если СтруктураИзмененныхРеквизитов.Свойство("МетодНачисленияАмортизацииНУ")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.МетодНачисленияАмортизацииНУ <> ПредопределенноеЗначение("Перечисление.МетодыНачисленияАмортизации.Нелинейный");
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АмортизацияДо2009", 
			"АмортизацияДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СрокИспользованияНУДо2009", 
			"СрокИспользованияНУДо2009", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	#КонецОбласти
	
	#Область ОтражениеДоходовИРасходов
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.СтатьяРасходовНУОбязательна;
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"Видимость", 
			ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);

		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаРасходовНУ", 
			"АналитикаРасходовНУ", 
			"Видимость", 
			ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ, 
			ПараметрыРеквизитовОбъекта);

	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаБУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаНУ") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = ПараметрыВводаОстатковНМА.СтатьяРасходовНУОбязательна;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяРасходовНУ", 
			"СтатьяРасходовНУ", 
			"АвтоОтметкаНезаполненного", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	// ЦЕЛЕВОЕ ФИНАНСИРОВАНИЕ
	Если СтруктураИзмененныхРеквизитов.Свойство("ПрименениеЦелевогоФинансирования")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВБУ")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			Объект.ПрименениеЦелевогоФинансирования
			И ВспомогательныеРеквизиты.ОтражатьВБУ
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета;
							
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"СтатьяДоходов", 
			"СтатьяДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"АналитикаДоходов", 
			"АналитикаДоходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;

	// ПЕРЕДАЧА РАСХОДОВ
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВУпрУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПорядокУчетаУУ") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ДоступныПараметрыУчета") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации 
			И ПараметрыВводаОстатковНМА.ДоступныПараметрыУчета
			И (ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ 
				ИЛИ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ 
				ИЛИ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовУУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ПередаватьРасходыВДругуюОрганизацию", 
			"ПередаватьРасходыВДругуюОрганизацию", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
			
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов", 
			"ОрганизацияПолучательРасходов", 
			"Видимость", 
			ЗначениеСвойства, 
			ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Организация") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ОтражатьВРеглУчете") 
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("ПередаватьРасходыВДругуюОрганизацию") 
		ИЛИ ОбновитьВсе Тогда
		
		ЗначениеСвойства = 
			ВспомогательныеРеквизиты.ЕстьСвязанныеОрганизации
			И Объект.ПередаватьРасходыВДругуюОрганизацию
			И (ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ 
				ИЛИ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ 
				ИЛИ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовУУ);
		
		ОбщегоНазначенияУТКлиентСервер.ДобавитьПараметрыРеквизитаОбъекта(
			"ОрганизацияПолучательРасходов",
			"ОрганизацияПолучательРасходов", 
			"ТолькоПросмотрБезОтметкиНезаполненного", 
			НЕ ЗначениеСвойства, ПараметрыРеквизитовОбъекта);
		
	КонецЕсли;
		
	#КонецОбласти
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВводаОстатковОС(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковОС) Экспорт
	
	//++ Локализация
	
	ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВНУ
		И ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль
		И (Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.НачислениеАмортизации")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.АмортизацияНачислена")
			ИЛИ Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокВключенияСтоимостиОСВСоставРасходовНУ.ПустаяСсылка"))
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
	
	ПараметрыВводаОстатковОС.СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И НЕ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовБУ 
		И НЕ ПараметрыВводаОстатковОС.ДоступноОтражениеРасходовНУ;
	
	ПараметрыВводаОстатковОС.ДействуетНачислениеИзноса = 
		Объект.ПорядокУчетаБУ = ПредопределенноеЗначение("Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ")
		И ВспомогательныеРеквизиты.ОтражатьВРеглУчете;
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьПараметрыВводаОстатковНМА(Объект, ВспомогательныеРеквизиты, ПараметрыВводаОстатковНМА) Экспорт
	
	//++ Локализация
	
	ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ = 
		ВспомогательныеРеквизиты.ОтражатьВНУ
		И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию");
		
	ПараметрыВводаОстатковНМА.СтатьяРасходовНУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВНУ 
		И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
		И НЕ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ;
		
	ПараметрыВводаОстатковНМА.ДоступныПараметрыАмортизацииНУ = 
		ВспомогательныеРеквизиты.ОтражатьВНУ
		И Объект.ПорядокУчетаНУ = ПредопределенноеЗначение("Перечисление.ПорядокУчетаСтоимостиВнеоборотныхАктивов.НачислятьАмортизацию")
		И (ВспомогательныеРеквизиты.ПлательщикНалогаНаПрибыль 
			ИЛИ ВспомогательныеРеквизиты.ПрименяетсяУСНДоходыМинусРасходы);
		
	ПараметрыВводаОстатковНМА.СтатьяРасходовУУОбязательна = 
		ВспомогательныеРеквизиты.ОтражатьВУпрУчете 
		И НЕ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовБУ
		И НЕ ПараметрыВводаОстатковНМА.ДоступноОтражениеРасходовНУ;
		
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
