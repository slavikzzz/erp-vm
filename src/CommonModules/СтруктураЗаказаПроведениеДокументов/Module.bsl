#Область ПрограммныйИнтерфейс

#Область Проведение

// Формирует параметры для проведения документа по регистрам учетного механизма через общий механизм проведения.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  Свойства - См. ПроведениеДокументов.СвойстваДокумента
//
// Возвращаемое значение:
//  Структура - См. ПроведениеДокументов.ПараметрыУчетногоМеханизма
//
Функция ПараметрыДляПроведенияДокумента(Документ, Свойства) Экспорт
	
	Параметры = ПроведениеДокументов.ПараметрыУчетногоМеханизма();
	
	Если Не Документ.ДинамическаяСтруктура Тогда
		Возврат Параметры;
	КонецЕсли;
	
	// Проведение
	Если Свойства.РежимЗаписи = РежимЗаписиДокумента.Проведение Тогда
		Параметры.ПодчиненныеРегистры.Добавить(Метаданные.РегистрыСведений.ЗаказыНаПроизводство);
	КонецЕсли;
	
	Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.СтруктураЗаказа);
	Параметры.НезависимыеРегистры.Добавить(Метаданные.РегистрыСведений.ТрудозатратыСтруктурыЗаказа);
	
	Возврат Параметры;
	
КонецФункции

// Возвращает тексты запросов для сторнирования движений при исправлении документов
// 
// Параметры:
// 	МетаданныеДокумента - ОбъектМетаданныхДокумент - Метаданные документа, который проводится.
// 
// Возвращаемое значение:
// 	Соответствие - Соответствие полного имени регистра тексту запроса сторнирования
//
Функция ТекстыЗапросовСторнирования(МетаданныеДокумента) Экспорт
	
	ТекстыЗапросов = Новый Соответствие();
	
	Возврат ТекстыЗапросов;
	
КонецФункции

// Дополняет текст запроса механизма проверки даты запрета по таблице изменений.
// 
// Параметры:
// 	Запрос - Запрос - используется для установки параметров запроса.
// 
// Возвращаемое значение:
//	Соответствие - соответствие имен таблиц изменения регистров и текстов запросов.
//	
Функция ТекстыЗапросовКонтрольДатыЗапретаПоТаблицеИзменений(Запрос) Экспорт

	СоответствиеТекстовЗапросов = Новый Соответствие();
	Возврат СоответствиеТекстовЗапросов;
	
КонецФункции

// Процедура формирования движений по подчиненным регистрам производства.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Движения - КоллекцияДвижений - коллекция наборов записей движений документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ОтразитьДвижения(ТаблицыДляДвижений, Движения, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	ПроведениеДокументов.ОтразитьДвижения(ТаблицыДляДвижений, Движения, "ЗаказыНаПроизводство");
	
КонецПроцедуры

// Процедура формирования движений по регистру.
//
// Параметры:
//	ТаблицыДляДвижений - Структура - таблицы данных документа
//	Документ - ДокументСсылка - ссылка на документ
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц документа
//	Отказ - Булево - признак отказа от проведения документа.
//
Процедура ЗаписатьДанные(ТаблицыДляДвижений, Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Если Отказ Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	
	ИдентификаторДокумента = Документ.УникальныйИдентификатор();
	
	ТаблицаСтруктураЗаказа = Неопределено;
	
	Если ТаблицыДляДвижений.Свойство("Таблица" + "СтруктураЗаказа", ТаблицаСтруктураЗаказа) Тогда
		ЗаписатьНоменклатуру(ИдентификаторДокумента, ТаблицаСтруктураЗаказа);
	КонецЕсли;
	
	ТаблицаТрудозатратыСтруктурыЗаказа = Неопределено;
	
	Если ТаблицыДляДвижений.Свойство("Таблица" + "ТрудозатратыСтруктурыЗаказа", ТаблицаТрудозатратыСтруктурыЗаказа) Тогда
		ЗаписатьТрудозатраты(ИдентификаторДокумента, ТаблицаТрудозатратыСтруктурыЗаказа);
	КонецЕсли;
		
КонецПроцедуры

// Формирует тексты запросов для контроля изменений записанных движений регистров.
//
// Параметры:
//  Запрос - Запрос - запрос, хранящий параметры используемые в списке запросов
//  ТекстыЗапроса - СписокЗначений - список текстов запросов и их имен.
//  Документ - ДокументОбъект - записываемый документ.
//
Процедура ИнициализироватьДанныеКонтроляИзменений(Запрос, ТекстыЗапроса, Документ) Экспорт
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

// Выводит сообщения пользователю при наличии ошибок контроля изменений записанных движений регистров.
//
// Параметры:
//  РезультатыКонтроля - Структура - таблицы с результатами контроля изменений
//  Документ - ДокументОбъект - записываемый документ
//  Отказ - Булево - признак отказа от проведения документа.
//
Процедура СообщитьОРезультатахКонтроляИзменений(РезультатыКонтроля, Документ, Отказ) Экспорт
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область Проведение

Процедура ПередЗаписьюДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

Процедура ПослеЗаписиДвиженийДокумента(Документ, МенеджерВременныхТаблиц, Отказ) Экспорт
	
	Возврат; // в текущей конфигурации дополнительных действий не предусмотрено
	
КонецПроцедуры

#КонецОбласти

#Область ЗаказНаПроизводства

// Подготовка данных к расчету динамической структуры заказа на производство.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  ДополнительныеСвойства - Структура - доп. свойства документа.
//  Отказ - Булево - признак отказа от записи
//
Процедура ЗаказНаПроизводствоПередЗаписью(Документ, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Не Документ.ДинамическаяСтруктура Тогда
		Возврат;
	КонецЕсли;
	
	ДополнительныеСвойства.Вставить("ДанныеДокументаПередЗаписью",
		ОбщегоНазначения.ЗначенияРеквизитовОбъекта(Документ.Ссылка, "Приоритет,Подразделение,Очередь" + ",НачатьНеРанее,ДатаПотребности,РазмещениеВыпуска"));
	
	УстановитьКлючНоменклатурыВСтрокахТабличнойЧасти(Документ, "Продукция");
	
КонецПроцедуры

// Запись данных к расчету динамической структуры заказа на производство.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  ДополнительныеСвойства - Структура - доп. свойства документа.
//  Отказ - Булево - признак отказа от записи
//
Процедура ЗаказНаПроизводствоПриЗаписи(Документ, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Не Документ.ДинамическаяСтруктура Тогда
		Возврат;
	КонецЕсли;
	
	ЗаписатьЗаданияКРаспределениюЗапасовПриИзмененииПриоритета(Документ, ДополнительныеСвойства);
	
	ЗаписатьЗаданияКРасчетуГрафикаПроизводства(Документ, ДополнительныеСвойства);
	
КонецПроцедуры

#КонецОбласти

#Область ЭтапПроизводства

// Подготовка данных к расчету динамической структуры заказа на производство.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  ДополнительныеСвойства - Структура - доп. свойства документа.
//  Отказ - Булево - признак отказа от записи
//
Процедура ЭтапПроизводстваПередЗаписью(Документ, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Не Документ.ДинамическаяСтруктура Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьКлючНоменклатурыВСтрокахТабличнойЧасти(Документ, "ОбеспечениеМатериаламиИРаботами");
	
	УстановитьКлючВидаРаботВСтрокахТабличнойЧасти(Документ, "Трудозатраты");
	
КонецПроцедуры

// Запись данных к расчету динамической структуры заказа на производство.
//
// Параметры:
//  Документ - ДокументОбъект - записываемый документ
//  ДополнительныеСвойства - Структура - доп. свойства документа.
//  Отказ - Булево - признак отказа от записи
//
Процедура ЭтапПроизводстваПриЗаписи(Документ, ДополнительныеСвойства, Отказ) Экспорт
	
	Если Не Документ.ДинамическаяСтруктура Тогда
		Возврат;
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ПриИзмененииОбеспечения

// Формирует задания на расчет структуры заказа на производство на основе движений по регистрам обеспечения.
//
// Параметры:
//  Документ - ДокументОбъект - регистратор движений регистров
//  МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер временных таблиц, содержащий таблицы изменений регистров.
//
Процедура СформироватьЗаданияКРаспределениюЗапасовПриЗаписиДокумента(Документ, МенеджерВременныхТаблиц) Экспорт
	
	Если Не ПолучитьФункциональнуюОпцию("ДинамическаяСтруктураЗаказовНаПроизводство") Или РаспределениеЗапасов.ДосчитыватьРегистрРегламентнымЗаданием() Тогда
		Возврат;
	КонецЕсли;
	
	ЗапуститьРасчет = Ложь;
	
	Если ПроведениеДокументов.ЕстьЗаписиВТаблице(Документ, "ЗапасыИПотребностиИзменение") Тогда
		ЗапуститьРасчет = Истина;
		Запрос = Новый Запрос(
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	Таблица.Номенклатура   КАК Номенклатура,
		|	Таблица.Характеристика КАК Характеристика,
		|	Таблица.Склад          КАК Склад,
		|	Таблица.Назначение     КАК Назначение
		|ИЗ
		|	ЗапасыИПотребностиИзменение КАК Таблица
		|ГДЕ
		|	Таблица.Склад НЕ В (
		|		НЕОПРЕДЕЛЕНО,
		|		ЗНАЧЕНИЕ(Справочник.Склады.ПустаяСсылка),
		|		ЗНАЧЕНИЕ(Справочник.СтруктураПредприятия.ПустаяСсылка))
		|");
		Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
		РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаРаспределениеЗапасов.ДобавитьЗадания(Запрос.Выполнить().Выгрузить());
	КонецЕсли;
	
	Если ЗапуститьРасчет Тогда
		СтруктураЗаказа.ЗапуститьРасчет();
	КонецЕсли;

КонецПроцедуры

// Формирует задания на расчет структуры заказа на производство на основе движений по регистрам обеспечения.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер, содержащий таблицы изменений регистров.
//	ИмяВременнойТаблицы - Строка - имя временной таблицы, содержащей изменения результата распределения запасов.
//	ЗапуститьРасчет - Булево - признак, необходимость запуска расчета структуры заказа
//
Процедура СформироватьЗаданияКРаспределениюЗапасов(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ЗапуститьРасчет = Истина) Экспорт
	
	Если МенеджерВременныхТаблиц.Таблицы.Найти(ИмяВременнойТаблицы) = Неопределено ИЛИ Не ПолучитьФункциональнуюОпцию("ДинамическаяСтруктураЗаказовНаПроизводство") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаРаспределениеЗапасов.ДобавитьЗаданияИзМенеджераВременныхТаблиц(МенеджерВременныхТаблиц, ИмяВременнойТаблицы);

	СтруктураЗаказа.ЗапуститьРасчет();

КонецПроцедуры

#КонецОбласти

#Область ПриИзмененииСостоянияЗаказа

// Возникает после выполнения записи регистров документа.
//
// Параметры:
//	МенеджерВременныхТаблиц - МенеджерВременныхТаблиц - менеджер, содержащий таблицы изменений регистров.
//	ИмяВременнойТаблицы - Строка - имя временной таблицы, содержащей изменения.
//	ВызовИзОбработчикаОбновления - Булево - признак, вызов выполняется из обработчика обновления.
//
Процедура РассчитатьСостояниеПродукцииЗаказа(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, ВызовИзОбработчикаОбновления = Ложь) Экспорт

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.Текст =
	"ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ()          КАК ИндексСтроки,
	|	План.Номенклатура          КАК Номенклатура,
	|	План.Характеристика        КАК Характеристика,
	|	План.Склад                 КАК Склад,
	|	План.Назначение            КАК Назначение,
	|	План.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
	|	План.КлючНоменклатура      КАК КлючНоменклатура,
	|	План.Спецификация          КАК Спецификация,
	|	План.НомерСтроки           КАК НомерСтроки,
	|	СУММА(План.КПроизводству)  КАК Требуется
	|ПОМЕСТИТЬ План
	|ИЗ
	|	РегистрСведений.ЗаказыНаПроизводство КАК План
	|ГДЕ
	|	(План.Номенклатура, План.Характеристика, План.Склад, План.Назначение, План.ЗаказНаПроизводство) В
	|			(ВЫБРАТЬ
	|				ДД.Номенклатура,
	|				ДД.Характеристика,
	|				ДД.Склад,
	|				ДД.Назначение,
	|				ДД.ЗаказНаПроизводство
	|			ИЗ
	|				ЗаказыНаПроизводствоИзменения КАК ДД)
	|
	|СГРУППИРОВАТЬ ПО
	|	План.Номенклатура,
	|	План.Характеристика,
	|	План.Склад,
	|	План.Назначение,
	|	План.ЗаказНаПроизводство,
	|	План.КлючНоменклатура,
	|	План.Спецификация,
	|	План.НомерСтроки
	|
	|ИМЕЮЩИЕ
	|	СУММА(План.КПроизводству) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство
	|;
	|
	|ВЫБРАТЬ
	|	АВТОНОМЕРЗАПИСИ()                    КАК ИндексСтроки,
	|	Факт.Номенклатура                    КАК Номенклатура,
	|	Факт.Характеристика                  КАК Характеристика,
	|	Факт.Склад                           КАК Склад,
	|	Факт.Назначение                      КАК Назначение,
	|	Факт.ЗаказНаПроизводство             КАК ЗаказНаПроизводство,
	|	Факт.Партия                          КАК Партия,
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(Факт.Партия) КАК КлючПартия,
	|	Факт.Подразделение                   КАК Подразделение,
	|	Факт.Этап                            КАК Этап,
	|	Факт.ЗаказНаПоступление              КАК ЗаказНаПоступление,
	|	Факт.ДатаПоступления                 КАК ДатаПоступления,
	|	СУММА(Факт.Запущено)                 КАК Запущено,
	|	СУММА(Факт.Готово)                   КАК Готово
	|ПОМЕСТИТЬ Факт
	|ИЗ
	|	РегистрСведений.ЗаказыНаПроизводство КАК Факт
	|
	|ГДЕ
	|	(Факт.Номенклатура, Факт.Характеристика, Факт.Склад, Факт.Назначение, Факт.ЗаказНаПроизводство) В
	|			(ВЫБРАТЬ
	|				План.Номенклатура,
	|				План.Характеристика,
	|				План.Склад,
	|				План.Назначение,
	|				План.ЗаказНаПроизводство
	|			ИЗ
	|				План КАК План)
	|
	|СГРУППИРОВАТЬ ПО
	|	Факт.Номенклатура,
	|	Факт.Характеристика,
	|	Факт.Склад,
	|	Факт.Назначение,
	|	Факт.ЗаказНаПроизводство,
	|	Факт.Партия,
	|	Факт.Подразделение,
	|	Факт.Этап,
	|	Факт.ЗаказНаПоступление,
	|	Факт.ДатаПоступления
	|
	|ИМЕЮЩИЕ
	|	СУММА(Факт.Запущено) > 0 ИЛИ СУММА(Факт.Готово) > 0
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Номенклатура,
	|	Характеристика,
	|	Склад,
	|	Назначение,
	|	ЗаказНаПроизводство
	|;
	|
	|ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ДД.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|	УНИКАЛЬНЫЙИДЕНТИФИКАТОР(ДД.ЗаказНаПроизводство) КАК ИдентификаторДокумента
	|ИЗ
	|	ЗаказыНаПроизводствоИзменения КАК ДД
	|ГДЕ
	|	ДД.КПроизводствуИзменение <> 0 
	|	  ИЛИ ИСТИНА В
	|		(ВЫБРАТЬ ПЕРВЫЕ 1
	|			ИСТИНА
	|		ИЗ
	|			План КАК План
	|		ГДЕ
	|			План.Номенклатура = ДД.Номенклатура
	|			И План.Характеристика = ДД.Характеристика
	|			И План.Склад = ДД.Склад
	|			И План.Назначение = ДД.Назначение
	|			И План.ЗаказНаПроизводство = ДД.ЗаказНаПроизводство)
	|;
	|
	|ВЫБРАТЬ
	|
	|	План.ИндексСтроки КАК ИндексСтроки,
	|
	|	План.Номенклатура          КАК Номенклатура,
	|	План.Характеристика        КАК Характеристика,
	|	План.Склад                 КАК Склад,
	|	План.Назначение            КАК Назначение,
	|	План.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
	|	План.Требуется             КАК Требуется
	|
	|ИЗ
	|	План КАК План
	|
	|УПОРЯДОЧИТЬ ПО
	|	План.Номенклатура,
	|	План.Характеристика,
	|	План.Склад,
	|	План.Назначение,
	|	План.ЗаказНаПроизводство,
	|	План.НомерСтроки
	|;
	|
	|ВЫБРАТЬ
	|
	|	Факт.ИндексСтроки КАК ИндексСтрокиВыпуска,
	|
	|	Факт.Номенклатура          КАК Номенклатура,
	|	Факт.Характеристика        КАК Характеристика,
	|	Факт.Склад                 КАК Склад,
	|	Факт.Назначение            КАК Назначение,
	|	Факт.ЗаказНаПроизводство   КАК ЗаказНаПроизводство,
	|	Факт.Запущено              КАК Запущено,
	|	Факт.Готово                КАК Готово
	|
	|ИЗ
	|	Факт КАК Факт
	|
	|УПОРЯДОЧИТЬ ПО
	|	Факт.Номенклатура,
	|	Факт.Характеристика,
	|	Факт.Склад,
	|	Факт.Назначение,
	|	Факт.ЗаказНаПроизводство,
	|	Факт.Этап
	|
	|";
	Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаказыНаПроизводствоИзменения", ИмяВременнойТаблицы);
	
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	КоличествоПакетов = РезультатЗапроса.Количество();
	
	Расчеты = РезультатЗапроса[КоличествоПакетов-3].Выгрузить();
	
	ЗакрытиеЗаказа = Новый ТаблицаЗначений();
	ЗакрытиеЗаказа.Колонки.Добавить("ЗаказНаПроизводство", Метаданные.РегистрыСведений.СтруктураЗаказа.Измерения.ЗаказНаПроизводство.Тип);
	ЗакрытиеЗаказа.Колонки.Добавить("ИндексСтроки", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ЗакрытиеЗаказа.Колонки.Добавить("ИндексСтрокиВыпуска", ОбщегоНазначения.ОписаниеТипаЧисло(10,0));
	ЗакрытиеЗаказа.Колонки.Добавить("ЗаказНаПоступление", Метаданные.РегистрыСведений.СтруктураЗаказа.Измерения.ЗаказНаПоступление.Тип);
	ЗакрытиеЗаказа.Колонки.Добавить("ДатаПоступления", Метаданные.РегистрыСведений.СтруктураЗаказа.Измерения.ДатаПоступления.Тип);
	ЗакрытиеЗаказа.Колонки.Добавить("Запущено", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ЗакрытиеЗаказа.Колонки.Добавить("Готово", ОбщегоНазначения.ОписаниеТипаЧисло(15,3));
	ЗакрытьГрафикЗаказа(РезультатЗапроса[КоличествоПакетов-2], РезультатЗапроса[КоличествоПакетов-1], ЗакрытиеЗаказа);
	
	Запрос.УстановитьПараметр("ЗакрытиеЗаказа", ЗакрытиеЗаказа);
	Запрос.Текст =
		СтруктураЗаказа.ТекстЗапросаПоместитьТаблицуЗначенийВоВременнуюТаблицу("ЗакрытиеЗаказа", ЗакрытиеЗаказа.Колонки,,, "ИндексСтроки") + ОбщегоНазначения.РазделительПакетаЗапросов() +
		"ВЫБРАТЬ
		|	Таблица.ИндексСтроки КАК ИндексСтроки,
		|	СУММА(Таблица.Готово) КАК Готово
		|ПОМЕСТИТЬ ЗакрытиеЗаказаИтоговыеЗаписи
		|ИЗ
		|	ЗакрытиеЗаказа КАК Таблица
		|СГРУППИРОВАТЬ ПО
		|	Таблица.ИндексСтроки
		|ИМЕЮЩИЕ
		|	СУММА(Таблица.Готово) > 0
		|ИНДЕКСИРОВАТЬ ПО
		|	ИндексСтроки";
	Запрос.Выполнить(); 

	ЗаписатьРезультатРасчетаСостоянияПродукцииЗаказа(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, Расчеты);
	
	Если Не ВызовИзОбработчикаОбновления Тогда
		СтруктураЗаказа.ЗапуститьРасчет();
	КонецЕсли;
	
КонецПроцедуры 

#КонецОбласти

#Область Подстановки

// Формирует текст поля для получения продукции заказа
// 
// Параметры:
// 	ПутьКПолюЗаказ - Строка - путь к полю "Заказ на производство"
// 	ПутьКПолюНазначениеПродукция - Строка - путь к полю "Назначение продукции"
// Возвращаемое значение:
// 	Строка - Описание
Функция ТекстПоляНазначениеПродукция(ПутьКПолюЗаказ = "Таблица.ЗаказНаПроизводство", ПутьКПолюНазначениеПродукция = "Таблица.Назначение") Экспорт
	
	ТекстПоля = 
	"ВЫБОР
	|	КОГДА Заказы.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.НазначениеПродукции)
	|		И Заказы.Назначение <> &НазначениеПродукция
	|	ТОГДА &НазначениеПродукция
	|	ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|	КОНЕЦ";
	
	ТекстПоля = СтрЗаменить(ТекстПоля, "Заказы", ПутьКПолюЗаказ);
	ТекстПоля = СтрЗаменить(ТекстПоля, "&НазначениеПродукция", ПутьКПолюНазначениеПродукция);
	
	Возврат ТекстПоля;
	
КонецФункции

// Формирует текст поля для получения назначения материалов заказа
// 
// Параметры:
// 	ПутьКПолюЗаказ - Строка - путь к полю "Заказ на производство"
// 	ПутьКПолюНазначениеПродукция - Строка - путь к полю "Назначение продукции"
// Возвращаемое значение:
// 	Строка - Описание
Функция ТекстПоляНазначениеМатериалов(ПутьКПолюЗаказ = "Таблица.ЗаказНаПроизводство", ПутьКПолюНазначениеПродукция = "Таблица.Назначение") Экспорт
	
	ТекстПоля = 
	"ВЫБОР
	|	КОГДА
	|		Заказы.ВариантОбособления = ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.НазначениеПродукции)
	|		   И &НазначениеПродукция <> ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	//++ Устарело_Переработка24
	|		   И Заказы.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ПроизводствоИзДавальческогоСырья)
	//-- Устарело_Переработка24
	|		ТОГДА &НазначениеПродукция
	|	ИНАЧЕ ВЫБОР
	|			КОГДА Заказы.ВариантОбособления В (
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.НаправлениеДеятельности),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.НазначениеПродукции),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЗаказНаПроизводство),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ЭтапПроизводства),
	|					ЗНАЧЕНИЕ(Перечисление.ВариантыОбособленияМатериаловВПроизводстве.ДоговорДавальца))
	|				ТОГДА Заказы.Назначение
	|			ИНАЧЕ ЗНАЧЕНИЕ(Справочник.Назначения.ПустаяСсылка)
	|		КОНЕЦ
	|	КОНЕЦ";
	
	ТекстПоля = СтрЗаменить(ТекстПоля, "Заказы", ПутьКПолюЗаказ);
	ТекстПоля = СтрЗаменить(ТекстПоля, "&НазначениеПродукция", ПутьКПолюНазначениеПродукция);
	
	Возврат ТекстПоля;
	
КонецФункции

// Формирует текст поля для проверки статуса заказа на производства
// 
// Параметры:
// 	ПутьКПолюЗаказ - Строка - путь к полю "Заказ"
// Возвращаемое значение:
// 	Строка - Описание
Функция ТекстПоляЗаказПереданКПроизводству(ПутьКПолюЗаказ = "") Экспорт
	
	ТекстПоля =
	"(Таблица.Проведен
	|	И Таблица.Статус = ЗНАЧЕНИЕ(Перечисление.СтатусыЗаказовНаПроизводство2_2.КПроизводству)
	|)";
	
	Если Не ПустаяСтрока(ПутьКПолюЗаказ) Тогда
		ТекстПоля = СтрЗаменить(ТекстПоля, "Таблица", ПутьКПолюЗаказ);
	КонецЕсли;
	
	Возврат ТекстПоля;
	
КонецФункции

#КонецОбласти

#Область Прочее

Процедура УстановитьКлючНоменклатурыВСтрокахТабличнойЧасти(Документ, ИменаТЧ, НуженКонтроль = Истина) Экспорт
	
	Если ПустаяСтрока(ИменаТЧ) Тогда
		МассивТЧ = Новый Массив();
	Иначе
		МассивТЧ = СтрРазделить(ИменаТЧ, ",", Ложь);
	КонецЕсли;
	
	Для Каждого ИмяТЧ Из МассивТЧ Цикл
	
		НовыеСтроки = Документ[ИмяТЧ].НайтиСтроки(Новый Структура("КлючНоменклатура", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
		
		Для каждого НоваяСтрока Из НовыеСтроки Цикл
			НоваяСтрока.КлючНоменклатура = Новый УникальныйИдентификатор();
		КонецЦикла;
		
		Если НуженКонтроль Тогда
		
			Проверка = Документ[ИмяТЧ].Выгрузить(, "КлючНоменклатура"); // ТаблицаЗначений
			Проверка.Колонки.Добавить("Счетчик");
			Проверка.ЗаполнитьЗначения(1, "Счетчик");
			Проверка.Свернуть("КлючНоменклатура", "Счетчик");
			Если Проверка.Количество() <> Проверка.НайтиСтроки(Новый Структура("Счетчик", 1)).Количество() Тогда
				ТекстОшибки = НСтр("ru = 'Внутренние идентификаторы строк не должны повторяться!';
									|en = 'Internal row IDs must not be repeated.'");
				ВызватьИсключение ТекстОшибки;
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

Процедура УстановитьКлючВидаРаботВСтрокахТабличнойЧасти(Документ, ИмяТЧ, НуженКонтроль = Истина) Экспорт
	
	НовыеСтроки = Документ[ИмяТЧ].НайтиСтроки(Новый Структура("КлючВидРабот", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000")));
	
	Для каждого НоваяСтрока Из НовыеСтроки Цикл
		НоваяСтрока.КлючВидРабот = Новый УникальныйИдентификатор();
	КонецЦикла;
	
	Если НуженКонтроль Тогда
	
		Проверка = Документ[ИмяТЧ].Выгрузить(, "КлючВидРабот"); // ТаблицаЗначений
		Проверка.Колонки.Добавить("Счетчик");
		Проверка.ЗаполнитьЗначения(1, "Счетчик");
		Проверка.Свернуть("КлючВидРабот", "Счетчик");
		Если Проверка.Количество() <> Проверка.НайтиСтроки(Новый Структура("Счетчик", 1)).Количество() Тогда
			ТекстОшибки = НСтр("ru = 'Внутренние идентификаторы строк не должны повторяться!';
								|en = 'Internal row IDs must not be repeated.'");
			ВызватьИсключение ТекстОшибки;
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОчиститьКлючиСтрокВТабличнойЧасти(Документ, ИменаТЧ, ИмяПоля) Экспорт
	
	ПустойКлючСтроки = Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000");
	
	Если ПустаяСтрока(ИменаТЧ) Тогда
		МассивТЧ = Новый Массив();
	Иначе
		МассивТЧ = СтрРазделить(ИменаТЧ, ",", Ложь);
	КонецЕсли;
	
	Для Каждого ИмяТЧ Из МассивТЧ Цикл
	
		Для каждого Строка Из Документ[ИмяТЧ] Цикл
			Строка[ИмяПоля] = ПустойКлючСтроки;
		КонецЦикла;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

Процедура ЗаписатьНоменклатуру(ИдентификаторДокумента, ДвиженияДокумента)
	
	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц();
	Запрос.Текст = 
	"ВЫБРАТЬ
	|	Движения.Номенклатура              КАК Номенклатура,
	|	Движения.Характеристика            КАК Характеристика,
	|	Движения.Склад                     КАК Склад,
	|	Движения.Назначение                КАК Назначение,
	|	Движения.ЗаказНаПроизводство       КАК ЗаказНаПроизводство,
	|	Движения.КлючНоменклатура          КАК КлючНоменклатура,
	|	Движения.КлючПартия                КАК КлючПартия,
	|	Движения.ВидСтроки                 КАК ВидСтроки,
	|	Движения.ЗаказНаПоступление        КАК ЗаказНаПоступление,
	|	Движения.ДатаПоступления           КАК ДатаПоступления,
	|	Движения.КлючНабор                 КАК КлючНабор,
	|	Движения.Уровень                   КАК Уровень,
	|	Движения.ДлительностьДоВыпуска     КАК ДлительностьДоВыпуска,
	|	Движения.Подразделение             КАК Подразделение,
	|	Движения.Этап                      КАК Этап,
	|	Движения.Спецификация              КАК Спецификация,
	|	Движения.СпецификацияПолуфабриката КАК СпецификацияПолуфабриката,
	|	Движения.НазначениеСтруктуры       КАК НазначениеСтруктуры,
	|	Движения.Запущено                  КАК Запущено,
	|	Движения.Требуется                 КАК Требуется,
	|	Движения.Готово                    КАК Готово,
	|	Движения.НеОбеспечивать            КАК НеОбеспечивать
	|
	|ПОМЕСТИТЬ СтруктураЗаказаДвиженияПередЗаписью
	|ИЗ
	|	РегистрСведений.СтруктураЗаказа КАК Движения
	|ГДЕ
	|	Движения.КлючНабор = &ИдентификаторДокумента
	|";
	Запрос.УстановитьПараметр("ИдентификаторДокумента", ИдентификаторДокумента);
	
	Блокировка = Новый БлокировкаДанных();
	Блокировка.Добавить("РегистрСведений.СтруктураЗаказа").УстановитьЗначение("КлючНабор", ИдентификаторДокумента);
	Блокировка.Заблокировать();
	
	Запрос.Выполнить();
	
	НаборЗаписей = РегистрыСведений.СтруктураЗаказа.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КлючНабор.Установить(ИдентификаторДокумента);
	НаборЗаписей.Загрузить(ДвиженияДокумента);
	НаборЗаписей.Записать(Истина);
	
	Запрос.Текст =
	"ВЫБРАТЬ РАЗЛИЧНЫЕ
	|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
	|	ТаблицаИзменений.Характеристика КАК Характеристика,
	|	ТаблицаИзменений.Склад КАК Склад,
	|	ТаблицаИзменений.Назначение КАК Назначение,
	|	ТаблицаИзменений.ЗаказНаПроизводство КАК ЗаказНаПроизводство
	|ИЗ (
	|	ВЫБРАТЬ
	|		Движения.Номенклатура КАК Номенклатура,
	|		Движения.Характеристика КАК Характеристика,
	|		Движения.Склад КАК Склад,
	|		Движения.Назначение КАК Назначение,
	|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		Движения.КлючНоменклатура КАК КлючНоменклатура,
	|		Движения.КлючПартия КАК КлючПартия,
	|		Движения.ВидСтроки КАК ВидСтроки,
	|		Движения.ЗаказНаПоступление КАК ЗаказНаПоступление,
	|		Движения.ДатаПоступления КАК ДатаПоступления,
	|		Движения.КлючНабор КАК КлючНабор,
	|		Движения.Уровень КАК Уровень,
	|		Движения.ДлительностьДоВыпуска КАК ДлительностьДоВыпуска,
	|		Движения.Подразделение КАК Подразделение,
	|		Движения.Этап КАК Этап,
	|		Движения.Спецификация КАК Спецификация,
	|		Движения.СпецификацияПолуфабриката КАК СпецификацияПолуфабриката,
	|		Движения.НазначениеСтруктуры КАК НазначениеСтруктуры,
	|		-Движения.Требуется КАК Требуется
	|	ИЗ
	|		СтруктураЗаказаДвиженияПередЗаписью КАК Движения
	|
	|	ОБЪЕДИНИТЬ ВСЕ
	|
	|	ВЫБРАТЬ
	|		Движения.Номенклатура КАК Номенклатура,
	|		Движения.Характеристика КАК Характеристика,
	|		Движения.Склад КАК Склад,
	|		Движения.Назначение КАК Назначение,
	|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
	|		Движения.КлючНоменклатура КАК КлючНоменклатура,
	|		Движения.КлючПартия КАК КлючПартия,
	|		Движения.ВидСтроки КАК ВидСтроки,
	|		Движения.ЗаказНаПоступление КАК ЗаказНаПоступление,
	|		Движения.ДатаПоступления КАК ДатаПоступления,
	|		Движения.КлючНабор КАК КлючНабор,
	|		Движения.Уровень КАК Уровень,
	|		Движения.ДлительностьДоВыпуска КАК ДлительностьДоВыпуска,
	|		Движения.Подразделение КАК Подразделение,
	|		Движения.Этап КАК Этап,
	|		Движения.Спецификация КАК Спецификация,
	|		Движения.СпецификацияПолуфабриката КАК СпецификацияПолуфабриката,
	|		Движения.НазначениеСтруктуры КАК НазначениеСтруктуры,
	|		Движения.Требуется КАК Требуется
	|	ИЗ
	|		РегистрСведений.СтруктураЗаказа КАК Движения
	|	ГДЕ
	|		Движения.КлючНабор = &ИдентификаторДокумента) КАК ТаблицаИзменений
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаИзменений.Номенклатура,
	|	ТаблицаИзменений.Характеристика,
	|	ТаблицаИзменений.Склад,
	|	ТаблицаИзменений.Назначение,
	|	ТаблицаИзменений.ЗаказНаПроизводство,
	|	ТаблицаИзменений.КлючНоменклатура,
	|	ТаблицаИзменений.КлючПартия,
	|	ТаблицаИзменений.ВидСтроки,
	|	ТаблицаИзменений.ЗаказНаПоступление,
	|	ТаблицаИзменений.ДатаПоступления,
	|	ТаблицаИзменений.КлючНабор,
	|	ТаблицаИзменений.Уровень,
	|	ТаблицаИзменений.ДлительностьДоВыпуска,
	|	ТаблицаИзменений.Подразделение,
	|	ТаблицаИзменений.Этап,
	|	ТаблицаИзменений.Спецификация,
	|	ТаблицаИзменений.СпецификацияПолуфабриката,
	|	ТаблицаИзменений.НазначениеСтруктуры
	|
	|ИМЕЮЩИЕ
	|	СУММА(ТаблицаИзменений.Требуется) <> 0
	|;
	|УНИЧТОЖИТЬ СтруктураЗаказаДвиженияПередЗаписью
	|;";
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ЕстьИзменения = НЕ РезультатЗапроса[0].Пустой();
	
	Если ЕстьИзменения Тогда            
		
		РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаРаспределениеЗапасов.ДобавитьЗадания(РезультатЗапроса[0].Выгрузить());
		
		СтруктураЗаказа.ЗапуститьРасчет();   
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ЗаписатьТрудозатраты(ИдентификаторДокумента, ДвиженияДокумента)
	
	НаборЗаписей = РегистрыСведений.ТрудозатратыСтруктурыЗаказа.СоздатьНаборЗаписей();
	НаборЗаписей.Отбор.КлючНабор.Установить(ИдентификаторДокумента);
	НаборЗаписей.Загрузить(ДвиженияДокумента);
	НаборЗаписей.Записать(Истина);

КонецПроцедуры

#КонецОбласти

#Область ЗаказНаПроизводства

Процедура ЗаписатьЗаданияКРаспределениюЗапасовПриИзмененииПриоритета(Документ, ДополнительныеСвойства)
	
	Если ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.Проведен
		ИЛИ ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Возврат;
	КонецЕсли;
	
	Если Документ.Статус <> Перечисления.СтатусыЗаказовНаПроизводство2_2.КПроизводству Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(
		Документ,
		ДополнительныеСвойства.ДанныеДокументаПередЗаписью, "Приоритет,Подразделение,Очередь") Тогда
		Возврат;
	КонецЕсли;
	
	ОтложенныеЗадания.ОбработатьЗаданияОчереди(
						"ЗаданияКРасчетуСтруктурыЗаказаПриИзмененииПриоритета",
						Новый Структура("ЗаказНаПроизводство", Документ.Ссылка));
	
КонецПроцедуры

Процедура ЗаписатьЗаданияКРасчетуГрафикаПроизводства(Документ, ДополнительныеСвойства)
	
	Если ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.ЭтоНовый Тогда
		Возврат;
	КонецЕсли;
	
	Если НЕ ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.Проведен
		ИЛИ ДополнительныеСвойства.ПроведениеДокументов.СвойстваДокумента.РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
		Возврат;
	КонецЕсли;
	
	Если Документ.Статус <> Перечисления.СтатусыЗаказовНаПроизводство2_2.КПроизводству Тогда
		Возврат;
	КонецЕсли;
	
	Если ОбщегоНазначенияУТКлиентСервер.СтруктурыРавны(
		Документ,
		ДополнительныеСвойства.ДанныеДокументаПередЗаписью, "НачатьНеРанее,ДатаПотребности,РазмещениеВыпуска") Тогда
		Возврат;
	КонецЕсли;
	
	РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаНормативныйГрафик.ДобавитьЗадание(Документ.Ссылка,, Истина);
	
КонецПроцедуры

#КонецОбласти

#Область ЗакрытиеЗаказа

Процедура ЗакрытьГрафикЗаказа(РезультатИзделия, РезультатЗакрытиеЗаказа, ЗакрытиеЗаказа)
	
	Если РезультатИзделия.Пустой() Или РезультатЗакрытиеЗаказа.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	ВыборкаИзделия = РезультатИзделия.Выбрать();
	ВыборкаЗакрытиеЗаказа = РезультатЗакрытиеЗаказа.Выбрать();

	СравнениеЗначений = Новый СравнениеЗначений;
	СписокПолейГруппировки = СтрРазделить("Номенклатура,Характеристика,Склад,Назначение,ЗаказНаПроизводство", ",");
	Группировка = Новый Структура("Номенклатура,Характеристика,Склад,Назначение,ЗаказНаПроизводство");
	
	ЕстьЗаписиВВыборке = ВыборкаИзделия.Следующий() И ВыборкаЗакрытиеЗаказа.Следующий();
	
	Пока ЕстьЗаписиВВыборке Цикл
		
		Требуется = ВыборкаИзделия.Требуется;
		
		ДоступноЗапущено = ВыборкаЗакрытиеЗаказа.Запущено;
		ДоступноГотово   = ВыборкаЗакрытиеЗаказа.Готово;
		
		Пока ЕстьЗаписиВВыборке
			И ВыборкаИзделия.Номенклатура        = ВыборкаЗакрытиеЗаказа.Номенклатура
			И ВыборкаИзделия.Характеристика      = ВыборкаЗакрытиеЗаказа.Характеристика
			И ВыборкаИзделия.Склад               = ВыборкаЗакрытиеЗаказа.Склад
			И ВыборкаИзделия.Назначение          = ВыборкаЗакрытиеЗаказа.Назначение
			И ВыборкаИзделия.ЗаказНаПроизводство = ВыборкаЗакрытиеЗаказа.ЗаказНаПроизводство Цикл
			
			Потребность = ЗакрытиеЗаказа.Добавить();
			ЗаполнитьЗначенияСвойств(Потребность, ВыборкаИзделия);
			ЗаполнитьЗначенияСвойств(Потребность, ВыборкаЗакрытиеЗаказа);
			
			Если ДоступноЗапущено > 0 И Требуется > 0 Тогда 
				Распределено = Мин(Требуется, ДоступноЗапущено);
				Потребность.Запущено = Распределено;
				ДоступноЗапущено = ДоступноЗапущено - Распределено;
				Требуется = Требуется - Распределено;
			КонецЕсли;
			
			Если ДоступноГотово > 0 И Требуется > 0 Тогда
				Распределено = Мин(Требуется, ДоступноГотово);
				Потребность.Готово = Распределено;
				ДоступноГотово = ДоступноГотово - Распределено;
				Требуется = Требуется - Распределено;
			КонецЕсли;

			Если Требуется = 0 Тогда
				ЕстьЗаписиВВыборке = ЕстьЗаписиВВыборке И ВыборкаИзделия.Следующий();
				Требуется = ?(ЕстьЗаписиВВыборке, ВыборкаИзделия.Требуется, -1);
			КонецЕсли;
			
			Если ДоступноЗапущено = 0 И ДоступноГотово = 0 Тогда
				ЕстьЗаписиВВыборке = ЕстьЗаписиВВыборке И ВыборкаЗакрытиеЗаказа.Следующий();
				ДоступноЗапущено = ?(ЕстьЗаписиВВыборке, ВыборкаЗакрытиеЗаказа.Запущено, -1);
				ДоступноГотово   = ?(ЕстьЗаписиВВыборке, ВыборкаЗакрытиеЗаказа.Готово,   -1);
			КонецЕсли;
			
		КонецЦикла;
		
		Если ЕстьЗаписиВВыборке Тогда
		
			Сдвиг = СтруктураЗаказа.СравнитьЗначенияПолейКлюча(ВыборкаИзделия, ВыборкаЗакрытиеЗаказа, СписокПолейГруппировки, СравнениеЗначений);
			
			Если Сдвиг > 0 Тогда
				ЗаполнитьЗначенияСвойств(Группировка, ВыборкаИзделия);
				ЕстьЗаписиВВыборке = ВыборкаЗакрытиеЗаказа.НайтиСледующий(Группировка);
			Иначе
				ЗаполнитьЗначенияСвойств(Группировка, ВыборкаЗакрытиеЗаказа);
				ЕстьЗаписиВВыборке = ВыборкаИзделия.НайтиСледующий(Группировка);
			КонецЕсли;
			
		КонецЕсли;
		
	КонецЦикла;
КонецПроцедуры
   
Процедура ЗаписатьРезультатРасчетаСостоянияПродукцииЗаказа(МенеджерВременныхТаблиц, ИмяВременнойТаблицы, Расчеты)

	Запрос = Новый Запрос();
	Запрос.МенеджерВременныхТаблиц = МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ПустоеНазначение", Справочники.Назначения.ПустаяСсылка());
	Запрос.УстановитьПараметр("ПустойКлючСвязи", Новый УникальныйИдентификатор("00000000-0000-0000-0000-000000000000"));
	
	НаборЗаписей = РегистрыСведений.СтруктураЗаказа.СоздатьНаборЗаписей();
	Для Каждого Расчет Из Расчеты Цикл
		
		Блокировка = Новый БлокировкаДанных();
		Блокировка.Добавить("РегистрСведений.СтруктураЗаказа").УстановитьЗначение("КлючНабор", Расчет.ИдентификаторДокумента);
		Блокировка.Заблокировать();

		Запрос.Текст = 
		"ВЫБРАТЬ
		|	План.Номенклатура                                                                   КАК Номенклатура,
		|	План.Характеристика                                                                 КАК Характеристика,
		|	План.Склад                                                                          КАК Склад,
		|	План.Назначение                                                                     КАК Назначение,
		|	План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|	План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|	План.КлючПартия                                                                     КАК КлючПартия,
		|	План.ВидСтроки                                                                      КАК ВидСтроки,
		|	План.ЗаказНаПоступление                                                             КАК ЗаказНаПоступление,
		|	План.ДатаПоступления                                                                КАК ДатаПоступления,
		|	План.КлючНабор                                                                      КАК КлючНабор,
		|	План.Подразделение                                                                  КАК Подразделение,
		|	План.Этап                                                                           КАК Этап,
		|	План.СпецификацияПолуфабриката                                                      КАК СпецификацияПолуфабриката,
		|	План.НазначениеСтруктуры                                                            КАК НазначениеСтруктуры,
		|	План.Требуется                                                                      КАК Требуется,
		|	План.РаспределеноИзПартий                                                           КАК РаспределеноИзПартий,
		|	План.РаспределеноИзПартийОбособленно                                                КАК РаспределеноИзПартийОбособленно,
		|	План.Готово                                                                         КАК Готово
		|
		|ПОМЕСТИТЬ СтруктураЗаказаПередЗаписью
		|ИЗ
		|	РегистрСведений.СтруктураЗаказа КАК План
		|ГДЕ
		|	План.КлючНабор = &ИдентификаторДокумента
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаПроизводство,
		|	КлючНоменклатура
		|;
		|ВЫБРАТЬ
		|	План.Номенклатура                                                                   КАК Номенклатура,
		|	План.Характеристика                                                                 КАК Характеристика,
		|	План.Склад                                                                          КАК Склад,
		|	План.Назначение                                                                     КАК Назначение,
		|	План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|	План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|	План.КлючПартия                                                                     КАК КлючПартия,
		|	План.ВидСтроки                                                                      КАК ВидСтроки,
		|	План.ЗаказНаПоступление                                                             КАК ЗаказНаПоступление,
		|	План.ДатаПоступления                                                                КАК ДатаПоступления,
		|	План.КлючНабор                                                                      КАК КлючНабор,
		|	МАКСИМУМ(План.Подразделение)                                                        КАК Подразделение,
		|	МАКСИМУМ(План.Этап)                                                                 КАК Этап,
		|	МАКСИМУМ(План.СпецификацияПолуфабриката)                                            КАК СпецификацияПолуфабриката,
		|	МАКСИМУМ(План.НазначениеСтруктуры)                                                  КАК НазначениеСтруктуры,
		|	СУММА(План.Требуется)                                                               КАК Требуется,
		|	СУММА(План.РаспределеноИзПартий)                                                    КАК РаспределеноИзПартий,
		|	СУММА(План.РаспределеноИзПартийОбособленно)                                         КАК РаспределеноИзПартийОбособленно,
		|	СУММА(План.Готово)                                                                  КАК Готово
		|
		|ПОМЕСТИТЬ СтруктураЗаказаНаборЗаписей
		|ИЗ
		|(	ВЫБРАТЬ
		|		План.Номенклатура                                                                   КАК Номенклатура,
		|		План.Характеристика                                                                 КАК Характеристика,
		|		План.Склад                                                                          КАК Склад,
		|		План.Назначение                                                                     КАК Назначение,
		|		План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|		План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|		&ИдентификаторДокумента                                                             КАК КлючПартия,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.Продукция)             КАК ВидСтроки,
		|		NULL                                                                                КАК ЗаказНаПоступление,
		|		NULL                                                                                КАК ДатаПоступления,
		|		&ИдентификаторДокумента                                                             КАК КлючНабор,
		|		NULL                                                                                КАК Подразделение,
		|		NULL                                                                                КАК Этап,
		|		План.Спецификация                                                                   КАК СпецификацияПолуфабриката,
		|		План.Назначение                                                                     КАК НазначениеСтруктуры,
		|		План.Требуется  - ISNULL(ЗакрытиеЗаказа.Готово, 0)                                  КАК Требуется,
		|		0                                                                                   КАК РаспределеноИзПартий,
		|		0                                                                                   КАК РаспределеноИзПартийОбособленно,
		|		ISNULL(ЗакрытиеЗаказа.Готово, 0)                                                    КАК Готово
		|
		|	ИЗ
		|		План КАК План
		|			ЛЕВОЕ СОЕДИНЕНИЕ ЗакрытиеЗаказаИтоговыеЗаписи КАК ЗакрытиеЗаказа
		|			ПО План.ИндексСтроки = ЗакрытиеЗаказа.ИндексСтроки
		|	ГДЕ
		|		План.ЗаказНаПроизводство = &ЗаказНаПроизводство
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		План.Номенклатура                                                                   КАК Номенклатура,
		|		План.Характеристика                                                                 КАК Характеристика,
		|		План.Склад                                                                          КАК Склад,
		|		План.Назначение                                                                     КАК Назначение,
		|		План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|		План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|		Факт.КлючПартия                                                                     КАК КлючПартия,
		|		ЗНАЧЕНИЕ(Перечисление.ВидыСтрокСтруктурыЗаказаНаПроизводство.ПроизводствоПродукции) КАК ВидСтроки,
		|		Факт.ЗаказНаПоступление                                                             КАК ЗаказНаПоступление,
		|		Факт.ДатаПоступления                                                                КАК ДатаПоступления,
		|		&ИдентификаторДокумента                                                             КАК КлючНабор,
		|		Факт.Подразделение                                                                  КАК Подразделение,
		|		Факт.Этап                                                                           КАК Этап,
		|		NULL                                                                                КАК СпецификацияПолуфабриката,
		|		Факт.Назначение                                                                     КАК НазначениеСтруктуры,
		|		0                                                                                   КАК Требуется,
		|		ВЫБОР
		|			КОГДА Факт.Назначение <> &ПустоеНазначение
		|				ТОГДА Резервы.Запущено
		|			ИНАЧЕ 0
		|		КОНЕЦ                                                                               КАК РаспределеноИзПартийОбособленно,
		|		ВЫБОР
		|			КОГДА Факт.Назначение = &ПустоеНазначение
		|				ТОГДА Резервы.Запущено
		|			ИНАЧЕ 0
		|		КОНЕЦ                                                                               КАК РаспределеноИзПартий,
		|		0                                                                                   КАК Готово
		|	ИЗ
		|		ЗакрытиеЗаказа КАК Резервы
		|	
		|			ЛЕВОЕ СОЕДИНЕНИЕ План КАК План
		|			ПО Резервы.ИндексСтроки = План.ИндексСтроки
		|	
		|			ЛЕВОЕ СОЕДИНЕНИЕ Факт КАК Факт
		|			ПО Резервы.ИндексСтрокиВыпуска = Факт.ИндексСтроки
		|
		|	ГДЕ
		|		Резервы.Запущено > 0 И Резервы.ЗаказНаПроизводство = &ЗаказНаПроизводство
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		План.Номенклатура                                                                   КАК Номенклатура,
		|		План.Характеристика                                                                 КАК Характеристика,
		|		План.Склад                                                                          КАК Склад,
		|		План.Назначение                                                                     КАК Назначение,
		|		План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|		План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|		План.КлючПартия                                                                     КАК КлючПартия,
		|		План.ВидСтроки                                                                      КАК ВидСтроки,
		|		План.ЗаказНаПоступление                                                             КАК ЗаказНаПоступление,
		|		План.ДатаПоступления                                                                КАК ДатаПоступления,
		|		План.КлючНабор                                                                      КАК КлючНабор,
		|		План.Подразделение                                                                  КАК Подразделение,
		|		План.Этап                                                                           КАК Этап,
		|		План.СпецификацияПолуфабриката                                                      КАК СпецификацияПолуфабриката,
		|		План.НазначениеСтруктуры                                                            КАК НазначениеСтруктуры,
		|		План.Требуется                                                                      КАК Требуется,
		|		План.РаспределеноИзПартий                                                           КАК РаспределеноИзПартий,
		|		План.РаспределеноИзПартийОбособленно                                                КАК РаспределеноИзПартийОбособленно,
		|		План.Готово                                                                         КАК Готово
		|	ИЗ
		|		СтруктураЗаказаПередЗаписью КАК План
		|
		|	ГДЕ
		|		План.ЗаказНаПроизводство = &ЗаказНаПроизводство 
		|		  И ИСТИНА НЕ В
		|			(ВЫБРАТЬ ПЕРВЫЕ 1
		|				ИСТИНА
		|			ИЗ
		|				ЗаказыНаПроизводствоИзменения КАК ДД
		|			ГДЕ
		|				ДД.Номенклатура          = План.Номенклатура
		|				И ДД.Характеристика      = План.Характеристика
		|				И ДД.Склад               = План.Склад
		|				И ДД.Назначение          = План.Назначение)
		|
		|) КАК План
		|
		|СГРУППИРОВАТЬ ПО
		|	План.Номенклатура,
		|	План.Характеристика,
		|	План.Склад,
		|	План.Назначение,
		|	План.ЗаказНаПроизводство,
		|	План.КлючНоменклатура,
		|	План.КлючПартия,
		|	План.ВидСтроки,
		|	План.ЗаказНаПоступление,
		|	План.ДатаПоступления,
		|	План.КлючНабор
		|
		|ИНДЕКСИРОВАТЬ ПО
		|	Номенклатура,
		|	Характеристика,
		|	Склад,
		|	Назначение,
		|	ЗаказНаПроизводство,
		|	КлючНоменклатура
		|;
		|
		|ВЫБРАТЬ
		|	План.Номенклатура                                                                   КАК Номенклатура,
		|	План.Характеристика                                                                 КАК Характеристика,
		|	План.Склад                                                                          КАК Склад,
		|	План.Назначение                                                                     КАК Назначение,
		|	План.ЗаказНаПроизводство                                                            КАК ЗаказНаПроизводство,
		|	План.КлючНоменклатура                                                               КАК КлючНоменклатура,
		|	План.КлючПартия                                                                     КАК КлючПартия,
		|	План.ВидСтроки                                                                      КАК ВидСтроки,
		|	План.ЗаказНаПоступление                                                             КАК ЗаказНаПоступление,
		|	План.ДатаПоступления                                                                КАК ДатаПоступления,
		|	План.КлючНабор                                                                      КАК КлючНабор,
		|	План.Подразделение                                                                  КАК Подразделение,
		|	План.Этап                                                                           КАК Этап,
		|	План.СпецификацияПолуфабриката                                                      КАК СпецификацияПолуфабриката,
		|	План.НазначениеСтруктуры                                                            КАК НазначениеСтруктуры,
		|	План.Требуется                                                                      КАК Требуется,
		|	План.РаспределеноИзПартий                                                           КАК РаспределеноИзПартий,
		|	План.РаспределеноИзПартийОбособленно                                                КАК РаспределеноИзПартийОбособленно,
		|	План.Готово                                                                         КАК Готово
		|ИЗ
		|	СтруктураЗаказаНаборЗаписей КАК План
		|";
		Запрос.Текст = СтрЗаменить(Запрос.Текст, "ЗаказыНаПроизводствоИзменения", ИмяВременнойТаблицы);
  		
		Запрос.УстановитьПараметр("ЗаказНаПроизводство", Расчет.ЗаказНаПроизводство);
		Запрос.УстановитьПараметр("ИдентификаторДокумента", Расчет.ИдентификаторДокумента);

		НаборЗаписей.Отбор.КлючНабор.Установить(Расчет.ИдентификаторДокумента);
		НаборЗаписей.Загрузить(Запрос.Выполнить().Выгрузить());
		НаборЗаписей.Записать(Истина); 
	
		Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаИзменений.КлючПартия КАК КлючПартия,
		|	ТаблицаИзменений.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	(ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение,
		|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура КАК КлючНоменклатура,
		|		Движения.КлючПартия КАК КлючПартия,
		|		-Движения.РаспределеноИзПартий КАК РаспределеноИзПартийИзменение,
		|		-Движения.РаспределеноИзПартийОбособленно КАК РаспределеноИзПартийОбособленноИзменение
		|	ИЗ
		|		СтруктураЗаказаПередЗаписью КАК Движения
		|	ГДЕ
		|		Движения.РаспределеноИзПартий <> 0 Или Движения.РаспределеноИзПартийОбособленно <> 0
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение,
		|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура КАК КлючНоменклатура,
		|		Движения.КлючПартия КАК КлючПартия,
		|		Движения.РаспределеноИзПартий КАК РаспределеноИзПартийИзменение,
		|		Движения.РаспределеноИзПартийОбособленно КАК РаспределеноИзПартийОбособленноИзменение
		|	ИЗ
		|		СтруктураЗаказаНаборЗаписей КАК Движения
		|	ГДЕ
		|		Движения.РаспределеноИзПартий <> 0 Или Движения.РаспределеноИзПартийОбособленно <> 0) КАК ТаблицаИзменений
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад,
		|	ТаблицаИзменений.Назначение,
		|	ТаблицаИзменений.ЗаказНаПроизводство,
		|	ТаблицаИзменений.КлючНоменклатура,
		|	ТаблицаИзменений.КлючПартия
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.РаспределеноИзПартийИзменение) <> 0 Или СУММА(ТаблицаИзменений.РаспределеноИзПартийОбособленноИзменение) <> 0
		|;
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	ТаблицаИзменений.Номенклатура КАК Номенклатура,
		|	ТаблицаИзменений.Характеристика КАК Характеристика,
		|	ТаблицаИзменений.Склад КАК Склад,
		|	ТаблицаИзменений.Назначение КАК Назначение,
		|	ТаблицаИзменений.ЗаказНаПроизводство КАК ЗаказНаПроизводство
		|ИЗ
		|	(ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение,
		|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура КАК КлючНоменклатура,
		|		МАКСИМУМ(Движения.СпецификацияПолуфабриката) КАК Спецификация,
		|		-СУММА(Движения.Требуется - Движения.РаспределеноИзПартий - Движения.РаспределеноИзПартийОбособленно) КАК КоличествоИзменение
		|	ИЗ
		|		СтруктураЗаказаПередЗаписью КАК Движения
		|	СГРУППИРОВАТЬ ПО
		|		Движения.Номенклатура,
		|		Движения.Характеристика,
		|		Движения.Склад,
		|		Движения.Назначение,
		|		Движения.ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура
		|
		|	ОБЪЕДИНИТЬ ВСЕ
		|
		|	ВЫБРАТЬ
		|		Движения.Номенклатура КАК Номенклатура,
		|		Движения.Характеристика КАК Характеристика,
		|		Движения.Склад КАК Склад,
		|		Движения.Назначение КАК Назначение,
		|		Движения.ЗаказНаПроизводство КАК ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура КАК КлючНоменклатура,
		|		МАКСИМУМ(Движения.СпецификацияПолуфабриката) КАК Спецификация,
		|		СУММА(Движения.Требуется - Движения.РаспределеноИзПартий - Движения.РаспределеноИзПартийОбособленно) КАК КоличествоИзменение
		|	ИЗ
		|		СтруктураЗаказаНаборЗаписей КАК Движения
		|	СГРУППИРОВАТЬ ПО
		|		Движения.Номенклатура,
		|		Движения.Характеристика,
		|		Движения.Склад,
		|		Движения.Назначение,
		|		Движения.ЗаказНаПроизводство,
		|		Движения.КлючНоменклатура) КАК ТаблицаИзменений
		|СГРУППИРОВАТЬ ПО
		|	ТаблицаИзменений.Номенклатура,
		|	ТаблицаИзменений.Характеристика,
		|	ТаблицаИзменений.Склад,
		|	ТаблицаИзменений.Назначение,
		|	ТаблицаИзменений.ЗаказНаПроизводство,
		|	ТаблицаИзменений.КлючНоменклатура,
		|	ТаблицаИзменений.Спецификация
		|ИМЕЮЩИЕ
		|	СУММА(ТаблицаИзменений.КоличествоИзменение) <> 0
		|;
		|УНИЧТОЖИТЬ СтруктураЗаказаПередЗаписью; УНИЧТОЖИТЬ СтруктураЗаказаНаборЗаписей
		|";
		РезультатЗапроса = Запрос.ВыполнитьПакет();
		
		Если Не РезультатЗапроса[0].Пустой() Тогда
			РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаНормативныйГрафик.ДобавитьЗадания(РезультатЗапроса[0].Выгрузить());
		КонецЕсли;   
		
		Если Не РезультатЗапроса[1].Пустой() Тогда
			РегистрыСведений.ЗаданияКРасчетуСтруктурыЗаказаРаспределениеЗапасов.ДобавитьЗадания(РезультатЗапроса[1].Выгрузить());
		КонецЕсли;
		
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти
