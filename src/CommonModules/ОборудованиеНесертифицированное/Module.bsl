
#Область СлужебныйПрограммныйИнтерфейс

// Возвращает пустую таблицу зарегистрированных драйверов. 
//
// Возвращаемое значение:
//  ТаблицаЗначений   - таблица с колонками:
//   * ТипОборудования      - ОпределяемыйТип.ТипыПодключаемогоОборудования
//   * Наименование         - Строка
//   * ИдентификаторОбъекта - Строка
//   * ИмяМакетаДрайвера    - Строка
//   * ВерсияДрайвера       - Строка
//   * СнятСПоддержки       - Булево
//   * ЛокальныйРежим       - Булево
//   * СетевойРежим         - Булево
//   * СерверныйРежим       - Булево
//
Функция НоваяТаблицаНесертифицированныхДрайверов()
	
	ДрайверыОборудования = Новый ТаблицаЗначений;
	// Общие свойства.
	ДрайверыОборудования.Колонки.Добавить("ТипОборудования"     , Метаданные.ОпределяемыеТипы.ТипыПодключаемогоОборудования.Тип);
	ДрайверыОборудования.Колонки.Добавить("Наименование"        , Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	ДрайверыОборудования.Колонки.Добавить("ИдентификаторОбъекта", Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	ДрайверыОборудования.Колонки.Добавить("ИмяМакетаДрайвера"   , Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	ДрайверыОборудования.Колонки.Добавить("ВерсияДрайвера"      , Новый ОписаниеТипов("Строка", , Новый КвалификаторыСтроки(0)));
	ДрайверыОборудования.Колонки.Добавить("СнятСПоддержки"      , Новый ОписаниеТипов("Булево"));
	// Параметры работы
	ДрайверыОборудования.Колонки.Добавить("ЛокальныйРежим", Новый ОписаниеТипов("Булево"));
	ДрайверыОборудования.Колонки.Добавить("СетевойРежим"  , Новый ОписаниеТипов("Булево"));
	ДрайверыОборудования.Колонки.Добавить("СерверныйРежим", Новый ОписаниеТипов("Булево"));   
	Возврат ДрайверыОборудования;
	
	
КонецФункции

// Добавляет в список поставляемые драйверы в составе конфигурации.
// 
// Параметры:
//  ДрайвераОборудования - ТаблицаЗначений - см. МенеджерОборудования.НоваяТаблицаПоставляемыхДрайверовОборудования()
//
Процедура ЗарегистрироватьДрайверы() Экспорт
	
	ДрайверыОборудования = НоваяТаблицаНесертифицированныхДрайверов();
	ОборудованиеНесертифицированноеПереопределяемый.ЗарегистрироватьДрайверы(ДрайверыОборудования);
	Для каждого Драйвер Из ДрайверыОборудования Цикл
	
		Если Не ЗначениеЗаполнено(Драйвер.ТипОборудования) Тогда
			Драйвер.ТипОборудования =  Перечисления.ТипыПодключаемогоОборудования.Несертифицируемое;
		КонецЕсли;
	
	КонецЦикла;
	Справочники.ДрайверыОборудования.ЗарегистрироватьНесертифицированныеДрайверы(ДрайверыОборудования);
	
КонецПроцедуры

// Возвращает доступность логирования платежных операций
//
// Возвращаемое значение:
//  Булево.
//
Функция ДоступноНесертифицированноеОборудование() Экспорт
	
	Результат = Ложь;
	Доступно = Результат; 
	СтандартнаяОбработка = Истина;
	ОборудованиеНесертифицированноеПереопределяемый.ДоступноНесертифицированноеОборудование(Доступно, СтандартнаяОбработка);
	Результат = ?(СтандартнаяОбработка, Результат, Доступно);
	Возврат Результат; 
	
КонецФункции

#КонецОбласти
