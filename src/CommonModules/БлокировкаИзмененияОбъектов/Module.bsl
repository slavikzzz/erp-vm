#Область ПрограммныйИнтерфейс

// В форме нового документа выводит группу с информацией о причинах блокировки
// Вызывается из события ПриСозданииНаСервере формы объекта.
//
// Параметры:
//   УправляемаяФорма     - ФормаКлиентскогоПриложения - форма объекта.
//   Отказ                - Булево
//   СтандартнаяОбработка - Булево
//
Процедура ПриСозданииНаСервереФормыОбъекта(УправляемаяФорма, Отказ, СтандартнаяОбработка) Экспорт
	
	Если Не УправляемаяФорма.Параметры.Свойство("Ключ") Тогда
		Возврат;
	КонецЕсли;
	
	Если УправляемаяФорма.Параметры.Ключ.Пустая() Тогда
		ПроинициализироватьФормуОбъекта(УправляемаяФорма);
		Если УправляемаяФорма.ТолькоПросмотр Тогда
			БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(УправляемаяФорма, , Ложь);
		Иначе
			БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(УправляемаяФорма);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

// В форме существующего документа выводит группу с информацией о причинах блокировки
// Вызывается из события ПриЧтенииНаСервере формы объекта.
//
// Параметры:
//   УправляемаяФорма              - ФормаКлиентскогоПриложения - форма объекта.
//   ТекущийОбъект                 - ДокументОбъект - объект, который будет прочитан.
//   ДобавлятьКомандуРазблокировки - Булево.
//
Процедура ПриЧтенииНаСервереФормыОбъекта(УправляемаяФорма, ТекущийОбъект, ДобавлятьКомандуРазблокировки = Истина) Экспорт
	
	РазрешитьИзменениеОбъекта = Неопределено;
	Если Не БлокировкаИзмененияОбъектовКлиентСервер.ФормаПроинициализирована(УправляемаяФорма) Тогда
		ПроинициализироватьФормуОбъекта(УправляемаяФорма, ДобавлятьКомандуРазблокировки);
		Если УправляемаяФорма.ТолькоПросмотр Тогда
			РазрешитьИзменениеОбъекта = Ложь;
		КонецЕсли;
	КонецЕсли;
	
	ПриПомещенииДанныхВРеквизиты(УправляемаяФорма, ТекущийОбъект.Ссылка, РазрешитьИзменениеОбъекта);
	
КонецПроцедуры

// В форме документа обновляет сведения о блокировках
// Вызывается из события ПослеЗаписиНаСервере формы объекта.
//
// Параметры:
//   УправляемаяФорма     - ФормаКлиентскогоПриложения - форма объекта.
//   ТекущийОбъект        - ДокументОбъект - объект.
//   ПараметрыЗаписи      - Структура
//
Процедура ПослеЗаписиНаСервереФормыОбъекта(УправляемаяФорма, ТекущийОбъект, ПараметрыЗаписи) Экспорт
	
	ПриПомещенииДанныхВРеквизиты(УправляемаяФорма, ТекущийОбъект.Ссылка);
	
КонецПроцедуры

// В форме списка документа в меню Еще выводит команду отмены блокировки документов
// Вызывается из события ПриСозданииНаСервере формы списка.
//
// Параметры:
//   УправляемаяФорма     - ФормаКлиентскогоПриложения - форма объекта.
//   КоманднаяПанель      - ГруппаФормы - командная панель или группа команд, в которую выводится команда.
//
Процедура ПриСозданииНаСервереФормыСписка(УправляемаяФорма, КоманднаяПанель) Экспорт
	
	ВывестиКомандуРазблокировкиОбъектовДляИзменения(УправляемаяФорма, КоманднаяПанель);
	
КонецПроцедуры

// Открывает для просмотра форму списка независимого регистра сведений. Для полноправного пользователя в меню Еще выводит команду разблокировки.
// Вызывается из события ПриСозданииНаСервере формы списка.
//
// Параметры:
//   УправляемаяФорма     - ФормаКлиентскогоПриложения - форма объекта.
//   КоманднаяПанель      - ГруппаФормы - командная панель или группа команд, в которую выводится команда.
//
Процедура ПриСозданииНаСервереЗаблокированнойФормыСписка(УправляемаяФорма, КоманднаяПанель) Экспорт
	
	УправляемаяФорма.ТолькоПросмотр = Истина;
	
	Если Пользователи.ЭтоПолноправныйПользователь() Тогда
		ВывестиКомандуРазблокировкиОбъектовДляИзменения(УправляемаяФорма, КоманднаяПанель);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ПараметрыБлокировкиИзмененияОбъекта(СсылкаНаОбъект, УправляемаяФорма = Неопределено) Экспорт
	
	КоллекцияБлокировок = БлокировкаИзмененияОбъектовВнутренний.ПараметрыБлокировкиИзмененияОбъекта(СсылкаНаОбъект, УправляемаяФорма);
	БлокировкаИзмененияОбъектовПереопределяемый.ДополнитьПараметрыБлокировкиИзмененияОбъекта(КоллекцияБлокировок, СсылкаНаОбъект, УправляемаяФорма);
	
	Возврат КоллекцияБлокировок;
	
КонецФункции

// Конструирует структуру описания блокировки объекта.
//
//	Параметры:
//		Идентификатор				- Строка, например - "ДатыЗапретаИзменения"
//		Описание					- Строка, например сообщение о причине невозможности редактирования документа, подсистемы ДатыЗапретаИзменения
//		ДопустимоОтключать			- Булево
//		ПояснениеОтказаОтключения	- Строка, например - "Необходимо изменить или совсем отключить дату запрета изменения данных, обратитесь к Администратору"
//
//	Возвращаемое значение:
//		Структура:
//			* Идентификатор
//			* Описание
//			* ДопустимоОтключать
//			* ПояснениеОтказаОтключения
//			* УстановитьБлокировку
//
Функция ОписаниеБлокировкиИзмененияОбъекта(Идентификатор, Описание, ДопустимоОтключать, ПояснениеОтказаОтключения = "") Экспорт
	
	БлокировкаИзмененияОбъекта = Новый Структура;
	БлокировкаИзмененияОбъекта.Вставить("Идентификатор", Идентификатор);
	БлокировкаИзмененияОбъекта.Вставить("Описание", Описание);
	БлокировкаИзмененияОбъекта.Вставить("ДопустимоОтключать", ДопустимоОтключать);
	БлокировкаИзмененияОбъекта.Вставить("ПояснениеОтказаОтключения", ПояснениеОтказаОтключения);
	БлокировкаИзмененияОбъекта.Вставить("УстановитьБлокировку", Истина);
	
	Возврат БлокировкаИзмененияОбъекта;
	
КонецФункции

Функция РазблокироватьОбъектыСписка(ОбъектыДляРазблокировки) Экспорт
	
	Обработано = 1;
	Для Каждого ОбъектДляРазблокировки Из ОбъектыДляРазблокировки Цикл
		
		Результат = КадровыйЭДО.РазблокироватьОбъектДляИзменений(ОбъектДляРазблокировки);
		Если ЗначениеЗаполнено(Результат) Тогда
			ОбщегоНазначения.СообщитьПользователю(Результат, ОбъектДляРазблокировки);
		КонецЕсли;
		
		ДлительныеОперации.СообщитьПрогресс(ПрогрессОбработки(Обработано, ОбъектыДляРазблокировки.Количество()));
		
		Обработано = Обработано + 1;
		
	КонецЦикла;
	
	Возврат Истина;
	
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура ПриПомещенииДанныхВРеквизиты(УправляемаяФорма, СсылкаНаОбъект, РазрешитьИзменениеОбъекта = Неопределено)
	
	ПараметрыБлокировки = ПараметрыБлокировкиИзмененияОбъекта(СсылкаНаОбъект, УправляемаяФорма);
	Если РазрешитьИзменениеОбъекта = Ложь Тогда
		
		НеизвестнаяБлокировка = Истина;
		Для Каждого ПараметрБлокировки Из ПараметрыБлокировки Цикл
			
			Если Не ПараметрБлокировки.ДопустимоОтключать Тогда
				НеизвестнаяБлокировка = Ложь;
				Прервать;
			КонецЕсли;
			
		КонецЦикла;
		
		Если НеизвестнаяБлокировка Тогда
			ПараметрыБлокировки.Вставить(0,
				ОписаниеБлокировкиИзмененияОбъекта(
					"НеизвестнаяБлокировка",
					НСтр("ru = 'Неизвестная причина блокировки';
						|en = 'Unknown lock reason'"),
					Ложь,
					НСтр("ru = 'Неизвестная причина блокировки, обратитесь к Администратору.';
						|en = 'Unknown lock reason. Contact the administrator.'")));
		КонецЕсли;
		
	КонецЕсли;
	
	УправляемаяФорма.ПараметрыБлокировкиИзмененияОбъекта = Новый ФиксированныйМассив(ПараметрыБлокировки);
	
	БлокировкаИзмененияОбъектовКлиентСервер.ОбновитьГруппуБлокировкиИзмененияОбъекта(УправляемаяФорма, , РазрешитьИзменениеОбъекта);
	
КонецПроцедуры

Процедура ПроинициализироватьФормуОбъекта(УправляемаяФорма, ДобавлятьКомандуРазблокировки = Истина)
	
	ДобавитьРеквизитПараметрыБлокировкиИзмененияОбъекта(УправляемаяФорма);
	ДобавитьГруппуБлокировкаИзмененияОбъектаРасшифровки(УправляемаяФорма);
	ДобавитьКомандуРазблокированияФормыОбъекта(УправляемаяФорма, ДобавлятьКомандуРазблокировки);
	
КонецПроцедуры

Функция ПрогрессОбработки(Обработано, Всего)
	Возврат Макс(5, Окр(Обработано / Всего * 100));
КонецФункции

Процедура ДобавитьРеквизитПараметрыБлокировкиИзмененияОбъекта(УправляемаяФорма)
	
	Если БлокировкаИзмененияОбъектовКлиентСервер.ФормаПроинициализирована(УправляемаяФорма) Тогда
		Возврат;
	КонецЕсли;
	
	ДобавляемыеРеквизиты = Новый Массив;
	ДобавляемыеРеквизиты.Добавить(Новый РеквизитФормы("ПараметрыБлокировкиИзмененияОбъекта", Новый ОписаниеТипов()));
	
	СуществующиеРеквизиты = Новый Массив;
	ЗарплатаКадры.ЗаполнитьМассивИменРеквизитовФормы(УправляемаяФорма, СуществующиеРеквизиты);
	
	ЗарплатаКадры.ИзменитьРеквизитыФормы(УправляемаяФорма, ДобавляемыеРеквизиты, СуществующиеРеквизиты);
	
КонецПроцедуры

Процедура ДобавитьГруппуБлокировкаИзмененияОбъектаРасшифровки(УправляемаяФорма)
	
	БлокировкаИзмененияОбъектаРасшифровкиГруппа = УправляемаяФорма.Элементы.Найти("БлокировкаИзмененияОбъектаРасшифровкиГруппа");
	Если БлокировкаИзмененияОбъектаРасшифровкиГруппа = Неопределено Тогда
		
		БлокировкаИзмененияОбъектовГруппа = УправляемаяФорма.Элементы.Вставить("БлокировкаИзмененияОбъектовГруппа",
			Тип("ГруппаФормы"), УправляемаяФорма, УправляемаяФорма.ПодчиненныеЭлементы.Получить(0));
		
		БлокировкаИзмененияОбъектовГруппа.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
		БлокировкаИзмененияОбъектовГруппа.Заголовок                = НСтр("ru = 'Блокировка изменения объектов (группа)';
																			|en = 'Object change lock (group)'");
		БлокировкаИзмененияОбъектовГруппа.ОтображатьЗаголовок      = Ложь;
		БлокировкаИзмененияОбъектовГруппа.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
		БлокировкаИзмененияОбъектовГруппа.РастягиватьПоГоризонтали = Истина;
		БлокировкаИзмененияОбъектовГруппа.ЦветФона                 = ЦветаСтиля.ФонУправляющегоПоля;
		
		БлокировкаИзмененияОбъектовКартинка = УправляемаяФорма.Элементы.Добавить("БлокировкаИзмененияОбъектовКартинка",
			Тип("ДекорацияФормы"), БлокировкаИзмененияОбъектовГруппа);
		
		БлокировкаИзмененияОбъектовКартинка.Заголовок      = НСтр("ru = 'Блокировка изменения объектов (картинка)';
																	|en = 'Object change lock (picture)'");
		БлокировкаИзмененияОбъектовКартинка.Вид            = ВидДекорацииФормы.Картинка;
		БлокировкаИзмененияОбъектовКартинка.Картинка       = БиблиотекаКартинок.Информация32;
		БлокировкаИзмененияОбъектовКартинка.РазмерКартинки = РазмерКартинки.РеальныйРазмер;
		
		БлокировкаИзмененияОбъектовПредупреждениеГруппа = УправляемаяФорма.Элементы.Добавить("БлокировкаИзмененияОбъектовПредупреждениеГруппа",
			Тип("ГруппаФормы"), БлокировкаИзмененияОбъектовГруппа);
		
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.Заголовок                = НСтр("ru = 'Блокировка изменения объектов (группа предупреждений)';
																						|en = 'Objects change lock (warning group)'");
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.ОтображатьЗаголовок      = Ложь;
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.РастягиватьПоГоризонтали = Истина;
		БлокировкаИзмененияОбъектовПредупреждениеГруппа.ВертикальныйИнтервал     = ИнтервалМеждуЭлементамиФормы.Половинный;
		
		ПояснениеДекорация = УправляемаяФорма.Элементы.Добавить(БлокировкаИзмененияОбъектовПредупреждениеГруппа.Имя + "_Пояснение",
			Тип("ДекорацияФормы"), БлокировкаИзмененияОбъектовПредупреждениеГруппа);
		
		ПояснениеДекорация.Вид = ВидДекорацииФормы.Надпись;
		ПояснениеДекорация.Заголовок = НСтр("ru = 'Документ не редактируется.';
											|en = 'The document is not being edited.'");
		ПояснениеДекорация.АвтоМаксимальнаяШирина = Ложь;
		
		БлокировкаИзмененияОбъектаРасшифровкиГруппа = УправляемаяФорма.Элементы.Добавить("БлокировкаИзмененияОбъектаРасшифровкиГруппа",
			Тип("ГруппаФормы"), БлокировкаИзмененияОбъектовПредупреждениеГруппа);
		
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Заголовок                = НСтр("ru = 'Причины блокировки формы';
																					|en = 'Form locking reasons'");
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.ОтображатьЗаголовок      = Ложь;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.Вертикальная;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.РастягиватьПоГоризонтали = Истина;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.ВертикальныйИнтервал     = ИнтервалМеждуЭлементамиФормы.Половинный;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Отображение              = ОтображениеОбычнойГруппы.Нет;
		
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.ОтображатьЗаголовок      = Истина;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.ОтображатьОтступСлева    = Ложь;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Поведение                = ПоведениеОбычнойГруппы.Всплывающая;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.ОтображениеУправления    = ОтображениеУправленияОбычнойГруппы.ГиперссылкаЗаголовка;
		БлокировкаИзмененияОбъектаРасшифровкиГруппа.Скрыть();
		
		Для ИдентификаторБлокировки = 1 По 10 Цикл
			
			ИмяГруппыРасшифровки = БлокировкаИзмененияОбъектаРасшифровкиГруппа.Имя + "_" + Формат(ИдентификаторБлокировки, "ЧН=; ЧГ=");
			
			РасшифровкаГруппа = УправляемаяФорма.Элементы.Добавить(
				ИмяГруппыРасшифровки,
				Тип("ГруппаФормы"), БлокировкаИзмененияОбъектаРасшифровкиГруппа);
			
			РасшифровкаГруппа.Вид                      = ВидГруппыФормы.ОбычнаяГруппа;
			РасшифровкаГруппа.Заголовок                = НСтр("ru = 'Блокировка изменения объектов (группа расшифровки';
																|en = 'Object change lock (decryption group'")
				+ " [" + Формат(ИдентификаторБлокировки, "ЧН=; ЧГ=") + "]";
			
			РасшифровкаГруппа.ОтображатьЗаголовок      = Ложь;
			РасшифровкаГруппа.Группировка              = ГруппировкаПодчиненныхЭлементовФормы.ГоризонтальнаяВсегда;
			РасшифровкаГруппа.РастягиватьПоГоризонтали = Истина;
			
			НомерДекорация = УправляемаяФорма.Элементы.Добавить(ИмяГруппыРасшифровки + "_Номер",
				Тип("ДекорацияФормы"), РасшифровкаГруппа);
			
			НомерДекорация.Заголовок = Новый ФорматированнаяСтрока("• ");
			НомерДекорация.Вид = ВидДекорацииФормы.Надпись;
			
			ОписаниеДекорация = УправляемаяФорма.Элементы.Добавить(ИмяГруппыРасшифровки + "_Надпись",
				Тип("ДекорацияФормы"), РасшифровкаГруппа);
			
			ОписаниеДекорация.Вид = ВидДекорацииФормы.Надпись;
			ОписаниеДекорация.АвтоМаксимальнаяШирина = Ложь;
			
		КонецЦикла;
		
		ЕщеДекорация = УправляемаяФорма.Элементы.Добавить(БлокировкаИзмененияОбъектаРасшифровкиГруппа.Имя + "_Еще",
			Тип("ДекорацияФормы"), БлокировкаИзмененияОбъектаРасшифровкиГруппа);
		
		ЕщеДекорация.Вид = ВидДекорацииФормы.Надпись;
		ЕщеДекорация.Заголовок = НСтр("ru = 'Еще %1 причин';
										|en = 'More %1 reasons'");
		ЕщеДекорация.ОтображениеПодсказки = ОтображениеПодсказки.Кнопка;
		ЕщеДекорация.АвтоМаксимальнаяШирина = Ложь;
		
	КонецЕсли;
	
КонецПроцедуры

// Добавляет на управляемую форму команду перевода формы из режима ТолькоПросмотр
// для изменения объекта.
//
// Параметры:
//		УправляемаяФорма				- ФормаКлиентскогоПриложения
//		ДобавлятьКомандуРазблокировки	- Булево
//
Процедура ДобавитьКомандуРазблокированияФормыОбъекта(УправляемаяФорма, ДобавлятьКомандуРазблокировки = Истина)
	
	Если Не ДобавлятьКомандуРазблокировки Тогда
		Возврат;
	КонецЕсли;
	
	РазблокироватьФормуДляИзмененияОбъекта = УправляемаяФорма.Команды.Найти("РазблокироватьФормуДляИзмененияОбъекта");
	Если РазблокироватьФормуДляИзмененияОбъекта = Неопределено Тогда
		
		РазблокироватьФормуДляИзмененияОбъекта = УправляемаяФорма.Команды.Добавить("РазблокироватьФормуДляИзмененияОбъекта");
		РазблокироватьФормуДляИзмененияОбъекта.Заголовок = НСтр("ru = 'Разблокировать форму';
																|en = 'Unlock the form'");
		РазблокироватьФормуДляИзмененияОбъекта.Действие  = "Подключаемый_РазблокироватьФормуОбъекта";
		РазблокироватьФормуДляИзмененияОбъекта.Картинка  = БиблиотекаКартинок.РазблокироватьФормуОбъекта;
		
		КнопкаРазблокироватьФормуДляИзмененияОбъекта = УправляемаяФорма.Элементы.Добавить(РазблокироватьФормуДляИзмененияОбъекта.Имя,
			Тип("КнопкаФормы"), УправляемаяФорма.КоманднаяПанель);
		
		КнопкаРазблокироватьФормуДляИзмененияОбъекта.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		КнопкаРазблокироватьФормуДляИзмененияОбъекта.ИмяКоманды = РазблокироватьФормуДляИзмененияОбъекта.Имя;
		КнопкаРазблокироватьФормуДляИзмененияОбъекта.ТолькоВоВсехДействиях = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ВывестиКомандуРазблокировкиОбъектовДляИзменения(УправляемаяФорма, КоманднаяПанель)
	
	РазблокироватьОбъектыДляИзменения = УправляемаяФорма.Команды.Найти("РазблокироватьОбъектыДляИзменения");
	Если РазблокироватьОбъектыДляИзменения = Неопределено Тогда
		
		РазблокироватьОбъектыДляИзменения = УправляемаяФорма.Команды.Добавить("РазблокироватьОбъектыДляИзменения");
		РазблокироватьОбъектыДляИзменения.Заголовок = НСтр("ru = 'Разблокировать объекты';
															|en = 'Unlock objects'");
		РазблокироватьОбъектыДляИзменения.Действие  = "Подключаемый_РазблокироватьОбъекты";
		РазблокироватьОбъектыДляИзменения.Картинка  = БиблиотекаКартинок.РазблокироватьФормуОбъекта;
		
		КнопкаРазблокироватьОбъектыДляИзменения = УправляемаяФорма.Элементы.Добавить(РазблокироватьОбъектыДляИзменения.Имя,
			Тип("КнопкаФормы"), КоманднаяПанель);
		
		КнопкаРазблокироватьОбъектыДляИзменения.Вид = ВидКнопкиФормы.КнопкаКоманднойПанели;
		КнопкаРазблокироватьОбъектыДляИзменения.ИмяКоманды = РазблокироватьОбъектыДляИзменения.Имя;
		КнопкаРазблокироватьОбъектыДляИзменения.ТолькоВоВсехДействиях = Истина;
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

