#Если Сервер Или ТолстыйКлиентОбычноеПриложение Или ВнешнееСоединение Тогда

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПроверкаПревышенияПлановогоОкладаСотрудников(Проверка, ПараметрыПроверки) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = РезультатПроверкиПревышенияПлановогоОкладаСотрудников();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("ФизическоеЛицо") Цикл
		МодульКонтрольВеденияУчета = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчета");
		Проблема = МодульКонтрольВеденияУчета.ОписаниеПроблемы(Выборка.Сотрудник, ПараметрыПроверки);
		Проблема.УточнениеПроблемы = НСтр("ru = 'Начисленный оклад превышает размер планового.';
											|en = 'The accrued salary exceeds the planned one.'");
		УстановитьПривилегированныйРежим(Истина);
		КонтрольВеденияУчетаБЗК.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЦикла;
	
КонецПроцедуры

Процедура ПроверкаИныхНачисленийВОтпускеПоУходуЗаРебенком(Проверка, ПараметрыПроверки) Экспорт
	
	Если Не ОбщегоНазначения.ПодсистемаСуществует("СтандартныеПодсистемы.КонтрольВеденияУчета") Тогда
		Возврат;
	КонецЕсли;
	
	УстановитьПривилегированныйРежим(Истина);
	Результат = РезультатПроверкиИныхНачисленийВОтпускеПоУходуЗаРебенком();
	УстановитьПривилегированныйРежим(Ложь);
	
	Если Результат.Пустой() Тогда
		Возврат;
	КонецЕсли;
	
	Выборка = Результат.Выбрать();
	Пока Выборка.СледующийПоЗначениюПоля("Сотрудник") Цикл
		МодульКонтрольВеденияУчета = ОбщегоНазначения.ОбщийМодуль("КонтрольВеденияУчета");
		СостояниеВПредложномПадеже = СклонениеПредставленийОбъектов.ПросклонятьПредставление(Выборка.Состояние, 6);
		Проблема = МодульКонтрольВеденияУчета.ОписаниеПроблемы(Выборка.Сотрудник, ПараметрыПроверки);
		Проблема.ВажностьПроблемы = Перечисления["ВажностьПроблемыУчета"].Предупреждение;
		Проблема.УточнениеПроблемы = СтроковыеФункцииКлиентСервер.ПодставитьПараметрыВСтроку(
			НСтр("ru = 'Сотрудник, находящийся в %1, имеет иные начисления.';
				|en = 'The employee who is on %1 has other accruals.'"),
			СостояниеВПредложномПадеже);
		УстановитьПривилегированныйРежим(Истина);
		КонтрольВеденияУчетаБЗК.ЗаписатьПроблему(Проблема, ПараметрыПроверки);
		УстановитьПривилегированныйРежим(Ложь);
	КонецЦикла;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Функция РезультатПроверкиПревышенияПлановогоОкладаСотрудников()
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	Запрос.УстановитьПараметр("ТекущийРасчетныйМесяц", ЗарплатаКадрыБазовый.РасчетныйМесяц(ТекущаяДатаСеанса()));
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияУдержанияПоСотрудникам.ФизическоеЛицо КАК ФизическоеЛицо,
		|	НачисленияУдержанияПоСотрудникам.Сотрудник КАК Сотрудник,
		|	НачисленияУдержанияПоСотрудникам.ДатаНачала КАК Период
		|ПОМЕСТИТЬ ВТСотрудникиСОкладом
		|ИЗ
		|	РегистрНакопления.НачисленияУдержанияПоСотрудникам КАК НачисленияУдержанияПоСотрудникам
		|ГДЕ
		|	НАЧАЛОПЕРИОДА(НачисленияУдержанияПоСотрудникам.Период, МЕСЯЦ) = &ТекущийРасчетныйМесяц
		|	И НачисленияУдержанияПоСотрудникам.ГруппаНачисленияУдержанияВыплаты = ЗНАЧЕНИЕ(Перечисление.ГруппыНачисленияУдержанияВыплаты.Начислено)";
	
	Запрос.Выполнить();
	
	ОписательВременныхТаблиц = КадровыйУчет.ОписательВременныхТаблицДляСоздатьВТКадровыеДанныеСотрудников(
		Запрос.МенеджерВременныхТаблиц,
		"ВТСотрудникиСОкладом");
	КадровыйУчет.СоздатьВТКадровыеДанныеСотрудников(ОписательВременныхТаблиц, Истина,
		"ТарифнаяСтавка, ОсновноеНачисление, ПоказательТарифнойСтавки");
	
	Запрос.Текст =
		"ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо,
		|	СУММА(Начисления.Результат) КАК Начисление
		|ПОМЕСТИТЬ ВТСуммаОсновныхНачисленийСотрудников
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадровыеДанныеСотрудников.Период = Начисления.ПериодДействияНачало
		|			И КадровыеДанныеСотрудников.Сотрудник = Начисления.Сотрудник
		|			И КадровыеДанныеСотрудников.ОсновноеНачисление = Начисления.ВидРасчета
		|
		|СГРУППИРОВАТЬ ПО
		|	КадровыеДанныеСотрудников.Сотрудник,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	КадровыеДанныеСотрудников.Сотрудник КАК Сотрудник,
		|	КадровыеДанныеСотрудников.ФизическоеЛицо КАК ФизическоеЛицо
		|ИЗ
		|	ВТКадровыеДанныеСотрудников КАК КадровыеДанныеСотрудников
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТСуммаОсновныхНачисленийСотрудников КАК СуммаОсновныхНачисленийСотрудников
		|		ПО КадровыеДанныеСотрудников.Сотрудник = СуммаОсновныхНачисленийСотрудников.Сотрудник
		|			И КадровыеДанныеСотрудников.ТарифнаяСтавка < СуммаОсновныхНачисленийСотрудников.Начисление
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрРасчета.Начисления КАК Начисления
		|		ПО КадровыеДанныеСотрудников.Период = Начисления.ПериодДействияНачало
		|			И КадровыеДанныеСотрудников.Сотрудник = Начисления.Сотрудник
		|			И КадровыеДанныеСотрудников.ОсновноеНачисление = Начисления.ВидРасчета
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ РегистрСведений.ЗначенияПоказателейНачислений КАК ЗначенияПоказателейНачислений
		|		ПО (Начисления.Регистратор = ЗначенияПоказателейНачислений.РегистраторИзмерение)
		|			И (Начисления.ИдентификаторСтроки = ЗначенияПоказателейНачислений.ИдентификаторСтроки)
		|			И КадровыеДанныеСотрудников.ПоказательТарифнойСтавки = ЗначенияПоказателейНачислений.Показатель
		|			И КадровыеДанныеСотрудников.ТарифнаяСтавка < ЗначенияПоказателейНачислений.Значение
		|
		|УПОРЯДОЧИТЬ ПО
		|	ФизическоеЛицо";
	
	РезультатЗапроса = Запрос.Выполнить();
	
	Возврат РезультатЗапроса;
	
КонецФункции

Функция РезультатПроверкиИныхНачисленийВОтпускеПоУходуЗаРебенком()
	
	ТекущийМесяц = ЗарплатаКадрыБазовый.РасчетныйМесяц(ТекущаяДатаСеанса());
	
	МенеджерВТ = Новый МенеджерВременныхТаблиц;
	
	Состояния = ОбщегоНазначенияБЗККлиентСервер.ЗначенияВМассиве(
		Перечисления.СостоянияСотрудника.ОтпускПоУходуЗаРебенком,
		Перечисления.СостоянияСотрудника.ОтпускПоБеременностиИРодам);
	СостоянияСотрудников.СоздатьВТСостоянияСотрудников(МенеджерВТ, , Состояния, ТекущийМесяц, КонецМесяца(ТекущийМесяц));
	
	Запрос = Новый Запрос;
	Запрос.МенеджерВременныхТаблиц = МенеджерВТ;
	Запрос.УстановитьПараметр("ТекущийРасчетныйМесяц", ТекущийМесяц);
	Запрос.УстановитьПараметр("ПособияПоУходуЗаРебенком", ПланыВидовРасчета.Начисления.КатегорииПособийПоУходуЗаРебенком());
	Запрос.УстановитьПараметр("ОтпускаПоБеременностиИРодам", ПланыВидовРасчета.Начисления.КатегорииОтпускаПоБеременностиИРодам());
	Запрос.УстановитьПараметр("МатериальнаяПомощь", ПланыВидовРасчета.Начисления.КатегорииМатериальнойПомощи());
	Запрос.Текст =
		"ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	НачисленияФПД.Сотрудник КАК Сотрудник,
		|	НачисленияФПД.ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени КАК КатегорияНачисления,
		|	НачисленияФПД.ПериодДействияНачало КАК Начало,
		|	НачисленияФПД.ПериодДействияКонец КАК Окончание
		|ПОМЕСТИТЬ ВТНачисления
		|ИЗ
		|	РегистрРасчета.Начисления.ФактическийПериодДействия(
		|			Сотрудник В
		|					(ВЫБРАТЬ
		|						Сотрудники.Сотрудник
		|					ИЗ
		|						ВТСостоянияСотрудников КАК Сотрудники)
		|				И НЕ ВидРасчета.КатегорияНачисленияИлиНеоплаченногоВремени В (&МатериальнаяПомощь)
		|				И ПериодРегистрации = &ТекущийРасчетныйМесяц) КАК НачисленияФПД
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	СостоянияСотрудников.Сотрудник КАК Сотрудник,
		|	СостоянияСотрудников.Состояние КАК Состояние,
		|	СостоянияСотрудников.Начало КАК Начало,
		|	ВЫБОР
		|		КОГДА СостоянияСотрудников.Окончание = ДАТАВРЕМЯ(1, 1, 1)
		|			ТОГДА ДАТАВРЕМЯ(3999, 12, 31)
		|		ИНАЧЕ СостоянияСотрудников.Окончание
		|	КОНЕЦ КАК Окончание
		|ПОМЕСТИТЬ ВТСкорректированныеСостояния
		|ИЗ
		|	ВТСостоянияСотрудников КАК СостоянияСотрудников
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиСИнымиНачислениями.Сотрудник КАК Сотрудник,
		|	СотрудникиСИнымиНачислениями.Состояние КАК Состояние
		|ИЗ
		|	ВТСкорректированныеСостояния КАК СотрудникиСИнымиНачислениями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
		|		ПО СотрудникиСИнымиНачислениями.Сотрудник = Начисления.Сотрудник
		|			И (Начисления.Начало < СотрудникиСИнымиНачислениями.Окончание)
		|			И (Начисления.Окончание > СотрудникиСИнымиНачислениями.Начало)
		|			И (СотрудникиСИнымиНачислениями.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоУходуЗаРебенком))
		|			И (НЕ Начисления.КатегорияНачисления В (&ПособияПоУходуЗаРебенком))
		|
		|ОБЪЕДИНИТЬ ВСЕ
		|
		|ВЫБРАТЬ РАЗЛИЧНЫЕ
		|	СотрудникиСИнымиНачислениями.Сотрудник,
		|	СотрудникиСИнымиНачислениями.Состояние
		|ИЗ
		|	ВТСкорректированныеСостояния КАК СотрудникиСИнымиНачислениями
		|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВТНачисления КАК Начисления
		|		ПО СотрудникиСИнымиНачислениями.Сотрудник = Начисления.Сотрудник
		|			И (Начисления.Начало < СотрудникиСИнымиНачислениями.Окончание)
		|			И (Начисления.Окончание > СотрудникиСИнымиНачислениями.Начало)
		|			И (СотрудникиСИнымиНачислениями.Состояние = ЗНАЧЕНИЕ(Перечисление.СостоянияСотрудника.ОтпускПоБеременностиИРодам))
		|			И (НЕ Начисления.КатегорияНачисления В (&ОтпускаПоБеременностиИРодам))
		|
		|УПОРЯДОЧИТЬ ПО
		|	Сотрудник,
		|	Состояние";
	
	Возврат Запрос.Выполнить();
	
КонецФункции

#КонецОбласти

#КонецЕсли