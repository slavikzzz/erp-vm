////////////////////////////////////////////////////////////////////////////////
// Процедуры, используемые для локализации документа "Списание ОС".
// 
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#Область Проведение

// Описывает учетные механизмы используемые в документе для регистрации в механизме проведения.
//
// Параметры:
//  МеханизмыДокумента - Массив - список имен учетных механизмов, для которых будет выполнена
//              регистрация в механизме проведения.
//
Процедура ЗарегистрироватьУчетныеМеханизмы(МеханизмыДокумента) Экспорт
	
	//++ Локализация
	МеханизмыДокумента.Добавить("РегламентированныйУчет");
	МеханизмыДокумента.Добавить("ПрослеживаемостьИмпортныхТоваров");
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

#Область ОбработчикиСобытий

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый документ.
//  Отказ - Булево - Признак проведения документа.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то проведение документа выполнено не будет.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ОбработкаПроведения(Объект, Отказ, РежимПроведения) Экспорт
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то будет выполнен отказ от продолжения работы после выполнения проверки заполнения.
//  ПроверяемыеРеквизиты - Массив - Массив путей к реквизитам, для которых будет выполнена проверка заполнения.
//
Процедура ОбработкаПроверкиЗаполнения(Объект, Отказ, ПроверяемыеРеквизиты) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект.
//  ДанныеЗаполнения - Произвольный - Значение, которое используется как основание для заполнения.
//  ТекстЗаполнения - Строка, Неопределено - Текст, используемый для заполнения документа. 
//  СтандартнаяОбработка - Булево - В данный параметр передается признак выполнения стандартной (системной) обработки события.
//
Процедура ОбработкаЗаполнения(Объект, ДанныеЗаполнения, ТекстЗаполнения, СтандартнаяОбработка) Экспорт
	
	ТипДанныхЗаполнения = ТипЗнч(ДанныеЗаполнения);
	
	//++ Локализация
	
	Если ТипДанныхЗаполнения = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения);
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//
Процедура ОбработкаУдаленияПроведения(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина,
//                   то запись выполнена не будет и будет вызвано исключение.
//  РежимЗаписи - РежимЗаписиДокумента - В параметр передается текущий режим записи документа. Позволяет определить в теле процедуры режим записи.
//  РежимПроведения - РежимПроведенияДокумента - В данный параметр передается текущий режим проведения.
//
Процедура ПередЗаписью(Объект, Отказ, РежимЗаписи, РежимПроведения) Экспорт
	
	//++ Локализация

	Если Объект.ХозяйственнаяОперация = Перечисления.ХозяйственныеОперации.СписаниеОС Тогда
		Если РежимЗаписи = РежимЗаписиДокумента.ОтменаПроведения Тогда
			Объект.ДополнительныеСвойства.Вставить("КонтролироватьСписаниеВНоль", Ложь);
		Иначе
			Объект.ДополнительныеСвойства.Вставить("КонтролироватьСписаниеВНоль", Истина);
		КонецЕсли; 
	КонецЕсли;

	//-- Локализация
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  Отказ - Булево - Признак отказа от записи.
//                   Если в теле процедуры-обработчика установить данному параметру значение Истина, то запись выполнена не будет и будет вызвано исключение.
//
Процедура ПриЗаписи(Объект, Отказ) Экспорт
	
	
КонецПроцедуры

// Вызывается из соответствующего обработчика документа
//
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Обрабатываемый объект
//  ОбъектКопирования - ДокументОбъект.СписаниеОС2_4 - Исходный документ, который является источником копирования.
//
Процедура ПриКопировании(Объект, ОбъектКопирования) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

#Область ПодключаемыеКоманды

// Определяет список команд создания на основании.
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//  Параметры - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.Параметры
//
Процедура ДобавитьКомандыСозданияНаОсновании(КомандыСозданияНаОсновании, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команду создания документа "Авансовый отчет".
//
// Параметры:
//  КомандыСозданияНаОсновании - см. СозданиеНаОснованииПереопределяемый.ПередДобавлениемКомандСозданияНаОсновании.КомандыСозданияНаОсновании
//
Процедура ДобавитьКомандуСоздатьНаОсновании(КомандыСозданияНаОсновании) Экспорт


КонецПроцедуры

// Определяет список команд отчетов.
//
// Параметры:
//   КомандыОтчетов - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.КомандыОтчетов
//   Параметры - См. ВариантыОтчетовПереопределяемый.ПередДобавлениемКомандОтчетов.Параметры
//
Процедура ДобавитьКомандыОтчетов(КомандыОтчетов, Параметры) Экспорт
	
	
КонецПроцедуры

// Добавляет команды печати.
// 
// Параметры:
// 	КомандыПечати - см. УправлениеПечатью.СоздатьКоллекциюКомандПечати
Процедура ДобавитьКомандыПечати(КомандыПечати) Экспорт
	
	//++ Локализация
	
	// ОС-4 (Акт о списании ОС)
	КомандаПечати = КомандыПечати.Добавить();
	КомандаПечати.МенеджерПечати = "Обработка.ПечатьОС4";
	КомандаПечати.Идентификатор = "ОС4";
	КомандаПечати.Представление = НСтр("ru = 'ОС-4 (Акт о списании ОС)';
										|en = 'FA-4 (FA retirement certificate)'");
	КомандаПечати.ФункциональныеОпции = "ИспользоватьРеглУчет";

	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область Печать

// Формирует печатные формы.
//
// Параметры:
//  МассивОбъектов  - Массив    - ссылки на объекты, которые нужно распечатать;
//  ПараметрыПечати - Структура - дополнительные настройки печати;
//  КоллекцияПечатныхФорм - ТаблицаЗначений - сформированные табличные документы (выходной параметр)
//  ОбъектыПечати         - СписокЗначений  - значение - ссылка на объект;
//                                            представление - имя области в которой был выведен объект (выходной параметр);
//  ПараметрыВывода       - Структура       - дополнительные параметры сформированных табличных документов (выходной параметр).
//
Процедура Печать(МассивОбъектов, ПараметрыПечати, КоллекцияПечатныхФорм, ОбъектыПечати, ПараметрыВывода) Экспорт
	
	
КонецПроцедуры

#КонецОбласти

//++ НЕ УТ
#Область ПроводкиРегУчета

// Функция возвращает текст запроса для отражения документа в регламентированном учете.
//
// Возвращаемое значение:
//	Строка - Текст запроса
//
Функция ТекстОтраженияВРеглУчете() Экспорт
	
	ТекстЗапроса = "";
	
	//++ Локализация
	СписокЗапросов = Новый Массив;
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеСписанияОС(СписокЗапросов);
	ВнеоборотныеАктивыЛокализация.ТекстОтраженияВРеглУчетеЗакрытияРасходовОтВыбытияОС(СписокЗапросов);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначенияУТ.РазделительЗапросовВОбъединении());
	//-- Локализация
	
	Возврат ТекстЗапроса;
	
КонецФункции

#КонецОбласти
//-- НЕ УТ

#Область Проведение

//
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
Процедура ТаблицыОтложенногоФормированияДвижений(ТекстыЗапроса) Экспорт

	//++ Локализация
	
	ТекстЗапросаПрочиеДоходы(ТекстыЗапроса);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Неопределено);
	
	//-- Локализация
	
КонецПроцедуры

// Процедура дополняет тексты запросов проведения документа.
//
// Параметры:
//  Запрос - Запрос - Общий запрос проведения документа.
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
//  Регистры - Строка, Структура - Список регистров проведения документа через запятую или в ключах структуры.
//
Процедура ДополнитьТекстыЗапросовПроведения(Запрос, ТекстыЗапроса, Регистры) Экспорт
	
	//++ Локализация
	
	ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры);
	ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры);
	
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаОтражениеДокументовВРеглУчете(ТекстыЗапроса, Регистры);
	
	//-- Локализация
	
КонецПроцедуры

Процедура ДополнитьБлокировкуДанныхПриПроведении(Объект, Блокировка) Экспорт

	//++ Локализация
	
	ЭлементБлокировки = Блокировка.Добавить("РегистрСведений.ПараметрыЦелевогоФинансированияОС");
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = Объект.ОС;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("ОсновноеСредство", "ОсновноеСредство");
	
	//-- Локализация
	
КонецПроцедуры

//
// Параметры:
//  ТекстыЗапроса - СписокЗначений - Список текстов запроса проведения.
// 
// Возвращаемое значение:
// 	Строка, Неопределено -
//
Функция ТекстЗапросаТаблицаВтТаблицаОС(ТекстыЗапроса) Экспорт

	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПорядокУчетаОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтМестонахождениеОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтПервоначальныеСведенияОС(ТекстыЗапроса);
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтУзлыКомпонентыАмортизации(ТекстыЗапроса);
	ВнеоборотныеАктивыЛокализация.ТекстЗапросаТаблицаВтПараметрыЦелевогоФинансированияОС(ТекстыЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаОС.Ссылка                       КАК Ссылка,
	|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
	|	ТаблицаОС.ОсновноеСредство             КАК ОсновноеСредство,
	|	ЗНАЧЕНИЕ(Справочник.ОбъектыЭксплуатации.ПустаяСсылка) КАК ОСВладелец,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
	|
	|	МестонахождениеОС.Организация          КАК Организация,
	|	МестонахождениеОС.МОЛ                  КАК МОЛ,
	|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.Арендатор            КАК Арендатор,
	|
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	ПараметрыЦелевогоФинансированияОС.СтатьяДоходов    КАК СтатьяДоходов,
	|	ПараметрыЦелевогоФинансированияОС.АналитикаДоходов КАК АналитикаДоходов,
	|
	|	ТаблицаОС.СуммаСписанияУУ              КАК СуммаСписанияУУ,
	|	ТаблицаОС.СуммаСписанияБУ              КАК СуммаСписанияБУ,
	|	ТаблицаОС.СуммаСписанияНУ              КАК СуммаСписанияНУ,
	|	ТаблицаОС.СуммаСписанияПР              КАК СуммаСписанияПР,
	|	ТаблицаОС.СуммаСписанияВР              КАК СуммаСписанияВР,
	|	
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторСтроки
	|	
	|ПОМЕСТИТЬ втТаблицаОС
	|
	|ИЗ
	|	ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
	|		ПО ТаблицаОС.ОсновноеСредство = ПорядокУчета.ОсновноеСредство
	|		И ТаблицаОС.Ссылка = ПорядокУчета.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
	|		ПО ТаблицаОС.ОсновноеСредство = МестонахождениеОС.ОсновноеСредство
	|		И ТаблицаОС.Ссылка = МестонахождениеОС.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|		И ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПараметрыЦелевогоФинансированияОС КАК ПараметрыЦелевогоФинансированияОС
	|		ПО ТаблицаОС.ОсновноеСредство = ПараметрыЦелевогоФинансированияОС.ОсновноеСредство
	|		И ТаблицаОС.Ссылка = ПараметрыЦелевогоФинансированияОС.Ссылка
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ТаблицаОС.Ссылка                       КАК Ссылка,
	|	ТаблицаОС.НомерСтроки                  КАК НомерСтроки,
	|	УзлыКомпоненты.УзелКомпонент           КАК ОсновноеСредство,
	|	ТаблицаОС.ОсновноеСредство             КАК ОСВладелец,
	|
	|	ПорядокУчета.ГруппаФинансовогоУчета    КАК ГруппаФинансовогоУчета,
	|	ПорядокУчета.НаправлениеДеятельности   КАК НаправлениеДеятельности,
	|	ПорядокУчета.ПоказательНаработки       КАК ПоказательНаработки,
	|	ПорядокУчета.ОбъемНаработки            КАК ОбъемНаработки,
	|
	|	МестонахождениеОС.Организация          КАК Организация,
	|	МестонахождениеОС.МОЛ                  КАК МОЛ,
	|	МестонахождениеОС.Местонахождение      КАК Местонахождение,
	|	МестонахождениеОС.АдресМестонахождения КАК АдресМестонахождения,
	|	МестонахождениеОС.Арендатор            КАК Арендатор,
	|
	|	ЕСТЬNULL(ПервоначальныеСведенияОС.ПорядокУчетаБУ, НЕОПРЕДЕЛЕНО) = ЗНАЧЕНИЕ(Перечисление.ПорядокПогашенияСтоимостиОС.НачислениеИзносаПоЕНАОФ) КАК НачислятьИзнос,
	|
	|	НЕОПРЕДЕЛЕНО                           КАК СтатьяДоходов,
	|	НЕОПРЕДЕЛЕНО                           КАК АналитикаДоходов,
	|
	|	0                                      КАК СуммаСписанияУУ,
	|	0                                      КАК СуммаСписанияБУ,
	|	0                                      КАК СуммаСписанияНУ,
	|	0                                      КАК СуммаСписанияПР,
	|	0                                      КАК СуммаСписанияВР,
	|	
	|	УзлыКомпоненты.ИдентификаторСтроки     КАК ИдентификаторСтроки
	|
	|ИЗ
	|	ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ВтУзлыКомпонентыАмортизации КАК УзлыКомпоненты
	|		ПО ТаблицаОС.ОсновноеСредство = УзлыКомпоненты.ОсновноеСредство
	|			И ТаблицаОС.Ссылка = УзлыКомпоненты.Ссылка
	|		
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПорядокУчетаОС КАК ПорядокУчета
	|		ПО УзлыКомпоненты.УзелКомпонент = ПорядокУчета.ОсновноеСредство
	|			И ТаблицаОС.Ссылка = ПорядокУчета.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втМестонахождениеОС КАК МестонахождениеОС
	|		ПО УзлыКомпоненты.УзелКомпонент = МестонахождениеОС.ОсновноеСредство
	|			И ТаблицаОС.Ссылка = МестонахождениеОС.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО УзлыКомпоненты.УзелКомпонент = ПервоначальныеСведенияОС.ОсновноеСредство
	|			И ТаблицаОС.Ссылка = ПервоначальныеСведенияОС.Ссылка
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Ссылка,
	|	ОсновноеСредство
	|";
	
	//-- Локализация

	Возврат ТекстЗапроса;
	
КонецФункции
 
Функция ТекстЗапросаТаблицаПервоначальныеСведенияОС() Экспорт
	
	ТекстЗапроса = Неопределено;
	
	//++ Локализация
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ДАТАВРЕМЯ(1,1,1) КАК ДатаИсправления,
	|
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС_СУчетомИсправлений КАК ДанныеРегистраПоследнее
	|		ПО ДанныеРегистраПоследнее.Ссылка = ПервоначальныеСведенияОС.Ссылка
	|			И ДанныеРегистраПоследнее.ОсновноеСредство = ПервоначальныеСведенияОС.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|
	|	И (НЕ ДанныеДокумента.СписаниеСПрошлойДаты
	|		ИЛИ ЕСТЬNULL(ДанныеРегистраПоследнее.Период, ДАТАВРЕМЯ(1,1,1)) < ДанныеДокумента.ДатаСписания)
	|
	|ОБЪЕДИНИТЬ ВСЕ
	|
	|ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.ДатаСписания КАК Период,
	|	ДанныеДокумента.Период КАК ДатаИсправления,
	|
	|	ДанныеДокумента.Организация КАК Организация,
	|	ПервоначальныеСведенияОС.ОсновноеСредство КАК ОсновноеСредство,
	|	ПервоначальныеСведенияОС.СпособПоступления КАК СпособПоступления,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокУчетаБУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаНУ КАК ПорядокУчетаНУ,
	|	ПервоначальныеСведенияОС.ПорядокУчетаУУ КАК ПорядокУчетаУУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииБУ КАК МетодНачисленияАмортизацииБУ,
	|	ПервоначальныеСведенияОС.МетодНачисленияАмортизацииНУ КАК МетодНачисленияАмортизацииНУ,
	|	ПервоначальныеСведенияОС.СтоимостьДо2002 КАК СтоимостьДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2002 КАК АмортизацияДо2002,
	|	ПервоначальныеСведенияОС.АмортизацияДо2009 КАК АмортизацияДо2009,
	|	ПервоначальныеСведенияОС.ФактическийСрокИспользованияДо2009 КАК ФактическийСрокИспользованияДо2009,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК ПервоначальнаяСтоимостьБУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьНУ КАК ПервоначальнаяСтоимостьНУ,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьУУ КАК ПервоначальнаяСтоимостьУУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюНУ КАК ДатаВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюУУ КАК ДатаВводаВЭксплуатациюУУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатациюБУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюНУ КАК ДокументВводаВЭксплуатациюНУ,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюУУ КАК ДокументВводаВЭксплуатациюУУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаБУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВРеглУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаНУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаНУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ОтражатьВУпрУчете
	|			ТОГДА ДанныеДокумента.Ссылка 
	|		ИНАЧЕ ПервоначальныеСведенияОС.ДокументСнятияСУчетаУУ
	|	КОНЕЦ КАК ДокументСнятияСУчетаУУ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ДанныеДокумента.Ссылка = ТаблицаОС.Ссылка
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ВтПервоначальныеСведенияОС_СУчетомИсправлений КАК ПервоначальныеСведенияОС
	|		ПО ПервоначальныеСведенияОС.Ссылка = ТаблицаОС.Ссылка
	|		И ПервоначальныеСведенияОС.ОсновноеСредство = ТаблицаОС.ОсновноеСредство
	|
	|ГДЕ
	|	ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И ДанныеДокумента.СписаниеСПрошлойДаты
	|";
	
	//-- Локализация
 	
 	Возврат ТекстЗапроса;
 	
КонецФункции

#КонецОбласти

#Область Заполнение

// Заполняет документ по отбору.
// 
// Параметры:
//  Объект - ДокументОбъект.СписаниеОС2_4 - Заполняемый документ.
//  Основание - Структура - Основание.
Процедура ЗаполнитьДокументПоОтбору(Объект, Основание) Экспорт

	//++ Локализация
	
	Если Основание.Свойство("ДокументОснование")
		И ТипЗнч(Основание.ДокументОснование) = Тип("ДокументСсылка.ИнвентаризацияОС") Тогда
		
		ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, Основание);
		
	КонецЕсли; 
	
	//-- Локализация
	
	Возврат;
	
КонецПроцедуры

Процедура ПолучитьПрослеживаемыеТоварыИзХранилища(Объект, АдресОстатковПрослеживаемыхТоваров) Экспорт
	
	//++ Локализация
	
	ТаблицаОстатков = ПолучитьИзВременногоХранилища(АдресОстатковПрослеживаемыхТоваров);
	ТаблицаОстатков.Колонки.Добавить("КодОперацииВыбытия");
	ТаблицаОстатков.ЗаполнитьЗначения(Справочники.КодыОперацийПрослеживаемости.ЗахоронениеОбезвреживаниеУтилизацияТовара,"КодОперацииВыбытия");
	Объект.ПрослеживаемыеТовары.Загрузить(ТаблицаОстатков);
	
	//-- Локализация
	
КонецПроцедуры

#КонецОбласти

#Область ФормаДокумента

Процедура НастроитьЗависимыеЭлементыФормы(Форма, СтруктураИзмененныхРеквизитов) Экспорт

	//++ Локализация
	
	ОбновитьВсе = СтруктураИзмененныхРеквизитов.Количество() = 0;
	
	Объект = Форма.Объект;
	
	Если СтруктураИзмененныхРеквизитов.Свойство("Дата")
		ИЛИ СтруктураИзмененныхРеквизитов.Свойство("Организация")
		ИЛИ ОбновитьВсе Тогда
		
		Форма.ПлательщикНалогаНаПрибыль = УчетнаяПолитика.ПлательщикНалогаНаПрибыль(Объект.Организация, Объект.Дата);
		
	КонецЕсли;
	
	//-- Локализация
	
КонецПроцедуры
 
#КонецОбласти

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область Проведение

//++ Локализация

Процедура ТекстЗапросаТаблицаСобытияОСОрганизаций(ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "СобытияОСОрганизаций";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат;
	КонецЕсли;
	
	Текст = 
	"ВЫБРАТЬ
	|	ДанныеДокумента.Ссылка КАК Регистратор,
	|	ДанныеДокумента.Период КАК Период,
	|	ДанныеДокумента.Организация КАК Организация,
	|	ДанныеДокумента.СобытиеОС КАК Событие,
	|	ТаблицаОС.ОсновноеСредство КАК ОсновноеСредство,
	|	&НазваниеДокумента КАК НазваниеДокумента,
	|	&НомерНаПечать КАК НомерДокумента,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|			ТОГДА ТаблицаОС.СуммаСписанияБУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗатратБУ,
	|
	|	ВЫБОР
	|		КОГДА ДанныеДокумента.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|			ТОГДА ТаблицаОС.СуммаСписанияНУ
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаЗатратНУ,
	|
	|	0 КАК СуммаЗатратУСН
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|";
	
	ТекстыЗапроса.Добавить(Текст, ИмяРегистра, Истина);
	
КонецПроцедуры

Функция ТекстЗапросаТаблицаПрослеживаемыеТоварыВСоставеОС(Запрос, ТекстыЗапроса, Регистры)
	
	ИмяРегистра = "ПрослеживаемыеТоварыВСоставеОС";
	
	Если Не ПроведениеДокументов.ТребуетсяТаблицаДляДвижений(ИмяРегистра, Регистры) Тогда
		Возврат "";
	КонецЕсли;
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ПрослеживаемыеТовары.НомерСтроки		КАК НомерСтроки,
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)	КАК ВидДвижения,
	|	ДанныеДокумента.Период					КАК Период,
	|	ДанныеДокумента.Организация				КАК Организация,
	|	ПрослеживаемыеТовары.НомерГТД			КАК РНПТ,
	|	ПрослеживаемыеТовары.ОсновноеСредство	КАК ОсновноеСредство,
	|	ПрослеживаемыеТовары.КодТНВЭД			КАК КодТНВЭД,
	|	ПрослеживаемыеТовары.КоличествоПоРНПТ	КАК КоличествоПоРНПТ
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ ДанныеДокументаТаблицаПрослеживаемыеТовары КАК ПрослеживаемыеТовары
	|		ПО ПрослеживаемыеТовары.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	ПрослеживаемыеТовары.НомерГТД.ТипНомераГТД = ЗНАЧЕНИЕ(Перечисление.ТипыНомеровГТД.НомерРНПТ)
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
	Возврат ТекстЗапроса;
		
КонецФункции

Процедура ТекстЗапросаПрочиеДоходы(ТекстыЗапроса)

	ИмяРегистра = "ПрочиеДоходы";
	
	Если ПроведениеДокументов.ЕстьТаблицаЗапроса(ИмяРегистра, ТекстыЗапроса) Тогда
		Возврат;
	КонецЕсли;
	
	ВнеоборотныеАктивыСлужебный.ТекстЗапросаТаблицаВтОстаточнаяСтоимостьОС(ТекстыЗапроса);
	
	ТекстЗапроса =
	"ВЫБРАТЬ
	|	ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход) КАК ВидДвижения,
	|	ДанныеДокумента.Ссылка                 КАК Регистратор,
	|	ДанныеДокумента.Период                 КАК Период,
	|	&ХО_СписаниеСтоимостиОС                КАК ХозяйственнаяОперация,
	|	ДанныеДокумента.Организация            КАК Организация,
	|	ДанныеДокумента.Подразделение          КАК Подразделение,
	|	ТаблицаОС.НаправлениеДеятельности      КАК НаправлениеДеятельности,
	|
	|	ТаблицаОС.СтатьяДоходов                КАК СтатьяДоходов,
	|	ТаблицаОС.АналитикаДоходов             КАК АналитикаДоходов,
	|	
	|	ТаблицаОС.Стоимость 
	|		* ТаблицаОС.СтоимостьРегл 
	|		/ ТаблицаОС.СтоимостьЦФ КАК Сумма,
	|
	|	ТаблицаОС.СтоимостьЦФ                  КАК СуммаРегл,
	|	
	|	ТаблицаОС.ИдентификаторСтроки          КАК ИдентификаторФинЗаписи,
	|	ДанныеДокумента.НастройкаХозяйственнойОперации КАК НастройкаХозяйственнойОперации
	|
	|ИЗ
	|	ДанныеДокументаРеквизиты КАК ДанныеДокумента
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОстаточнаяСтоимостьОС КАК ТаблицаОС
	|		ПО ТаблицаОС.Ссылка = ДанныеДокумента.Ссылка
	|
	|ГДЕ
	|	&ИспользоватьУчетПрочихДоходовРасходов
	|	И ДанныеДокумента.ХозяйственнаяОперация <> ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное)
	|	И ТаблицаОС.СтоимостьЦФ <> 0
	|";
	
	ТекстыЗапроса.Добавить(ТекстЗапроса, ИмяРегистра);
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#Область Печать

Функция ПолучитьДанныеДляПечатнойФормыОС4(МассивОбъектов) Экспорт
	
	//++ Локализация
	
	СписокЗапросов = Новый Массив;
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	Документ.Ссылка КАК Регистратор,
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Дата КАК Дата,
	|	Документ.Организация КАК Организация,
	|	ТабличнаяЧасть.НомерСтроки КАК НомерСтроки,
	|	ТабличнаяЧасть.ОсновноеСредство КАК ОсновноеСредство,
	|	НЕ ТабличнаяЧасть.ОсновноеСредство В (&ОбъектыДляКоторыхСведенияНеАктуальны) КАК СведенияАктуальны
	|
	|ПОМЕСТИТЬ втОбъектыДокументов
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК Документ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ Документ.СписаниеОС2_4.ОС КАК ТабличнаяЧасть
	|		ПО Документ.Ссылка = ТабличнаяЧасть.Ссылка
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	ОсновноеСредство,
	|	Организация,
	|	Дата";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"ПервоначальныеСведенияОС", "ПервоначальныеСведенияОС", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"ПорядокУчетаОСБУ", "ПорядокУчетаОСБУ", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = ВнеоборотныеАктивыСлужебный.ТекстЗапросаСрезПоследнихРегистраОС(
		"МестонахождениеОС", "МестонахождениеОС", "втОбъектыДокументов");
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	ТаблицаРегистра.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаРегистра.СтоимостьРегл + ТаблицаРегистра.СтоимостьЦФ) КАК СтоимостьРасход
	|ПОМЕСТИТЬ СтоимостьОС
	|ИЗ
	|	РегистрНакопления.СтоимостьОС КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Расход)
	|	И ТаблицаРегистра.Регистратор В (
	|		ВЫБРАТЬ
	|			втОбъектыДокументов.Регистратор
	|		ИЗ
	|			втОбъектыДокументов КАК втОбъектыДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ТаблицаРегистра.Регистратор КАК Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство КАК ОсновноеСредство,
	|	СУММА(ТаблицаРегистра.АмортизацияРегл + ТаблицаРегистра.АмортизацияЦФ) КАК АмортизацияПриход
	|ПОМЕСТИТЬ АмортизацияОС
	|ИЗ
	|	РегистрНакопления.АмортизацияОС КАК ТаблицаРегистра
	|ГДЕ
	|	ТаблицаРегистра.ВидДвижения = ЗНАЧЕНИЕ(ВидДвиженияНакопления.Приход)
	|	И ТаблицаРегистра.Регистратор В (
	|		ВЫБРАТЬ
	|			втОбъектыДокументов.Регистратор
	|		ИЗ
	|			втОбъектыДокументов КАК втОбъектыДокументов)
	|
	|СГРУППИРОВАТЬ ПО
	|	ТаблицаРегистра.Регистратор,
	|	ТаблицаРегистра.ОсновноеСредство
	|
	|ИНДЕКСИРОВАТЬ ПО
	|	Регистратор,
	|	ОсновноеСредство
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	Документ.Ссылка КАК Ссылка,
	|	Документ.Номер КАК Номер,
	|	Документ.Дата КАК Дата,
	|	НЕОПРЕДЕЛЕНО КАК Состояние,
	|	Документ.ПричинаСписания КАК ПричинаСписания,
	|	Документ.Организация КАК Организация,
	|	Документ.Организация.КодПоОКПО КАК КодОКПО,
	|	Документ.Подразделение КАК ПодразделениеОрганизации,
	|	Документ.МоментВремени КАК МоментВремени,
	|
	|	втОбъектыДокументов.НомерСтроки КАК НомерСтроки,
	|	втОбъектыДокументов.ОсновноеСредство КАК ОС,
	|
	|	ОбъектыЭксплуатации.ЗаводскойНомер КАК ЗаводскойНомер,
	|
	|	ОбъектыЭксплуатации.ГруппаОС КАК ГруппаОС,
	|	ОбъектыЭксплуатации.ИнвентарныйНомер КАК ИнвНомер,
	|	ОбъектыЭксплуатации.ДатаВыпуска КАК ГодВыпуска,
	|
	|	ВЫБОР
	|		КОГДА ОбъектыЭксплуатации.НаименованиеПолное = """"
	|			ТОГДА ОбъектыЭксплуатации.Наименование
	|		ИНАЧЕ ОбъектыЭксплуатации.НаименованиеПолное
	|	КОНЕЦ КАК НаимОС,
	|
	|	ВЫБОР
	|		КОГДА ОбъектыЭксплуатации.ГруппаОС = ЗНАЧЕНИЕ(Перечисление.ГруппыОС.ТранспортныеСредства)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Автотранспорт,
	|
	|	ПервоначальныеСведенияОС.ДатаВводаВЭксплуатациюБУ КАК ДатаПринятияКУчету,
	|	ПервоначальныеСведенияОС.ДокументВводаВЭксплуатациюБУ КАК ДокументВводаВЭксплуатацию,
	|	ПервоначальныеСведенияОС.ПервоначальнаяСтоимостьБУ КАК НачСтоимость,
	|	ПервоначальныеСведенияОС.ПорядокУчетаБУ КАК ПорядокПогашенияСтоимости,
	|	ПорядокУчетаОСБУ.АмортизационнаяГруппа.Порядок КАК АмортизационнаяГруппа,
	|	МестонахождениеОС.Местонахождение КАК Подразделение,
	|	МестонахождениеОС.МОЛ КАК МОЛ,
	|
	|	ЕСТЬNULL(СтоимостьОС.СтоимостьРасход, 0) КАК Стоимость,
	|	ЕСТЬNULL(АмортизацияОС.АмортизацияПриход, 0) КАК НачАмортизация,
	|
	|	втОбъектыДокументов.СведенияАктуальны КАК СведенияАктуальны,
	|
	|	ОбъектыЭксплуатации.ДрагоценныеМатериалы.(
	|		ДрагоценныйМатериал КАК ДМНаименование,
	|		Количество КАК ДММасса,
	|		ЕдиницаИзмерения КАК ДМЕдиницаИзмерения
	|	) КАК ДрагоценныеМатериалы,
	|
	|	Документ.ХозяйственнаяОперация = ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.СписаниеОСЧастичное) КАК ЧастичнаяЛиквидация
	|
	|ИЗ
	|	Документ.СписаниеОС2_4 КАК Документ
	|
	|		ВНУТРЕННЕЕ СОЕДИНЕНИЕ втОбъектыДокументов КАК втОбъектыДокументов
	|		ПО (втОбъектыДокументов.Ссылка = Документ.Ссылка)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ Справочник.ОбъектыЭксплуатации КАК ОбъектыЭксплуатации
	|		ПО ОбъектыЭксплуатации.Ссылка = втОбъектыДокументов.ОсновноеСредство
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПервоначальныеСведенияОС КАК ПервоначальныеСведенияОС
	|		ПО (ПервоначальныеСведенияОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (ПервоначальныеСведенияОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ ПорядокУчетаОСБУ КАК ПорядокУчетаОСБУ
	|		ПО (ПорядокУчетаОСБУ.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (ПорядокУчетаОСБУ.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ МестонахождениеОС КАК МестонахождениеОС
	|		ПО (МестонахождениеОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (МестонахождениеОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ СтоимостьОС КАК СтоимостьОС
	|		ПО (СтоимостьОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (СтоимостьОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ АмортизацияОС КАК АмортизацияОС
	|		ПО (АмортизацияОС.Регистратор = втОбъектыДокументов.Регистратор)
	|			И (АмортизацияОС.ОсновноеСредство = втОбъектыДокументов.ОсновноеСредство)
	|ГДЕ
	|	Документ.Ссылка В(&МассивОбъектов)
	|
	|УПОРЯДОЧИТЬ ПО
	|	Дата,
	|	Ссылка,
	|	НомерСтроки
	|
	|ИТОГИ 
	|	МИНИМУМ(СведенияАктуальны)
	|ПО
	|	Ссылка
	|;
	|
	|////////////////////////////////////////////////////////////////////////////////
	|ВЫБРАТЬ
	|	ДемонтируемыеУзлы.Ссылка.ДокументОснование КАК Ссылка,
	|	ДемонтируемыеУзлы.Ссылка КАК УзелДокумент,
	|	ДемонтируемыеУзлы.Ссылка.Номер КАК УзелДокументНомер,
	|	ДемонтируемыеУзлы.Ссылка.Дата КАК УзелДокументДата,
	|	ТИПЗНАЧЕНИЯ(ДемонтируемыеУзлы.Ссылка) КАК УзелДокументНаименование,
	|	ДемонтируемыеУзлы.Номенклатура КАК УзелНоменклатура,
	|	ДемонтируемыеУзлы.Номенклатура.НаименованиеПолное КАК УзелНоменклатураНаименованиеПолное,
	|	ДемонтируемыеУзлы.Характеристика КАК УзелХарактеристика,
	|	ДемонтируемыеУзлы.Характеристика.НаименованиеПолное КАК УзелХарактеристикаНаименованиеПолное,
	|	ДемонтируемыеУзлы.Количество КАК УзелКоличество,
	|	ДемонтируемыеУзлы.Номенклатура.ЕдиницаИзмерения КАК УзелЕдиницаИзмерения,
	|
	|	ВЫБОР
	|		КОГДА НЕ СуммыДокументовВВалютахУчета.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл / ДемонтируемыеУзлы.Количество, 0)
	|		КОГДА ДемонтируемыеУзлы.Ссылка.Организация.ВалютаРегламентированногоУчета = &ВалютаУправленческогоУчета
	|			ТОГДА ДемонтируемыеУзлы.Цена
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УзелЦена,
	|
	|	ВЫБОР
	|		КОГДА НЕ СуммыДокументовВВалютахУчета.Регистратор ЕСТЬ NULL
	|			ТОГДА ЕСТЬNULL(СуммыДокументовВВалютахУчета.СуммаБезНДСРегл, 0)
	|		КОГДА ДемонтируемыеУзлы.Ссылка.Организация.ВалютаРегламентированногоУчета = &ВалютаУправленческогоУчета
	|			ТОГДА ДемонтируемыеУзлы.Сумма
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК УзелСумма
	|
	|ИЗ
	|	Документ.ПрочееОприходованиеТоваров.Товары КАК ДемонтируемыеУзлы
	|
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.СуммыДокументовВВалютахУчета КАК СуммыДокументовВВалютахУчета
	|		ПО ДемонтируемыеУзлы.ИдентификаторСтроки = СуммыДокументовВВалютахУчета.ИдентификаторСтроки
	|			И (ДемонтируемыеУзлы.Ссылка.Организация.ВалютаРегламентированногоУчета <> &ВалютаУправленческогоУчета)
	|
	|ГДЕ
	|	ДемонтируемыеУзлы.Ссылка.Проведен
	|	И НЕ ДемонтируемыеУзлы.Ссылка.ПометкаУдаления
	|	И ДемонтируемыеУзлы.Ссылка.ДокументОснование В(&МассивОбъектов)
	|	И ДемонтируемыеУзлы.Ссылка.ХозяйственнаяОперация В (
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеЗаСчетДоходов),
	|		ЗНАЧЕНИЕ(Перечисление.ХозяйственныеОперации.ОприходованиеПриВыбытииОС))
	|
	|ИТОГИ ПО
	|	Ссылка";
	СписокЗапросов.Добавить(ТекстЗапроса);
	
	ТекстЗапроса = СтрСоединить(СписокЗапросов, ОбщегоНазначения.РазделительПакетаЗапросов());
	Запрос = Новый Запрос(ТекстЗапроса);
	Запрос.МенеджерВременныхТаблиц = Новый МенеджерВременныхТаблиц;
	
	Запрос.УстановитьПараметр("МассивОбъектов", МассивОбъектов);
	Запрос.УстановитьПараметр("ВалютаУправленческогоУчета", Константы.ВалютаУправленческогоУчета.Получить());
	
	ОтложенноеФормированиеДвиженийВНА.ВыполнитьОперациюПоДокументам(МассивОбъектов);
	ДанныеДляПредварительногоРасчетаСтоимости = РасчетСтоимостиВНА.ДанныеДляПредварительногоРасчетаСтоимостиВнеоборотныхАктивов(МассивОбъектов);
	
	ОбъектыДляКоторыхСведенияНеАктуальны = ОтложенноеФормированиеДвиженийВНА.ОбъектыДляКоторыхДвиженияНеАктуальны(МассивОбъектов);
	ОбщегоНазначенияКлиентСервер.ДополнитьМассив(
		ОбъектыДляКоторыхСведенияНеАктуальны, 
		ДанныеДляПредварительногоРасчетаСтоимости.ОбъектыДляКоторыхСведенияНеАктуальны,
		Истина);
		
	Запрос.УстановитьПараметр("ОбъектыДляКоторыхСведенияНеАктуальны", ОбъектыДляКоторыхСведенияНеАктуальны);
		
	РезультатЗапроса = Запрос.ВыполнитьПакет();
	
	ДанныеПечатнойФормы = Новый Структура;
	ДанныеПечатнойФормы.Вставить("ПоДокументам", РезультатЗапроса[РезультатЗапроса.ВГраница()-1]);
	ДанныеПечатнойФормы.Вставить("ПоПрочимОприходованиям", РезультатЗапроса[РезультатЗапроса.ВГраница()]);
	
	Возврат ДанныеПечатнойФормы;
		
	//-- Локализация
	
КонецФункции

#КонецОбласти

#Область Заполнение

//++ Локализация

Процедура ЗаполнитьНаОснованииИнвентаризацииОСПриВводеНаОсновании(Объект, ДанныеЗаполнения)
	
	Объект.ДокументНаОсновании = Истина;
	
	МассивНомеровСтрок = Неопределено;
	СообщатьОбОшибках = Истина;
	
	Если ТипЗнч(ДанныеЗаполнения) = Тип("Структура") Тогда
		Объект.ДокументОснование = ДанныеЗаполнения.ДокументОснование;
		МассивНомеровСтрок = ДанныеЗаполнения.МассивНомеровСтрок;
		СообщатьОбОшибках = ДанныеЗаполнения.СообщатьОбОшибках;
	Иначе
		Объект.ДокументОснование = ДанныеЗаполнения;
	КонецЕсли;
	
	ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок);
	
	ВнеоборотныеАктивыСлужебный.ЗаполнитьОтражениеВУчете(Объект, Объект.ОС.Выгрузить().ВыгрузитьКолонку("ОсновноеСредство"));
	
КонецПроцедуры

// Заполняет документ на основании инвентаризации ОС
//
// Параметры:
//  Объект				 - ДокументОбъект.СписаниеОС2_4	 - Документ, который надо заполнить.
//  СообщатьОбОшибках	 - Булево						 - Истина, если нужно сообщить об ошибках.
//  МассивНомеровСтрок	 - Массив						 - Строки инвентаризации.
//
Процедура ЗаполнитьНаОснованииИнвентаризацииОС(Объект, СообщатьОбОшибках, МассивНомеровСтрок = Неопределено)

	Если НЕ ЗначениеЗаполнено(Объект.ДокументОснование) Тогда
		Возврат;
	КонецЕсли;
	
	РезультатЗапроса = Документы.ИнвентаризацияОС.ДанныеЗаполненияНаОснованииИнвентаризации24(
							Объект.ДокументОснование,
							Объект.Дата, 
							"Списание", 
							МассивНомеровСтрок);
							
	Если РезультатЗапроса.ТабличнаяЧасть = Неопределено Или РезультатЗапроса.ТабличнаяЧасть.Пустой() Тогда
		Если СообщатьОбОшибках Тогда
			ТекстОшибки = НСтр("ru = 'В документе %1 отсутствуют строки требующие создания списания';
								|en = 'There are no lines which require writing off in the %1 document'");
			ТекстОшибки = СтрШаблон(ТекстОшибки, Объект.ДокументОснование);
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(ТекстОшибки,, "Объект.ДокументОснование");
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Выборка = РезультатЗапроса.Реквизиты.Выбрать();
	Выборка.Следующий();
	ЗаполнитьЗначенияСвойств(Объект, Выборка);
	Объект.Подразделение = Выборка.Местонахождение;
	
	Выборка = РезультатЗапроса.ТабличнаяЧасть.Выбрать();
	Пока Выборка.Следующий() Цикл
		ЗаполнитьЗначенияСвойств(Объект.ОС.Добавить(), Выборка);
	КонецЦикла;
	
КонецПроцедуры

//-- Локализация

#КонецОбласти

#КонецОбласти
