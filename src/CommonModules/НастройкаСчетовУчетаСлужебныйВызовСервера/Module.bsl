#Область СлужебныеПроцедурыИФункции

//++ Локализация

Функция СсылкаНастройкаСчетовУчета(ОбъектНастройки, РазделУчета = Неопределено) Экспорт
	
	ТекстГиперссылки = НСтр("ru = 'Настроить счета учета%Детализация%';
							|en = 'Configure GL accounts%Детализация%'");
	
	Запрос = Новый Запрос;
	Запрос.Текст =
	"ВЫБРАТЬ РАЗРЕШЕННЫЕ
	|	ПорядокОтраженияНаСчетахУчета.Организация КАК Организация,
	|	КОЛИЧЕСТВО(РАЗЛИЧНЫЕ ПорядокОтраженияНаСчетахУчета.МестоУчета) КАК КоличествоНастроек
	|ИЗ
	|	РегистрСведений.ПорядокОтраженияНаСчетахУчета КАК ПорядокОтраженияНаСчетахУчета
	|ГДЕ
	|	ПорядокОтраженияНаСчетахУчета.АналитикаУчета = &ОбъектНастройки
	|	И ПорядокОтраженияНаСчетахУчета.Организация <> ЗНАЧЕНИЕ(Справочник.Организации.ПустаяСсылка)
	|
	|СГРУППИРОВАТЬ ПО
	|	ПорядокОтраженияНаСчетахУчета.Организация
	|ИТОГИ
	|	СУММА(КоличествоНастроек)
	|ПО
	|	ОБЩИЕ";
	Запрос.УстановитьПараметр("ОбъектНастройки", ОбъектНастройки);
	Выборка = Запрос.Выполнить().Выбрать();
	Если Выборка.Следующий() Тогда
		ТекстГиперссылки = СтрЗаменить(НСтр("ru = 'Изменить настройки счетов учета%Детализация% (%КоличествоНастроек%)';
											|en = 'Change GL account settings%Детализация% (%КоличествоНастроек%) '"), "%КоличествоНастроек%", Выборка.КоличествоНастроек);
	КонецЕсли;
	ТекстДетализации = НСтр("ru = 'по организациям';
							|en = 'by companies'");
	Если РазделУчета = Неопределено Тогда
		РазделыУчета = РегистрыСведений.ПорядокОтраженияНаСчетахУчета.РазделыУчетаПоАналитикеУчета(ОбъектНастройки);
		Если РазделыУчета.Количество() Тогда
			РазделУчета = РазделыУчета.Получить(0);
		КонецЕсли;
	КонецЕсли;
	Если РазделУчета <> Неопределено Тогда
		НастройкиМестаУчета = НастройкаСчетовУчетаСервер.НастройкиМестаУчетаПоРазделуУчета(РазделУчета);
		ПредставлениеДетализации = НастройкиМестаУчета.ПредставлениеДетализации;
		Если ЗначениеЗаполнено(ПредставлениеДетализации) Тогда
			ТекстДетализации = ПредставлениеДетализации;
		КонецЕсли;
	КонецЕсли;
	
	ТекстГиперссылки = СтрЗаменить(ТекстГиперссылки, "%Детализация%", " " + ТекстДетализации);
	
	Возврат Новый ФорматированнаяСтрока(ТекстГиперссылки, , ЦветаСтиля.ГиперссылкаЦвет, ,"ОткрытьРабочееМестоНастроекСчетовУчета");
	
КонецФункции

//-- Локализация

Функция СсылкаНовогоЭлементаНастройкиСчетовУчета() Экспорт
	
	Возврат Справочники.НастройкиСчетовУчетаПрочихОпераций.ПолучитьСсылку();
	
КонецФункции

Функция ДанныеНастроекСчетовУчетаПоУмолчанию(СтатьиАктивовПассивов, Знач ДанныеНастройкиСчетовУчета = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Соответствие();
	
	Если ТипЗнч(СтатьиАктивовПассивов) = Тип("Массив") Тогда
		СписокСтатей = СтатьиАктивовПассивов;
	Иначе
		СписокСтатей = ОбщегоНазначенияКлиентСервер.ЗначениеВМассиве(СтатьиАктивовПассивов);
	КонецЕсли;
	
	//++ НЕ УТКА
	Если ДанныеНастройкиСчетовУчета <> Неопределено Тогда
		СтатьиСНастройкамиПоОбъектам = ДанныеНастройкиСчетовУчета.СтатьиСНастройкамиПоОбъектам;
	Иначе
		СтатьиСНастройкамиПоОбъектам = МеждународныйУчетСерверПовтИсп.СтатьиАктивовПассивовСНастройкамиПоОбъектам();
	КонецЕсли;
	//-- НЕ УТКА
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос();
	Запрос.УстановитьПараметр("СписокСтатей", СписокСтатей);
	Запрос.Текст = "
	|ВЫБРАТЬ
	|	СтатьиАктивовПассивов.Ссылка    КАК Ссылка
	//++ Локализация
	|	,
	|	СтатьиАктивовПассивов.СчетУчета КАК СчетУчета,
	|	СтатьиАктивовПассивов.Субконто1 КАК Субконто1,
	|	СтатьиАктивовПассивов.Субконто2 КАК Субконто2,
	|	СтатьиАктивовПассивов.Субконто3 КАК Субконто3
	//-- Локализация

	//++ НЕ УТКА
	|	,
	|	СтатьиАктивовПассивов.НастройкиМеждународногоУчета КАК НастройкиМеждународногоУчета
	//-- НЕ УТКА
	|ИЗ
	|	ПланВидовХарактеристик.СтатьиАктивовПассивов КАК СтатьиАктивовПассивов
	|ГДЕ
	|	СтатьиАктивовПассивов.Ссылка В (&СписокСтатей)
	|";
	
	Результат = Запрос.Выполнить();
	ВыборкаНастройки = Результат.Выбрать();
	
	Пока ВыборкаНастройки.Следующий() Цикл
		ДанныеНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовУчета();
		НастройкаЗаполнена = Ложь;
		//++ Локализация
		Если ЗначениеЗаполнено(ВыборкаНастройки.СчетУчета) Тогда
			ЗаполнитьЗначенияСвойств(ДанныеНастройки, ВыборкаНастройки, НастройкаСчетовУчетаКлиентСервер.РеквизитыНастройкиСчетаУчета());
			НастройкаЗаполнена = Истина;
		КонецЕсли;
		//-- Локализация

		//++ НЕ УТКА
		Если СтатьиСНастройкамиПоОбъектам.Найти(ВыборкаНастройки.Ссылка) = Неопределено Тогда
			РезультатНастройкиМеждународногоУчета = ВыборкаНастройки.НастройкиМеждународногоУчета; // ВыборкаИзРезультатаЗапроса -
			ВыборкаНастройкиМеждународногоУчета = РезультатНастройкиМеждународногоУчета.Выбрать();
			Пока ВыборкаНастройкиМеждународногоУчета.Следующий() Цикл
				Если ЗначениеЗаполнено(ВыборкаНастройкиМеждународногоУчета.СчетУчета) Тогда
					ДанныеМеждународнойНастройки = НастройкаСчетовУчетаКлиентСервер.СоставНастройкиСчетовМеждународногоУчета();
					ЗаполнитьЗначенияСвойств(ДанныеМеждународнойНастройки, ВыборкаНастройкиМеждународногоУчета);
					ДанныеНастройки.НастройкиМеждународногоУчета.Добавить(ДанныеМеждународнойНастройки);
					НастройкаЗаполнена = Истина;
				КонецЕсли;
			КонецЦикла;
		КонецЕсли;
		//-- НЕ УТКА
		
		Если НастройкаЗаполнена Тогда
			ВозвращаемоеЗначение.Вставить(ВыборкаНастройки.Ссылка,
				Новый Структура("ДанныеНастройки,НастройкаСчетовУчета",
					ДанныеНастройки, СсылкаНовогоЭлементаНастройкиСчетовУчета()));
		КонецЕсли;
	КонецЦикла;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

Функция ДоступнаНастройкаСчетовУчета() Экспорт
	
	Возврат НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовРеглУчета()
		ИЛИ НастройкаСчетовУчетаСервер.ДоступнаНастройкаСчетовМеждународногоУчета();
	
КонецФункции

#Область НастройкаВыбораСубконто

Функция ОписаниеТипаВсеДокументы() Экспорт
	
	Возврат Документы.ТипВсеСсылки() ;
	
КонецФункции

Функция ОписаниеТиповДоговоров(ТолькоСКонтрагентом = Истина) Экспорт
	
	ТипыДоговоров = Новый Массив;
	ТипыДоговоров.Добавить(Тип("СправочникСсылка.ДоговорыКонтрагентов"));
	ТипыДоговоров.Добавить(Тип("СправочникСсылка.ДоговорыКредитовИДепозитов"));
	ТипыДоговоров.Добавить(Тип("СправочникСсылка.ДоговорыАренды"));
	
	Если НЕ ТолькоСКонтрагентом Тогда
		ТипыДоговоров.Добавить(Тип("СправочникСсылка.ДоговорыМеждуОрганизациями"));
	КонецЕсли;
	
	Возврат Новый ОписаниеТипов(ТипыДоговоров);
	
КонецФункции

Функция ВсеТипыСвязанныхСубконто() Экспорт
	
	СвязанныеСубконто = Новый Соответствие;
	
	УстановитьТипыСвязанныхСубконто(СвязанныеСубконто);
	
	СвязанныеСубконто.Вставить("Организация", НастройкаСчетовУчетаСервер.ТипыСвязанныеСОрганизацией());
	
	Возврат СвязанныеСубконто;
	
КонецФункции

Процедура УстановитьТипыСвязанныхСубконто(СвязанныеСубконто) Экспорт
	
	ТипыСубконто =  ОписаниеТиповДоговоров(Истина);
	ТипыСубконто = Новый ОписаниеТипов(ТипыСубконто, Документы.ТипВсеСсылки().Типы());
	ТипыСубконто = Новый ОписаниеТипов(ТипыСубконто,"СправочникСсылка.БанковскиеСчетаКонтрагентов");
	СвязанныеСубконто.Вставить("Контрагент", ТипыСубконто);
	СвязанныеСубконто.Вставить("Партнер", ТипыСубконто);
	
	ТипыСубконто = Новый ОписаниеТипов("СправочникСсылка.БанковскиеСчетаКонтрагентов");
	//++ Локализация
	ТипыСубконто = Новый ОписаниеТипов(ТипыСубконто, "СправочникСсылка.ПартииТМЦВЭксплуатации");
	//-- Локализация
	СвязанныеСубконто.Вставить("ФизическоеЛицо", ТипыСубконто);
	
	ТипыСубконто = Новый ОписаниеТипов(Документы.ТипВсеСсылки().Типы());
	СвязанныеСубконто.Вставить("ПодотчетноеЛицо", ТипыСубконто);
	
	ТипыСубконто = Новый ОписаниеТипов("СправочникСсылка.НомераГТД");
	СвязанныеСубконто.Вставить("СтраныМира", ТипыСубконто);
	
	//++ Локализация
	ТипыСубконто = Новый ОписаниеТипов("СправочникСсылка.ПартииТМЦВЭксплуатации");
	СвязанныеСубконто.Вставить("Номенклатура", ТипыСубконто);
	//-- Локализация
	
	ТипыСубконто = Новый ОписаниеТипов("СправочникСсылка.Номенклатура");
	СвязанныеСубконто.Вставить("ТипНоменклатуры", ТипыСубконто);
	СвязанныеСубконто.Вставить("ГруппаФинУчетаНоменклатуры", ТипыСубконто);
	СвязанныеСубконто.Вставить("ГруппаАналитическогоУчетаНоменклатуры", ТипыСубконто);
	
КонецПроцедуры

Функция ПолучитьСвойстваСчета(Счет) Экспорт
	
	//++ Локализация
	Если ТипЗнч(Счет) = РеглУчетКлиентСервер.ТипПланСчетов() Тогда
		Возврат БухгалтерскийУчетВызовСервераПовтИсп.ПолучитьСвойстваСчета(Счет);
	КонецЕсли;
	//-- Локализация
	
	//++ НЕ УТКА
	Если ТипЗнч(Счет) = МеждународныйУчетКлиентСервер.ТипПланСчетов() Тогда
		Возврат МеждународныйУчетВызовСервера.СвойстваСчета(Счет);
	КонецЕсли;
	//-- НЕ УТКА
	
КонецФункции

#КонецОбласти


#КонецОбласти
