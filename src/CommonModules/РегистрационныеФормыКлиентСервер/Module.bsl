////////////////////////////////////////////////////////////////////////////////
// Модуль содержит общие процедуры и функции для форм регламентированной
// отчетности.
//
////////////////////////////////////////////////////////////////////////////////

#Область ПрограммныйИнтерфейс

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Функция ДлинаКодаПодтверждения() Экспорт
	Возврат 6;
КонецФункции

Функция ТелефонСоответствуетТребованиям(Знач Телефон) Экспорт
	Телефон = ТолькоЦифры(СокрЛП(Телефон));
	
	КодСтраны = Лев(Телефон, 1);
	КодРегиона = Сред(Телефон, 2, 3);
	Номер = Сред(Телефон, 5);
	
	Если ПустаяСтрока(КодСтраны) Или ПустаяСтрока(КодРегиона) Или ПустаяСтрока(Номер) Тогда
		Возврат Ложь;
	КонецЕсли;
		
	Если СтрДлина(Телефон) > 15 Тогда
		Возврат Ложь;
	КонецЕсли;
	
	Если КодСтраны = "7" Тогда
		Если СтрДлина(Номер) > 7 Тогда
			Возврат Ложь;
		КонецЕсли;
		Если КодРегионаЗарезервирован(КодРегиона) Тогда
			Возврат Ложь;
		КонецЕсли;
		Если НеГеографическийКодРоссии(КодРегиона) И СтрДлина(КодРегиона) <> 3 Тогда
			Возврат Ложь;
		КонецЕсли;
	КонецЕсли;
	
	Возврат Истина;
КонецФункции

Функция ДополнительныеПараметрыКонтактнойИнформации(Телефон, Почта, ИмяРеквизитаТелефон, ИмяРеквизитаПочта, ИмяЭлемента = "") Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Телефон", Телефон);
	Результат.Вставить("Почта", Почта);
	Результат.Вставить("ИмяРеквизитаТелефон", ИмяРеквизитаТелефон);
	Результат.Вставить("ИмяРеквизитаПочта", ИмяРеквизитаПочта);
	Результат.Вставить("ИмяЭлементаФормы", ИмяЭлемента);
	
	Возврат Результат;
КонецФункции

Функция СпособыПодачиДокументов() Экспорт
	Способы = Новый Структура;
	Способы.Вставить("ИФНСлично", "ИФНСлично");
	Способы.Вставить("ИФНСпредставитель", "ИФНСпредставитель");
	Способы.Вставить("МФЦлично", "МФЦлично");
	Способы.Вставить("Почта", "Почта");
	Способы.Вставить("ИФНСэлектронно", "ИФНСэлектронно");
	Способы.Вставить("ИФНСэлектронноОнлайн", "ИФНСэлектронноОнлайн");
	Возврат Способы;
КонецФункции

Функция СпособПодтвержденияТелефон() Экспорт
	Возврат "Телефон";
КонецФункции

Функция СпособПодтвержденияЭлектроннаяПочта() Экспорт
	Возврат "Почта";
КонецФункции

Функция ЭтоЭлектронныйСпособПодачиДокументов(СпособПодачиДокументов) Экспорт
	СпособыПодачиДокументов = СпособыПодачиДокументов();
	
	Если СпособПодачиДокументов = СпособыПодачиДокументов.ИФНСэлектронноОнлайн
		Или СпособПодачиДокументов = СпособыПодачиДокументов.ИФНСэлектронно Тогда
		
		Возврат Истина;
	КонецЕсли;
	
	Возврат Ложь;
КонецФункции

Процедура УправлениеСвойствамиГруппыПодтвержденияКонтактнойИнформации(Форма, ДополнительныеПараметры) Экспорт
	Элементы = Форма.Элементы;
	
	Если Элементы.Найти(ДополнительныеПараметры.ИмяРеквизитаТелефон) <> Неопределено Тогда
		ЭлементТелефонЗаявителя = Элементы[ДополнительныеПараметры.ИмяРеквизитаТелефон];
	Иначе
		Возврат;
	КонецЕсли;
	
	Если Элементы.Найти(ДополнительныеПараметры.ИмяРеквизитаПочта) <> Неопределено Тогда
		ЭлементПочтаЗаявителя = Элементы[ДополнительныеПараметры.ИмяРеквизитаПочта];
	Иначе
		Возврат;
	КонецЕсли;
	
	Если ЭтоЭлектронныйСпособПодачиДокументов(Форма.СпособПодачиДокументов) Тогда
		
		КодПодтвержденияТелефонаЗапрошен = КодПодтвержденияЗапрошен(Форма, СпособПодтвержденияТелефон());
		
		Элементы.ГруппаОтправкаКодаПодтвержденияТелефона.Видимость =
			(Не КодПодтвержденияТелефонаЗапрошен И Не Форма.НомерТелефонаПодтвержден);
		
		Элементы.ГруппаНомерТелефонаВыслатьКод.Видимость =
			(КодПодтвержденияТелефонаЗапрошен И Не Форма.НомерТелефонаПодтвержден);
		
		КодПодтвержденияПочтыЗапрошен = КодПодтвержденияЗапрошен(Форма, СпособПодтвержденияЭлектроннаяПочта());
		
		Элементы.ГруппаОтправкаКодаПодтвержденияПочты.Видимость =
			(Не КодПодтвержденияПочтыЗапрошен И Не Форма.ЭлектроннаяПочтаПодтверждена);
		
		Элементы.ГруппаНомерПочтаВыслатьКод.Видимость =
			(КодПодтвержденияПочтыЗапрошен И Не Форма.ЭлектроннаяПочтаПодтверждена);
		
		Если Не ЗначениеЗаполнено(Форма.СрокПовторнойОтправкиКодаДляТелефона)
			Или Не ЗначениеЗаполнено(Форма.СрокДействияКодаПодтвержденияТелефона) Тогда
			
			Элементы.ТекстВыслатьПовторноКодПодтверждения.Видимость = Истина;
		Иначе
			Элементы.ТекстВыслатьПовторноКодПодтверждения.Видимость = Ложь;
		КонецЕсли;
		
		Если Не ЗначениеЗаполнено(Форма.СрокПовторнойОтправкиКодаДляПочты)
			Или Не ЗначениеЗаполнено(Форма.СрокДействияКодаПодтвержденияПочты) Тогда
			
			Элементы.ТекстВыслатьПовторноКодПодтвержденияПочта.Видимость = Истина;
		Иначе
			Элементы.ТекстВыслатьПовторноКодПодтвержденияПочта.Видимость = Ложь;
		КонецЕсли;
		
		ЭлементТелефонЗаявителя.РасширеннаяПодсказка.Заголовок =
			НСтр("ru = 'На указанный номер мобильного телефона придёт SMS для подтверждения';
				|en = 'На указанный номер мобильного телефона придёт SMS для подтверждения'");
			
		Элементы.ТекстПовторнаяОтправкаКодаТелефон.Видимость = ЗначениеЗаполнено(Форма.ТекстПовторнаяОтправкаКодаТелефон);
		Элементы.ТекстПовторнаяОтправкаКодаПочта.Видимость = ЗначениеЗаполнено(Форма.ТекстПовторнаяОтправкаКодаПочта);
		
		ЭлементТелефонЗаявителя.ОтметкаНезаполненного = Не Форма.НомерТелефонаПодтвержден;
		ЭлементПочтаЗаявителя.ОтметкаНезаполненного = Не Форма.ЭлектроннаяПочтаПодтверждена;
		Элементы.КартинкаТелефонПроверен.Видимость = Форма.НомерТелефонаПодтвержден;
		Элементы.КартинкаЭлектроннаяПочтаПроверена.Видимость = Форма.ЭлектроннаяПочтаПодтверждена;
		
		Элементы.СтатусОтправкиКодаПодтвержденияТелефона.Видимость = Форма.КодПодтвержденияТелефонаОтправляется;
		Элементы.ВыслатьСМССКодом.Доступность = Не Форма.КодПодтвержденияТелефонаОтправляется;
		
		Элементы.СтатусОтправкиКодаПодтвержденияПочты.Видимость = Форма.КодПодтвержденияПочтыОтправляется;
		Элементы.ВыслатьПисьмоНаПочту.Доступность = Не Форма.КодПодтвержденияПочтыОтправляется;
		
		Если ЗначениеЗаполнено(ДополнительныеПараметры.ИмяЭлементаФормы) Тогда
			Форма.ТекущийЭлемент = Элементы[ДополнительныеПараметры.ИмяЭлементаФормы];
		ИначеЕсли КодПодтвержденияТелефонаЗапрошен И Не Форма.НомерТелефонаПодтвержден Тогда
			Если Элементы.КодПодтвержденияТелефона.Видимость Тогда
				Форма.ТекущийЭлемент = Элементы.КодПодтвержденияТелефона;
			Иначе
				Форма.ТекущийЭлемент = ЭлементТелефонЗаявителя;
			КонецЕсли;
		ИначеЕсли КодПодтвержденияПочтыЗапрошен И Не Форма.ЭлектроннаяПочтаПодтверждена Тогда
			Если Элементы.КодПодтвержденияПочты.Видимость Тогда
				Форма.ТекущийЭлемент = Элементы.КодПодтвержденияПочты;
			Иначе
				Форма.ТекущийЭлемент = ЭлементПочтаЗаявителя;
			КонецЕсли;
		КонецЕсли;
		
		Элементы.ГруппаФорматОтправкиДокументов.Видимость = Истина;
	Иначе
		Элементы.ГруппаОтправкаКодаПодтвержденияТелефона.Видимость = Ложь;
		Элементы.ГруппаНомерТелефонаВыслатьКод.Видимость = Ложь;
		
		Элементы.ГруппаОтправкаКодаПодтвержденияПочты.Видимость = Ложь;
		Элементы.ГруппаНомерПочтаВыслатьКод.Видимость = Ложь;
		ЭлементТелефонЗаявителя.Заголовок = НСтр("ru = 'Телефон';
												|en = 'Телефон'");
		
		ЭлементТелефонЗаявителя.РасширеннаяПодсказка.Заголовок =
			РегистрационныеФормыВызовСервера.ТекстПодсказкиНомерТелефона(Форма.ИмяФормы);
		
		ЭлементТелефонЗаявителя.ОтметкаНезаполненного =
			Не ЗначениеЗаполнено(ДополнительныеПараметры.Телефон);
		
		ЭлементПочтаЗаявителя.ОтметкаНезаполненного =
			Не ЗначениеЗаполнено(ДополнительныеПараметры.Почта);
		
		Элементы.КартинкаТелефонПроверен.Видимость = Ложь;
		Элементы.КартинкаЭлектроннаяПочтаПроверена.Видимость = Ложь;
		
		Элементы.ГруппаФорматОтправкиДокументов.Видимость = Ложь;
	КонецЕсли;
	
	ЭлементТелефонЗаявителя.КнопкаВыбора = Ложь;
	ВидимостьГруппПодачиДокументовЭлектронно(Форма);
КонецПроцедуры

Функция ТелефонДляЗаявления(Знач Телефон) Экспорт
	Телефон = ТолькоЦифры(СокрЛП(Телефон));
	
	КодСтраны = Лев(Телефон, 1);
	КодРегиона = Сред(Телефон, 2, 3);
	Номер = Сред(Телефон, 5);
	
	Если КодСтраны <> "7" И КодСтраны <> "8" Тогда
		Возврат Телефон;
	КонецЕсли;
	
	Если ГеографическийКодРоссии(КодРегиона) Тогда
		ШаблонТелефона = "8(%1)%2";
	ИначеЕсли НеГеографическийКодРоссии(КодРегиона) Тогда
		ШаблонТелефона = "+7(%1)%2";
	Иначе
		Возврат Телефон;
	КонецЕсли;
	
	Возврат СтрШаблон(ШаблонТелефона, КодРегиона, Номер);
КонецФункции

Функция ПредставлениеПустогоПоляПриложенныхФайлов(ИмяЭлемента) Экспорт 
	Возврат "Выбор";
КонецФункции

Функция ПредставлениеЗаполненногоПоляПриложенныхФайлов(Данные, ИмяЭлемента) Экспорт 
	Если ТипЗнч(Данные) = Тип("Число") Тогда 
		Возврат ПредставлениеФайлаПоУмолчанию(Данные);
	ИначеЕсли ТипЗнч(Данные) = Тип("ДокументСсылка.УведомлениеОСпецрежимахНалогообложения") И ЗначениеЗаполнено(Данные) Тогда 
		ТаблицаФайлов = РегистрационныеФормыВызовСервера.ТаблицаОтсканированныхСтраницДокумента(Данные, ИмяЭлемента);
		Возврат ?(ЗначениеЗаполнено(ТаблицаФайлов.Количество()), ПредставлениеФайлаПоУмолчанию(ТаблицаФайлов.Количество()),
			ПредставлениеПустогоПоляПриложенныхФайлов(ИмяЭлемента));
	Иначе
		Возврат ПредставлениеПустогоПоляПриложенныхФайлов(ИмяЭлемента);
	КонецЕсли;
КонецФункции

Функция ОтправлятьЗаявлениеВXMLФормате(СпособПодачиДокументов, ФорматОтправкиДокументов) Экспорт
	Возврат ЭтоЭлектронныйСпособПодачиДокументов(СпособПодачиДокументов)
		И ФорматОтправкиДокументов = "XML";
КонецФункции

Функция ВидыПрикрепленныхДокументов() Экспорт
	Результат = Новый Структура;
	Результат.Вставить("Заявление", "Заявление");
	Результат.Вставить("Устав", "Устав");
	Результат.Вставить("Протокол", "Протокол");
	Результат.Вставить("Договор", "Договор");
	Результат.Вставить("Решение", "Решение");
	Результат.Вставить("ДокументПодтверждающийАдрес", "ДокументПодтверждающийАдрес");
	Результат.Вставить("ИнойДокумент", "ИнойДокумент");
	
	Результат.Вставить("Патент", "Патент");
	Результат.Вставить("УведомлениеОПереходеНаУСН", "УведомлениеОПереходеНаУСН");
	Результат.Вставить("ДокументПодтверждающийЛичность", "ДокументПодтверждающийЛичность");
	
	Возврат Результат;
КонецФункции

Функция ПредставлениеПодписанныеФайлы() Экспорт
	
	Возврат НСтр("ru = 'Подписанный контейнер';
				|en = 'Подписанный контейнер'");
	
КонецФункции

Процедура ВидимостьГруппПодачиДокументовЭлектронно(Форма) Экспорт 
	Элементы = Форма.Элементы;
	Элементы.ГруппаОтправкаДокументовОнлайн.Видимость = 
		(Форма.СпособПодачиДокументов = РегистрационныеФормыКлиентСервер.СпособыПодачиДокументов().ИФНСэлектронноОнлайн
		И ЗначениеЗаполнено(Форма.ФорматОтправкиДокументов));
	Элементы.ГруппаФормированиеТранспортногоКонтейнера.Видимость = 
		(Форма.СпособПодачиДокументов = РегистрационныеФормыКлиентСервер.СпособыПодачиДокументов().ИФНСэлектронно
		И ЗначениеЗаполнено(Форма.ФорматОтправкиДокументов));
КонецПроцедуры

Процедура УправлениеФормойПриПодачеДокументовВЭлектронномВиде(Форма, ПараметрыВыполнения) Экспорт
	Элементы = Форма.Элементы;
	ПоддерживаетсяXMLФорматЗаявления = (Форма.ФорматОтправкиДокументов = "XML");
	ДокументыПодписаны = ЗначениеЗаполнено(Форма.ПодписанныеДокументы);
	
	Если ДокументыПодписаны Тогда
		Элементы.ПодписанныеДокументыЗначение.Заголовок =
			РегистрационныеФормыВызовСервера.НаименованиеПодписанногоКонтейнера(Форма.ПодписанныеДокументы);
	Иначе
		Элементы.ПодписанныеДокументыЗначение.Заголовок = 
			?(СтрНайти(Форма.Объект.ИмяОтчета, "РегламентированноеУведомлениеФормаР1") > 0
			, "FNS_0000000000_0000_00000000-0000-0000-0000-000000000000_ЮЛ_00.ZIP"
			, "FNS_000000000000_0000_00000000-0000-0000-0000-000000000000_ИП_00.ZIP");
	КонецЕсли;
	
	Элементы.ПодписатьДокументы.Доступность = (Не ДокументыПодписаны);
	Элементы.РегистрирующийОрганКод.Доступность = (Не ДокументыПодписаны);
	Элементы.ГруппаСпособПодачиДокументов.Доступность = (Не ДокументыПодписаны);
	Элементы.ГруппаФорматОтправкиДокументов.Доступность = (Не ДокументыПодписаны);
	Элементы.ГруппаСпособПолученияДокументов.Доступность = (Не ДокументыПодписаны);
	
	Если ПоддерживаетсяXMLФорматЗаявления Тогда
		УстановитьСвойстваЭлементовГруппы(Форма, "СканЗаявление", Ложь);
		УстановитьСвойстваЭлементовГруппы(Форма, "СканУведомлениеОПереходеНаУСН", Ложь);
		УстановитьСвойстваЭлементовГруппы(Форма, "СканПатент", Ложь);
	Иначе
		УстановитьСвойстваЭлементовГруппы(Форма, "СканЗаявление", Истина);
		УстановитьСвойстваЭлементовГруппы(Форма, "СканУведомлениеОПереходеНаУСН", ПараметрыВыполнения.ЕстьУведомлениеОПереходеНаУСН);
		УстановитьСвойстваЭлементовГруппы(Форма, "СканПатент", ПараметрыВыполнения.ЕстьПатент);
	КонецЕсли;
	
	УстановитьСвойстваЭлементовГруппы(Форма, "УчредительныйДокумент", Истина);
	УстановитьСвойстваЭлементовГруппы(Форма, "ИныеДокументы", Истина);
	УстановитьСвойстваЭлементовГруппы(Форма, "СканПротокол", Истина);
	УстановитьСвойстваЭлементовГруппы(Форма, "СканРешение", Истина);
	
	Если Форма.СпособПодачиДокументов = РегистрационныеФормыКлиентСервер.СпособыПодачиДокументов().ИФНСэлектронноОнлайн Тогда
		Элементы.ЗаголовокФормированиеТранспортногоКонтейнера.Заголовок =
			НСтр("ru = 'Подпишите документы квалифицированной электронной подписью и отправьте в налоговый орган.';
				|en = 'Подпишите документы квалифицированной электронной подписью и отправьте в налоговый орган.'");
			
		Элементы.ПодписатьИОтправить.Доступность = Не ДокументыПодписаны;
		
		ДанныеСостоянияОтправки = РегистрационныеФормыВызовСервера.ДанныеСостоянияОтправкиДокументов(
			ПараметрыВыполнения.Заявление,
			ДокументыПодписаны,
			Форма.НетСертификатаПодписи,
			Форма.ОшибкаПодписанияДокументов,
			ПараметрыВыполнения.ЭтоЮрЛицо);
		
		Если ЗначениеЗаполнено(ДанныеСостоянияОтправки.ТекстПодсказки) Тогда
			Элементы.Группа_СостояниеОтправкиВФНС.Видимость = Истина;
			Элементы.СтатусОтправкиДокументовКартинка.Картинка = ДанныеСостоянияОтправки.Картинка;
			Элементы.СтатусОтправкиНадпись.Заголовок = ДанныеСостоянияОтправки.ТекстПодсказки;
			Элементы.СостояниеОтправкиДополнение.Видимость = ЗначениеЗаполнено(ДанныеСостоянияОтправки.Дополнение);
			Элементы.СостояниеОтправкиДополнение.Заголовок = ДанныеСостоянияОтправки.Дополнение;
		Иначе
			Элементы.Группа_СостояниеОтправкиВФНС.Видимость = Ложь;
		КонецЕсли;
	ИначеЕсли Форма.СпособПодачиДокументов = РегистрационныеФормыКлиентСервер.СпособыПодачиДокументов().ИФНСэлектронно Тогда
		Элементы.ЗаголовокФормированиеТранспортногоКонтейнера.Заголовок =
			НСтр("ru = 'Подпишите документы квалифицированной электронной подписью.';
				|en = 'Подпишите документы квалифицированной электронной подписью.'");
		
		Элементы.КартинкаОшибкаПодписиДокументов.Видимость = Форма.ОшибкаПодписанияДокументов;
		Элементы.Группа_РезультатПодписанияДокументов.Видимость = ДокументыПодписаны;
		Элементы.ЗаголовокФормированиеТранспортногоКонтейнера.Видимость = (Не ДокументыПодписаны);
		Элементы.ПодписатьДокументы.Видимость = (Не ДокументыПодписаны);
	КонецЕсли;
	
	ВидимостьГруппПодачиДокументовЭлектронно(Форма);
КонецПроцедуры

Функция ПредставлениеФайлаПоУмолчанию(КоличествоФайлов = 0) Экспорт
	Если Не ЗначениеЗаполнено(КоличествоФайлов) Тогда
		Возврат НСтр("ru = 'Выбрать';
					|en = 'Выбрать'");
	КонецЕсли;
	
	Возврат СтрокаСЧислом(
		"Выбрать;%1 файл;;%1 файла;%1 файлов;%1 файла",
		КоличествоФайлов,
		ВидЧисловогоЗначения.Количественное,
		"L=ru");
КонецФункции

Функция ТипФайлаЛистЗаписиЕГР(ЭтоЮрЛицо) Экспорт
	Возврат ?(ЭтоЮрЛицо, "ВыпискаЗапЕГРЮЛ", "ВыпискаЗапЕГРИП");
КонецФункции

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

Процедура УстановитьСвойстваЭлементовГруппы(Форма, ИмяЭлемента, ВидимостьГруппы)
	Элементы = Форма.Элементы;
	ЭлементФормы = Элементы.Найти(СтрШаблон("Группа%1", ИмяЭлемента));
	ВозможностьРедактирования = Не ЗначениеЗаполнено(Форма.ПодписанныеДокументы);
	
	Если ЭлементФормы <> Неопределено И ВидимостьГруппы Тогда
		ЭлементФормы.Видимость = Истина;
		Доступность = ВозможностьРедактирования И ДоступностьКнопкиОчисткиСканаДокумента(Форма[ИмяЭлемента]);
		Элементы[СтрШаблон("Очистить%1", ИмяЭлемента)].Доступность = Доступность;
	ИначеЕсли ЭлементФормы <> Неопределено Тогда
		ЭлементФормы.Видимость = Ложь;
	КонецЕсли;
КонецПроцедуры

Функция ДоступностьКнопкиОчисткиСканаДокумента(ПредставлениеСкана)
	Возврат ЗначениеЗаполнено(ПредставлениеСкана)
		И ПредставлениеСкана <> РегистрационныеФормыКлиентСервер.ПредставлениеФайлаПоУмолчанию();
КонецФункции

Функция ГеографическийКодРоссии(КодРегиона) Экспорт
	Возврат СтрНачинаетсяС(КодРегиона, "3") Или СтрНачинаетсяС(КодРегиона, "4") Или СтрНачинаетсяС(КодРегиона, "8");
КонецФункции

Функция КодРегионаЗарезервирован(КодРегиона) Экспорт
	Возврат СтрНачинаетсяС(КодРегиона, "0") Или СтрНачинаетсяС(КодРегиона, "1") 
		Или СтрНачинаетсяС(КодРегиона, "2") Или СтрНачинаетсяС(КодРегиона, "5");
КонецФункции

Функция НеГеографическийКодРоссии(КодРегиона) Экспорт
	Возврат СтрНачинаетсяС(КодРегиона, "9");
КонецФункции

Функция ТолькоЦифры(Строка) Экспорт
	ОбработаннаяСтрока = "";
	
	Для НомерСимвола = 1 По СтрДлина(Строка) Цикл
		Символ = Сред(Строка, НомерСимвола, 1);
		Если Символ >= "0" И Символ <= "9" Тогда
			ОбработаннаяСтрока = ОбработаннаяСтрока + Символ;
		КонецЕсли;
	КонецЦикла;
	
	Возврат ОбработаннаяСтрока;
КонецФункции

Функция КодПодтвержденияЗапрошен(Форма, СпособПодтверждения)
	Если СпособПодтверждения = СпособПодтвержденияТелефон() Тогда
		Возврат ЗначениеЗаполнено(Форма.ИдентификаторКодаПодтвержденияТелефона);
	Иначе
		Возврат ЗначениеЗаполнено(Форма.ИдентификаторКодаПодтвержденияПочты);
	КонецЕсли;
КонецФункции

#КонецОбласти

