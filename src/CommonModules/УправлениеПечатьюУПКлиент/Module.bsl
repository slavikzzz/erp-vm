
#Область ПрограммныйИнтерфейс

// Вызывается после выполнения обработчика ПриОткрытии формы печати документов (ОбщаяФорма.ПечатьДокументов).
//
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма ОбщаяФорма.ПечатьДокументов.
//
Процедура ПечатьДокументовПослеОткрытия(Форма) Экспорт
	
	//++ Локализация
	ЗарплатаКадрыКлиент.ПечатьДокументовПослеОткрытия(Форма);
	//-- Локализация
	
КонецПроцедуры

//++ НЕ УТКА

//++ Устарело_Производство21
#Область ДокументМаршрутныйЛистПроизводства

// Открывает форму для формирования печатной формы маршрутного листа.
//
// Параметры:
//  ОписаниеКоманды - Структура - сведения о выполняемой команде.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьМаршрутныйЛистПроизводства(ОписаниеКоманды) Экспорт
	
	ОткрытьФорму(
		"Документ.МаршрутныйЛистПроизводства.Форма.ПараметрыПечатиМаршрутногоЛиста",
		Новый Структура("Объекты", ОписаниеКоманды.ОбъектыПечати),
		ОписаниеКоманды.Форма)
	
КонецФункции

// Формирует и выводит печатные формы маршрутных карт изготовления продукции по заказам на производство.
//
// Параметры:
//  ДанныеОПродукции - Массив - содержит структуры с ключами:
//		* Заказ - ДокументСсылка.ЗаказНаПроизводство - заказ, данные которого необходимо вывести на печать.
//		* КодСтроки - Число - код строки продукции заказа на производство.
//
Процедура ПечатьМаршрутныхКартНаПродукцию(ДанныеОПродукции) Экспорт
	
	Если ДанныеОПродукции.Количество() = 0 Тогда
		Возврат;
	КонецЕсли;
	
	ДанныеДляПечати = ОперативныйУчетПроизводстваВызовСервера.ПодготовитьДанныеДляПечатиМаршрутнойКартыНаПродукцию(ДанныеОПродукции);
	
	Если ДанныеДляПечати.ЕстьПолуфабрикаты Тогда
		ОписаниеОповещения = Новый ОписаниеОповещения("ПечатьМаршрутныхКартНаПродукциюЗавершение", ЭтотОбъект);
		ПараметрыФормы = Новый Структура("АдресХранилища", ДанныеДляПечати.АдресХранилища);
		ОткрытьФорму("Документ.ЗаказНаПроизводство.Форма.ПечатьМаршрутныхКартНаПродукцию", ПараметрыФормы,,,,,ОписаниеОповещения);
	Иначе
		ПечатьМаршрутныхКартНаПродукциюЗавершение(ДанныеДляПечати, Неопределено);
	КонецЕсли;

КонецПроцедуры

#КонецОбласти
//-- Устарело_Производство21

//++ Устарело_Переработка24
#Область ДокументОтчетДавальцу

// Печатает акт выполненных работ из отчета давальцу.
//
// Параметры:
//  ОписаниеКоманды - Структура - сведения о выполняемой команде.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьАктаОтчетДавальцуMicrosoftWord(ОписаниеКоманды) Экспорт
	
	Состояние(НСтр("ru = 'Выполняется формирование печатных форм';
					|en = 'Generating print forms'"));
	
	ИмяМакета = "ПФ_DOC_Акт";
	ТипМакета = "doc";
	
	МакетИДанныеОбъекта = УправлениеПечатьюВызовСервера.МакетыИДанныеОбъектовДляПечати("Документ.ОтчетДавальцу",
		ИмяМакета,
		ОписаниеКоманды.ОбъектыПечати);
		
	ДвоичныеДанныеМакетов = МакетИДанныеОбъекта.Макеты.ДвоичныеДанныеМакетов;
	
	Секции = МакетИДанныеОбъекта.Макеты.ОписаниеСекций;
	
	Для Каждого ДокументСсылка Из ОписаниеКоманды.ОбъектыПечати Цикл
		
		ДанныеОбъекта = МакетИДанныеОбъекта.Данные[ДокументСсылка][ИмяМакета];
		
		Попытка
			
			ПечатнаяФорма = УправлениеПечатьюКлиент.ИнициализироватьПечатнуюФорму(ТипМакета);
			Макет = УправлениеПечатьюКлиент.ИнициализироватьМакетОфисногоДокумента(
				ДвоичныеДанныеМакетов[ИмяМакета], ТипМакета);
				
			// Вывод колонтитулов документа.
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["ВерхнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
		
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет, Секции[ИмяМакета]["НижнийКолонтитул"]);
			УправлениеПечатьюКлиент.ПрисоединитьОбластьИЗаполнитьПараметры(ПечатнаяФорма, Область, ДанныеОбъекта, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].ЗаголовокДокумента);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.ДополнительнаяИнформацияШапки) Тогда
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].ДополнительнаяИнформацияШапки);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].ЗаголовокШапки);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			
			ЕстьНДС = ДанныеОбъекта.УчитыватьНДС;
			ПоказыватьНДС = ДанныеОбъекта.ПоказыватьНДС;
			
			СуффиксОбласти = ?(ЕстьНДС И ПоказыватьНДС, "СНДС", "");
			
			ОбластьШапки = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета]["ШапкаТаблицы" + СуффиксОбласти]);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, ОбластьШапки, Ложь);

			ОбластьСтроки = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета]["Строка" + СуффиксОбласти]);
			УправлениеПечатьюКлиент.ПрисоединитьИЗаполнитьКоллекцию(ПечатнаяФорма,ОбластьСтроки, ДанныеОбъекта.Услуги, Ложь);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].Итого);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ЕстьНДС Тогда
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].ИтогоНДС);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].СуммаПрописью);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].Подписи);
			УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
			УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			
			Если ЗначениеЗаполнено(ДанныеОбъекта.ДополнительнаяИнформация) Тогда
				Область = УправлениеПечатьюКлиент.ОбластьМакета(Макет,Секции[ИмяМакета].ДополнительнаяИнформация);
				УправлениеПечатьюКлиент.ПрисоединитьОбласть(ПечатнаяФорма, Область, Ложь);
				УправлениеПечатьюКлиент.ЗаполнитьПараметры(ПечатнаяФорма, ДанныеОбъекта);
			КонецЕсли;

			УправлениеПечатьюКлиент.ПоказатьДокумент(ПечатнаяФорма);
			
		Исключение
			
			ОбщегоНазначенияКлиентСервер.СообщитьПользователю(КраткоеПредставлениеОшибки(ИнформацияОбОшибке()));
			
			УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма);
			УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
			
			Возврат Ложь;
			
		КонецПопытки;
		
		УправлениеПечатьюКлиент.ОчиститьСсылки(ПечатнаяФорма, Ложь);
		УправлениеПечатьюКлиент.ОчиститьСсылки(Макет);
		
	КонецЦикла;
	
	Состояние(НСтр("ru = 'Формирование печатных форм завершено';
					|en = 'Print from generation is completed'"));
	
КонецФункции

#КонецОбласти
//-- Устарело_Переработка24

#Область ЗаказНаПроизводство2_2

// Открывает форму для формирования печатной формы этапа производства.
//
// Параметры:
//  ОписаниеКоманды - Структура - сведения о выполняемой команде.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьЗаданиеНаПроизводство(ОписаниеКоманды) Экспорт
	
	ПараметрыФормы = Новый Структура("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати);
	
	ОткрытьФорму(
		"Документ.ЭтапПроизводства2_2.Форма.ПараметрыПечатиЗаданиеНаПроизводство",
		ПараметрыФормы,
		ОписаниеКоманды.Форма);
	
КонецФункции

// Открывает форму для формирования печатной формы партии этапа производства.
//
// Параметры:
//  ОписаниеКоманды - Структура - сведения о выполняемой команде.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьЛистСопровожденияПартииПроизводства(ОписаниеКоманды) Экспорт
	
	ОткрытьФорму(
		"Документ.ЭтапПроизводства2_2.Форма.ПараметрыПечатиЛистСопровожденияПартииПроизводства",
		Новый Структура("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати),
		ОписаниеКоманды.Форма);
	
КонецФункции

#КонецОбласти

#Область РабочиеЦентры

// Открывает форму для формирования этикетки рабочего центра или выводит печатный форму.
//
// Параметры:
//  ОписаниеКоманды - Структура - сведения о выполняемой команде.
//
// Возвращаемое значение:
//	Неопределено
//
Функция ПечатьЭтикеткаРабочегоЦентра(ОписаниеКоманды) Экспорт
	
	Если ОписаниеКоманды.Форма.ИмяФормы = "Справочник.РабочиеЦентры.Форма.ФормаЭлемента" Тогда
	
		ОткрытьФорму(
			"Справочник.РабочиеЦентры.Форма.ПараметрыПечатиЭтикеткаРабочегоЦентра",
			Новый Структура("ОбъектыПечати", ОписаниеКоманды.ОбъектыПечати),
			ОписаниеКоманды.Форма);
		
	КонецЕсли;
	
КонецФункции

#КонецОбласти

//-- НЕ УТКА

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

//++ НЕ УТКА

//++ Устарело_Производство21

// Продолжение процедуры ПечатьМаршрутныхКартНаПродукцию
Процедура ПечатьМаршрутныхКартНаПродукциюЗавершение(ДанныеДляПечати, ДополнительныеПараметры) Экспорт

	Если ДанныеДляПечати = Неопределено Тогда
		Возврат;
	КонецЕсли; 
		
	ПараметрыПечати = Новый Структура;
	ПараметрыПечати.Вставить("ДополнительныеПараметры",
		Новый Структура("ДанныеДляПечати", ДанныеДляПечати.ДанныеДляПечати));
	
	УправлениеПечатьюКлиент.ВыполнитьКомандуПечати(
		"Документ.ЗаказНаПроизводство",
		"МаршрутнаяКартаНаПродукцию",
		ДанныеДляПечати.МассивОбъектов,
		Неопределено,
		ПараметрыПечати);
		
КонецПроцедуры

//-- Устарело_Производство21

//-- НЕ УТКА

#КонецОбласти
