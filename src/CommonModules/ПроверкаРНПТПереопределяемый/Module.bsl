
#Область ПрограммныйИнтерфейс

// Формирует таблицу документов со статусами проверки РНПТ в зависимости от переданных параметров поиска.
//
// Параметры:
//  ПараметрыПоиска - Структура с полями:
//    * Организация - СправочникСсылка - ссылка на организацию, по которой происходит поиск
//    * НачалоПериода - Дата - дата начала поиска
//    * КонецПериода - Дата - дата окончания поиска
//    * Контрагент - СправочникСсылка - контрагент по которому происходит поиск (может быть пустой)
//    * НастройкаОтображенияДокументов - Число (0 - все, 1 - с ошибками, 2 - без ошибок)
//    * РежимРасшифровки - Булево - признак, необходимый для получения сведений из отчета "снаружи"
//    * ЭтоВходящийДокумент - Булево - признак того, что нужно отбирать входящие документы
//
// Возвращаемое значение:
//  ТаблицаЗначений - см. текст запроса функции
//
Функция ДокументыСоСтатусомПроверкиРНПТ(ПараметрыПоискаДокументов) Экспорт
	
	Если НЕ ПравоДоступа("Просмотр", Метаданные.Отчеты.АнализРНПТДокументов) Тогда
		// Для пользователей без доступа к отчету не получаем список документов с ошибками.
		Возврат Новый ТаблицаЗначений;
	КонецЕсли;
	
	Запрос = Новый Запрос;
	Запрос.УстановитьПараметр("Организация",                    ПараметрыПоискаДокументов.Организация);
	Запрос.УстановитьПараметр("НачалоПериода",                  ПараметрыПоискаДокументов.НачалоПериода);
	Запрос.УстановитьПараметр("КонецПериода",                   ПараметрыПоискаДокументов.КонецПериода);
	Запрос.УстановитьПараметр("НастройкаОтображенияДокументов", ПараметрыПоискаДокументов.НастройкаОтображенияДокументов);
	
	ТекстЗапроса = 
	"ВЫБРАТЬ
	|	СтатусыПроверокРНПТДокументов.Организация КАК Организация,
	|	СтатусыПроверокРНПТДокументов.Документ КАК Документ,
	|	СтатусыПроверокРНПТДокументов.Контрагент КАК Контрагент,
	|	СтатусыПроверокРНПТДокументов.СтатусПроверки КАК СтатусПроверки,
	|	ВЫБОР СтатусыПроверокРНПТДокументов.СтатусПроверки
	|		КОГДА ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиРНПТ.НекорректныйРНПТ)
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК Ошибка,
	|	ВЫБОР
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ИСТИНА
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ КАК ЭтоВходящийДокумент,
	|	ДанныеПервичныхДокументов.Номер КАК Номер,
	|	ДанныеПервичныхДокументов.Дата КАК Дата,
	|	ВЫБОР
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.ПриобретениеТоваровУслуг).СуммаДокумента
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.РеализацияТоваровУслуг).СуммаДокумента
	|		ИНАЧЕ 0
	|	КОНЕЦ КАК СуммаДокумента,
	|	ВЫБОР
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.ПриобретениеТоваровУслуг).Валюта
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.РеализацияТоваровУслуг).Валюта
	|		ИНАЧЕ НЕОПРЕДЕЛЕНО
	|	КОНЕЦ КАК ВалютаДокумента,
	|	ТИПЗНАЧЕНИЯ(СтатусыПроверокРНПТДокументов.Документ) КАК ДокументТип,
	|	СтатусыПроверокРНПТДокументов.ОписаниеОшибки КАК ОписаниеОшибки
	|ИЗ
	|	РегистрСведений.СтатусыПроверокРНПТДокументов КАК СтатусыПроверокРНПТДокументов
	|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрСведений.ДанныеПервичныхДокументов КАК ДанныеПервичныхДокументов
	|		ПО СтатусыПроверокРНПТДокументов.Организация = ДанныеПервичныхДокументов.Организация
	|			И СтатусыПроверокРНПТДокументов.Документ = ДанныеПервичныхДокументов.Документ
	|ГДЕ
	|	ВЫБОР
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.ПриобретениеТоваровУслуг).Дата
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.РеализацияТоваровУслуг).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ >= &НачалоПериода
	|	И ВЫБОР
	|		КОГДА &КонецПериода = ДАТАВРЕМЯ(1, 1, 1)
	|			ТОГДА ДАТАВРЕМЯ(1, 1, 1)
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.ПриобретениеТоваровУслуг).Дата
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.РеализацияТоваровУслуг).Дата
	|		ИНАЧЕ ДАТАВРЕМЯ(1, 1, 1)
	|	КОНЕЦ <= &КонецПериода
	|	И ВЫБОР
	|		КОГДА &НастройкаОтображенияДокументов = 0
	|			ТОГДА ИСТИНА
	|		КОГДА &НастройкаОтображенияДокументов = 1
	|			ТОГДА СтатусыПроверокРНПТДокументов.СтатусПроверки = ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиРНПТ.НекорректныйРНПТ)
	|		ИНАЧЕ СтатусыПроверокРНПТДокументов.СтатусПроверки = ЗНАЧЕНИЕ(Перечисление.СтатусыПроверкиРНПТ.Проверено)
	|	КОНЕЦ
	|	И ДанныеПервичныхДокументов.Организация В (&Организация)
	|	И СтатусыПроверокРНПТДокументов.Контрагент = &Контрагент
	|	И &ОтборВходящийДокумент
	|	И ВЫБОР
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.ПриобретениеТоваровУслуг).Проведен
	|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.РеализацияТоваровУслуг
	|			ТОГДА ВЫРАЗИТЬ(СтатусыПроверокРНПТДокументов.Документ КАК Документ.РеализацияТоваровУслуг).Проведен
	|		ИНАЧЕ ЛОЖЬ
	|	КОНЕЦ
	|
	|УПОРЯДОЧИТЬ ПО
	|	Контрагент,
	|	Документ";
	
	Если Не ЗначениеЗаполнено(ПараметрыПоискаДокументов.Организация) Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "ДанныеПервичныхДокументов.Организация В (&Организация)", "ИСТИНА");
	КонецЕсли;
	
	// Отбор передаем из списка документов.
	Если ПараметрыПоискаДокументов.Свойство("Контрагент") И ЗначениеЗаполнено(ПараметрыПоискаДокументов.Контрагент) Тогда
		Запрос.УстановитьПараметр("Контрагент", ПараметрыПоискаДокументов.Контрагент);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "СтатусыПроверокРНПТДокументов.Контрагент = &Контрагент", "ИСТИНА");
	КонецЕсли;
	
	Если ПараметрыПоискаДокументов.Свойство("ЭтоВходящийДокумент") Тогда
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборВходящийДокумент", "
		|	ВЫБОР
		|		КОГДА СтатусыПроверокРНПТДокументов.Документ ССЫЛКА Документ.ПриобретениеТоваровУслуг
		|			ТОГДА ИСТИНА
		|		ИНАЧЕ ЛОЖЬ
		|	КОНЕЦ = &ЭтоВходящийДокумент");
		Запрос.УстановитьПараметр("ЭтоВходящийДокумент", ПараметрыПоискаДокументов.ЭтоВходящийДокумент);
	Иначе
		ТекстЗапроса = СтрЗаменить(ТекстЗапроса, "&ОтборВходящийДокумент", "ИСТИНА");
	КонецЕсли;
	
	Запрос.Текст = ТекстЗапроса;
	
	Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

// Добавляет дополнительные поля для проверки РНПТ.
//
// Параметры:
//  ТаблицаДанныеРНПТ - ТаблицаЗначений - таблица, которую необходимо дополнить реквизитами для проверки
//
Процедура ДобавитьДополнительныеКолонкиДляПроверки(ТаблицаДанныеРНПТ) Экспорт
	
КонецПроцедуры

// Заполняет дополнительные поля для проверки нужными значениями
//
// Параметры:
//  ДанныеРНПТ - ТаблицаЗначений - см.ПроверкаРНПТ.НовыйТаблицаДанныхРНПТ()
//  Параметры - ФормаКлиентскогоПриложения или Структура с полями для заполнения дополнительных колонок для проверки.
//
Процедура ЗаполнитьДополнительныеКолонкиДляПроверки(ДанныеРНПТ, Параметры) Экспорт
	
КонецПроцедуры

// Проверяет дополнительные колонки РНПТ.
//
// Параметры:
//  ПроверяемаяСтрока - Структура - строка с доп. полями по данным документа.
//  ЭталоннаяСтрока - Структура с доп. полями по данным ФНС.
//  ТолькоТекстОшибки - Булево - признак, указывающий, что процедура вызывается только для формирования текста ошибки.
//
Процедура ПроверитьДополнительныеКолонки(ПроверяемаяСтрока, ЭталоннаяСтрока, ТолькоТекстОшибки = Ложь) Экспорт
	
КонецПроцедуры

// Проверяет соответствует ли код РНПТ формату.
//
// Параметры:
//  КодРНПТ - Строка - проверяемый код
// Возвращаемое значение:
// Булево - истина если соответствует, ложь если не соответствует.
Функция РНПТСоответствуетФормату(КодРНПТ) Экспорт
	
	Возврат Истина;
	
КонецФункции

// Возвращает для документа какие табличные части могут быть с прослеживаемым товаром.
//
// Параметры:
//  ДокументОбъект - проверяемы документ
// Возвращаемое значение:
// Массив - наименование табличных частей с прослеживаемостью
Функция ТабличныеЧастиДокументаСПрослеживаемостью(ДокументОбъект) Экспорт
	
	ТабличныеЧастиДокументаСПрослеживаемостью = Новый Массив;
	
	Возврат ТабличныеЧастиДокументаСПрослеживаемостью;
	
КонецФункции

// Возвращает текст запроса для проверки РНПТ документов регламентным заданием.
//
// Возвращаемое значение:
//  Строка - текст запроса
Функция ТекстЗапросаПроверкиРНПТРегЗаданием() Экспорт
	
	Возврат "ВЫБРАТЬ ПЕРВЫЕ 0
	|	ДокументыКПроверке.Ссылка КАК Ссылка
	|ИЗ
	|	Документ.ПриобретениеТоваровУслуг КАК ДокументыКПроверке";
	
КонецФункции

// Меняет текст запроса для получения сведений о РНПТ из ФНС
// Параметры:
//  Запрос - запрос, текст которого необходимо переопределить.
//
Процедура ПереопределитьТекстЗапросаДляПолученияСведенийОРНПТ(Запрос) Экспорт
	
КонецПроцедуры

// Возвращает тип справочника РНПТ.
//
// Возвращаемое значение:
// Тип - тип справочника РНПТ
Функция ТипСправочникаРНПТ() Экспорт
	
	Возврат Тип("СправочникСсылка.НомераГТД");
	
КонецФункции

// Ищет элемент справочника РНПТ по коду.
// 
// Параметры:
// КодРНПТ - строка - код РНПТ элемента справочника.
// 
// Возвращаемое значение:
//  СправочникСсылка - ссылка на элемент справочника РНПТ
Функция РНПТПоКоду(КодРНПТ) Экспорт
	
	Возврат Справочники.НомераГТД.НайтиПоКоду(КодРНПТ);
	
КонецФункции

// Возвращает текст запроса для получения кода РНПТ.
//
// Возвращаемое значение:
//  Строка - текст запроса
Функция ТекстПолученияКодаРНПТВЗапросе() Экспорт
	
	Возврат "ВЫРАЗИТЬ(ДанныеРНПТ.РНПТ КАК Справочник.НомераГТД).Код";
	
КонецФункции

// Удаляет повторяющиеся элементы массива.
//
// Параметры:
//  ОбрабатываемыйМассив - Массив - элементы произвольных типов, из которых удаляются неуникальные.
//
// Возвращаемое значение:
//   Массив      - элементы ОбрабатываемыйМассив после удаления лишних.
//
Функция УдалитьПовторяющиесяЭлементыМассива(ОбрабатываемыйМассив) Экспорт
	
	Возврат ОбщегоНазначенияКлиентСервер.СвернутьМассив(ОбрабатываемыйМассив);
	
КонецФункции

// Проверяет есть ли прослеживаемые товары в документе
//
// Параметры:
// ДокументОбъект - документ, который требуется проверить
//
// Возвращаемое значение:
// Булево - признак того, что в документе есть прослеживаемые товары
Функция ЕстьПрослеживаемыеТовары(ДокументОбъект) Экспорт
	
	Возврат Ложь;
	
КонецФункции

#КонецОбласти
