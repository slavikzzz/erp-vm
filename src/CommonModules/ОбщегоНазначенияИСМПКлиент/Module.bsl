#Область ПрограммныйИнтерфейс

#Область РазрешительныйРежимCDNПлощадки

// Запуск актуализации списка CDN-площадок. При необходимости проверяет, требуется ли обновление по времени
// 
// Параметры:
//  Форма - ФормаКлиентскогоПриложения - форма-источник
//  Организация - СправочникСсылка.Организации - организация, от имени которой выполняется запрос к ГИС МТ
//  ДополнительныеПараметры - Неопределено, Структура - Дополнительные параметры
//  ОповещениеПриЗавершении - Неопределено, ОписаниеОповещения - процедура, вызываемая при завершении
Процедура АктуализироватьСписокCDNПлощадок(Форма, Организация, ДополнительныеПараметры = Неопределено, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	Если ДополнительныеПараметры <> Неопределено
		И ДополнительныеПараметры.Свойство("ПроверитьНеобходимостьОбновления")
		И ДополнительныеПараметры.ПроверитьНеобходимостьОбновления Тогда
			
		НеобходимоОбновлять = ОбщегоНазначенияИСМПВызовСервера.ПроверитьНеобходимостьОбновленияCDNПлощадок();
		
		Если Не НеобходимоОбновлять Тогда
			
			Если ОповещениеПриЗавершении <> Неопределено Тогда
				ВыполнитьОбработкуОповещения(ОповещениеПриЗавершении);
			КонецЕсли;
			
			Возврат;
			
		КонецЕсли;
		
	КонецЕсли;
	
	РезультатОбновления = ОбщегоНазначенияИСМПВызовСервера.ЗапуститьОбновлениеCDNПлощадок(Организация, Форма.УникальныйИдентификатор);
	
	ОбработатьРезультатАктуализацииCDNПлощадок(
		РезультатОбновления, Форма, Организация, Неопределено, ОповещениеПриЗавершении);
	
КонецПроцедуры

// Операция инициализации конфигурации локального модуля "Честный знак", первый этап настройки
// 
// Параметры:
//  Организация - ОпределяемыйТип.Организация - Организация
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  УникальныйИдентификатор - УникальныйИдентификатор
// 
// Возвращаемое значение:
//  Структура:
//   * ЕстьОшибки - Булево - Истина, если есть ошибки
//   * ТребуетсяОбновлениеКлючаСессииРозница - Булево - если отсутствует розничный токен
//   * ОтказАвторизации - Булево - Истина, если переданы некорректные данные подключения администратора Локального модуля
//   * ТекстОшибки - Строка - полный текст ошибки
Функция ВыполнитьИнициализациюКонфигурацииЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, УникальныйИдентификатор = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                            Ложь);
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессииРозница", Ложь);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",                      Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                           "");
	
	РезультатОбновления = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ИнициализацияКонфигурацииЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки);
	
	ВозвращаемоеЗначение.ЕстьОшибки                            = ЗначениеЗаполнено(РезультатОбновления.ТекстОшибки);
	ВозвращаемоеЗначение.ТребуетсяОбновлениеКлючаСессииРозница = РезультатОбновления.ТребуетсяОбновлениеКлючаСессииРозница;
	ВозвращаемоеЗначение.ТекстОшибки                           = РезультатОбновления.ТекстОшибки;
	ВозвращаемоеЗначение.ОтказАвторизации                      = РезультатОбновления.ОтказАвторизации;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Получение в фоне статуса Локального модуля "Честный знак"
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, от имени которой выполняется запрос к ГИС МТ
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - Уникальный идентификатор формы
// 
// Возвращаемое значение:
//  Структура:
//   * ЕстьОшибки - Булево - Истина, если есть ошибки
//   * ОтказАвторизации - Булево - Истина, если переданы некорректные данные подключения администратора Локального модуля
//   * ТекстОшибки - Строка - полный текст ошибки
//   * ВерсияСборки - Строка - версия текущей сборки ЛМ ЧЗ
//   * Статус - Строка - текущий статус ЛМ ЧЗ
//   * ДатаПоследнейСинхронизации - Дата - дата последней синхронизации
//   * ТребуетсяЗагрузка - Булево - Истина, если требуется обновление токена
Функция ЗапроситьСтатусЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, УникальныйИдентификатор = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                 Ложь);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",           Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                "");
	ВозвращаемоеЗначение.Вставить("ВерсияСборки",               "");
	ВозвращаемоеЗначение.Вставить("Статус",                     "");
	ВозвращаемоеЗначение.Вставить("ДатаПоследнейСинхронизации", Дата(1, 1, 1));
	ВозвращаемоеЗначение.Вставить("ТребуетсяЗагрузка",          Ложь);
	
	РезультатОбновления = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ЗапроситьСтатусЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки);
	
	ВозвращаемоеЗначение.ЕстьОшибки                 = ЗначениеЗаполнено(РезультатОбновления.ТекстОшибки);
	ВозвращаемоеЗначение.ТекстОшибки                = РезультатОбновления.ТекстОшибки;
	ВозвращаемоеЗначение.ОтказАвторизации           = РезультатОбновления.ОтказАвторизации;
	ВозвращаемоеЗначение.ВерсияСборки               = РезультатОбновления.ВерсияСборки;
	ВозвращаемоеЗначение.Статус                     = РезультатОбновления.Статус;
	ВозвращаемоеЗначение.ТребуетсяЗагрузка          = РезультатОбновления.ТребуетсяЗагрузка;
	ВозвращаемоеЗначение.ДатаПоследнейСинхронизации = РезультатОбновления.ДатаПоследнейСинхронизации;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Изменение в фоне пароля администратора Локального модуля "Честный знак"
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, от имени которой выполняется запрос к ГИС МТ
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  НовыйПароль - Строка - согласно API ЛМ ЧЗ должна отвечать следующим требованиям:
//		Пароль не может содержать пустую строку
//		Длина пароля должна быть не менее 8 символов. 
//		Пароль должен содержать буквы и цифры
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - Уникальный идентификатор формы
// 
// Возвращаемое значение:
//  Структура:
//   * ЕстьОшибки - Булево - Истина, если есть ошибки
//   * ОтказАвторизации - Булево - Истина, если переданы некорректные данные подключения администратора Локального модуля
//   * ТекстОшибки - Строка - полный текст ошибки
Функция ИзменитьПарольАдминистратораЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, НовыйПароль, УникальныйИдентификатор = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",       Ложь);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации", Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",      "");
	
	РезультатОбновления = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ИзменитьПарольАдминистратораЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, НовыйПароль);
	
	ВозвращаемоеЗначение.ЕстьОшибки       = ЗначениеЗаполнено(РезультатОбновления.ТекстОшибки);
	ВозвращаемоеЗначение.ТекстОшибки      = РезультатОбновления.ТекстОшибки;
	ВозвращаемоеЗначение.ОтказАвторизации = РезультатОбновления.ОтказАвторизации;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Настройка товарных групп Локального модуля "Честный знак". Финальный этап настройки.
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, от имени которой выполняется запрос к ГИС МТ
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  ПараметрыНастройкиТоварныхГрупп - Соответствие из КлючИЗначение:
//  	Ключ - ПеречислениеСсылка.ВидыПродукцииИС - товарная группа для настройки
//  	Значение - Число - количество дней для выгрузки карточек КИ
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - Уникальный идентификатор формы
// 
// Возвращаемое значение:
//  Структура:
//   * ЕстьОшибки - Булево - Истина, если есть ошибки
//   * ОтказАвторизации - Булево - Истина, если переданы некорректные данные подключения администратора Локального модуля
//   * ТекстОшибки - Строка - полный текст ошибки
//   * ТребуетсяОбновлениеКлючаСессииРозница - Булево - Истина, если требуется обновление токена
Функция НастроитьТоварныеГруппыЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, ПараметрыНастройкиТоварныхГрупп, УникальныйИдентификатор = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",                            Ложь);
	ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессииРозница", Ложь);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",                      Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",                           "");
	
	РезультатОбновления = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.НастройкаТоварныхГруппЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, ПараметрыНастройкиТоварныхГрупп);
	
	ВозвращаемоеЗначение.ЕстьОшибки                            = ЗначениеЗаполнено(РезультатОбновления.ТекстОшибки);
	ВозвращаемоеЗначение.ТребуетсяОбновлениеКлючаСессииРозница = РезультатОбновления.ТребуетсяОбновлениеКлючаСессииРозница;
	ВозвращаемоеЗначение.ТекстОшибки                           = РезультатОбновления.ТекстОшибки;
	ВозвращаемоеЗначение.ОтказАвторизации                      = РезультатОбновления.ОтказАвторизации;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

// Проверка конфигурации Локального модуля "Честный знак". Для проверки применения настроек ТГ и готовности к работе
// 
// Параметры:
//  Организация - СправочникСсылка.Организации - организация, от имени которой выполняется запрос к ГИС МТ
//  ПараметрыУстановки - см. ОбщегоНазначенияИСМПКлиентСервер.ПараметрыПодключенияЛокальногоМодуляЧЗ
//  УникальныйИдентификатор - УникальныйИдентификатор, Неопределено - Уникальный идентификатор формы
// 
// Возвращаемое значение:
//  Структура:
//   * ЕстьОшибки - Булево - Истина, если есть ошибки
//   * ОтказАвторизации - Булево - Истина, если переданы некорректные данные подключения администратора Локального модуля
//   * ТекстОшибки - Строка - полный текст ошибки
//   * АдресСервернойЧасти - Строка - адрес подключения к серверной части ЛМ ЧЗ
//   * НастройкаТоварныхГрупп - Неопределено, Соответствие из КлючИЗначение - настройка загруженных карточек ТГ
Функция ПолучитьКонфигурациюЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки, УникальныйИдентификатор = Неопределено) Экспорт
	
	ВозвращаемоеЗначение = Новый Структура;
	ВозвращаемоеЗначение.Вставить("ЕстьОшибки",             Ложь);
	ВозвращаемоеЗначение.Вставить("ОтказАвторизации",       Ложь);
	ВозвращаемоеЗначение.Вставить("ТекстОшибки",            "");
	ВозвращаемоеЗначение.Вставить("АдресСервернойЧасти",    "");
	ВозвращаемоеЗначение.Вставить("НастройкаТоварныхГрупп", Неопределено);
	
	РезультатОбновления = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ЗапроситьКонфигурациюЛокальногоМодуляЧЗ(Организация, ПараметрыУстановки);
	
	ВозвращаемоеЗначение.ЕстьОшибки                            = ЗначениеЗаполнено(РезультатОбновления.ТекстОшибки);
	ВозвращаемоеЗначение.ТекстОшибки                           = РезультатОбновления.ТекстОшибки;
	ВозвращаемоеЗначение.ОтказАвторизации                      = РезультатОбновления.ОтказАвторизации;
	ВозвращаемоеЗначение.АдресСервернойЧасти                   = РезультатОбновления.АдресСервернойЧасти;
	ВозвращаемоеЗначение.НастройкаТоварныхГрупп                = РезультатОбновления.НастройкаТоварныхГрупп;
	
	Возврат ВозвращаемоеЗначение;
	
КонецФункции

#КонецОбласти

#Область РазрешительныйРежим

// Процедура вызывается перед запросом подписи ЭЦП для проверки, если идет работа с продукцией, подлежащей
// разрешительному режиму, но версия ФФД не поддерживает его (менее 1.2)
// 
// Параметры:
//  ПараметрыСканирования             - см. ШтрихкодированиеОбщегоНазначенияИС.ПараметрыСканирования
//  ВидыПродукции                     - Массив Из ПеречислениеСсылка.ВидыПродукцииИС
//  ОповещениеПослеПросмотраСообщения - Неопределено, ОписаниеОповещения - описание оповещение, если требуется, выполняемое
//  	после просмотра предупреждения
// Возвращаемое значение:
//  Булево - Истина, если ФФД не поддерживает разрешительный режим, а даты требуют его
Функция ПроверитьРаботуСРазрешительнымРежимомФФД_1_05(ПараметрыСканирования, ВидыПродукции, ОповещениеПослеПросмотраСообщения = Неопределено) Экспорт
	
	Отказ                                      = Ложь;
	ТребуетсяОнлайнПроверкаПриРозничнойПродаже = Ложь;
	
	Для Каждого ВидПродукции Из ВидыПродукции Цикл
		
		Если ОбщегоНазначенияИСМПКлиентСерверПовтИсп.ЗапрещенаРаботаРазрешительногоРежимаСФФД_1_05(
			ВидПродукции,
			ПараметрыСканирования.ВидОперацииИСМП,
			ПараметрыСканирования.ТребуетсяПроверкаСредствамиККТ,
			ПараметрыСканирования.ПодключенноеККТИСМП,
			ПараметрыСканирования.ЭтоОблачнаяККТИСМП) Тогда
			ТребуетсяОнлайнПроверкаПриРозничнойПродаже = Истина;
		КонецЕсли;
		
		Если ТребуетсяОнлайнПроверкаПриРозничнойПродаже Тогда
			Прервать;
		КонецЕсли;
		
	КонецЦикла;
	
	Если ТребуетсяОнлайнПроверкаПриРозничнойПродаже Тогда
		
		// продукция подлежит РР, но версия ФФД ККТ не удовлетворяет требованиям
		Отказ = Истина;
		ПоказатьПредупреждение(ОповещениеПослеПросмотраСообщения,
			ШтрихкодированиеОбщегоНазначенияИСМПКлиентСервер.ТекстОшибкиЗапрещенаРаботаРазрешительногоРежимаСФФД_1_05());
		
	КонецЕсли;
	
	Возврат Отказ;
	
КонецФункции

#КонецОбласти

// Открыть форму списка вскрытых потребительских упаковок.
// 
// Параметры:
//  ПараметрыОткрытия - см. ОбщегоНазначенияИСКлиент.ПараметрыОткрытияФормыСпискаПотребительскихУпаковок
Процедура ОткрытьФормуСпискаВскрытыхПотребительскихУпаковок(ПараметрыОткрытия) Экспорт
	
	Если ПараметрыОткрытия.ПараметрыФормы = Неопределено Тогда
		ПараметрыОткрытия.ПараметрыФормы = Новый Структура;
	КонецЕсли;
	
	ПараметрыОткрытия.ПараметрыФормы.Вставить("ИмяПодсистемы", "ИСМП");
	
	Если ЗначениеЗаполнено(ПараметрыОткрытия.Организациия) Тогда
		
		СтруктураБыстрогоОтбора = Неопределено;
		Если Не ПараметрыОткрытия.ПараметрыФормы.Свойство("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора) Тогда
			СтруктураБыстрогоОтбора = Новый Структура();
			ПараметрыОткрытия.ПараметрыФормы.Вставить("СтруктураБыстрогоОтбора", СтруктураБыстрогоОтбора);
		КонецЕсли;
		
		СтруктураБыстрогоОтбора.Вставить("Организация", ПараметрыОткрытия.Организациия);
		СтруктураБыстрогоОтбора.Вставить("Организации", Новый СписокЗначений());
		СтруктураБыстрогоОтбора.Организации.Добавить(ПараметрыОткрытия.Организациия);
		
	КонецЕсли;
	
	ОткрытьФорму(
		"РегистрСведений.ВскрытыеПотребительскиеУпаковкиИС.ФормаСписка",
		ПараметрыОткрытия.ПараметрыФормы,
		ПараметрыОткрытия.ВладелецФормы,,,,
		ПараметрыОткрытия.ОповещениеОЗакрытии,
		ПараметрыОткрытия.РежимОткрытияОкна);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныйПрограммныйИнтерфейс

Процедура ПослеОтказаРаботыСРазрешительнымРежимомФФД_1_05(ДополнительныеПараметры) Экспорт
	
	Если ДополнительныеПараметры.Свойство("ОповещениеОтказаРаботы") Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеОтказаРаботы);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

#Область РазрешительныйРежимCDNПлощадки

Процедура ПослеЗавершенияДлительнойОперации(Результат, ДополнительныеПараметрыДлительнойОперации) Экспорт
	
	Если Результат = Неопределено Тогда // отменено пользователем
		Если ДополнительныеПараметрыДлительнойОперации.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметрыДлительнойОперации.ОповещениеПриЗавершении);
		КонецЕсли;
		Возврат;
	КонецЕсли;
	
	Если Результат.Сообщения <> Неопределено Тогда
		Для Каждого СообщениеПользователю Из Результат.Сообщения Цикл
			СообщениеПользователю.Сообщить();
		КонецЦикла;
	КонецЕсли;
	
	Если Результат.Статус = "Выполнено" Тогда
		
		РезультатОбмена = ПолучитьИзВременногоХранилища(Результат.АдресРезультата);
		
		ОбработатьРезультатОбменаСлужебный(РезультатОбмена, ДополнительныеПараметрыДлительнойОперации);
		
	ИначеЕсли Результат.Статус = "Ошибка" Тогда
		
		ОбщегоНазначенияКлиент.СообщитьПользователю(Результат.ПодробноеПредставлениеОшибки);
		
		Если ДополнительныеПараметрыДлительнойОперации.ОповещениеПриЗавершении <> Неопределено Тогда
			ВыполнитьОбработкуОповещения(ДополнительныеПараметрыДлительнойОперации.ОповещениеПриЗавершении, Новый Массив);
		КонецЕсли;
		
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьРезультатАктуализацииCDNПлощадок(РезультатОбмена, Форма, Организация, Контекст = Неопределено, ОповещениеПриЗавершении = Неопределено, ВыводитьОкноОжидания = Истина) Экспорт
	
	Если РезультатОбмена <> Неопределено Тогда
		
		ПараметрыОжидания = ДлительныеОперацииКлиент.ПараметрыОжидания(Неопределено);
		ПараметрыОжидания.ТекстСообщения             = НСтр("ru = 'Выполняется обновление CDN-площадок';
															|en = 'Выполняется обновление CDN-площадок'");
		ПараметрыОжидания.ВыводитьПрогрессВыполнения = Истина;
		ПараметрыОжидания.ВыводитьОкноОжидания       = ВыводитьОкноОжидания;
		ПараметрыОжидания.ВыводитьСообщения          = Истина;
		
		ПараметрыЗавершенияДлительнойОперации = ПараметрыЗавершенияДлительнойОперации();
		ПараметрыЗавершенияДлительнойОперации.Форма                   = Форма;
		ПараметрыЗавершенияДлительнойОперации.Контекст                = Контекст;
		ПараметрыЗавершенияДлительнойОперации.ОповещениеПриЗавершении = ОповещениеПриЗавершении;
		ПараметрыЗавершенияДлительнойОперации.Организация             = Организация;
		
		ДлительныеОперацииКлиент.ОжидатьЗавершение(
			РезультатОбмена,
			Новый ОписаниеОповещения("ПослеЗавершенияДлительнойОперации", ОбщегоНазначенияИСМПКлиент, ПараметрыЗавершенияДлительнойОперации),
			ПараметрыОжидания);
		
	КонецЕсли;
	
КонецПроцедуры

// Только для внутреннего использования.
Процедура ОбработатьРезультатОбменаСлужебный(РезультатОбмена, ДополнительныеПараметрыДлительнойОперации)
	
	Если РезультатОбмена.ЕстьОшибки Тогда
		Возврат;
	КонецЕсли;
	
	Если РезультатОбмена.ТребуетсяОбновлениеКлючаСессииРозница Тогда
		
		ОписаниеОповещения = Новый ОписаниеОповещения("АвторизацияПользователяЗавершение",
			ЭтотОбъект, ДополнительныеПараметрыДлительнойОперации);
		
		ПараметрыЗапросаКлючаСессии = ИнтерфейсИСМПОбщегоНазначенияКлиентСервер.ПараметрыЗапросаКлючаСессииИСМПРозница(ДополнительныеПараметрыДлительнойОперации.Организация);
		ИнтерфейсАвторизацииИСМПКлиент.ЗапроситьКлючСессии(ПараметрыЗапросаКлючаСессии, ОписаниеОповещения);
		
		Возврат;
		
	КонецЕсли;
	
КонецПроцедуры

// Выполняет повторно вызов клиентских функий актуализации CDN-площадок в случае успешного прохождения авторизации.
// 
// Параметры:
// 	Результат - Соответствие из КлючИЗначение - содержит информация о необходимости авторизации по организации.
// 	ДополнительныеПараметры - (См. ПараметрыЗавершенияДлительнойОперации).
Процедура АвторизацияПользователяЗавершение(Результат, ДополнительныеПараметры) Экспорт
	
	Если ТипЗнч(Результат) <> Тип("Соответствие") Тогда
		Возврат;
	КонецЕсли;
	
	Организация = ДополнительныеПараметры.Организация;
	
	АвторизацияПрошлаУспешно = Результат[Организация] = Истина;
	
	Если АвторизацияПрошлаУспешно Тогда
		
		АктуализироватьСписокCDNПлощадок(ДополнительныеПараметры.Форма,
			ДополнительныеПараметры.Организация,,
			ДополнительныеПараметры.ОповещениеПриЗавершении);
		
	Иначе
		
		ВозвращаемоеЗначение = Новый Структура();
		ВозвращаемоеЗначение.Вставить("ТребуетсяОбновлениеКлючаСессииРозница", Истина);
		
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, ВозвращаемоеЗначение);
		
	КонецЕсли;
	
КонецПроцедуры

Функция ПараметрыЗавершенияДлительнойОперации()
	
	ПараметрыЗавершения = Новый Структура;
	ПараметрыЗавершения.Вставить("Форма");
	ПараметрыЗавершения.Вставить("Контекст");
	ПараметрыЗавершения.Вставить("ОповещениеПриЗавершении");
	ПараметрыЗавершения.Вставить("Организация");
	
	Возврат ПараметрыЗавершения;
	
КонецФункции

#КонецОбласти

#Область ОтборПоОрганизации

Процедура ОткрытьФормуВыбораОрганизаций(Форма, Префикс, Префиксы = Неопределено, ОповещениеПриЗавершении = Неопределено) Экспорт
	
	ПараметрыОткрытияФормы = Новый Структура;
	ПараметрыОткрытияФормы.Вставить("Организации",           Форма.Организации.ВыгрузитьЗначения());
	
	ДополнительныеПараметры = Новый Структура;
	ДополнительныеПараметры.Вставить("Форма",                   Форма);
	ДополнительныеПараметры.Вставить("Префикс",                 Префикс);
	ДополнительныеПараметры.Вставить("Префиксы",                Префиксы);
	ДополнительныеПараметры.Вставить("ОповещениеПриЗавершении", ОповещениеПриЗавершении);
	
	ОткрытьФорму(
		"ОбщаяФорма.ФормаВыбораСпискаОрганизацийИСМП",
		ПараметрыОткрытияФормы,
		Форма,,,,
		Новый ОписаниеОповещения("ПослеЗавершенияВыбораОрганизаций", ЭтотОбъект, ДополнительныеПараметры));
	
КонецПроцедуры

Процедура ПослеЗавершенияВыбораОрганизаций(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Форма             = ДополнительныеПараметры.Форма;
	СписокОрганизаций = Результат.Организации;
	ПрименятьОтбор    = ДополнительныеПараметры.ОповещениеПриЗавершении = Неопределено;
	
	Если Результат.СохраненыНастройки Тогда
		Форма.ЗаполнитьСписокВыбораОрганизацииПоСохраненнымНастройкам();
	КонецЕсли;
	
	ОбработатьВыборОрганизаций(Форма, СписокОрганизаций, ПрименятьОтбор,
		ДополнительныеПараметры.Префикс, ДополнительныеПараметры.Префиксы);
	
	Если ДополнительныеПараметры.ОповещениеПриЗавершении <> Неопределено Тогда
		ВыполнитьОбработкуОповещения(ДополнительныеПараметры.ОповещениеПриЗавершении, СписокОрганизаций);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОбработатьВыборОрганизаций(Форма, Результат, ПрименятьОтбор, Префикс = Неопределено, Префиксы = Неопределено) Экспорт
	
	ОбщегоНазначенияИСКлиентСервер.НастроитьОтборПоОрганизации(Форма, Результат, Префикс, Префиксы);
	
	Если ПрименятьОтбор Тогда
		ВключаяПустоеЗначение = (Форма.ИмяФормы = "РегистрСведений.ВскрытыеПотребительскиеУпаковкиИС.ФормаСписка");
		ОрганизацияОтборПриИзменении(Форма, ВключаяПустоеЗначение);
	КонецЕсли;
	
КонецПроцедуры

Процедура ОрганизацияОтборПриИзменении(Форма, ВключаяПустоеЗначение)
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "Список") Тогда
		
		Если ВключаяПустоеЗначение Тогда
			ОбщегоНазначенияИСМПКлиентСервер.УстновитьОтборПоОрганизацииИПустомуЗначению(Форма);
		Иначе
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
				Форма.Список,
				"Организация",
				Форма.Организации,
				ВидСравненияКомпоновкиДанных.ВСписке,,
				Форма.Организации.Количество() > 0);
		КонецЕсли;
		
	КонецЕсли;
	
	Если ОбщегоНазначенияКлиентСервер.ЕстьРеквизитИлиСвойствоОбъекта(Форма, "СписокКОформлению") Тогда
		ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбораДинамическогоСписка(
			Форма.СписокКОформлению,
			"Организация",
			Форма.Организации,
			ВидСравненияКомпоновкиДанных.ВСписке,,
			Форма.Организации.Количество() > 0);
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

// Выполняет архивирование документов.
// 
// Параметры:
// 	Результат - КодВозвратаДиалога - Ответ на вопрос архивирования.
// 	ДополнительныеПараметры - Структура - Структура дополнительных параметров.
//
Процедура АрхивироватьДокументы(Результат, ДополнительныеПараметры) Экспорт
	
	Если Результат <> КодВозвратаДиалога.ОК Тогда
		Возврат;
	КонецЕсли;
	
	Изменения = ОбщегоНазначенияИСМПВызовСервера.АрхивироватьДокументы(
		ДополнительныеПараметры.ДокументыКАрхивированию);
	
	Если Изменения <> Неопределено Тогда
		
		ОбменДаннымиИСМПКлиент.ПослеЗавершенияОбмена(
			Изменения, ДополнительныеПараметры);
		
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

